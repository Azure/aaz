<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/accesscontrollists/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvYWNjZXNzQ29udHJvbExpc3RzL3thY2Nlc3NDb250cm9sTGlzdE5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
  <commandGroup name="networkfabric acl">
    <command name="show" version="2024-02-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/accesscontrollists/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvYWNjZXNzQ29udHJvbExpc3RzL3thY2Nlc3NDb250cm9sTGlzdE5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accessControlListName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Access Control List"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AccessControlLists_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}">
          <request method="get">
            <path>
              <param type="string" name="accessControlListName" arg="$Path.accessControlListName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="aclsUrl">
                      <format minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="configurationType" required="True">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="defaultAction">
                      <enum>
                        <item value="&quot;Deny&quot;"/>
                        <item value="&quot;Permit&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastSyncedTime"/>
                    <prop type="array<object>" name="matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="string" name="counterName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Log&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions">
                          <item type="object">
                            <prop type="array<string>" name="dscpMarkings">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="etherTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="fragments">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="ipCondition">
                              <prop type="array<string>" name="ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="ipLengths">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="portCondition">
                              <prop type="array<string>" name="flags">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="ttlValues">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-02-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/accesscontrollists/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvYWNjZXNzQ29udHJvbExpc3RzL3thY2Nlc3NDb250cm9sTGlzdE5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accessControlListName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Access Control List"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AccessControlLists_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}">
          <request method="delete">
            <path>
              <param type="string" name="accessControlListName" arg="$Path.accessControlListName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-02-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/accesscontrollists/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvYWNjZXNzQ29udHJvbExpc3RzL3thY2Nlc3NDb250cm9sTGlzdE5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accessControlListName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Access Control List"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" required="True" group="Body">
          <help short="Location of Azure region"/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.aclsUrl" options="acls-url" group="Properties">
          <help short="Access Control List file URL."/>
          <format minLength="1"/>
        </arg>
        <arg type="string" var="$body.properties.annotation" options="annotation" group="Properties">
          <help short="Description for underlying resource."/>
        </arg>
        <arg type="string" var="$body.properties.configurationType" options="configuration-type" required="True" group="Properties">
          <help short="Input method to configure Access Control List. Example: File."/>
          <enum>
            <item name="File" value="&quot;File&quot;"/>
            <item name="Inline" value="&quot;Inline&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.defaultAction" options="default-action" group="Properties">
          <help short="Default action that needs to be applied when no condition is matched. Example: Permit."/>
          <enum>
            <item name="Deny" value="&quot;Deny&quot;"/>
            <item name="Permit" value="&quot;Permit&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations" options="dynamic-match-configurations" group="Properties">
          <help short="List of dynamic match configurations."/>
          <item type="object">
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].ipGroups" options="ip-groups">
              <help short="List of IP Groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipAddressType" options="ip-address-type" group="">
                  <help short="IP Address type. Example: IPv4."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="IPv4" value="&quot;IPv4&quot;"/>
                    <item name="IPv6" value="&quot;IPv6&quot;"/>
                  </enum>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipPrefixes" options="ip-prefixes">
                  <help short="List of IP Prefixes."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].name" options="name">
                  <help short="IP Group name."/>
                  <format minLength="1"/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].portGroups" options="port-groups">
              <help short="List of the port groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].portGroups[].name" options="name">
                  <help short="The name of the port group."/>
                  <format minLength="1"/>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].portGroups[].ports" options="ports">
                  <help short="List of the ports that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].vlanGroups" options="vlan-groups">
              <help short="List of vlan groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].vlanGroups[].name" options="name">
                  <help short="Vlan group name."/>
                  <format minLength="1"/>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].vlanGroups[].vlans" options="vlans">
                  <help short="List of vlans."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$body.properties.matchConfigurations" options="match-configurations" group="Properties">
          <help short="List of match configurations."/>
          <item type="object">
            <arg type="array<object>" var="$body.properties.matchConfigurations[].actions" options="actions">
              <help short="List of actions that need to be performed for the matched conditions."/>
              <item type="object">
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].counterName" options="counter-name">
                  <help short="Name of the counter block to get match count information."/>
                  <format minLength="1"/>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].type" options="type">
                  <help short="Type of actions that can be performed."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="Count" value="&quot;Count&quot;"/>
                    <item name="Drop" value="&quot;Drop&quot;"/>
                    <item name="Log" value="&quot;Log&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$body.properties.matchConfigurations[].ipAddressType" options="ip-address-type" group="">
              <help short="Type of IP Address. Example: IPv4."/>
              <format minLength="1"/>
              <enum>
                <item name="IPv4" value="&quot;IPv4&quot;"/>
                <item name="IPv6" value="&quot;IPv6&quot;"/>
              </enum>
            </arg>
            <arg type="array<object>" var="$body.properties.matchConfigurations[].matchConditions" options="match-conditions">
              <help short="List of the match conditions."/>
              <item type="object">
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].dscpMarkings" options="dscp-markings">
                  <help short="List of DSCP Markings that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].etherTypes" options="ether-types">
                  <help short="List of ether type values that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].fragments" options="fragments">
                  <help short="List of IP fragment packets that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition" options="ip-condition">
                  <help short="IP condition that needs to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipGroupNames" options="ip-group-names">
                    <help short="The List of IP Group Names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipPrefixValues" options="ip-prefix-values">
                    <help short="The list of IP Prefixes that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.prefixType" options="prefix-type" group="">
                    <help short="IP Prefix Type that needs to be matched. Example: Prefix."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="LongestPrefix" value="&quot;LongestPrefix&quot;"/>
                      <item name="Prefix" value="&quot;Prefix&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.type" options="type" group="">
                    <help short="IP Address type that needs to be matched. Example: SourceIP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="DestinationIP" value="&quot;DestinationIP&quot;"/>
                      <item name="SourceIP" value="&quot;SourceIP&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipLengths" options="ip-lengths">
                  <help short="List of IP Lengths that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].portCondition" options="port-condition">
                  <help short="Defines the port condition that needs to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.flags" options="flags" group="">
                    <help short="List of protocol flags that need to be matched. Example: established | initial | <List-of-TCP-flags>. List of eligible TCP Flags are &quot;ack, fin, not-ack, not-fin, not-psh, not-rst, not-syn, not-urg, psh, rst, syn, urg&quot;"/>
                    <item type="string"/>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.layer4Protocol" options="layer4-protocol" required="True" group="">
                    <help short="Layer4 protocol type that needs to be matched. Example: UDP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="TCP" value="&quot;TCP&quot;"/>
                      <item name="UDP" value="&quot;UDP&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.portGroupNames" options="port-group-names">
                    <help short="List of the port Group Names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.portType" options="port-type" group="">
                    <help short="Port type that needs to be matched. Example: SourceIP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="DestinationPort" value="&quot;DestinationPort&quot;"/>
                      <item name="SourcePort" value="&quot;SourcePort&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.ports" options="ports">
                    <help short="List of the Ports that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].protocolTypes" options="protocol-types">
                  <help short="List of the protocols that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ttlValues" options="ttl-values">
                  <help short="List of TTL [Time To Live] values that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition" options="vlan-match-condition">
                  <help short="Vlan match condition that needs to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.innerVlans" options="inner-vlans">
                    <help short="List of inner vlans that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlanGroupNames" options="vlan-group-names">
                    <help short="List of vlan group names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlans" options="vlans">
                    <help short="List of vlans that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$body.properties.matchConfigurations[].matchConfigurationName" options="match-configuration-name">
              <help short="The name of the match configuration."/>
              <format minLength="1"/>
            </arg>
            <arg type="integer64" var="$body.properties.matchConfigurations[].sequenceNumber" options="sequence-number">
              <help short="Sequence Number of the match configuration."/>
              <format maximum="4294967295" minimum="1"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="AccessControlLists_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}">
          <request method="put">
            <path>
              <param type="string" name="accessControlListName" arg="$Path.accessControlListName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="aclsUrl" arg="$body.properties.aclsUrl">
                      <format minLength="1"/>
                    </prop>
                    <prop type="string" name="annotation" arg="$body.properties.annotation"/>
                    <prop type="string" name="configurationType" arg="$body.properties.configurationType" required="True">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="defaultAction" arg="$body.properties.defaultAction">
                      <enum>
                        <item value="&quot;Deny&quot;"/>
                        <item value="&quot;Permit&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations" arg="$body.properties.dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups" arg="$body.properties.dynamicMatchConfigurations[].ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups" arg="$body.properties.dynamicMatchConfigurations[].portGroups">
                          <item type="object">
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].portGroups[].name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports" arg="$body.properties.dynamicMatchConfigurations[].portGroups[].ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups">
                          <item type="object">
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups[].name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups[].vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="matchConfigurations" arg="$body.properties.matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions" arg="$body.properties.matchConfigurations[].actions">
                          <item type="object">
                            <prop type="string" name="counterName" arg="$body.properties.matchConfigurations[].actions[].counterName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type" arg="$body.properties.matchConfigurations[].actions[].type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Log&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType" arg="$body.properties.matchConfigurations[].ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions" arg="$body.properties.matchConfigurations[].matchConditions">
                          <item type="object">
                            <prop type="array<string>" name="dscpMarkings" arg="$body.properties.matchConfigurations[].matchConditions[].dscpMarkings">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="etherTypes" arg="$body.properties.matchConfigurations[].matchConditions[].etherTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="fragments" arg="$body.properties.matchConfigurations[].matchConditions[].fragments">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="ipCondition" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition">
                              <prop type="array<string>" name="ipGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="ipLengths" arg="$body.properties.matchConfigurations[].matchConditions[].ipLengths">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="portCondition" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition">
                              <prop type="array<string>" name="flags" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.flags">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="layer4Protocol" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes" arg="$body.properties.matchConfigurations[].matchConditions[].protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="ttlValues" arg="$body.properties.matchConfigurations[].matchConditions[].ttlValues">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName" arg="$body.properties.matchConfigurations[].matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber" arg="$body.properties.matchConfigurations[].sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="aclsUrl">
                      <format minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="configurationType" required="True">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="defaultAction">
                      <enum>
                        <item value="&quot;Deny&quot;"/>
                        <item value="&quot;Permit&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastSyncedTime"/>
                    <prop type="array<object>" name="matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="string" name="counterName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Log&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions">
                          <item type="object">
                            <prop type="array<string>" name="dscpMarkings">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="etherTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="fragments">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="ipCondition">
                              <prop type="array<string>" name="ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="ipLengths">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="portCondition">
                              <prop type="array<string>" name="flags">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="ttlValues">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-02-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/accesscontrollists/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvYWNjZXNzQ29udHJvbExpc3RzL3thY2Nlc3NDb250cm9sTGlzdE5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accessControlListName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Access Control List"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.aclsUrl" options="acls-url" group="Properties">
          <help short="Access Control List file URL."/>
          <format minLength="1"/>
        </arg>
        <arg type="string" var="$body.properties.annotation" options="annotation" group="Properties">
          <help short="Description for underlying resource."/>
        </arg>
        <arg type="string" var="$body.properties.configurationType" options="configuration-type" group="Properties">
          <help short="Input method to configure Access Control List. Example: File."/>
          <enum>
            <item name="File" value="&quot;File&quot;"/>
            <item name="Inline" value="&quot;Inline&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.defaultAction" options="default-action" group="Properties">
          <help short="Default action that needs to be applied when no condition is matched. Example: Permit."/>
          <enum>
            <item name="Deny" value="&quot;Deny&quot;"/>
            <item name="Permit" value="&quot;Permit&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations" options="dynamic-match-configurations" group="Properties">
          <help short="List of dynamic match configurations."/>
          <item type="object">
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].ipGroups" options="ip-groups">
              <help short="List of IP Groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipAddressType" options="ip-address-type" group="">
                  <help short="IP Address type. Example: IPv4."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="IPv4" value="&quot;IPv4&quot;"/>
                    <item name="IPv6" value="&quot;IPv6&quot;"/>
                  </enum>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipPrefixes" options="ip-prefixes">
                  <help short="List of IP Prefixes."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].name" options="name">
                  <help short="IP Group name."/>
                  <format minLength="1"/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].portGroups" options="port-groups">
              <help short="List of the port groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].portGroups[].name" options="name">
                  <help short="The name of the port group."/>
                  <format minLength="1"/>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].portGroups[].ports" options="ports">
                  <help short="List of the ports that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].vlanGroups" options="vlan-groups">
              <help short="List of vlan groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].vlanGroups[].name" options="name">
                  <help short="Vlan group name."/>
                  <format minLength="1"/>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].vlanGroups[].vlans" options="vlans">
                  <help short="List of vlans."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$body.properties.matchConfigurations" options="match-configurations" group="Properties">
          <help short="List of match configurations."/>
          <item type="object">
            <arg type="array<object>" var="$body.properties.matchConfigurations[].actions" options="actions">
              <help short="List of actions that need to be performed for the matched conditions."/>
              <item type="object">
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].counterName" options="counter-name">
                  <help short="Name of the counter block to get match count information."/>
                  <format minLength="1"/>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].type" options="type">
                  <help short="Type of actions that can be performed."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="Count" value="&quot;Count&quot;"/>
                    <item name="Drop" value="&quot;Drop&quot;"/>
                    <item name="Log" value="&quot;Log&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$body.properties.matchConfigurations[].ipAddressType" options="ip-address-type" group="">
              <help short="Type of IP Address. Example: IPv4."/>
              <format minLength="1"/>
              <enum>
                <item name="IPv4" value="&quot;IPv4&quot;"/>
                <item name="IPv6" value="&quot;IPv6&quot;"/>
              </enum>
            </arg>
            <arg type="array<object>" var="$body.properties.matchConfigurations[].matchConditions" options="match-conditions">
              <help short="List of the match conditions."/>
              <item type="object">
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].dscpMarkings" options="dscp-markings">
                  <help short="List of DSCP Markings that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].etherTypes" options="ether-types">
                  <help short="List of ether type values that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].fragments" options="fragments">
                  <help short="List of IP fragment packets that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition" options="ip-condition">
                  <help short="IP condition that needs to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipGroupNames" options="ip-group-names">
                    <help short="The List of IP Group Names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipPrefixValues" options="ip-prefix-values">
                    <help short="The list of IP Prefixes that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.prefixType" options="prefix-type" group="">
                    <help short="IP Prefix Type that needs to be matched. Example: Prefix."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="LongestPrefix" value="&quot;LongestPrefix&quot;"/>
                      <item name="Prefix" value="&quot;Prefix&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.type" options="type" group="">
                    <help short="IP Address type that needs to be matched. Example: SourceIP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="DestinationIP" value="&quot;DestinationIP&quot;"/>
                      <item name="SourceIP" value="&quot;SourceIP&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipLengths" options="ip-lengths">
                  <help short="List of IP Lengths that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].portCondition" options="port-condition">
                  <help short="Defines the port condition that needs to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.flags" options="flags" group="">
                    <help short="List of protocol flags that need to be matched. Example: established | initial | <List-of-TCP-flags>. List of eligible TCP Flags are &quot;ack, fin, not-ack, not-fin, not-psh, not-rst, not-syn, not-urg, psh, rst, syn, urg&quot;"/>
                    <item type="string"/>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.layer4Protocol" options="layer4-protocol" required="True" group="">
                    <help short="Layer4 protocol type that needs to be matched. Example: UDP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="TCP" value="&quot;TCP&quot;"/>
                      <item name="UDP" value="&quot;UDP&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.portGroupNames" options="port-group-names">
                    <help short="List of the port Group Names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.portType" options="port-type" group="">
                    <help short="Port type that needs to be matched. Example: SourceIP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="DestinationPort" value="&quot;DestinationPort&quot;"/>
                      <item name="SourcePort" value="&quot;SourcePort&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.ports" options="ports">
                    <help short="List of the Ports that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].protocolTypes" options="protocol-types">
                  <help short="List of the protocols that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ttlValues" options="ttl-values">
                  <help short="List of TTL [Time To Live] values that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition" options="vlan-match-condition">
                  <help short="Vlan match condition that needs to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.innerVlans" options="inner-vlans">
                    <help short="List of inner vlans that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlanGroupNames" options="vlan-group-names">
                    <help short="List of vlan group names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlans" options="vlans">
                    <help short="List of vlans that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$body.properties.matchConfigurations[].matchConfigurationName" options="match-configuration-name">
              <help short="The name of the match configuration."/>
              <format minLength="1"/>
            </arg>
            <arg type="integer64" var="$body.properties.matchConfigurations[].sequenceNumber" options="sequence-number">
              <help short="Sequence Number of the match configuration."/>
              <format maximum="4294967295" minimum="1"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="AccessControlLists_Update">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{accessControlListName}">
          <request method="patch">
            <path>
              <param type="string" name="accessControlListName" arg="$Path.accessControlListName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="aclsUrl" arg="$body.properties.aclsUrl">
                      <format minLength="1"/>
                    </prop>
                    <prop type="string" name="annotation" arg="$body.properties.annotation"/>
                    <prop type="string" name="configurationType" arg="$body.properties.configurationType">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="defaultAction" arg="$body.properties.defaultAction">
                      <enum>
                        <item value="&quot;Deny&quot;"/>
                        <item value="&quot;Permit&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations" arg="$body.properties.dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups" arg="$body.properties.dynamicMatchConfigurations[].ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups" arg="$body.properties.dynamicMatchConfigurations[].portGroups">
                          <item type="object">
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].portGroups[].name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports" arg="$body.properties.dynamicMatchConfigurations[].portGroups[].ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups">
                          <item type="object">
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups[].name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups[].vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="matchConfigurations" arg="$body.properties.matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions" arg="$body.properties.matchConfigurations[].actions">
                          <item type="object">
                            <prop type="string" name="counterName" arg="$body.properties.matchConfigurations[].actions[].counterName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type" arg="$body.properties.matchConfigurations[].actions[].type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Log&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType" arg="$body.properties.matchConfigurations[].ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions" arg="$body.properties.matchConfigurations[].matchConditions">
                          <item type="object">
                            <prop type="array<string>" name="dscpMarkings" arg="$body.properties.matchConfigurations[].matchConditions[].dscpMarkings">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="etherTypes" arg="$body.properties.matchConfigurations[].matchConditions[].etherTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="fragments" arg="$body.properties.matchConfigurations[].matchConditions[].fragments">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="ipCondition" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition">
                              <prop type="array<string>" name="ipGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="ipLengths" arg="$body.properties.matchConfigurations[].matchConditions[].ipLengths">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="portCondition" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition">
                              <prop type="array<string>" name="flags" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.flags">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="layer4Protocol" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes" arg="$body.properties.matchConfigurations[].matchConditions[].protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="ttlValues" arg="$body.properties.matchConfigurations[].matchConditions[].ttlValues">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName" arg="$body.properties.matchConfigurations[].matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber" arg="$body.properties.matchConfigurations[].sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/accessControlLists/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="aclsUrl">
                      <format minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="configurationType" required="True">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="defaultAction">
                      <enum>
                        <item value="&quot;Deny&quot;"/>
                        <item value="&quot;Permit&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastSyncedTime"/>
                    <prop type="array<object>" name="matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="string" name="counterName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Log&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions">
                          <item type="object">
                            <prop type="array<string>" name="dscpMarkings">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="etherTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="fragments">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="ipCondition">
                              <prop type="array<string>" name="ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="ipLengths">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="portCondition">
                              <prop type="array<string>" name="flags">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="array<string>" name="ttlValues">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
