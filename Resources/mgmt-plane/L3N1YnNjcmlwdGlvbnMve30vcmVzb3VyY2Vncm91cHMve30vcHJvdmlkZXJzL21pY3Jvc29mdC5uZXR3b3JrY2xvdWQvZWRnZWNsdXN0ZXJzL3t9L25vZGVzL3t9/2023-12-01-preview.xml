<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/edgeclusters/{}/nodes/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2VkZ2VDbHVzdGVycy97ZWRnZUNsdXN0ZXJOYW1lfS9ub2Rlcy97bm9kZU5hbWV9/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
  <commandGroup name="networkcloud edgecluster node">
    <command name="show" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/edgeclusters/{}/nodes/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2VkZ2VDbHVzdGVycy97ZWRnZUNsdXN0ZXJOYW1lfS9ub2Rlcy97bm9kZU5hbWV9/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.edgeClusterName" options="edge-cluster-name" required="True" idPart="name">
          <help short="The name of the edge cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.nodeName" options="node-name name n" required="True" idPart="child_name_1">
          <help short="The name of the node."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="EdgeClusterNodes_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/edgeClusters/{edgeClusterName}/nodes/{nodeName}">
          <request method="get">
            <path>
              <param type="string" name="edgeClusterName" arg="$Path.edgeClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="nodeName" arg="$Path.nodeName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/edgeClusters/{}/nodes/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="array<ResourceId>" name="infrastructureResourceIds">
                      <item type="ResourceId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="kubernetesVersion"/>
                    <prop readOnly="True" type="string" name="lifecycleStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Joined&quot;"/>
                        <item value="&quot;PlatformReady&quot;"/>
                        <item value="&quot;Registering&quot;"/>
                        <item value="&quot;Unassociated&quot;"/>
                        <item value="&quot;UpdatingRuntime&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="machineSkuId" required="True"/>
                    <prop readOnly="True" type="array<object>" name="networkInterfaces" identifiers="name">
                      <item type="object">
                        <prop readOnly="True" type="string" name="ipv4Address"/>
                        <prop readOnly="True" type="string" name="ipv6Address"/>
                        <prop readOnly="True" type="string" name="macAddress"/>
                        <prop readOnly="True" type="string" name="name"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="nodeMatchingIdentifiers" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;AnyMacAddress&quot;"/>
                            <item value="&quot;ProductSerialNumber&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="registrationHubMachineId"/>
                    <prop readOnly="True" type="ResourceId" name="runtimeVersionId"/>
                    <prop type="array<object>" name="schedulingLabels" identifiers="key">
                      <item type="object">
                        <prop type="string" name="key" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="ResourceId" name="stagedRuntimeVersionId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-12-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/edgeclusters/{}/nodes/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2VkZ2VDbHVzdGVycy97ZWRnZUNsdXN0ZXJOYW1lfS9ub2Rlcy97bm9kZU5hbWV9/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.edgeClusterName" options="edge-cluster-name" required="True" idPart="name">
          <help short="The name of the edge cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.nodeName" options="node-name name n" required="True" idPart="child_name_1">
          <help short="The name of the node."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="EdgeClusterNodes_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/edgeClusters/{edgeClusterName}/nodes/{nodeName}">
          <request method="delete">
            <path>
              <param type="string" name="edgeClusterName" arg="$Path.edgeClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="nodeName" arg="$Path.nodeName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="OperationStatusResult_read">
                  <prop type="dateTime" name="endTime"/>
                  <prop type="object" name="error" cls="ErrorDetail_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                    <prop readOnly="True" type="string" name="target"/>
                  </prop>
                  <prop type="string" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="array<@OperationStatusResult_read>" name="operations">
                    <item type="@OperationStatusResult_read"/>
                  </prop>
                  <prop type="float" name="percentComplete">
                    <format maximum="100.0" minimum="0.0"/>
                  </prop>
                  <prop readOnly="True" type="string" name="resourceId"/>
                  <prop type="dateTime" name="startTime"/>
                  <prop type="string" name="status" required="True"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/edgeclusters/{}/nodes/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2VkZ2VDbHVzdGVycy97ZWRnZUNsdXN0ZXJOYW1lfS9ub2Rlcy97bm9kZU5hbWV9/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.edgeClusterName" options="edge-cluster-name" required="True" idPart="name">
          <help short="The name of the edge cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.nodeName" options="node-name name n" required="True" idPart="child_name_1">
          <help short="The name of the node."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="EdgeClusterNodeParameters">
        <arg type="ResourceLocation" var="$edgeClusterNodeParameters.location" options="location l" required="True" group="EdgeClusterNodeParameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$edgeClusterNodeParameters.tags" options="tags" group="EdgeClusterNodeParameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="ResourceId" var="$edgeClusterNodeParameters.properties.machineSkuId" options="machine-sku-id" required="True" group="Properties">
          <help short="The resource ID of the SKU of the edge cluster node."/>
        </arg>
        <arg type="array<object>" var="$edgeClusterNodeParameters.properties.nodeMatchingIdentifiers" options="node-matching-identifiers" group="Properties">
          <help short="The identifiers used to match the node to a machine in the registration hub."/>
          <item type="object">
            <arg type="string" var="$edgeClusterNodeParameters.properties.nodeMatchingIdentifiers[].name" options="name" required="True">
              <help short="Name is the name of the identifier."/>
              <enum>
                <item name="AnyMacAddress" value="&quot;AnyMacAddress&quot;"/>
                <item name="ProductSerialNumber" value="&quot;ProductSerialNumber&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$edgeClusterNodeParameters.properties.nodeMatchingIdentifiers[].value" options="value" required="True">
              <help short="Value is the value of the identifier."/>
            </arg>
          </item>
        </arg>
        <arg type="ResourceId" var="$edgeClusterNodeParameters.properties.registrationHubMachineId" options="registration-hub-machine-id" group="Properties">
          <help short="The resource ID of the machine in the registration hub that the node is registered against."/>
        </arg>
        <arg type="array<object>" var="$edgeClusterNodeParameters.properties.schedulingLabels" options="scheduling-labels" group="Properties">
          <help short="The labels used to schedule resources on this node."/>
          <item type="object">
            <arg type="string" var="$edgeClusterNodeParameters.properties.schedulingLabels[].key" options="key" required="True">
              <help short="The name of the label or taint."/>
            </arg>
            <arg type="string" var="$edgeClusterNodeParameters.properties.schedulingLabels[].value" options="value" required="True">
              <help short="The value of the label or taint."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="EdgeClusterNodes_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/edgeClusters/{edgeClusterName}/nodes/{nodeName}">
          <request method="put">
            <path>
              <param type="string" name="edgeClusterName" arg="$Path.edgeClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="nodeName" arg="$Path.nodeName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="edgeClusterNodeParameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$edgeClusterNodeParameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="ResourceId" name="machineSkuId" arg="$edgeClusterNodeParameters.properties.machineSkuId" required="True"/>
                    <prop type="array<object>" name="nodeMatchingIdentifiers" arg="$edgeClusterNodeParameters.properties.nodeMatchingIdentifiers" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" arg="$edgeClusterNodeParameters.properties.nodeMatchingIdentifiers[].name" required="True">
                          <enum>
                            <item value="&quot;AnyMacAddress&quot;"/>
                            <item value="&quot;ProductSerialNumber&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value" arg="$edgeClusterNodeParameters.properties.nodeMatchingIdentifiers[].value" required="True"/>
                      </item>
                    </prop>
                    <prop type="ResourceId" name="registrationHubMachineId" arg="$edgeClusterNodeParameters.properties.registrationHubMachineId"/>
                    <prop type="array<object>" name="schedulingLabels" arg="$edgeClusterNodeParameters.properties.schedulingLabels" identifiers="key">
                      <item type="object">
                        <prop type="string" name="key" arg="$edgeClusterNodeParameters.properties.schedulingLabels[].key" required="True"/>
                        <prop type="string" name="value" arg="$edgeClusterNodeParameters.properties.schedulingLabels[].value" required="True"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$edgeClusterNodeParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/edgeClusters/{}/nodes/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="array<ResourceId>" name="infrastructureResourceIds">
                      <item type="ResourceId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="kubernetesVersion"/>
                    <prop readOnly="True" type="string" name="lifecycleStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Joined&quot;"/>
                        <item value="&quot;PlatformReady&quot;"/>
                        <item value="&quot;Registering&quot;"/>
                        <item value="&quot;Unassociated&quot;"/>
                        <item value="&quot;UpdatingRuntime&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="machineSkuId" required="True"/>
                    <prop readOnly="True" type="array<object>" name="networkInterfaces" identifiers="name">
                      <item type="object">
                        <prop readOnly="True" type="string" name="ipv4Address"/>
                        <prop readOnly="True" type="string" name="ipv6Address"/>
                        <prop readOnly="True" type="string" name="macAddress"/>
                        <prop readOnly="True" type="string" name="name"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="nodeMatchingIdentifiers" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;AnyMacAddress&quot;"/>
                            <item value="&quot;ProductSerialNumber&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="registrationHubMachineId"/>
                    <prop readOnly="True" type="ResourceId" name="runtimeVersionId"/>
                    <prop type="array<object>" name="schedulingLabels" identifiers="key">
                      <item type="object">
                        <prop type="string" name="key" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="ResourceId" name="stagedRuntimeVersionId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/edgeclusters/{}/nodes/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2VkZ2VDbHVzdGVycy97ZWRnZUNsdXN0ZXJOYW1lfS9ub2Rlcy97bm9kZU5hbWV9/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.edgeClusterName" options="edge-cluster-name" required="True" idPart="name">
          <help short="The name of the edge cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.nodeName" options="node-name name n" required="True" idPart="child_name_1">
          <help short="The name of the node."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="EdgeClusterNodeUpdateParameters">
        <arg type="object" var="$edgeClusterNodeUpdateParameters.tags" options="tags" group="EdgeClusterNodeUpdateParameters">
          <help short="The Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="ResourceId" var="$edgeClusterNodeUpdateParameters.properties.machineSkuId" options="machine-sku-id" group="Properties">
          <help short="The resource ID of the SKU of the edge cluster node."/>
        </arg>
        <arg type="array<object>" var="$edgeClusterNodeUpdateParameters.properties.nodeMatchingIdentifiers" options="node-matching-identifiers" group="Properties">
          <help short="The identifiers used to match the node to a machine in the registration hub."/>
          <item type="object">
            <arg type="string" var="$edgeClusterNodeUpdateParameters.properties.nodeMatchingIdentifiers[].name" options="name" required="True">
              <help short="Name is the name of the identifier."/>
              <enum>
                <item name="AnyMacAddress" value="&quot;AnyMacAddress&quot;"/>
                <item name="ProductSerialNumber" value="&quot;ProductSerialNumber&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$edgeClusterNodeUpdateParameters.properties.nodeMatchingIdentifiers[].value" options="value" required="True">
              <help short="Value is the value of the identifier."/>
            </arg>
          </item>
        </arg>
        <arg type="ResourceId" var="$edgeClusterNodeUpdateParameters.properties.registrationHubMachineId" options="registration-hub-machine-id" group="Properties">
          <help short="The resource ID of the machine in the registration hub that the node is registered against."/>
        </arg>
      </argGroup>
      <operation operationId="EdgeClusterNodes_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/edgeClusters/{edgeClusterName}/nodes/{nodeName}">
          <request method="patch">
            <path>
              <param type="string" name="edgeClusterName" arg="$Path.edgeClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="nodeName" arg="$Path.nodeName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="edgeClusterNodeUpdateParameters" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="ResourceId" name="machineSkuId" arg="$edgeClusterNodeUpdateParameters.properties.machineSkuId"/>
                    <prop type="array<object>" name="nodeMatchingIdentifiers" arg="$edgeClusterNodeUpdateParameters.properties.nodeMatchingIdentifiers" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" arg="$edgeClusterNodeUpdateParameters.properties.nodeMatchingIdentifiers[].name" required="True">
                          <enum>
                            <item value="&quot;AnyMacAddress&quot;"/>
                            <item value="&quot;ProductSerialNumber&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value" arg="$edgeClusterNodeUpdateParameters.properties.nodeMatchingIdentifiers[].value" required="True"/>
                      </item>
                    </prop>
                    <prop type="ResourceId" name="registrationHubMachineId" arg="$edgeClusterNodeUpdateParameters.properties.registrationHubMachineId"/>
                  </prop>
                  <prop type="object" name="tags" arg="$edgeClusterNodeUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="EdgeClusterNode_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/edgeClusters/{}/nodes/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="array<ResourceId>" name="infrastructureResourceIds">
                      <item type="ResourceId"/>
                    </prop>
                    <prop readOnly="True" type="string" name="kubernetesVersion"/>
                    <prop readOnly="True" type="string" name="lifecycleStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Joined&quot;"/>
                        <item value="&quot;PlatformReady&quot;"/>
                        <item value="&quot;Registering&quot;"/>
                        <item value="&quot;Unassociated&quot;"/>
                        <item value="&quot;UpdatingRuntime&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="machineSkuId" required="True"/>
                    <prop readOnly="True" type="array<object>" name="networkInterfaces" identifiers="name">
                      <item type="object">
                        <prop readOnly="True" type="string" name="ipv4Address"/>
                        <prop readOnly="True" type="string" name="ipv6Address"/>
                        <prop readOnly="True" type="string" name="macAddress"/>
                        <prop readOnly="True" type="string" name="name"/>
                      </item>
                    </prop>
                    <prop type="array<object>" name="nodeMatchingIdentifiers" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" required="True">
                          <enum>
                            <item value="&quot;AnyMacAddress&quot;"/>
                            <item value="&quot;ProductSerialNumber&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="registrationHubMachineId"/>
                    <prop readOnly="True" type="ResourceId" name="runtimeVersionId"/>
                    <prop type="array<object>" name="schedulingLabels" identifiers="key">
                      <item type="object">
                        <prop type="string" name="key" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="ResourceId" name="stagedRuntimeVersionId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@EdgeClusterNode_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
