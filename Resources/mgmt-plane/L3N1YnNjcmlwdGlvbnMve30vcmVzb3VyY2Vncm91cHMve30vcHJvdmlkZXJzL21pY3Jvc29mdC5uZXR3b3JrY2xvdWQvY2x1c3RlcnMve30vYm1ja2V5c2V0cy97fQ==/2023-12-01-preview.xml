<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/clusters/{}/bmckeysets/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vYm1jS2V5U2V0cy97Ym1jS2V5U2V0TmFtZX0=/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
  <commandGroup name="networkcloud cluster bmckeyset">
    <command name="show" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/clusters/{}/bmckeysets/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vYm1jS2V5U2V0cy97Ym1jS2V5U2V0TmFtZX0=/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.bmcKeySetName" options="bmc-key-set-name name n" required="True" idPart="child_name_1">
          <help short="The name of the baseboard management controller key set."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="BmcKeySets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/bmcKeySets/{bmcKeySetName}">
          <request method="get">
            <path>
              <param type="string" name="bmcKeySetName" arg="$Path.bmcKeySetName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/clusters/{}/bmcKeySets/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="azureGroupId" required="True"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;AllActive&quot;"/>
                        <item value="&quot;AllInvalid&quot;"/>
                        <item value="&quot;SomeInvalid&quot;"/>
                        <item value="&quot;Validating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="dateTime" name="expiration" required="True"/>
                    <prop readOnly="True" type="dateTime" name="lastValidation"/>
                    <prop type="string" name="privilegeLevel" required="True">
                      <enum>
                        <item value="&quot;Administrator&quot;"/>
                        <item value="&quot;ReadOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="userList" required="True" identifiers="azureUserName">
                      <item type="object">
                        <prop type="string" name="azureUserName" required="True"/>
                        <prop type="string" name="description">
                          <format maxLength="256"/>
                        </prop>
                        <prop type="object" name="sshPublicKey" required="True">
                          <prop type="string" name="keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="userPrincipalName"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="userListStatus" identifiers="azureUserName">
                      <item type="object">
                        <prop readOnly="True" type="string" name="azureUserName"/>
                        <prop readOnly="True" type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Invalid&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="statusMessage">
                          <format maxLength="256"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-12-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/clusters/{}/bmckeysets/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vYm1jS2V5U2V0cy97Ym1jS2V5U2V0TmFtZX0=/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.bmcKeySetName" options="bmc-key-set-name name n" required="True" idPart="child_name_1">
          <help short="The name of the baseboard management controller key set."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="BmcKeySets_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/bmcKeySets/{bmcKeySetName}">
          <request method="delete">
            <path>
              <param type="string" name="bmcKeySetName" arg="$Path.bmcKeySetName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="OperationStatusResult_read">
                  <prop type="dateTime" name="endTime"/>
                  <prop type="object" name="error" cls="ErrorDetail_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                    <prop readOnly="True" type="string" name="target"/>
                  </prop>
                  <prop type="string" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="array<@OperationStatusResult_read>" name="operations">
                    <item type="@OperationStatusResult_read"/>
                  </prop>
                  <prop type="float" name="percentComplete">
                    <format maximum="100.0" minimum="0.0"/>
                  </prop>
                  <prop readOnly="True" type="string" name="resourceId"/>
                  <prop type="dateTime" name="startTime"/>
                  <prop type="string" name="status" required="True"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/clusters/{}/bmckeysets/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vYm1jS2V5U2V0cy97Ym1jS2V5U2V0TmFtZX0=/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.bmcKeySetName" options="bmc-key-set-name name n" required="True" idPart="child_name_1">
          <help short="The name of the baseboard management controller key set."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="BmcKeySetParameters">
        <arg type="object" var="$bmcKeySetParameters.extendedLocation" options="extended-location" required="True" group="BmcKeySetParameters">
          <help short="The extended location of the cluster associated with the resource."/>
          <arg type="string" var="$bmcKeySetParameters.extendedLocation.name" options="name" required="True">
            <help short="The resource ID of the extended location on which the resource will be created."/>
          </arg>
          <arg type="string" var="$bmcKeySetParameters.extendedLocation.type" options="type" required="True">
            <help short="The extended location type, for example, CustomLocation."/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$bmcKeySetParameters.location" options="location l" required="True" group="BmcKeySetParameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$bmcKeySetParameters.tags" options="tags" group="BmcKeySetParameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$bmcKeySetParameters.properties.azureGroupId" options="azure-group-id" required="True" group="Properties">
          <help short="The object ID of Azure Active Directory group that all users in the list must be in for access to be granted. Users that are not in the group will not have access."/>
        </arg>
        <arg type="dateTime" var="$bmcKeySetParameters.properties.expiration" options="expiration" required="True" group="Properties">
          <help short="The date and time after which the users in this key set will be removed from the baseboard management controllers."/>
        </arg>
        <arg type="string" var="$bmcKeySetParameters.properties.privilegeLevel" options="privilege-level" required="True" group="Properties">
          <help short="The access level allowed for the users in this key set."/>
          <enum>
            <item name="Administrator" value="&quot;Administrator&quot;"/>
            <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$bmcKeySetParameters.properties.userList" options="user-list" required="True" group="Properties">
          <help short="The unique list of permitted users."/>
          <item type="object">
            <arg type="string" var="$bmcKeySetParameters.properties.userList[].azureUserName" options="azure-user-name" required="True" group="">
              <help short="The user name that will be used for access."/>
            </arg>
            <arg type="string" var="$bmcKeySetParameters.properties.userList[].description" options="description">
              <help short="The free-form description for this user."/>
              <format maxLength="256"/>
            </arg>
            <arg type="object" var="$bmcKeySetParameters.properties.userList[].sshPublicKey" options="ssh-public-key" required="True">
              <help short="The SSH public key for this user."/>
              <arg type="string" var="$bmcKeySetParameters.properties.userList[].sshPublicKey.keyData" options="key-data" required="True">
                <help short="The public ssh key of the user."/>
                <format minLength="1"/>
              </arg>
            </arg>
            <arg type="string" var="$bmcKeySetParameters.properties.userList[].userPrincipalName" options="user-principal-name">
              <help short="The user principal name (email format) used to validate this user's group membership."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="BmcKeySets_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/bmcKeySets/{bmcKeySetName}">
          <request method="put">
            <path>
              <param type="string" name="bmcKeySetName" arg="$Path.bmcKeySetName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="bmcKeySetParameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$bmcKeySetParameters.extendedLocation" required="True">
                    <prop type="string" name="name" arg="$bmcKeySetParameters.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$bmcKeySetParameters.extendedLocation.type" required="True"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$bmcKeySetParameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="azureGroupId" arg="$bmcKeySetParameters.properties.azureGroupId" required="True"/>
                    <prop type="dateTime" name="expiration" arg="$bmcKeySetParameters.properties.expiration" required="True"/>
                    <prop type="string" name="privilegeLevel" arg="$bmcKeySetParameters.properties.privilegeLevel" required="True">
                      <enum>
                        <item value="&quot;Administrator&quot;"/>
                        <item value="&quot;ReadOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="userList" arg="$bmcKeySetParameters.properties.userList" required="True" identifiers="azureUserName">
                      <item type="object">
                        <prop type="string" name="azureUserName" arg="$bmcKeySetParameters.properties.userList[].azureUserName" required="True"/>
                        <prop type="string" name="description" arg="$bmcKeySetParameters.properties.userList[].description">
                          <format maxLength="256"/>
                        </prop>
                        <prop type="object" name="sshPublicKey" arg="$bmcKeySetParameters.properties.userList[].sshPublicKey" required="True">
                          <prop type="string" name="keyData" arg="$bmcKeySetParameters.properties.userList[].sshPublicKey.keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="userPrincipalName" arg="$bmcKeySetParameters.properties.userList[].userPrincipalName"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$bmcKeySetParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/clusters/{}/bmcKeySets/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="azureGroupId" required="True"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;AllActive&quot;"/>
                        <item value="&quot;AllInvalid&quot;"/>
                        <item value="&quot;SomeInvalid&quot;"/>
                        <item value="&quot;Validating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="dateTime" name="expiration" required="True"/>
                    <prop readOnly="True" type="dateTime" name="lastValidation"/>
                    <prop type="string" name="privilegeLevel" required="True">
                      <enum>
                        <item value="&quot;Administrator&quot;"/>
                        <item value="&quot;ReadOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="userList" required="True" identifiers="azureUserName">
                      <item type="object">
                        <prop type="string" name="azureUserName" required="True"/>
                        <prop type="string" name="description">
                          <format maxLength="256"/>
                        </prop>
                        <prop type="object" name="sshPublicKey" required="True">
                          <prop type="string" name="keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="userPrincipalName"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="userListStatus" identifiers="azureUserName">
                      <item type="object">
                        <prop readOnly="True" type="string" name="azureUserName"/>
                        <prop readOnly="True" type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Invalid&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="statusMessage">
                          <format maxLength="256"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-12-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/clusters/{}/bmckeysets/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vYm1jS2V5U2V0cy97Ym1jS2V5U2V0TmFtZX0=/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.bmcKeySetName" options="bmc-key-set-name name n" required="True" idPart="child_name_1">
          <help short="The name of the baseboard management controller key set."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="BmcKeySetUpdateParameters">
        <arg type="object" var="$bmcKeySetUpdateParameters.tags" options="tags" group="BmcKeySetUpdateParameters">
          <help short="The Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="dateTime" var="$bmcKeySetUpdateParameters.properties.expiration" options="expiration" group="Properties">
          <help short="The date and time after which the users in this key set will be removed from the baseboard management controllers."/>
        </arg>
        <arg type="array<object>" var="$bmcKeySetUpdateParameters.properties.userList" options="user-list" group="Properties">
          <help short="The unique list of permitted users."/>
          <item type="object">
            <arg type="string" var="$bmcKeySetUpdateParameters.properties.userList[].azureUserName" options="azure-user-name" required="True" group="">
              <help short="The user name that will be used for access."/>
            </arg>
            <arg type="string" var="$bmcKeySetUpdateParameters.properties.userList[].description" options="description">
              <help short="The free-form description for this user."/>
              <format maxLength="256"/>
            </arg>
            <arg type="object" var="$bmcKeySetUpdateParameters.properties.userList[].sshPublicKey" options="ssh-public-key" required="True">
              <help short="The SSH public key for this user."/>
              <arg type="string" var="$bmcKeySetUpdateParameters.properties.userList[].sshPublicKey.keyData" options="key-data" required="True">
                <help short="The public ssh key of the user."/>
                <format minLength="1"/>
              </arg>
            </arg>
            <arg type="string" var="$bmcKeySetUpdateParameters.properties.userList[].userPrincipalName" options="user-principal-name">
              <help short="The user principal name (email format) used to validate this user's group membership."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="BmcKeySets_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/bmcKeySets/{bmcKeySetName}">
          <request method="patch">
            <path>
              <param type="string" name="bmcKeySetName" arg="$Path.bmcKeySetName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="bmcKeySetUpdateParameters" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="dateTime" name="expiration" arg="$bmcKeySetUpdateParameters.properties.expiration"/>
                    <prop type="array<object>" name="userList" arg="$bmcKeySetUpdateParameters.properties.userList" identifiers="azureUserName">
                      <item type="object">
                        <prop type="string" name="azureUserName" arg="$bmcKeySetUpdateParameters.properties.userList[].azureUserName" required="True"/>
                        <prop type="string" name="description" arg="$bmcKeySetUpdateParameters.properties.userList[].description">
                          <format maxLength="256"/>
                        </prop>
                        <prop type="object" name="sshPublicKey" arg="$bmcKeySetUpdateParameters.properties.userList[].sshPublicKey" required="True">
                          <prop type="string" name="keyData" arg="$bmcKeySetUpdateParameters.properties.userList[].sshPublicKey.keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="userPrincipalName" arg="$bmcKeySetUpdateParameters.properties.userList[].userPrincipalName"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$bmcKeySetUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="BmcKeySet_read">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/clusters/{}/bmcKeySets/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="azureGroupId" required="True"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;AllActive&quot;"/>
                        <item value="&quot;AllInvalid&quot;"/>
                        <item value="&quot;SomeInvalid&quot;"/>
                        <item value="&quot;Validating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="dateTime" name="expiration" required="True"/>
                    <prop readOnly="True" type="dateTime" name="lastValidation"/>
                    <prop type="string" name="privilegeLevel" required="True">
                      <enum>
                        <item value="&quot;Administrator&quot;"/>
                        <item value="&quot;ReadOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="userList" required="True" identifiers="azureUserName">
                      <item type="object">
                        <prop type="string" name="azureUserName" required="True"/>
                        <prop type="string" name="description">
                          <format maxLength="256"/>
                        </prop>
                        <prop type="object" name="sshPublicKey" required="True">
                          <prop type="string" name="keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="userPrincipalName"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="userListStatus" identifiers="azureUserName">
                      <item type="object">
                        <prop readOnly="True" type="string" name="azureUserName"/>
                        <prop readOnly="True" type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Invalid&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="statusMessage">
                          <format maxLength="256"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@BmcKeySet_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
