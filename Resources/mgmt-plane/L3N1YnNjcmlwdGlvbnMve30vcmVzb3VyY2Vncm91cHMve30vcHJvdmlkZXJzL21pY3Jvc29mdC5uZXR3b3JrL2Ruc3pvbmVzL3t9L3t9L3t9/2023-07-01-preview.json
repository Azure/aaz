{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnszones/{}/{}/{}", "version": "2023-07-01-preview", "swagger": "mgmt-plane/dns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNab25lcy97em9uZU5hbWV9L3tyZWNvcmRUeXBlfS97cmVsYXRpdmVSZWNvcmRTZXROYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "network dns record-set", "commands": [{"name": "show", "version": "2023-07-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnszones/{}/{}/{}", "version": "2023-07-01-preview", "swagger": "mgmt-plane/dns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNab25lcy97em9uZU5hbWV9L3tyZWNvcmRUeXBlfS97cmVsYXRpdmVSZWNvcmRTZXROYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.recordType", "options": ["record-type"], "required": true, "idPart": "child_type_1", "help": {"short": "The type of DNS record in this record set."}, "enum": {"items": [{"name": "A", "value": "A"}, {"name": "AAAA", "value": "AAAA"}, {"name": "CAA", "value": "CAA"}, {"name": "CNAME", "value": "CNAME"}, {"name": "DS", "value": "DS"}, {"name": "MX", "value": "MX"}, {"name": "NAPTR", "value": "NAPTR"}, {"name": "NS", "value": "NS"}, {"name": "PTR", "value": "PTR"}, {"name": "SOA", "value": "SOA"}, {"name": "SRV", "value": "SRV"}, {"name": "TLSA", "value": "TLSA"}, {"name": "TXT", "value": "TXT"}]}}, {"type": "string", "var": "$Path.relativeRecordSetName", "options": ["n", "name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the record set, relative to the name of the zone."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.zoneName", "options": ["z", "zone-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the DNS zone."}}]}], "operations": [{"operationId": "RecordSets_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "recordType", "arg": "$Path.recordType", "required": true, "enum": {"items": [{"value": "A"}, {"value": "AAAA"}, {"value": "CAA"}, {"value": "CNAME"}, {"value": "DS"}, {"value": "MX"}, {"value": "NAPTR"}, {"value": "NS"}, {"value": "PTR"}, {"value": "SOA"}, {"value": "SRV"}, {"value": "TLSA"}, {"value": "TXT"}]}}, {"type": "string", "name": "relativeRecordSetName", "arg": "$Path.relativeRecordSetName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "zoneName", "arg": "$Path.zoneName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-07-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/dnsZones/{}/{}/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "AAAARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv6Address"}]}}, {"type": "array<object>", "name": "ARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv4Address"}]}}, {"type": "object", "name": "CNAMERecord", "props": [{"type": "string", "name": "cname"}]}, {"type": "array<object>", "name": "DSRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "algorithm"}, {"type": "object", "name": "digest", "props": [{"type": "integer32", "name": "algorithmType"}, {"type": "string", "name": "value"}]}, {"type": "integer32", "name": "keyTag"}]}}, {"type": "array<object>", "name": "MXRecords", "item": {"type": "object", "props": [{"type": "string", "name": "exchange"}, {"type": "integer32", "name": "preference"}]}}, {"type": "array<object>", "name": "NAPTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "flags"}, {"type": "integer32", "name": "order"}, {"type": "integer32", "name": "preference"}, {"type": "string", "name": "regexp"}, {"type": "string", "name": "replacement"}, {"type": "string", "name": "services"}]}}, {"type": "array<object>", "name": "NSRecords", "item": {"type": "object", "props": [{"type": "string", "name": "nsdname"}]}}, {"type": "array<object>", "name": "PTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "ptrdname"}]}}, {"type": "object", "name": "SOARecord", "props": [{"type": "string", "name": "email"}, {"type": "integer64", "name": "expireTime"}, {"type": "string", "name": "host"}, {"type": "integer64", "name": "minimumTTL"}, {"type": "integer64", "name": "refreshTime"}, {"type": "integer64", "name": "retryTime"}, {"type": "integer64", "name": "serialNumber"}]}, {"type": "array<object>", "name": "SRVRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "port"}, {"type": "integer32", "name": "priority"}, {"type": "string", "name": "target"}, {"type": "integer32", "name": "weight"}]}}, {"type": "array<object>", "name": "TLSARecords", "item": {"type": "object", "props": [{"type": "string", "name": "certAssociationData"}, {"type": "integer32", "name": "matchingType"}, {"type": "integer32", "name": "selector"}, {"type": "integer32", "name": "usage"}]}}, {"type": "integer64", "name": "TTL"}, {"type": "array<object>", "name": "TXTRecords", "item": {"type": "object", "props": [{"type": "array<string>", "name": "value", "item": {"type": "string"}}]}}, {"type": "array<object>", "name": "caaRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "flags"}, {"type": "string", "name": "tag"}, {"type": "string", "name": "value"}]}}, {"readOnly": true, "type": "string", "name": "fqdn"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "object", "name": "targetResource", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}, {"type": "@SubResource_read", "name": "trafficManagementProfile"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2023-07-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnszones/{}/{}/{}", "version": "2023-07-01-preview", "swagger": "mgmt-plane/dns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNab25lcy97em9uZU5hbWV9L3tyZWNvcmRUeXBlfS97cmVsYXRpdmVSZWNvcmRTZXROYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.If-Match", "options": ["if-match"], "group": "", "help": {"short": "Etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes."}}, {"type": "string", "var": "$Path.recordType", "options": ["record-type"], "required": true, "idPart": "child_type_1", "help": {"short": "The type of DNS record in this record set. Record sets of type SOA cannot be deleted (they are deleted when the DNS zone is deleted)."}, "enum": {"items": [{"name": "A", "value": "A"}, {"name": "AAAA", "value": "AAAA"}, {"name": "CAA", "value": "CAA"}, {"name": "CNAME", "value": "CNAME"}, {"name": "DS", "value": "DS"}, {"name": "MX", "value": "MX"}, {"name": "NAPTR", "value": "NAPTR"}, {"name": "NS", "value": "NS"}, {"name": "PTR", "value": "PTR"}, {"name": "SOA", "value": "SOA"}, {"name": "SRV", "value": "SRV"}, {"name": "TLSA", "value": "TLSA"}, {"name": "TXT", "value": "TXT"}]}}, {"type": "string", "var": "$Path.relativeRecordSetName", "options": ["n", "name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the record set, relative to the name of the zone."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.zoneName", "options": ["z", "zone-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the DNS zone."}}]}], "operations": [{"operationId": "RecordSets_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "recordType", "arg": "$Path.recordType", "required": true, "enum": {"items": [{"value": "A"}, {"value": "AAAA"}, {"value": "CAA"}, {"value": "CNAME"}, {"value": "DS"}, {"value": "MX"}, {"value": "NAPTR"}, {"value": "NS"}, {"value": "PTR"}, {"value": "SOA"}, {"value": "SRV"}, {"value": "TLSA"}, {"value": "TXT"}]}}, {"type": "string", "name": "relativeRecordSetName", "arg": "$Path.relativeRecordSetName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "zoneName", "arg": "$Path.zoneName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-07-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "header": {"params": [{"type": "string", "name": "If-Match", "arg": "$Header.If-Match"}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-07-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnszones/{}/{}/{}", "version": "2023-07-01-preview", "swagger": "mgmt-plane/dns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNab25lcy97em9uZU5hbWV9L3tyZWNvcmRUeXBlfS97cmVsYXRpdmVSZWNvcmRTZXROYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.If-Match", "options": ["if-match"], "help": {"short": "The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes."}}, {"type": "string", "var": "$Header.If-None-Match", "options": ["if-none-match"], "help": {"short": "Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored."}}, {"type": "string", "var": "$Path.recordType", "options": ["record-type"], "required": true, "idPart": "child_type_1", "help": {"short": "The type of DNS record in this record set. Record sets of type SOA can be updated but not created (they are created when the DNS zone is created)."}, "enum": {"items": [{"name": "A", "value": "A"}, {"name": "AAAA", "value": "AAAA"}, {"name": "CAA", "value": "CAA"}, {"name": "CNAME", "value": "CNAME"}, {"name": "DS", "value": "DS"}, {"name": "MX", "value": "MX"}, {"name": "NAPTR", "value": "NAPTR"}, {"name": "NS", "value": "NS"}, {"name": "PTR", "value": "PTR"}, {"name": "SOA", "value": "SOA"}, {"name": "SRV", "value": "SRV"}, {"name": "TLSA", "value": "TLSA"}, {"name": "TXT", "value": "TXT"}]}}, {"type": "string", "var": "$Path.relativeRecordSetName", "options": ["n", "name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The name of the record set, relative to the name of the zone."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.zoneName", "options": ["z", "zone-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the DNS zone (without a terminating dot)."}}, {"type": "string", "var": "$parameters.properties.targetResource.id", "options": ["target-resource"], "group": "", "help": {"short": "ID of an Azure resource from which the DNS resource value is taken."}}, {"type": "string", "var": "$parameters.properties.trafficManagementProfile.id", "options": ["tm-profile", "traffic-management-profile"], "stage": "Experimental", "group": "", "help": {"short": "A reference to an Azure Traffic Manager Profile resource from where the DNS resource value is taken."}}]}, {"name": "Parameters", "args": [{"type": "string", "var": "$parameters.etag", "options": ["etag"], "hide": true, "group": "Parameters", "help": {"short": "The etag of the record set."}}]}, {"name": "Properties", "args": [{"type": "array<object>", "var": "$parameters.properties.AAAARecords", "options": ["aaaa-records"], "group": "Properties", "help": {"short": "The list of AAAA records in the record set."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.AAAARecords[].ipv6Address", "options": ["ipv6-address"], "help": {"short": "The IPv6 address of this AAAA record."}}]}}, {"type": "array<object>", "var": "$parameters.properties.ARecords", "options": ["a-records"], "group": "Properties", "help": {"short": "The list of A records in the record set."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.ARecords[].ipv4Address", "options": ["ipv4-address"], "help": {"short": "The IPv4 address of this A record."}}]}}, {"type": "object", "var": "$parameters.properties.CNAMERecord", "options": ["cname-record"], "group": "Properties", "help": {"short": "The CNAME record in the  record set."}, "args": [{"type": "string", "var": "$parameters.properties.CNAMERecord.cname", "options": ["cname"], "help": {"short": "The canonical name for this CNAME record."}}]}, {"type": "array<object>", "var": "$parameters.properties.DSRecords", "options": ["ds-records"], "stage": "Experimental", "group": "Properties", "help": {"short": "The list of DS records in the record set."}, "item": {"type": "object", "args": [{"type": "integer32", "var": "$parameters.properties.DSRecords[].algorithm", "options": ["algorithm"], "help": {"short": "The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml"}}, {"type": "object", "var": "$parameters.properties.DSRecords[].digest", "options": ["digest"], "help": {"short": "The digest entity."}, "args": [{"type": "integer32", "var": "$parameters.properties.DSRecords[].digest.algorithmType", "options": ["algorithm-type"], "help": {"short": "The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml"}}, {"type": "string", "var": "$parameters.properties.DSRecords[].digest.value", "options": ["value"], "help": {"short": "The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record."}}]}, {"type": "integer32", "var": "$parameters.properties.DSRecords[].keyTag", "options": ["key-tag"], "help": {"short": "The key tag value is used to determine which DNSKEY Resource Record is used for signature verification."}}]}}, {"type": "array<object>", "var": "$parameters.properties.MXRecords", "options": ["mx-records"], "group": "Properties", "help": {"short": "The list of MX records in the record set."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.MXRecords[].exchange", "options": ["exchange"], "help": {"short": "The domain name of the mail host for this MX record."}}, {"type": "integer32", "var": "$parameters.properties.MXRecords[].preference", "options": ["preference"], "help": {"short": "The preference value for this MX record."}}]}}, {"type": "array<object>", "var": "$parameters.properties.NAPTRRecords", "options": ["naptr-records"], "stage": "Experimental", "group": "Properties", "help": {"short": "The list of NAPTR records in the record set."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.NAPTRRecords[].flags", "options": ["flags"], "help": {"short": "The flags specific to DDDS applications. Values currently defined in RFC 3404 are uppercase and lowercase letters \"A\", \"P\", \"S\", and \"U\", and the empty string, \"\". Enclose Flags in quotation marks."}}, {"type": "integer32", "var": "$parameters.properties.NAPTRRecords[].order", "options": ["order"], "help": {"short": "The order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of rules. The ordering is from lowest to highest. Valid values: 0-65535."}}, {"type": "integer32", "var": "$parameters.properties.NAPTRRecords[].preference", "options": ["preference"], "help": {"short": "The preference specifies the order in which NAPTR records with equal 'order' values should be processed, low numbers being processed before high numbers. Valid values: 0-65535."}}, {"type": "string", "var": "$parameters.properties.NAPTRRecords[].regexp", "options": ["regexp"], "help": {"short": "The regular expression that the DDDS application uses to convert an input value into an output value. For example: an IP phone system might use a regular expression to convert a phone number that is entered by a user into a SIP URI. Enclose the regular expression in quotation marks. Specify either a value for 'regexp' or a value for 'replacement'."}}, {"type": "string", "var": "$parameters.properties.NAPTRRecords[].replacement", "options": ["replacement"], "help": {"short": "The replacement is a fully qualified domain name (FQDN) of the next domain name that you want the DDDS application to submit a DNS query for. The DDDS application replaces the input value with the value specified for replacement. Specify either a value for 'regexp' or a value for 'replacement'. If you specify a value for 'regexp', specify a dot (.) for 'replacement'."}}, {"type": "string", "var": "$parameters.properties.NAPTRRecords[].services", "options": ["services"], "help": {"short": "The services specific to DDDS applications. Enclose Services in quotation marks."}}]}}, {"type": "array<object>", "var": "$parameters.properties.NSRecords", "options": ["ns-records"], "group": "Properties", "help": {"short": "The list of NS records in the record set."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.NSRecords[].nsdname", "options": ["nsdname"], "help": {"short": "The name server name for this NS record."}}]}}, {"type": "array<object>", "var": "$parameters.properties.PTRRecords", "options": ["ptr-records"], "group": "Properties", "help": {"short": "The list of PTR records in the record set."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.PTRRecords[].ptrdname", "options": ["ptrdname"], "help": {"short": "The PTR target domain name for this PTR record."}}]}}, {"type": "object", "var": "$parameters.properties.SOARecord", "options": ["soa-record"], "group": "Properties", "help": {"short": "The SOA record in the record set."}, "args": [{"type": "string", "var": "$parameters.properties.SOARecord.email", "options": ["email"], "help": {"short": "The email contact for this SOA record."}}, {"type": "integer64", "var": "$parameters.properties.SOARecord.expireTime", "options": ["expire-time"], "help": {"short": "The expire time for this SOA record."}}, {"type": "string", "var": "$parameters.properties.SOARecord.host", "options": ["host"], "help": {"short": "The domain name of the authoritative name server for this SOA record."}}, {"type": "integer64", "var": "$parameters.properties.SOARecord.minimumTTL", "options": ["minimum-ttl"], "help": {"short": "The minimum value for this SOA record. By convention this is used to determine the negative caching duration."}}, {"type": "integer64", "var": "$parameters.properties.SOARecord.refreshTime", "options": ["refresh-time"], "help": {"short": "The refresh value for this SOA record."}}, {"type": "integer64", "var": "$parameters.properties.SOARecord.retryTime", "options": ["retry-time"], "help": {"short": "The retry time for this SOA record."}}, {"type": "integer64", "var": "$parameters.properties.SOARecord.serialNumber", "options": ["serial-number"], "help": {"short": "The serial number for this SOA record."}}]}, {"type": "array<object>", "var": "$parameters.properties.SRVRecords", "options": ["srv-records"], "group": "Properties", "help": {"short": "The list of SRV records in the record set."}, "item": {"type": "object", "args": [{"type": "integer32", "var": "$parameters.properties.SRVRecords[].port", "options": ["port"], "help": {"short": "The port value for this SRV record."}}, {"type": "integer32", "var": "$parameters.properties.SRVRecords[].priority", "options": ["priority"], "help": {"short": "The priority value for this SRV record."}}, {"type": "string", "var": "$parameters.properties.SRVRecords[].target", "options": ["target"], "help": {"short": "The target domain name for this SRV record."}}, {"type": "integer32", "var": "$parameters.properties.SRVRecords[].weight", "options": ["weight"], "help": {"short": "The weight value for this SRV record."}}]}}, {"type": "array<object>", "var": "$parameters.properties.TLSARecords", "options": ["tlsa-records"], "stage": "Experimental", "group": "Properties", "help": {"short": "The list of TLSA records in the record set."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.TLSARecords[].certAssociationData", "options": ["cert-association-data"], "help": {"short": "This specifies the certificate association data to be matched."}}, {"type": "integer32", "var": "$parameters.properties.TLSARecords[].matchingType", "options": ["matching-type"], "help": {"short": "The matching type specifies how the certificate association is presented."}}, {"type": "integer32", "var": "$parameters.properties.TLSARecords[].selector", "options": ["selector"], "help": {"short": "The selector specifies which part of the TLS certificate presented by the server will be matched against the association data."}}, {"type": "integer32", "var": "$parameters.properties.TLSARecords[].usage", "options": ["usage"], "help": {"short": "The usage specifies the provided association that will be used to match the certificate presented in the TLS handshake."}}]}}, {"type": "integer64", "var": "$parameters.properties.TTL", "options": ["ttl"], "group": "Properties", "help": {"short": "The TTL (time-to-live) of the records in the record set."}, "default": {"value": 3600}}, {"type": "array<object>", "var": "$parameters.properties.TXTRecords", "options": ["txt-records"], "group": "Properties", "help": {"short": "The list of TXT records in the record set."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$parameters.properties.TXTRecords[].value", "options": ["value"], "help": {"short": "The text value of this TXT record."}, "item": {"type": "string"}}]}}, {"type": "array<object>", "var": "$parameters.properties.caaRecords", "options": ["caa-records"], "group": "Properties", "help": {"short": "The list of CAA records in the record set."}, "item": {"type": "object", "args": [{"type": "integer32", "var": "$parameters.properties.caaRecords[].flags", "options": ["flags"], "help": {"short": "The flags for this CAA record as an integer between 0 and 255."}}, {"type": "string", "var": "$parameters.properties.caaRecords[].tag", "options": ["tag"], "help": {"short": "The tag for this CAA record."}}, {"type": "string", "var": "$parameters.properties.caaRecords[].value", "options": ["value"], "help": {"short": "The value for this CAA record."}}]}}, {"type": "object", "var": "$parameters.properties.metadata", "options": ["metadata"], "group": "Properties", "help": {"short": "The metadata attached to the record set."}, "additionalProps": {"item": {"type": "string"}}}]}], "operations": [{"operationId": "RecordSets_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "recordType", "arg": "$Path.recordType", "required": true, "enum": {"items": [{"value": "A"}, {"value": "AAAA"}, {"value": "CAA"}, {"value": "CNAME"}, {"value": "DS"}, {"value": "MX"}, {"value": "NAPTR"}, {"value": "NS"}, {"value": "PTR"}, {"value": "SOA"}, {"value": "SRV"}, {"value": "TLSA"}, {"value": "TXT"}]}}, {"type": "string", "name": "relativeRecordSetName", "arg": "$Path.relativeRecordSetName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "zoneName", "arg": "$Path.zoneName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-07-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "header": {"params": [{"type": "string", "name": "If-Match", "arg": "$Header.If-Match"}, {"type": "string", "name": "If-None-Match", "arg": "$Header.If-None-Match"}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "etag", "arg": "$parameters.etag"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "AAAARecords", "arg": "$parameters.properties.AAAARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv6Address", "arg": "$parameters.properties.AAAARecords[].ipv6Address"}]}}, {"type": "array<object>", "name": "ARecords", "arg": "$parameters.properties.ARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv4Address", "arg": "$parameters.properties.ARecords[].ipv4Address"}]}}, {"type": "object", "name": "CNAMERecord", "arg": "$parameters.properties.CNAMERecord", "props": [{"type": "string", "name": "cname", "arg": "$parameters.properties.CNAMERecord.cname"}]}, {"type": "array<object>", "name": "DSRecords", "arg": "$parameters.properties.DSRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "algorithm", "arg": "$parameters.properties.DSRecords[].algorithm"}, {"type": "object", "name": "digest", "arg": "$parameters.properties.DSRecords[].digest", "props": [{"type": "integer32", "name": "algorithmType", "arg": "$parameters.properties.DSRecords[].digest.algorithmType"}, {"type": "string", "name": "value", "arg": "$parameters.properties.DSRecords[].digest.value"}]}, {"type": "integer32", "name": "keyTag", "arg": "$parameters.properties.DSRecords[].keyTag"}]}}, {"type": "array<object>", "name": "MXRecords", "arg": "$parameters.properties.MXRecords", "item": {"type": "object", "props": [{"type": "string", "name": "exchange", "arg": "$parameters.properties.MXRecords[].exchange"}, {"type": "integer32", "name": "preference", "arg": "$parameters.properties.MXRecords[].preference"}]}}, {"type": "array<object>", "name": "NAPTRRecords", "arg": "$parameters.properties.NAPTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "flags", "arg": "$parameters.properties.NAPTRRecords[].flags"}, {"type": "integer32", "name": "order", "arg": "$parameters.properties.NAPTRRecords[].order"}, {"type": "integer32", "name": "preference", "arg": "$parameters.properties.NAPTRRecords[].preference"}, {"type": "string", "name": "regexp", "arg": "$parameters.properties.NAPTRRecords[].regexp"}, {"type": "string", "name": "replacement", "arg": "$parameters.properties.NAPTRRecords[].replacement"}, {"type": "string", "name": "services", "arg": "$parameters.properties.NAPTRRecords[].services"}]}}, {"type": "array<object>", "name": "NSRecords", "arg": "$parameters.properties.NSRecords", "item": {"type": "object", "props": [{"type": "string", "name": "nsdname", "arg": "$parameters.properties.NSRecords[].nsdname"}]}}, {"type": "array<object>", "name": "PTRRecords", "arg": "$parameters.properties.PTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "ptrdname", "arg": "$parameters.properties.PTRRecords[].ptrdname"}]}}, {"type": "object", "name": "SOARecord", "arg": "$parameters.properties.SOARecord", "props": [{"type": "string", "name": "email", "arg": "$parameters.properties.SOARecord.email"}, {"type": "integer64", "name": "expireTime", "arg": "$parameters.properties.SOARecord.expireTime"}, {"type": "string", "name": "host", "arg": "$parameters.properties.SOARecord.host"}, {"type": "integer64", "name": "minimumTTL", "arg": "$parameters.properties.SOARecord.minimumTTL"}, {"type": "integer64", "name": "refreshTime", "arg": "$parameters.properties.SOARecord.refreshTime"}, {"type": "integer64", "name": "retryTime", "arg": "$parameters.properties.SOARecord.retryTime"}, {"type": "integer64", "name": "serialNumber", "arg": "$parameters.properties.SOARecord.serialNumber"}]}, {"type": "array<object>", "name": "SRVRecords", "arg": "$parameters.properties.SRVRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "port", "arg": "$parameters.properties.SRVRecords[].port"}, {"type": "integer32", "name": "priority", "arg": "$parameters.properties.SRVRecords[].priority"}, {"type": "string", "name": "target", "arg": "$parameters.properties.SRVRecords[].target"}, {"type": "integer32", "name": "weight", "arg": "$parameters.properties.SRVRecords[].weight"}]}}, {"type": "array<object>", "name": "TLSARecords", "arg": "$parameters.properties.TLSARecords", "item": {"type": "object", "props": [{"type": "string", "name": "certAssociationData", "arg": "$parameters.properties.TLSARecords[].certAssociationData"}, {"type": "integer32", "name": "matchingType", "arg": "$parameters.properties.TLSARecords[].matchingType"}, {"type": "integer32", "name": "selector", "arg": "$parameters.properties.TLSARecords[].selector"}, {"type": "integer32", "name": "usage", "arg": "$parameters.properties.TLSARecords[].usage"}]}}, {"type": "integer64", "name": "TTL", "arg": "$parameters.properties.TTL"}, {"type": "array<object>", "name": "TXTRecords", "arg": "$parameters.properties.TXTRecords", "item": {"type": "object", "props": [{"type": "array<string>", "name": "value", "arg": "$parameters.properties.TXTRecords[].value", "item": {"type": "string"}}]}}, {"type": "array<object>", "name": "caaRecords", "arg": "$parameters.properties.caaRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "flags", "arg": "$parameters.properties.caaRecords[].flags"}, {"type": "string", "name": "tag", "arg": "$parameters.properties.caaRecords[].tag"}, {"type": "string", "name": "value", "arg": "$parameters.properties.caaRecords[].value"}]}}, {"type": "object", "name": "metadata", "arg": "$parameters.properties.metadata", "additionalProps": {"item": {"type": "string"}}}, {"type": "object", "name": "targetResource", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.targetResource.id"}]}, {"type": "object", "name": "trafficManagementProfile", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.trafficManagementProfile.id"}]}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/dnsZones/{}/{}/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "AAAARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv6Address"}]}}, {"type": "array<object>", "name": "ARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv4Address"}]}}, {"type": "object", "name": "CNAMERecord", "props": [{"type": "string", "name": "cname"}]}, {"type": "array<object>", "name": "DSRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "algorithm"}, {"type": "object", "name": "digest", "props": [{"type": "integer32", "name": "algorithmType"}, {"type": "string", "name": "value"}]}, {"type": "integer32", "name": "keyTag"}]}}, {"type": "array<object>", "name": "MXRecords", "item": {"type": "object", "props": [{"type": "string", "name": "exchange"}, {"type": "integer32", "name": "preference"}]}}, {"type": "array<object>", "name": "NAPTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "flags"}, {"type": "integer32", "name": "order"}, {"type": "integer32", "name": "preference"}, {"type": "string", "name": "regexp"}, {"type": "string", "name": "replacement"}, {"type": "string", "name": "services"}]}}, {"type": "array<object>", "name": "NSRecords", "item": {"type": "object", "props": [{"type": "string", "name": "nsdname"}]}}, {"type": "array<object>", "name": "PTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "ptrdname"}]}}, {"type": "object", "name": "SOARecord", "props": [{"type": "string", "name": "email"}, {"type": "integer64", "name": "expireTime"}, {"type": "string", "name": "host"}, {"type": "integer64", "name": "minimumTTL"}, {"type": "integer64", "name": "refreshTime"}, {"type": "integer64", "name": "retryTime"}, {"type": "integer64", "name": "serialNumber"}]}, {"type": "array<object>", "name": "SRVRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "port"}, {"type": "integer32", "name": "priority"}, {"type": "string", "name": "target"}, {"type": "integer32", "name": "weight"}]}}, {"type": "array<object>", "name": "TLSARecords", "item": {"type": "object", "props": [{"type": "string", "name": "certAssociationData"}, {"type": "integer32", "name": "matchingType"}, {"type": "integer32", "name": "selector"}, {"type": "integer32", "name": "usage"}]}}, {"type": "integer64", "name": "TTL"}, {"type": "array<object>", "name": "TXTRecords", "item": {"type": "object", "props": [{"type": "array<string>", "name": "value", "item": {"type": "string"}}]}}, {"type": "array<object>", "name": "caaRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "flags"}, {"type": "string", "name": "tag"}, {"type": "string", "name": "value"}]}}, {"readOnly": true, "type": "string", "name": "fqdn"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "object", "name": "targetResource", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}, {"type": "@SubResource_read", "name": "trafficManagementProfile"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2023-07-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnszones/{}/{}/{}", "version": "2023-07-01-preview", "swagger": "mgmt-plane/dns/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNab25lcy97em9uZU5hbWV9L3tyZWNvcmRUeXBlfS97cmVsYXRpdmVSZWNvcmRTZXROYW1lfQ==/V/MjAyMy0wNy0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.If-Match", "options": ["if-match"], "group": "", "help": {"short": "Etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwriting any concurrent changes."}}, {"type": "string", "var": "$Header.If-None-Match", "options": ["if-none-match"], "group": "", "help": {"short": "Set to `*` to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored."}}, {"type": "string", "var": "$Path.recordType", "options": ["record-type"], "required": true, "group": "", "idPart": "child_type_1", "help": {"short": "Type of DNS record in this record set."}, "enum": {"items": [{"name": "A", "value": "A"}, {"name": "AAAA", "value": "AAAA"}, {"name": "CAA", "value": "CAA"}, {"name": "CNAME", "value": "CNAME"}, {"name": "DS", "value": "DS"}, {"name": "MX", "value": "MX"}, {"name": "NAPTR", "value": "NAPTR"}, {"name": "NS", "value": "NS"}, {"name": "PTR", "value": "PTR"}, {"name": "SOA", "value": "SOA"}, {"name": "SRV", "value": "SRV"}, {"name": "TLSA", "value": "TLSA"}, {"name": "TXT", "value": "TXT"}]}}, {"type": "string", "var": "$Path.relativeRecordSetName", "options": ["n", "name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the record set, relative to the name of the zone."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.zoneName", "options": ["z", "zone-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the DNS zone."}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.TTL", "options": ["ttl"], "group": "", "help": {"short": "TTL of the records in the record set."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.metadata", "options": ["metadata"], "group": "", "help": {"short": "Metadata in space-separated key=value pairs. This overwrites any existing metadata."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "string", "var": "$parameters.properties.targetResource.id", "options": ["target-resource"], "group": "", "help": {"short": "ID of an Azure resource from which the DNS resource value is taken."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.trafficManagementProfile.id", "options": ["tm-profile", "traffic-management-profile"], "stage": "Experimental", "group": "", "help": {"short": "A reference to an Azure Traffic Manager Profile resource from where the DNS resource value is taken."}}]}, {"name": "Parameters", "args": [{"nullable": true, "type": "string", "var": "$parameters.etag", "options": ["etag"], "hide": true, "group": "Parameters", "help": {"short": "The etag of the record set."}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.AAAARecords", "options": ["aaaa-records"], "group": "Properties", "help": {"short": "The list of AAAA records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.AAAARecords[].ipv6Address", "options": ["ipv6-address"], "help": {"short": "The IPv6 address of this AAAA record."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.ARecords", "options": ["a-records"], "group": "Properties", "help": {"short": "The list of A records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.ARecords[].ipv4Address", "options": ["ipv4-address"], "help": {"short": "The IPv4 address of this A record."}}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.CNAMERecord", "options": ["cname-record"], "group": "Properties", "help": {"short": "The CNAME record in the  record set."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.CNAMERecord.cname", "options": ["cname"], "help": {"short": "The canonical name for this CNAME record."}}]}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.DSRecords", "options": ["ds-records"], "stage": "Experimental", "group": "Properties", "help": {"short": "The list of DS records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "integer32", "var": "$parameters.properties.DSRecords[].algorithm", "options": ["algorithm"], "help": {"short": "The security algorithm type represents the standard security algorithm number of the DNSKEY Resource Record. See: https://www.iana.org/assignments/dns-sec-alg-numbers/dns-sec-alg-numbers.xhtml"}}, {"nullable": true, "type": "object", "var": "$parameters.properties.DSRecords[].digest", "options": ["digest"], "help": {"short": "The digest entity."}, "args": [{"nullable": true, "type": "integer32", "var": "$parameters.properties.DSRecords[].digest.algorithmType", "options": ["algorithm-type"], "help": {"short": "The digest algorithm type represents the standard digest algorithm number used to construct the digest. See: https://www.iana.org/assignments/ds-rr-types/ds-rr-types.xhtml"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.DSRecords[].digest.value", "options": ["value"], "help": {"short": "The digest value is a cryptographic hash value of the referenced DNSKEY Resource Record."}}]}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.DSRecords[].keyTag", "options": ["key-tag"], "help": {"short": "The key tag value is used to determine which DNSKEY Resource Record is used for signature verification."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.MXRecords", "options": ["mx-records"], "group": "Properties", "help": {"short": "The list of MX records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.MXRecords[].exchange", "options": ["exchange"], "help": {"short": "The domain name of the mail host for this MX record."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.MXRecords[].preference", "options": ["preference"], "help": {"short": "The preference value for this MX record."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.NAPTRRecords", "options": ["naptr-records"], "stage": "Experimental", "group": "Properties", "help": {"short": "The list of NAPTR records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.NAPTRRecords[].flags", "options": ["flags"], "help": {"short": "The flags specific to DDDS applications. Values currently defined in RFC 3404 are uppercase and lowercase letters \"A\", \"P\", \"S\", and \"U\", and the empty string, \"\". Enclose Flags in quotation marks."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.NAPTRRecords[].order", "options": ["order"], "help": {"short": "The order in which the NAPTR records MUST be processed in order to accurately represent the ordered list of rules. The ordering is from lowest to highest. Valid values: 0-65535."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.NAPTRRecords[].preference", "options": ["preference"], "help": {"short": "The preference specifies the order in which NAPTR records with equal 'order' values should be processed, low numbers being processed before high numbers. Valid values: 0-65535."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.NAPTRRecords[].regexp", "options": ["regexp"], "help": {"short": "The regular expression that the DDDS application uses to convert an input value into an output value. For example: an IP phone system might use a regular expression to convert a phone number that is entered by a user into a SIP URI. Enclose the regular expression in quotation marks. Specify either a value for 'regexp' or a value for 'replacement'."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.NAPTRRecords[].replacement", "options": ["replacement"], "help": {"short": "The replacement is a fully qualified domain name (FQDN) of the next domain name that you want the DDDS application to submit a DNS query for. The DDDS application replaces the input value with the value specified for replacement. Specify either a value for 'regexp' or a value for 'replacement'. If you specify a value for 'regexp', specify a dot (.) for 'replacement'."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.NAPTRRecords[].services", "options": ["services"], "help": {"short": "The services specific to DDDS applications. Enclose Services in quotation marks."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.NSRecords", "options": ["ns-records"], "group": "Properties", "help": {"short": "The list of NS records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.NSRecords[].nsdname", "options": ["nsdname"], "help": {"short": "The name server name for this NS record."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.PTRRecords", "options": ["ptr-records"], "group": "Properties", "help": {"short": "The list of PTR records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.PTRRecords[].ptrdname", "options": ["ptrdname"], "help": {"short": "The PTR target domain name for this PTR record."}}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.SOARecord", "options": ["soa-record"], "group": "Properties", "help": {"short": "The SOA record in the record set."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.SOARecord.email", "options": ["email"], "help": {"short": "The email contact for this SOA record."}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.SOARecord.expireTime", "options": ["expire-time"], "help": {"short": "The expire time for this SOA record."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.SOARecord.host", "options": ["host"], "help": {"short": "The domain name of the authoritative name server for this SOA record."}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.SOARecord.minimumTTL", "options": ["minimum-ttl"], "help": {"short": "The minimum value for this SOA record. By convention this is used to determine the negative caching duration."}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.SOARecord.refreshTime", "options": ["refresh-time"], "help": {"short": "The refresh value for this SOA record."}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.SOARecord.retryTime", "options": ["retry-time"], "help": {"short": "The retry time for this SOA record."}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.SOARecord.serialNumber", "options": ["serial-number"], "help": {"short": "The serial number for this SOA record."}}]}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.SRVRecords", "options": ["srv-records"], "group": "Properties", "help": {"short": "The list of SRV records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "integer32", "var": "$parameters.properties.SRVRecords[].port", "options": ["port"], "help": {"short": "The port value for this SRV record."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.SRVRecords[].priority", "options": ["priority"], "help": {"short": "The priority value for this SRV record."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.SRVRecords[].target", "options": ["target"], "help": {"short": "The target domain name for this SRV record."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.SRVRecords[].weight", "options": ["weight"], "help": {"short": "The weight value for this SRV record."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.TLSARecords", "options": ["tlsa-records"], "stage": "Experimental", "group": "Properties", "help": {"short": "The list of TLSA records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.TLSARecords[].certAssociationData", "options": ["cert-association-data"], "help": {"short": "This specifies the certificate association data to be matched."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.TLSARecords[].matchingType", "options": ["matching-type"], "help": {"short": "The matching type specifies how the certificate association is presented."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.TLSARecords[].selector", "options": ["selector"], "help": {"short": "The selector specifies which part of the TLS certificate presented by the server will be matched against the association data."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.TLSARecords[].usage", "options": ["usage"], "help": {"short": "The usage specifies the provided association that will be used to match the certificate presented in the TLS handshake."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.TXTRecords", "options": ["txt-records"], "group": "Properties", "help": {"short": "The list of TXT records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<string>", "var": "$parameters.properties.TXTRecords[].value", "options": ["value"], "help": {"short": "The text value of this TXT record."}, "item": {"nullable": true, "type": "string"}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.caaRecords", "options": ["caa-records"], "group": "Properties", "help": {"short": "The list of CAA records in the record set."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "integer32", "var": "$parameters.properties.caaRecords[].flags", "options": ["flags"], "help": {"short": "The flags for this CAA record as an integer between 0 and 255."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.caaRecords[].tag", "options": ["tag"], "help": {"short": "The tag for this CAA record."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.caaRecords[].value", "options": ["value"], "help": {"short": "The value for this CAA record."}}]}}]}], "operations": [{"operationId": "RecordSets_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "recordType", "arg": "$Path.recordType", "required": true, "enum": {"items": [{"value": "A"}, {"value": "AAAA"}, {"value": "CAA"}, {"value": "CNAME"}, {"value": "DS"}, {"value": "MX"}, {"value": "NAPTR"}, {"value": "NS"}, {"value": "PTR"}, {"value": "SOA"}, {"value": "SRV"}, {"value": "TLSA"}, {"value": "TXT"}]}}, {"type": "string", "name": "relativeRecordSetName", "arg": "$Path.relativeRecordSetName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "zoneName", "arg": "$Path.zoneName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-07-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/dnsZones/{}/{}/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "AAAARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv6Address"}]}}, {"type": "array<object>", "name": "ARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv4Address"}]}}, {"type": "object", "name": "CNAMERecord", "props": [{"type": "string", "name": "cname"}]}, {"type": "array<object>", "name": "DSRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "algorithm"}, {"type": "object", "name": "digest", "props": [{"type": "integer32", "name": "algorithmType"}, {"type": "string", "name": "value"}]}, {"type": "integer32", "name": "keyTag"}]}}, {"type": "array<object>", "name": "MXRecords", "item": {"type": "object", "props": [{"type": "string", "name": "exchange"}, {"type": "integer32", "name": "preference"}]}}, {"type": "array<object>", "name": "NAPTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "flags"}, {"type": "integer32", "name": "order"}, {"type": "integer32", "name": "preference"}, {"type": "string", "name": "regexp"}, {"type": "string", "name": "replacement"}, {"type": "string", "name": "services"}]}}, {"type": "array<object>", "name": "NSRecords", "item": {"type": "object", "props": [{"type": "string", "name": "nsdname"}]}}, {"type": "array<object>", "name": "PTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "ptrdname"}]}}, {"type": "object", "name": "SOARecord", "props": [{"type": "string", "name": "email"}, {"type": "integer64", "name": "expireTime"}, {"type": "string", "name": "host"}, {"type": "integer64", "name": "minimumTTL"}, {"type": "integer64", "name": "refreshTime"}, {"type": "integer64", "name": "retryTime"}, {"type": "integer64", "name": "serialNumber"}]}, {"type": "array<object>", "name": "SRVRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "port"}, {"type": "integer32", "name": "priority"}, {"type": "string", "name": "target"}, {"type": "integer32", "name": "weight"}]}}, {"type": "array<object>", "name": "TLSARecords", "item": {"type": "object", "props": [{"type": "string", "name": "certAssociationData"}, {"type": "integer32", "name": "matchingType"}, {"type": "integer32", "name": "selector"}, {"type": "integer32", "name": "usage"}]}}, {"type": "integer64", "name": "TTL"}, {"type": "array<object>", "name": "TXTRecords", "item": {"type": "object", "props": [{"type": "array<string>", "name": "value", "item": {"type": "string"}}]}}, {"type": "array<object>", "name": "caaRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "flags"}, {"type": "string", "name": "tag"}, {"type": "string", "name": "value"}]}}, {"readOnly": true, "type": "string", "name": "fqdn"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "object", "name": "targetResource", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}, {"type": "@SubResource_read", "name": "trafficManagementProfile"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "RecordSet_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "string", "name": "etag", "arg": "$parameters.etag"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "AAAARecords", "arg": "$parameters.properties.AAAARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv6Address", "arg": "$parameters.properties.AAAARecords[].ipv6Address"}]}}, {"type": "array<object>", "name": "ARecords", "arg": "$parameters.properties.ARecords", "item": {"type": "object", "props": [{"type": "string", "name": "ipv4Address", "arg": "$parameters.properties.ARecords[].ipv4Address"}]}}, {"type": "object", "name": "CNAMERecord", "arg": "$parameters.properties.CNAMERecord", "props": [{"type": "string", "name": "cname", "arg": "$parameters.properties.CNAMERecord.cname"}]}, {"type": "array<object>", "name": "DSRecords", "arg": "$parameters.properties.DSRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "algorithm", "arg": "$parameters.properties.DSRecords[].algorithm"}, {"type": "object", "name": "digest", "arg": "$parameters.properties.DSRecords[].digest", "props": [{"type": "integer32", "name": "algorithmType", "arg": "$parameters.properties.DSRecords[].digest.algorithmType"}, {"type": "string", "name": "value", "arg": "$parameters.properties.DSRecords[].digest.value"}]}, {"type": "integer32", "name": "keyTag", "arg": "$parameters.properties.DSRecords[].keyTag"}]}}, {"type": "array<object>", "name": "MXRecords", "arg": "$parameters.properties.MXRecords", "item": {"type": "object", "props": [{"type": "string", "name": "exchange", "arg": "$parameters.properties.MXRecords[].exchange"}, {"type": "integer32", "name": "preference", "arg": "$parameters.properties.MXRecords[].preference"}]}}, {"type": "array<object>", "name": "NAPTRRecords", "arg": "$parameters.properties.NAPTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "flags", "arg": "$parameters.properties.NAPTRRecords[].flags"}, {"type": "integer32", "name": "order", "arg": "$parameters.properties.NAPTRRecords[].order"}, {"type": "integer32", "name": "preference", "arg": "$parameters.properties.NAPTRRecords[].preference"}, {"type": "string", "name": "regexp", "arg": "$parameters.properties.NAPTRRecords[].regexp"}, {"type": "string", "name": "replacement", "arg": "$parameters.properties.NAPTRRecords[].replacement"}, {"type": "string", "name": "services", "arg": "$parameters.properties.NAPTRRecords[].services"}]}}, {"type": "array<object>", "name": "NSRecords", "arg": "$parameters.properties.NSRecords", "item": {"type": "object", "props": [{"type": "string", "name": "nsdname", "arg": "$parameters.properties.NSRecords[].nsdname"}]}}, {"type": "array<object>", "name": "PTRRecords", "arg": "$parameters.properties.PTRRecords", "item": {"type": "object", "props": [{"type": "string", "name": "ptrdname", "arg": "$parameters.properties.PTRRecords[].ptrdname"}]}}, {"type": "object", "name": "SOARecord", "arg": "$parameters.properties.SOARecord", "props": [{"type": "string", "name": "email", "arg": "$parameters.properties.SOARecord.email"}, {"type": "integer64", "name": "expireTime", "arg": "$parameters.properties.SOARecord.expireTime"}, {"type": "string", "name": "host", "arg": "$parameters.properties.SOARecord.host"}, {"type": "integer64", "name": "minimumTTL", "arg": "$parameters.properties.SOARecord.minimumTTL"}, {"type": "integer64", "name": "refreshTime", "arg": "$parameters.properties.SOARecord.refreshTime"}, {"type": "integer64", "name": "retryTime", "arg": "$parameters.properties.SOARecord.retryTime"}, {"type": "integer64", "name": "serialNumber", "arg": "$parameters.properties.SOARecord.serialNumber"}]}, {"type": "array<object>", "name": "SRVRecords", "arg": "$parameters.properties.SRVRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "port", "arg": "$parameters.properties.SRVRecords[].port"}, {"type": "integer32", "name": "priority", "arg": "$parameters.properties.SRVRecords[].priority"}, {"type": "string", "name": "target", "arg": "$parameters.properties.SRVRecords[].target"}, {"type": "integer32", "name": "weight", "arg": "$parameters.properties.SRVRecords[].weight"}]}}, {"type": "array<object>", "name": "TLSARecords", "arg": "$parameters.properties.TLSARecords", "item": {"type": "object", "props": [{"type": "string", "name": "certAssociationData", "arg": "$parameters.properties.TLSARecords[].certAssociationData"}, {"type": "integer32", "name": "matchingType", "arg": "$parameters.properties.TLSARecords[].matchingType"}, {"type": "integer32", "name": "selector", "arg": "$parameters.properties.TLSARecords[].selector"}, {"type": "integer32", "name": "usage", "arg": "$parameters.properties.TLSARecords[].usage"}]}}, {"type": "integer64", "name": "TTL", "arg": "$parameters.properties.TTL"}, {"type": "array<object>", "name": "TXTRecords", "arg": "$parameters.properties.TXTRecords", "item": {"type": "object", "props": [{"type": "array<string>", "name": "value", "arg": "$parameters.properties.TXTRecords[].value", "item": {"type": "string"}}]}}, {"type": "array<object>", "name": "caaRecords", "arg": "$parameters.properties.caaRecords", "item": {"type": "object", "props": [{"type": "integer32", "name": "flags", "arg": "$parameters.properties.caaRecords[].flags"}, {"type": "string", "name": "tag", "arg": "$parameters.properties.caaRecords[].tag"}, {"type": "string", "name": "value", "arg": "$parameters.properties.caaRecords[].value"}]}}, {"type": "object", "name": "metadata", "arg": "$parameters.properties.metadata", "additionalProps": {"item": {"type": "string"}}}, {"type": "object", "name": "targetResource", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.targetResource.id"}]}, {"type": "object", "name": "trafficManagementProfile", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.trafficManagementProfile.id"}]}], "clientFlatten": true}], "clientFlatten": true}}}}, {"operationId": "RecordSets_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsZones/{zoneName}/{recordType}/{relativeRecordSetName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "recordType", "arg": "$Path.recordType", "required": true, "enum": {"items": [{"value": "A"}, {"value": "AAAA"}, {"value": "CAA"}, {"value": "CNAME"}, {"value": "DS"}, {"value": "MX"}, {"value": "NAPTR"}, {"value": "NS"}, {"value": "PTR"}, {"value": "SOA"}, {"value": "SRV"}, {"value": "TLSA"}, {"value": "TXT"}]}}, {"type": "string", "name": "relativeRecordSetName", "arg": "$Path.relativeRecordSetName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}, {"type": "string", "name": "zoneName", "arg": "$Path.zoneName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-07-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "header": {"params": [{"type": "string", "name": "If-Match", "arg": "$Header.If-Match"}, {"type": "string", "name": "If-None-Match", "arg": "$Header.If-None-Match"}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@RecordSet_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}