<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}" version="2023-05-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0=/V/MjAyMy0wNS0wMQ=="/>
  <commandGroup name="amlfs">
    <command name="show" version="2023-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}" version="2023-05-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0=/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.amlFilesystemName" options="aml-filesystem-name name n" required="True" idPart="name">
          <help short="Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="amlFilesystems_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}">
          <request method="get">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageCache/amlFilesystems/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="object" name="clientInfo">
                      <prop readOnly="True" type="object" name="containerStorageInterface">
                        <prop readOnly="True" type="string" name="persistentVolume"/>
                        <prop readOnly="True" type="string" name="persistentVolumeClaim"/>
                        <prop readOnly="True" type="string" name="storageClass"/>
                      </prop>
                      <prop readOnly="True" type="string" name="lustreVersion"/>
                      <prop readOnly="True" type="string" name="mgsAddress"/>
                      <prop readOnly="True" type="string" name="mountCommand"/>
                    </prop>
                    <prop type="object" name="encryptionSettings">
                      <prop type="object" name="keyEncryptionKey">
                        <prop type="string" name="keyUrl" required="True"/>
                        <prop type="object" name="sourceVault" required="True">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="filesystemSubnet" required="True"/>
                    <prop readOnly="True" type="object" name="health">
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Available&quot;"/>
                          <item value="&quot;Degraded&quot;"/>
                          <item value="&quot;Maintenance&quot;"/>
                          <item value="&quot;Transitioning&quot;"/>
                          <item value="&quot;Unavailable&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="statusCode"/>
                      <prop type="string" name="statusDescription"/>
                    </prop>
                    <prop type="object" name="hsm">
                      <prop readOnly="True" type="array<object>" name="archiveStatus" identifiers="filesystemPath">
                        <item readOnly="True" type="object">
                          <prop readOnly="True" type="string" name="filesystemPath"/>
                          <prop readOnly="True" type="object" name="status">
                            <prop readOnly="True" type="string" name="errorCode"/>
                            <prop readOnly="True" type="string" name="errorMessage"/>
                            <prop readOnly="True" type="dateTime" name="lastCompletionTime"/>
                            <prop readOnly="True" type="dateTime" name="lastStartedTime"/>
                            <prop readOnly="True" type="integer32" name="percentComplete"/>
                            <prop readOnly="True" type="string" name="state">
                              <enum>
                                <item value="&quot;Canceled&quot;"/>
                                <item value="&quot;Cancelling&quot;"/>
                                <item value="&quot;Completed&quot;"/>
                                <item value="&quot;FSScanInProgress&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Idle&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="settings">
                        <prop type="string" name="container" required="True"/>
                        <prop type="string" name="importPrefix">
                          <default value="&quot;/&quot;"/>
                        </prop>
                        <prop type="string" name="loggingContainer" required="True"/>
                      </prop>
                    </prop>
                    <prop type="object" name="maintenanceWindow" required="True">
                      <prop type="string" name="dayOfWeek">
                        <enum>
                          <item value="&quot;Friday&quot;"/>
                          <item value="&quot;Monday&quot;"/>
                          <item value="&quot;Saturday&quot;"/>
                          <item value="&quot;Sunday&quot;"/>
                          <item value="&quot;Thursday&quot;"/>
                          <item value="&quot;Tuesday&quot;"/>
                          <item value="&quot;Wednesday&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="timeOfDayUTC">
                        <format pattern="^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="float32" name="storageCapacityTiB" required="True"/>
                    <prop readOnly="True" type="integer32" name="throughputProvisionedMBps"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-05-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}" version="2023-05-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0=/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.amlFilesystemName" options="aml-filesystem-name name n" required="True" idPart="name">
          <help short="Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="amlFilesystems_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}">
          <request method="delete">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}" version="2023-05-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0=/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.amlFilesystemName" options="aml-filesystem-name name n" required="True" idPart="name">
          <help short="Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AmlFilesystem">
        <arg type="object" var="$amlFilesystem.identity" options="identity" group="AmlFilesystem">
          <help short="The managed identity used by the AML file system, if configured."/>
          <arg type="string" var="$amlFilesystem.identity.type" options="type">
            <help short="The type of identity used for the resource."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$amlFilesystem.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="A dictionary where each key is a user assigned identity resource ID, and each key's value is an empty dictionary."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$amlFilesystem.location" options="location l" required="True" group="AmlFilesystem">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$amlFilesystem.tags" options="tags" group="AmlFilesystem">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<string>" var="$amlFilesystem.zones" options="zones" group="AmlFilesystem">
          <help short="Availability zones for resources. This field should only contain a single element in the array."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="EncryptionSettings">
        <arg type="object" var="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey" options="encryption-setting" group="EncryptionSettings">
          <help short="Specifies the location of the encryption key in Key Vault."/>
          <arg type="string" var="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.keyUrl" options="key-url" required="True">
            <help short="The URL referencing a key encryption key in key vault."/>
          </arg>
          <arg type="object" var="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.sourceVault" options="source-vault" required="True">
            <help short="Describes a resource Id to source key vault."/>
            <arg type="string" var="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.sourceVault.id" options="id">
              <help short="Resource Id."/>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Hsm">
        <arg type="object" var="$amlFilesystem.properties.hsm.settings" options="hsm-settings" group="Hsm">
          <help short="Specifies HSM settings of the AML file system."/>
          <arg type="string" var="$amlFilesystem.properties.hsm.settings.container" options="container" required="True">
            <help short="Resource ID of storage container used for hydrating the namespace and archiving from the namespace. The resource provider must have permission to create SAS tokens on the storage account."/>
          </arg>
          <arg type="string" var="$amlFilesystem.properties.hsm.settings.importPrefix" options="import-prefix">
            <help short="Only blobs in the non-logging container that start with this path/prefix get hydrated into the cluster namespace."/>
            <default value="&quot;/&quot;"/>
          </arg>
          <arg type="string" var="$amlFilesystem.properties.hsm.settings.loggingContainer" options="logging-container" required="True">
            <help short="Resource ID of storage container used for logging events and errors.  Must be a separate container in the same storage account as the hydration and archive container. The resource provider must have permission to create SAS tokens on the storage account."/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$amlFilesystem.properties.filesystemSubnet" options="filesystem-subnet" group="Properties">
          <help short="Subnet used for managing the AML file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the VNET's address space."/>
        </arg>
        <arg type="object" var="$amlFilesystem.properties.maintenanceWindow" options="maintenance-window" group="Properties">
          <help short="Start time of a 30-minute weekly maintenance window."/>
          <arg type="string" var="$amlFilesystem.properties.maintenanceWindow.dayOfWeek" options="day-of-week">
            <help short="Day of the week on which the maintenance window will occur."/>
            <enum>
              <item name="Friday" value="&quot;Friday&quot;"/>
              <item name="Monday" value="&quot;Monday&quot;"/>
              <item name="Saturday" value="&quot;Saturday&quot;"/>
              <item name="Sunday" value="&quot;Sunday&quot;"/>
              <item name="Thursday" value="&quot;Thursday&quot;"/>
              <item name="Tuesday" value="&quot;Tuesday&quot;"/>
              <item name="Wednesday" value="&quot;Wednesday&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$amlFilesystem.properties.maintenanceWindow.timeOfDayUTC" options="time-of-day-utc">
            <help short="The time of day (in UTC) to start the maintenance window."/>
            <format pattern="^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
          </arg>
        </arg>
        <arg type="float32" var="$amlFilesystem.properties.storageCapacityTiB" options="storage-capacity" group="Properties">
          <help short="The size of the AML file system, in TiB. This might be rounded up."/>
        </arg>
      </argGroup>
      <argGroup name="Sku">
        <arg type="string" var="$amlFilesystem.sku.name" options="sku" group="Sku">
          <help short="SKU name for this resource."/>
        </arg>
      </argGroup>
      <operation operationId="amlFilesystems_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}">
          <request method="put">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="amlFilesystem" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$amlFilesystem.identity">
                    <prop type="string" name="type" arg="$amlFilesystem.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$amlFilesystem.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$amlFilesystem.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="encryptionSettings">
                      <prop type="object" name="keyEncryptionKey" arg="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey">
                        <prop type="string" name="keyUrl" arg="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.keyUrl" required="True"/>
                        <prop type="object" name="sourceVault" arg="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.sourceVault" required="True">
                          <prop type="string" name="id" arg="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.sourceVault.id"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="filesystemSubnet" arg="$amlFilesystem.properties.filesystemSubnet" required="True"/>
                    <prop type="object" name="hsm">
                      <prop type="object" name="settings" arg="$amlFilesystem.properties.hsm.settings">
                        <prop type="string" name="container" arg="$amlFilesystem.properties.hsm.settings.container" required="True"/>
                        <prop type="string" name="importPrefix" arg="$amlFilesystem.properties.hsm.settings.importPrefix">
                          <default value="&quot;/&quot;"/>
                        </prop>
                        <prop type="string" name="loggingContainer" arg="$amlFilesystem.properties.hsm.settings.loggingContainer" required="True"/>
                      </prop>
                    </prop>
                    <prop type="object" name="maintenanceWindow" arg="$amlFilesystem.properties.maintenanceWindow" required="True">
                      <prop type="string" name="dayOfWeek" arg="$amlFilesystem.properties.maintenanceWindow.dayOfWeek">
                        <enum>
                          <item value="&quot;Friday&quot;"/>
                          <item value="&quot;Monday&quot;"/>
                          <item value="&quot;Saturday&quot;"/>
                          <item value="&quot;Sunday&quot;"/>
                          <item value="&quot;Thursday&quot;"/>
                          <item value="&quot;Tuesday&quot;"/>
                          <item value="&quot;Wednesday&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="timeOfDayUTC" arg="$amlFilesystem.properties.maintenanceWindow.timeOfDayUTC">
                        <format pattern="^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                      </prop>
                    </prop>
                    <prop type="float32" name="storageCapacityTiB" arg="$amlFilesystem.properties.storageCapacityTiB" required="True"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" arg="$amlFilesystem.sku.name"/>
                  </prop>
                  <prop type="object" name="tags" arg="$amlFilesystem.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop type="array<string>" name="zones" arg="$amlFilesystem.zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageCache/amlFilesystems/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="object" name="clientInfo">
                      <prop readOnly="True" type="object" name="containerStorageInterface">
                        <prop readOnly="True" type="string" name="persistentVolume"/>
                        <prop readOnly="True" type="string" name="persistentVolumeClaim"/>
                        <prop readOnly="True" type="string" name="storageClass"/>
                      </prop>
                      <prop readOnly="True" type="string" name="lustreVersion"/>
                      <prop readOnly="True" type="string" name="mgsAddress"/>
                      <prop readOnly="True" type="string" name="mountCommand"/>
                    </prop>
                    <prop type="object" name="encryptionSettings">
                      <prop type="object" name="keyEncryptionKey">
                        <prop type="string" name="keyUrl" required="True"/>
                        <prop type="object" name="sourceVault" required="True">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="filesystemSubnet" required="True"/>
                    <prop readOnly="True" type="object" name="health">
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Available&quot;"/>
                          <item value="&quot;Degraded&quot;"/>
                          <item value="&quot;Maintenance&quot;"/>
                          <item value="&quot;Transitioning&quot;"/>
                          <item value="&quot;Unavailable&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="statusCode"/>
                      <prop type="string" name="statusDescription"/>
                    </prop>
                    <prop type="object" name="hsm">
                      <prop readOnly="True" type="array<object>" name="archiveStatus" identifiers="filesystemPath">
                        <item readOnly="True" type="object">
                          <prop readOnly="True" type="string" name="filesystemPath"/>
                          <prop readOnly="True" type="object" name="status">
                            <prop readOnly="True" type="string" name="errorCode"/>
                            <prop readOnly="True" type="string" name="errorMessage"/>
                            <prop readOnly="True" type="dateTime" name="lastCompletionTime"/>
                            <prop readOnly="True" type="dateTime" name="lastStartedTime"/>
                            <prop readOnly="True" type="integer32" name="percentComplete"/>
                            <prop readOnly="True" type="string" name="state">
                              <enum>
                                <item value="&quot;Canceled&quot;"/>
                                <item value="&quot;Cancelling&quot;"/>
                                <item value="&quot;Completed&quot;"/>
                                <item value="&quot;FSScanInProgress&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Idle&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="settings">
                        <prop type="string" name="container" required="True"/>
                        <prop type="string" name="importPrefix">
                          <default value="&quot;/&quot;"/>
                        </prop>
                        <prop type="string" name="loggingContainer" required="True"/>
                      </prop>
                    </prop>
                    <prop type="object" name="maintenanceWindow" required="True">
                      <prop type="string" name="dayOfWeek">
                        <enum>
                          <item value="&quot;Friday&quot;"/>
                          <item value="&quot;Monday&quot;"/>
                          <item value="&quot;Saturday&quot;"/>
                          <item value="&quot;Sunday&quot;"/>
                          <item value="&quot;Thursday&quot;"/>
                          <item value="&quot;Tuesday&quot;"/>
                          <item value="&quot;Wednesday&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="timeOfDayUTC">
                        <format pattern="^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="float32" name="storageCapacityTiB" required="True"/>
                    <prop readOnly="True" type="integer32" name="throughputProvisionedMBps"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}" version="2023-05-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0=/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.amlFilesystemName" options="aml-filesystem-name name n" required="True" idPart="name">
          <help short="Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AmlFilesystem">
        <arg nullable="True" type="object" var="$amlFilesystem.tags" options="tags" group="AmlFilesystem">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="EncryptionSettings">
        <arg nullable="True" type="object" var="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey" options="encryption-setting" group="EncryptionSettings">
          <help short="Specifies the location of the encryption key in Key Vault."/>
          <arg type="string" var="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.keyUrl" options="key-url">
            <help short="The URL referencing a key encryption key in key vault."/>
          </arg>
          <arg type="object" var="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.sourceVault" options="source-vault">
            <help short="Describes a resource Id to source key vault."/>
            <arg nullable="True" type="string" var="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.sourceVault.id" options="id">
              <help short="Resource Id."/>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$amlFilesystem.properties.maintenanceWindow" options="maintenance-window" group="Properties">
          <help short="Start time of a 30-minute weekly maintenance window."/>
          <arg nullable="True" type="string" var="$amlFilesystem.properties.maintenanceWindow.dayOfWeek" options="day-of-week">
            <help short="Day of the week on which the maintenance window will occur."/>
            <enum>
              <item name="Friday" value="&quot;Friday&quot;"/>
              <item name="Monday" value="&quot;Monday&quot;"/>
              <item name="Saturday" value="&quot;Saturday&quot;"/>
              <item name="Sunday" value="&quot;Sunday&quot;"/>
              <item name="Thursday" value="&quot;Thursday&quot;"/>
              <item name="Tuesday" value="&quot;Tuesday&quot;"/>
              <item name="Wednesday" value="&quot;Wednesday&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$amlFilesystem.properties.maintenanceWindow.timeOfDayUTC" options="time-of-day-utc">
            <help short="The time of day (in UTC) to start the maintenance window."/>
            <format pattern="^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="amlFilesystems_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}">
          <request method="get">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="AmlFilesystem_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageCache/amlFilesystems/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="object" name="clientInfo">
                      <prop readOnly="True" type="object" name="containerStorageInterface">
                        <prop readOnly="True" type="string" name="persistentVolume"/>
                        <prop readOnly="True" type="string" name="persistentVolumeClaim"/>
                        <prop readOnly="True" type="string" name="storageClass"/>
                      </prop>
                      <prop readOnly="True" type="string" name="lustreVersion"/>
                      <prop readOnly="True" type="string" name="mgsAddress"/>
                      <prop readOnly="True" type="string" name="mountCommand"/>
                    </prop>
                    <prop type="object" name="encryptionSettings">
                      <prop type="object" name="keyEncryptionKey">
                        <prop type="string" name="keyUrl" required="True"/>
                        <prop type="object" name="sourceVault" required="True">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="filesystemSubnet" required="True"/>
                    <prop readOnly="True" type="object" name="health">
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Available&quot;"/>
                          <item value="&quot;Degraded&quot;"/>
                          <item value="&quot;Maintenance&quot;"/>
                          <item value="&quot;Transitioning&quot;"/>
                          <item value="&quot;Unavailable&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="statusCode"/>
                      <prop type="string" name="statusDescription"/>
                    </prop>
                    <prop type="object" name="hsm">
                      <prop readOnly="True" type="array<object>" name="archiveStatus" identifiers="filesystemPath">
                        <item readOnly="True" type="object">
                          <prop readOnly="True" type="string" name="filesystemPath"/>
                          <prop readOnly="True" type="object" name="status">
                            <prop readOnly="True" type="string" name="errorCode"/>
                            <prop readOnly="True" type="string" name="errorMessage"/>
                            <prop readOnly="True" type="dateTime" name="lastCompletionTime"/>
                            <prop readOnly="True" type="dateTime" name="lastStartedTime"/>
                            <prop readOnly="True" type="integer32" name="percentComplete"/>
                            <prop readOnly="True" type="string" name="state">
                              <enum>
                                <item value="&quot;Canceled&quot;"/>
                                <item value="&quot;Cancelling&quot;"/>
                                <item value="&quot;Completed&quot;"/>
                                <item value="&quot;FSScanInProgress&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Idle&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="settings">
                        <prop type="string" name="container" required="True"/>
                        <prop type="string" name="importPrefix">
                          <default value="&quot;/&quot;"/>
                        </prop>
                        <prop type="string" name="loggingContainer" required="True"/>
                      </prop>
                    </prop>
                    <prop type="object" name="maintenanceWindow" required="True">
                      <prop type="string" name="dayOfWeek">
                        <enum>
                          <item value="&quot;Friday&quot;"/>
                          <item value="&quot;Monday&quot;"/>
                          <item value="&quot;Saturday&quot;"/>
                          <item value="&quot;Sunday&quot;"/>
                          <item value="&quot;Thursday&quot;"/>
                          <item value="&quot;Tuesday&quot;"/>
                          <item value="&quot;Wednesday&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="timeOfDayUTC">
                        <format pattern="^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="float32" name="storageCapacityTiB" required="True"/>
                    <prop readOnly="True" type="integer32" name="throughputProvisionedMBps"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="amlFilesystem" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="encryptionSettings">
                  <prop type="object" name="keyEncryptionKey" arg="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey">
                    <prop type="string" name="keyUrl" arg="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.keyUrl" required="True"/>
                    <prop type="object" name="sourceVault" arg="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.sourceVault" required="True">
                      <prop type="string" name="id" arg="$amlFilesystem.properties.encryptionSettings.keyEncryptionKey.sourceVault.id"/>
                    </prop>
                  </prop>
                </prop>
                <prop type="object" name="maintenanceWindow" arg="$amlFilesystem.properties.maintenanceWindow" required="True">
                  <prop type="string" name="dayOfWeek" arg="$amlFilesystem.properties.maintenanceWindow.dayOfWeek">
                    <enum>
                      <item value="&quot;Friday&quot;"/>
                      <item value="&quot;Monday&quot;"/>
                      <item value="&quot;Saturday&quot;"/>
                      <item value="&quot;Sunday&quot;"/>
                      <item value="&quot;Thursday&quot;"/>
                      <item value="&quot;Tuesday&quot;"/>
                      <item value="&quot;Wednesday&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="timeOfDayUTC" arg="$amlFilesystem.properties.maintenanceWindow.timeOfDayUTC">
                    <format pattern="^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"/>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$amlFilesystem.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="amlFilesystems_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}">
          <request method="put">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@AmlFilesystem_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
