<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network manager">
    <command name="show" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkManagerName" options="network-manager-name name n" required="True" idPart="name">
          <help short="The name of the network manager."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkManagers_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}">
          <request method="get">
            <path>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="array<string>" name="networkManagerScopeAccesses" required="True">
                      <item type="string">
                        <enum>
                          <item value="&quot;Connectivity&quot;"/>
                          <item value="&quot;SecurityAdmin&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="object" name="networkManagerScopes" required="True">
                      <prop readOnly="True" type="array<object>" name="crossTenantScopes">
                        <item type="object">
                          <prop readOnly="True" type="array<string>" name="managementGroups">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="subscriptions">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="tenantId"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="managementGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="subscriptions">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkManagerName" options="network-manager-name name n" required="True" idPart="name">
          <help short="The name of the network manager."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="boolean" var="$Query.force" options="force">
          <help short="Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete."/>
        </arg>
      </argGroup>
      <operation operationId="NetworkManagers_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}">
          <request method="delete">
            <path>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="boolean" name="force" arg="$Query.force"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkManagerName" options="network-manager-name name n" required="True" idPart="name">
          <help short="The name of the network manager."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceId" var="$parameters.id" options="id" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}"/>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="A description of the network manager."/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.networkManagerScopeAccesses" options="network-manager-scope-accesses" group="Properties">
          <help short="Scope Access. Available value: SecurityAdmin, Connectivity."/>
          <item type="string">
            <enum>
              <item name="Connectivity" value="&quot;Connectivity&quot;"/>
              <item name="SecurityAdmin" value="&quot;SecurityAdmin&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.networkManagerScopes" options="network-manager-scopes" group="Properties">
          <help short="Scope of Network Manager."/>
          <arg type="array<string>" var="$parameters.properties.networkManagerScopes.managementGroups" options="management-groups">
            <help short="List of management groups."/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$parameters.properties.networkManagerScopes.subscriptions" options="subscriptions">
            <help short="List of subscriptions."/>
            <item type="string"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="NetworkManagers_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}">
          <request method="put">
            <path>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description" arg="$parameters.properties.description"/>
                    <prop type="array<string>" name="networkManagerScopeAccesses" arg="$parameters.properties.networkManagerScopeAccesses" required="True">
                      <item type="string">
                        <enum>
                          <item value="&quot;Connectivity&quot;"/>
                          <item value="&quot;SecurityAdmin&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="object" name="networkManagerScopes" arg="$parameters.properties.networkManagerScopes" required="True">
                      <prop type="array<string>" name="managementGroups" arg="$parameters.properties.networkManagerScopes.managementGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="subscriptions" arg="$parameters.properties.networkManagerScopes.subscriptions">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="array<string>" name="networkManagerScopeAccesses" required="True">
                      <item type="string">
                        <enum>
                          <item value="&quot;Connectivity&quot;"/>
                          <item value="&quot;SecurityAdmin&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="object" name="networkManagerScopes" required="True">
                      <prop readOnly="True" type="array<object>" name="crossTenantScopes">
                        <item type="object">
                          <prop readOnly="True" type="array<string>" name="managementGroups">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="subscriptions">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="tenantId"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="managementGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="subscriptions">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkManagerName" options="network-manager-name name n" required="True" idPart="name">
          <help short="The name of the network manager."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}"/>
        </arg>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="A description of the network manager."/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.networkManagerScopeAccesses" options="network-manager-scope-accesses" group="Properties">
          <help short="Scope Access. Available value: SecurityAdmin, Connectivity."/>
          <item nullable="True" type="string">
            <enum>
              <item name="Connectivity" value="&quot;Connectivity&quot;"/>
              <item name="SecurityAdmin" value="&quot;SecurityAdmin&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.networkManagerScopes" options="network-manager-scopes" group="Properties">
          <help short="Scope of Network Manager."/>
          <arg nullable="True" type="array<string>" var="$parameters.properties.networkManagerScopes.managementGroups" options="management-groups">
            <help short="List of management groups."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.networkManagerScopes.subscriptions" options="subscriptions">
            <help short="List of subscriptions."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="NetworkManagers_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}">
          <request method="get">
            <path>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NetworkManager_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="array<string>" name="networkManagerScopeAccesses" required="True">
                      <item type="string">
                        <enum>
                          <item value="&quot;Connectivity&quot;"/>
                          <item value="&quot;SecurityAdmin&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="object" name="networkManagerScopes" required="True">
                      <prop readOnly="True" type="array<object>" name="crossTenantScopes">
                        <item type="object">
                          <prop readOnly="True" type="array<string>" name="managementGroups">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="subscriptions">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="tenantId"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="managementGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="subscriptions">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="description" arg="$parameters.properties.description"/>
                <prop type="array<string>" name="networkManagerScopeAccesses" arg="$parameters.properties.networkManagerScopeAccesses" required="True">
                  <item type="string">
                    <enum>
                      <item value="&quot;Connectivity&quot;"/>
                      <item value="&quot;SecurityAdmin&quot;"/>
                    </enum>
                  </item>
                </prop>
                <prop type="object" name="networkManagerScopes" arg="$parameters.properties.networkManagerScopes" required="True">
                  <prop type="array<string>" name="managementGroups" arg="$parameters.properties.networkManagerScopes.managementGroups">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="subscriptions" arg="$parameters.properties.networkManagerScopes.subscriptions">
                    <item type="string"/>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="NetworkManagers_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}">
          <request method="put">
            <path>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NetworkManager_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
