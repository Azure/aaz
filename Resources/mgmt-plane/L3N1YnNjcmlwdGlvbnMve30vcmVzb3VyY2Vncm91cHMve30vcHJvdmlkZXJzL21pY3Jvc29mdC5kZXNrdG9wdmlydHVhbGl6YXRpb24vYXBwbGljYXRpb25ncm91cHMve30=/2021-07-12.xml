<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.desktopvirtualization/applicationgroups/{}" version="2021-07-12" swagger="mgmt-plane/desktopvirtualization/ResourceProviders/Microsoft.DesktopVirtualization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGVza3RvcFZpcnR1YWxpemF0aW9uL2FwcGxpY2F0aW9uR3JvdXBzL3thcHBsaWNhdGlvbkdyb3VwTmFtZX0=/V/MjAyMS0wNy0xMg=="/>
  <commandGroup name="desktopvirtualization applicationgroup">
    <command name="show" version="2021-07-12" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.desktopvirtualization/applicationgroups/{}" version="2021-07-12" swagger="mgmt-plane/desktopvirtualization/ResourceProviders/Microsoft.DesktopVirtualization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGVza3RvcFZpcnR1YWxpemF0aW9uL2FwcGxpY2F0aW9uR3JvdXBzL3thcHBsaWNhdGlvbkdyb3VwTmFtZX0=/V/MjAyMS0wNy0xMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.applicationGroupName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the application group"/>
          <format maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ApplicationGroups_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}">
          <request method="get">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-07-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DesktopVirtualization/applicationGroups/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="string" name="kind">
                    <format pattern="^[-\w\._,\(\)]+$"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop type="string" name="managedBy"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="applicationGroupType" required="True">
                      <enum>
                        <item value="&quot;Desktop&quot;"/>
                        <item value="&quot;RemoteApp&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="boolean" name="cloudPcResource"/>
                    <prop type="string" name="description"/>
                    <prop type="string" name="friendlyName"/>
                    <prop type="string" name="hostPoolArmPath" required="True"/>
                    <prop type="object" name="migrationRequest">
                      <prop type="string" name="migrationPath"/>
                      <prop type="string" name="operation">
                        <enum>
                          <item value="&quot;Complete&quot;"/>
                          <item value="&quot;Hide&quot;"/>
                          <item value="&quot;Revoke&quot;"/>
                          <item value="&quot;Start&quot;"/>
                          <item value="&quot;Unhide&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="objectId"/>
                    <prop readOnly="True" type="string" name="workspaceArmPath"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer32" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2021-07-12" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.desktopvirtualization/applicationgroups/{}" version="2021-07-12" swagger="mgmt-plane/desktopvirtualization/ResourceProviders/Microsoft.DesktopVirtualization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGVza3RvcFZpcnR1YWxpemF0aW9uL2FwcGxpY2F0aW9uR3JvdXBzL3thcHBsaWNhdGlvbkdyb3VwTmFtZX0=/V/MjAyMS0wNy0xMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.applicationGroupName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the application group"/>
          <format maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ApplicationGroups_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}">
          <request method="delete">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-07-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2021-07-12" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.desktopvirtualization/applicationgroups/{}" version="2021-07-12" swagger="mgmt-plane/desktopvirtualization/ResourceProviders/Microsoft.DesktopVirtualization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGVza3RvcFZpcnR1YWxpemF0aW9uL2FwcGxpY2F0aW9uR3JvdXBzL3thcHBsaWNhdGlvbkdyb3VwTmFtZX0=/V/MjAyMS0wNy0xMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.applicationGroupName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the application group"/>
          <format maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$applicationGroup.location" options="location l" group="">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="string" var="$applicationGroup.properties.applicationGroupType" options="application-group-type" required="True" group="">
          <help short="Resource type of application group."/>
          <enum>
            <item name="Desktop" value="&quot;Desktop&quot;"/>
            <item name="RemoteApp" value="&quot;RemoteApp&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$applicationGroup.properties.description" options="description" group="">
          <help short="Description of ApplicationGroup."/>
        </arg>
        <arg type="string" var="$applicationGroup.properties.friendlyName" options="friendly-name" group="">
          <help short="Friendly name of application group."/>
        </arg>
        <arg type="string" var="$applicationGroup.properties.hostPoolArmPath" options="host-pool-arm-path" required="True" group="">
          <help short="Host pool arm path of application group."/>
        </arg>
        <arg type="object" var="$applicationGroup.tags" options="tags" group="">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="ApplicationGroup">
        <arg type="object" var="$applicationGroup.identity" options="identity" hide="True" group="ApplicationGroup">
          <help short="identity"/>
          <arg type="string" var="$applicationGroup.identity.type" options="type">
            <help short="The identity type."/>
            <enum>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$applicationGroup.kind" options="kind" hide="True" group="ApplicationGroup">
          <help short="Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."/>
          <format pattern="^[-\w\._,\(\)]+$"/>
        </arg>
        <arg type="string" var="$applicationGroup.managedBy" options="managed-by" hide="True" group="ApplicationGroup">
          <help short="The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."/>
        </arg>
        <arg type="object" var="$applicationGroup.plan" options="plan" hide="True" group="ApplicationGroup">
          <help short="plan"/>
          <arg type="string" var="$applicationGroup.plan.name" options="name" required="True">
            <help short="A user defined name of the 3rd Party Artifact that is being procured."/>
          </arg>
          <arg type="string" var="$applicationGroup.plan.product" options="product" required="True">
            <help short="The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "/>
          </arg>
          <arg type="string" var="$applicationGroup.plan.promotionCode" options="promotion-code">
            <help short="A publisher provided promotion code as provisioned in Data Market for the said product/artifact."/>
          </arg>
          <arg type="string" var="$applicationGroup.plan.publisher" options="publisher" required="True">
            <help short="The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"/>
          </arg>
          <arg type="string" var="$applicationGroup.plan.version" options="version">
            <help short="The version of the desired product/artifact."/>
          </arg>
        </arg>
        <arg type="object" var="$applicationGroup.sku" options="sku" hide="True" group="ApplicationGroup">
          <help short="sku"/>
          <arg type="integer32" var="$applicationGroup.sku.capacity" options="capacity">
            <help short="If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."/>
          </arg>
          <arg type="string" var="$applicationGroup.sku.family" options="family">
            <help short="If the service has different generations of hardware, for the same SKU, then that can be captured here."/>
          </arg>
          <arg type="string" var="$applicationGroup.sku.name" options="name" required="True">
            <help short="The name of the SKU. Ex - P3. It is typically a letter+number code"/>
          </arg>
          <arg type="string" var="$applicationGroup.sku.size" options="size">
            <help short="The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "/>
          </arg>
          <arg type="string" var="$applicationGroup.sku.tier" options="tier">
            <help short="This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Free" value="&quot;Free&quot;"/>
              <item name="Premium" value="&quot;Premium&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$applicationGroup.properties.migrationRequest" options="migration-request" hide="True" group="Properties">
          <help short="The registration info of HostPool."/>
          <arg type="string" var="$applicationGroup.properties.migrationRequest.migrationPath" options="migration-path">
            <help short="The path to the legacy object to migrate."/>
          </arg>
          <arg type="string" var="$applicationGroup.properties.migrationRequest.operation" options="operation">
            <help short="The type of operation for migration."/>
            <enum>
              <item name="Complete" value="&quot;Complete&quot;"/>
              <item name="Hide" value="&quot;Hide&quot;"/>
              <item name="Revoke" value="&quot;Revoke&quot;"/>
              <item name="Start" value="&quot;Start&quot;"/>
              <item name="Unhide" value="&quot;Unhide&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ApplicationGroups_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}">
          <request method="put">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-07-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="applicationGroup" required="True" clientFlatten="True">
                  <prop type="object" name="identity" arg="$applicationGroup.identity">
                    <prop type="string" name="type" arg="$applicationGroup.identity.type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="string" name="kind" arg="$applicationGroup.kind">
                    <format pattern="^[-\w\._,\(\)]+$"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$applicationGroup.location"/>
                  <prop type="string" name="managedBy" arg="$applicationGroup.managedBy"/>
                  <prop type="object" name="plan" arg="$applicationGroup.plan">
                    <prop type="string" name="name" arg="$applicationGroup.plan.name" required="True"/>
                    <prop type="string" name="product" arg="$applicationGroup.plan.product" required="True"/>
                    <prop type="string" name="promotionCode" arg="$applicationGroup.plan.promotionCode"/>
                    <prop type="string" name="publisher" arg="$applicationGroup.plan.publisher" required="True"/>
                    <prop type="string" name="version" arg="$applicationGroup.plan.version"/>
                  </prop>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="applicationGroupType" arg="$applicationGroup.properties.applicationGroupType" required="True">
                      <enum>
                        <item value="&quot;Desktop&quot;"/>
                        <item value="&quot;RemoteApp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description" arg="$applicationGroup.properties.description"/>
                    <prop type="string" name="friendlyName" arg="$applicationGroup.properties.friendlyName"/>
                    <prop type="string" name="hostPoolArmPath" arg="$applicationGroup.properties.hostPoolArmPath" required="True"/>
                    <prop type="object" name="migrationRequest" arg="$applicationGroup.properties.migrationRequest">
                      <prop type="string" name="migrationPath" arg="$applicationGroup.properties.migrationRequest.migrationPath"/>
                      <prop type="string" name="operation" arg="$applicationGroup.properties.migrationRequest.operation">
                        <enum>
                          <item value="&quot;Complete&quot;"/>
                          <item value="&quot;Hide&quot;"/>
                          <item value="&quot;Revoke&quot;"/>
                          <item value="&quot;Start&quot;"/>
                          <item value="&quot;Unhide&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" arg="$applicationGroup.sku">
                    <prop type="integer32" name="capacity" arg="$applicationGroup.sku.capacity"/>
                    <prop type="string" name="family" arg="$applicationGroup.sku.family"/>
                    <prop type="string" name="name" arg="$applicationGroup.sku.name" required="True"/>
                    <prop type="string" name="size" arg="$applicationGroup.sku.size"/>
                    <prop type="string" name="tier" arg="$applicationGroup.sku.tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$applicationGroup.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DesktopVirtualization/applicationGroups/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="string" name="kind">
                    <format pattern="^[-\w\._,\(\)]+$"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop type="string" name="managedBy"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="applicationGroupType" required="True">
                      <enum>
                        <item value="&quot;Desktop&quot;"/>
                        <item value="&quot;RemoteApp&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="boolean" name="cloudPcResource"/>
                    <prop type="string" name="description"/>
                    <prop type="string" name="friendlyName"/>
                    <prop type="string" name="hostPoolArmPath" required="True"/>
                    <prop type="object" name="migrationRequest">
                      <prop type="string" name="migrationPath"/>
                      <prop type="string" name="operation">
                        <enum>
                          <item value="&quot;Complete&quot;"/>
                          <item value="&quot;Hide&quot;"/>
                          <item value="&quot;Revoke&quot;"/>
                          <item value="&quot;Start&quot;"/>
                          <item value="&quot;Unhide&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="objectId"/>
                    <prop readOnly="True" type="string" name="workspaceArmPath"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer32" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2021-07-12" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.desktopvirtualization/applicationgroups/{}" version="2021-07-12" swagger="mgmt-plane/desktopvirtualization/ResourceProviders/Microsoft.DesktopVirtualization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGVza3RvcFZpcnR1YWxpemF0aW9uL2FwcGxpY2F0aW9uR3JvdXBzL3thcHBsaWNhdGlvbkdyb3VwTmFtZX0=/V/MjAyMS0wNy0xMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.applicationGroupName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the application group"/>
          <format maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$applicationGroup.properties.applicationGroupType" options="application-group-type" group="">
          <help short="Resource type of application group."/>
          <enum>
            <item name="Desktop" value="&quot;Desktop&quot;"/>
            <item name="RemoteApp" value="&quot;RemoteApp&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$applicationGroup.properties.description" options="description" group="">
          <help short="Description of ApplicationGroup."/>
        </arg>
        <arg nullable="True" type="string" var="$applicationGroup.properties.friendlyName" options="friendly-name" group="">
          <help short="Friendly name of application group."/>
        </arg>
        <arg type="string" var="$applicationGroup.properties.hostPoolArmPath" options="host-pool-arm-path" group="">
          <help short="Host pool arm path of application group."/>
        </arg>
        <arg nullable="True" type="object" var="$applicationGroup.tags" options="tags" group="">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="ApplicationGroup">
        <arg nullable="True" type="object" var="$applicationGroup.identity" options="identity" hide="True" group="ApplicationGroup">
          <help short="identity"/>
          <arg nullable="True" type="string" var="$applicationGroup.identity.type" options="type">
            <help short="The identity type."/>
            <enum>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$applicationGroup.managedBy" options="managed-by" hide="True" group="ApplicationGroup">
          <help short="The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource."/>
        </arg>
        <arg nullable="True" type="object" var="$applicationGroup.plan" options="plan" hide="True" group="ApplicationGroup">
          <help short="plan"/>
          <arg type="string" var="$applicationGroup.plan.name" options="name">
            <help short="A user defined name of the 3rd Party Artifact that is being procured."/>
          </arg>
          <arg type="string" var="$applicationGroup.plan.product" options="product">
            <help short="The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "/>
          </arg>
          <arg nullable="True" type="string" var="$applicationGroup.plan.promotionCode" options="promotion-code">
            <help short="A publisher provided promotion code as provisioned in Data Market for the said product/artifact."/>
          </arg>
          <arg type="string" var="$applicationGroup.plan.publisher" options="publisher">
            <help short="The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"/>
          </arg>
          <arg nullable="True" type="string" var="$applicationGroup.plan.version" options="version">
            <help short="The version of the desired product/artifact."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$applicationGroup.sku" options="sku" hide="True" group="ApplicationGroup">
          <help short="sku"/>
          <arg nullable="True" type="integer32" var="$applicationGroup.sku.capacity" options="capacity">
            <help short="If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."/>
          </arg>
          <arg nullable="True" type="string" var="$applicationGroup.sku.family" options="family">
            <help short="If the service has different generations of hardware, for the same SKU, then that can be captured here."/>
          </arg>
          <arg type="string" var="$applicationGroup.sku.name" options="name">
            <help short="The name of the SKU. Ex - P3. It is typically a letter+number code"/>
          </arg>
          <arg nullable="True" type="string" var="$applicationGroup.sku.size" options="size">
            <help short="The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "/>
          </arg>
          <arg nullable="True" type="string" var="$applicationGroup.sku.tier" options="tier">
            <help short="This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Free" value="&quot;Free&quot;"/>
              <item name="Premium" value="&quot;Premium&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$applicationGroup.properties.migrationRequest" options="migration-request" hide="True" group="Properties">
          <help short="The registration info of HostPool."/>
          <arg nullable="True" type="string" var="$applicationGroup.properties.migrationRequest.migrationPath" options="migration-path">
            <help short="The path to the legacy object to migrate."/>
          </arg>
          <arg nullable="True" type="string" var="$applicationGroup.properties.migrationRequest.operation" options="operation">
            <help short="The type of operation for migration."/>
            <enum>
              <item name="Complete" value="&quot;Complete&quot;"/>
              <item name="Hide" value="&quot;Hide&quot;"/>
              <item name="Revoke" value="&quot;Revoke&quot;"/>
              <item name="Start" value="&quot;Start&quot;"/>
              <item name="Unhide" value="&quot;Unhide&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ApplicationGroups_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}">
          <request method="get">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-07-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ApplicationGroup_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DesktopVirtualization/applicationGroups/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="string" name="kind">
                    <format pattern="^[-\w\._,\(\)]+$"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop type="string" name="managedBy"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="applicationGroupType" required="True">
                      <enum>
                        <item value="&quot;Desktop&quot;"/>
                        <item value="&quot;RemoteApp&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="boolean" name="cloudPcResource"/>
                    <prop type="string" name="description"/>
                    <prop type="string" name="friendlyName"/>
                    <prop type="string" name="hostPoolArmPath" required="True"/>
                    <prop type="object" name="migrationRequest">
                      <prop type="string" name="migrationPath"/>
                      <prop type="string" name="operation">
                        <enum>
                          <item value="&quot;Complete&quot;"/>
                          <item value="&quot;Hide&quot;"/>
                          <item value="&quot;Revoke&quot;"/>
                          <item value="&quot;Start&quot;"/>
                          <item value="&quot;Unhide&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="objectId"/>
                    <prop readOnly="True" type="string" name="workspaceArmPath"/>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="integer32" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="applicationGroup" required="True" clientFlatten="True">
              <prop type="object" name="identity" arg="$applicationGroup.identity">
                <prop type="string" name="type" arg="$applicationGroup.identity.type">
                  <enum>
                    <item value="&quot;SystemAssigned&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="string" name="managedBy" arg="$applicationGroup.managedBy"/>
              <prop type="object" name="plan" arg="$applicationGroup.plan">
                <prop type="string" name="name" arg="$applicationGroup.plan.name" required="True"/>
                <prop type="string" name="product" arg="$applicationGroup.plan.product" required="True"/>
                <prop type="string" name="promotionCode" arg="$applicationGroup.plan.promotionCode"/>
                <prop type="string" name="publisher" arg="$applicationGroup.plan.publisher" required="True"/>
                <prop type="string" name="version" arg="$applicationGroup.plan.version"/>
              </prop>
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="string" name="applicationGroupType" arg="$applicationGroup.properties.applicationGroupType" required="True">
                  <enum>
                    <item value="&quot;Desktop&quot;"/>
                    <item value="&quot;RemoteApp&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="description" arg="$applicationGroup.properties.description"/>
                <prop type="string" name="friendlyName" arg="$applicationGroup.properties.friendlyName"/>
                <prop type="string" name="hostPoolArmPath" arg="$applicationGroup.properties.hostPoolArmPath" required="True"/>
                <prop type="object" name="migrationRequest" arg="$applicationGroup.properties.migrationRequest">
                  <prop type="string" name="migrationPath" arg="$applicationGroup.properties.migrationRequest.migrationPath"/>
                  <prop type="string" name="operation" arg="$applicationGroup.properties.migrationRequest.operation">
                    <enum>
                      <item value="&quot;Complete&quot;"/>
                      <item value="&quot;Hide&quot;"/>
                      <item value="&quot;Revoke&quot;"/>
                      <item value="&quot;Start&quot;"/>
                      <item value="&quot;Unhide&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="sku" arg="$applicationGroup.sku">
                <prop type="integer32" name="capacity" arg="$applicationGroup.sku.capacity"/>
                <prop type="string" name="family" arg="$applicationGroup.sku.family"/>
                <prop type="string" name="name" arg="$applicationGroup.sku.name" required="True"/>
                <prop type="string" name="size" arg="$applicationGroup.sku.size"/>
                <prop type="string" name="tier" arg="$applicationGroup.sku.tier">
                  <enum>
                    <item value="&quot;Basic&quot;"/>
                    <item value="&quot;Free&quot;"/>
                    <item value="&quot;Premium&quot;"/>
                    <item value="&quot;Standard&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$applicationGroup.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ApplicationGroups_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}">
          <request method="put">
            <path>
              <param type="string" name="applicationGroupName" arg="$Path.applicationGroupName" required="True">
                <format maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-07-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ApplicationGroup_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
