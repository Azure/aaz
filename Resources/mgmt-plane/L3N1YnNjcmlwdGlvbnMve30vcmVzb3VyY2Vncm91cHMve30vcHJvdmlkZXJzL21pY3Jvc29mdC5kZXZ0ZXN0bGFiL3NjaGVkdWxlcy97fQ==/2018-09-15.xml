<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/schedules/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9zY2hlZHVsZXMve25hbWV9/V/MjAxOC0wOS0xNQ=="/>
  <commandGroup name="lab global-schedule">
    <command name="show" version="2018-09-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/schedules/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9zY2hlZHVsZXMve25hbWV9/V/MjAxOC0wOS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the schedule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="Specify the $expand query. Example: 'properties($select=status)'"/>
        </arg>
      </argGroup>
      <operation operationId="GlobalSchedules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}">
          <request method="get">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="dateTime" name="createdDate"/>
                    <prop type="object" name="dailyRecurrence">
                      <prop type="string" name="time"/>
                    </prop>
                    <prop type="object" name="hourlyRecurrence">
                      <prop type="integer32" name="minute"/>
                    </prop>
                    <prop type="object" name="notificationSettings">
                      <prop type="string" name="emailRecipient"/>
                      <prop type="string" name="notificationLocale"/>
                      <prop type="string" name="status">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="timeInMinutes"/>
                      <prop type="string" name="webhookUrl"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="status">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetResourceId"/>
                    <prop type="string" name="taskType"/>
                    <prop type="string" name="timeZoneId"/>
                    <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                    <prop type="object" name="weeklyRecurrence">
                      <prop type="string" name="time"/>
                      <prop type="array<string>" name="weekdays">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2018-09-15" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/schedules/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9zY2hlZHVsZXMve25hbWV9/V/MjAxOC0wOS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the schedule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="GlobalSchedules_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}">
          <request method="delete">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2018-09-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/schedules/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9zY2hlZHVsZXMve25hbWV9/V/MjAxOC0wOS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the schedule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$schedule.properties.dailyRecurrence" options="daily-recurrence" group="Properties">
          <help short="If the schedule will occur once each day of the week, specify the daily recurrence."/>
          <arg type="string" var="$schedule.properties.dailyRecurrence.time" options="time">
            <help short="The time of day the schedule will occur."/>
          </arg>
        </arg>
        <arg type="object" var="$schedule.properties.hourlyRecurrence" options="hourly-recurrence" group="Properties">
          <help short="If the schedule will occur multiple times a day, specify the hourly recurrence."/>
          <arg type="integer32" var="$schedule.properties.hourlyRecurrence.minute" options="minute">
            <help short="Minutes of the hour the schedule will run."/>
          </arg>
        </arg>
        <arg type="object" var="$schedule.properties.notificationSettings" options="notification-settings" group="Properties">
          <help short="Notification settings."/>
          <arg type="string" var="$schedule.properties.notificationSettings.emailRecipient" options="email-recipient">
            <help short="The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."/>
          </arg>
          <arg type="string" var="$schedule.properties.notificationSettings.notificationLocale" options="notification-locale">
            <help short="The locale to use when sending a notification (fallback for unsupported languages is EN)."/>
          </arg>
          <arg type="string" var="$schedule.properties.notificationSettings.status" options="status">
            <help short="If notifications are enabled for this schedule (i.e. Enabled, Disabled)."/>
            <default value="&quot;Disabled&quot;"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="integer32" var="$schedule.properties.notificationSettings.timeInMinutes" options="time-in-minutes">
            <help short="Time in minutes before event at which notification will be sent."/>
          </arg>
          <arg type="string" var="$schedule.properties.notificationSettings.webhookUrl" options="webhook-url">
            <help short="The webhook URL to which the notification will be sent."/>
          </arg>
        </arg>
        <arg type="string" var="$schedule.properties.status" options="status" group="Properties">
          <help short="The status of the schedule (i.e. Enabled, Disabled)"/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$schedule.properties.targetResourceId" options="target-resource-id" group="Properties">
          <help short="The resource ID to which the schedule belongs"/>
        </arg>
        <arg type="string" var="$schedule.properties.taskType" options="task-type" group="Properties">
          <help short="The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."/>
        </arg>
        <arg type="string" var="$schedule.properties.timeZoneId" options="time-zone-id" group="Properties">
          <help short="The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"/>
        </arg>
        <arg type="object" var="$schedule.properties.weeklyRecurrence" options="weekly-recurrence" group="Properties">
          <help short="If the schedule will occur only some days of the week, specify the weekly recurrence."/>
          <arg type="string" var="$schedule.properties.weeklyRecurrence.time" options="time">
            <help short="The time of the day the schedule will occur."/>
          </arg>
          <arg type="array<string>" var="$schedule.properties.weeklyRecurrence.weekdays" options="weekdays">
            <help short="The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.)."/>
            <item type="string"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Schedule">
        <arg type="ResourceLocation" var="$schedule.location" options="location l" group="Schedule">
          <help short="The location of the resource."/>
        </arg>
        <arg type="object" var="$schedule.tags" options="tags" group="Schedule">
          <help short="The tags of the resource."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="GlobalSchedules_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}">
          <request method="put">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="schedule" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$schedule.location"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="dailyRecurrence" arg="$schedule.properties.dailyRecurrence">
                      <prop type="string" name="time" arg="$schedule.properties.dailyRecurrence.time"/>
                    </prop>
                    <prop type="object" name="hourlyRecurrence" arg="$schedule.properties.hourlyRecurrence">
                      <prop type="integer32" name="minute" arg="$schedule.properties.hourlyRecurrence.minute"/>
                    </prop>
                    <prop type="object" name="notificationSettings" arg="$schedule.properties.notificationSettings">
                      <prop type="string" name="emailRecipient" arg="$schedule.properties.notificationSettings.emailRecipient"/>
                      <prop type="string" name="notificationLocale" arg="$schedule.properties.notificationSettings.notificationLocale"/>
                      <prop type="string" name="status" arg="$schedule.properties.notificationSettings.status">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="timeInMinutes" arg="$schedule.properties.notificationSettings.timeInMinutes"/>
                      <prop type="string" name="webhookUrl" arg="$schedule.properties.notificationSettings.webhookUrl"/>
                    </prop>
                    <prop type="string" name="status" arg="$schedule.properties.status">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetResourceId" arg="$schedule.properties.targetResourceId"/>
                    <prop type="string" name="taskType" arg="$schedule.properties.taskType"/>
                    <prop type="string" name="timeZoneId" arg="$schedule.properties.timeZoneId"/>
                    <prop type="object" name="weeklyRecurrence" arg="$schedule.properties.weeklyRecurrence">
                      <prop type="string" name="time" arg="$schedule.properties.weeklyRecurrence.time"/>
                      <prop type="array<string>" name="weekdays" arg="$schedule.properties.weeklyRecurrence.weekdays">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$schedule.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="dateTime" name="createdDate"/>
                    <prop type="object" name="dailyRecurrence">
                      <prop type="string" name="time"/>
                    </prop>
                    <prop type="object" name="hourlyRecurrence">
                      <prop type="integer32" name="minute"/>
                    </prop>
                    <prop type="object" name="notificationSettings">
                      <prop type="string" name="emailRecipient"/>
                      <prop type="string" name="notificationLocale"/>
                      <prop type="string" name="status">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="timeInMinutes"/>
                      <prop type="string" name="webhookUrl"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="status">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetResourceId"/>
                    <prop type="string" name="taskType"/>
                    <prop type="string" name="timeZoneId"/>
                    <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                    <prop type="object" name="weeklyRecurrence">
                      <prop type="string" name="time"/>
                      <prop type="array<string>" name="weekdays">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2018-09-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/schedules/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9zY2hlZHVsZXMve25hbWV9/V/MjAxOC0wOS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the schedule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$schedule.properties.dailyRecurrence" options="daily-recurrence" group="Properties">
          <help short="If the schedule will occur once each day of the week, specify the daily recurrence."/>
          <arg nullable="True" type="string" var="$schedule.properties.dailyRecurrence.time" options="time">
            <help short="The time of day the schedule will occur."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$schedule.properties.hourlyRecurrence" options="hourly-recurrence" group="Properties">
          <help short="If the schedule will occur multiple times a day, specify the hourly recurrence."/>
          <arg nullable="True" type="integer32" var="$schedule.properties.hourlyRecurrence.minute" options="minute">
            <help short="Minutes of the hour the schedule will run."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$schedule.properties.notificationSettings" options="notification-settings" group="Properties">
          <help short="Notification settings."/>
          <arg nullable="True" type="string" var="$schedule.properties.notificationSettings.emailRecipient" options="email-recipient">
            <help short="The email recipient to send notifications to (can be a list of semi-colon separated email addresses)."/>
          </arg>
          <arg nullable="True" type="string" var="$schedule.properties.notificationSettings.notificationLocale" options="notification-locale">
            <help short="The locale to use when sending a notification (fallback for unsupported languages is EN)."/>
          </arg>
          <arg nullable="True" type="string" var="$schedule.properties.notificationSettings.status" options="status">
            <help short="If notifications are enabled for this schedule (i.e. Enabled, Disabled)."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="integer32" var="$schedule.properties.notificationSettings.timeInMinutes" options="time-in-minutes">
            <help short="Time in minutes before event at which notification will be sent."/>
          </arg>
          <arg nullable="True" type="string" var="$schedule.properties.notificationSettings.webhookUrl" options="webhook-url">
            <help short="The webhook URL to which the notification will be sent."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$schedule.properties.status" options="status" group="Properties">
          <help short="The status of the schedule (i.e. Enabled, Disabled)"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$schedule.properties.targetResourceId" options="target-resource-id" group="Properties">
          <help short="The resource ID to which the schedule belongs"/>
        </arg>
        <arg nullable="True" type="string" var="$schedule.properties.taskType" options="task-type" group="Properties">
          <help short="The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart)."/>
        </arg>
        <arg nullable="True" type="string" var="$schedule.properties.timeZoneId" options="time-zone-id" group="Properties">
          <help short="The time zone ID (e.g. China Standard Time, Greenland Standard Time, Pacific Standard time, etc.). The possible values for this property can be found in `IReadOnlyCollection<string> TimeZoneConverter.TZConvert.KnownWindowsTimeZoneIds` (https://github.com/mattjohnsonpint/TimeZoneConverter/blob/main/README.md)"/>
        </arg>
        <arg nullable="True" type="object" var="$schedule.properties.weeklyRecurrence" options="weekly-recurrence" group="Properties">
          <help short="If the schedule will occur only some days of the week, specify the weekly recurrence."/>
          <arg nullable="True" type="string" var="$schedule.properties.weeklyRecurrence.time" options="time">
            <help short="The time of the day the schedule will occur."/>
          </arg>
          <arg nullable="True" type="array<string>" var="$schedule.properties.weeklyRecurrence.weekdays" options="weekdays">
            <help short="The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.)."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Schedule">
        <arg nullable="True" type="ResourceLocation" var="$schedule.location" options="location l" group="Schedule">
          <help short="The location of the resource."/>
        </arg>
        <arg nullable="True" type="object" var="$schedule.tags" options="tags" group="Schedule">
          <help short="The tags of the resource."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="GlobalSchedules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}">
          <request method="get">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Schedule_read">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="dateTime" name="createdDate"/>
                    <prop type="object" name="dailyRecurrence">
                      <prop type="string" name="time"/>
                    </prop>
                    <prop type="object" name="hourlyRecurrence">
                      <prop type="integer32" name="minute"/>
                    </prop>
                    <prop type="object" name="notificationSettings">
                      <prop type="string" name="emailRecipient"/>
                      <prop type="string" name="notificationLocale"/>
                      <prop type="string" name="status">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="timeInMinutes"/>
                      <prop type="string" name="webhookUrl"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="status">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetResourceId"/>
                    <prop type="string" name="taskType"/>
                    <prop type="string" name="timeZoneId"/>
                    <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                    <prop type="object" name="weeklyRecurrence">
                      <prop type="string" name="time"/>
                      <prop type="array<string>" name="weekdays">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="schedule" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$schedule.location"/>
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="object" name="dailyRecurrence" arg="$schedule.properties.dailyRecurrence">
                  <prop type="string" name="time" arg="$schedule.properties.dailyRecurrence.time"/>
                </prop>
                <prop type="object" name="hourlyRecurrence" arg="$schedule.properties.hourlyRecurrence">
                  <prop type="integer32" name="minute" arg="$schedule.properties.hourlyRecurrence.minute"/>
                </prop>
                <prop type="object" name="notificationSettings" arg="$schedule.properties.notificationSettings">
                  <prop type="string" name="emailRecipient" arg="$schedule.properties.notificationSettings.emailRecipient"/>
                  <prop type="string" name="notificationLocale" arg="$schedule.properties.notificationSettings.notificationLocale"/>
                  <prop type="string" name="status" arg="$schedule.properties.notificationSettings.status">
                    <default value="&quot;Disabled&quot;"/>
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                  <prop type="integer32" name="timeInMinutes" arg="$schedule.properties.notificationSettings.timeInMinutes"/>
                  <prop type="string" name="webhookUrl" arg="$schedule.properties.notificationSettings.webhookUrl"/>
                </prop>
                <prop type="string" name="status" arg="$schedule.properties.status">
                  <default value="&quot;Disabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="targetResourceId" arg="$schedule.properties.targetResourceId"/>
                <prop type="string" name="taskType" arg="$schedule.properties.taskType"/>
                <prop type="string" name="timeZoneId" arg="$schedule.properties.timeZoneId"/>
                <prop type="object" name="weeklyRecurrence" arg="$schedule.properties.weeklyRecurrence">
                  <prop type="string" name="time" arg="$schedule.properties.weeklyRecurrence.time"/>
                  <prop type="array<string>" name="weekdays" arg="$schedule.properties.weeklyRecurrence.weekdays">
                    <item type="string"/>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$schedule.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="GlobalSchedules_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}">
          <request method="put">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Schedule_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
