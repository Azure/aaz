<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridnetwork/publishers/{}/networkservicedesigngroups/{}/networkservicedesignversions/{}" version="2023-09-01" swagger="mgmt-plane/hybridnetwork/ResourceProviders/Microsoft.HybridNetwork/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkTmV0d29yay9wdWJsaXNoZXJzL3twdWJsaXNoZXJOYW1lfS9uZXR3b3JrU2VydmljZURlc2lnbkdyb3Vwcy97bmV0d29ya1NlcnZpY2VEZXNpZ25Hcm91cE5hbWV9L25ldHdvcmtTZXJ2aWNlRGVzaWduVmVyc2lvbnMve25ldHdvcmtTZXJ2aWNlRGVzaWduVmVyc2lvbk5hbWV9/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="aosm publisher network-service-design version">
    <command name="show" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridnetwork/publishers/{}/networkservicedesigngroups/{}/networkservicedesignversions/{}" version="2023-09-01" swagger="mgmt-plane/hybridnetwork/ResourceProviders/Microsoft.HybridNetwork/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkTmV0d29yay9wdWJsaXNoZXJzL3twdWJsaXNoZXJOYW1lfS9uZXR3b3JrU2VydmljZURlc2lnbkdyb3Vwcy97bmV0d29ya1NlcnZpY2VEZXNpZ25Hcm91cE5hbWV9L25ldHdvcmtTZXJ2aWNlRGVzaWduVmVyc2lvbnMve25ldHdvcmtTZXJ2aWNlRGVzaWduVmVyc2lvbk5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkServiceDesignGroupName" options="group-name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the network service design group."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.networkServiceDesignVersionName" options="version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the network service design version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html."/>
          <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.publisherName" options="publisher-name" required="True" idPart="name">
          <help short="The name of the publisher."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkServiceDesignVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/networkServiceDesignVersions/{networkServiceDesignVersionName}">
          <request method="get">
            <path>
              <param type="string" name="networkServiceDesignGroupName" arg="$Path.networkServiceDesignGroupName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="networkServiceDesignVersionName" arg="$Path.networkServiceDesignVersionName" required="True">
                <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
              </param>
              <param type="string" name="publisherName" arg="$Path.publisherName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridNetwork/publishers/{}/networkServiceDesignGroups/{}/networkServiceDesignVersions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="configurationGroupSchemaReferences">
                      <additionalProp>
                        <item type="object" cls="ReferencedResource_read">
                          <prop type="string" name="id"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="nfvisFromSite">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="string" name="type"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Converging&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="resourceElementTemplates" identifiers="name">
                      <item type="object">
                        <prop type="object" name="dependsOnProfile">
                          <prop type="array<string>" name="installDependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="uninstallDependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="updateDependsOn">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;ArmResourceDefinition&quot;"/>
                            <item value="&quot;NetworkFunctionDefinition&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="type" value="ArmResourceDefinition">
                          <prop type="object" name="configuration" cls="ArmResourceDefinitionResourceElementTemplate_read">
                            <prop type="object" name="artifactProfile">
                              <prop type="string" name="artifactName"/>
                              <prop type="@ReferencedResource_read" name="artifactStoreReference"/>
                              <prop type="string" name="artifactVersion"/>
                            </prop>
                            <prop type="string" name="parameterValues"/>
                            <prop type="string" name="templateType">
                              <enum>
                                <item value="&quot;ArmTemplate&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </discriminator>
                        <discriminator property="type" value="NetworkFunctionDefinition">
                          <prop type="@ArmResourceDefinitionResourceElementTemplate_read" name="configuration"/>
                        </discriminator>
                      </item>
                    </prop>
                    <prop type="string" name="versionState">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Deprecated&quot;"/>
                        <item value="&quot;Preview&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridnetwork/publishers/{}/networkservicedesigngroups/{}/networkservicedesignversions/{}" version="2023-09-01" swagger="mgmt-plane/hybridnetwork/ResourceProviders/Microsoft.HybridNetwork/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkTmV0d29yay9wdWJsaXNoZXJzL3twdWJsaXNoZXJOYW1lfS9uZXR3b3JrU2VydmljZURlc2lnbkdyb3Vwcy97bmV0d29ya1NlcnZpY2VEZXNpZ25Hcm91cE5hbWV9L25ldHdvcmtTZXJ2aWNlRGVzaWduVmVyc2lvbnMve25ldHdvcmtTZXJ2aWNlRGVzaWduVmVyc2lvbk5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkServiceDesignGroupName" options="group-name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the network service design group."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.networkServiceDesignVersionName" options="version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the network service design version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html."/>
          <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.publisherName" options="publisher-name" required="True" idPart="name">
          <help short="The name of the publisher."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkServiceDesignVersions_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/networkServiceDesignVersions/{networkServiceDesignVersionName}">
          <request method="delete">
            <path>
              <param type="string" name="networkServiceDesignGroupName" arg="$Path.networkServiceDesignGroupName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="networkServiceDesignVersionName" arg="$Path.networkServiceDesignVersionName" required="True">
                <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
              </param>
              <param type="string" name="publisherName" arg="$Path.publisherName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridnetwork/publishers/{}/networkservicedesigngroups/{}/networkservicedesignversions/{}" version="2023-09-01" swagger="mgmt-plane/hybridnetwork/ResourceProviders/Microsoft.HybridNetwork/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkTmV0d29yay9wdWJsaXNoZXJzL3twdWJsaXNoZXJOYW1lfS9uZXR3b3JrU2VydmljZURlc2lnbkdyb3Vwcy97bmV0d29ya1NlcnZpY2VEZXNpZ25Hcm91cE5hbWV9L25ldHdvcmtTZXJ2aWNlRGVzaWduVmVyc2lvbnMve25ldHdvcmtTZXJ2aWNlRGVzaWduVmVyc2lvbk5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkServiceDesignGroupName" options="group-name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the network service design group."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.networkServiceDesignVersionName" options="version-name" required="True" group="" idPart="child_name_2">
          <help short="The name of the network service design version. The name should conform to the SemVer 2.0.0 specification: https://semver.org/spec/v2.0.0.html."/>
          <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
        </arg>
        <arg type="string" var="$Path.publisherName" options="publisher-name" required="True" idPart="name">
          <help short="The name of the publisher."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.configurationGroupSchemaReferences" options="configuration-group-schema-references" group="Properties">
          <help short="The configuration schemas to used to define the values."/>
          <additionalProp>
            <item type="object" cls="ReferencedResource_create">
              <arg type="string" var="@ReferencedResource_create.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="The network service design version description."/>
        </arg>
        <arg type="object" var="$parameters.properties.nfvisFromSite" options="nfvis-from-site" group="Properties">
          <help short="The nfvis from the site."/>
          <additionalProp>
            <item type="object">
              <arg type="string" var="$parameters.properties.nfvisFromSite{}.name" options="name">
                <help short="The nfvi name."/>
              </arg>
              <arg type="string" var="$parameters.properties.nfvisFromSite{}.type" options="type">
                <help short="The nfvi type."/>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="array<object>" var="$parameters.properties.resourceElementTemplates" options="resource-element-templates" group="Properties">
          <help short="List of resource element template"/>
          <item type="object">
            <arg type="object" var="$parameters.properties.resourceElementTemplates[].ArmResourceDefinition" options="arm-resource-definition">
              <arg type="object" var="$parameters.properties.resourceElementTemplates[].ArmResourceDefinition.configuration" options="configuration" cls="ArmResourceDefinitionResourceElementTemplate_create">
                <help short="The resource element template type."/>
                <arg type="object" var="@ArmResourceDefinitionResourceElementTemplate_create.artifactProfile" options="artifact-profile">
                  <help short="Artifact profile properties."/>
                  <arg type="string" var="@ArmResourceDefinitionResourceElementTemplate_create.artifactProfile.artifactName" options="artifact-name">
                    <help short="Artifact name."/>
                  </arg>
                  <arg type="@ReferencedResource_create" var="@ArmResourceDefinitionResourceElementTemplate_create.artifactProfile.artifactStoreReference" options="artifact-store-reference">
                    <help short="The artifact store resource id"/>
                  </arg>
                  <arg type="string" var="@ArmResourceDefinitionResourceElementTemplate_create.artifactProfile.artifactVersion" options="artifact-version">
                    <help short="Artifact version."/>
                  </arg>
                </arg>
                <arg type="string" var="@ArmResourceDefinitionResourceElementTemplate_create.parameterValues" options="parameter-values">
                  <help short="Name and value pairs that define the parameter values. It can be  a well formed escaped JSON string."/>
                </arg>
                <arg type="string" var="@ArmResourceDefinitionResourceElementTemplate_create.templateType" options="template-type">
                  <help short="The template type."/>
                  <enum>
                    <item name="ArmTemplate" value="&quot;ArmTemplate&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.resourceElementTemplates[].NetworkFunctionDefinition" options="network-function-definition">
              <arg type="@ArmResourceDefinitionResourceElementTemplate_create" var="$parameters.properties.resourceElementTemplates[].NetworkFunctionDefinition.configuration" options="configuration">
                <help short="The resource element template type."/>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.resourceElementTemplates[].dependsOnProfile" options="depends-on-profile">
              <help short="The depends on profile."/>
              <arg type="array<string>" var="$parameters.properties.resourceElementTemplates[].dependsOnProfile.installDependsOn" options="install-depends-on">
                <help short="Application installation operation dependency."/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="$parameters.properties.resourceElementTemplates[].dependsOnProfile.uninstallDependsOn" options="uninstall-depends-on">
                <help short="Application deletion operation dependency."/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="$parameters.properties.resourceElementTemplates[].dependsOnProfile.updateDependsOn" options="update-depends-on">
                <help short="Application update operation dependency."/>
                <item type="string"/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.resourceElementTemplates[].name" options="name">
              <help short="Name of the resource element template."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="NetworkServiceDesignVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridNetwork/publishers/{publisherName}/networkServiceDesignGroups/{networkServiceDesignGroupName}/networkServiceDesignVersions/{networkServiceDesignVersionName}">
          <request method="put">
            <path>
              <param type="string" name="networkServiceDesignGroupName" arg="$Path.networkServiceDesignGroupName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="networkServiceDesignVersionName" arg="$Path.networkServiceDesignVersionName" required="True">
                <format pattern="^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$" maxLength="64"/>
              </param>
              <param type="string" name="publisherName" arg="$Path.publisherName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9_-]*$" maxLength="64"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="configurationGroupSchemaReferences" arg="$parameters.properties.configurationGroupSchemaReferences">
                      <additionalProp>
                        <item type="object" cls="ReferencedResource_create">
                          <prop type="string" name="id" arg="@ReferencedResource_create.id"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="description" arg="$parameters.properties.description"/>
                    <prop type="object" name="nfvisFromSite" arg="$parameters.properties.nfvisFromSite">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="name" arg="$parameters.properties.nfvisFromSite{}.name"/>
                          <prop type="string" name="type" arg="$parameters.properties.nfvisFromSite{}.type"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="resourceElementTemplates" arg="$parameters.properties.resourceElementTemplates" identifiers="name">
                      <item type="object">
                        <prop type="object" name="dependsOnProfile" arg="$parameters.properties.resourceElementTemplates[].dependsOnProfile">
                          <prop type="array<string>" name="installDependsOn" arg="$parameters.properties.resourceElementTemplates[].dependsOnProfile.installDependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="uninstallDependsOn" arg="$parameters.properties.resourceElementTemplates[].dependsOnProfile.uninstallDependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="updateDependsOn" arg="$parameters.properties.resourceElementTemplates[].dependsOnProfile.updateDependsOn">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.resourceElementTemplates[].name"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item arg="$parameters.properties.resourceElementTemplates[].ArmResourceDefinition" value="&quot;ArmResourceDefinition&quot;"/>
                            <item arg="$parameters.properties.resourceElementTemplates[].NetworkFunctionDefinition" value="&quot;NetworkFunctionDefinition&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="type" value="ArmResourceDefinition">
                          <prop type="object" name="configuration" arg="$parameters.properties.resourceElementTemplates[].ArmResourceDefinition.configuration" cls="ArmResourceDefinitionResourceElementTemplate_create">
                            <prop type="object" name="artifactProfile" arg="@ArmResourceDefinitionResourceElementTemplate_create.artifactProfile">
                              <prop type="string" name="artifactName" arg="@ArmResourceDefinitionResourceElementTemplate_create.artifactProfile.artifactName"/>
                              <prop type="@ReferencedResource_create" name="artifactStoreReference" arg="@ArmResourceDefinitionResourceElementTemplate_create.artifactProfile.artifactStoreReference"/>
                              <prop type="string" name="artifactVersion" arg="@ArmResourceDefinitionResourceElementTemplate_create.artifactProfile.artifactVersion"/>
                            </prop>
                            <prop type="string" name="parameterValues" arg="@ArmResourceDefinitionResourceElementTemplate_create.parameterValues"/>
                            <prop type="string" name="templateType" arg="@ArmResourceDefinitionResourceElementTemplate_create.templateType">
                              <enum>
                                <item value="&quot;ArmTemplate&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </discriminator>
                        <discriminator property="type" value="NetworkFunctionDefinition">
                          <prop type="@ArmResourceDefinitionResourceElementTemplate_create" name="configuration" arg="$parameters.properties.resourceElementTemplates[].NetworkFunctionDefinition.configuration"/>
                        </discriminator>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridNetwork/publishers/{}/networkServiceDesignGroups/{}/networkServiceDesignVersions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="configurationGroupSchemaReferences">
                      <additionalProp>
                        <item type="object" cls="ReferencedResource_read">
                          <prop type="string" name="id"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="object" name="nfvisFromSite">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="string" name="type"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Converging&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="resourceElementTemplates" identifiers="name">
                      <item type="object">
                        <prop type="object" name="dependsOnProfile">
                          <prop type="array<string>" name="installDependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="uninstallDependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="updateDependsOn">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;ArmResourceDefinition&quot;"/>
                            <item value="&quot;NetworkFunctionDefinition&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="type" value="ArmResourceDefinition">
                          <prop type="object" name="configuration" cls="ArmResourceDefinitionResourceElementTemplate_read">
                            <prop type="object" name="artifactProfile">
                              <prop type="string" name="artifactName"/>
                              <prop type="@ReferencedResource_read" name="artifactStoreReference"/>
                              <prop type="string" name="artifactVersion"/>
                            </prop>
                            <prop type="string" name="parameterValues"/>
                            <prop type="string" name="templateType">
                              <enum>
                                <item value="&quot;ArmTemplate&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </discriminator>
                        <discriminator property="type" value="NetworkFunctionDefinition">
                          <prop type="@ArmResourceDefinitionResourceElementTemplate_read" name="configuration"/>
                        </discriminator>
                      </item>
                    </prop>
                    <prop type="string" name="versionState">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Deprecated&quot;"/>
                        <item value="&quot;Preview&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
