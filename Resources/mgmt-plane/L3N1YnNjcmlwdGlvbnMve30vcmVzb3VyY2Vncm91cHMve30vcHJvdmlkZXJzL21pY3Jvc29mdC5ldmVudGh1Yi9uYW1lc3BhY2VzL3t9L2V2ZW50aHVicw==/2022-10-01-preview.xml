<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs" version="2022-10-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJz/V/MjAyMi0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="eventhubs eventhub">
    <command name="list" version="2022-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs" version="2022-10-01-preview" swagger="mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJz/V/MjAyMi0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The Namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="integer" var="$Query.skip" options="skip">
          <help short="Skip is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skip parameter that specifies a starting point to use for subsequent calls."/>
          <format maximum="1000" minimum="0"/>
        </arg>
        <arg type="integer" var="$Query.top" options="top">
          <help short="May be used to limit the number of results to the most recent N usageDetails."/>
          <format maximum="1000" minimum="1"/>
        </arg>
      </argGroup>
      <operation operationId="EventHubs_ListByNamespace">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs">
          <request method="get">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="integer" name="$skip" arg="$Query.skip">
                <format maximum="1000" minimum="0"/>
              </param>
              <param type="integer" name="$top" arg="$Query.top">
                <format maximum="1000" minimum="1"/>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/eventhubs/{}"/>
                      </prop>
                      <prop readOnly="True" type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="captureDescription">
                          <prop type="object" name="destination">
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="archiveNameFormat"/>
                              <prop type="string" name="blobContainer"/>
                              <prop type="string" name="dataLakeAccountName"/>
                              <prop type="string" name="dataLakeFolderPath"/>
                              <prop type="uuid" name="dataLakeSubscriptionId"/>
                              <prop type="string" name="storageAccountResourceId"/>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="encoding">
                            <enum>
                              <item value="&quot;Avro&quot;"/>
                              <item value="&quot;AvroDeflate&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="intervalInSeconds"/>
                          <prop type="integer32" name="sizeLimitInBytes"/>
                          <prop type="boolean" name="skipEmptyArchives"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="createdAt"/>
                        <prop type="integer64" name="messageRetentionInDays">
                          <format minimum="1"/>
                        </prop>
                        <prop type="integer64" name="partitionCount">
                          <format minimum="1"/>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="partitionIds">
                          <item type="string"/>
                        </prop>
                        <prop type="object" name="retentionDescription">
                          <prop type="string" name="cleanupPolicy">
                            <enum>
                              <item value="&quot;Compaction&quot;"/>
                              <item value="&quot;Delete&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="retentionTimeInHours"/>
                          <prop type="integer32" name="tombstoneRetentionTimeInHours"/>
                        </prop>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;ReceiveDisabled&quot;"/>
                            <item value="&quot;Renaming&quot;"/>
                            <item value="&quot;Restoring&quot;"/>
                            <item value="&quot;SendDisabled&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="updatedAt"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
