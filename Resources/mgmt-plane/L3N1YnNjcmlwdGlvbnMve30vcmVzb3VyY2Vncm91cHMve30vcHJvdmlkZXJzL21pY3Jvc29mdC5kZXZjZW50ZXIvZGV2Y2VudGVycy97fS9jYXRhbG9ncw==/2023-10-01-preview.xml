<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/catalogs" version="2023-10-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2NhdGFsb2dz/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter admin catalog">
    <command name="list" version="2023-10-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/catalogs" version="2023-10-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2NhdGFsb2dz/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" required="True" group="" idPart="name">
          <help short="The name of the dev center. Use `az configure -d dev-center=<dev_center_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="integer32" var="$Query.top" options="top" hide="True" group="">
          <help short="The maximum number of resources to return from the operation. Example: '$top=10'."/>
        </arg>
      </argGroup>
      <operation operationId="Catalogs_ListByDevCenter">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/catalogs">
          <request method="get">
            <path>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$" maxLength="26" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <param type="integer32" name="$top" arg="$Query.top"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/devcenters/{}/catalogs/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="@GitCatalog_read" name="adoGit"/>
                        <prop readOnly="True" type="string" name="connectionState">
                          <enum>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="gitHub" cls="GitCatalog_read">
                          <prop type="string" name="branch"/>
                          <prop type="string" name="path"/>
                          <prop type="string" name="secretIdentifier"/>
                          <prop type="string" name="uri"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastConnectionTime"/>
                        <prop type="object" name="lastSyncStats">
                          <prop readOnly="True" type="integer32" name="added">
                            <format minimum="0"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="removed">
                            <format minimum="0"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="synchronizationErrors">
                            <format minimum="0"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="unchanged">
                            <format minimum="0"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="updated">
                            <format minimum="0"/>
                          </prop>
                          <prop readOnly="True" type="integer32" name="validationErrors">
                            <format minimum="0"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastSyncTime"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Created&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;MovingResources&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;RolloutInProgress&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;StorageProvisioningFailed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;TransientFailure&quot;"/>
                            <item value="&quot;Updated&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="syncState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="syncType">
                          <enum>
                            <item value="&quot;Manual&quot;"/>
                            <item value="&quot;Scheduled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
