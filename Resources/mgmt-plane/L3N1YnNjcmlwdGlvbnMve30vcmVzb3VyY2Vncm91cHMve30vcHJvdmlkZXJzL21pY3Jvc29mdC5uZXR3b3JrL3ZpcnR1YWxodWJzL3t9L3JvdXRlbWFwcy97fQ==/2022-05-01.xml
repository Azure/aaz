<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
  <commandGroup name="network vhub route-map">
    <command name="show" version="2022-05-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeMapName" options="route-map-name name n" required="True" idPart="child_name_1">
          <help short="The name of the RouteMap."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
          <help short="The name of the VirtualHub containing the RouteMap."/>
        </arg>
      </argGroup>
      <operation operationId="RouteMaps_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/routeMaps/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<string>" name="associatedInboundConnections">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="associatedOutboundConnections">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="rules">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="array<object>" name="parameters">
                              <item type="object">
                                <prop type="array<string>" name="asPath">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="community">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="routePrefix">
                                  <item type="string"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Add&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Remove&quot;"/>
                                <item value="&quot;Replace&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="matchCriteria">
                          <item type="object">
                            <prop type="array<string>" name="asPath">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="community">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="matchCondition">
                              <enum>
                                <item value="&quot;Contains&quot;"/>
                                <item value="&quot;Equals&quot;"/>
                                <item value="&quot;NotContains&quot;"/>
                                <item value="&quot;NotEquals&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="routePrefix">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="nextStepIfMatched">
                          <enum>
                            <item value="&quot;Continue&quot;"/>
                            <item value="&quot;Terminate&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-05-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeMapName" options="route-map-name name n" required="True" idPart="child_name_1">
          <help short="The name of the RouteMap."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
          <help short="The name of the VirtualHub containing the RouteMap."/>
        </arg>
      </argGroup>
      <operation operationId="RouteMaps_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-05-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeMapName" options="route-map-name name n" required="True" idPart="child_name_1">
          <help short="The name of the RouteMap."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
          <help short="The name of the VirtualHub containing the RouteMap."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<string>" var="$routeMapParameters.properties.associatedInboundConnections" options="inbound-connection" group="Properties">
          <help short="List of connections which have this RoutMap associated for inbound traffic."/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$routeMapParameters.properties.associatedOutboundConnections" options="outbound-connections" group="Properties">
          <help short="List of connections which have this RoutMap associated for outbound traffic."/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$routeMapParameters.properties.rules" options="rules" group="Properties">
          <help short="List of RouteMap rules to be applied."/>
          <item type="object">
            <arg type="array<object>" var="$routeMapParameters.properties.rules[].actions" options="actions">
              <help short="List of actions which will be applied on a match."/>
              <item type="object">
                <arg type="array<object>" var="$routeMapParameters.properties.rules[].actions[].parameters" options="parameters">
                  <help short="List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added"/>
                  <item type="object">
                    <arg type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].asPath" options="as-path">
                      <help short="List of AS paths."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].community" options="community">
                      <help short="List of BGP communities."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].routePrefix" options="route-prefix">
                      <help short="List of route prefixes."/>
                      <item type="string"/>
                    </arg>
                  </item>
                </arg>
                <arg type="string" var="$routeMapParameters.properties.rules[].actions[].type" options="type">
                  <help short="Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'"/>
                  <enum>
                    <item name="Add" value="&quot;Add&quot;"/>
                    <item name="Drop" value="&quot;Drop&quot;"/>
                    <item name="Remove" value="&quot;Remove&quot;"/>
                    <item name="Replace" value="&quot;Replace&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$routeMapParameters.properties.rules[].matchCriteria" options="match-criteria">
              <help short="List of matching criterion which will be applied to traffic."/>
              <item type="object">
                <arg type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].asPath" options="as-path">
                  <help short="List of AS paths which this criteria matches."/>
                  <item type="string"/>
                </arg>
                <arg type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].community" options="community">
                  <help short="List of BGP communities which this criteria matches."/>
                  <item type="string"/>
                </arg>
                <arg type="string" var="$routeMapParameters.properties.rules[].matchCriteria[].matchCondition" options="match-condition">
                  <help short="Match condition to apply RouteMap rules."/>
                  <enum>
                    <item name="Contains" value="&quot;Contains&quot;"/>
                    <item name="Equals" value="&quot;Equals&quot;"/>
                    <item name="NotContains" value="&quot;NotContains&quot;"/>
                    <item name="NotEquals" value="&quot;NotEquals&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
                <arg type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].routePrefix" options="route-prefix">
                  <help short="List of route prefixes which this criteria matches."/>
                  <item type="string"/>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$routeMapParameters.properties.rules[].name" options="name">
              <help short="The unique name for the rule."/>
            </arg>
            <arg type="string" var="$routeMapParameters.properties.rules[].nextStepIfMatched" options="next-step-if-matched">
              <help short="Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'."/>
              <enum>
                <item name="Continue" value="&quot;Continue&quot;"/>
                <item name="Terminate" value="&quot;Terminate&quot;"/>
                <item name="Unknown" value="&quot;Unknown&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="RouteMaps_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="routeMapParameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<string>" name="associatedInboundConnections" arg="$routeMapParameters.properties.associatedInboundConnections">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="associatedOutboundConnections" arg="$routeMapParameters.properties.associatedOutboundConnections">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="rules" arg="$routeMapParameters.properties.rules">
                      <item type="object">
                        <prop type="array<object>" name="actions" arg="$routeMapParameters.properties.rules[].actions">
                          <item type="object">
                            <prop type="array<object>" name="parameters" arg="$routeMapParameters.properties.rules[].actions[].parameters">
                              <item type="object">
                                <prop type="array<string>" name="asPath" arg="$routeMapParameters.properties.rules[].actions[].parameters[].asPath">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="community" arg="$routeMapParameters.properties.rules[].actions[].parameters[].community">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="routePrefix" arg="$routeMapParameters.properties.rules[].actions[].parameters[].routePrefix">
                                  <item type="string"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="type" arg="$routeMapParameters.properties.rules[].actions[].type">
                              <enum>
                                <item value="&quot;Add&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Remove&quot;"/>
                                <item value="&quot;Replace&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="matchCriteria" arg="$routeMapParameters.properties.rules[].matchCriteria">
                          <item type="object">
                            <prop type="array<string>" name="asPath" arg="$routeMapParameters.properties.rules[].matchCriteria[].asPath">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="community" arg="$routeMapParameters.properties.rules[].matchCriteria[].community">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="matchCondition" arg="$routeMapParameters.properties.rules[].matchCriteria[].matchCondition">
                              <enum>
                                <item value="&quot;Contains&quot;"/>
                                <item value="&quot;Equals&quot;"/>
                                <item value="&quot;NotContains&quot;"/>
                                <item value="&quot;NotEquals&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="routePrefix" arg="$routeMapParameters.properties.rules[].matchCriteria[].routePrefix">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="name" arg="$routeMapParameters.properties.rules[].name"/>
                        <prop type="string" name="nextStepIfMatched" arg="$routeMapParameters.properties.rules[].nextStepIfMatched">
                          <enum>
                            <item value="&quot;Continue&quot;"/>
                            <item value="&quot;Terminate&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/routeMaps/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<string>" name="associatedInboundConnections">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="associatedOutboundConnections">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="rules">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="array<object>" name="parameters">
                              <item type="object">
                                <prop type="array<string>" name="asPath">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="community">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="routePrefix">
                                  <item type="string"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Add&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Remove&quot;"/>
                                <item value="&quot;Replace&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="matchCriteria">
                          <item type="object">
                            <prop type="array<string>" name="asPath">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="community">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="matchCondition">
                              <enum>
                                <item value="&quot;Contains&quot;"/>
                                <item value="&quot;Equals&quot;"/>
                                <item value="&quot;NotContains&quot;"/>
                                <item value="&quot;NotEquals&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="routePrefix">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="nextStepIfMatched">
                          <enum>
                            <item value="&quot;Continue&quot;"/>
                            <item value="&quot;Terminate&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-05-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeMapName" options="route-map-name name n" required="True" idPart="child_name_1">
          <help short="The name of the RouteMap."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
          <help short="The name of the VirtualHub containing the RouteMap."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.associatedInboundConnections" options="inbound-connection" group="Properties">
          <help short="List of connections which have this RoutMap associated for inbound traffic."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.associatedOutboundConnections" options="outbound-connections" group="Properties">
          <help short="List of connections which have this RoutMap associated for outbound traffic."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$routeMapParameters.properties.rules" options="rules" group="Properties">
          <help short="List of RouteMap rules to be applied."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<object>" var="$routeMapParameters.properties.rules[].actions" options="actions">
              <help short="List of actions which will be applied on a match."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="array<object>" var="$routeMapParameters.properties.rules[].actions[].parameters" options="parameters">
                  <help short="List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added"/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].asPath" options="as-path">
                      <help short="List of AS paths."/>
                      <item nullable="True" type="string"/>
                    </arg>
                    <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].community" options="community">
                      <help short="List of BGP communities."/>
                      <item nullable="True" type="string"/>
                    </arg>
                    <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].routePrefix" options="route-prefix">
                      <help short="List of route prefixes."/>
                      <item nullable="True" type="string"/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="string" var="$routeMapParameters.properties.rules[].actions[].type" options="type">
                  <help short="Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'"/>
                  <enum>
                    <item name="Add" value="&quot;Add&quot;"/>
                    <item name="Drop" value="&quot;Drop&quot;"/>
                    <item name="Remove" value="&quot;Remove&quot;"/>
                    <item name="Replace" value="&quot;Replace&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="array<object>" var="$routeMapParameters.properties.rules[].matchCriteria" options="match-criteria">
              <help short="List of matching criterion which will be applied to traffic."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].asPath" options="as-path">
                  <help short="List of AS paths which this criteria matches."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].community" options="community">
                  <help short="List of BGP communities which this criteria matches."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="string" var="$routeMapParameters.properties.rules[].matchCriteria[].matchCondition" options="match-condition">
                  <help short="Match condition to apply RouteMap rules."/>
                  <enum>
                    <item name="Contains" value="&quot;Contains&quot;"/>
                    <item name="Equals" value="&quot;Equals&quot;"/>
                    <item name="NotContains" value="&quot;NotContains&quot;"/>
                    <item name="NotEquals" value="&quot;NotEquals&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].routePrefix" options="route-prefix">
                  <help short="List of route prefixes which this criteria matches."/>
                  <item nullable="True" type="string"/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="string" var="$routeMapParameters.properties.rules[].name" options="name">
              <help short="The unique name for the rule."/>
            </arg>
            <arg nullable="True" type="string" var="$routeMapParameters.properties.rules[].nextStepIfMatched" options="next-step-if-matched">
              <help short="Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'."/>
              <enum>
                <item name="Continue" value="&quot;Continue&quot;"/>
                <item name="Terminate" value="&quot;Terminate&quot;"/>
                <item name="Unknown" value="&quot;Unknown&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="RouteMaps_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="RouteMap_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/routeMaps/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<string>" name="associatedInboundConnections">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="associatedOutboundConnections">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="rules">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="array<object>" name="parameters">
                              <item type="object">
                                <prop type="array<string>" name="asPath">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="community">
                                  <item type="string"/>
                                </prop>
                                <prop type="array<string>" name="routePrefix">
                                  <item type="string"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Add&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Remove&quot;"/>
                                <item value="&quot;Replace&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="matchCriteria">
                          <item type="object">
                            <prop type="array<string>" name="asPath">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="community">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="matchCondition">
                              <enum>
                                <item value="&quot;Contains&quot;"/>
                                <item value="&quot;Equals&quot;"/>
                                <item value="&quot;NotContains&quot;"/>
                                <item value="&quot;NotEquals&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="routePrefix">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="nextStepIfMatched">
                          <enum>
                            <item value="&quot;Continue&quot;"/>
                            <item value="&quot;Terminate&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="routeMapParameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="array<string>" name="associatedInboundConnections" arg="$routeMapParameters.properties.associatedInboundConnections">
                  <item type="string"/>
                </prop>
                <prop type="array<string>" name="associatedOutboundConnections" arg="$routeMapParameters.properties.associatedOutboundConnections">
                  <item type="string"/>
                </prop>
                <prop type="array<object>" name="rules" arg="$routeMapParameters.properties.rules">
                  <item type="object">
                    <prop type="array<object>" name="actions" arg="$routeMapParameters.properties.rules[].actions">
                      <item type="object">
                        <prop type="array<object>" name="parameters" arg="$routeMapParameters.properties.rules[].actions[].parameters">
                          <item type="object">
                            <prop type="array<string>" name="asPath" arg="$routeMapParameters.properties.rules[].actions[].parameters[].asPath">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="community" arg="$routeMapParameters.properties.rules[].actions[].parameters[].community">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="routePrefix" arg="$routeMapParameters.properties.rules[].actions[].parameters[].routePrefix">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="type" arg="$routeMapParameters.properties.rules[].actions[].type">
                          <enum>
                            <item value="&quot;Add&quot;"/>
                            <item value="&quot;Drop&quot;"/>
                            <item value="&quot;Remove&quot;"/>
                            <item value="&quot;Replace&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="matchCriteria" arg="$routeMapParameters.properties.rules[].matchCriteria">
                      <item type="object">
                        <prop type="array<string>" name="asPath" arg="$routeMapParameters.properties.rules[].matchCriteria[].asPath">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="community" arg="$routeMapParameters.properties.rules[].matchCriteria[].community">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="matchCondition" arg="$routeMapParameters.properties.rules[].matchCriteria[].matchCondition">
                          <enum>
                            <item value="&quot;Contains&quot;"/>
                            <item value="&quot;Equals&quot;"/>
                            <item value="&quot;NotContains&quot;"/>
                            <item value="&quot;NotEquals&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="routePrefix" arg="$routeMapParameters.properties.rules[].matchCriteria[].routePrefix">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="name" arg="$routeMapParameters.properties.rules[].name"/>
                    <prop type="string" name="nextStepIfMatched" arg="$routeMapParameters.properties.rules[].nextStepIfMatched">
                      <enum>
                        <item value="&quot;Continue&quot;"/>
                        <item value="&quot;Terminate&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="RouteMaps_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-05-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@RouteMap_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="rule">
      <command name="list" version="2022-05-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" subresource="properties.rules" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="string" var="$Path.routeMapName" options="route-map-name" required="True" idPart="child_name_1">
            <help short="The name of the RouteMap."/>
          </arg>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
            <help short="The name of the VirtualHub containing the RouteMap."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="routeMapParameters">
            <prop type="array" name="properties.rules"/>
          </json>
        </subresourceSelector>
        <operation operationId="RouteMaps_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-05-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="RouteMap_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/routeMaps/{}"/>
                    </prop>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<string>" name="associatedInboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="associatedOutboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="rules">
                        <item type="object">
                          <prop type="array<object>" name="actions">
                            <item type="object">
                              <prop type="array<object>" name="parameters">
                                <item type="object">
                                  <prop type="array<string>" name="asPath">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="community">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="routePrefix">
                                    <item type="string"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;Add&quot;"/>
                                  <item value="&quot;Drop&quot;"/>
                                  <item value="&quot;Remove&quot;"/>
                                  <item value="&quot;Replace&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="matchCriteria">
                            <item type="object">
                              <prop type="array<string>" name="asPath">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="community">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="matchCondition">
                                <enum>
                                  <item value="&quot;Contains&quot;"/>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;NotContains&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="routePrefix">
                                <item type="string"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="nextStepIfMatched">
                            <enum>
                              <item value="&quot;Continue&quot;"/>
                              <item value="&quot;Terminate&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2022-05-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" subresource="properties.rules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="string" var="$Path.routeMapName" options="route-map-name" required="True" idPart="child_name_1">
            <help short="The name of the RouteMap."/>
          </arg>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
            <help short="The name of the VirtualHub containing the RouteMap."/>
          </arg>
          <arg type="integer" var="$routeMapParameters.properties.rules[Index]" options="rule-index" required="True" group="">
            <help short="The index of the route map rule"/>
          </arg>
        </argGroup>
        <argGroup name="RouteMapParameters.properties.rules[]">
          <arg nullable="True" type="array<object>" var="$routeMapParameters.properties.rules[].actions" options="actions" group="RouteMapParameters.properties.rules[]">
            <help short="List of actions which will be applied on a match."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<object>" var="$routeMapParameters.properties.rules[].actions[].parameters" options="parameters">
                <help short="List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added"/>
                <item nullable="True" type="object">
                  <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].asPath" options="as-path">
                    <help short="List of AS paths."/>
                    <item nullable="True" type="string"/>
                  </arg>
                  <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].community" options="community">
                    <help short="List of BGP communities."/>
                    <item nullable="True" type="string"/>
                  </arg>
                  <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].routePrefix" options="route-prefix">
                    <help short="List of route prefixes."/>
                    <item nullable="True" type="string"/>
                  </arg>
                </item>
              </arg>
              <arg nullable="True" type="string" var="$routeMapParameters.properties.rules[].actions[].type" options="type">
                <help short="Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'"/>
                <enum>
                  <item name="Add" value="&quot;Add&quot;"/>
                  <item name="Drop" value="&quot;Drop&quot;"/>
                  <item name="Remove" value="&quot;Remove&quot;"/>
                  <item name="Replace" value="&quot;Replace&quot;"/>
                  <item name="Unknown" value="&quot;Unknown&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$routeMapParameters.properties.rules[].matchCriteria" options="match-criteria" group="RouteMapParameters.properties.rules[]">
            <help short="List of matching criterion which will be applied to traffic."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].asPath" options="as-path">
                <help short="List of AS paths which this criteria matches."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].community" options="community">
                <help short="List of BGP communities which this criteria matches."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$routeMapParameters.properties.rules[].matchCriteria[].matchCondition" options="match-condition">
                <help short="Match condition to apply RouteMap rules."/>
                <enum>
                  <item name="Contains" value="&quot;Contains&quot;"/>
                  <item name="Equals" value="&quot;Equals&quot;"/>
                  <item name="NotContains" value="&quot;NotContains&quot;"/>
                  <item name="NotEquals" value="&quot;NotEquals&quot;"/>
                  <item name="Unknown" value="&quot;Unknown&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].routePrefix" options="route-prefix">
                <help short="List of route prefixes which this criteria matches."/>
                <item nullable="True" type="string"/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$routeMapParameters.properties.rules[].name" options="name" group="RouteMapParameters.properties.rules[]">
            <help short="The unique name for the rule."/>
          </arg>
          <arg nullable="True" type="string" var="$routeMapParameters.properties.rules[].nextStepIfMatched" options="next-step" group="RouteMapParameters.properties.rules[]">
            <help short="Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'."/>
            <enum>
              <item name="Continue" value="&quot;Continue&quot;"/>
              <item name="Terminate" value="&quot;Terminate&quot;"/>
              <item name="Unknown" value="&quot;Unknown&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="routeMapParameters">
            <prop type="array" name="properties.rules">
              <item type="object"/>
              <identifier type="integer" name="[Index]" arg="$routeMapParameters.properties.rules[Index]" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="RouteMaps_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-05-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="RouteMap_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/routeMaps/{}"/>
                    </prop>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<string>" name="associatedInboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="associatedOutboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="rules">
                        <item type="object">
                          <prop type="array<object>" name="actions">
                            <item type="object">
                              <prop type="array<object>" name="parameters">
                                <item type="object">
                                  <prop type="array<string>" name="asPath">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="community">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="routePrefix">
                                    <item type="string"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;Add&quot;"/>
                                  <item value="&quot;Drop&quot;"/>
                                  <item value="&quot;Remove&quot;"/>
                                  <item value="&quot;Replace&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="matchCriteria">
                            <item type="object">
                              <prop type="array<string>" name="asPath">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="community">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="matchCondition">
                                <enum>
                                  <item value="&quot;Contains&quot;"/>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;NotContains&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="routePrefix">
                                <item type="string"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="nextStepIfMatched">
                            <enum>
                              <item value="&quot;Continue&quot;"/>
                              <item value="&quot;Terminate&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="routeMapParameters.properties.rules[]" required="True">
                <prop type="array<object>" name="actions" arg="$routeMapParameters.properties.rules[].actions">
                  <item type="object">
                    <prop type="array<object>" name="parameters" arg="$routeMapParameters.properties.rules[].actions[].parameters">
                      <item type="object">
                        <prop type="array<string>" name="asPath" arg="$routeMapParameters.properties.rules[].actions[].parameters[].asPath">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="community" arg="$routeMapParameters.properties.rules[].actions[].parameters[].community">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="routePrefix" arg="$routeMapParameters.properties.rules[].actions[].parameters[].routePrefix">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="type" arg="$routeMapParameters.properties.rules[].actions[].type">
                      <enum>
                        <item value="&quot;Add&quot;"/>
                        <item value="&quot;Drop&quot;"/>
                        <item value="&quot;Remove&quot;"/>
                        <item value="&quot;Replace&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="array<object>" name="matchCriteria" arg="$routeMapParameters.properties.rules[].matchCriteria">
                  <item type="object">
                    <prop type="array<string>" name="asPath" arg="$routeMapParameters.properties.rules[].matchCriteria[].asPath">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="community" arg="$routeMapParameters.properties.rules[].matchCriteria[].community">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="matchCondition" arg="$routeMapParameters.properties.rules[].matchCriteria[].matchCondition">
                      <enum>
                        <item value="&quot;Contains&quot;"/>
                        <item value="&quot;Equals&quot;"/>
                        <item value="&quot;NotContains&quot;"/>
                        <item value="&quot;NotEquals&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="routePrefix" arg="$routeMapParameters.properties.rules[].matchCriteria[].routePrefix">
                      <item type="string"/>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="name" arg="$routeMapParameters.properties.rules[].name"/>
                <prop type="string" name="nextStepIfMatched" arg="$routeMapParameters.properties.rules[].nextStepIfMatched">
                  <enum>
                    <item value="&quot;Continue&quot;"/>
                    <item value="&quot;Terminate&quot;"/>
                    <item value="&quot;Unknown&quot;"/>
                  </enum>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="RouteMaps_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-05-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@RouteMap_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="delete" version="2022-05-01" confirmation="Are you sure you want to perform this operation?">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" subresource="properties.rules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="string" var="$Path.routeMapName" options="route-map-name" required="True" idPart="child_name_1">
            <help short="The name of the RouteMap."/>
          </arg>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
            <help short="The name of the VirtualHub containing the RouteMap."/>
          </arg>
          <arg type="integer" var="$routeMapParameters.properties.rules[Index]" options="rule-index" required="True" group="">
            <help short="The index of the route map rule"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="routeMapParameters">
            <prop type="array" name="properties.rules">
              <item type="object"/>
              <identifier type="integer" name="[Index]" arg="$routeMapParameters.properties.rules[Index]" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="RouteMaps_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-05-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="RouteMap_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/routeMaps/{}"/>
                    </prop>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<string>" name="associatedInboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="associatedOutboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="rules">
                        <item type="object">
                          <prop type="array<object>" name="actions">
                            <item type="object">
                              <prop type="array<object>" name="parameters">
                                <item type="object">
                                  <prop type="array<string>" name="asPath">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="community">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="routePrefix">
                                    <item type="string"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;Add&quot;"/>
                                  <item value="&quot;Drop&quot;"/>
                                  <item value="&quot;Remove&quot;"/>
                                  <item value="&quot;Replace&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="matchCriteria">
                            <item type="object">
                              <prop type="array<string>" name="asPath">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="community">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="matchCondition">
                                <enum>
                                  <item value="&quot;Contains&quot;"/>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;NotContains&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="routePrefix">
                                <item type="string"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="nextStepIfMatched">
                            <enum>
                              <item value="&quot;Continue&quot;"/>
                              <item value="&quot;Terminate&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="RouteMaps_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-05-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@RouteMap_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2022-05-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" subresource="properties.rules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="string" var="$Path.routeMapName" options="route-map-name" required="True" idPart="child_name_1">
            <help short="The name of the RouteMap."/>
          </arg>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
            <help short="The name of the VirtualHub containing the RouteMap."/>
          </arg>
          <arg type="integer" var="$routeMapParameters.properties.rules[Index]" options="rule-index" required="True" group="">
            <help short="The index of the route map rule"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="routeMapParameters">
            <prop type="array" name="properties.rules">
              <item type="object"/>
              <identifier type="integer" name="[Index]" arg="$routeMapParameters.properties.rules[Index]" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="RouteMaps_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-05-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="RouteMap_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/routeMaps/{}"/>
                    </prop>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<string>" name="associatedInboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="associatedOutboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="rules">
                        <item type="object">
                          <prop type="array<object>" name="actions">
                            <item type="object">
                              <prop type="array<object>" name="parameters">
                                <item type="object">
                                  <prop type="array<string>" name="asPath">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="community">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="routePrefix">
                                    <item type="string"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;Add&quot;"/>
                                  <item value="&quot;Drop&quot;"/>
                                  <item value="&quot;Remove&quot;"/>
                                  <item value="&quot;Replace&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="matchCriteria">
                            <item type="object">
                              <prop type="array<string>" name="asPath">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="community">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="matchCondition">
                                <enum>
                                  <item value="&quot;Contains&quot;"/>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;NotContains&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="routePrefix">
                                <item type="string"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="nextStepIfMatched">
                            <enum>
                              <item value="&quot;Continue&quot;"/>
                              <item value="&quot;Terminate&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="add" version="2022-05-01" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/routemaps/{}" version="2022-05-01" subresource="properties.rules[]" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L3JvdXRlTWFwcy97cm91dGVNYXBOYW1lfQ==/V/MjAyMi0wNS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="string" var="$Path.routeMapName" options="route-map-name" required="True" idPart="child_name_1">
            <help short="The name of the RouteMap."/>
          </arg>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
            <help short="The name of the VirtualHub containing the RouteMap."/>
          </arg>
          <arg type="integer" var="$routeMapParameters.properties.rules[Index]" options="rule-index" group="">
            <help short="The index of the route map rule"/>
          </arg>
        </argGroup>
        <argGroup name="RouteMapParameters.properties.rules[]">
          <arg type="array<object>" var="$routeMapParameters.properties.rules[].actions" options="actions" group="RouteMapParameters.properties.rules[]">
            <help short="List of actions which will be applied on a match."/>
            <item type="object">
              <arg type="array<object>" var="$routeMapParameters.properties.rules[].actions[].parameters" options="parameters">
                <help short="List of parameters relevant to the action.For instance if type is drop then parameters has list of prefixes to be dropped.If type is add, parameters would have list of ASN numbers to be added"/>
                <item type="object">
                  <arg type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].asPath" options="as-path">
                    <help short="List of AS paths."/>
                    <item type="string"/>
                  </arg>
                  <arg type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].community" options="community">
                    <help short="List of BGP communities."/>
                    <item type="string"/>
                  </arg>
                  <arg type="array<string>" var="$routeMapParameters.properties.rules[].actions[].parameters[].routePrefix" options="route-prefix">
                    <help short="List of route prefixes."/>
                    <item type="string"/>
                  </arg>
                </item>
              </arg>
              <arg type="string" var="$routeMapParameters.properties.rules[].actions[].type" options="type">
                <help short="Type of action to be taken. Supported types are 'Remove', 'Add', 'Replace', and 'Drop.'"/>
                <enum>
                  <item name="Add" value="&quot;Add&quot;"/>
                  <item name="Drop" value="&quot;Drop&quot;"/>
                  <item name="Remove" value="&quot;Remove&quot;"/>
                  <item name="Replace" value="&quot;Replace&quot;"/>
                  <item name="Unknown" value="&quot;Unknown&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$routeMapParameters.properties.rules[].matchCriteria" options="match-criteria" group="RouteMapParameters.properties.rules[]">
            <help short="List of matching criterion which will be applied to traffic."/>
            <item type="object">
              <arg type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].asPath" options="as-path">
                <help short="List of AS paths which this criteria matches."/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].community" options="community">
                <help short="List of BGP communities which this criteria matches."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$routeMapParameters.properties.rules[].matchCriteria[].matchCondition" options="match-condition">
                <help short="Match condition to apply RouteMap rules."/>
                <enum>
                  <item name="Contains" value="&quot;Contains&quot;"/>
                  <item name="Equals" value="&quot;Equals&quot;"/>
                  <item name="NotContains" value="&quot;NotContains&quot;"/>
                  <item name="NotEquals" value="&quot;NotEquals&quot;"/>
                  <item name="Unknown" value="&quot;Unknown&quot;"/>
                </enum>
              </arg>
              <arg type="array<string>" var="$routeMapParameters.properties.rules[].matchCriteria[].routePrefix" options="route-prefix">
                <help short="List of route prefixes which this criteria matches."/>
                <item type="string"/>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$routeMapParameters.properties.rules[].name" options="name" group="RouteMapParameters.properties.rules[]">
            <help short="The unique name for the rule."/>
          </arg>
          <arg type="string" var="$routeMapParameters.properties.rules[].nextStepIfMatched" options="next-step" group="RouteMapParameters.properties.rules[]">
            <help short="Next step after rule is evaluated. Current supported behaviors are 'Continue'(to next rule) and 'Terminate'."/>
            <enum>
              <item name="Continue" value="&quot;Continue&quot;"/>
              <item name="Terminate" value="&quot;Terminate&quot;"/>
              <item name="Unknown" value="&quot;Unknown&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="routeMapParameters">
            <prop type="array" name="properties.rules">
              <item type="object"/>
              <identifier type="integer" name="[Index]" arg="$routeMapParameters.properties.rules[Index]"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="RouteMaps_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-05-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="RouteMap_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/routeMaps/{}"/>
                    </prop>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="array<string>" name="associatedInboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="associatedOutboundConnections">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="rules">
                        <item type="object">
                          <prop type="array<object>" name="actions">
                            <item type="object">
                              <prop type="array<object>" name="parameters">
                                <item type="object">
                                  <prop type="array<string>" name="asPath">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="community">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<string>" name="routePrefix">
                                    <item type="string"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;Add&quot;"/>
                                  <item value="&quot;Drop&quot;"/>
                                  <item value="&quot;Remove&quot;"/>
                                  <item value="&quot;Replace&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="matchCriteria">
                            <item type="object">
                              <prop type="array<string>" name="asPath">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="community">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="matchCondition">
                                <enum>
                                  <item value="&quot;Contains&quot;"/>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;NotContains&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="routePrefix">
                                <item type="string"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="nextStepIfMatched">
                            <enum>
                              <item value="&quot;Continue&quot;"/>
                              <item value="&quot;Terminate&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="routeMapParameters.properties.rules[]" required="True">
                <prop type="array<object>" name="actions" arg="$routeMapParameters.properties.rules[].actions">
                  <item type="object">
                    <prop type="array<object>" name="parameters" arg="$routeMapParameters.properties.rules[].actions[].parameters">
                      <item type="object">
                        <prop type="array<string>" name="asPath" arg="$routeMapParameters.properties.rules[].actions[].parameters[].asPath">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="community" arg="$routeMapParameters.properties.rules[].actions[].parameters[].community">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="routePrefix" arg="$routeMapParameters.properties.rules[].actions[].parameters[].routePrefix">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="type" arg="$routeMapParameters.properties.rules[].actions[].type">
                      <enum>
                        <item value="&quot;Add&quot;"/>
                        <item value="&quot;Drop&quot;"/>
                        <item value="&quot;Remove&quot;"/>
                        <item value="&quot;Replace&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="array<object>" name="matchCriteria" arg="$routeMapParameters.properties.rules[].matchCriteria">
                  <item type="object">
                    <prop type="array<string>" name="asPath" arg="$routeMapParameters.properties.rules[].matchCriteria[].asPath">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="community" arg="$routeMapParameters.properties.rules[].matchCriteria[].community">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="matchCondition" arg="$routeMapParameters.properties.rules[].matchCriteria[].matchCondition">
                      <enum>
                        <item value="&quot;Contains&quot;"/>
                        <item value="&quot;Equals&quot;"/>
                        <item value="&quot;NotContains&quot;"/>
                        <item value="&quot;NotEquals&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="routePrefix" arg="$routeMapParameters.properties.rules[].matchCriteria[].routePrefix">
                      <item type="string"/>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="name" arg="$routeMapParameters.properties.rules[].name"/>
                <prop type="string" name="nextStepIfMatched" arg="$routeMapParameters.properties.rules[].nextStepIfMatched">
                  <enum>
                    <item value="&quot;Continue&quot;"/>
                    <item value="&quot;Terminate&quot;"/>
                    <item value="&quot;Unknown&quot;"/>
                  </enum>
                </prop>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="RouteMaps_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/routeMaps/{routeMapName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="routeMapName" arg="$Path.routeMapName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2022-05-01&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@RouteMap_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
