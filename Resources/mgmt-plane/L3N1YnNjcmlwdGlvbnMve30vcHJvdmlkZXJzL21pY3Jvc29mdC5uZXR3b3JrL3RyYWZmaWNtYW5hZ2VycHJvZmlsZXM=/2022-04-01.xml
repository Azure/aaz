<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.network/trafficmanagerprofiles" version="2022-04-01" swagger="mgmt-plane/trafficmanager/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldHdvcmsvdHJhZmZpY21hbmFnZXJwcm9maWxlcw==/V/MjAyMi0wNC0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/trafficmanagerprofiles" version="2022-04-01" swagger="mgmt-plane/trafficmanager/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay90cmFmZmljbWFuYWdlcnByb2ZpbGVz/V/MjAyMi0wNC0wMQ=="/>
  <commandGroup name="network traffic-manager profile">
    <command name="list" version="2022-04-01">
      <resource id="/subscriptions/{}/providers/microsoft.network/trafficmanagerprofiles" version="2022-04-01" swagger="mgmt-plane/trafficmanager/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldHdvcmsvdHJhZmZpY21hbmFnZXJwcm9maWxlcw==/V/MjAyMi0wNC0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/trafficmanagerprofiles" version="2022-04-01" swagger="mgmt-plane/trafficmanager/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay90cmFmZmljbWFuYWdlcnByb2ZpbGVz/V/MjAyMi0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Profiles_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Profiles_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Profiles_ListByResourceGroup" operationId="Profiles_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficmanagerprofiles">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/trafficmanagerprofiles/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<string>" name="allowedEndpointRecordTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;Any&quot;"/>
                              <item value="&quot;DomainName&quot;"/>
                              <item value="&quot;IPv4Address&quot;"/>
                              <item value="&quot;IPv6Address&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="dnsConfig">
                          <prop readOnly="True" type="string" name="fqdn"/>
                          <prop type="string" name="relativeName"/>
                          <prop type="integer64" name="ttl"/>
                        </prop>
                        <prop type="array<object>" name="endpoints">
                          <item type="object">
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/trafficmanagerprofiles/{}/{}/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="alwaysServe">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="customHeaders">
                                <item type="object">
                                  <prop type="string" name="name"/>
                                  <prop type="string" name="value"/>
                                </item>
                              </prop>
                              <prop type="string" name="endpointLocation"/>
                              <prop type="string" name="endpointMonitorStatus">
                                <enum>
                                  <item value="&quot;CheckingEndpoint&quot;"/>
                                  <item value="&quot;Degraded&quot;"/>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Inactive&quot;"/>
                                  <item value="&quot;Online&quot;"/>
                                  <item value="&quot;Stopped&quot;"/>
                                  <item value="&quot;Unmonitored&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="endpointStatus">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="geoMapping">
                                <item type="string"/>
                              </prop>
                              <prop type="integer64" name="minChildEndpoints"/>
                              <prop type="integer64" name="minChildEndpointsIPv4"/>
                              <prop type="integer64" name="minChildEndpointsIPv6"/>
                              <prop type="integer64" name="priority"/>
                              <prop type="array<object>" name="subnets">
                                <item type="object">
                                  <prop type="string" name="first"/>
                                  <prop type="string" name="last"/>
                                  <prop type="integer" name="scope"/>
                                </item>
                              </prop>
                              <prop type="string" name="target"/>
                              <prop type="string" name="targetResourceId"/>
                              <prop type="integer64" name="weight"/>
                            </prop>
                            <prop type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="integer64" name="maxReturn"/>
                        <prop type="object" name="monitorConfig">
                          <prop type="array<object>" name="customHeaders">
                            <item type="object">
                              <prop type="string" name="name"/>
                              <prop type="string" name="value"/>
                            </item>
                          </prop>
                          <prop type="array<object>" name="expectedStatusCodeRanges">
                            <item type="object">
                              <prop type="integer" name="max"/>
                              <prop type="integer" name="min"/>
                            </item>
                          </prop>
                          <prop type="integer64" name="intervalInSeconds"/>
                          <prop type="string" name="path"/>
                          <prop type="integer64" name="port"/>
                          <prop type="string" name="profileMonitorStatus">
                            <enum>
                              <item value="&quot;CheckingEndpoints&quot;"/>
                              <item value="&quot;Degraded&quot;"/>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Inactive&quot;"/>
                              <item value="&quot;Online&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="protocol">
                            <enum>
                              <item value="&quot;HTTP&quot;"/>
                              <item value="&quot;HTTPS&quot;"/>
                              <item value="&quot;TCP&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="timeoutInSeconds"/>
                          <prop type="integer64" name="toleratedNumberOfFailures"/>
                        </prop>
                        <prop type="string" name="profileStatus">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="trafficRoutingMethod">
                          <enum>
                            <item value="&quot;Geographic&quot;"/>
                            <item value="&quot;MultiValue&quot;"/>
                            <item value="&quot;Performance&quot;"/>
                            <item value="&quot;Priority&quot;"/>
                            <item value="&quot;Subnet&quot;"/>
                            <item value="&quot;Weighted&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="trafficViewEnrollmentStatus">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Profiles_ListBySubscription" operationId="Profiles_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Network/trafficmanagerprofiles">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/trafficmanagerprofiles/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<string>" name="allowedEndpointRecordTypes">
                          <item type="string">
                            <enum>
                              <item value="&quot;Any&quot;"/>
                              <item value="&quot;DomainName&quot;"/>
                              <item value="&quot;IPv4Address&quot;"/>
                              <item value="&quot;IPv6Address&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop type="object" name="dnsConfig">
                          <prop readOnly="True" type="string" name="fqdn"/>
                          <prop type="string" name="relativeName"/>
                          <prop type="integer64" name="ttl"/>
                        </prop>
                        <prop type="array<object>" name="endpoints">
                          <item type="object">
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/trafficmanagerprofiles/{}/{}/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="alwaysServe">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="customHeaders">
                                <item type="object">
                                  <prop type="string" name="name"/>
                                  <prop type="string" name="value"/>
                                </item>
                              </prop>
                              <prop type="string" name="endpointLocation"/>
                              <prop type="string" name="endpointMonitorStatus">
                                <enum>
                                  <item value="&quot;CheckingEndpoint&quot;"/>
                                  <item value="&quot;Degraded&quot;"/>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Inactive&quot;"/>
                                  <item value="&quot;Online&quot;"/>
                                  <item value="&quot;Stopped&quot;"/>
                                  <item value="&quot;Unmonitored&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="endpointStatus">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="geoMapping">
                                <item type="string"/>
                              </prop>
                              <prop type="integer64" name="minChildEndpoints"/>
                              <prop type="integer64" name="minChildEndpointsIPv4"/>
                              <prop type="integer64" name="minChildEndpointsIPv6"/>
                              <prop type="integer64" name="priority"/>
                              <prop type="array<object>" name="subnets">
                                <item type="object">
                                  <prop type="string" name="first"/>
                                  <prop type="string" name="last"/>
                                  <prop type="integer" name="scope"/>
                                </item>
                              </prop>
                              <prop type="string" name="target"/>
                              <prop type="string" name="targetResourceId"/>
                              <prop type="integer64" name="weight"/>
                            </prop>
                            <prop type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="integer64" name="maxReturn"/>
                        <prop type="object" name="monitorConfig">
                          <prop type="array<object>" name="customHeaders">
                            <item type="object">
                              <prop type="string" name="name"/>
                              <prop type="string" name="value"/>
                            </item>
                          </prop>
                          <prop type="array<object>" name="expectedStatusCodeRanges">
                            <item type="object">
                              <prop type="integer" name="max"/>
                              <prop type="integer" name="min"/>
                            </item>
                          </prop>
                          <prop type="integer64" name="intervalInSeconds"/>
                          <prop type="string" name="path"/>
                          <prop type="integer64" name="port"/>
                          <prop type="string" name="profileMonitorStatus">
                            <enum>
                              <item value="&quot;CheckingEndpoints&quot;"/>
                              <item value="&quot;Degraded&quot;"/>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Inactive&quot;"/>
                              <item value="&quot;Online&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="protocol">
                            <enum>
                              <item value="&quot;HTTP&quot;"/>
                              <item value="&quot;HTTPS&quot;"/>
                              <item value="&quot;TCP&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="timeoutInSeconds"/>
                          <prop type="integer64" name="toleratedNumberOfFailures"/>
                        </prop>
                        <prop type="string" name="profileStatus">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="trafficRoutingMethod">
                          <enum>
                            <item value="&quot;Geographic&quot;"/>
                            <item value="&quot;MultiValue&quot;"/>
                            <item value="&quot;Performance&quot;"/>
                            <item value="&quot;Priority&quot;"/>
                            <item value="&quot;Subnet&quot;"/>
                            <item value="&quot;Weighted&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="trafficViewEnrollmentStatus">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
