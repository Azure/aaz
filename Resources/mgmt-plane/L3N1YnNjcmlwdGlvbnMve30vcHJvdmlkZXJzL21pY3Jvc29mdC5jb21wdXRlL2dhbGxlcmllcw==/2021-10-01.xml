<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.compute/galleries" version="2021-10-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNvbXB1dGUvZ2FsbGVyaWVz/V/MjAyMS0xMC0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries" version="2021-10-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXM=/V/MjAyMS0xMC0wMQ=="/>
  <commandGroup name="sig">
    <command name="list" version="2021-10-01">
      <resource id="/subscriptions/{}/providers/microsoft.compute/galleries" version="2021-10-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNvbXB1dGUvZ2FsbGVyaWVz/V/MjAyMS0xMC0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries" version="2021-10-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXM=/V/MjAyMS0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Galleries_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <condition var="$Condition_Galleries_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_Galleries_List" operationId="Galleries_List">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Compute/galleries">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="description"/>
                        <prop type="object" name="identifier">
                          <prop readOnly="True" type="string" name="uniqueName"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Migrating&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="sharingProfile">
                          <prop type="object" name="communityGalleryInfo">
                            <prop readOnly="True" type="boolean" name="communityGalleryEnabled"/>
                            <prop type="string" name="eula"/>
                            <prop type="string" name="publicNamePrefix"/>
                            <prop readOnly="True" type="array<string>" name="publicNames">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="publisherContact"/>
                            <prop type="string" name="publisherUri"/>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="groups">
                            <item type="object">
                              <prop type="array<string>" name="ids">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;AADTenants&quot;"/>
                                  <item value="&quot;Community&quot;"/>
                                  <item value="&quot;Subscriptions&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="permissions">
                            <enum>
                              <item value="&quot;Groups&quot;"/>
                              <item value="&quot;Private&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="sharingStatus">
                          <prop readOnly="True" type="string" name="aggregatedState">
                            <enum>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<object>" name="summary" identifiers="region">
                            <item type="object">
                              <prop type="string" name="details"/>
                              <prop type="string" name="region"/>
                              <prop readOnly="True" type="string" name="state">
                                <enum>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;InProgress&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="softDeletePolicy">
                          <prop type="boolean" name="isSoftDeleteEnabled"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Galleries_ListByResourceGroup" operationId="Galleries_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="description"/>
                        <prop type="object" name="identifier">
                          <prop readOnly="True" type="string" name="uniqueName"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Migrating&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="sharingProfile">
                          <prop type="object" name="communityGalleryInfo">
                            <prop readOnly="True" type="boolean" name="communityGalleryEnabled"/>
                            <prop type="string" name="eula"/>
                            <prop type="string" name="publicNamePrefix"/>
                            <prop readOnly="True" type="array<string>" name="publicNames">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="publisherContact"/>
                            <prop type="string" name="publisherUri"/>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="groups">
                            <item type="object">
                              <prop type="array<string>" name="ids">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;AADTenants&quot;"/>
                                  <item value="&quot;Community&quot;"/>
                                  <item value="&quot;Subscriptions&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="permissions">
                            <enum>
                              <item value="&quot;Groups&quot;"/>
                              <item value="&quot;Private&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="sharingStatus">
                          <prop readOnly="True" type="string" name="aggregatedState">
                            <enum>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<object>" name="summary" identifiers="region">
                            <item type="object">
                              <prop type="string" name="details"/>
                              <prop type="string" name="region"/>
                              <prop readOnly="True" type="string" name="state">
                                <enum>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;InProgress&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="softDeletePolicy">
                          <prop type="boolean" name="isSoftDeleteEnabled"/>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
