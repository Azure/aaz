<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2024-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
  <commandGroup name="network network-watcher packet-capture">
    <command name="show" version="2024-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2024-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the network watcher."/>
        </arg>
        <arg type="string" var="$Path.packetCaptureName" options="packet-capture-name name n" required="True" idPart="child_name_1">
          <help short="The name of the packet capture session."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PacketCaptures_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="get">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="string" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer64" name="bytesToCapturePerPacket">
                      <default value="0"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="object" name="captureSettings">
                      <prop type="integer32" name="fileCount">
                        <default value="10"/>
                        <format maximum="10000" minimum="0"/>
                      </prop>
                      <prop type="integer64" name="fileSizeInBytes">
                        <default value="104857600"/>
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="integer32" name="sessionTimeLimitInSeconds">
                        <default value="86400"/>
                        <format maximum="604800" minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="boolean" name="continuousCapture"/>
                    <prop type="array<object>" name="filters">
                      <item type="object">
                        <prop type="string" name="localIPAddress"/>
                        <prop type="string" name="localPort"/>
                        <prop type="string" name="protocol">
                          <default value="&quot;Any&quot;"/>
                          <enum>
                            <item value="&quot;Any&quot;"/>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="remoteIPAddress"/>
                        <prop type="string" name="remotePort"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="scope">
                      <prop type="array<string>" name="exclude">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="include">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageLocation" required="True">
                      <prop type="string" name="filePath"/>
                      <prop type="string" name="localPath"/>
                      <prop type="string" name="storageId"/>
                      <prop type="string" name="storagePath"/>
                    </prop>
                    <prop type="string" name="target" required="True"/>
                    <prop type="string" name="targetType">
                      <enum>
                        <item value="&quot;AzureVM&quot;"/>
                        <item value="&quot;AzureVMSS&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="timeLimitInSeconds">
                      <default value="18000"/>
                      <format maximum="18000" minimum="0"/>
                    </prop>
                    <prop type="integer64" name="totalBytesPerSession">
                      <default value="1073741824"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-05-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2024-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the network watcher."/>
        </arg>
        <arg type="string" var="$Path.packetCaptureName" options="packet-capture-name name n" required="True" idPart="child_name_1">
          <help short="The name of the packet capture session."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PacketCaptures_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="delete">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2024-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the network watcher."/>
        </arg>
        <arg type="string" var="$Path.packetCaptureName" options="packet-capture-name name n" required="True" idPart="child_name_1">
          <help short="The name of the packet capture session."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="integer64" var="$parameters.properties.bytesToCapturePerPacket" options="bytes-to-capture-per-packet" group="Properties">
          <help short="Number of bytes captured per packet, the remaining bytes are truncated."/>
          <default value="0"/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
        <arg type="object" var="$parameters.properties.captureSettings" options="capture-settings" group="Properties">
          <help short="The capture setting holds the 'FileCount', 'FileSizeInBytes', 'SessionTimeLimitInSeconds' values."/>
          <arg type="integer32" var="$parameters.properties.captureSettings.fileCount" options="file-count">
            <help short="Number of file count. Default value of count is 10 and maximum number is 10000."/>
            <default value="10"/>
            <format maximum="10000" minimum="0"/>
          </arg>
          <arg type="integer64" var="$parameters.properties.captureSettings.fileSizeInBytes" options="file-size-in-bytes">
            <help short="Number of bytes captured per packet. Default value in bytes 104857600 (100MB) and maximum in bytes 4294967295 (4GB)."/>
            <default value="104857600"/>
            <format maximum="4294967295" minimum="0"/>
          </arg>
          <arg type="integer32" var="$parameters.properties.captureSettings.sessionTimeLimitInSeconds" options="session-time-limit-in-seconds">
            <help short="Maximum duration of the capture session in seconds is 604800s (7 days) for a file. Default value in second 86400s (1 day)."/>
            <default value="86400"/>
            <format maximum="604800" minimum="0"/>
          </arg>
        </arg>
        <arg type="boolean" var="$parameters.properties.continuousCapture" options="continuous-capture" group="Properties">
          <help short="This continuous capture is a nullable boolean, which can hold 'null', 'true' or 'false' value. If we do not pass this parameter, it would be consider as 'null', default value is 'null'."/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.filters" options="filters" group="Properties">
          <help short="A list of packet capture filters."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.filters[].localIPAddress" options="local-ip-address">
              <help short="Local IP Address to be filtered on. Notation: &quot;127.0.0.1&quot; for single address entry. &quot;127.0.0.1-127.0.0.255&quot; for range. &quot;127.0.0.1;127.0.0.5&quot;? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg type="string" var="$parameters.properties.filters[].localPort" options="local-port">
              <help short="Local port to be filtered on. Notation: &quot;80&quot; for single port entry.&quot;80-85&quot; for range. &quot;80;443;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg type="string" var="$parameters.properties.filters[].protocol" options="protocol">
              <help short="Protocol to be filtered on."/>
              <default value="&quot;Any&quot;"/>
              <enum>
                <item name="Any" value="&quot;Any&quot;"/>
                <item name="TCP" value="&quot;TCP&quot;"/>
                <item name="UDP" value="&quot;UDP&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.filters[].remoteIPAddress" options="remote-ip-address">
              <help short="Local IP Address to be filtered on. Notation: &quot;127.0.0.1&quot; for single address entry. &quot;127.0.0.1-127.0.0.255&quot; for range. &quot;127.0.0.1;127.0.0.5;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg type="string" var="$parameters.properties.filters[].remotePort" options="remote-port">
              <help short="Remote port to be filtered on. Notation: &quot;80&quot; for single port entry.&quot;80-85&quot; for range. &quot;80;443;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.scope" options="scope" group="Properties">
          <help short="A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS."/>
          <arg type="array<string>" var="$parameters.properties.scope.exclude" options="exclude">
            <help short="List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture."/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$parameters.properties.scope.include" options="include">
            <help short="List of AzureVMSS instances to run packet capture on."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.storageLocation" options="storage-location" required="True" group="Properties">
          <help short="The storage location for a packet capture session."/>
          <arg type="string" var="$parameters.properties.storageLocation.filePath" options="file-path">
            <help short="This path is invalid if 'Continuous Capture' is provided with 'true' or 'false'. A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional."/>
          </arg>
          <arg type="string" var="$parameters.properties.storageLocation.localPath" options="local-path">
            <help short="This path is valid if 'Continuous Capture' is provided with 'true' or 'false' and required if no storage ID is provided, otherwise optional. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures."/>
          </arg>
          <arg type="string" var="$parameters.properties.storageLocation.storageId" options="storage-id">
            <help short="The ID of the storage account to save the packet capture session. Required if no localPath or filePath is provided."/>
          </arg>
          <arg type="string" var="$parameters.properties.storageLocation.storagePath" options="storage-path">
            <help short="The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture."/>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.target" options="target" required="True" group="Properties">
          <help short="The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported."/>
        </arg>
        <arg type="string" var="$parameters.properties.targetType" options="target-type" group="Properties">
          <help short="Target type of the resource provided."/>
          <enum>
            <item name="AzureVM" value="&quot;AzureVM&quot;"/>
            <item name="AzureVMSS" value="&quot;AzureVMSS&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$parameters.properties.timeLimitInSeconds" options="time-limit-in-seconds" group="Properties">
          <help short="Maximum duration of the capture session in seconds."/>
          <default value="18000"/>
          <format maximum="18000" minimum="0"/>
        </arg>
        <arg type="integer64" var="$parameters.properties.totalBytesPerSession" options="total-bytes-per-session" group="Properties">
          <help short="Maximum size of the capture output."/>
          <default value="1073741824"/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
      </argGroup>
      <operation operationId="PacketCaptures_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="put">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="integer64" name="bytesToCapturePerPacket" arg="$parameters.properties.bytesToCapturePerPacket">
                      <default value="0"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="object" name="captureSettings" arg="$parameters.properties.captureSettings">
                      <prop type="integer32" name="fileCount" arg="$parameters.properties.captureSettings.fileCount">
                        <default value="10"/>
                        <format maximum="10000" minimum="0"/>
                      </prop>
                      <prop type="integer64" name="fileSizeInBytes" arg="$parameters.properties.captureSettings.fileSizeInBytes">
                        <default value="104857600"/>
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="integer32" name="sessionTimeLimitInSeconds" arg="$parameters.properties.captureSettings.sessionTimeLimitInSeconds">
                        <default value="86400"/>
                        <format maximum="604800" minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="boolean" name="continuousCapture" arg="$parameters.properties.continuousCapture"/>
                    <prop type="array<object>" name="filters" arg="$parameters.properties.filters">
                      <item type="object">
                        <prop type="string" name="localIPAddress" arg="$parameters.properties.filters[].localIPAddress"/>
                        <prop type="string" name="localPort" arg="$parameters.properties.filters[].localPort"/>
                        <prop type="string" name="protocol" arg="$parameters.properties.filters[].protocol">
                          <default value="&quot;Any&quot;"/>
                          <enum>
                            <item value="&quot;Any&quot;"/>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="remoteIPAddress" arg="$parameters.properties.filters[].remoteIPAddress"/>
                        <prop type="string" name="remotePort" arg="$parameters.properties.filters[].remotePort"/>
                      </item>
                    </prop>
                    <prop type="object" name="scope" arg="$parameters.properties.scope">
                      <prop type="array<string>" name="exclude" arg="$parameters.properties.scope.exclude">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="include" arg="$parameters.properties.scope.include">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageLocation" arg="$parameters.properties.storageLocation" required="True">
                      <prop type="string" name="filePath" arg="$parameters.properties.storageLocation.filePath"/>
                      <prop type="string" name="localPath" arg="$parameters.properties.storageLocation.localPath"/>
                      <prop type="string" name="storageId" arg="$parameters.properties.storageLocation.storageId"/>
                      <prop type="string" name="storagePath" arg="$parameters.properties.storageLocation.storagePath"/>
                    </prop>
                    <prop type="string" name="target" arg="$parameters.properties.target" required="True"/>
                    <prop type="string" name="targetType" arg="$parameters.properties.targetType">
                      <enum>
                        <item value="&quot;AzureVM&quot;"/>
                        <item value="&quot;AzureVMSS&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="timeLimitInSeconds" arg="$parameters.properties.timeLimitInSeconds">
                      <default value="18000"/>
                      <format maximum="18000" minimum="0"/>
                    </prop>
                    <prop type="integer64" name="totalBytesPerSession" arg="$parameters.properties.totalBytesPerSession">
                      <default value="1073741824"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="string" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer64" name="bytesToCapturePerPacket">
                      <default value="0"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="object" name="captureSettings">
                      <prop type="integer32" name="fileCount">
                        <default value="10"/>
                        <format maximum="10000" minimum="0"/>
                      </prop>
                      <prop type="integer64" name="fileSizeInBytes">
                        <default value="104857600"/>
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="integer32" name="sessionTimeLimitInSeconds">
                        <default value="86400"/>
                        <format maximum="604800" minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="boolean" name="continuousCapture"/>
                    <prop type="array<object>" name="filters">
                      <item type="object">
                        <prop type="string" name="localIPAddress"/>
                        <prop type="string" name="localPort"/>
                        <prop type="string" name="protocol">
                          <default value="&quot;Any&quot;"/>
                          <enum>
                            <item value="&quot;Any&quot;"/>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="remoteIPAddress"/>
                        <prop type="string" name="remotePort"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="scope">
                      <prop type="array<string>" name="exclude">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="include">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageLocation" required="True">
                      <prop type="string" name="filePath"/>
                      <prop type="string" name="localPath"/>
                      <prop type="string" name="storageId"/>
                      <prop type="string" name="storagePath"/>
                    </prop>
                    <prop type="string" name="target" required="True"/>
                    <prop type="string" name="targetType">
                      <enum>
                        <item value="&quot;AzureVM&quot;"/>
                        <item value="&quot;AzureVMSS&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="timeLimitInSeconds">
                      <default value="18000"/>
                      <format maximum="18000" minimum="0"/>
                    </prop>
                    <prop type="integer64" name="totalBytesPerSession">
                      <default value="1073741824"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2024-05-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the network watcher."/>
        </arg>
        <arg type="string" var="$Path.packetCaptureName" options="packet-capture-name name n" required="True" idPart="child_name_1">
          <help short="The name of the packet capture session."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="integer64" var="$parameters.properties.bytesToCapturePerPacket" options="bytes-to-capture-per-packet" group="Properties">
          <help short="Number of bytes captured per packet, the remaining bytes are truncated."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.captureSettings" options="capture-settings" group="Properties">
          <help short="The capture setting holds the 'FileCount', 'FileSizeInBytes', 'SessionTimeLimitInSeconds' values."/>
          <arg nullable="True" type="integer32" var="$parameters.properties.captureSettings.fileCount" options="file-count">
            <help short="Number of file count. Default value of count is 10 and maximum number is 10000."/>
            <format maximum="10000" minimum="0"/>
          </arg>
          <arg nullable="True" type="integer64" var="$parameters.properties.captureSettings.fileSizeInBytes" options="file-size-in-bytes">
            <help short="Number of bytes captured per packet. Default value in bytes 104857600 (100MB) and maximum in bytes 4294967295 (4GB)."/>
            <format maximum="4294967295" minimum="0"/>
          </arg>
          <arg nullable="True" type="integer32" var="$parameters.properties.captureSettings.sessionTimeLimitInSeconds" options="session-time-limit-in-seconds">
            <help short="Maximum duration of the capture session in seconds is 604800s (7 days) for a file. Default value in second 86400s (1 day)."/>
            <format maximum="604800" minimum="0"/>
          </arg>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.continuousCapture" options="continuous-capture" group="Properties">
          <help short="This continuous capture is a nullable boolean, which can hold 'null', 'true' or 'false' value. If we do not pass this parameter, it would be consider as 'null', default value is 'null'."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.filters" options="filters" group="Properties">
          <help short="A list of packet capture filters."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.filters[].localIPAddress" options="local-ip-address">
              <help short="Local IP Address to be filtered on. Notation: &quot;127.0.0.1&quot; for single address entry. &quot;127.0.0.1-127.0.0.255&quot; for range. &quot;127.0.0.1;127.0.0.5&quot;? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.filters[].localPort" options="local-port">
              <help short="Local port to be filtered on. Notation: &quot;80&quot; for single port entry.&quot;80-85&quot; for range. &quot;80;443;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.filters[].protocol" options="protocol">
              <help short="Protocol to be filtered on."/>
              <enum>
                <item name="Any" value="&quot;Any&quot;"/>
                <item name="TCP" value="&quot;TCP&quot;"/>
                <item name="UDP" value="&quot;UDP&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.filters[].remoteIPAddress" options="remote-ip-address">
              <help short="Local IP Address to be filtered on. Notation: &quot;127.0.0.1&quot; for single address entry. &quot;127.0.0.1-127.0.0.255&quot; for range. &quot;127.0.0.1;127.0.0.5;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.filters[].remotePort" options="remote-port">
              <help short="Remote port to be filtered on. Notation: &quot;80&quot; for single port entry.&quot;80-85&quot; for range. &quot;80;443;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.scope" options="scope" group="Properties">
          <help short="A list of AzureVMSS instances which can be included or excluded to run packet capture. If both included and excluded are empty, then the packet capture will run on all instances of AzureVMSS."/>
          <arg nullable="True" type="array<string>" var="$parameters.properties.scope.exclude" options="exclude">
            <help short="List of AzureVMSS instances which has to be excluded from the AzureVMSS from running packet capture."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.scope.include" options="include">
            <help short="List of AzureVMSS instances to run packet capture on."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.storageLocation" options="storage-location" group="Properties">
          <help short="The storage location for a packet capture session."/>
          <arg nullable="True" type="string" var="$parameters.properties.storageLocation.filePath" options="file-path">
            <help short="This path is invalid if 'Continuous Capture' is provided with 'true' or 'false'. A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.storageLocation.localPath" options="local-path">
            <help short="This path is valid if 'Continuous Capture' is provided with 'true' or 'false' and required if no storage ID is provided, otherwise optional. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.storageLocation.storageId" options="storage-id">
            <help short="The ID of the storage account to save the packet capture session. Required if no localPath or filePath is provided."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.storageLocation.storagePath" options="storage-path">
            <help short="The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture."/>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.target" options="target" group="Properties">
          <help short="The ID of the targeted resource, only AzureVM and AzureVMSS as target type are currently supported."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.targetType" options="target-type" group="Properties">
          <help short="Target type of the resource provided."/>
          <enum>
            <item name="AzureVM" value="&quot;AzureVM&quot;"/>
            <item name="AzureVMSS" value="&quot;AzureVMSS&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$parameters.properties.timeLimitInSeconds" options="time-limit-in-seconds" group="Properties">
          <help short="Maximum duration of the capture session in seconds."/>
          <format maximum="18000" minimum="0"/>
        </arg>
        <arg nullable="True" type="integer64" var="$parameters.properties.totalBytesPerSession" options="total-bytes-per-session" group="Properties">
          <help short="Maximum size of the capture output."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
      </argGroup>
      <operation operationId="PacketCaptures_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="get">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="PacketCaptureResult_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="string" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer64" name="bytesToCapturePerPacket">
                      <default value="0"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="object" name="captureSettings">
                      <prop type="integer32" name="fileCount">
                        <default value="10"/>
                        <format maximum="10000" minimum="0"/>
                      </prop>
                      <prop type="integer64" name="fileSizeInBytes">
                        <default value="104857600"/>
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="integer32" name="sessionTimeLimitInSeconds">
                        <default value="86400"/>
                        <format maximum="604800" minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="boolean" name="continuousCapture"/>
                    <prop type="array<object>" name="filters">
                      <item type="object">
                        <prop type="string" name="localIPAddress"/>
                        <prop type="string" name="localPort"/>
                        <prop type="string" name="protocol">
                          <default value="&quot;Any&quot;"/>
                          <enum>
                            <item value="&quot;Any&quot;"/>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="remoteIPAddress"/>
                        <prop type="string" name="remotePort"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="scope">
                      <prop type="array<string>" name="exclude">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="include">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageLocation" required="True">
                      <prop type="string" name="filePath"/>
                      <prop type="string" name="localPath"/>
                      <prop type="string" name="storageId"/>
                      <prop type="string" name="storagePath"/>
                    </prop>
                    <prop type="string" name="target" required="True"/>
                    <prop type="string" name="targetType">
                      <enum>
                        <item value="&quot;AzureVM&quot;"/>
                        <item value="&quot;AzureVMSS&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="timeLimitInSeconds">
                      <default value="18000"/>
                      <format maximum="18000" minimum="0"/>
                    </prop>
                    <prop type="integer64" name="totalBytesPerSession">
                      <default value="1073741824"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="integer64" name="bytesToCapturePerPacket" arg="$parameters.properties.bytesToCapturePerPacket">
                  <default value="0"/>
                  <format maximum="4294967295" minimum="0"/>
                </prop>
                <prop type="object" name="captureSettings" arg="$parameters.properties.captureSettings">
                  <prop type="integer32" name="fileCount" arg="$parameters.properties.captureSettings.fileCount">
                    <default value="10"/>
                    <format maximum="10000" minimum="0"/>
                  </prop>
                  <prop type="integer64" name="fileSizeInBytes" arg="$parameters.properties.captureSettings.fileSizeInBytes">
                    <default value="104857600"/>
                    <format maximum="4294967295" minimum="0"/>
                  </prop>
                  <prop type="integer32" name="sessionTimeLimitInSeconds" arg="$parameters.properties.captureSettings.sessionTimeLimitInSeconds">
                    <default value="86400"/>
                    <format maximum="604800" minimum="0"/>
                  </prop>
                </prop>
                <prop type="boolean" name="continuousCapture" arg="$parameters.properties.continuousCapture"/>
                <prop type="array<object>" name="filters" arg="$parameters.properties.filters">
                  <item type="object">
                    <prop type="string" name="localIPAddress" arg="$parameters.properties.filters[].localIPAddress"/>
                    <prop type="string" name="localPort" arg="$parameters.properties.filters[].localPort"/>
                    <prop type="string" name="protocol" arg="$parameters.properties.filters[].protocol">
                      <default value="&quot;Any&quot;"/>
                      <enum>
                        <item value="&quot;Any&quot;"/>
                        <item value="&quot;TCP&quot;"/>
                        <item value="&quot;UDP&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="remoteIPAddress" arg="$parameters.properties.filters[].remoteIPAddress"/>
                    <prop type="string" name="remotePort" arg="$parameters.properties.filters[].remotePort"/>
                  </item>
                </prop>
                <prop type="object" name="scope" arg="$parameters.properties.scope">
                  <prop type="array<string>" name="exclude" arg="$parameters.properties.scope.exclude">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="include" arg="$parameters.properties.scope.include">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="object" name="storageLocation" arg="$parameters.properties.storageLocation" required="True">
                  <prop type="string" name="filePath" arg="$parameters.properties.storageLocation.filePath"/>
                  <prop type="string" name="localPath" arg="$parameters.properties.storageLocation.localPath"/>
                  <prop type="string" name="storageId" arg="$parameters.properties.storageLocation.storageId"/>
                  <prop type="string" name="storagePath" arg="$parameters.properties.storageLocation.storagePath"/>
                </prop>
                <prop type="string" name="target" arg="$parameters.properties.target" required="True"/>
                <prop type="string" name="targetType" arg="$parameters.properties.targetType">
                  <enum>
                    <item value="&quot;AzureVM&quot;"/>
                    <item value="&quot;AzureVMSS&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="timeLimitInSeconds" arg="$parameters.properties.timeLimitInSeconds">
                  <default value="18000"/>
                  <format maximum="18000" minimum="0"/>
                </prop>
                <prop type="integer64" name="totalBytesPerSession" arg="$parameters.properties.totalBytesPerSession">
                  <default value="1073741824"/>
                  <format maximum="4294967295" minimum="0"/>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="PacketCaptures_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="put">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="@PacketCaptureResult_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
