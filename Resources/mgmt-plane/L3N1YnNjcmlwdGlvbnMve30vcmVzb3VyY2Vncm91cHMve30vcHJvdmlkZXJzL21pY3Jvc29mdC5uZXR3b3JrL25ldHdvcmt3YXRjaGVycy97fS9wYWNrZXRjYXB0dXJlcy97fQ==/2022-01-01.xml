<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network watcher packet-capture">
    <command name="show" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="watcher-name" required="True" group="" idPart="name">
          <help short="Name of the network watcher."/>
        </arg>
        <arg type="string" var="$Path.packetCaptureName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the packet capture session."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="watcher-rg" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group the watcher is in."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PacketCaptures_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="get">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="string" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer64" name="bytesToCapturePerPacket">
                      <default value="0"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="array<object>" name="filters">
                      <item type="object">
                        <prop type="string" name="localIPAddress"/>
                        <prop type="string" name="localPort"/>
                        <prop type="string" name="protocol">
                          <default value="&quot;Any&quot;"/>
                          <enum>
                            <item value="&quot;Any&quot;"/>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="remoteIPAddress"/>
                        <prop type="string" name="remotePort"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="scope">
                      <prop type="array<string>" name="exclude">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="include">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageLocation" required="True">
                      <prop type="string" name="filePath"/>
                      <prop type="string" name="storageId"/>
                      <prop type="string" name="storagePath"/>
                    </prop>
                    <prop type="string" name="target" required="True"/>
                    <prop type="string" name="targetType">
                      <enum>
                        <item value="&quot;AzureVM&quot;"/>
                        <item value="&quot;AzureVMSS&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="timeLimitInSeconds">
                      <default value="18000"/>
                      <format maximum="18000" minimum="0"/>
                    </prop>
                    <prop type="integer64" name="totalBytesPerSession">
                      <default value="1073741824"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="watcher-name" required="True" group="" idPart="name">
          <help short="Name of the network watcher."/>
        </arg>
        <arg type="string" var="$Path.packetCaptureName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the packet capture session."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="watcher-rg" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group the watcher is in."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PacketCaptures_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="delete">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="watcher-name" required="True" group="" idPart="name">
          <help short="Name of the network watcher."/>
        </arg>
        <arg type="string" var="$Path.packetCaptureName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the packet capture session."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="watcher-rg" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group the watcher is in."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="integer64" var="$parameters.properties.bytesToCapturePerPacket" options="capture-size" group="">
          <help short="Number of bytes captured per packet. Excess bytes are truncated."/>
          <default value="0"/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.filters" options="filters" group="">
          <help short="JSON encoded list of packet filters. Use `@{path}` to load from file."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.filters[].localIPAddress" options="local-ip-address">
              <help short="Local IP Address to be filtered on. Notation: &quot;127.0.0.1&quot; for single address entry. &quot;127.0.0.1-127.0.0.255&quot; for range. &quot;127.0.0.1;127.0.0.5&quot;? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg type="string" var="$parameters.properties.filters[].localPort" options="local-port">
              <help short="Local port to be filtered on. Notation: &quot;80&quot; for single port entry.&quot;80-85&quot; for range. &quot;80;443;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg type="string" var="$parameters.properties.filters[].protocol" options="protocol">
              <help short="Protocol to be filtered on."/>
              <default value="&quot;Any&quot;"/>
              <enum>
                <item name="Any" value="&quot;Any&quot;"/>
                <item name="TCP" value="&quot;TCP&quot;"/>
                <item name="UDP" value="&quot;UDP&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.filters[].remoteIPAddress" options="remote-ip-address">
              <help short="Local IP Address to be filtered on. Notation: &quot;127.0.0.1&quot; for single address entry. &quot;127.0.0.1-127.0.0.255&quot; for range. &quot;127.0.0.1;127.0.0.5;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg type="string" var="$parameters.properties.filters[].remotePort" options="remote-port">
              <help short="Remote port to be filtered on. Notation: &quot;80&quot; for single port entry.&quot;80-85&quot; for range. &quot;80;443;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.target" options="target" required="True" group="">
          <help short="Name or ID of the target resource. If `--target-type` is AzureVMSS, then `--target` is mandatory."/>
        </arg>
        <arg type="string" var="$parameters.properties.targetType" options="target-type" group="">
          <help short="Resource type of target."/>
          <default value="&quot;AzureVM&quot;"/>
          <enum>
            <item name="AzureVM" value="&quot;AzureVM&quot;"/>
            <item name="AzureVMSS" value="&quot;AzureVMSS&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$parameters.properties.timeLimitInSeconds" options="time-limit" group="">
          <help short="Maximum duration of the capture session in seconds."/>
          <default value="18000"/>
          <format maximum="18000" minimum="0"/>
        </arg>
        <arg type="integer64" var="$parameters.properties.totalBytesPerSession" options="capture-limit" group="">
          <help short="Maximum size in bytes of the capture output."/>
          <default value="1073741824"/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
      </argGroup>
      <argGroup name="Scope">
        <arg type="array<string>" var="$parameters.properties.scope.exclude" options="exclude" group="Scope">
          <help short="Space-separated list of VMSS instances to exclude in packet capture."/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.scope.include" options="include" group="Scope">
          <help short="Space-separated list of VMSS instances to include in packet capture like 0 1 2."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Storage">
        <arg type="string" var="$parameters.properties.storageLocation.filePath" options="file-path" group="Storage">
          <help short="Local path on the targeted VM at which to save the packet capture. For Linux VMs, the path must start with `/var/captures`."/>
        </arg>
        <arg type="string" var="$parameters.properties.storageLocation.storageId" options="storage-account" group="Storage">
          <help short="Name or ID of a storage account to save the packet capture to."/>
        </arg>
        <arg type="string" var="$parameters.properties.storageLocation.storagePath" options="storage-path" group="Storage">
          <help short="Fully qualified URI of an existing storage container in which to store the capture file. If not specified, the container `network-watcher-logs` will be created if it does not exist and the capture file will be stored there."/>
        </arg>
      </argGroup>
      <operation operationId="PacketCaptures_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="put">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="integer64" name="bytesToCapturePerPacket" arg="$parameters.properties.bytesToCapturePerPacket">
                      <default value="0"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="array<object>" name="filters" arg="$parameters.properties.filters">
                      <item type="object">
                        <prop type="string" name="localIPAddress" arg="$parameters.properties.filters[].localIPAddress"/>
                        <prop type="string" name="localPort" arg="$parameters.properties.filters[].localPort"/>
                        <prop type="string" name="protocol" arg="$parameters.properties.filters[].protocol">
                          <default value="&quot;Any&quot;"/>
                          <enum>
                            <item value="&quot;Any&quot;"/>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="remoteIPAddress" arg="$parameters.properties.filters[].remoteIPAddress"/>
                        <prop type="string" name="remotePort" arg="$parameters.properties.filters[].remotePort"/>
                      </item>
                    </prop>
                    <prop type="object" name="scope">
                      <prop type="array<string>" name="exclude" arg="$parameters.properties.scope.exclude">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="include" arg="$parameters.properties.scope.include">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageLocation" required="True">
                      <prop type="string" name="filePath" arg="$parameters.properties.storageLocation.filePath"/>
                      <prop type="string" name="storageId" arg="$parameters.properties.storageLocation.storageId"/>
                      <prop type="string" name="storagePath" arg="$parameters.properties.storageLocation.storagePath"/>
                    </prop>
                    <prop type="string" name="target" arg="$parameters.properties.target" required="True"/>
                    <prop type="string" name="targetType" arg="$parameters.properties.targetType">
                      <enum>
                        <item value="&quot;AzureVM&quot;"/>
                        <item value="&quot;AzureVMSS&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="timeLimitInSeconds" arg="$parameters.properties.timeLimitInSeconds">
                      <default value="18000"/>
                      <format maximum="18000" minimum="0"/>
                    </prop>
                    <prop type="integer64" name="totalBytesPerSession" arg="$parameters.properties.totalBytesPerSession">
                      <default value="1073741824"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="string" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer64" name="bytesToCapturePerPacket">
                      <default value="0"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="array<object>" name="filters">
                      <item type="object">
                        <prop type="string" name="localIPAddress"/>
                        <prop type="string" name="localPort"/>
                        <prop type="string" name="protocol">
                          <default value="&quot;Any&quot;"/>
                          <enum>
                            <item value="&quot;Any&quot;"/>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="remoteIPAddress"/>
                        <prop type="string" name="remotePort"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="scope">
                      <prop type="array<string>" name="exclude">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="include">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageLocation" required="True">
                      <prop type="string" name="filePath"/>
                      <prop type="string" name="storageId"/>
                      <prop type="string" name="storagePath"/>
                    </prop>
                    <prop type="string" name="target" required="True"/>
                    <prop type="string" name="targetType">
                      <enum>
                        <item value="&quot;AzureVM&quot;"/>
                        <item value="&quot;AzureVMSS&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="timeLimitInSeconds">
                      <default value="18000"/>
                      <format maximum="18000" minimum="0"/>
                    </prop>
                    <prop type="integer64" name="totalBytesPerSession">
                      <default value="1073741824"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="watcher-name" required="True" group="" idPart="name">
          <help short="Name of the network watcher."/>
        </arg>
        <arg type="string" var="$Path.packetCaptureName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the packet capture session."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="watcher-rg" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group the watcher is in."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="integer64" var="$parameters.properties.bytesToCapturePerPacket" options="capture-size" group="">
          <help short="Number of bytes captured per packet. Excess bytes are truncated."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.filters" options="filters" group="">
          <help short="JSON encoded list of packet filters. Use `@{path}` to load from file."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.filters[].localIPAddress" options="local-ip-address">
              <help short="Local IP Address to be filtered on. Notation: &quot;127.0.0.1&quot; for single address entry. &quot;127.0.0.1-127.0.0.255&quot; for range. &quot;127.0.0.1;127.0.0.5&quot;? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.filters[].localPort" options="local-port">
              <help short="Local port to be filtered on. Notation: &quot;80&quot; for single port entry.&quot;80-85&quot; for range. &quot;80;443;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.filters[].protocol" options="protocol">
              <help short="Protocol to be filtered on."/>
              <enum>
                <item name="Any" value="&quot;Any&quot;"/>
                <item name="TCP" value="&quot;TCP&quot;"/>
                <item name="UDP" value="&quot;UDP&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.filters[].remoteIPAddress" options="remote-ip-address">
              <help short="Local IP Address to be filtered on. Notation: &quot;127.0.0.1&quot; for single address entry. &quot;127.0.0.1-127.0.0.255&quot; for range. &quot;127.0.0.1;127.0.0.5;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.filters[].remotePort" options="remote-port">
              <help short="Remote port to be filtered on. Notation: &quot;80&quot; for single port entry.&quot;80-85&quot; for range. &quot;80;443;&quot; for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.target" options="target" group="">
          <help short="Name or ID of the target resource. If `--target-type` is AzureVMSS, then `--target` is mandatory."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.targetType" options="target-type" group="">
          <help short="Resource type of target."/>
          <default value="&quot;AzureVM&quot;"/>
          <enum>
            <item name="AzureVM" value="&quot;AzureVM&quot;"/>
            <item name="AzureVMSS" value="&quot;AzureVMSS&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$parameters.properties.timeLimitInSeconds" options="time-limit" group="">
          <help short="Maximum duration of the capture session in seconds."/>
          <format maximum="18000" minimum="0"/>
        </arg>
        <arg nullable="True" type="integer64" var="$parameters.properties.totalBytesPerSession" options="capture-limit" group="">
          <help short="Maximum size in bytes of the capture output."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
      </argGroup>
      <argGroup name="Scope">
        <arg nullable="True" type="array<string>" var="$parameters.properties.scope.exclude" options="exclude" group="Scope">
          <help short="Space-separated list of VMSS instances to exclude in packet capture."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.properties.scope.include" options="include" group="Scope">
          <help short="Space-separated list of VMSS instances to include in packet capture like 0 1 2."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Storage">
        <arg nullable="True" type="string" var="$parameters.properties.storageLocation.filePath" options="file-path" group="Storage">
          <help short="Local path on the targeted VM at which to save the packet capture. For Linux VMs, the path must start with `/var/captures`."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.storageLocation.storageId" options="storage-account" group="Storage">
          <help short="Name or ID of a storage account to save the packet capture to."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.storageLocation.storagePath" options="storage-path" group="Storage">
          <help short="Fully qualified URI of an existing storage container in which to store the capture file. If not specified, the container `network-watcher-logs` will be created if it does not exist and the capture file will be stored there."/>
        </arg>
      </argGroup>
      <operation operationId="PacketCaptures_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="get">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="PacketCaptureResult_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="string" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer64" name="bytesToCapturePerPacket">
                      <default value="0"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="array<object>" name="filters">
                      <item type="object">
                        <prop type="string" name="localIPAddress"/>
                        <prop type="string" name="localPort"/>
                        <prop type="string" name="protocol">
                          <default value="&quot;Any&quot;"/>
                          <enum>
                            <item value="&quot;Any&quot;"/>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="remoteIPAddress"/>
                        <prop type="string" name="remotePort"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="scope">
                      <prop type="array<string>" name="exclude">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="include">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageLocation" required="True">
                      <prop type="string" name="filePath"/>
                      <prop type="string" name="storageId"/>
                      <prop type="string" name="storagePath"/>
                    </prop>
                    <prop type="string" name="target" required="True"/>
                    <prop type="string" name="targetType">
                      <enum>
                        <item value="&quot;AzureVM&quot;"/>
                        <item value="&quot;AzureVMSS&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="timeLimitInSeconds">
                      <default value="18000"/>
                      <format maximum="18000" minimum="0"/>
                    </prop>
                    <prop type="integer64" name="totalBytesPerSession">
                      <default value="1073741824"/>
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="integer64" name="bytesToCapturePerPacket" arg="$parameters.properties.bytesToCapturePerPacket">
                  <default value="0"/>
                  <format maximum="4294967295" minimum="0"/>
                </prop>
                <prop type="array<object>" name="filters" arg="$parameters.properties.filters">
                  <item type="object">
                    <prop type="string" name="localIPAddress" arg="$parameters.properties.filters[].localIPAddress"/>
                    <prop type="string" name="localPort" arg="$parameters.properties.filters[].localPort"/>
                    <prop type="string" name="protocol" arg="$parameters.properties.filters[].protocol">
                      <default value="&quot;Any&quot;"/>
                      <enum>
                        <item value="&quot;Any&quot;"/>
                        <item value="&quot;TCP&quot;"/>
                        <item value="&quot;UDP&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="remoteIPAddress" arg="$parameters.properties.filters[].remoteIPAddress"/>
                    <prop type="string" name="remotePort" arg="$parameters.properties.filters[].remotePort"/>
                  </item>
                </prop>
                <prop type="object" name="scope">
                  <prop type="array<string>" name="exclude" arg="$parameters.properties.scope.exclude">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="include" arg="$parameters.properties.scope.include">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="object" name="storageLocation" required="True">
                  <prop type="string" name="filePath" arg="$parameters.properties.storageLocation.filePath"/>
                  <prop type="string" name="storageId" arg="$parameters.properties.storageLocation.storageId"/>
                  <prop type="string" name="storagePath" arg="$parameters.properties.storageLocation.storagePath"/>
                </prop>
                <prop type="string" name="target" arg="$parameters.properties.target" required="True"/>
                <prop type="string" name="targetType" arg="$parameters.properties.targetType">
                  <enum>
                    <item value="&quot;AzureVM&quot;"/>
                    <item value="&quot;AzureVMSS&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="timeLimitInSeconds" arg="$parameters.properties.timeLimitInSeconds">
                  <default value="18000"/>
                  <format maximum="18000" minimum="0"/>
                </prop>
                <prop type="integer64" name="totalBytesPerSession" arg="$parameters.properties.totalBytesPerSession">
                  <default value="1073741824"/>
                  <format maximum="4294967295" minimum="0"/>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="PacketCaptures_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}">
          <request method="put">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="packetCaptureName" arg="$Path.packetCaptureName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="@PacketCaptureResult_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
