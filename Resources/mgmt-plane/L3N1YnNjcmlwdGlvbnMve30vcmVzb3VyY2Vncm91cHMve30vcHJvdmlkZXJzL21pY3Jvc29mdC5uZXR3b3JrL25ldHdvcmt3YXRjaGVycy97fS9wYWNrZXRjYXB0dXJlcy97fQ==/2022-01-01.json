{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}", "version": "2022-01-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="}], "commandGroups": [{"name": "network watcher packet-capture", "commands": [{"name": "show", "version": "2022-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}", "version": "2022-01-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.networkWatcherName", "options": ["watcher-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the network watcher."}}, {"type": "string", "var": "$Path.packetCaptureName", "options": ["n", "name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the packet capture session."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["watcher-rg"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the resource group the watcher is in."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "PacketCaptures_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "networkWatcherName", "arg": "$Path.networkWatcherName", "required": true}, {"type": "string", "name": "packetCaptureName", "arg": "$Path.packetCaptureName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "string", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": 0}, "type": "integer64", "name": "bytesToCapturePerPacket", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "array<object>", "name": "filters", "item": {"type": "object", "props": [{"type": "string", "name": "localIPAddress"}, {"type": "string", "name": "localPort"}, {"default": {"value": "Any"}, "type": "string", "name": "protocol", "enum": {"items": [{"value": "Any"}, {"value": "TCP"}, {"value": "UDP"}]}}, {"type": "string", "name": "remoteIPAddress"}, {"type": "string", "name": "remotePort"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "scope", "props": [{"type": "array<string>", "name": "exclude", "item": {"type": "string"}}, {"type": "array<string>", "name": "include", "item": {"type": "string"}}]}, {"type": "object", "name": "storageLocation", "required": true, "props": [{"type": "string", "name": "filePath"}, {"type": "string", "name": "storageId"}, {"type": "string", "name": "storagePath"}]}, {"type": "string", "name": "target", "required": true}, {"type": "string", "name": "targetType", "enum": {"items": [{"value": "AzureVM"}, {"value": "AzureVMSS"}]}}, {"default": {"value": 18000}, "type": "integer32", "name": "timeLimitInSeconds", "format": {"maximum": 18000, "minimum": 0}}, {"default": {"value": 1073741824}, "type": "integer64", "name": "totalBytesPerSession", "format": {"maximum": 4294967295, "minimum": 0}}], "clientFlatten": true}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2022-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}", "version": "2022-01-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.networkWatcherName", "options": ["watcher-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the network watcher."}}, {"type": "string", "var": "$Path.packetCaptureName", "options": ["n", "name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the packet capture session."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["watcher-rg"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the resource group the watcher is in."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "PacketCaptures_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "networkWatcherName", "arg": "$Path.networkWatcherName", "required": true}, {"type": "string", "name": "packetCaptureName", "arg": "$Path.packetCaptureName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "confirmation": ""}, {"name": "create", "version": "2022-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}", "version": "2022-01-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.networkWatcherName", "options": ["watcher-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the network watcher."}}, {"type": "string", "var": "$Path.packetCaptureName", "options": ["n", "name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the packet capture session."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["watcher-rg"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the resource group the watcher is in."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "integer64", "var": "$parameters.properties.bytesToCapturePerPacket", "options": ["capture-size"], "group": "", "help": {"short": "Number of bytes captured per packet. Excess bytes are truncated."}, "default": {"value": 0}, "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "array<object>", "var": "$parameters.properties.filters", "options": ["filters"], "group": "", "help": {"short": "JSON encoded list of packet filters. Use `@{path}` to load from file."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.filters[].localIPAddress", "options": ["local-ip-address"], "help": {"short": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."}}, {"type": "string", "var": "$parameters.properties.filters[].localPort", "options": ["local-port"], "help": {"short": "Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."}}, {"type": "string", "var": "$parameters.properties.filters[].protocol", "options": ["protocol"], "help": {"short": "Protocol to be filtered on."}, "default": {"value": "Any"}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "TCP", "value": "TCP"}, {"name": "UDP", "value": "UDP"}]}}, {"type": "string", "var": "$parameters.properties.filters[].remoteIPAddress", "options": ["remote-ip-address"], "help": {"short": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."}}, {"type": "string", "var": "$parameters.properties.filters[].remotePort", "options": ["remote-port"], "help": {"short": "Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."}}]}}, {"type": "string", "var": "$parameters.properties.target", "options": ["target"], "required": true, "group": "", "help": {"short": "Name or ID of the target resource. If `--target-type` is AzureVMSS, then `--target` is mandatory."}}, {"type": "string", "var": "$parameters.properties.targetType", "options": ["target-type"], "group": "", "help": {"short": "Resource type of target."}, "default": {"value": "AzureVM"}, "enum": {"items": [{"name": "AzureVM", "value": "AzureVM"}, {"name": "AzureVMSS", "value": "AzureVMSS"}]}}, {"type": "integer32", "var": "$parameters.properties.timeLimitInSeconds", "options": ["time-limit"], "group": "", "help": {"short": "Maximum duration of the capture session in seconds."}, "default": {"value": 18000}, "format": {"maximum": 18000, "minimum": 0}}, {"type": "integer64", "var": "$parameters.properties.totalBytesPerSession", "options": ["capture-limit"], "group": "", "help": {"short": "Maximum size in bytes of the capture output."}, "default": {"value": 1073741824}, "format": {"maximum": 4294967295, "minimum": 0}}]}, {"name": "Scope", "args": [{"type": "array<string>", "var": "$parameters.properties.scope.exclude", "options": ["exclude"], "group": "Scope", "help": {"short": "Space-separated list of VMSS instances to exclude in packet capture."}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$parameters.properties.scope.include", "options": ["include"], "group": "Scope", "help": {"short": "Space-separated list of VMSS instances to include in packet capture like 0 1 2."}, "item": {"type": "string"}}]}, {"name": "Storage", "args": [{"type": "string", "var": "$parameters.properties.storageLocation.filePath", "options": ["file-path"], "group": "Storage", "help": {"short": "Local path on the targeted VM at which to save the packet capture. For Linux VMs, the path must start with `/var/captures`."}}, {"type": "string", "var": "$parameters.properties.storageLocation.storageId", "options": ["storage-account"], "group": "Storage", "help": {"short": "Name or ID of a storage account to save the packet capture to."}}, {"type": "string", "var": "$parameters.properties.storageLocation.storagePath", "options": ["storage-path"], "group": "Storage", "help": {"short": "Fully qualified URI of an existing storage container in which to store the capture file. If not specified, the container `network-watcher-logs` will be created if it does not exist and the capture file will be stored there."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "PacketCaptures_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "networkWatcherName", "arg": "$Path.networkWatcherName", "required": true}, {"type": "string", "name": "packetCaptureName", "arg": "$Path.packetCaptureName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": 0}, "type": "integer64", "name": "bytesToCapturePerPacket", "arg": "$parameters.properties.bytesToCapturePerPacket", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "array<object>", "name": "filters", "arg": "$parameters.properties.filters", "item": {"type": "object", "props": [{"type": "string", "name": "localIPAddress", "arg": "$parameters.properties.filters[].localIPAddress"}, {"type": "string", "name": "localPort", "arg": "$parameters.properties.filters[].localPort"}, {"default": {"value": "Any"}, "type": "string", "name": "protocol", "arg": "$parameters.properties.filters[].protocol", "enum": {"items": [{"value": "Any"}, {"value": "TCP"}, {"value": "UDP"}]}}, {"type": "string", "name": "remoteIPAddress", "arg": "$parameters.properties.filters[].remoteIPAddress"}, {"type": "string", "name": "remotePort", "arg": "$parameters.properties.filters[].remotePort"}]}}, {"type": "object", "name": "scope", "props": [{"type": "array<string>", "name": "exclude", "arg": "$parameters.properties.scope.exclude", "item": {"type": "string"}}, {"type": "array<string>", "name": "include", "arg": "$parameters.properties.scope.include", "item": {"type": "string"}}]}, {"type": "object", "name": "storageLocation", "required": true, "props": [{"type": "string", "name": "filePath", "arg": "$parameters.properties.storageLocation.filePath"}, {"type": "string", "name": "storageId", "arg": "$parameters.properties.storageLocation.storageId"}, {"type": "string", "name": "storagePath", "arg": "$parameters.properties.storageLocation.storagePath"}]}, {"type": "string", "name": "target", "arg": "$parameters.properties.target", "required": true}, {"type": "string", "name": "targetType", "arg": "$parameters.properties.targetType", "enum": {"items": [{"value": "AzureVM"}, {"value": "AzureVMSS"}]}}, {"default": {"value": 18000}, "type": "integer32", "name": "timeLimitInSeconds", "arg": "$parameters.properties.timeLimitInSeconds", "format": {"maximum": 18000, "minimum": 0}}, {"default": {"value": 1073741824}, "type": "integer64", "name": "totalBytesPerSession", "arg": "$parameters.properties.totalBytesPerSession", "format": {"maximum": 4294967295, "minimum": 0}}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "string", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": 0}, "type": "integer64", "name": "bytesToCapturePerPacket", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "array<object>", "name": "filters", "item": {"type": "object", "props": [{"type": "string", "name": "localIPAddress"}, {"type": "string", "name": "localPort"}, {"default": {"value": "Any"}, "type": "string", "name": "protocol", "enum": {"items": [{"value": "Any"}, {"value": "TCP"}, {"value": "UDP"}]}}, {"type": "string", "name": "remoteIPAddress"}, {"type": "string", "name": "remotePort"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "scope", "props": [{"type": "array<string>", "name": "exclude", "item": {"type": "string"}}, {"type": "array<string>", "name": "include", "item": {"type": "string"}}]}, {"type": "object", "name": "storageLocation", "required": true, "props": [{"type": "string", "name": "filePath"}, {"type": "string", "name": "storageId"}, {"type": "string", "name": "storagePath"}]}, {"type": "string", "name": "target", "required": true}, {"type": "string", "name": "targetType", "enum": {"items": [{"value": "AzureVM"}, {"value": "AzureVMSS"}]}}, {"default": {"value": 18000}, "type": "integer32", "name": "timeLimitInSeconds", "format": {"maximum": 18000, "minimum": 0}}, {"default": {"value": 1073741824}, "type": "integer64", "name": "totalBytesPerSession", "format": {"maximum": 4294967295, "minimum": 0}}], "clientFlatten": true}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2022-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/packetcaptures/{}", "version": "2022-01-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vcGFja2V0Q2FwdHVyZXMve3BhY2tldENhcHR1cmVOYW1lfQ==/V/MjAyMi0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.networkWatcherName", "options": ["watcher-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the network watcher."}}, {"type": "string", "var": "$Path.packetCaptureName", "options": ["n", "name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "Name of the packet capture session."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["watcher-rg"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the resource group the watcher is in."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.bytesToCapturePerPacket", "options": ["capture-size"], "group": "", "help": {"short": "Number of bytes captured per packet. Excess bytes are truncated."}, "format": {"maximum": 4294967295, "minimum": 0}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.filters", "options": ["filters"], "group": "", "help": {"short": "JSON encoded list of packet filters. Use `@{path}` to load from file."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.filters[].localIPAddress", "options": ["local-ip-address"], "help": {"short": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.filters[].localPort", "options": ["local-port"], "help": {"short": "Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.filters[].protocol", "options": ["protocol"], "help": {"short": "Protocol to be filtered on."}, "enum": {"items": [{"name": "Any", "value": "Any"}, {"name": "TCP", "value": "TCP"}, {"name": "UDP", "value": "UDP"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.filters[].remoteIPAddress", "options": ["remote-ip-address"], "help": {"short": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.filters[].remotePort", "options": ["remote-port"], "help": {"short": "Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null."}}]}}, {"type": "string", "var": "$parameters.properties.target", "options": ["target"], "group": "", "help": {"short": "Name or ID of the target resource. If `--target-type` is AzureVMSS, then `--target` is mandatory."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.targetType", "options": ["target-type"], "group": "", "help": {"short": "Resource type of target."}, "default": {"value": "AzureVM"}, "enum": {"items": [{"name": "AzureVM", "value": "AzureVM"}, {"name": "AzureVMSS", "value": "AzureVMSS"}]}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.timeLimitInSeconds", "options": ["time-limit"], "group": "", "help": {"short": "Maximum duration of the capture session in seconds."}, "format": {"maximum": 18000, "minimum": 0}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.totalBytesPerSession", "options": ["capture-limit"], "group": "", "help": {"short": "Maximum size in bytes of the capture output."}, "format": {"maximum": 4294967295, "minimum": 0}}]}, {"name": "Scope", "args": [{"nullable": true, "type": "array<string>", "var": "$parameters.properties.scope.exclude", "options": ["exclude"], "group": "Scope", "help": {"short": "Space-separated list of VMSS instances to exclude in packet capture."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.scope.include", "options": ["include"], "group": "Scope", "help": {"short": "Space-separated list of VMSS instances to include in packet capture like 0 1 2."}, "item": {"nullable": true, "type": "string"}}]}, {"name": "Storage", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.storageLocation.filePath", "options": ["file-path"], "group": "Storage", "help": {"short": "Local path on the targeted VM at which to save the packet capture. For Linux VMs, the path must start with `/var/captures`."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageLocation.storageId", "options": ["storage-account"], "group": "Storage", "help": {"short": "Name or ID of a storage account to save the packet capture to."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageLocation.storagePath", "options": ["storage-path"], "group": "Storage", "help": {"short": "Fully qualified URI of an existing storage container in which to store the capture file. If not specified, the container `network-watcher-logs` will be created if it does not exist and the capture file will be stored there."}}]}], "operations": [{"operationId": "PacketCaptures_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "networkWatcherName", "arg": "$Path.networkWatcherName", "required": true}, {"type": "string", "name": "packetCaptureName", "arg": "$Path.packetCaptureName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "string", "name": "id"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": 0}, "type": "integer64", "name": "bytesToCapturePerPacket", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "array<object>", "name": "filters", "item": {"type": "object", "props": [{"type": "string", "name": "localIPAddress"}, {"type": "string", "name": "localPort"}, {"default": {"value": "Any"}, "type": "string", "name": "protocol", "enum": {"items": [{"value": "Any"}, {"value": "TCP"}, {"value": "UDP"}]}}, {"type": "string", "name": "remoteIPAddress"}, {"type": "string", "name": "remotePort"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "scope", "props": [{"type": "array<string>", "name": "exclude", "item": {"type": "string"}}, {"type": "array<string>", "name": "include", "item": {"type": "string"}}]}, {"type": "object", "name": "storageLocation", "required": true, "props": [{"type": "string", "name": "filePath"}, {"type": "string", "name": "storageId"}, {"type": "string", "name": "storagePath"}]}, {"type": "string", "name": "target", "required": true}, {"type": "string", "name": "targetType", "enum": {"items": [{"value": "AzureVM"}, {"value": "AzureVMSS"}]}}, {"default": {"value": 18000}, "type": "integer32", "name": "timeLimitInSeconds", "format": {"maximum": 18000, "minimum": 0}}, {"default": {"value": 1073741824}, "type": "integer64", "name": "totalBytesPerSession", "format": {"maximum": 4294967295, "minimum": 0}}], "clientFlatten": true}], "cls": "PacketCaptureResult_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": 0}, "type": "integer64", "name": "bytesToCapturePerPacket", "arg": "$parameters.properties.bytesToCapturePerPacket", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "array<object>", "name": "filters", "arg": "$parameters.properties.filters", "item": {"type": "object", "props": [{"type": "string", "name": "localIPAddress", "arg": "$parameters.properties.filters[].localIPAddress"}, {"type": "string", "name": "localPort", "arg": "$parameters.properties.filters[].localPort"}, {"default": {"value": "Any"}, "type": "string", "name": "protocol", "arg": "$parameters.properties.filters[].protocol", "enum": {"items": [{"value": "Any"}, {"value": "TCP"}, {"value": "UDP"}]}}, {"type": "string", "name": "remoteIPAddress", "arg": "$parameters.properties.filters[].remoteIPAddress"}, {"type": "string", "name": "remotePort", "arg": "$parameters.properties.filters[].remotePort"}]}}, {"type": "object", "name": "scope", "props": [{"type": "array<string>", "name": "exclude", "arg": "$parameters.properties.scope.exclude", "item": {"type": "string"}}, {"type": "array<string>", "name": "include", "arg": "$parameters.properties.scope.include", "item": {"type": "string"}}]}, {"type": "object", "name": "storageLocation", "required": true, "props": [{"type": "string", "name": "filePath", "arg": "$parameters.properties.storageLocation.filePath"}, {"type": "string", "name": "storageId", "arg": "$parameters.properties.storageLocation.storageId"}, {"type": "string", "name": "storagePath", "arg": "$parameters.properties.storageLocation.storagePath"}]}, {"type": "string", "name": "target", "arg": "$parameters.properties.target", "required": true}, {"type": "string", "name": "targetType", "arg": "$parameters.properties.targetType", "enum": {"items": [{"value": "AzureVM"}, {"value": "AzureVMSS"}]}}, {"default": {"value": 18000}, "type": "integer32", "name": "timeLimitInSeconds", "arg": "$parameters.properties.timeLimitInSeconds", "format": {"maximum": 18000, "minimum": 0}}, {"default": {"value": 1073741824}, "type": "integer64", "name": "totalBytesPerSession", "arg": "$parameters.properties.totalBytesPerSession", "format": {"maximum": 4294967295, "minimum": 0}}], "clientFlatten": true}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "PacketCaptures_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "networkWatcherName", "arg": "$Path.networkWatcherName", "required": true}, {"type": "string", "name": "packetCaptureName", "arg": "$Path.packetCaptureName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "@PacketCaptureResult_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}