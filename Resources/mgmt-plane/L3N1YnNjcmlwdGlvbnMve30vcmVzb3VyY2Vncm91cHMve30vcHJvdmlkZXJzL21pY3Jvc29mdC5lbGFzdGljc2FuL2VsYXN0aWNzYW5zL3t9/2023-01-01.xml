<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}" version="2023-01-01" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9/V/MjAyMy0wMS0wMQ=="/>
  <commandGroup name="elastic-san">
    <command name="show" version="2023-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}" version="2023-01-01" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9/V/MjAyMy0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.elasticSanName" options="elastic-san-name name n" required="True" idPart="name">
          <help short="The name of the ElasticSan."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ElasticSans_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}">
          <request method="get">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="availabilityZones">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="baseSizeTiB" required="True"/>
                    <prop type="integer64" name="extendedCapacitySizeTiB" required="True"/>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" required="True" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Invalid&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name" required="True">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Premium_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Premium&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="integer64" name="totalIops"/>
                    <prop readOnly="True" type="integer64" name="totalMBps"/>
                    <prop readOnly="True" type="integer64" name="totalSizeTiB"/>
                    <prop readOnly="True" type="integer64" name="totalVolumeSizeGiB"/>
                    <prop readOnly="True" type="integer64" name="volumeGroupCount"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-01-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}" version="2023-01-01" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9/V/MjAyMy0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.elasticSanName" options="elastic-san-name name n" required="True" idPart="name">
          <help short="The name of the ElasticSan."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ElasticSans_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}">
          <request method="delete">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}" version="2023-01-01" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9/V/MjAyMy0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.elasticSanName" options="elastic-san-name name n" required="True" idPart="name">
          <help short="The name of the ElasticSan."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="The geo-location where the resource lives."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Azure resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<string>" var="$parameters.properties.availabilityZones" options="availability-zones" group="Properties">
          <help short="Logical zone for Elastic San resource; example: [&quot;1&quot;]."/>
          <item type="string"/>
        </arg>
        <arg type="integer64" var="$parameters.properties.baseSizeTiB" options="base-size-tib" required="True" group="Properties">
          <help short="Base size of the Elastic San appliance in TiB."/>
        </arg>
        <arg type="integer64" var="$parameters.properties.extendedCapacitySizeTiB" options="extended-capacity-size-tib extended-size" required="True" group="Properties">
          <help short="Extended size of the Elastic San appliance in TiB."/>
        </arg>
        <arg type="string" var="$parameters.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="Allow or disallow public network access to ElasticSan. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.properties.sku" options="sku" required="True" group="Properties">
          <help short="resource sku"/>
          <arg type="string" var="$parameters.properties.sku.name" options="name" required="True">
            <help short="The sku name."/>
            <enum>
              <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
              <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.sku.tier" options="tier">
            <help short="The sku tier."/>
            <enum>
              <item name="Premium" value="&quot;Premium&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ElasticSans_Create">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}">
          <request method="put">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="availabilityZones" arg="$parameters.properties.availabilityZones">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="baseSizeTiB" arg="$parameters.properties.baseSizeTiB" required="True"/>
                    <prop type="integer64" name="extendedCapacitySizeTiB" arg="$parameters.properties.extendedCapacitySizeTiB" required="True"/>
                    <prop type="string" name="publicNetworkAccess" arg="$parameters.properties.publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="sku" arg="$parameters.properties.sku" required="True">
                      <prop type="string" name="name" arg="$parameters.properties.sku.name" required="True">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Premium_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier" arg="$parameters.properties.sku.tier">
                        <enum>
                          <item value="&quot;Premium&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="availabilityZones">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="baseSizeTiB" required="True"/>
                    <prop type="integer64" name="extendedCapacitySizeTiB" required="True"/>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" required="True" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Invalid&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name" required="True">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Premium_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Premium&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="integer64" name="totalIops"/>
                    <prop readOnly="True" type="integer64" name="totalMBps"/>
                    <prop readOnly="True" type="integer64" name="totalSizeTiB"/>
                    <prop readOnly="True" type="integer64" name="totalVolumeSizeGiB"/>
                    <prop readOnly="True" type="integer64" name="volumeGroupCount"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}" version="2023-01-01" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9/V/MjAyMy0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.elasticSanName" options="elastic-san-name name n" required="True" idPart="name">
          <help short="The name of the ElasticSan."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Azure resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<string>" var="$parameters.properties.availabilityZones" options="availability-zones" group="Properties">
          <help short="Logical zone for Elastic San resource; example: [&quot;1&quot;]."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg type="integer64" var="$parameters.properties.baseSizeTiB" options="base-size-tib" group="Properties">
          <help short="Base size of the Elastic San appliance in TiB."/>
        </arg>
        <arg type="integer64" var="$parameters.properties.extendedCapacitySizeTiB" options="extended-capacity-size-tib extended-size" group="Properties">
          <help short="Extended size of the Elastic San appliance in TiB."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="Allow or disallow public network access to ElasticSan. Value is optional but if passed in, must be 'Enabled' or 'Disabled'."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.properties.sku" options="sku" group="Properties">
          <help short="resource sku"/>
          <arg type="string" var="$parameters.properties.sku.name" options="name">
            <help short="The sku name."/>
            <enum>
              <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
              <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.sku.tier" options="tier">
            <help short="The sku tier."/>
            <enum>
              <item name="Premium" value="&quot;Premium&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ElasticSans_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}">
          <request method="get">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ElasticSan_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="availabilityZones">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="baseSizeTiB" required="True"/>
                    <prop type="integer64" name="extendedCapacitySizeTiB" required="True"/>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" required="True" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Invalid&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Invalid&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name" required="True">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Premium_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Premium&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="integer64" name="totalIops"/>
                    <prop readOnly="True" type="integer64" name="totalMBps"/>
                    <prop readOnly="True" type="integer64" name="totalSizeTiB"/>
                    <prop readOnly="True" type="integer64" name="totalVolumeSizeGiB"/>
                    <prop readOnly="True" type="integer64" name="volumeGroupCount"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="array<string>" name="availabilityZones" arg="$parameters.properties.availabilityZones">
                  <item type="string"/>
                </prop>
                <prop type="integer64" name="baseSizeTiB" arg="$parameters.properties.baseSizeTiB" required="True"/>
                <prop type="integer64" name="extendedCapacitySizeTiB" arg="$parameters.properties.extendedCapacitySizeTiB" required="True"/>
                <prop type="string" name="publicNetworkAccess" arg="$parameters.properties.publicNetworkAccess">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="sku" arg="$parameters.properties.sku" required="True">
                  <prop type="string" name="name" arg="$parameters.properties.sku.name" required="True">
                    <enum>
                      <item value="&quot;Premium_LRS&quot;"/>
                      <item value="&quot;Premium_ZRS&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="tier" arg="$parameters.properties.sku.tier">
                    <enum>
                      <item value="&quot;Premium&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ElasticSans_Create">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}">
          <request method="put">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ElasticSan_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
