<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.storageactions/storagetasks" version="2023-01-01" swagger="mgmt-plane/storageactions/ResourceProviders/Microsoft.StorageActions/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlN0b3JhZ2VBY3Rpb25zL3N0b3JhZ2VUYXNrcw==/V/MjAyMy0wMS0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storageactions/storagetasks" version="2023-01-01" swagger="mgmt-plane/storageactions/ResourceProviders/Microsoft.StorageActions/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUFjdGlvbnMvc3RvcmFnZVRhc2tz/V/MjAyMy0wMS0wMQ=="/>
  <commandGroup name="storage-actions task">
    <command name="list" version="2023-01-01">
      <resource id="/subscriptions/{}/providers/microsoft.storageactions/storagetasks" version="2023-01-01" swagger="mgmt-plane/storageactions/ResourceProviders/Microsoft.StorageActions/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlN0b3JhZ2VBY3Rpb25zL3N0b3JhZ2VUYXNrcw==/V/MjAyMy0wMS0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storageactions/storagetasks" version="2023-01-01" swagger="mgmt-plane/storageactions/ResourceProviders/Microsoft.StorageActions/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUFjdGlvbnMvc3RvcmFnZVRhc2tz/V/MjAyMy0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_StorageTasks_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_StorageTasks_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_StorageTasks_ListByResourceGroup" operationId="StorageTasks_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageActions/storageTasks">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageActions/storageTasks/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity" required="True">
                        <prop readOnly="True" type="uuid" name="principalId"/>
                        <prop readOnly="True" type="uuid" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item nullable="True" type="object">
                              <prop readOnly="True" type="uuid" name="clientId"/>
                              <prop readOnly="True" type="uuid" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="object" name="action" required="True">
                          <prop type="object" name="else">
                            <prop type="array<@StorageTaskOperation_read>" name="operations" required="True">
                              <item type="@StorageTaskOperation_read"/>
                            </prop>
                          </prop>
                          <prop type="object" name="if" required="True">
                            <prop type="string" name="condition" required="True"/>
                            <prop type="array<object>" name="operations" required="True">
                              <item type="object" cls="StorageTaskOperation_read">
                                <prop type="string" name="name" required="True">
                                  <enum>
                                    <item value="&quot;DeleteBlob&quot;"/>
                                    <item value="&quot;SetBlobExpiry&quot;"/>
                                    <item value="&quot;SetBlobImmutabilityPolicy&quot;"/>
                                    <item value="&quot;SetBlobLegalHold&quot;"/>
                                    <item value="&quot;SetBlobTags&quot;"/>
                                    <item value="&quot;SetBlobTier&quot;"/>
                                    <item value="&quot;UndeleteBlob&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="onFailure">
                                  <enum>
                                    <item value="&quot;break&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="onSuccess">
                                  <enum>
                                    <item value="&quot;continue&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="object" name="parameters">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="creationTimeInUtc"/>
                        <prop type="string" name="description" required="True"/>
                        <prop type="boolean" name="enabled" required="True"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;ValidateSubscriptionQuotaBegin&quot;"/>
                            <item value="&quot;ValidateSubscriptionQuotaEnd&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer64" name="taskVersion">
                          <format maximum="1" minimum="1"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_StorageTasks_ListBySubscription" operationId="StorageTasks_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.StorageActions/storageTasks">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageActions/storageTasks/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity" required="True">
                        <prop readOnly="True" type="uuid" name="principalId"/>
                        <prop readOnly="True" type="uuid" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item nullable="True" type="object">
                              <prop readOnly="True" type="uuid" name="clientId"/>
                              <prop readOnly="True" type="uuid" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="object" name="action" required="True">
                          <prop type="object" name="else">
                            <prop type="array<@StorageTaskOperation_read>" name="operations" required="True">
                              <item type="@StorageTaskOperation_read"/>
                            </prop>
                          </prop>
                          <prop type="object" name="if" required="True">
                            <prop type="string" name="condition" required="True"/>
                            <prop type="array<@StorageTaskOperation_read>" name="operations" required="True">
                              <item type="@StorageTaskOperation_read"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="creationTimeInUtc"/>
                        <prop type="string" name="description" required="True"/>
                        <prop type="boolean" name="enabled" required="True"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;ValidateSubscriptionQuotaBegin&quot;"/>
                            <item value="&quot;ValidateSubscriptionQuotaEnd&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer64" name="taskVersion">
                          <format maximum="1" minimum="1"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
