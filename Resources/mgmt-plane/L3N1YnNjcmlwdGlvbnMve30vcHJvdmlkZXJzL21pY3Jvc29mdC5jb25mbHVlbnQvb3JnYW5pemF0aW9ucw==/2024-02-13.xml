<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.confluent/organizations" version="2024-02-13" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNvbmZsdWVudC9vcmdhbml6YXRpb25z/V/MjAyNC0wMi0xMw=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.confluent/organizations" version="2024-02-13" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uZmx1ZW50L29yZ2FuaXphdGlvbnM=/V/MjAyNC0wMi0xMw=="/>
  <commandGroup name="confluent organization">
    <command name="list" version="2024-02-13">
      <resource id="/subscriptions/{}/providers/microsoft.confluent/organizations" version="2024-02-13" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNvbmZsdWVudC9vcmdhbml6YXRpb25z/V/MjAyNC0wMi0xMw=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.confluent/organizations" version="2024-02-13" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uZmx1ZW50L29yZ2FuaXphdGlvbnM=/V/MjAyNC0wMi0xMw=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group" group="" idPart="resource_group">
          <help short="Resource Group Name"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Subscription id"/>
        </arg>
      </argGroup>
      <condition var="$Condition_Organization_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Organization_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Organization_ListByResourceGroup" operationId="Organization_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-13&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop readOnly="True" type="dateTime" name="createdTime"/>
                        <prop type="object" name="offerDetail" required="True">
                          <prop type="string" name="id" required="True">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="planId" required="True">
                            <format maxLength="200"/>
                          </prop>
                          <prop type="string" name="planName" required="True">
                            <format maxLength="200"/>
                          </prop>
                          <prop type="string" name="privateOfferId">
                            <format maxLength="255"/>
                          </prop>
                          <prop type="array<string>" name="privateOfferIds">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="publisherId" required="True">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;PendingFulfillmentStart&quot;"/>
                              <item value="&quot;Reinstated&quot;"/>
                              <item value="&quot;Started&quot;"/>
                              <item value="&quot;Subscribed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;Unsubscribed&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="termId">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="termUnit" required="True">
                            <format maxLength="25"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="organizationId"/>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="ssoUrl"/>
                        <prop type="object" name="userDetail" required="True">
                          <prop type="string" name="aadEmail"/>
                          <prop type="string" name="emailAddress" required="True">
                            <format pattern="^\S+@\S+\.\S+$"/>
                          </prop>
                          <prop type="string" name="firstName">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="lastName">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="userPrincipalName"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Organization_ListBySubscription" operationId="Organization_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Confluent/organizations">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-13&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop readOnly="True" type="dateTime" name="createdTime"/>
                        <prop type="object" name="offerDetail" required="True">
                          <prop type="string" name="id" required="True">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="planId" required="True">
                            <format maxLength="200"/>
                          </prop>
                          <prop type="string" name="planName" required="True">
                            <format maxLength="200"/>
                          </prop>
                          <prop type="string" name="privateOfferId">
                            <format maxLength="255"/>
                          </prop>
                          <prop type="array<string>" name="privateOfferIds">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="publisherId" required="True">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;PendingFulfillmentStart&quot;"/>
                              <item value="&quot;Reinstated&quot;"/>
                              <item value="&quot;Started&quot;"/>
                              <item value="&quot;Subscribed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;Unsubscribed&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="termId">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="termUnit" required="True">
                            <format maxLength="25"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="organizationId"/>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="ssoUrl"/>
                        <prop type="object" name="userDetail" required="True">
                          <prop type="string" name="aadEmail"/>
                          <prop type="string" name="emailAddress" required="True">
                            <format pattern="^\S+@\S+\.\S+$"/>
                          </prop>
                          <prop type="string" name="firstName">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="lastName">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="userPrincipalName"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
