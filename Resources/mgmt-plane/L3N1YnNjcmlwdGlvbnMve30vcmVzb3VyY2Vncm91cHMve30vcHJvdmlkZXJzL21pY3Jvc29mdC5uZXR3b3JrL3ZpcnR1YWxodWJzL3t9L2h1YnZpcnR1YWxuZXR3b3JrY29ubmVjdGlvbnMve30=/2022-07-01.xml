<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/hubvirtualnetworkconnections/{}" version="2022-07-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L2h1YlZpcnR1YWxOZXR3b3JrQ29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wNy0wMQ=="/>
  <commandGroup name="network vhub connection">
    <command name="show" version="2022-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/hubvirtualnetworkconnections/{}" version="2022-07-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L2h1YlZpcnR1YWxOZXR3b3JrQ29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the connection."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
          <help short="Name of the virtual hub."/>
        </arg>
      </argGroup>
      <operation operationId="HubVirtualNetworkConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}">
          <request method="get">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/hubVirtualNetworkConnections/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowHubToRemoteVnetTransit"/>
                    <prop type="boolean" name="allowRemoteVnetToUseHubVnetGateways"/>
                    <prop type="boolean" name="enableInternetSecurity"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="routingConfiguration">
                      <prop type="@SubResource_read" name="associatedRouteTable"/>
                      <prop type="@SubResource_read" name="inboundRouteMap"/>
                      <prop type="@SubResource_read" name="outboundRouteMap"/>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<@SubResource_read>" name="ids">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<string>" name="labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes">
                        <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<object>" name="staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="nextHopIpAddress"/>
                          </item>
                        </prop>
                        <prop type="object" name="staticRoutesConfig">
                          <prop readOnly="True" type="boolean" name="propagateStaticRoutes"/>
                          <prop type="string" name="vnetLocalRouteOverrideCriteria">
                            <enum>
                              <item value="&quot;Contains&quot;"/>
                              <item value="&quot;Equal&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-07-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/hubvirtualnetworkconnections/{}" version="2022-07-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L2h1YlZpcnR1YWxOZXR3b3JrQ29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the connection."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
          <help short="Name of the virtual hub."/>
        </arg>
      </argGroup>
      <operation operationId="HubVirtualNetworkConnections_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}">
          <request method="delete">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/hubvirtualnetworkconnections/{}" version="2022-07-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L2h1YlZpcnR1YWxOZXR3b3JrQ29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the connection."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
          <help short="Name of the virtual hub."/>
        </arg>
        <arg type="boolean" var="$hubVirtualNetworkConnectionParameters.properties.allowHubToRemoteVnetTransit" options="remote-vnet-transit" group="">
          <help short="Deprecated: Enable hub to remote VNet transit."/>
        </arg>
        <arg type="boolean" var="$hubVirtualNetworkConnectionParameters.properties.allowRemoteVnetToUseHubVnetGateways" options="use-hub-vnet-gateways" group="">
          <help short="Deprecated: Allow remote VNet to use hub's VNet gateways."/>
        </arg>
        <arg type="boolean" var="$hubVirtualNetworkConnectionParameters.properties.enableInternetSecurity" options="internet-security" group="">
          <help short="Enable internet security and default is enabled."/>
          <default value="true"/>
        </arg>
        <arg type="string" var="$hubVirtualNetworkConnectionParameters.properties.remoteVirtualNetwork.id" options="remote-vnet" group="">
          <help short="Name of ID of the remote VNet to connect to."/>
        </arg>
      </argGroup>
      <argGroup name="HubVirtualNetworkConnectionParameters">
        <arg type="ResourceId" var="$hubVirtualNetworkConnectionParameters.id" options="connection-id" hide="True" group="HubVirtualNetworkConnectionParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/hubVirtualNetworkConnections/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Routing Configuration">
        <arg type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.associatedRouteTable.id" options="associated-route-table associated" stage="Preview" group="Routing Configuration">
          <help short="Resource ID of route table associated with this routing configuration."/>
        </arg>
        <arg type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.inboundRouteMap.id" options="associated-inbound-routemap" group="Routing Configuration">
          <help short="Resource URI of inbound routemap for this connection's routing configuration."/>
        </arg>
        <arg type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.outboundRouteMap.id" options="associated-outbound-routemap" group="Routing Configuration">
          <help short="Resource URI of outbound routemap for this connection's routing configuration."/>
        </arg>
        <arg type="array<object>" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids" options="route-tables" stage="Preview" group="Routing Configuration">
          <help short="The list of resource ids of all the RouteTables."/>
          <item type="object" cls="SubResource_create">
            <arg type="string" var="@SubResource_create.id" options="id">
              <help short="Resource ID."/>
            </arg>
          </item>
        </arg>
        <arg type="array<string>" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels" options="labels" stage="Preview" group="Routing Configuration">
          <help short="Space-separated list of labels for propagated route tables."/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes" options="static-routes" stage="Preview" group="Routing Configuration">
          <help short="List of all Static Routes."/>
          <item type="object">
            <arg type="array<string>" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes" options="address-prefixes">
              <help short="List of all address prefixes."/>
              <item type="string"/>
            </arg>
            <arg type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name" options="route-name" group="">
              <help short="The name of the StaticRoute that is unique within a VnetRoute."/>
            </arg>
            <arg type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress" options="next-hop" group="">
              <help short="The ip address of the next hop."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="VnetRoutes">
        <arg type="object" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig" options="static-routes-config" hide="True" group="VnetRoutes">
          <help short="Configuration for static routes on this HubVnetConnection."/>
          <arg type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria" options="vnet-local-route-override-criteria">
            <help short="Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke."/>
            <enum>
              <item name="Contains" value="&quot;Contains&quot;"/>
              <item name="Equal" value="&quot;Equal&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="HubVirtualNetworkConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}">
          <request method="put">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="hubVirtualNetworkConnectionParameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$hubVirtualNetworkConnectionParameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/hubVirtualNetworkConnections/{}"/>
                  </prop>
                  <prop type="string" name="name" arg="$Path.connectionName"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowHubToRemoteVnetTransit" arg="$hubVirtualNetworkConnectionParameters.properties.allowHubToRemoteVnetTransit"/>
                    <prop type="boolean" name="allowRemoteVnetToUseHubVnetGateways" arg="$hubVirtualNetworkConnectionParameters.properties.allowRemoteVnetToUseHubVnetGateways"/>
                    <prop type="boolean" name="enableInternetSecurity" arg="$hubVirtualNetworkConnectionParameters.properties.enableInternetSecurity"/>
                    <prop type="object" name="remoteVirtualNetwork">
                      <prop type="string" name="id" arg="$hubVirtualNetworkConnectionParameters.properties.remoteVirtualNetwork.id"/>
                    </prop>
                    <prop type="object" name="routingConfiguration">
                      <prop type="object" name="associatedRouteTable">
                        <prop type="string" name="id" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.associatedRouteTable.id"/>
                      </prop>
                      <prop type="object" name="inboundRouteMap">
                        <prop type="string" name="id" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.inboundRouteMap.id"/>
                      </prop>
                      <prop type="object" name="outboundRouteMap">
                        <prop type="string" name="id" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.outboundRouteMap.id"/>
                      </prop>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<object>" name="ids" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids">
                          <item type="object" cls="SubResource_create">
                            <prop type="string" name="id" arg="@SubResource_create.id"/>
                          </item>
                        </prop>
                        <prop type="array<string>" name="labels" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes">
                        <prop type="array<object>" name="staticRoutes" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name"/>
                            <prop type="string" name="nextHopIpAddress" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress"/>
                          </item>
                        </prop>
                        <prop type="object" name="staticRoutesConfig" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig">
                          <prop type="string" name="vnetLocalRouteOverrideCriteria" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria">
                            <enum>
                              <item value="&quot;Contains&quot;"/>
                              <item value="&quot;Equal&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/hubVirtualNetworkConnections/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowHubToRemoteVnetTransit"/>
                    <prop type="boolean" name="allowRemoteVnetToUseHubVnetGateways"/>
                    <prop type="boolean" name="enableInternetSecurity"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="routingConfiguration">
                      <prop type="@SubResource_read" name="associatedRouteTable"/>
                      <prop type="@SubResource_read" name="inboundRouteMap"/>
                      <prop type="@SubResource_read" name="outboundRouteMap"/>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<@SubResource_read>" name="ids">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<string>" name="labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes">
                        <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<object>" name="staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="nextHopIpAddress"/>
                          </item>
                        </prop>
                        <prop type="object" name="staticRoutesConfig">
                          <prop readOnly="True" type="boolean" name="propagateStaticRoutes"/>
                          <prop type="string" name="vnetLocalRouteOverrideCriteria">
                            <enum>
                              <item value="&quot;Contains&quot;"/>
                              <item value="&quot;Equal&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualhubs/{}/hubvirtualnetworkconnections/{}" version="2022-07-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsSHVicy97dmlydHVhbEh1Yk5hbWV9L2h1YlZpcnR1YWxOZXR3b3JrQ29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyMi0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="Name of the connection."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualHubName" options="vhub-name" required="True" group="" idPart="name">
          <help short="Name of the virtual hub."/>
        </arg>
        <arg nullable="True" type="boolean" var="$hubVirtualNetworkConnectionParameters.properties.allowHubToRemoteVnetTransit" options="remote-vnet-transit" hide="True" group="">
          <help short="Deprecated: Enable hub to remote VNet transit."/>
        </arg>
        <arg nullable="True" type="boolean" var="$hubVirtualNetworkConnectionParameters.properties.allowRemoteVnetToUseHubVnetGateways" options="use-hub-vnet-gateways" hide="True" group="">
          <help short="Deprecated: Allow remote VNet to use hub's VNet gateways."/>
        </arg>
      </argGroup>
      <argGroup name="HubVirtualNetworkConnectionParameters">
        <arg nullable="True" type="ResourceId" var="$hubVirtualNetworkConnectionParameters.id" options="connection-id" hide="True" group="HubVirtualNetworkConnectionParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/hubVirtualNetworkConnections/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$hubVirtualNetworkConnectionParameters.properties.enableInternetSecurity" options="enable-internet-security" hide="True" group="Properties">
          <help short="Enable internet security."/>
        </arg>
        <arg nullable="True" type="object" var="$hubVirtualNetworkConnectionParameters.properties.remoteVirtualNetwork" options="remote-virtual-network" hide="True" group="Properties" cls="SubResource_update">
          <help short="Reference to the remote virtual network."/>
          <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Routing Configuration">
        <arg nullable="True" type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.associatedRouteTable.id" options="associated-route-table associated" stage="Preview" group="Routing Configuration">
          <help short="Resource ID of route table associated with this routing configuration."/>
        </arg>
        <arg nullable="True" type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.inboundRouteMap.id" options="associated-inbound-routemap" group="Routing Configuration">
          <help short="Resource URI of inbound routemap for this connection's routing configuration."/>
        </arg>
        <arg nullable="True" type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.outboundRouteMap.id" options="associated-outbound-routemap" group="Routing Configuration">
          <help short="Resource URI of outbound routemap for this connection's routing configuration."/>
        </arg>
        <arg nullable="True" type="array<@SubResource_update>" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids" options="route-tables" stage="Preview" group="Routing Configuration">
          <help short="The list of resource ids of all the RouteTables."/>
          <item nullable="True" type="@SubResource_update"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels" options="labels" stage="Preview" group="Routing Configuration">
          <help short="Space-separated list of labels for propagated route tables."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="RoutingConfiguration">
        <arg nullable="True" type="object" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes" options="vnet-routes" hide="True" group="RoutingConfiguration">
          <help short="List of routes that control routing from VirtualHub into a virtual network connection."/>
          <arg nullable="True" type="array<object>" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes" options="static-routes">
            <help short="List of all Static Routes."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<string>" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes" options="address-prefixes">
                <help short="List of all address prefixes."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name" options="name">
                <help short="The name of the StaticRoute that is unique within a VnetRoute."/>
              </arg>
              <arg nullable="True" type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress" options="next-hop-ip-address">
                <help short="The ip address of the next hop."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="object" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig" options="static-routes-config">
            <help short="Configuration for static routes on this HubVnetConnection."/>
            <arg nullable="True" type="string" var="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria" options="vnet-local-route-override-criteria">
              <help short="Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke."/>
              <enum>
                <item name="Contains" value="&quot;Contains&quot;"/>
                <item name="Equal" value="&quot;Equal&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="HubVirtualNetworkConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}">
          <request method="get">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="HubVirtualNetworkConnection_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/hubVirtualNetworkConnections/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowHubToRemoteVnetTransit"/>
                    <prop type="boolean" name="allowRemoteVnetToUseHubVnetGateways"/>
                    <prop type="boolean" name="enableInternetSecurity"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="remoteVirtualNetwork" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="routingConfiguration">
                      <prop type="@SubResource_read" name="associatedRouteTable"/>
                      <prop type="@SubResource_read" name="inboundRouteMap"/>
                      <prop type="@SubResource_read" name="outboundRouteMap"/>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<@SubResource_read>" name="ids">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<string>" name="labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes">
                        <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<object>" name="staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="nextHopIpAddress"/>
                          </item>
                        </prop>
                        <prop type="object" name="staticRoutesConfig">
                          <prop readOnly="True" type="boolean" name="propagateStaticRoutes"/>
                          <prop type="string" name="vnetLocalRouteOverrideCriteria">
                            <enum>
                              <item value="&quot;Contains&quot;"/>
                              <item value="&quot;Equal&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="hubVirtualNetworkConnectionParameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$hubVirtualNetworkConnectionParameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualHubs/{}/hubVirtualNetworkConnections/{}"/>
              </prop>
              <prop type="string" name="name" arg="$Path.connectionName"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="allowHubToRemoteVnetTransit" arg="$hubVirtualNetworkConnectionParameters.properties.allowHubToRemoteVnetTransit"/>
                <prop type="boolean" name="allowRemoteVnetToUseHubVnetGateways" arg="$hubVirtualNetworkConnectionParameters.properties.allowRemoteVnetToUseHubVnetGateways"/>
                <prop type="boolean" name="enableInternetSecurity" arg="$hubVirtualNetworkConnectionParameters.properties.enableInternetSecurity"/>
                <prop type="object" name="remoteVirtualNetwork" arg="$hubVirtualNetworkConnectionParameters.properties.remoteVirtualNetwork" cls="SubResource_update">
                  <prop type="string" name="id" arg="@SubResource_update.id"/>
                </prop>
                <prop type="object" name="routingConfiguration">
                  <prop type="object" name="associatedRouteTable">
                    <prop type="string" name="id" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.associatedRouteTable.id"/>
                  </prop>
                  <prop type="object" name="inboundRouteMap">
                    <prop type="string" name="id" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.inboundRouteMap.id"/>
                  </prop>
                  <prop type="object" name="outboundRouteMap">
                    <prop type="string" name="id" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.outboundRouteMap.id"/>
                  </prop>
                  <prop type="object" name="propagatedRouteTables">
                    <prop type="array<@SubResource_update>" name="ids" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids">
                      <item type="@SubResource_update"/>
                    </prop>
                    <prop type="array<string>" name="labels" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="object" name="vnetRoutes" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes">
                    <prop type="array<object>" name="staticRoutes" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes">
                      <item type="object">
                        <prop type="array<string>" name="addressPrefixes" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="name" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name"/>
                        <prop type="string" name="nextHopIpAddress" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress"/>
                      </item>
                    </prop>
                    <prop type="object" name="staticRoutesConfig" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig">
                      <prop type="string" name="vnetLocalRouteOverrideCriteria" arg="$hubVirtualNetworkConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria">
                        <enum>
                          <item value="&quot;Contains&quot;"/>
                          <item value="&quot;Equal&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="HubVirtualNetworkConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualHubs/{virtualHubName}/hubVirtualNetworkConnections/{connectionName}">
          <request method="put">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualHubName" arg="$Path.virtualHubName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@HubVirtualNetworkConnection_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
