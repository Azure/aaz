<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.edge/contexts/{}/workflows/{}/versions/{}" version="2025-06-01" swagger="mgmt-plane/edge/ResourceProviders/Microsoft.Edge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWRnZS9jb250ZXh0cy97Y29udGV4dE5hbWV9L3dvcmtmbG93cy97d29ya2Zsb3dOYW1lfS92ZXJzaW9ucy97dmVyc2lvbk5hbWV9/V/MjAyNS0wNi0wMQ=="/>
  <commandGroup name="workload-orchestration context workflow version">
    <command name="show" version="2025-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.edge/contexts/{}/workflows/{}/versions/{}" version="2025-06-01" swagger="mgmt-plane/edge/ResourceProviders/Microsoft.Edge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWRnZS9jb250ZXh0cy97Y29udGV4dE5hbWV9L3dvcmtmbG93cy97d29ya2Zsb3dOYW1lfS92ZXJzaW9ucy97dmVyc2lvbk5hbWV9/V/MjAyNS0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.contextName" options="context-name" required="True" idPart="name">
          <help short="The name of the Context."/>
          <format pattern="^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.versionName" options="version-name name n" required="True" idPart="child_name_2">
          <help short="The name of the workflowVersion."/>
          <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.workflowName" options="workflow-name" required="True" idPart="child_name_1">
          <help short="Name of the workflow"/>
          <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
      </argGroup>
      <operation operationId="WorkflowVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}">
          <request method="get">
            <path>
              <param type="string" name="contextName" arg="$Path.contextName" required="True">
                <format pattern="^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="versionName" arg="$Path.versionName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="workflowName" arg="$Path.workflowName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="eTag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;CustomLocation&quot;"/>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Edge/contexts/{}/workflows/{}/versions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="string" name="configuration"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Initialized&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="reviewId"/>
                    <prop readOnly="True" type="integer32" name="revision"/>
                    <prop type="object" name="specification">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="stageSpec" required="True">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="object" name="specification">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="object" name="taskOption">
                          <prop type="integer32" name="concurrency">
                            <default value="1"/>
                            <format maximum="8" minimum="1"/>
                          </prop>
                          <prop type="object" name="errorAction">
                            <prop type="integer32" name="maxToleratedFailures">
                              <format minimum="0"/>
                            </prop>
                            <prop type="string" name="mode">
                              <default value="&quot;stopOnAnyFailure&quot;"/>
                              <enum>
                                <item value="&quot;silentlyContinue&quot;"/>
                                <item value="&quot;stopOnAnyFailure&quot;"/>
                                <item value="&quot;stopOnNFailures&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="tasks">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="object" name="specification" required="True">
                              <additionalProp>
                                <item type="any"/>
                              </additionalProp>
                            </prop>
                            <prop type="ResourceId" name="targetId"/>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="state">
                      <enum>
                        <item value="&quot;Deployed&quot;"/>
                        <item value="&quot;Deploying&quot;"/>
                        <item value="&quot;ExternalValidationFailed&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InReview&quot;"/>
                        <item value="&quot;PendingExternalValidation&quot;"/>
                        <item value="&quot;ReadyToDeploy&quot;"/>
                        <item value="&quot;ReadyToUpgrade&quot;"/>
                        <item value="&quot;Staging&quot;"/>
                        <item value="&quot;Undeployed&quot;"/>
                        <item value="&quot;UpgradeInReview&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-06-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.edge/contexts/{}/workflows/{}/versions/{}" version="2025-06-01" swagger="mgmt-plane/edge/ResourceProviders/Microsoft.Edge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWRnZS9jb250ZXh0cy97Y29udGV4dE5hbWV9L3dvcmtmbG93cy97d29ya2Zsb3dOYW1lfS92ZXJzaW9ucy97dmVyc2lvbk5hbWV9/V/MjAyNS0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.contextName" options="context-name" required="True" idPart="name">
          <help short="The name of the Context."/>
          <format pattern="^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.versionName" options="version-name name n" required="True" idPart="child_name_2">
          <help short="The name of the workflowVersion."/>
          <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.workflowName" options="workflow-name" required="True" idPart="child_name_1">
          <help short="Name of the workflow"/>
          <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
      </argGroup>
      <operation operationId="WorkflowVersions_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}">
          <request method="delete">
            <path>
              <param type="string" name="contextName" arg="$Path.contextName" required="True">
                <format pattern="^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="versionName" arg="$Path.versionName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="workflowName" arg="$Path.workflowName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.edge/contexts/{}/workflows/{}/versions/{}" version="2025-06-01" swagger="mgmt-plane/edge/ResourceProviders/Microsoft.Edge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWRnZS9jb250ZXh0cy97Y29udGV4dE5hbWV9L3dvcmtmbG93cy97d29ya2Zsb3dOYW1lfS92ZXJzaW9ucy97dmVyc2lvbk5hbWV9/V/MjAyNS0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.contextName" options="context-name" required="True" idPart="name">
          <help short="The name of the Context."/>
          <format pattern="^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.versionName" options="version-name name n" required="True" idPart="child_name_2">
          <help short="The name of the workflowVersion."/>
          <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.workflowName" options="workflow-name" required="True" idPart="child_name_1">
          <help short="Name of the workflow"/>
          <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$resource.properties.specification" options="specification" group="Properties">
          <help short="Execution specification"/>
          <additionalProp>
            <item type="any"/>
          </additionalProp>
        </arg>
        <arg type="array<object>" var="$resource.properties.stageSpec" options="stage-spec" group="Properties">
          <help short="A list of stage specs"/>
          <item type="object">
            <arg type="string" var="$resource.properties.stageSpec[].name" options="name" required="True">
              <help short="Name of Stage"/>
            </arg>
            <arg type="object" var="$resource.properties.stageSpec[].specification" options="specification">
              <help short="Stage specification"/>
              <additionalProp>
                <item type="any"/>
              </additionalProp>
            </arg>
            <arg type="object" var="$resource.properties.stageSpec[].taskOption" options="task-option">
              <help short="Task option for the stage"/>
              <arg type="integer32" var="$resource.properties.stageSpec[].taskOption.concurrency" options="concurrency">
                <help short="Parallel worker numbers of the tasks"/>
                <default value="1"/>
                <format maximum="8" minimum="1"/>
              </arg>
              <arg type="object" var="$resource.properties.stageSpec[].taskOption.errorAction" options="error-action">
                <help short="Error action for the tasks"/>
                <arg type="integer32" var="$resource.properties.stageSpec[].taskOption.errorAction.maxToleratedFailures" options="max-tolerated-failures">
                  <help short="Max tolerated failures"/>
                  <format minimum="0"/>
                </arg>
                <arg type="string" var="$resource.properties.stageSpec[].taskOption.errorAction.mode" options="mode">
                  <help short="Error action mode"/>
                  <default value="&quot;stopOnAnyFailure&quot;"/>
                  <enum>
                    <item name="silentlyContinue" value="&quot;silentlyContinue&quot;"/>
                    <item name="stopOnAnyFailure" value="&quot;stopOnAnyFailure&quot;"/>
                    <item name="stopOnNFailures" value="&quot;stopOnNFailures&quot;"/>
                  </enum>
                </arg>
              </arg>
            </arg>
            <arg type="array<object>" var="$resource.properties.stageSpec[].tasks" options="tasks">
              <help short="List of tasks in the stage"/>
              <item type="object">
                <arg type="string" var="$resource.properties.stageSpec[].tasks[].name" options="name" required="True">
                  <help short="Name of Task"/>
                </arg>
                <arg type="object" var="$resource.properties.stageSpec[].tasks[].specification" options="specification" required="True">
                  <help short="Task specification"/>
                  <additionalProp>
                    <item type="any"/>
                  </additionalProp>
                </arg>
                <arg type="ResourceId" var="$resource.properties.stageSpec[].tasks[].targetId" options="target-id">
                  <help short="Target ARM id"/>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.extendedLocation" options="extended-location" group="Resource">
          <help short="The complex type of the extended location."/>
          <arg type="string" var="$resource.extendedLocation.name" options="name" required="True">
            <help short="The name of the extended location."/>
          </arg>
          <arg type="string" var="$resource.extendedLocation.type" options="type" required="True">
            <help short="The type of the extended location."/>
            <enum>
              <item name="CustomLocation" value="&quot;CustomLocation&quot;"/>
              <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="WorkflowVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}">
          <request method="put">
            <path>
              <param type="string" name="contextName" arg="$Path.contextName" required="True">
                <format pattern="^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="versionName" arg="$Path.versionName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="workflowName" arg="$Path.workflowName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$resource.extendedLocation">
                    <prop type="string" name="name" arg="$resource.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$resource.extendedLocation.type" required="True">
                      <enum>
                        <item value="&quot;CustomLocation&quot;"/>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="object" name="specification" arg="$resource.properties.specification">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="stageSpec" arg="$resource.properties.stageSpec" required="True">
                      <item type="object">
                        <prop type="string" name="name" arg="$resource.properties.stageSpec[].name" required="True"/>
                        <prop type="object" name="specification" arg="$resource.properties.stageSpec[].specification">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="object" name="taskOption" arg="$resource.properties.stageSpec[].taskOption">
                          <prop type="integer32" name="concurrency" arg="$resource.properties.stageSpec[].taskOption.concurrency">
                            <default value="1"/>
                            <format maximum="8" minimum="1"/>
                          </prop>
                          <prop type="object" name="errorAction" arg="$resource.properties.stageSpec[].taskOption.errorAction">
                            <prop type="integer32" name="maxToleratedFailures" arg="$resource.properties.stageSpec[].taskOption.errorAction.maxToleratedFailures">
                              <format minimum="0"/>
                            </prop>
                            <prop type="string" name="mode" arg="$resource.properties.stageSpec[].taskOption.errorAction.mode">
                              <default value="&quot;stopOnAnyFailure&quot;"/>
                              <enum>
                                <item value="&quot;silentlyContinue&quot;"/>
                                <item value="&quot;stopOnAnyFailure&quot;"/>
                                <item value="&quot;stopOnNFailures&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="tasks" arg="$resource.properties.stageSpec[].tasks">
                          <item type="object">
                            <prop type="string" name="name" arg="$resource.properties.stageSpec[].tasks[].name" required="True"/>
                            <prop type="object" name="specification" arg="$resource.properties.stageSpec[].tasks[].specification" required="True">
                              <additionalProp>
                                <item type="any"/>
                              </additionalProp>
                            </prop>
                            <prop type="ResourceId" name="targetId" arg="$resource.properties.stageSpec[].tasks[].targetId"/>
                          </item>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="eTag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;CustomLocation&quot;"/>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Edge/contexts/{}/workflows/{}/versions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="string" name="configuration"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Initialized&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="reviewId"/>
                    <prop readOnly="True" type="integer32" name="revision"/>
                    <prop type="object" name="specification">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="stageSpec" required="True">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="object" name="specification">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="object" name="taskOption">
                          <prop type="integer32" name="concurrency">
                            <default value="1"/>
                            <format maximum="8" minimum="1"/>
                          </prop>
                          <prop type="object" name="errorAction">
                            <prop type="integer32" name="maxToleratedFailures">
                              <format minimum="0"/>
                            </prop>
                            <prop type="string" name="mode">
                              <default value="&quot;stopOnAnyFailure&quot;"/>
                              <enum>
                                <item value="&quot;silentlyContinue&quot;"/>
                                <item value="&quot;stopOnAnyFailure&quot;"/>
                                <item value="&quot;stopOnNFailures&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="tasks">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="object" name="specification" required="True">
                              <additionalProp>
                                <item type="any"/>
                              </additionalProp>
                            </prop>
                            <prop type="ResourceId" name="targetId"/>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="state">
                      <enum>
                        <item value="&quot;Deployed&quot;"/>
                        <item value="&quot;Deploying&quot;"/>
                        <item value="&quot;ExternalValidationFailed&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InReview&quot;"/>
                        <item value="&quot;PendingExternalValidation&quot;"/>
                        <item value="&quot;ReadyToDeploy&quot;"/>
                        <item value="&quot;ReadyToUpgrade&quot;"/>
                        <item value="&quot;Staging&quot;"/>
                        <item value="&quot;Undeployed&quot;"/>
                        <item value="&quot;UpgradeInReview&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.edge/contexts/{}/workflows/{}/versions/{}" version="2025-06-01" swagger="mgmt-plane/edge/ResourceProviders/Microsoft.Edge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWRnZS9jb250ZXh0cy97Y29udGV4dE5hbWV9L3dvcmtmbG93cy97d29ya2Zsb3dOYW1lfS92ZXJzaW9ucy97dmVyc2lvbk5hbWV9/V/MjAyNS0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.contextName" options="context-name" required="True" idPart="name">
          <help short="The name of the Context."/>
          <format pattern="^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.versionName" options="version-name name n" required="True" idPart="child_name_2">
          <help short="The name of the workflowVersion."/>
          <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.workflowName" options="workflow-name" required="True" idPart="child_name_1">
          <help short="Name of the workflow"/>
          <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$resource.properties.specification" options="specification" group="Properties">
          <help short="Execution specification"/>
          <additionalProp>
            <item nullable="True" type="any"/>
          </additionalProp>
        </arg>
        <arg type="array<object>" var="$resource.properties.stageSpec" options="stage-spec" group="Properties">
          <help short="A list of stage specs"/>
          <item nullable="True" type="object">
            <arg type="string" var="$resource.properties.stageSpec[].name" options="name">
              <help short="Name of Stage"/>
            </arg>
            <arg nullable="True" type="object" var="$resource.properties.stageSpec[].specification" options="specification">
              <help short="Stage specification"/>
              <additionalProp>
                <item nullable="True" type="any"/>
              </additionalProp>
            </arg>
            <arg nullable="True" type="object" var="$resource.properties.stageSpec[].taskOption" options="task-option">
              <help short="Task option for the stage"/>
              <arg nullable="True" type="integer32" var="$resource.properties.stageSpec[].taskOption.concurrency" options="concurrency">
                <help short="Parallel worker numbers of the tasks"/>
                <format maximum="8" minimum="1"/>
              </arg>
              <arg nullable="True" type="object" var="$resource.properties.stageSpec[].taskOption.errorAction" options="error-action">
                <help short="Error action for the tasks"/>
                <arg nullable="True" type="integer32" var="$resource.properties.stageSpec[].taskOption.errorAction.maxToleratedFailures" options="max-tolerated-failures">
                  <help short="Max tolerated failures"/>
                  <format minimum="0"/>
                </arg>
                <arg nullable="True" type="string" var="$resource.properties.stageSpec[].taskOption.errorAction.mode" options="mode">
                  <help short="Error action mode"/>
                  <enum>
                    <item name="silentlyContinue" value="&quot;silentlyContinue&quot;"/>
                    <item name="stopOnAnyFailure" value="&quot;stopOnAnyFailure&quot;"/>
                    <item name="stopOnNFailures" value="&quot;stopOnNFailures&quot;"/>
                  </enum>
                </arg>
              </arg>
            </arg>
            <arg nullable="True" type="array<object>" var="$resource.properties.stageSpec[].tasks" options="tasks">
              <help short="List of tasks in the stage"/>
              <item nullable="True" type="object">
                <arg type="string" var="$resource.properties.stageSpec[].tasks[].name" options="name">
                  <help short="Name of Task"/>
                </arg>
                <arg type="object" var="$resource.properties.stageSpec[].tasks[].specification" options="specification">
                  <help short="Task specification"/>
                  <additionalProp>
                    <item nullable="True" type="any"/>
                  </additionalProp>
                </arg>
                <arg nullable="True" type="ResourceId" var="$resource.properties.stageSpec[].tasks[].targetId" options="target-id">
                  <help short="Target ARM id"/>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="WorkflowVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}">
          <request method="get">
            <path>
              <param type="string" name="contextName" arg="$Path.contextName" required="True">
                <format pattern="^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="versionName" arg="$Path.versionName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="workflowName" arg="$Path.workflowName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="WorkflowVersion_read">
                  <prop readOnly="True" type="string" name="eTag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;CustomLocation&quot;"/>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Edge/contexts/{}/workflows/{}/versions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop readOnly="True" type="string" name="configuration"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Initialized&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="reviewId"/>
                    <prop readOnly="True" type="integer32" name="revision"/>
                    <prop type="object" name="specification">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="stageSpec" required="True">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="object" name="specification">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="object" name="taskOption">
                          <prop type="integer32" name="concurrency">
                            <default value="1"/>
                            <format maximum="8" minimum="1"/>
                          </prop>
                          <prop type="object" name="errorAction">
                            <prop type="integer32" name="maxToleratedFailures">
                              <format minimum="0"/>
                            </prop>
                            <prop type="string" name="mode">
                              <default value="&quot;stopOnAnyFailure&quot;"/>
                              <enum>
                                <item value="&quot;silentlyContinue&quot;"/>
                                <item value="&quot;stopOnAnyFailure&quot;"/>
                                <item value="&quot;stopOnNFailures&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="tasks">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="object" name="specification" required="True">
                              <additionalProp>
                                <item type="any"/>
                              </additionalProp>
                            </prop>
                            <prop type="ResourceId" name="targetId"/>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="state">
                      <enum>
                        <item value="&quot;Deployed&quot;"/>
                        <item value="&quot;Deploying&quot;"/>
                        <item value="&quot;ExternalValidationFailed&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InReview&quot;"/>
                        <item value="&quot;PendingExternalValidation&quot;"/>
                        <item value="&quot;ReadyToDeploy&quot;"/>
                        <item value="&quot;ReadyToUpgrade&quot;"/>
                        <item value="&quot;Staging&quot;"/>
                        <item value="&quot;Undeployed&quot;"/>
                        <item value="&quot;UpgradeInReview&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="object" name="specification" arg="$resource.properties.specification">
                  <additionalProp>
                    <item type="any"/>
                  </additionalProp>
                </prop>
                <prop type="array<object>" name="stageSpec" arg="$resource.properties.stageSpec" required="True">
                  <item type="object">
                    <prop type="string" name="name" arg="$resource.properties.stageSpec[].name" required="True"/>
                    <prop type="object" name="specification" arg="$resource.properties.stageSpec[].specification">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="taskOption" arg="$resource.properties.stageSpec[].taskOption">
                      <prop type="integer32" name="concurrency" arg="$resource.properties.stageSpec[].taskOption.concurrency">
                        <default value="1"/>
                        <format maximum="8" minimum="1"/>
                      </prop>
                      <prop type="object" name="errorAction" arg="$resource.properties.stageSpec[].taskOption.errorAction">
                        <prop type="integer32" name="maxToleratedFailures" arg="$resource.properties.stageSpec[].taskOption.errorAction.maxToleratedFailures">
                          <format minimum="0"/>
                        </prop>
                        <prop type="string" name="mode" arg="$resource.properties.stageSpec[].taskOption.errorAction.mode">
                          <default value="&quot;stopOnAnyFailure&quot;"/>
                          <enum>
                            <item value="&quot;silentlyContinue&quot;"/>
                            <item value="&quot;stopOnAnyFailure&quot;"/>
                            <item value="&quot;stopOnNFailures&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="tasks" arg="$resource.properties.stageSpec[].tasks">
                      <item type="object">
                        <prop type="string" name="name" arg="$resource.properties.stageSpec[].tasks[].name" required="True"/>
                        <prop type="object" name="specification" arg="$resource.properties.stageSpec[].tasks[].specification" required="True">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="ResourceId" name="targetId" arg="$resource.properties.stageSpec[].tasks[].targetId"/>
                      </item>
                    </prop>
                  </item>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="WorkflowVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Edge/contexts/{contextName}/workflows/{workflowName}/versions/{versionName}">
          <request method="put">
            <path>
              <param type="string" name="contextName" arg="$Path.contextName" required="True">
                <format pattern="^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="versionName" arg="$Path.versionName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
              <param type="string" name="workflowName" arg="$Path.workflowName" required="True">
                <format pattern="^(?!v-)(?!.*-v-)[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$" maxLength="61" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@WorkflowVersion_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
