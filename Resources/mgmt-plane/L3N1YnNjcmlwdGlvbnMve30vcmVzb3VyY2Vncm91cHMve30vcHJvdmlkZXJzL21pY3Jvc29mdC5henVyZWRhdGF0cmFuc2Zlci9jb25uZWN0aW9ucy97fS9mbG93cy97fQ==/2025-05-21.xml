<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/connections/{}/flows/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfS9mbG93cy97Zmxvd05hbWV9/V/MjAyNS0wNS0yMQ=="/>
  <commandGroup name="data-transfer connection flow">
    <command name="update" version="2025-05-21">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/connections/{}/flows/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfS9mbG93cy97Zmxvd05hbWV9/V/MjAyNS0wNS0yMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="connection-name" required="True" idPart="name">
          <help short="The name for the connection to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.flowName" options="flow-name name n" required="True" idPart="child_name_1">
          <help short="The name for the flow to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Flow">
        <arg type="object" var="$flow.tags" options="tags" group="Flow">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$flow.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$flow.identity.type" options="type" hide="True" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$flow.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$flow.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Flows_Update">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}">
          <request method="patch">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="flowName" arg="$Path.flowName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="flow" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$flow.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$flow.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$flow.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$flow.identity.systemAssigned"/>
                  </prop>
                  <prop type="object" name="tags" arg="$flow.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Flow_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureDataTransfer/connections/{}/flows/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="object" name="apiFlowOptions">
                      <prop type="string" name="apiMode">
                        <enum>
                          <item value="&quot;Endpoint&quot;"/>
                          <item value="&quot;SDK&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="audienceOverride"/>
                      <prop type="string" name="cname"/>
                      <prop type="string" name="identityTranslation">
                        <enum>
                          <item value="&quot;ServiceIdentity&quot;"/>
                          <item value="&quot;UserIdentity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="remoteCallingModeClientId"/>
                      <prop type="string" name="remoteEndpoint"/>
                      <prop type="string" name="senderClientId"/>
                    </prop>
                    <prop type="object" name="connection">
                      <prop type="string" name="id" required="True"/>
                      <prop type="string" name="location"/>
                      <prop type="string" name="name"/>
                      <prop type="string" name="subscriptionName"/>
                    </prop>
                    <prop type="string" name="consumerGroup"/>
                    <prop type="string" name="customerManagedKeyVaultUri"/>
                    <prop type="string" name="dataType">
                      <enum>
                        <item value="&quot;Blob&quot;"/>
                        <item value="&quot;Table&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<integer64>" name="destinationEndpointPorts">
                      <item type="integer64"/>
                    </prop>
                    <prop type="array<string>" name="destinationEndpoints">
                      <item type="string"/>
                    </prop>
                    <prop type="ResourceId" name="eventHubId"/>
                    <prop readOnly="True" type="string" name="flowId"/>
                    <prop type="string" name="flowType">
                      <enum>
                        <item value="&quot;API&quot;"/>
                        <item value="&quot;BasicFiles&quot;"/>
                        <item value="&quot;Complex&quot;"/>
                        <item value="&quot;Data&quot;"/>
                        <item value="&quot;DevSecOps&quot;"/>
                        <item value="&quot;DiskImages&quot;"/>
                        <item value="&quot;Messaging&quot;"/>
                        <item value="&quot;MicrosoftInternal&quot;"/>
                        <item value="&quot;Mission&quot;"/>
                        <item value="&quot;MissionOpaqueXML&quot;"/>
                        <item value="&quot;Opaque&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StreamingVideo&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="forceDisabledStatus">
                      <item type="string">
                        <enum>
                          <item value="&quot;ConnectionForceDisabled&quot;"/>
                          <item value="&quot;FlowTypeForceDisabled&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="keyVaultUri"/>
                    <prop readOnly="True" type="string" name="linkStatus">
                      <enum>
                        <item value="&quot;Linked&quot;"/>
                        <item value="&quot;Unlinked&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="linkedFlowId"/>
                    <prop type="object" name="messagingOptions">
                      <prop type="string" name="billingTier">
                        <enum>
                          <item value="&quot;BlobTransport&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="passphrase"/>
                    <prop type="array<string>" name="policies">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="schema">
                      <prop type="string" name="connectionId"/>
                      <prop type="string" name="content"/>
                      <prop type="string" name="direction">
                        <enum>
                          <item value="&quot;Receive&quot;"/>
                          <item value="&quot;Send&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="id"/>
                      <prop type="string" name="name"/>
                      <prop type="string" name="schemaType">
                        <enum>
                          <item value="&quot;Xsd&quot;"/>
                          <item value="&quot;Zip&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="schemaUri"/>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;Approved&quot;"/>
                          <item value="&quot;New&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="serviceBusQueueId"/>
                    <prop type="object" name="sourceAddresses">
                      <prop type="array<string>" name="sourceAddresses">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="storageAccountId"/>
                    <prop type="string" name="storageAccountName"/>
                    <prop type="string" name="storageContainerName"/>
                    <prop type="string" name="storageTableName"/>
                    <prop type="string" name="streamId"/>
                    <prop type="integer64" name="streamLatency"/>
                    <prop type="string" name="streamProtocol">
                      <enum>
                        <item value="&quot;RTP&quot;"/>
                        <item value="&quot;SRT&quot;"/>
                        <item value="&quot;UDP&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@Flow_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="show" version="2025-05-21">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/connections/{}/flows/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfS9mbG93cy97Zmxvd05hbWV9/V/MjAyNS0wNS0yMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="connection-name" required="True" idPart="name">
          <help short="The name for the connection to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.flowName" options="flow-name name n" required="True" idPart="child_name_1">
          <help short="The name for the flow to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Flows_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}">
          <request method="get">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="flowName" arg="$Path.flowName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureDataTransfer/connections/{}/flows/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="object" name="apiFlowOptions">
                      <prop type="string" name="apiMode">
                        <enum>
                          <item value="&quot;Endpoint&quot;"/>
                          <item value="&quot;SDK&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="audienceOverride"/>
                      <prop type="string" name="cname"/>
                      <prop type="string" name="identityTranslation">
                        <enum>
                          <item value="&quot;ServiceIdentity&quot;"/>
                          <item value="&quot;UserIdentity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="remoteCallingModeClientId"/>
                      <prop type="string" name="remoteEndpoint"/>
                      <prop type="string" name="senderClientId"/>
                    </prop>
                    <prop type="object" name="connection">
                      <prop type="string" name="id" required="True"/>
                      <prop type="string" name="location"/>
                      <prop type="string" name="name"/>
                      <prop type="string" name="subscriptionName"/>
                    </prop>
                    <prop type="string" name="consumerGroup"/>
                    <prop type="string" name="customerManagedKeyVaultUri"/>
                    <prop type="string" name="dataType">
                      <enum>
                        <item value="&quot;Blob&quot;"/>
                        <item value="&quot;Table&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<integer64>" name="destinationEndpointPorts">
                      <item type="integer64"/>
                    </prop>
                    <prop type="array<string>" name="destinationEndpoints">
                      <item type="string"/>
                    </prop>
                    <prop type="ResourceId" name="eventHubId"/>
                    <prop readOnly="True" type="string" name="flowId"/>
                    <prop type="string" name="flowType">
                      <enum>
                        <item value="&quot;API&quot;"/>
                        <item value="&quot;BasicFiles&quot;"/>
                        <item value="&quot;Complex&quot;"/>
                        <item value="&quot;Data&quot;"/>
                        <item value="&quot;DevSecOps&quot;"/>
                        <item value="&quot;DiskImages&quot;"/>
                        <item value="&quot;Messaging&quot;"/>
                        <item value="&quot;MicrosoftInternal&quot;"/>
                        <item value="&quot;Mission&quot;"/>
                        <item value="&quot;MissionOpaqueXML&quot;"/>
                        <item value="&quot;Opaque&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StreamingVideo&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="forceDisabledStatus">
                      <item type="string">
                        <enum>
                          <item value="&quot;ConnectionForceDisabled&quot;"/>
                          <item value="&quot;FlowTypeForceDisabled&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="keyVaultUri"/>
                    <prop readOnly="True" type="string" name="linkStatus">
                      <enum>
                        <item value="&quot;Linked&quot;"/>
                        <item value="&quot;Unlinked&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="linkedFlowId"/>
                    <prop type="object" name="messagingOptions">
                      <prop type="string" name="billingTier">
                        <enum>
                          <item value="&quot;BlobTransport&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="passphrase"/>
                    <prop type="array<string>" name="policies">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="schema">
                      <prop type="string" name="connectionId"/>
                      <prop type="string" name="content"/>
                      <prop type="string" name="direction">
                        <enum>
                          <item value="&quot;Receive&quot;"/>
                          <item value="&quot;Send&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="id"/>
                      <prop type="string" name="name"/>
                      <prop type="string" name="schemaType">
                        <enum>
                          <item value="&quot;Xsd&quot;"/>
                          <item value="&quot;Zip&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="schemaUri"/>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;Approved&quot;"/>
                          <item value="&quot;New&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="serviceBusQueueId"/>
                    <prop type="object" name="sourceAddresses">
                      <prop type="array<string>" name="sourceAddresses">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="storageAccountId"/>
                    <prop type="string" name="storageAccountName"/>
                    <prop type="string" name="storageContainerName"/>
                    <prop type="string" name="storageTableName"/>
                    <prop type="string" name="streamId"/>
                    <prop type="integer64" name="streamLatency"/>
                    <prop type="string" name="streamProtocol">
                      <enum>
                        <item value="&quot;RTP&quot;"/>
                        <item value="&quot;SRT&quot;"/>
                        <item value="&quot;UDP&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-05-21" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/connections/{}/flows/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfS9mbG93cy97Zmxvd05hbWV9/V/MjAyNS0wNS0yMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="connection-name" required="True" idPart="name">
          <help short="The name for the connection to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.flowName" options="flow-name name n" required="True" idPart="child_name_1">
          <help short="The name for the flow to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Flows_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}">
          <request method="delete">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="flowName" arg="$Path.flowName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-05-21">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azuredatatransfer/connections/{}/flows/{}" version="2025-05-21" swagger="mgmt-plane/azuredatatransfer/ResourceProviders/Microsoft.AzureDataTransfer/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVEYXRhVHJhbnNmZXIvY29ubmVjdGlvbnMve2Nvbm5lY3Rpb25OYW1lfS9mbG93cy97Zmxvd05hbWV9/V/MjAyNS0wNS0yMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="connection-name" required="True" idPart="name">
          <help short="The name for the connection to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.flowName" options="flow-name name n" required="True" idPart="child_name_1">
          <help short="The name for the flow to perform the operation on."/>
          <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Flow">
        <arg type="ResourceLocation" var="$flow.location" options="location l" required="True" group="Flow">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$flow.plan" options="plan" group="Flow">
          <help short="Details of the resource plan."/>
          <arg type="string" var="$flow.plan.name" options="name" required="True">
            <help short="A user defined name of the 3rd Party Artifact that is being procured."/>
          </arg>
          <arg type="string" var="$flow.plan.product" options="product" required="True">
            <help short="The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "/>
          </arg>
          <arg type="string" var="$flow.plan.promotionCode" options="promotion-code">
            <help short="A publisher provided promotion code as provisioned in Data Market for the said product/artifact."/>
          </arg>
          <arg type="string" var="$flow.plan.publisher" options="publisher" required="True">
            <help short="The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"/>
          </arg>
          <arg type="string" var="$flow.plan.version" options="version">
            <help short="The version of the desired product/artifact."/>
          </arg>
        </arg>
        <arg type="object" var="$flow.tags" options="tags" group="Flow">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$flow.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$flow.identity.type" options="type" hide="True" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$flow.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$flow.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$flow.properties.apiFlowOptions" options="api-flow-options" group="Properties">
          <help short="The API Flow configuration options for Azure Data Transfer API Flow type."/>
          <arg type="string" var="$flow.properties.apiFlowOptions.apiMode" options="api-mode">
            <help short="Remote Calling Mode in the Azure Data Transfer API Flow, which describes how the API Flow will be invoked"/>
            <enum>
              <item name="Endpoint" value="&quot;Endpoint&quot;"/>
              <item name="SDK" value="&quot;SDK&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$flow.properties.apiFlowOptions.audienceOverride" options="audience-override">
            <help short="Optional field to override the audience of the remote endpoint"/>
          </arg>
          <arg type="string" var="$flow.properties.apiFlowOptions.cname" options="cname">
            <help short="Unique CNAME to represent the Azure Data Transfer API Flow instance"/>
          </arg>
          <arg type="string" var="$flow.properties.apiFlowOptions.identityTranslation" options="identity-translation">
            <help short="Flag for if Azure Data Transfer API Flow should extract the user token"/>
            <enum>
              <item name="ServiceIdentity" value="&quot;ServiceIdentity&quot;"/>
              <item name="UserIdentity" value="&quot;UserIdentity&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$flow.properties.apiFlowOptions.remoteCallingModeClientId" options="remote-calling-mode-client-id">
            <help short="Remote stub app registration Client ID"/>
          </arg>
          <arg type="string" var="$flow.properties.apiFlowOptions.remoteEndpoint" options="remote-endpoint">
            <help short="Remote host to which communication needs to be made"/>
          </arg>
          <arg type="string" var="$flow.properties.apiFlowOptions.senderClientId" options="sender-client-id">
            <help short="Sender's app user assigned Manage Identity client ID"/>
          </arg>
        </arg>
        <arg type="object" var="$flow.properties.connection" options="connection" hide="True" group="Properties">
          <help short="The connection associated with this flow"/>
          <arg type="string" var="$flow.properties.connection.id" options="id" required="True">
            <help short="Id of the connection"/>
          </arg>
          <arg type="string" var="$flow.properties.connection.location" options="location">
            <help short="Location of the connection"/>
          </arg>
          <arg type="string" var="$flow.properties.connection.name" options="name">
            <help short="Name of the connection"/>
          </arg>
          <arg type="string" var="$flow.properties.connection.subscriptionName" options="subscription-name">
            <help short="Name of the subscription with the connection"/>
          </arg>
        </arg>
        <arg type="string" var="$flow.properties.consumerGroup" options="consumer-group" group="Properties">
          <help short="Event Hub Consumer Group"/>
        </arg>
        <arg type="string" var="$flow.properties.customerManagedKeyVaultUri" options="customer-key-vault-uri" group="Properties">
          <help short="The URI to the customer managed key for this flow"/>
        </arg>
        <arg type="string" var="$flow.properties.dataType" options="data-type" group="Properties">
          <help short="Type of data to transfer via the flow."/>
          <enum>
            <item name="Blob" value="&quot;Blob&quot;"/>
            <item name="Table" value="&quot;Table&quot;"/>
          </enum>
        </arg>
        <arg type="array<integer64>" var="$flow.properties.destinationEndpointPorts" options="endpoint-ports" group="Properties">
          <help short="The destination endpoint ports of the stream"/>
          <item type="integer64"/>
        </arg>
        <arg type="array<string>" var="$flow.properties.destinationEndpoints" options="destination-endpoints" group="Properties">
          <help short="The destination endpoints of the stream"/>
          <item type="string"/>
        </arg>
        <arg type="ResourceId" var="$flow.properties.eventHubId" options="event-hub-id" group="Properties">
          <help short="Event Hub ID"/>
        </arg>
        <arg type="string" var="$flow.properties.flowType" options="flow-type" group="Properties">
          <help short="The flow type for this flow"/>
          <enum>
            <item name="API" value="&quot;API&quot;"/>
            <item name="BasicFiles" value="&quot;BasicFiles&quot;"/>
            <item name="Complex" value="&quot;Complex&quot;"/>
            <item name="Data" value="&quot;Data&quot;"/>
            <item name="DevSecOps" value="&quot;DevSecOps&quot;"/>
            <item name="DiskImages" value="&quot;DiskImages&quot;"/>
            <item name="Messaging" value="&quot;Messaging&quot;"/>
            <item name="MicrosoftInternal" value="&quot;MicrosoftInternal&quot;"/>
            <item name="Mission" value="&quot;Mission&quot;"/>
            <item name="MissionOpaqueXML" value="&quot;MissionOpaqueXML&quot;"/>
            <item name="Opaque" value="&quot;Opaque&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="StreamingVideo" value="&quot;StreamingVideo&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$flow.properties.keyVaultUri" options="key-vault-uri" hide="True" group="Properties">
          <help short="URI to a Key Vault Secret containing a SAS token."/>
        </arg>
        <arg type="object" var="$flow.properties.messagingOptions" options="messaging-options" group="Properties">
          <help short="The messaging options for this flow"/>
          <arg type="string" var="$flow.properties.messagingOptions.billingTier" options="billing-tier">
            <help short="Billing tier for this messaging flow"/>
            <enum>
              <item name="BlobTransport" value="&quot;BlobTransport&quot;"/>
              <item name="Premium" value="&quot;Premium&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$flow.properties.passphrase" options="passphrase" group="Properties">
          <help short="The passphrase used for SRT streams"/>
        </arg>
        <arg type="array<string>" var="$flow.properties.policies" options="policies" hide="True" group="Properties">
          <help short="The policies for this flow"/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$flow.properties.schema" options="schema" group="Properties">
          <help short="The selected schema for this flow"/>
          <arg type="string" var="$flow.properties.schema.connectionId" options="connection-id">
            <help short="Connection ID associated with this schema"/>
          </arg>
          <arg type="string" var="$flow.properties.schema.content" options="content">
            <help short="Content of the schema"/>
          </arg>
          <arg type="string" var="$flow.properties.schema.direction" options="direction">
            <help short="The direction of the schema."/>
            <enum>
              <item name="Receive" value="&quot;Receive&quot;"/>
              <item name="Send" value="&quot;Send&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$flow.properties.schema.id" options="id">
            <help short="ID associated with this schema"/>
          </arg>
          <arg type="string" var="$flow.properties.schema.name" options="name">
            <help short="Name of the schema"/>
          </arg>
          <arg type="string" var="$flow.properties.schema.schemaType" options="schema-type">
            <help short="The Schema Type"/>
            <enum>
              <item name="Xsd" value="&quot;Xsd&quot;"/>
              <item name="Zip" value="&quot;Zip&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$flow.properties.schema.schemaUri" options="schema-uri">
            <help short="Uri containing SAS token for the zipped schema"/>
          </arg>
          <arg type="string" var="$flow.properties.schema.status" options="status">
            <help short="Status of the schema"/>
            <enum>
              <item name="Approved" value="&quot;Approved&quot;"/>
              <item name="New" value="&quot;New&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceId" var="$flow.properties.serviceBusQueueId" options="service-bus-queue-id" group="Properties">
          <help short="Service Bus Queue ID"/>
        </arg>
        <arg type="object" var="$flow.properties.sourceAddresses" options="source-addresses" group="Properties">
          <help short="The source IP address and CIDR ranges of the stream"/>
          <arg type="array<string>" var="$flow.properties.sourceAddresses.sourceAddresses" options="source-addresses">
            <help short="A source IP address or CIDR range"/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="string" var="$flow.properties.status" options="status" group="Properties">
          <help short="Status of the current flow"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="ResourceId" var="$flow.properties.storageAccountId" options="storage-account-id" hide="True" group="Properties">
          <help short="Storage Account ID"/>
        </arg>
        <arg type="string" var="$flow.properties.storageAccountName" options="storage-account" group="Properties">
          <help short="Storage Account Id"/>
        </arg>
        <arg type="string" var="$flow.properties.storageContainerName" options="storage-container-name" group="Properties">
          <help short="Storage Container Name"/>
        </arg>
        <arg type="string" var="$flow.properties.storageTableName" options="storage-table-name" group="Properties">
          <help short="Storage Table Name"/>
        </arg>
        <arg type="string" var="$flow.properties.streamId" options="stream-id" group="Properties">
          <help short="The flow stream identifier"/>
        </arg>
        <arg type="integer64" var="$flow.properties.streamLatency" options="stream-latency" group="Properties">
          <help short="The latency of the stream in milliseconds"/>
        </arg>
        <arg type="string" var="$flow.properties.streamProtocol" options="stream-protocol" group="Properties">
          <help short="The protocol of the stream"/>
          <enum>
            <item name="RTP" value="&quot;RTP&quot;"/>
            <item name="SRT" value="&quot;SRT&quot;"/>
            <item name="UDP" value="&quot;UDP&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Flows_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureDataTransfer/connections/{connectionName}/flows/{flowName}">
          <request method="put">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="flowName" arg="$Path.flowName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,64}$" maxLength="64" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-21&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="flow" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$flow.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$flow.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$flow.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$flow.identity.systemAssigned"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$flow.location" required="True"/>
                  <prop type="object" name="plan" arg="$flow.plan">
                    <prop type="string" name="name" arg="$flow.plan.name" required="True"/>
                    <prop type="string" name="product" arg="$flow.plan.product" required="True"/>
                    <prop type="string" name="promotionCode" arg="$flow.plan.promotionCode"/>
                    <prop type="string" name="publisher" arg="$flow.plan.publisher" required="True"/>
                    <prop type="string" name="version" arg="$flow.plan.version"/>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="object" name="apiFlowOptions" arg="$flow.properties.apiFlowOptions">
                      <prop type="string" name="apiMode" arg="$flow.properties.apiFlowOptions.apiMode">
                        <enum>
                          <item value="&quot;Endpoint&quot;"/>
                          <item value="&quot;SDK&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="audienceOverride" arg="$flow.properties.apiFlowOptions.audienceOverride"/>
                      <prop type="string" name="cname" arg="$flow.properties.apiFlowOptions.cname"/>
                      <prop type="string" name="identityTranslation" arg="$flow.properties.apiFlowOptions.identityTranslation">
                        <enum>
                          <item value="&quot;ServiceIdentity&quot;"/>
                          <item value="&quot;UserIdentity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="remoteCallingModeClientId" arg="$flow.properties.apiFlowOptions.remoteCallingModeClientId"/>
                      <prop type="string" name="remoteEndpoint" arg="$flow.properties.apiFlowOptions.remoteEndpoint"/>
                      <prop type="string" name="senderClientId" arg="$flow.properties.apiFlowOptions.senderClientId"/>
                    </prop>
                    <prop type="object" name="connection" arg="$flow.properties.connection">
                      <prop type="string" name="id" arg="$flow.properties.connection.id" required="True"/>
                      <prop type="string" name="location" arg="$flow.properties.connection.location"/>
                      <prop type="string" name="name" arg="$flow.properties.connection.name"/>
                      <prop type="string" name="subscriptionName" arg="$flow.properties.connection.subscriptionName"/>
                    </prop>
                    <prop type="string" name="consumerGroup" arg="$flow.properties.consumerGroup"/>
                    <prop type="string" name="customerManagedKeyVaultUri" arg="$flow.properties.customerManagedKeyVaultUri"/>
                    <prop type="string" name="dataType" arg="$flow.properties.dataType">
                      <enum>
                        <item value="&quot;Blob&quot;"/>
                        <item value="&quot;Table&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<integer64>" name="destinationEndpointPorts" arg="$flow.properties.destinationEndpointPorts">
                      <item type="integer64"/>
                    </prop>
                    <prop type="array<string>" name="destinationEndpoints" arg="$flow.properties.destinationEndpoints">
                      <item type="string"/>
                    </prop>
                    <prop type="ResourceId" name="eventHubId" arg="$flow.properties.eventHubId"/>
                    <prop type="string" name="flowType" arg="$flow.properties.flowType">
                      <enum>
                        <item value="&quot;API&quot;"/>
                        <item value="&quot;BasicFiles&quot;"/>
                        <item value="&quot;Complex&quot;"/>
                        <item value="&quot;Data&quot;"/>
                        <item value="&quot;DevSecOps&quot;"/>
                        <item value="&quot;DiskImages&quot;"/>
                        <item value="&quot;Messaging&quot;"/>
                        <item value="&quot;MicrosoftInternal&quot;"/>
                        <item value="&quot;Mission&quot;"/>
                        <item value="&quot;MissionOpaqueXML&quot;"/>
                        <item value="&quot;Opaque&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StreamingVideo&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="keyVaultUri" arg="$flow.properties.keyVaultUri"/>
                    <prop type="object" name="messagingOptions" arg="$flow.properties.messagingOptions">
                      <prop type="string" name="billingTier" arg="$flow.properties.messagingOptions.billingTier">
                        <enum>
                          <item value="&quot;BlobTransport&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="passphrase" arg="$flow.properties.passphrase"/>
                    <prop type="array<string>" name="policies" arg="$flow.properties.policies">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="schema" arg="$flow.properties.schema">
                      <prop type="string" name="connectionId" arg="$flow.properties.schema.connectionId"/>
                      <prop type="string" name="content" arg="$flow.properties.schema.content"/>
                      <prop type="string" name="direction" arg="$flow.properties.schema.direction">
                        <enum>
                          <item value="&quot;Receive&quot;"/>
                          <item value="&quot;Send&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="id" arg="$flow.properties.schema.id"/>
                      <prop type="string" name="name" arg="$flow.properties.schema.name"/>
                      <prop type="string" name="schemaType" arg="$flow.properties.schema.schemaType">
                        <enum>
                          <item value="&quot;Xsd&quot;"/>
                          <item value="&quot;Zip&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="schemaUri" arg="$flow.properties.schema.schemaUri"/>
                      <prop type="string" name="status" arg="$flow.properties.schema.status">
                        <enum>
                          <item value="&quot;Approved&quot;"/>
                          <item value="&quot;New&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="serviceBusQueueId" arg="$flow.properties.serviceBusQueueId"/>
                    <prop type="object" name="sourceAddresses" arg="$flow.properties.sourceAddresses">
                      <prop type="array<string>" name="sourceAddresses" arg="$flow.properties.sourceAddresses.sourceAddresses">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="status" arg="$flow.properties.status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="storageAccountId" arg="$flow.properties.storageAccountId"/>
                    <prop type="string" name="storageAccountName" arg="$flow.properties.storageAccountName"/>
                    <prop type="string" name="storageContainerName" arg="$flow.properties.storageContainerName"/>
                    <prop type="string" name="storageTableName" arg="$flow.properties.storageTableName"/>
                    <prop type="string" name="streamId" arg="$flow.properties.streamId"/>
                    <prop type="integer64" name="streamLatency" arg="$flow.properties.streamLatency"/>
                    <prop type="string" name="streamProtocol" arg="$flow.properties.streamProtocol">
                      <enum>
                        <item value="&quot;RTP&quot;"/>
                        <item value="&quot;SRT&quot;"/>
                        <item value="&quot;UDP&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$flow.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureDataTransfer/connections/{}/flows/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="object" name="apiFlowOptions">
                      <prop type="string" name="apiMode">
                        <enum>
                          <item value="&quot;Endpoint&quot;"/>
                          <item value="&quot;SDK&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="audienceOverride"/>
                      <prop type="string" name="cname"/>
                      <prop type="string" name="identityTranslation">
                        <enum>
                          <item value="&quot;ServiceIdentity&quot;"/>
                          <item value="&quot;UserIdentity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="remoteCallingModeClientId"/>
                      <prop type="string" name="remoteEndpoint"/>
                      <prop type="string" name="senderClientId"/>
                    </prop>
                    <prop type="object" name="connection">
                      <prop type="string" name="id" required="True"/>
                      <prop type="string" name="location"/>
                      <prop type="string" name="name"/>
                      <prop type="string" name="subscriptionName"/>
                    </prop>
                    <prop type="string" name="consumerGroup"/>
                    <prop type="string" name="customerManagedKeyVaultUri"/>
                    <prop type="string" name="dataType">
                      <enum>
                        <item value="&quot;Blob&quot;"/>
                        <item value="&quot;Table&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<integer64>" name="destinationEndpointPorts">
                      <item type="integer64"/>
                    </prop>
                    <prop type="array<string>" name="destinationEndpoints">
                      <item type="string"/>
                    </prop>
                    <prop type="ResourceId" name="eventHubId"/>
                    <prop readOnly="True" type="string" name="flowId"/>
                    <prop type="string" name="flowType">
                      <enum>
                        <item value="&quot;API&quot;"/>
                        <item value="&quot;BasicFiles&quot;"/>
                        <item value="&quot;Complex&quot;"/>
                        <item value="&quot;Data&quot;"/>
                        <item value="&quot;DevSecOps&quot;"/>
                        <item value="&quot;DiskImages&quot;"/>
                        <item value="&quot;Messaging&quot;"/>
                        <item value="&quot;MicrosoftInternal&quot;"/>
                        <item value="&quot;Mission&quot;"/>
                        <item value="&quot;MissionOpaqueXML&quot;"/>
                        <item value="&quot;Opaque&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StreamingVideo&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="forceDisabledStatus">
                      <item type="string">
                        <enum>
                          <item value="&quot;ConnectionForceDisabled&quot;"/>
                          <item value="&quot;FlowTypeForceDisabled&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="keyVaultUri"/>
                    <prop readOnly="True" type="string" name="linkStatus">
                      <enum>
                        <item value="&quot;Linked&quot;"/>
                        <item value="&quot;Unlinked&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="linkedFlowId"/>
                    <prop type="object" name="messagingOptions">
                      <prop type="string" name="billingTier">
                        <enum>
                          <item value="&quot;BlobTransport&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="passphrase"/>
                    <prop type="array<string>" name="policies">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="schema">
                      <prop type="string" name="connectionId"/>
                      <prop type="string" name="content"/>
                      <prop type="string" name="direction">
                        <enum>
                          <item value="&quot;Receive&quot;"/>
                          <item value="&quot;Send&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="id"/>
                      <prop type="string" name="name"/>
                      <prop type="string" name="schemaType">
                        <enum>
                          <item value="&quot;Xsd&quot;"/>
                          <item value="&quot;Zip&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="schemaUri"/>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;Approved&quot;"/>
                          <item value="&quot;New&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="ResourceId" name="serviceBusQueueId"/>
                    <prop type="object" name="sourceAddresses">
                      <prop type="array<string>" name="sourceAddresses">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="ResourceId" name="storageAccountId"/>
                    <prop type="string" name="storageAccountName"/>
                    <prop type="string" name="storageContainerName"/>
                    <prop type="string" name="storageTableName"/>
                    <prop type="string" name="streamId"/>
                    <prop type="integer64" name="streamLatency"/>
                    <prop type="string" name="streamProtocol">
                      <enum>
                        <item value="&quot;RTP&quot;"/>
                        <item value="&quot;SRT&quot;"/>
                        <item value="&quot;UDP&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
