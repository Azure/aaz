{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}", "version": "2023-07-01", "swagger": "mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfQ==/V/MjAyMy0wNy0wMQ=="}], "commandGroups": [{"name": "networkcloud kubernetescluster", "commands": [{"name": "show", "version": "2023-07-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}", "version": "2023-07-01", "swagger": "mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfQ==/V/MjAyMy0wNy0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.kubernetesClusterName", "options": ["n", "name", "kubernetes-cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the Kubernetes cluster."}, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "KubernetesClusters_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "kubernetesClusterName", "arg": "$Path.kubernetesClusterName", "required": true, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-07-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "object", "name": "extendedLocation", "required": true, "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "type", "required": true}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/kubernetesClusters/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "aadConfiguration", "props": [{"type": "array<string>", "name": "adminGroupObjectIds", "required": true, "item": {"type": "string"}}]}, {"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername"}, {"type": "array<object>", "name": "sshPublicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData", "required": true, "format": {"minLength": 1}}], "cls": "SshPublicKey_read"}}]}, {"readOnly": true, "type": "array<string>", "name": "attachedNetworkIds", "item": {"type": "string"}}, {"readOnly": true, "type": "array<object>", "name": "availableUpgrades", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "availabilityLifecycle", "enum": {"items": [{"value": "GenerallyAvailable"}, {"value": "Preview"}]}}, {"readOnly": true, "type": "string", "name": "version"}]}}, {"readOnly": true, "type": "string", "name": "clusterId"}, {"readOnly": true, "type": "string", "name": "connectedClusterId"}, {"readOnly": true, "type": "string", "name": "controlPlaneKubernetesVersion"}, {"type": "object", "name": "controlPlaneNodeConfiguration", "required": true, "props": [{"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername"}, {"type": "array<@SshPublicKey_read>", "name": "sshPublicKeys", "item": {"type": "@SshPublicKey_read"}}]}, {"type": "array<string>", "name": "availabilityZones", "item": {"type": "string"}}, {"type": "integer64", "name": "count", "required": true, "format": {"minimum": 1}}, {"type": "string", "name": "vmSkuName", "required": true}]}, {"readOnly": true, "type": "string", "name": "detailedStatus", "enum": {"items": [{"value": "Available"}, {"value": "Error"}, {"value": "Provisioning"}]}}, {"readOnly": true, "type": "string", "name": "detailedStatusMessage"}, {"readOnly": true, "type": "array<object>", "name": "featureStatuses", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "detailedStatus", "enum": {"items": [{"value": "Failed"}, {"value": "Running"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "detailedStatusMessage"}, {"readOnly": true, "type": "string", "name": "name"}, {"readOnly": true, "type": "string", "name": "version"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "initialAgentPoolConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername"}, {"type": "array<@SshPublicKey_read>", "name": "sshPublicKeys", "item": {"type": "@SshPublicKey_read"}}]}, {"type": "object", "name": "agentOptions", "props": [{"type": "integer64", "name": "hugepagesCount", "required": true}, {"default": {"value": "2M"}, "type": "string", "name": "hugepagesSize", "enum": {"items": [{"value": "1G"}, {"value": "2M"}]}}]}, {"type": "object", "name": "attachedNetworkConfiguration", "props": [{"type": "array<object>", "name": "l2Networks", "item": {"type": "object", "props": [{"type": "string", "name": "networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "L2NetworkAttachmentConfiguration_read"}}, {"type": "array<object>", "name": "l3Networks", "item": {"type": "object", "props": [{"default": {"value": "False"}, "type": "string", "name": "ipamEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "L3NetworkAttachmentConfiguration_read"}}, {"type": "array<object>", "name": "trunkedNetworks", "item": {"type": "object", "props": [{"type": "string", "name": "networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "TrunkedNetworkAttachmentConfiguration_read"}}]}, {"type": "array<string>", "name": "availabilityZones", "item": {"type": "string"}}, {"type": "integer64", "name": "count", "required": true}, {"type": "array<object>", "name": "labels", "item": {"type": "object", "props": [{"type": "string", "name": "key", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "KubernetesLabel_read"}}, {"type": "string", "name": "mode", "required": true, "enum": {"items": [{"value": "NotApplicable"}, {"value": "System"}, {"value": "User"}]}}, {"type": "string", "name": "name", "required": true, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "array<@KubernetesLabel_read>", "name": "taints", "item": {"type": "@KubernetesLabel_read"}}, {"type": "object", "name": "upgradeSettings", "props": [{"default": {"value": "1"}, "type": "string", "name": "maxSurge"}]}, {"type": "string", "name": "vmSkuName", "required": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "kubernetesVersion", "required": true}, {"type": "object", "name": "managedResourceGroupConfiguration", "props": [{"type": "string", "name": "location"}, {"type": "string", "name": "name", "format": {"maxLength": 75}}]}, {"type": "object", "name": "networkConfiguration", "required": true, "props": [{"type": "object", "name": "attachedNetworkConfiguration", "props": [{"type": "array<@L2NetworkAttachmentConfiguration_read>", "name": "l2Networks", "item": {"type": "@L2NetworkAttachmentConfiguration_read"}}, {"type": "array<@L3NetworkAttachmentConfiguration_read>", "name": "l3Networks", "item": {"type": "@L3NetworkAttachmentConfiguration_read"}}, {"type": "array<@TrunkedNetworkAttachmentConfiguration_read>", "name": "trunkedNetworks", "item": {"type": "@TrunkedNetworkAttachmentConfiguration_read"}}]}, {"type": "object", "name": "bgpServiceLoadBalancerConfiguration", "props": [{"type": "array<object>", "name": "bgpAdvertisements", "item": {"type": "object", "props": [{"default": {"value": "True"}, "type": "string", "name": "advertiseToFabric", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "array<string>", "name": "communities", "item": {"type": "string"}}, {"type": "array<string>", "name": "ipAddressPools", "required": true, "item": {"type": "string"}}, {"type": "array<string>", "name": "peers", "item": {"type": "string"}}]}}, {"type": "array<object>", "name": "bgpPeers", "item": {"type": "object", "props": [{"default": {"value": "False"}, "type": "string", "name": "bfdEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"default": {"value": "False"}, "type": "string", "name": "bgpMultiHop", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "holdTime"}, {"type": "string", "name": "keepAliveTime"}, {"type": "integer64", "name": "myAsn", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "string", "name": "name", "required": true, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"type": "string", "name": "peerAddress", "required": true}, {"type": "integer64", "name": "peerAsn", "required": true, "format": {"maximum": 4294967295, "minimum": 0}}, {"default": {"value": 179}, "type": "integer64", "name": "peerPort"}]}}, {"default": {"value": "True"}, "type": "string", "name": "fabricPeeringEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "array<object>", "name": "ipAddressPools", "item": {"type": "object", "props": [{"type": "array<string>", "name": "addresses", "required": true, "item": {"type": "string"}}, {"default": {"value": "True"}, "type": "string", "name": "autoAssign", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "name", "required": true, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"default": {"value": "True"}, "type": "string", "name": "onlyUseHostIps", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}]}}]}, {"type": "string", "name": "cloudServicesNetworkId", "required": true}, {"type": "string", "name": "cniNetworkId", "required": true}, {"type": "string", "name": "dnsServiceIp"}, {"type": "array<string>", "name": "podCidrs", "item": {"type": "string"}}, {"type": "array<string>", "name": "serviceCidrs", "item": {"type": "string"}}]}, {"readOnly": true, "type": "array<object>", "name": "nodes", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "agentPoolId"}, {"readOnly": true, "type": "string", "name": "availabilityZone"}, {"readOnly": true, "type": "string", "name": "bareMetalMachineId"}, {"readOnly": true, "type": "integer64", "name": "cpuCores"}, {"readOnly": true, "type": "string", "name": "detailedStatus", "enum": {"items": [{"value": "Available"}, {"value": "Error"}, {"value": "Provisioning"}, {"value": "Running"}, {"value": "Scheduling"}, {"value": "Stopped"}, {"value": "Terminating"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "detailedStatusMessage"}, {"readOnly": true, "type": "integer64", "name": "diskSizeGB"}, {"readOnly": true, "type": "string", "name": "image"}, {"readOnly": true, "type": "string", "name": "kubernetesVersion"}, {"readOnly": true, "type": "array<@KubernetesLabel_read>", "name": "labels", "item": {"type": "@KubernetesLabel_read"}, "identifiers": ["key"]}, {"readOnly": true, "type": "integer64", "name": "memorySizeGB"}, {"readOnly": true, "type": "string", "name": "mode", "enum": {"items": [{"value": "NotApplicable"}, {"value": "System"}, {"value": "User"}]}}, {"readOnly": true, "type": "string", "name": "name"}, {"readOnly": true, "type": "array<object>", "name": "networkAttachments", "item": {"type": "object", "props": [{"type": "string", "name": "attachedNetworkId", "required": true}, {"type": "string", "name": "defaultGateway", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "ipAllocationMethod", "required": true, "enum": {"items": [{"value": "Disabled"}, {"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "ipv4Address"}, {"type": "string", "name": "ipv6Address"}, {"readOnly": true, "type": "string", "name": "macAddress"}, {"type": "string", "name": "networkAttachmentName", "format": {"maxLength": 15}}]}, "identifiers": ["networkAttachmentName"]}, {"readOnly": true, "type": "string", "name": "powerState", "enum": {"items": [{"value": "Off"}, {"value": "On"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "role", "enum": {"items": [{"value": "ControlPlane"}, {"value": "Worker"}]}}, {"readOnly": true, "type": "array<@KubernetesLabel_read>", "name": "taints", "item": {"type": "@KubernetesLabel_read"}, "identifiers": ["key"]}, {"readOnly": true, "type": "string", "name": "vmSkuName"}]}, "identifiers": ["name"]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Created"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2023-07-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}", "version": "2023-07-01", "swagger": "mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfQ==/V/MjAyMy0wNy0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.kubernetesClusterName", "options": ["n", "name", "kubernetes-cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the Kubernetes cluster."}, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "KubernetesClusters_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "kubernetesClusterName", "arg": "$Path.kubernetesClusterName", "required": true, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-07-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202], "header": {"items": [{"name": "Location"}]}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-07-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}", "version": "2023-07-01", "swagger": "mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfQ==/V/MjAyMy0wNy0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.kubernetesClusterName", "options": ["n", "name", "kubernetes-cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the Kubernetes cluster."}, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "AdministratorConfiguration", "args": [{"type": "string", "var": "$kubernetesClusterParameters.properties.administratorConfiguration.adminUsername", "options": ["admin-username"], "group": "AdministratorConfiguration", "help": {"short": "The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied, a user name will be chosen by the service."}}, {"type": "array<object>", "var": "$kubernetesClusterParameters.properties.administratorConfiguration.sshPublicKeys", "options": ["ssh-public-keys"], "group": "AdministratorConfiguration", "help": {"short": "The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification of public keys may be required to produce a working environment."}, "item": {"type": "object", "args": [{"type": "string", "var": "@SshPublicKey_create.keyData", "options": ["key-data"], "required": true, "help": {"short": "The SSH public key data."}, "format": {"minLength": 1}}], "cls": "SshPublicKey_create"}}]}, {"name": "KubernetesClusterParameters", "args": [{"type": "object", "var": "$kubernetesClusterParameters.extendedLocation", "options": ["extended-location"], "required": true, "group": "KubernetesClusterParameters", "help": {"short": "The extended location of the cluster associated with the resource."}, "args": [{"type": "string", "var": "$kubernetesClusterParameters.extendedLocation.name", "options": ["name"], "required": true, "help": {"short": "The resource ID of the extended location on which the resource will be created."}}, {"type": "string", "var": "$kubernetesClusterParameters.extendedLocation.type", "options": ["type"], "required": true, "help": {"short": "The extended location type, for example, CustomLocation."}}]}, {"type": "ResourceLocation", "var": "$kubernetesClusterParameters.location", "options": ["l", "location"], "required": true, "group": "KubernetesClusterParameters", "help": {"short": "The geo-location where the resource lives"}}, {"type": "object", "var": "$kubernetesClusterParameters.tags", "options": ["tags"], "group": "KubernetesClusterParameters", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$kubernetesClusterParameters.properties.aadConfiguration", "options": ["aad-configuration"], "group": "Properties", "help": {"short": "The Azure Active Directory Integration properties."}, "args": [{"type": "array<string>", "var": "$kubernetesClusterParameters.properties.aadConfiguration.adminGroupObjectIds", "options": ["admin-group-object-ids"], "required": true, "help": {"short": "The list of Azure Active Directory group object IDs that will have an administrative role on the Kubernetes cluster."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration", "options": ["control-plane-node-configuration"], "required": true, "group": "Properties", "help": {"short": "The defining characteristics of the control plane for this Kubernetes Cluster."}, "args": [{"type": "string", "var": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.administratorConfiguration.adminUsername", "options": ["admin-username"], "group": "", "help": {"short": "The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied, a user name will be chosen by the service."}}, {"type": "array<@SshPublicKey_create>", "var": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.administratorConfiguration.sshPublicKeys", "options": ["ssh-public-keys"], "group": "AdministratorConfiguration", "help": {"short": "The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification of public keys may be required to produce a working environment."}, "item": {"type": "@SshPublicKey_create"}}, {"type": "array<string>", "var": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.availabilityZones", "options": ["availability-zones"], "help": {"short": "The list of availability zones of the Network Cloud cluster to be used for the provisioning of nodes in the control plane. If not specified, all availability zones will be used."}, "item": {"type": "string"}}, {"type": "integer64", "var": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.count", "options": ["count"], "required": true, "help": {"short": "The number of virtual machines that use this configuration."}, "format": {"minimum": 1}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.vmSkuName", "options": ["vm-sku-name"], "required": true, "help": {"short": "The name of the VM SKU supplied during creation."}}]}, {"type": "array<object>", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations", "options": ["initial-agent-pool-configurations"], "required": true, "group": "Properties", "help": {"short": "The agent pools that are created with this Kubernetes cluster for running critical system services and workloads. This data in this field is only used during creation, and the field will be empty following the creation of the Kubernetes Cluster. After creation, the management of agent pools is done using the agentPools sub-resource."}, "item": {"type": "object", "args": [{"type": "string", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].administratorConfiguration.adminUsername", "options": ["admin-username"], "group": "", "help": {"short": "The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied, a user name will be chosen by the service."}}, {"type": "array<@SshPublicKey_create>", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].administratorConfiguration.sshPublicKeys", "options": ["ssh-public-keys"], "group": "AdministratorConfiguration", "help": {"short": "The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification of public keys may be required to produce a working environment."}, "item": {"type": "@SshPublicKey_create"}}, {"type": "object", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].agentOptions", "options": ["agent-options"], "help": {"short": "The configurations that will be applied to each agent in this agent pool."}, "args": [{"type": "integer64", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].agentOptions.hugepagesCount", "options": ["hugepages-count"], "required": true, "help": {"short": "The number of hugepages to allocate."}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].agentOptions.hugepagesSize", "options": ["hugepages-size"], "help": {"short": "The size of the hugepages to allocate."}, "default": {"value": "2M"}, "enum": {"items": [{"name": "1G", "value": "1G"}, {"name": "2M", "value": "2M"}]}}]}, {"type": "object", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].attachedNetworkConfiguration", "options": ["attached-network-configuration"], "help": {"short": "The configuration of networks being attached to the agent pool for use by the workloads that run on this Kubernetes cluster. These networks are in addition to the networks connected in the Kubernetes cluster attached network configuration."}, "args": [{"type": "array<object>", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].attachedNetworkConfiguration.l2Networks", "options": ["l2-networks"], "help": {"short": "The list of Layer 2 Networks and related configuration for attachment."}, "item": {"type": "object", "args": [{"type": "string", "var": "@L2NetworkAttachmentConfiguration_create.networkId", "options": ["network-id"], "required": true, "help": {"short": "The resource ID of the network that is being configured for attachment."}}, {"type": "string", "var": "@L2NetworkAttachmentConfiguration_create.pluginType", "options": ["plugin-type"], "help": {"short": "The indicator of how this network will be utilized by the Kubernetes cluster."}, "default": {"value": "SRIOV"}, "enum": {"items": [{"name": "DPDK", "value": "DPDK"}, {"name": "IPVLAN", "value": "IPVLAN"}, {"name": "MACVLAN", "value": "MACVLAN"}, {"name": "OSDevice", "value": "OSDevice"}, {"name": "SRIOV", "value": "SRIOV"}]}}], "cls": "L2NetworkAttachmentConfiguration_create"}}, {"type": "array<object>", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].attachedNetworkConfiguration.l3Networks", "options": ["l3-networks"], "help": {"short": "The list of Layer 3 Networks and related configuration for attachment."}, "item": {"type": "object", "args": [{"type": "string", "var": "@L3NetworkAttachmentConfiguration_create.ipamEnabled", "options": ["ipam-enabled"], "help": {"short": "The indication of whether this network will or will not perform IP address management and allocate IP addresses when attached."}, "default": {"value": "False"}, "enum": {"items": [{"name": "False", "value": "False"}, {"name": "True", "value": "True"}]}}, {"type": "string", "var": "@L3NetworkAttachmentConfiguration_create.networkId", "options": ["network-id"], "required": true, "help": {"short": "The resource ID of the network that is being configured for attachment."}}, {"type": "string", "var": "@L3NetworkAttachmentConfiguration_create.pluginType", "options": ["plugin-type"], "help": {"short": "The indicator of how this network will be utilized by the Kubernetes cluster."}, "default": {"value": "SRIOV"}, "enum": {"items": [{"name": "DPDK", "value": "DPDK"}, {"name": "IPVLAN", "value": "IPVLAN"}, {"name": "MACVLAN", "value": "MACVLAN"}, {"name": "OSDevice", "value": "OSDevice"}, {"name": "SRIOV", "value": "SRIOV"}]}}], "cls": "L3NetworkAttachmentConfiguration_create"}}, {"type": "array<object>", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].attachedNetworkConfiguration.trunkedNetworks", "options": ["trunked-networks"], "help": {"short": "The list of Trunked Networks and related configuration for attachment."}, "item": {"type": "object", "args": [{"type": "string", "var": "@TrunkedNetworkAttachmentConfiguration_create.networkId", "options": ["network-id"], "required": true, "help": {"short": "The resource ID of the network that is being configured for attachment."}}, {"type": "string", "var": "@TrunkedNetworkAttachmentConfiguration_create.pluginType", "options": ["plugin-type"], "help": {"short": "The indicator of how this network will be utilized by the Kubernetes cluster."}, "default": {"value": "SRIOV"}, "enum": {"items": [{"name": "DPDK", "value": "DPDK"}, {"name": "IPVLAN", "value": "IPVLAN"}, {"name": "MACVLAN", "value": "MACVLAN"}, {"name": "OSDevice", "value": "OSDevice"}, {"name": "SRIOV", "value": "SRIOV"}]}}], "cls": "TrunkedNetworkAttachmentConfiguration_create"}}]}, {"type": "array<string>", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].availabilityZones", "options": ["availability-zones"], "help": {"short": "The list of availability zones of the Network Cloud cluster used for the provisioning of nodes in this agent pool. If not specified, all availability zones will be used."}, "item": {"type": "string"}}, {"type": "integer64", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].count", "options": ["count"], "required": true, "help": {"short": "The number of virtual machines that use this configuration."}}, {"type": "array<object>", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].labels", "options": ["labels"], "help": {"short": "The labels applied to the nodes in this agent pool."}, "item": {"type": "object", "args": [{"type": "string", "var": "@KubernetesLabel_create.key", "options": ["key"], "required": true, "help": {"short": "The name of the label or taint."}}, {"type": "string", "var": "@KubernetesLabel_create.value", "options": ["value"], "required": true, "help": {"short": "The value of the label or taint."}}], "cls": "KubernetesLabel_create"}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].mode", "options": ["mode"], "required": true, "help": {"short": "The selection of how this agent pool is utilized, either as a system pool or a user pool. System pools run the features and critical services for the Kubernetes Cluster, while user pools are dedicated to user workloads. Every Kubernetes cluster must contain at least one system node pool with at least one node."}, "enum": {"items": [{"name": "NotApplicable", "value": "NotApplicable"}, {"name": "System", "value": "System"}, {"name": "User", "value": "User"}]}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].name", "options": ["name"], "required": true, "help": {"short": "The name that will be used for the agent pool resource representing this agent pool."}, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "array<@KubernetesLabel_create>", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].taints", "options": ["taints"], "help": {"short": "The taints applied to the nodes in this agent pool."}, "item": {"type": "@KubernetesLabel_create"}}, {"type": "object", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].upgradeSettings", "options": ["upgrade-settings"], "help": {"short": "The configuration of the agent pool."}, "args": [{"type": "string", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].upgradeSettings.maxSurge", "options": ["max-surge"], "help": {"short": "The maximum number or percentage of nodes that are surged during upgrade. This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1."}, "default": {"value": "1"}}]}, {"type": "string", "var": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].vmSkuName", "options": ["vm-sku-name"], "required": true, "help": {"short": "The name of the VM SKU that determines the size of resources allocated for node VMs."}}]}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.kubernetesVersion", "options": ["kubernetes-version"], "required": true, "group": "Properties", "help": {"short": "The Kubernetes version for this cluster. Accepts n.n, n.n.n, and n.n.n-n format. The interpreted version used will be resolved into this field after creation or update."}}, {"type": "object", "var": "$kubernetesClusterParameters.properties.managedResourceGroupConfiguration", "options": ["managed-resource-group-configuration"], "group": "Properties", "help": {"short": "The configuration of the managed resource group associated with the resource."}, "args": [{"type": "string", "var": "$kubernetesClusterParameters.properties.managedResourceGroupConfiguration.location", "options": ["location"], "help": {"short": "The location of the managed resource group. If not specified, the location of the parent resource is chosen."}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.managedResourceGroupConfiguration.name", "options": ["name"], "help": {"short": "The name for the managed resource group. If not specified, the unique name is automatically generated."}, "format": {"maxLength": 75}}]}, {"type": "object", "var": "$kubernetesClusterParameters.properties.networkConfiguration", "options": ["network-configuration"], "required": true, "group": "Properties", "help": {"short": "The configuration of the Kubernetes cluster networking, including the attachment of networks that span the cluster."}, "args": [{"type": "object", "var": "$kubernetesClusterParameters.properties.networkConfiguration.attachedNetworkConfiguration", "options": ["attached-network-configuration"], "help": {"short": "The configuration of networks being attached to the cluster for use by the workloads that run on this Kubernetes cluster."}, "args": [{"type": "array<@L2NetworkAttachmentConfiguration_create>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.attachedNetworkConfiguration.l2Networks", "options": ["l2-networks"], "help": {"short": "The list of Layer 2 Networks and related configuration for attachment."}, "item": {"type": "@L2NetworkAttachmentConfiguration_create"}}, {"type": "array<@L3NetworkAttachmentConfiguration_create>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.attachedNetworkConfiguration.l3Networks", "options": ["l3-networks"], "help": {"short": "The list of Layer 3 Networks and related configuration for attachment."}, "item": {"type": "@L3NetworkAttachmentConfiguration_create"}}, {"type": "array<@TrunkedNetworkAttachmentConfiguration_create>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.attachedNetworkConfiguration.trunkedNetworks", "options": ["trunked-networks"], "help": {"short": "The list of Trunked Networks and related configuration for attachment."}, "item": {"type": "@TrunkedNetworkAttachmentConfiguration_create"}}]}, {"type": "object", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration", "options": ["bgp-service-load-balancer-configuration"], "help": {"short": "The configuration of the BGP service load balancer for this Kubernetes cluster."}, "args": [{"type": "array<object>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements", "options": ["bgp-advertisements"], "help": {"short": "The association of IP address pools to the communities and peers, allowing for announcement of IPs."}, "item": {"type": "object", "args": [{"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements[].advertiseToFabric", "options": ["advertise-to-fabric"], "help": {"short": "The indicator of if this advertisement is also made to the network fabric associated with the Network Cloud Cluster. This field is ignored if fabricPeeringEnabled is set to False."}, "default": {"value": "True"}, "enum": {"items": [{"name": "False", "value": "False"}, {"name": "True", "value": "True"}]}}, {"type": "array<string>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements[].communities", "options": ["communities"], "help": {"short": "The names of the BGP communities to be associated with the announcement, utilizing a BGP community string in 1234:1234 format."}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements[].ipAddressPools", "options": ["ip-address-pools"], "required": true, "help": {"short": "The names of the IP address pools associated with this announcement."}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements[].peers", "options": ["peers"], "help": {"short": "The names of the BGP peers to limit this advertisement to. If no values are specified, all BGP peers will receive this advertisement."}, "item": {"type": "string"}}]}}, {"type": "array<object>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers", "options": ["bgp-peers"], "help": {"short": "The list of additional BgpPeer entities that the Kubernetes cluster will peer with. All peering must be explicitly defined."}, "item": {"type": "object", "args": [{"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].bfdEnabled", "options": ["bfd-enabled"], "help": {"short": "The indicator of BFD enablement for this BgpPeer."}, "default": {"value": "False"}, "enum": {"items": [{"name": "False", "value": "False"}, {"name": "True", "value": "True"}]}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].bgpMultiHop", "options": ["bgp-multi-hop"], "help": {"short": "The indicator to enable multi-hop peering support."}, "default": {"value": "False"}, "enum": {"items": [{"name": "False", "value": "False"}, {"name": "True", "value": "True"}]}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].holdTime", "options": ["hold-time"], "help": {"short": "The requested BGP hold time value. This field uses ISO 8601 duration format, for example P1H."}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].keepAliveTime", "options": ["keep-alive-time"], "help": {"short": "The requested BGP keepalive time value. This field uses ISO 8601 duration format, for example P1H."}}, {"type": "integer64", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].myAsn", "options": ["my-asn"], "help": {"short": "The autonomous system number used for the local end of the BGP session."}, "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].name", "options": ["name"], "required": true, "help": {"short": "The name used to identify this BGP peer for association with a BGP advertisement."}, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].password", "options": ["password"], "help": {"short": "The authentication password for routers enforcing TCP MD5 authenticated sessions."}, "format": {"pattern": "^[a-zA-Z0-9]{0,80}$", "maxLength": 80}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].peerAddress", "options": ["peer-address"], "required": true, "help": {"short": "The IPv4 or IPv6 address used to connect this BGP session."}}, {"type": "integer64", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].peerAsn", "options": ["peer-asn"], "required": true, "help": {"short": "The autonomous system number expected from the remote end of the BGP session."}, "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "integer64", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].peerPort", "options": ["peer-port"], "help": {"short": "The port used to connect this BGP session."}, "default": {"value": 179}}]}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.fabricPeeringEnabled", "options": ["fabric-peering-enabled"], "help": {"short": "The indicator to specify if the load balancer peers with the network fabric."}, "default": {"value": "True"}, "enum": {"items": [{"name": "False", "value": "False"}, {"name": "True", "value": "True"}]}}, {"type": "array<object>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools", "options": ["ip-address-pools"], "help": {"short": "The list of pools of IP addresses that can be allocated to Load Balancer services."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools[].addresses", "options": ["addresses"], "required": true, "help": {"short": "The list of IP address ranges. Each range can be a either a subnet in CIDR format or an explicit start-end range of IP addresses."}, "item": {"type": "string"}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools[].autoAssign", "options": ["auto-assign"], "help": {"short": "The indicator to determine if automatic allocation from the pool should occur."}, "default": {"value": "True"}, "enum": {"items": [{"name": "False", "value": "False"}, {"name": "True", "value": "True"}]}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools[].name", "options": ["name"], "required": true, "help": {"short": "The name used to identify this IP address pool for association with a BGP advertisement."}, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools[].onlyUseHostIps", "options": ["only-use-host-ips"], "help": {"short": "The indicator to prevent the use of IP addresses ending with .0 and .255 for this pool. Enabling this option will only use IP addresses between .1 and .254 inclusive."}, "default": {"value": "True"}, "enum": {"items": [{"name": "False", "value": "False"}, {"name": "True", "value": "True"}]}}]}}]}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.cloudServicesNetworkId", "options": ["cloud-services-network-id"], "required": true, "help": {"short": "The resource ID of the associated Cloud Services network."}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.cniNetworkId", "options": ["cni-network-id"], "required": true, "help": {"short": "The resource ID of the Layer 3 network that is used for creation of the Container Networking Interface network."}}, {"type": "string", "var": "$kubernetesClusterParameters.properties.networkConfiguration.dnsServiceIp", "options": ["dns-service-ip"], "help": {"short": "The IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in service CIDR."}}, {"type": "array<string>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.podCidrs", "options": ["pod-cidrs"], "help": {"short": "The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking."}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$kubernetesClusterParameters.properties.networkConfiguration.serviceCidrs", "options": ["service-cidrs"], "help": {"short": "The CIDR notation IP ranges from which to assign service IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking."}, "item": {"type": "string"}}]}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "KubernetesClusters_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "kubernetesClusterName", "arg": "$Path.kubernetesClusterName", "required": true, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-07-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "kubernetesClusterParameters", "required": true, "props": [{"type": "object", "name": "extendedLocation", "arg": "$kubernetesClusterParameters.extendedLocation", "required": true, "props": [{"type": "string", "name": "name", "arg": "$kubernetesClusterParameters.extendedLocation.name", "required": true}, {"type": "string", "name": "type", "arg": "$kubernetesClusterParameters.extendedLocation.type", "required": true}]}, {"type": "ResourceLocation", "name": "location", "arg": "$kubernetesClusterParameters.location", "required": true}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "aadConfiguration", "arg": "$kubernetesClusterParameters.properties.aadConfiguration", "props": [{"type": "array<string>", "name": "adminGroupObjectIds", "arg": "$kubernetesClusterParameters.properties.aadConfiguration.adminGroupObjectIds", "required": true, "item": {"type": "string"}}]}, {"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername", "arg": "$kubernetesClusterParameters.properties.administratorConfiguration.adminUsername"}, {"type": "array<object>", "name": "sshPublicKeys", "arg": "$kubernetesClusterParameters.properties.administratorConfiguration.sshPublicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData", "arg": "@SshPublicKey_create.keyData", "required": true, "format": {"minLength": 1}}], "cls": "SshPublicKey_create"}}]}, {"type": "object", "name": "controlPlaneNodeConfiguration", "arg": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration", "required": true, "props": [{"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername", "arg": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.administratorConfiguration.adminUsername"}, {"type": "array<@SshPublicKey_create>", "name": "sshPublicKeys", "arg": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.administratorConfiguration.sshPublicKeys", "item": {"type": "@SshPublicKey_create"}}]}, {"type": "array<string>", "name": "availabilityZones", "arg": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.availabilityZones", "item": {"type": "string"}}, {"type": "integer64", "name": "count", "arg": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.count", "required": true, "format": {"minimum": 1}}, {"type": "string", "name": "vmSkuName", "arg": "$kubernetesClusterParameters.properties.controlPlaneNodeConfiguration.vmSkuName", "required": true}]}, {"type": "array<object>", "name": "initialAgentPoolConfigurations", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].administratorConfiguration.adminUsername"}, {"type": "array<@SshPublicKey_create>", "name": "sshPublicKeys", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].administratorConfiguration.sshPublicKeys", "item": {"type": "@SshPublicKey_create"}}]}, {"type": "object", "name": "agentOptions", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].agentOptions", "props": [{"type": "integer64", "name": "hugepagesCount", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].agentOptions.hugepagesCount", "required": true}, {"default": {"value": "2M"}, "type": "string", "name": "hugepagesSize", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].agentOptions.hugepagesSize", "enum": {"items": [{"value": "1G"}, {"value": "2M"}]}}]}, {"type": "object", "name": "attachedNetworkConfiguration", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].attachedNetworkConfiguration", "props": [{"type": "array<object>", "name": "l2Networks", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].attachedNetworkConfiguration.l2Networks", "item": {"type": "object", "props": [{"type": "string", "name": "networkId", "arg": "@L2NetworkAttachmentConfiguration_create.networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "arg": "@L2NetworkAttachmentConfiguration_create.pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "L2NetworkAttachmentConfiguration_create"}}, {"type": "array<object>", "name": "l3Networks", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].attachedNetworkConfiguration.l3Networks", "item": {"type": "object", "props": [{"default": {"value": "False"}, "type": "string", "name": "ipamEnabled", "arg": "@L3NetworkAttachmentConfiguration_create.ipamEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "networkId", "arg": "@L3NetworkAttachmentConfiguration_create.networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "arg": "@L3NetworkAttachmentConfiguration_create.pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "L3NetworkAttachmentConfiguration_create"}}, {"type": "array<object>", "name": "trunkedNetworks", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].attachedNetworkConfiguration.trunkedNetworks", "item": {"type": "object", "props": [{"type": "string", "name": "networkId", "arg": "@TrunkedNetworkAttachmentConfiguration_create.networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "arg": "@TrunkedNetworkAttachmentConfiguration_create.pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "TrunkedNetworkAttachmentConfiguration_create"}}]}, {"type": "array<string>", "name": "availabilityZones", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].availabilityZones", "item": {"type": "string"}}, {"type": "integer64", "name": "count", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].count", "required": true}, {"type": "array<object>", "name": "labels", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].labels", "item": {"type": "object", "props": [{"type": "string", "name": "key", "arg": "@KubernetesLabel_create.key", "required": true}, {"type": "string", "name": "value", "arg": "@KubernetesLabel_create.value", "required": true}], "cls": "KubernetesLabel_create"}}, {"type": "string", "name": "mode", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].mode", "required": true, "enum": {"items": [{"value": "NotApplicable"}, {"value": "System"}, {"value": "User"}]}}, {"type": "string", "name": "name", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].name", "required": true, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "array<@KubernetesLabel_create>", "name": "taints", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].taints", "item": {"type": "@KubernetesLabel_create"}}, {"type": "object", "name": "upgradeSettings", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].upgradeSettings", "props": [{"default": {"value": "1"}, "type": "string", "name": "maxSurge", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].upgradeSettings.maxSurge"}]}, {"type": "string", "name": "vmSkuName", "arg": "$kubernetesClusterParameters.properties.initialAgentPoolConfigurations[].vmSkuName", "required": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "kubernetesVersion", "arg": "$kubernetesClusterParameters.properties.kubernetesVersion", "required": true}, {"type": "object", "name": "managedResourceGroupConfiguration", "arg": "$kubernetesClusterParameters.properties.managedResourceGroupConfiguration", "props": [{"type": "string", "name": "location", "arg": "$kubernetesClusterParameters.properties.managedResourceGroupConfiguration.location"}, {"type": "string", "name": "name", "arg": "$kubernetesClusterParameters.properties.managedResourceGroupConfiguration.name", "format": {"maxLength": 75}}]}, {"type": "object", "name": "networkConfiguration", "arg": "$kubernetesClusterParameters.properties.networkConfiguration", "required": true, "props": [{"type": "object", "name": "attachedNetworkConfiguration", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.attachedNetworkConfiguration", "props": [{"type": "array<@L2NetworkAttachmentConfiguration_create>", "name": "l2Networks", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.attachedNetworkConfiguration.l2Networks", "item": {"type": "@L2NetworkAttachmentConfiguration_create"}}, {"type": "array<@L3NetworkAttachmentConfiguration_create>", "name": "l3Networks", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.attachedNetworkConfiguration.l3Networks", "item": {"type": "@L3NetworkAttachmentConfiguration_create"}}, {"type": "array<@TrunkedNetworkAttachmentConfiguration_create>", "name": "trunkedNetworks", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.attachedNetworkConfiguration.trunkedNetworks", "item": {"type": "@TrunkedNetworkAttachmentConfiguration_create"}}]}, {"type": "object", "name": "bgpServiceLoadBalancerConfiguration", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration", "props": [{"type": "array<object>", "name": "bgpAdvertisements", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements", "item": {"type": "object", "props": [{"default": {"value": "True"}, "type": "string", "name": "advertiseToFabric", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements[].advertiseToFabric", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "array<string>", "name": "communities", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements[].communities", "item": {"type": "string"}}, {"type": "array<string>", "name": "ipAddressPools", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements[].ipAddressPools", "required": true, "item": {"type": "string"}}, {"type": "array<string>", "name": "peers", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpAdvertisements[].peers", "item": {"type": "string"}}]}}, {"type": "array<object>", "name": "bgpPeers", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers", "item": {"type": "object", "props": [{"default": {"value": "False"}, "type": "string", "name": "bfdEnabled", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].bfdEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"default": {"value": "False"}, "type": "string", "name": "bgpMultiHop", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].bgpMultiHop", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "holdTime", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].holdTime"}, {"type": "string", "name": "keepAliveTime", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].keepAliveTime"}, {"type": "integer64", "name": "myAsn", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].myAsn", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "string", "name": "name", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].name", "required": true, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"type": "string", "name": "password", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].password", "secret": true, "format": {"pattern": "^[a-zA-Z0-9]{0,80}$", "maxLength": 80}}, {"type": "string", "name": "peerAddress", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].peerAddress", "required": true}, {"type": "integer64", "name": "peerAsn", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].peerAsn", "required": true, "format": {"maximum": 4294967295, "minimum": 0}}, {"default": {"value": 179}, "type": "integer64", "name": "peerPort", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.bgpPeers[].peerPort"}]}}, {"default": {"value": "True"}, "type": "string", "name": "fabricPeeringEnabled", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.fabricPeeringEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "array<object>", "name": "ipAddressPools", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools", "item": {"type": "object", "props": [{"type": "array<string>", "name": "addresses", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools[].addresses", "required": true, "item": {"type": "string"}}, {"default": {"value": "True"}, "type": "string", "name": "autoAssign", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools[].autoAssign", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "name", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools[].name", "required": true, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"default": {"value": "True"}, "type": "string", "name": "onlyUseHostIps", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.bgpServiceLoadBalancerConfiguration.ipAddressPools[].onlyUseHostIps", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}]}}]}, {"type": "string", "name": "cloudServicesNetworkId", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.cloudServicesNetworkId", "required": true}, {"type": "string", "name": "cniNetworkId", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.cniNetworkId", "required": true}, {"type": "string", "name": "dnsServiceIp", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.dnsServiceIp"}, {"type": "array<string>", "name": "podCidrs", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.podCidrs", "item": {"type": "string"}}, {"type": "array<string>", "name": "serviceCidrs", "arg": "$kubernetesClusterParameters.properties.networkConfiguration.serviceCidrs", "item": {"type": "string"}}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$kubernetesClusterParameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "object", "name": "extendedLocation", "required": true, "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "type", "required": true}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/kubernetesClusters/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "aadConfiguration", "props": [{"type": "array<string>", "name": "adminGroupObjectIds", "required": true, "item": {"type": "string"}}]}, {"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername"}, {"type": "array<object>", "name": "sshPublicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData", "required": true, "format": {"minLength": 1}}], "cls": "SshPublicKey_read"}}]}, {"readOnly": true, "type": "array<string>", "name": "attachedNetworkIds", "item": {"type": "string"}}, {"readOnly": true, "type": "array<object>", "name": "availableUpgrades", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "availabilityLifecycle", "enum": {"items": [{"value": "GenerallyAvailable"}, {"value": "Preview"}]}}, {"readOnly": true, "type": "string", "name": "version"}]}}, {"readOnly": true, "type": "string", "name": "clusterId"}, {"readOnly": true, "type": "string", "name": "connectedClusterId"}, {"readOnly": true, "type": "string", "name": "controlPlaneKubernetesVersion"}, {"type": "object", "name": "controlPlaneNodeConfiguration", "required": true, "props": [{"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername"}, {"type": "array<@SshPublicKey_read>", "name": "sshPublicKeys", "item": {"type": "@SshPublicKey_read"}}]}, {"type": "array<string>", "name": "availabilityZones", "item": {"type": "string"}}, {"type": "integer64", "name": "count", "required": true, "format": {"minimum": 1}}, {"type": "string", "name": "vmSkuName", "required": true}]}, {"readOnly": true, "type": "string", "name": "detailedStatus", "enum": {"items": [{"value": "Available"}, {"value": "Error"}, {"value": "Provisioning"}]}}, {"readOnly": true, "type": "string", "name": "detailedStatusMessage"}, {"readOnly": true, "type": "array<object>", "name": "featureStatuses", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "detailedStatus", "enum": {"items": [{"value": "Failed"}, {"value": "Running"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "detailedStatusMessage"}, {"readOnly": true, "type": "string", "name": "name"}, {"readOnly": true, "type": "string", "name": "version"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "initialAgentPoolConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername"}, {"type": "array<@SshPublicKey_read>", "name": "sshPublicKeys", "item": {"type": "@SshPublicKey_read"}}]}, {"type": "object", "name": "agentOptions", "props": [{"type": "integer64", "name": "hugepagesCount", "required": true}, {"default": {"value": "2M"}, "type": "string", "name": "hugepagesSize", "enum": {"items": [{"value": "1G"}, {"value": "2M"}]}}]}, {"type": "object", "name": "attachedNetworkConfiguration", "props": [{"type": "array<object>", "name": "l2Networks", "item": {"type": "object", "props": [{"type": "string", "name": "networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "L2NetworkAttachmentConfiguration_read"}}, {"type": "array<object>", "name": "l3Networks", "item": {"type": "object", "props": [{"default": {"value": "False"}, "type": "string", "name": "ipamEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "L3NetworkAttachmentConfiguration_read"}}, {"type": "array<object>", "name": "trunkedNetworks", "item": {"type": "object", "props": [{"type": "string", "name": "networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "TrunkedNetworkAttachmentConfiguration_read"}}]}, {"type": "array<string>", "name": "availabilityZones", "item": {"type": "string"}}, {"type": "integer64", "name": "count", "required": true}, {"type": "array<object>", "name": "labels", "item": {"type": "object", "props": [{"type": "string", "name": "key", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "KubernetesLabel_read"}}, {"type": "string", "name": "mode", "required": true, "enum": {"items": [{"value": "NotApplicable"}, {"value": "System"}, {"value": "User"}]}}, {"type": "string", "name": "name", "required": true, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "array<@KubernetesLabel_read>", "name": "taints", "item": {"type": "@KubernetesLabel_read"}}, {"type": "object", "name": "upgradeSettings", "props": [{"default": {"value": "1"}, "type": "string", "name": "maxSurge"}]}, {"type": "string", "name": "vmSkuName", "required": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "kubernetesVersion", "required": true}, {"type": "object", "name": "managedResourceGroupConfiguration", "props": [{"type": "string", "name": "location"}, {"type": "string", "name": "name", "format": {"maxLength": 75}}]}, {"type": "object", "name": "networkConfiguration", "required": true, "props": [{"type": "object", "name": "attachedNetworkConfiguration", "props": [{"type": "array<@L2NetworkAttachmentConfiguration_read>", "name": "l2Networks", "item": {"type": "@L2NetworkAttachmentConfiguration_read"}}, {"type": "array<@L3NetworkAttachmentConfiguration_read>", "name": "l3Networks", "item": {"type": "@L3NetworkAttachmentConfiguration_read"}}, {"type": "array<@TrunkedNetworkAttachmentConfiguration_read>", "name": "trunkedNetworks", "item": {"type": "@TrunkedNetworkAttachmentConfiguration_read"}}]}, {"type": "object", "name": "bgpServiceLoadBalancerConfiguration", "props": [{"type": "array<object>", "name": "bgpAdvertisements", "item": {"type": "object", "props": [{"default": {"value": "True"}, "type": "string", "name": "advertiseToFabric", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "array<string>", "name": "communities", "item": {"type": "string"}}, {"type": "array<string>", "name": "ipAddressPools", "required": true, "item": {"type": "string"}}, {"type": "array<string>", "name": "peers", "item": {"type": "string"}}]}}, {"type": "array<object>", "name": "bgpPeers", "item": {"type": "object", "props": [{"default": {"value": "False"}, "type": "string", "name": "bfdEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"default": {"value": "False"}, "type": "string", "name": "bgpMultiHop", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "holdTime"}, {"type": "string", "name": "keepAliveTime"}, {"type": "integer64", "name": "myAsn", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "string", "name": "name", "required": true, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"type": "string", "name": "peerAddress", "required": true}, {"type": "integer64", "name": "peerAsn", "required": true, "format": {"maximum": 4294967295, "minimum": 0}}, {"default": {"value": 179}, "type": "integer64", "name": "peerPort"}]}}, {"default": {"value": "True"}, "type": "string", "name": "fabricPeeringEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "array<object>", "name": "ipAddressPools", "item": {"type": "object", "props": [{"type": "array<string>", "name": "addresses", "required": true, "item": {"type": "string"}}, {"default": {"value": "True"}, "type": "string", "name": "autoAssign", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "name", "required": true, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"default": {"value": "True"}, "type": "string", "name": "onlyUseHostIps", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}]}}]}, {"type": "string", "name": "cloudServicesNetworkId", "required": true}, {"type": "string", "name": "cniNetworkId", "required": true}, {"type": "string", "name": "dnsServiceIp"}, {"type": "array<string>", "name": "podCidrs", "item": {"type": "string"}}, {"type": "array<string>", "name": "serviceCidrs", "item": {"type": "string"}}]}, {"readOnly": true, "type": "array<object>", "name": "nodes", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "agentPoolId"}, {"readOnly": true, "type": "string", "name": "availabilityZone"}, {"readOnly": true, "type": "string", "name": "bareMetalMachineId"}, {"readOnly": true, "type": "integer64", "name": "cpuCores"}, {"readOnly": true, "type": "string", "name": "detailedStatus", "enum": {"items": [{"value": "Available"}, {"value": "Error"}, {"value": "Provisioning"}, {"value": "Running"}, {"value": "Scheduling"}, {"value": "Stopped"}, {"value": "Terminating"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "detailedStatusMessage"}, {"readOnly": true, "type": "integer64", "name": "diskSizeGB"}, {"readOnly": true, "type": "string", "name": "image"}, {"readOnly": true, "type": "string", "name": "kubernetesVersion"}, {"readOnly": true, "type": "array<@KubernetesLabel_read>", "name": "labels", "item": {"type": "@KubernetesLabel_read"}, "identifiers": ["key"]}, {"readOnly": true, "type": "integer64", "name": "memorySizeGB"}, {"readOnly": true, "type": "string", "name": "mode", "enum": {"items": [{"value": "NotApplicable"}, {"value": "System"}, {"value": "User"}]}}, {"readOnly": true, "type": "string", "name": "name"}, {"readOnly": true, "type": "array<object>", "name": "networkAttachments", "item": {"type": "object", "props": [{"type": "string", "name": "attachedNetworkId", "required": true}, {"type": "string", "name": "defaultGateway", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "ipAllocationMethod", "required": true, "enum": {"items": [{"value": "Disabled"}, {"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "ipv4Address"}, {"type": "string", "name": "ipv6Address"}, {"readOnly": true, "type": "string", "name": "macAddress"}, {"type": "string", "name": "networkAttachmentName", "format": {"maxLength": 15}}]}, "identifiers": ["networkAttachmentName"]}, {"readOnly": true, "type": "string", "name": "powerState", "enum": {"items": [{"value": "Off"}, {"value": "On"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "role", "enum": {"items": [{"value": "ControlPlane"}, {"value": "Worker"}]}}, {"readOnly": true, "type": "array<@KubernetesLabel_read>", "name": "taints", "item": {"type": "@KubernetesLabel_read"}, "identifiers": ["key"]}, {"readOnly": true, "type": "string", "name": "vmSkuName"}]}, "identifiers": ["name"]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Created"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2023-07-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}", "version": "2023-07-01", "swagger": "mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfQ==/V/MjAyMy0wNy0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.kubernetesClusterName", "options": ["n", "name", "kubernetes-cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the Kubernetes cluster."}, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "KubernetesClusterUpdateParameters", "args": [{"type": "object", "var": "$kubernetesClusterUpdateParameters.tags", "options": ["tags"], "group": "KubernetesClusterUpdateParameters", "help": {"short": "The Azure resource tags that will replace the existing ones."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$kubernetesClusterUpdateParameters.properties.controlPlaneNodeConfiguration", "options": ["control-plane-node-configuration"], "group": "Properties", "help": {"short": "The defining characteristics of the control plane that can be patched for this Kubernetes cluster."}, "args": [{"type": "integer64", "var": "$kubernetesClusterUpdateParameters.properties.controlPlaneNodeConfiguration.count", "options": ["count"], "help": {"short": "The number of virtual machines that use this configuration."}, "format": {"minimum": 1}}]}, {"type": "string", "var": "$kubernetesClusterUpdateParameters.properties.kubernetesVersion", "options": ["kubernetes-version"], "group": "Properties", "help": {"short": "The Kubernetes version for this cluster. Accepts n.n, n.n.n, and n.n.n-n format. The interpreted version used will be resolved into this field after creation or update."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "KubernetesClusters_Update", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}", "request": {"method": "patch", "path": {"params": [{"type": "string", "name": "kubernetesClusterName", "arg": "$Path.kubernetesClusterName", "required": true, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-07-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "kubernetesClusterUpdateParameters", "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "controlPlaneNodeConfiguration", "arg": "$kubernetesClusterUpdateParameters.properties.controlPlaneNodeConfiguration", "props": [{"type": "integer64", "name": "count", "arg": "$kubernetesClusterUpdateParameters.properties.controlPlaneNodeConfiguration.count", "format": {"minimum": 1}}]}, {"type": "string", "name": "kubernetesVersion", "arg": "$kubernetesClusterUpdateParameters.properties.kubernetesVersion"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$kubernetesClusterUpdateParameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "object", "name": "extendedLocation", "required": true, "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "type", "required": true}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/kubernetesClusters/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "aadConfiguration", "props": [{"type": "array<string>", "name": "adminGroupObjectIds", "required": true, "item": {"type": "string"}}]}, {"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername"}, {"type": "array<object>", "name": "sshPublicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData", "required": true, "format": {"minLength": 1}}], "cls": "SshPublicKey_read"}}]}, {"readOnly": true, "type": "array<string>", "name": "attachedNetworkIds", "item": {"type": "string"}}, {"readOnly": true, "type": "array<object>", "name": "availableUpgrades", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "availabilityLifecycle", "enum": {"items": [{"value": "GenerallyAvailable"}, {"value": "Preview"}]}}, {"readOnly": true, "type": "string", "name": "version"}]}}, {"readOnly": true, "type": "string", "name": "clusterId"}, {"readOnly": true, "type": "string", "name": "connectedClusterId"}, {"readOnly": true, "type": "string", "name": "controlPlaneKubernetesVersion"}, {"type": "object", "name": "controlPlaneNodeConfiguration", "required": true, "props": [{"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername"}, {"type": "array<@SshPublicKey_read>", "name": "sshPublicKeys", "item": {"type": "@SshPublicKey_read"}}]}, {"type": "array<string>", "name": "availabilityZones", "item": {"type": "string"}}, {"type": "integer64", "name": "count", "required": true, "format": {"minimum": 1}}, {"type": "string", "name": "vmSkuName", "required": true}]}, {"readOnly": true, "type": "string", "name": "detailedStatus", "enum": {"items": [{"value": "Available"}, {"value": "Error"}, {"value": "Provisioning"}]}}, {"readOnly": true, "type": "string", "name": "detailedStatusMessage"}, {"readOnly": true, "type": "array<object>", "name": "featureStatuses", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "detailedStatus", "enum": {"items": [{"value": "Failed"}, {"value": "Running"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "detailedStatusMessage"}, {"readOnly": true, "type": "string", "name": "name"}, {"readOnly": true, "type": "string", "name": "version"}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "initialAgentPoolConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "object", "name": "administratorConfiguration", "props": [{"type": "string", "name": "adminUsername"}, {"type": "array<@SshPublicKey_read>", "name": "sshPublicKeys", "item": {"type": "@SshPublicKey_read"}}]}, {"type": "object", "name": "agentOptions", "props": [{"type": "integer64", "name": "hugepagesCount", "required": true}, {"default": {"value": "2M"}, "type": "string", "name": "hugepagesSize", "enum": {"items": [{"value": "1G"}, {"value": "2M"}]}}]}, {"type": "object", "name": "attachedNetworkConfiguration", "props": [{"type": "array<object>", "name": "l2Networks", "item": {"type": "object", "props": [{"type": "string", "name": "networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "L2NetworkAttachmentConfiguration_read"}}, {"type": "array<object>", "name": "l3Networks", "item": {"type": "object", "props": [{"default": {"value": "False"}, "type": "string", "name": "ipamEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "L3NetworkAttachmentConfiguration_read"}}, {"type": "array<object>", "name": "trunkedNetworks", "item": {"type": "object", "props": [{"type": "string", "name": "networkId", "required": true}, {"default": {"value": "SRIOV"}, "type": "string", "name": "pluginType", "enum": {"items": [{"value": "DPDK"}, {"value": "IPVLAN"}, {"value": "MACVLAN"}, {"value": "OSDevice"}, {"value": "SRIOV"}]}}], "cls": "TrunkedNetworkAttachmentConfiguration_read"}}]}, {"type": "array<string>", "name": "availabilityZones", "item": {"type": "string"}}, {"type": "integer64", "name": "count", "required": true}, {"type": "array<object>", "name": "labels", "item": {"type": "object", "props": [{"type": "string", "name": "key", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "KubernetesLabel_read"}}, {"type": "string", "name": "mode", "required": true, "enum": {"items": [{"value": "NotApplicable"}, {"value": "System"}, {"value": "User"}]}}, {"type": "string", "name": "name", "required": true, "format": {"pattern": "^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"}}, {"type": "array<@KubernetesLabel_read>", "name": "taints", "item": {"type": "@KubernetesLabel_read"}}, {"type": "object", "name": "upgradeSettings", "props": [{"default": {"value": "1"}, "type": "string", "name": "maxSurge"}]}, {"type": "string", "name": "vmSkuName", "required": true}]}, "identifiers": ["name"]}, {"type": "string", "name": "kubernetesVersion", "required": true}, {"type": "object", "name": "managedResourceGroupConfiguration", "props": [{"type": "string", "name": "location"}, {"type": "string", "name": "name", "format": {"maxLength": 75}}]}, {"type": "object", "name": "networkConfiguration", "required": true, "props": [{"type": "object", "name": "attachedNetworkConfiguration", "props": [{"type": "array<@L2NetworkAttachmentConfiguration_read>", "name": "l2Networks", "item": {"type": "@L2NetworkAttachmentConfiguration_read"}}, {"type": "array<@L3NetworkAttachmentConfiguration_read>", "name": "l3Networks", "item": {"type": "@L3NetworkAttachmentConfiguration_read"}}, {"type": "array<@TrunkedNetworkAttachmentConfiguration_read>", "name": "trunkedNetworks", "item": {"type": "@TrunkedNetworkAttachmentConfiguration_read"}}]}, {"type": "object", "name": "bgpServiceLoadBalancerConfiguration", "props": [{"type": "array<object>", "name": "bgpAdvertisements", "item": {"type": "object", "props": [{"default": {"value": "True"}, "type": "string", "name": "advertiseToFabric", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "array<string>", "name": "communities", "item": {"type": "string"}}, {"type": "array<string>", "name": "ipAddressPools", "required": true, "item": {"type": "string"}}, {"type": "array<string>", "name": "peers", "item": {"type": "string"}}]}}, {"type": "array<object>", "name": "bgpPeers", "item": {"type": "object", "props": [{"default": {"value": "False"}, "type": "string", "name": "bfdEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"default": {"value": "False"}, "type": "string", "name": "bgpMultiHop", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "holdTime"}, {"type": "string", "name": "keepAliveTime"}, {"type": "integer64", "name": "myAsn", "format": {"maximum": 4294967295, "minimum": 0}}, {"type": "string", "name": "name", "required": true, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"type": "string", "name": "peerAddress", "required": true}, {"type": "integer64", "name": "peerAsn", "required": true, "format": {"maximum": 4294967295, "minimum": 0}}, {"default": {"value": 179}, "type": "integer64", "name": "peerPort"}]}}, {"default": {"value": "True"}, "type": "string", "name": "fabricPeeringEnabled", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "array<object>", "name": "ipAddressPools", "item": {"type": "object", "props": [{"type": "array<string>", "name": "addresses", "required": true, "item": {"type": "string"}}, {"default": {"value": "True"}, "type": "string", "name": "autoAssign", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "name", "required": true, "format": {"pattern": "^[a-z0-9]([a-z0-9.-]{0,61}[a-z0-9]){0,1}$"}}, {"default": {"value": "True"}, "type": "string", "name": "onlyUseHostIps", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}]}}]}, {"type": "string", "name": "cloudServicesNetworkId", "required": true}, {"type": "string", "name": "cniNetworkId", "required": true}, {"type": "string", "name": "dnsServiceIp"}, {"type": "array<string>", "name": "podCidrs", "item": {"type": "string"}}, {"type": "array<string>", "name": "serviceCidrs", "item": {"type": "string"}}]}, {"readOnly": true, "type": "array<object>", "name": "nodes", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "agentPoolId"}, {"readOnly": true, "type": "string", "name": "availabilityZone"}, {"readOnly": true, "type": "string", "name": "bareMetalMachineId"}, {"readOnly": true, "type": "integer64", "name": "cpuCores"}, {"readOnly": true, "type": "string", "name": "detailedStatus", "enum": {"items": [{"value": "Available"}, {"value": "Error"}, {"value": "Provisioning"}, {"value": "Running"}, {"value": "Scheduling"}, {"value": "Stopped"}, {"value": "Terminating"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "detailedStatusMessage"}, {"readOnly": true, "type": "integer64", "name": "diskSizeGB"}, {"readOnly": true, "type": "string", "name": "image"}, {"readOnly": true, "type": "string", "name": "kubernetesVersion"}, {"readOnly": true, "type": "array<@KubernetesLabel_read>", "name": "labels", "item": {"type": "@KubernetesLabel_read"}, "identifiers": ["key"]}, {"readOnly": true, "type": "integer64", "name": "memorySizeGB"}, {"readOnly": true, "type": "string", "name": "mode", "enum": {"items": [{"value": "NotApplicable"}, {"value": "System"}, {"value": "User"}]}}, {"readOnly": true, "type": "string", "name": "name"}, {"readOnly": true, "type": "array<object>", "name": "networkAttachments", "item": {"type": "object", "props": [{"type": "string", "name": "attachedNetworkId", "required": true}, {"type": "string", "name": "defaultGateway", "enum": {"items": [{"value": "False"}, {"value": "True"}]}}, {"type": "string", "name": "ipAllocationMethod", "required": true, "enum": {"items": [{"value": "Disabled"}, {"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "string", "name": "ipv4Address"}, {"type": "string", "name": "ipv6Address"}, {"readOnly": true, "type": "string", "name": "macAddress"}, {"type": "string", "name": "networkAttachmentName", "format": {"maxLength": 15}}]}, "identifiers": ["networkAttachmentName"]}, {"readOnly": true, "type": "string", "name": "powerState", "enum": {"items": [{"value": "Off"}, {"value": "On"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "string", "name": "role", "enum": {"items": [{"value": "ControlPlane"}, {"value": "Worker"}]}}, {"readOnly": true, "type": "array<@KubernetesLabel_read>", "name": "taints", "item": {"type": "@KubernetesLabel_read"}, "identifiers": ["key"]}, {"readOnly": true, "type": "string", "name": "vmSkuName"}]}, "identifiers": ["name"]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Accepted"}, {"value": "Canceled"}, {"value": "Created"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "KubernetesCluster_read"}}}}, {"statusCode": [202], "header": {"items": [{"name": "Azure-AsyncOperation"}]}, "body": {"json": {"var": "$Instance", "schema": {"type": "@KubernetesCluster_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}