<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/monitoredsubscriptions/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L21vbml0b3JlZFN1YnNjcmlwdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
  <commandGroup name="elastic monitor monitored-subscription">
    <command name="show" version="2024-06-15-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/monitoredsubscriptions/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L21vbml0b3JlZFN1YnNjcmlwdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name name n" required="True" idPart="child_name_1">
          <help short="The configuration name. Only 'default' value is supported."/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Monitor resource name"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="MonitoredSubscriptions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="get">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}/monitoredSubscriptions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="monitoredSubscriptionList">
                      <item type="object">
                        <prop type="string" name="error"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subscriptionId"/>
                        <prop type="object" name="tagRules">
                          <prop type="object" name="logRules">
                            <prop type="array<object>" name="filteringTags">
                              <item type="object">
                                <prop type="string" name="action">
                                  <enum>
                                    <item value="&quot;Exclude&quot;"/>
                                    <item value="&quot;Include&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="boolean" name="sendAadLogs"/>
                            <prop type="boolean" name="sendActivityLogs"/>
                            <prop type="boolean" name="sendSubscriptionLogs"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Accepted&quot;"/>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;NotSpecified&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-06-15-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/monitoredsubscriptions/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L21vbml0b3JlZFN1YnNjcmlwdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name name n" required="True" idPart="child_name_1">
          <help short="The configuration name. Only 'default' value is supported."/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Monitor resource name"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="MonitoredSubscriptions_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="delete">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-06-15-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/monitoredsubscriptions/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L21vbml0b3JlZFN1YnNjcmlwdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name name n" required="True" idPart="child_name_1">
          <help short="The configuration name. Only 'default' value is supported."/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Monitor resource name"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$body.properties.monitoredSubscriptionList" options="monitored-subscription-list" group="Properties">
          <help short="List of subscriptions and the state of the monitoring."/>
          <item type="object">
            <arg type="string" var="$body.properties.monitoredSubscriptionList[].error" options="error">
              <help short="The reason of not monitoring the subscription."/>
            </arg>
            <arg type="string" var="$body.properties.monitoredSubscriptionList[].status" options="status">
              <help short="The state of monitoring."/>
              <enum>
                <item name="Active" value="&quot;Active&quot;"/>
                <item name="Deleting" value="&quot;Deleting&quot;"/>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="InProgress" value="&quot;InProgress&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$body.properties.monitoredSubscriptionList[].subscriptionId" options="subscription-id">
              <help short="The subscriptionId to be monitored."/>
            </arg>
            <arg type="object" var="$body.properties.monitoredSubscriptionList[].tagRules" options="tag-rules">
              <help short="Definition of the properties for a TagRules resource."/>
              <arg type="object" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules" options="log-rules">
                <help short="Rules for sending logs."/>
                <arg type="array<object>" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags" options="filtering-tags">
                  <help short="List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
                  <item type="object">
                    <arg type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].action" options="action">
                      <help short="Valid actions for a filtering tag."/>
                      <enum>
                        <item name="Exclude" value="&quot;Exclude&quot;"/>
                        <item name="Include" value="&quot;Include&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].name" options="name">
                      <help short="The name (also known as the key) of the tag."/>
                    </arg>
                    <arg type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].value" options="value">
                      <help short="The value of the tag."/>
                    </arg>
                  </item>
                </arg>
                <arg type="boolean" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendAadLogs" options="send-aad-logs">
                  <help short="Flag specifying if AAD logs should be sent for the Monitor resource."/>
                </arg>
                <arg type="boolean" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendActivityLogs" options="send-activity-logs">
                  <help short="Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."/>
                </arg>
                <arg type="boolean" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendSubscriptionLogs" options="send-subscription-logs">
                  <help short="Flag specifying if subscription logs should be sent for the Monitor resource."/>
                </arg>
              </arg>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$body.properties.operation" options="operation" group="Properties">
          <help short="The operation for the patch on the resource."/>
          <enum>
            <item name="Active" value="&quot;Active&quot;"/>
            <item name="AddBegin" value="&quot;AddBegin&quot;"/>
            <item name="AddComplete" value="&quot;AddComplete&quot;"/>
            <item name="DeleteBegin" value="&quot;DeleteBegin&quot;"/>
            <item name="DeleteComplete" value="&quot;DeleteComplete&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="MonitoredSubscriptions_CreateorUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="put">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="monitoredSubscriptionList" arg="$body.properties.monitoredSubscriptionList">
                      <item type="object">
                        <prop type="string" name="error" arg="$body.properties.monitoredSubscriptionList[].error"/>
                        <prop type="string" name="status" arg="$body.properties.monitoredSubscriptionList[].status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subscriptionId" arg="$body.properties.monitoredSubscriptionList[].subscriptionId"/>
                        <prop type="object" name="tagRules" arg="$body.properties.monitoredSubscriptionList[].tagRules">
                          <prop type="object" name="logRules" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules">
                            <prop type="array<object>" name="filteringTags" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags">
                              <item type="object">
                                <prop type="string" name="action" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].action">
                                  <enum>
                                    <item value="&quot;Exclude&quot;"/>
                                    <item value="&quot;Include&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="name" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].name"/>
                                <prop type="string" name="value" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].value"/>
                              </item>
                            </prop>
                            <prop type="boolean" name="sendAadLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendAadLogs"/>
                            <prop type="boolean" name="sendActivityLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendActivityLogs"/>
                            <prop type="boolean" name="sendSubscriptionLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendSubscriptionLogs"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="operation" arg="$body.properties.operation">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;AddBegin&quot;"/>
                        <item value="&quot;AddComplete&quot;"/>
                        <item value="&quot;DeleteBegin&quot;"/>
                        <item value="&quot;DeleteComplete&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}/monitoredSubscriptions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="monitoredSubscriptionList">
                      <item type="object">
                        <prop type="string" name="error"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subscriptionId"/>
                        <prop type="object" name="tagRules">
                          <prop type="object" name="logRules">
                            <prop type="array<object>" name="filteringTags">
                              <item type="object">
                                <prop type="string" name="action">
                                  <enum>
                                    <item value="&quot;Exclude&quot;"/>
                                    <item value="&quot;Include&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="boolean" name="sendAadLogs"/>
                            <prop type="boolean" name="sendActivityLogs"/>
                            <prop type="boolean" name="sendSubscriptionLogs"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Accepted&quot;"/>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;NotSpecified&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-06-15-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/monitoredsubscriptions/{}" version="2024-06-15-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L21vbml0b3JlZFN1YnNjcmlwdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyNC0wNi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name name n" required="True" idPart="child_name_1">
          <help short="The configuration name. Only 'default' value is supported."/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Monitor resource name"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$body.properties.monitoredSubscriptionList" options="monitored-subscription-list" group="Properties">
          <help short="List of subscriptions and the state of the monitoring."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].error" options="error">
              <help short="The reason of not monitoring the subscription."/>
            </arg>
            <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].status" options="status">
              <help short="The state of monitoring."/>
              <enum>
                <item name="Active" value="&quot;Active&quot;"/>
                <item name="Deleting" value="&quot;Deleting&quot;"/>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="InProgress" value="&quot;InProgress&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].subscriptionId" options="subscription-id">
              <help short="The subscriptionId to be monitored."/>
            </arg>
            <arg nullable="True" type="object" var="$body.properties.monitoredSubscriptionList[].tagRules" options="tag-rules">
              <help short="Definition of the properties for a TagRules resource."/>
              <arg nullable="True" type="object" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules" options="log-rules">
                <help short="Rules for sending logs."/>
                <arg nullable="True" type="array<object>" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags" options="filtering-tags">
                  <help short="List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].action" options="action">
                      <help short="Valid actions for a filtering tag."/>
                      <enum>
                        <item name="Exclude" value="&quot;Exclude&quot;"/>
                        <item name="Include" value="&quot;Include&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].name" options="name">
                      <help short="The name (also known as the key) of the tag."/>
                    </arg>
                    <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].value" options="value">
                      <help short="The value of the tag."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="boolean" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendAadLogs" options="send-aad-logs">
                  <help short="Flag specifying if AAD logs should be sent for the Monitor resource."/>
                </arg>
                <arg nullable="True" type="boolean" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendActivityLogs" options="send-activity-logs">
                  <help short="Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."/>
                </arg>
                <arg nullable="True" type="boolean" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendSubscriptionLogs" options="send-subscription-logs">
                  <help short="Flag specifying if subscription logs should be sent for the Monitor resource."/>
                </arg>
              </arg>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.operation" options="operation" group="Properties">
          <help short="The operation for the patch on the resource."/>
          <enum>
            <item name="Active" value="&quot;Active&quot;"/>
            <item name="AddBegin" value="&quot;AddBegin&quot;"/>
            <item name="AddComplete" value="&quot;AddComplete&quot;"/>
            <item name="DeleteBegin" value="&quot;DeleteBegin&quot;"/>
            <item name="DeleteComplete" value="&quot;DeleteComplete&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="MonitoredSubscriptions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="get">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="MonitoredSubscriptionProperties_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}/monitoredSubscriptions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="monitoredSubscriptionList">
                      <item type="object">
                        <prop type="string" name="error"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subscriptionId"/>
                        <prop type="object" name="tagRules">
                          <prop type="object" name="logRules">
                            <prop type="array<object>" name="filteringTags">
                              <item type="object">
                                <prop type="string" name="action">
                                  <enum>
                                    <item value="&quot;Exclude&quot;"/>
                                    <item value="&quot;Include&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="boolean" name="sendAadLogs"/>
                            <prop type="boolean" name="sendActivityLogs"/>
                            <prop type="boolean" name="sendSubscriptionLogs"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Accepted&quot;"/>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;NotSpecified&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="array<object>" name="monitoredSubscriptionList" arg="$body.properties.monitoredSubscriptionList">
                  <item type="object">
                    <prop type="string" name="error" arg="$body.properties.monitoredSubscriptionList[].error"/>
                    <prop type="string" name="status" arg="$body.properties.monitoredSubscriptionList[].status">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="subscriptionId" arg="$body.properties.monitoredSubscriptionList[].subscriptionId"/>
                    <prop type="object" name="tagRules" arg="$body.properties.monitoredSubscriptionList[].tagRules">
                      <prop type="object" name="logRules" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules">
                        <prop type="array<object>" name="filteringTags" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags">
                          <item type="object">
                            <prop type="string" name="action" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].action">
                              <enum>
                                <item value="&quot;Exclude&quot;"/>
                                <item value="&quot;Include&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="name" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].name"/>
                            <prop type="string" name="value" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags[].value"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="sendAadLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendAadLogs"/>
                        <prop type="boolean" name="sendActivityLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendActivityLogs"/>
                        <prop type="boolean" name="sendSubscriptionLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendSubscriptionLogs"/>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="operation" arg="$body.properties.operation">
                  <enum>
                    <item value="&quot;Active&quot;"/>
                    <item value="&quot;AddBegin&quot;"/>
                    <item value="&quot;AddComplete&quot;"/>
                    <item value="&quot;DeleteBegin&quot;"/>
                    <item value="&quot;DeleteComplete&quot;"/>
                  </enum>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="MonitoredSubscriptions_CreateorUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="put">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@MonitoredSubscriptionProperties_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
