<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}/autoimportjobs" version="2025-07-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0vYXV0b0ltcG9ydEpvYnM=/V/MjAyNS0wNy0wMQ=="/>
  <commandGroup name="amlfs auto-import">
    <command name="list" version="2025-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}/autoimportjobs" version="2025-07-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0vYXV0b0ltcG9ydEpvYnM=/V/MjAyNS0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.amlFilesystemName" options="aml-filesystem-name" required="True" idPart="name">
          <help short="Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="autoImportJobs_ListByAmlFilesystem">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/autoImportJobs">
          <request method="get">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageCache/amlFilesystems/{}/autoImportJobs/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="adminStatus">
                          <default value="&quot;Enable&quot;"/>
                          <enum>
                            <item value="&quot;Disable&quot;"/>
                            <item value="&quot;Enable&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="autoImportPrefixes">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="conflictResolutionMode">
                          <default value="&quot;Skip&quot;"/>
                          <enum>
                            <item value="&quot;Fail&quot;"/>
                            <item value="&quot;OverwriteAlways&quot;"/>
                            <item value="&quot;OverwriteIfDirty&quot;"/>
                            <item value="&quot;Skip&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="enableDeletions">
                          <default value="false"/>
                        </prop>
                        <prop type="integer64" name="maximumErrors"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="object" name="status" clientFlatten="True">
                          <prop readOnly="True" type="object" name="blobSyncEvents">
                            <prop readOnly="True" type="integer64" name="deletions"/>
                            <prop readOnly="True" type="integer64" name="importedDirectories"/>
                            <prop readOnly="True" type="integer64" name="importedFiles"/>
                            <prop readOnly="True" type="integer64" name="importedSymlinks"/>
                            <prop readOnly="True" type="dateTime" name="lastChangeFeedEventConsumedTime">
                              <format protocol="iso"/>
                            </prop>
                            <prop readOnly="True" type="dateTime" name="lastTimeFullySynchronized">
                              <format protocol="iso"/>
                            </prop>
                            <prop readOnly="True" type="integer64" name="preexistingDirectories"/>
                            <prop readOnly="True" type="integer64" name="preexistingFiles"/>
                            <prop readOnly="True" type="integer64" name="preexistingSymlinks"/>
                            <prop readOnly="True" type="integer64" name="rateOfBlobImport"/>
                            <prop readOnly="True" type="integer64" name="totalBlobsImported"/>
                            <prop readOnly="True" type="integer64" name="totalConflicts"/>
                            <prop readOnly="True" type="integer64" name="totalErrors"/>
                          </prop>
                          <prop readOnly="True" type="integer64" name="importedDirectories"/>
                          <prop readOnly="True" type="integer64" name="importedFiles"/>
                          <prop readOnly="True" type="integer64" name="importedSymlinks"/>
                          <prop readOnly="True" type="dateTime" name="lastCompletionTimeUTC">
                            <format protocol="iso"/>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="lastStartedTimeUTC">
                            <format protocol="iso"/>
                          </prop>
                          <prop readOnly="True" type="integer64" name="preexistingDirectories"/>
                          <prop readOnly="True" type="integer64" name="preexistingFiles"/>
                          <prop readOnly="True" type="integer64" name="preexistingSymlinks"/>
                          <prop readOnly="True" type="integer64" name="rateOfBlobImport"/>
                          <prop readOnly="True" type="integer64" name="rateOfBlobWalk"/>
                          <prop readOnly="True" type="dateTime" name="scanEndTime">
                            <format protocol="iso"/>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="scanStartTime">
                            <format protocol="iso"/>
                          </prop>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Disabling&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="statusCode"/>
                          <prop readOnly="True" type="string" name="statusMessage"/>
                          <prop readOnly="True" type="integer64" name="totalBlobsImported"/>
                          <prop readOnly="True" type="integer64" name="totalBlobsWalked"/>
                          <prop readOnly="True" type="integer64" name="totalConflicts"/>
                          <prop readOnly="True" type="integer64" name="totalErrors"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt">
                          <format protocol="iso"/>
                        </prop>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt">
                          <format protocol="iso"/>
                        </prop>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
