<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.notificationhubs/checknamespaceavailability" version="2017-04-01" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5vdGlmaWNhdGlvbkh1YnMvY2hlY2tOYW1lc3BhY2VBdmFpbGFiaWxpdHk=/V/MjAxNy0wNC0wMQ=="/>
  <commandGroup name="notification-hub namespace">
    <command name="check-availability" version="2017-04-01" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.notificationhubs/checknamespaceavailability" version="2017-04-01" swagger="mgmt-plane/notificationhubs/ResourceProviders/Microsoft.NotificationHubs/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5vdGlmaWNhdGlvbkh1YnMvY2hlY2tOYW1lc3BhY2VBdmFpbGFiaWxpdHk=/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="boolean" var="$parameters.isAvailiable" options="is-availiable" hide="True" group="Parameters">
          <help short="True if the name is available and can be used to create new Namespace/NotificationHub. Otherwise false."/>
        </arg>
        <arg type="string" var="$parameters.location" options="location" hide="True" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg type="string" var="$parameters.name" options="name n" required="True" group="Parameters">
          <help short="Resource name"/>
        </arg>
        <arg type="object" var="$parameters.sku" options="sku" hide="True" group="Parameters">
          <help short="The sku of the created namespace"/>
          <arg type="integer" var="$parameters.sku.capacity" options="capacity" hide="True" group="Sku">
            <help short="The capacity of the resource"/>
          </arg>
          <arg type="string" var="$parameters.sku.family" options="family" hide="True" group="Sku">
            <help short="The Sku Family"/>
          </arg>
          <arg type="string" var="$parameters.sku.name" options="name" required="True">
            <help short="Name of the notification hub sku"/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Free" value="&quot;Free&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.sku.size" options="size" hide="True" group="Sku">
            <help short="The Sku size"/>
          </arg>
          <arg type="string" var="$parameters.sku.tier" options="tier" hide="True" group="Sku">
            <help short="The tier of particular sku"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" hide="True" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Namespaces_CheckAvailability">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.NotificationHubs/checkNamespaceAvailability">
          <request method="post">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="boolean" name="isAvailiable" arg="$parameters.isAvailiable"/>
                  <prop type="string" name="location" arg="$parameters.location"/>
                  <prop type="string" name="name" arg="$parameters.name" required="True"/>
                  <prop type="object" name="sku" arg="$parameters.sku">
                    <prop type="integer" name="capacity" arg="$parameters.sku.capacity"/>
                    <prop type="string" name="family" arg="$parameters.sku.family"/>
                    <prop type="string" name="name" arg="$parameters.sku.name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="size" arg="$parameters.sku.size"/>
                    <prop type="string" name="tier" arg="$parameters.sku.tier"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="id"/>
                  <prop type="boolean" name="isAvailiable"/>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="sku">
                    <prop type="integer" name="capacity"/>
                    <prop type="string" name="family"/>
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Free&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="size"/>
                    <prop type="string" name="tier"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
