<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.confluent/organizations/{}/environments/{}/clusters/{}" version="2024-07-01" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uZmx1ZW50L29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnRJZH0vY2x1c3RlcnMve2NsdXN0ZXJJZH0=/V/MjAyNC0wNy0wMQ=="/>
  <commandGroup name="confluent organization environment cluster">
    <command name="delete" version="2024-07-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.confluent/organizations/{}/environments/{}/clusters/{}" version="2024-07-01" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uZmx1ZW50L29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnRJZH0vY2x1c3RlcnMve2NsdXN0ZXJJZH0=/V/MjAyNC0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterId" options="cluster-id name n" required="True" idPart="child_name_2">
          <help short="Confluent kafka or schema registry cluster id"/>
        </arg>
        <arg type="string" var="$Path.environmentId" options="environment-id" required="True" group="" idPart="child_name_1">
          <help short="Confluent environment ID."/>
        </arg>
        <arg type="string" var="$Path.organizationName" options="organization-name" required="True" idPart="name">
          <help short="Organization resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Resource group."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Subscription ID."/>
        </arg>
      </argGroup>
      <operation operationId="Cluster_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}">
          <request method="delete">
            <path>
              <param type="string" name="clusterId" arg="$Path.clusterId" required="True"/>
              <param type="string" name="environmentId" arg="$Path.environmentId" required="True"/>
              <param type="string" name="organizationName" arg="$Path.organizationName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.confluent/organizations/{}/environments/{}/clusters/{}" version="2024-07-01" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uZmx1ZW50L29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnRJZH0vY2x1c3RlcnMve2NsdXN0ZXJJZH0=/V/MjAyNC0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterId" options="cluster-id name n" required="True" idPart="child_name_2">
          <help short="Confluent kafka or schema registry cluster id"/>
        </arg>
        <arg type="string" var="$Path.environmentId" options="environment-id" required="True" group="" idPart="child_name_1">
          <help short="Confluent environment ID."/>
        </arg>
        <arg type="string" var="$Path.organizationName" options="organization-name" required="True" idPart="name">
          <help short="Organization resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Resource group."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Subscription ID."/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceId" var="$body.id" options="id" hide="True" group="Body">
          <help short="Id of the cluster"/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}/environments/{}/clusters/{}"/>
        </arg>
        <arg type="string" var="$body.kind" options="kind" group="Body">
          <help short="Type of cluster"/>
        </arg>
        <arg type="string" var="$body.type" options="type" group="Body">
          <help short="Type of the resource"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$body.properties.metadata" options="metadata" group="Properties">
          <help short="Metadata of the record"/>
          <arg type="string" var="$body.properties.metadata.createdTimestamp" options="created-timestamp">
            <help short="Created Date Time"/>
          </arg>
          <arg type="string" var="$body.properties.metadata.deletedTimestamp" options="deleted-timestamp">
            <help short="Deleted Date time"/>
          </arg>
          <arg type="string" var="$body.properties.metadata.resourceName" options="resource-name">
            <help short="Resource name of the record"/>
          </arg>
          <arg type="string" var="$body.properties.metadata.self" options="self">
            <help short="Self lookup url"/>
          </arg>
          <arg type="string" var="$body.properties.metadata.updatedTimestamp" options="updated-timestamp">
            <help short="Updated Date time"/>
          </arg>
        </arg>
        <arg type="object" var="$body.properties.spec" options="spec" group="Properties">
          <help short="Specification of the cluster"/>
          <arg type="string" var="$body.properties.spec.apiEndpoint" options="api-endpoint">
            <help short="The Kafka API cluster endpoint"/>
          </arg>
          <arg type="string" var="$body.properties.spec.availability" options="availability">
            <help short="The availability zone configuration of the cluster"/>
          </arg>
          <arg type="object" var="$body.properties.spec.byok" options="byok">
            <help short="Specification of the cluster byok"/>
            <arg type="string" var="$body.properties.spec.byok.id" options="id">
              <help short="ID of the referred resource"/>
            </arg>
            <arg type="string" var="$body.properties.spec.byok.related" options="related">
              <help short="API URL for accessing or modifying the referred object"/>
            </arg>
            <arg type="string" var="$body.properties.spec.byok.resourceName" options="resource-name">
              <help short="CRN reference to the referred resource"/>
            </arg>
          </arg>
          <arg type="string" var="$body.properties.spec.cloud" options="cloud">
            <help short="The cloud service provider "/>
          </arg>
          <arg type="object" var="$body.properties.spec.config" options="config">
            <help short="Specification of the cluster configuration"/>
            <arg type="string" var="$body.properties.spec.config.kind" options="kind">
              <help short="The lifecycle phase of the cluster"/>
            </arg>
          </arg>
          <arg type="object" var="$body.properties.spec.environment" options="environment" cls="SCClusterNetworkEnvironmentEntity_create">
            <help short="Specification of the cluster environment"/>
            <arg type="string" var="@SCClusterNetworkEnvironmentEntity_create.environment" options="environment">
              <help short="Environment of the referred resource"/>
            </arg>
            <arg type="string" var="@SCClusterNetworkEnvironmentEntity_create.id" options="id">
              <help short="ID of the referred resource"/>
            </arg>
            <arg type="string" var="@SCClusterNetworkEnvironmentEntity_create.related" options="related">
              <help short="API URL for accessing or modifying the referred object"/>
            </arg>
            <arg type="string" var="@SCClusterNetworkEnvironmentEntity_create.resourceName" options="resource-name">
              <help short="CRN reference to the referred resource"/>
            </arg>
          </arg>
          <arg type="string" var="$body.properties.spec.httpEndpoint" options="http-endpoint">
            <help short="The cluster HTTP request URL."/>
          </arg>
          <arg type="string" var="$body.properties.spec.kafkaBootstrapEndpoint" options="kafka-bootstrap-endpoint">
            <help short="The bootstrap endpoint used by Kafka clients to connect to the cluster"/>
          </arg>
          <arg type="string" var="$body.properties.spec.name" options="name">
            <help short="The name of the cluster"/>
          </arg>
          <arg type="@SCClusterNetworkEnvironmentEntity_create" var="$body.properties.spec.network" options="network">
            <help short="Specification of the cluster network"/>
          </arg>
          <arg type="string" var="$body.properties.spec.package" options="package">
            <help short="Stream governance configuration"/>
            <enum>
              <item name="ADVANCED" value="&quot;ADVANCED&quot;"/>
              <item name="ESSENTIALS" value="&quot;ESSENTIALS&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$body.properties.spec.region" options="region">
            <help short="The cloud service provider region"/>
          </arg>
          <arg type="string" var="$body.properties.spec.zone" options="zone">
            <help short="type of zone availability"/>
          </arg>
        </arg>
        <arg type="object" var="$body.properties.status" options="status" group="Properties">
          <help short="Specification of the cluster status"/>
          <arg type="integer32" var="$body.properties.status.cku" options="cku">
            <help short="The number of Confluent Kafka Units "/>
          </arg>
          <arg type="string" var="$body.properties.status.phase" options="phase">
            <help short="The lifecycle phase of the cluster"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Cluster_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}">
          <request method="put">
            <path>
              <param type="string" name="clusterId" arg="$Path.clusterId" required="True"/>
              <param type="string" name="environmentId" arg="$Path.environmentId" required="True"/>
              <param type="string" name="organizationName" arg="$Path.organizationName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$body.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}/environments/{}/clusters/{}"/>
                  </prop>
                  <prop type="string" name="kind" arg="$body.kind"/>
                  <prop type="string" name="name" arg="$Path.clusterId"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="metadata" arg="$body.properties.metadata">
                      <prop type="string" name="createdTimestamp" arg="$body.properties.metadata.createdTimestamp"/>
                      <prop type="string" name="deletedTimestamp" arg="$body.properties.metadata.deletedTimestamp"/>
                      <prop type="string" name="resourceName" arg="$body.properties.metadata.resourceName"/>
                      <prop type="string" name="self" arg="$body.properties.metadata.self"/>
                      <prop type="string" name="updatedTimestamp" arg="$body.properties.metadata.updatedTimestamp"/>
                    </prop>
                    <prop type="object" name="spec" arg="$body.properties.spec">
                      <prop type="string" name="apiEndpoint" arg="$body.properties.spec.apiEndpoint"/>
                      <prop type="string" name="availability" arg="$body.properties.spec.availability"/>
                      <prop type="object" name="byok" arg="$body.properties.spec.byok">
                        <prop type="string" name="id" arg="$body.properties.spec.byok.id"/>
                        <prop type="string" name="related" arg="$body.properties.spec.byok.related"/>
                        <prop type="string" name="resourceName" arg="$body.properties.spec.byok.resourceName"/>
                      </prop>
                      <prop type="string" name="cloud" arg="$body.properties.spec.cloud"/>
                      <prop type="object" name="config" arg="$body.properties.spec.config">
                        <prop type="string" name="kind" arg="$body.properties.spec.config.kind"/>
                      </prop>
                      <prop type="object" name="environment" arg="$body.properties.spec.environment" cls="SCClusterNetworkEnvironmentEntity_create">
                        <prop type="string" name="environment" arg="@SCClusterNetworkEnvironmentEntity_create.environment"/>
                        <prop type="string" name="id" arg="@SCClusterNetworkEnvironmentEntity_create.id"/>
                        <prop type="string" name="related" arg="@SCClusterNetworkEnvironmentEntity_create.related"/>
                        <prop type="string" name="resourceName" arg="@SCClusterNetworkEnvironmentEntity_create.resourceName"/>
                      </prop>
                      <prop type="string" name="httpEndpoint" arg="$body.properties.spec.httpEndpoint"/>
                      <prop type="string" name="kafkaBootstrapEndpoint" arg="$body.properties.spec.kafkaBootstrapEndpoint"/>
                      <prop type="string" name="name" arg="$body.properties.spec.name"/>
                      <prop type="@SCClusterNetworkEnvironmentEntity_create" name="network" arg="$body.properties.spec.network"/>
                      <prop type="string" name="package" arg="$body.properties.spec.package">
                        <enum>
                          <item value="&quot;ADVANCED&quot;"/>
                          <item value="&quot;ESSENTIALS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="region" arg="$body.properties.spec.region"/>
                      <prop type="string" name="zone" arg="$body.properties.spec.zone"/>
                    </prop>
                    <prop type="object" name="status" arg="$body.properties.status">
                      <prop type="integer32" name="cku" arg="$body.properties.status.cku"/>
                      <prop type="string" name="phase" arg="$body.properties.status.phase"/>
                    </prop>
                  </prop>
                  <prop type="string" name="type" arg="$body.type"/>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}/environments/{}/clusters/{}"/>
                  </prop>
                  <prop type="string" name="kind"/>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="metadata">
                      <prop type="string" name="createdTimestamp"/>
                      <prop type="string" name="deletedTimestamp"/>
                      <prop type="string" name="resourceName"/>
                      <prop type="string" name="self"/>
                      <prop type="string" name="updatedTimestamp"/>
                    </prop>
                    <prop type="object" name="spec">
                      <prop type="string" name="apiEndpoint"/>
                      <prop type="string" name="availability"/>
                      <prop type="object" name="byok">
                        <prop type="string" name="id"/>
                        <prop type="string" name="related"/>
                        <prop type="string" name="resourceName"/>
                      </prop>
                      <prop type="string" name="cloud"/>
                      <prop type="object" name="config">
                        <prop type="string" name="kind"/>
                      </prop>
                      <prop type="object" name="environment" cls="SCClusterNetworkEnvironmentEntity_read">
                        <prop type="string" name="environment"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="related"/>
                        <prop type="string" name="resourceName"/>
                      </prop>
                      <prop type="string" name="httpEndpoint"/>
                      <prop type="string" name="kafkaBootstrapEndpoint"/>
                      <prop type="string" name="name"/>
                      <prop type="@SCClusterNetworkEnvironmentEntity_read" name="network"/>
                      <prop type="string" name="package">
                        <enum>
                          <item value="&quot;ADVANCED&quot;"/>
                          <item value="&quot;ESSENTIALS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="region"/>
                      <prop type="string" name="zone"/>
                    </prop>
                    <prop type="object" name="status">
                      <prop type="integer32" name="cku"/>
                      <prop type="string" name="phase"/>
                    </prop>
                  </prop>
                  <prop type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.confluent/organizations/{}/environments/{}/clusters/{}" version="2024-07-01" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uZmx1ZW50L29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnRJZH0vY2x1c3RlcnMve2NsdXN0ZXJJZH0=/V/MjAyNC0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterId" options="cluster-id name n" required="True" idPart="child_name_2">
          <help short="Confluent kafka or schema registry cluster id"/>
        </arg>
        <arg type="string" var="$Path.environmentId" options="environment-id" required="True" group="" idPart="child_name_1">
          <help short="Confluent environment ID."/>
        </arg>
        <arg type="string" var="$Path.organizationName" options="organization-name" required="True" idPart="name">
          <help short="Organization resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Resource group."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Subscription ID."/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="ResourceId" var="$body.id" options="id" hide="True" group="Body">
          <help short="Id of the cluster"/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}/environments/{}/clusters/{}"/>
        </arg>
        <arg nullable="True" type="string" var="$body.kind" options="kind" group="Body">
          <help short="Type of cluster"/>
        </arg>
        <arg nullable="True" type="string" var="$body.type" options="type" group="Body">
          <help short="Type of the resource"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$body.properties.metadata" options="metadata" group="Properties">
          <help short="Metadata of the record"/>
          <arg nullable="True" type="string" var="$body.properties.metadata.createdTimestamp" options="created-timestamp">
            <help short="Created Date Time"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.metadata.deletedTimestamp" options="deleted-timestamp">
            <help short="Deleted Date time"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.metadata.resourceName" options="resource-name">
            <help short="Resource name of the record"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.metadata.self" options="self">
            <help short="Self lookup url"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.metadata.updatedTimestamp" options="updated-timestamp">
            <help short="Updated Date time"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.spec" options="spec" group="Properties">
          <help short="Specification of the cluster"/>
          <arg nullable="True" type="string" var="$body.properties.spec.apiEndpoint" options="api-endpoint">
            <help short="The Kafka API cluster endpoint"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.spec.availability" options="availability">
            <help short="The availability zone configuration of the cluster"/>
          </arg>
          <arg nullable="True" type="object" var="$body.properties.spec.byok" options="byok">
            <help short="Specification of the cluster byok"/>
            <arg nullable="True" type="string" var="$body.properties.spec.byok.id" options="id">
              <help short="ID of the referred resource"/>
            </arg>
            <arg nullable="True" type="string" var="$body.properties.spec.byok.related" options="related">
              <help short="API URL for accessing or modifying the referred object"/>
            </arg>
            <arg nullable="True" type="string" var="$body.properties.spec.byok.resourceName" options="resource-name">
              <help short="CRN reference to the referred resource"/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.spec.cloud" options="cloud">
            <help short="The cloud service provider "/>
          </arg>
          <arg nullable="True" type="object" var="$body.properties.spec.config" options="config">
            <help short="Specification of the cluster configuration"/>
            <arg nullable="True" type="string" var="$body.properties.spec.config.kind" options="kind">
              <help short="The lifecycle phase of the cluster"/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$body.properties.spec.environment" options="environment" cls="SCClusterNetworkEnvironmentEntity_update">
            <help short="Specification of the cluster environment"/>
            <arg nullable="True" type="string" var="@SCClusterNetworkEnvironmentEntity_update.environment" options="environment">
              <help short="Environment of the referred resource"/>
            </arg>
            <arg nullable="True" type="string" var="@SCClusterNetworkEnvironmentEntity_update.id" options="id">
              <help short="ID of the referred resource"/>
            </arg>
            <arg nullable="True" type="string" var="@SCClusterNetworkEnvironmentEntity_update.related" options="related">
              <help short="API URL for accessing or modifying the referred object"/>
            </arg>
            <arg nullable="True" type="string" var="@SCClusterNetworkEnvironmentEntity_update.resourceName" options="resource-name">
              <help short="CRN reference to the referred resource"/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.spec.httpEndpoint" options="http-endpoint">
            <help short="The cluster HTTP request URL."/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.spec.kafkaBootstrapEndpoint" options="kafka-bootstrap-endpoint">
            <help short="The bootstrap endpoint used by Kafka clients to connect to the cluster"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.spec.name" options="name">
            <help short="The name of the cluster"/>
          </arg>
          <arg nullable="True" type="@SCClusterNetworkEnvironmentEntity_update" var="$body.properties.spec.network" options="network">
            <help short="Specification of the cluster network"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.spec.package" options="package">
            <help short="Stream governance configuration"/>
            <enum>
              <item name="ADVANCED" value="&quot;ADVANCED&quot;"/>
              <item name="ESSENTIALS" value="&quot;ESSENTIALS&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.spec.region" options="region">
            <help short="The cloud service provider region"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.spec.zone" options="zone">
            <help short="type of zone availability"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.status" options="status" group="Properties">
          <help short="Specification of the cluster status"/>
          <arg nullable="True" type="integer32" var="$body.properties.status.cku" options="cku">
            <help short="The number of Confluent Kafka Units "/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.status.phase" options="phase">
            <help short="The lifecycle phase of the cluster"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Organization_GetClusterById">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}">
          <request method="get">
            <path>
              <param type="string" name="clusterId" arg="$Path.clusterId" required="True"/>
              <param type="string" name="environmentId" arg="$Path.environmentId" required="True"/>
              <param type="string" name="organizationName" arg="$Path.organizationName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="SCClusterRecord_read">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}/environments/{}/clusters/{}"/>
                  </prop>
                  <prop type="string" name="kind"/>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="metadata">
                      <prop type="string" name="createdTimestamp"/>
                      <prop type="string" name="deletedTimestamp"/>
                      <prop type="string" name="resourceName"/>
                      <prop type="string" name="self"/>
                      <prop type="string" name="updatedTimestamp"/>
                    </prop>
                    <prop type="object" name="spec">
                      <prop type="string" name="apiEndpoint"/>
                      <prop type="string" name="availability"/>
                      <prop type="object" name="byok">
                        <prop type="string" name="id"/>
                        <prop type="string" name="related"/>
                        <prop type="string" name="resourceName"/>
                      </prop>
                      <prop type="string" name="cloud"/>
                      <prop type="object" name="config">
                        <prop type="string" name="kind"/>
                      </prop>
                      <prop type="object" name="environment" cls="SCClusterNetworkEnvironmentEntity_read">
                        <prop type="string" name="environment"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="related"/>
                        <prop type="string" name="resourceName"/>
                      </prop>
                      <prop type="string" name="httpEndpoint"/>
                      <prop type="string" name="kafkaBootstrapEndpoint"/>
                      <prop type="string" name="name"/>
                      <prop type="@SCClusterNetworkEnvironmentEntity_read" name="network"/>
                      <prop type="string" name="package">
                        <enum>
                          <item value="&quot;ADVANCED&quot;"/>
                          <item value="&quot;ESSENTIALS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="region"/>
                      <prop type="string" name="zone"/>
                    </prop>
                    <prop type="object" name="status">
                      <prop type="integer32" name="cku"/>
                      <prop type="string" name="phase"/>
                    </prop>
                  </prop>
                  <prop type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$body.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}/environments/{}/clusters/{}"/>
              </prop>
              <prop type="string" name="kind" arg="$body.kind"/>
              <prop type="string" name="name" arg="$Path.clusterId"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="metadata" arg="$body.properties.metadata">
                  <prop type="string" name="createdTimestamp" arg="$body.properties.metadata.createdTimestamp"/>
                  <prop type="string" name="deletedTimestamp" arg="$body.properties.metadata.deletedTimestamp"/>
                  <prop type="string" name="resourceName" arg="$body.properties.metadata.resourceName"/>
                  <prop type="string" name="self" arg="$body.properties.metadata.self"/>
                  <prop type="string" name="updatedTimestamp" arg="$body.properties.metadata.updatedTimestamp"/>
                </prop>
                <prop type="object" name="spec" arg="$body.properties.spec">
                  <prop type="string" name="apiEndpoint" arg="$body.properties.spec.apiEndpoint"/>
                  <prop type="string" name="availability" arg="$body.properties.spec.availability"/>
                  <prop type="object" name="byok" arg="$body.properties.spec.byok">
                    <prop type="string" name="id" arg="$body.properties.spec.byok.id"/>
                    <prop type="string" name="related" arg="$body.properties.spec.byok.related"/>
                    <prop type="string" name="resourceName" arg="$body.properties.spec.byok.resourceName"/>
                  </prop>
                  <prop type="string" name="cloud" arg="$body.properties.spec.cloud"/>
                  <prop type="object" name="config" arg="$body.properties.spec.config">
                    <prop type="string" name="kind" arg="$body.properties.spec.config.kind"/>
                  </prop>
                  <prop type="object" name="environment" arg="$body.properties.spec.environment" cls="SCClusterNetworkEnvironmentEntity_update">
                    <prop type="string" name="environment" arg="@SCClusterNetworkEnvironmentEntity_update.environment"/>
                    <prop type="string" name="id" arg="@SCClusterNetworkEnvironmentEntity_update.id"/>
                    <prop type="string" name="related" arg="@SCClusterNetworkEnvironmentEntity_update.related"/>
                    <prop type="string" name="resourceName" arg="@SCClusterNetworkEnvironmentEntity_update.resourceName"/>
                  </prop>
                  <prop type="string" name="httpEndpoint" arg="$body.properties.spec.httpEndpoint"/>
                  <prop type="string" name="kafkaBootstrapEndpoint" arg="$body.properties.spec.kafkaBootstrapEndpoint"/>
                  <prop type="string" name="name" arg="$body.properties.spec.name"/>
                  <prop type="@SCClusterNetworkEnvironmentEntity_update" name="network" arg="$body.properties.spec.network"/>
                  <prop type="string" name="package" arg="$body.properties.spec.package">
                    <enum>
                      <item value="&quot;ADVANCED&quot;"/>
                      <item value="&quot;ESSENTIALS&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="region" arg="$body.properties.spec.region"/>
                  <prop type="string" name="zone" arg="$body.properties.spec.zone"/>
                </prop>
                <prop type="object" name="status" arg="$body.properties.status">
                  <prop type="integer32" name="cku" arg="$body.properties.status.cku"/>
                  <prop type="string" name="phase" arg="$body.properties.status.phase"/>
                </prop>
              </prop>
              <prop type="string" name="type" arg="$body.type"/>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Cluster_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}">
          <request method="put">
            <path>
              <param type="string" name="clusterId" arg="$Path.clusterId" required="True"/>
              <param type="string" name="environmentId" arg="$Path.environmentId" required="True"/>
              <param type="string" name="organizationName" arg="$Path.organizationName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@SCClusterRecord_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="show" version="2024-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.confluent/organizations/{}/environments/{}/clusters/{}" version="2024-07-01" swagger="mgmt-plane/confluent/ResourceProviders/Microsoft.Confluent/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uZmx1ZW50L29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L2Vudmlyb25tZW50cy97ZW52aXJvbm1lbnRJZH0vY2x1c3RlcnMve2NsdXN0ZXJJZH0=/V/MjAyNC0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterId" options="cluster-id" required="True" group="" idPart="child_name_2">
          <help short="Confluent kafka or schema registry cluster id prefixed with lkc or lks"/>
        </arg>
        <arg type="string" var="$Path.environmentId" options="environment-id" required="True" group="" idPart="child_name_1">
          <help short="Confluent environment ID."/>
        </arg>
        <arg type="string" var="$Path.organizationName" options="organization-name" required="True" idPart="name">
          <help short="Organization resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Resource group."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Subscription ID."/>
        </arg>
      </argGroup>
      <operation operationId="Organization_GetClusterById">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Confluent/organizations/{organizationName}/environments/{environmentId}/clusters/{clusterId}">
          <request method="get">
            <path>
              <param type="string" name="clusterId" arg="$Path.clusterId" required="True"/>
              <param type="string" name="environmentId" arg="$Path.environmentId" required="True"/>
              <param type="string" name="organizationName" arg="$Path.organizationName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Confluent/organizations/{}/environments/{}/clusters/{}"/>
                  </prop>
                  <prop type="string" name="kind"/>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="metadata">
                      <prop type="string" name="createdTimestamp"/>
                      <prop type="string" name="deletedTimestamp"/>
                      <prop type="string" name="resourceName"/>
                      <prop type="string" name="self"/>
                      <prop type="string" name="updatedTimestamp"/>
                    </prop>
                    <prop type="object" name="spec">
                      <prop type="string" name="apiEndpoint"/>
                      <prop type="string" name="availability"/>
                      <prop type="object" name="byok">
                        <prop type="string" name="id"/>
                        <prop type="string" name="related"/>
                        <prop type="string" name="resourceName"/>
                      </prop>
                      <prop type="string" name="cloud"/>
                      <prop type="object" name="config">
                        <prop type="string" name="kind"/>
                      </prop>
                      <prop type="object" name="environment" cls="SCClusterNetworkEnvironmentEntity_read">
                        <prop type="string" name="environment"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="related"/>
                        <prop type="string" name="resourceName"/>
                      </prop>
                      <prop type="string" name="httpEndpoint"/>
                      <prop type="string" name="kafkaBootstrapEndpoint"/>
                      <prop type="string" name="name"/>
                      <prop type="@SCClusterNetworkEnvironmentEntity_read" name="network"/>
                      <prop type="string" name="package">
                        <enum>
                          <item value="&quot;ADVANCED&quot;"/>
                          <item value="&quot;ESSENTIALS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="region"/>
                      <prop type="string" name="zone"/>
                    </prop>
                    <prop type="object" name="status">
                      <prop type="integer32" name="cku"/>
                      <prop type="string" name="phase"/>
                    </prop>
                  </prop>
                  <prop type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
