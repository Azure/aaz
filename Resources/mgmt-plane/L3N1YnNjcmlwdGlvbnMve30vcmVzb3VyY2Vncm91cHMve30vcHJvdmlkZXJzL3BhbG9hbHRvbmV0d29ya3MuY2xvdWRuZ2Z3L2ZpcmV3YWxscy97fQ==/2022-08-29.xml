<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/paloaltonetworks.cloudngfw/firewalls/{}" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QYWxvQWx0b05ldHdvcmtzLkNsb3Vkbmdmdy9maXJld2FsbHMve2ZpcmV3YWxsTmFtZX0=/V/MjAyMi0wOC0yOQ=="/>
  <commandGroup name="palo-alto cloudngfw firewall">
    <command name="show" version="2022-08-29">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/paloaltonetworks.cloudngfw/firewalls/{}" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QYWxvQWx0b05ldHdvcmtzLkNsb3Vkbmdmdy9maXJld2FsbHMve2ZpcmV3YWxsTmFtZX0=/V/MjAyMi0wOC0yOQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firewallName" options="firewall-name name n" required="True" idPart="name">
          <help short="Firewall resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Firewalls_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{firewallName}">
          <request method="get">
            <path>
              <param type="string" name="firewallName" arg="$Path.firewallName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-29&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="associatedRulestack">
                      <prop type="string" name="location"/>
                      <prop type="string" name="resourceId"/>
                      <prop type="string" name="rulestackId"/>
                    </prop>
                    <prop type="object" name="dnsSettings" required="True">
                      <prop type="array<@IPAddress_read>" name="dnsServers">
                        <item type="@IPAddress_read"/>
                      </prop>
                      <prop type="string" name="enableDnsProxy">
                        <enum>
                          <item value="&quot;DISABLED&quot;"/>
                          <item value="&quot;ENABLED&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enabledDnsType">
                        <enum>
                          <item value="&quot;AZURE&quot;"/>
                          <item value="&quot;CUSTOM&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="frontEndSettings">
                      <item type="object">
                        <prop type="@EndpointConfiguration_read" name="backendConfiguration" required="True"/>
                        <prop type="object" name="frontendConfiguration" required="True" cls="EndpointConfiguration_read">
                          <prop type="@IPAddress_read" name="address" required="True"/>
                          <prop type="string" name="port" required="True"/>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="protocol" required="True">
                          <enum>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="isPanoramaManaged">
                      <enum>
                        <item value="&quot;FALSE&quot;"/>
                        <item value="&quot;TRUE&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="marketplaceDetails" required="True">
                      <prop readOnly="True" type="string" name="marketplaceSubscriptionId"/>
                      <prop type="string" name="marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;FulfillmentRequested&quot;"/>
                          <item value="&quot;NotStarted&quot;"/>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" required="True"/>
                      <prop type="string" name="publisherId" required="True"/>
                    </prop>
                    <prop type="object" name="networkProfile" required="True">
                      <prop type="array<@IPAddress_read>" name="egressNatIp">
                        <item type="@IPAddress_read"/>
                      </prop>
                      <prop type="string" name="enableEgressNat" required="True">
                        <enum>
                          <item value="&quot;DISABLED&quot;"/>
                          <item value="&quot;ENABLED&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkType" required="True">
                        <enum>
                          <item value="&quot;VNET&quot;"/>
                          <item value="&quot;VWAN&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<@IPAddress_read>" name="publicIps" required="True">
                        <item type="@IPAddress_read"/>
                      </prop>
                      <prop type="object" name="vnetConfiguration">
                        <prop type="object" name="ipOfTrustSubnetForUdr" cls="IPAddress_read">
                          <prop type="string" name="address"/>
                          <prop type="string" name="resourceId"/>
                        </prop>
                        <prop type="@IPAddressSpace_read" name="trustSubnet" required="True"/>
                        <prop type="@IPAddressSpace_read" name="unTrustSubnet" required="True"/>
                        <prop type="object" name="vnet" required="True" cls="IPAddressSpace_read">
                          <prop type="string" name="addressSpace"/>
                          <prop type="string" name="resourceId"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vwanConfiguration">
                        <prop type="@IPAddress_read" name="ipOfTrustSubnetForUdr"/>
                        <prop type="string" name="networkVirtualApplianceId"/>
                        <prop type="@IPAddressSpace_read" name="trustSubnet"/>
                        <prop type="@IPAddressSpace_read" name="unTrustSubnet"/>
                        <prop type="@IPAddressSpace_read" name="vHub" required="True"/>
                      </prop>
                    </prop>
                    <prop type="string" name="panEtag"/>
                    <prop type="object" name="panoramaConfig">
                      <prop readOnly="True" type="string" name="cgName"/>
                      <prop type="string" name="configString" required="True"/>
                      <prop readOnly="True" type="string" name="dgName"/>
                      <prop readOnly="True" type="string" name="hostName"/>
                      <prop readOnly="True" type="string" name="panoramaServer"/>
                      <prop readOnly="True" type="string" name="panoramaServer2"/>
                      <prop readOnly="True" type="string" name="tplName"/>
                      <prop readOnly="True" type="string" name="vmAuthKey"/>
                    </prop>
                    <prop type="object" name="planData" required="True">
                      <prop type="string" name="billingCycle" required="True">
                        <enum>
                          <item value="&quot;MONTHLY&quot;"/>
                          <item value="&quot;WEEKLY&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="effectiveDate"/>
                      <prop type="string" name="planId" required="True">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="usageType">
                        <enum>
                          <item value="&quot;COMMITTED&quot;"/>
                          <item value="&quot;PAYG&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-08-29" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/paloaltonetworks.cloudngfw/firewalls/{}" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QYWxvQWx0b05ldHdvcmtzLkNsb3Vkbmdmdy9maXJld2FsbHMve2ZpcmV3YWxsTmFtZX0=/V/MjAyMi0wOC0yOQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firewallName" options="firewall-name name n" required="True" idPart="name">
          <help short="Firewall resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Firewalls_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{firewallName}">
          <request method="delete">
            <path>
              <param type="string" name="firewallName" arg="$Path.firewallName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-29&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-08-29">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/paloaltonetworks.cloudngfw/firewalls/{}" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QYWxvQWx0b05ldHdvcmtzLkNsb3Vkbmdmdy9maXJld2FsbHMve2ZpcmV3YWxsTmFtZX0=/V/MjAyMi0wOC0yOQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firewallName" options="firewall-name name n" required="True" idPart="name">
          <help short="Firewall resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$resource.properties.associatedRulestack" options="associated-rulestack" group="Properties">
          <help short="Associated Rulestack"/>
          <arg type="string" var="$resource.properties.associatedRulestack.location" options="location">
            <help short="Rulestack location"/>
          </arg>
          <arg type="string" var="$resource.properties.associatedRulestack.resourceId" options="resource-id">
            <help short="Resource Id"/>
          </arg>
          <arg type="string" var="$resource.properties.associatedRulestack.rulestackId" options="rulestack-id">
            <help short="Associated rulestack Id"/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.dnsSettings" options="dns-settings" required="True" group="Properties">
          <help short="DNS settings for Firewall"/>
          <arg type="array<@IPAddress_create>" var="$resource.properties.dnsSettings.dnsServers" options="dns-servers">
            <help short="List of IPs associated with the Firewall"/>
            <item type="@IPAddress_create"/>
          </arg>
          <arg type="string" var="$resource.properties.dnsSettings.enableDnsProxy" options="enable-dns-proxy">
            <help short="Enable DNS proxy, disabled by default"/>
            <enum>
              <item name="DISABLED" value="&quot;DISABLED&quot;"/>
              <item name="ENABLED" value="&quot;ENABLED&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$resource.properties.dnsSettings.enabledDnsType" options="enabled-dns-type">
            <help short="Enabled DNS proxy type, disabled by default"/>
            <enum>
              <item name="AZURE" value="&quot;AZURE&quot;"/>
              <item name="CUSTOM" value="&quot;CUSTOM&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="array<object>" var="$resource.properties.frontEndSettings" options="front-end-settings" group="Properties">
          <help short="Frontend settings for Firewall"/>
          <item type="object">
            <arg type="@EndpointConfiguration_create" var="$resource.properties.frontEndSettings[].backendConfiguration" options="backend-configuration" required="True">
              <help short="Backend configurations"/>
            </arg>
            <arg type="object" var="$resource.properties.frontEndSettings[].frontendConfiguration" options="frontend-configuration" required="True" cls="EndpointConfiguration_create">
              <help short="Frontend configurations"/>
              <arg type="@IPAddress_create" var="@EndpointConfiguration_create.address" options="address" required="True">
                <help short="Address Space"/>
              </arg>
              <arg type="string" var="@EndpointConfiguration_create.port" options="port" required="True">
                <help short="port ID"/>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.frontEndSettings[].name" options="name" required="True">
              <help short="Settings name"/>
            </arg>
            <arg type="string" var="$resource.properties.frontEndSettings[].protocol" options="protocol" required="True">
              <help short="Protocol Type"/>
              <enum>
                <item name="TCP" value="&quot;TCP&quot;"/>
                <item name="UDP" value="&quot;UDP&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.isPanoramaManaged" options="is-panorama-managed" group="Properties">
          <help short="Panorama Managed: Default is False. Default will be CloudSec managed"/>
          <enum>
            <item name="FALSE" value="&quot;FALSE&quot;"/>
            <item name="TRUE" value="&quot;TRUE&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$resource.properties.marketplaceDetails" options="marketplace-details" required="True" group="Properties">
          <help short="Marketplace details"/>
          <arg type="string" var="$resource.properties.marketplaceDetails.marketplaceSubscriptionStatus" options="marketplace-subscription-status">
            <help short="Marketplace Subscription Status"/>
            <enum>
              <item name="FulfillmentRequested" value="&quot;FulfillmentRequested&quot;"/>
              <item name="NotStarted" value="&quot;NotStarted&quot;"/>
              <item name="PendingFulfillmentStart" value="&quot;PendingFulfillmentStart&quot;"/>
              <item name="Subscribed" value="&quot;Subscribed&quot;"/>
              <item name="Suspended" value="&quot;Suspended&quot;"/>
              <item name="Unsubscribed" value="&quot;Unsubscribed&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.offerId" options="offer-id" required="True">
            <help short="Offer Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.publisherId" options="publisher-id" required="True">
            <help short="Publisher Id"/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.networkProfile" options="network-profile" required="True" group="Properties">
          <help short="Network settings"/>
          <arg type="array<@IPAddress_create>" var="$resource.properties.networkProfile.egressNatIp" options="egress-nat-ip">
            <help short="Egress nat IP to use"/>
            <item type="@IPAddress_create"/>
          </arg>
          <arg type="string" var="$resource.properties.networkProfile.enableEgressNat" options="enable-egress-nat" required="True">
            <help short="Enable egress NAT, enabled by default"/>
            <enum>
              <item name="DISABLED" value="&quot;DISABLED&quot;"/>
              <item name="ENABLED" value="&quot;ENABLED&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$resource.properties.networkProfile.networkType" options="network-type" required="True">
            <help short="vnet or vwan, cannot be updated"/>
            <enum>
              <item name="VNET" value="&quot;VNET&quot;"/>
              <item name="VWAN" value="&quot;VWAN&quot;"/>
            </enum>
          </arg>
          <arg type="array<@IPAddress_create>" var="$resource.properties.networkProfile.publicIps" options="public-ips" required="True">
            <help short="List of IPs associated with the Firewall"/>
            <item type="@IPAddress_create"/>
          </arg>
          <arg type="object" var="$resource.properties.networkProfile.vnetConfiguration" options="vnet-configuration">
            <help short="Vnet configurations"/>
            <arg type="object" var="$resource.properties.networkProfile.vnetConfiguration.ipOfTrustSubnetForUdr" options="ip-of-trust-subnet-for-udr" cls="IPAddress_create">
              <help short="IP of trust subnet for UDR"/>
              <arg type="string" var="@IPAddress_create.address" options="address">
                <help short="Address value"/>
              </arg>
              <arg type="string" var="@IPAddress_create.resourceId" options="resource-id">
                <help short="Resource Id"/>
              </arg>
            </arg>
            <arg type="@IPAddressSpace_create" var="$resource.properties.networkProfile.vnetConfiguration.trustSubnet" options="trust-subnet" required="True">
              <help short="Trust Subnet"/>
            </arg>
            <arg type="@IPAddressSpace_create" var="$resource.properties.networkProfile.vnetConfiguration.unTrustSubnet" options="un-trust-subnet" required="True">
              <help short="Untrust Subnet"/>
            </arg>
            <arg type="object" var="$resource.properties.networkProfile.vnetConfiguration.vnet" options="vnet" required="True" cls="IPAddressSpace_create">
              <help short="Azure Virtual Network"/>
              <arg type="string" var="@IPAddressSpace_create.addressSpace" options="address-space">
                <help short="Address Space"/>
              </arg>
              <arg type="string" var="@IPAddressSpace_create.resourceId" options="resource-id">
                <help short="Resource Id"/>
              </arg>
            </arg>
          </arg>
          <arg type="object" var="$resource.properties.networkProfile.vwanConfiguration" options="vwan-configuration">
            <help short="Vwan configurations"/>
            <arg type="@IPAddress_create" var="$resource.properties.networkProfile.vwanConfiguration.ipOfTrustSubnetForUdr" options="ip-of-trust-subnet-for-udr">
              <help short="IP of trust subnet for UDR"/>
            </arg>
            <arg type="string" var="$resource.properties.networkProfile.vwanConfiguration.networkVirtualApplianceId" options="network-virtual-appliance-id">
              <help short="Network Virtual Appliance resource ID "/>
            </arg>
            <arg type="@IPAddressSpace_create" var="$resource.properties.networkProfile.vwanConfiguration.trustSubnet" options="trust-subnet">
              <help short="Trust Subnet"/>
            </arg>
            <arg type="@IPAddressSpace_create" var="$resource.properties.networkProfile.vwanConfiguration.unTrustSubnet" options="un-trust-subnet">
              <help short="Untrust Subnet"/>
            </arg>
            <arg type="@IPAddressSpace_create" var="$resource.properties.networkProfile.vwanConfiguration.vHub" options="v-hub" required="True">
              <help short="vHub Address"/>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.panEtag" options="pan-etag" group="Properties">
          <help short="panEtag info"/>
        </arg>
        <arg type="object" var="$resource.properties.panoramaConfig" options="panorama-config" group="Properties">
          <help short="Panorama Configuration"/>
          <arg type="string" var="$resource.properties.panoramaConfig.configString" options="config-string" required="True">
            <help short="Base64 encoded string representing Panorama parameters to be used by Firewall to connect to Panorama. This string is generated via azure plugin in Panorama"/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.planData" options="plan-data" required="True" group="Properties">
          <help short="Billing plan information."/>
          <arg type="string" var="$resource.properties.planData.billingCycle" options="billing-cycle" required="True">
            <help short="different billing cycles like MONTHLY/WEEKLY"/>
            <enum>
              <item name="MONTHLY" value="&quot;MONTHLY&quot;"/>
              <item name="WEEKLY" value="&quot;WEEKLY&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$resource.properties.planData.planId" options="plan-id" required="True">
            <help short="plan id as published by Liftr.PAN"/>
            <format maxLength="50"/>
          </arg>
          <arg type="string" var="$resource.properties.planData.usageType" options="usage-type">
            <help short="different usage type like PAYG/COMMITTED"/>
            <enum>
              <item name="COMMITTED" value="&quot;COMMITTED&quot;"/>
              <item name="PAYG" value="&quot;PAYG&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.identity" options="identity" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type" required="True">
            <help short="The type of managed identity assigned to this resource."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The identities assigned to this resource by the user."/>
            <additionalProp>
              <item type="object">
                <arg type="string" var="$resource.identity.userAssignedIdentities{}.clientId" options="client-id">
                  <help short="The active directory client identifier for this principal."/>
                </arg>
                <arg type="string" var="$resource.identity.userAssignedIdentities{}.principalId" options="principal-id">
                  <help short="The active directory identifier for this principal."/>
                </arg>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Firewalls_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{firewallName}">
          <request method="put">
            <path>
              <param type="string" name="firewallName" arg="$Path.firewallName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-29&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$resource.identity">
                    <prop type="string" name="type" arg="$resource.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId" arg="$resource.identity.userAssignedIdentities{}.clientId"/>
                          <prop type="string" name="principalId" arg="$resource.identity.userAssignedIdentities{}.principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="associatedRulestack" arg="$resource.properties.associatedRulestack">
                      <prop type="string" name="location" arg="$resource.properties.associatedRulestack.location"/>
                      <prop type="string" name="resourceId" arg="$resource.properties.associatedRulestack.resourceId"/>
                      <prop type="string" name="rulestackId" arg="$resource.properties.associatedRulestack.rulestackId"/>
                    </prop>
                    <prop type="object" name="dnsSettings" arg="$resource.properties.dnsSettings" required="True">
                      <prop type="array<@IPAddress_create>" name="dnsServers" arg="$resource.properties.dnsSettings.dnsServers">
                        <item type="@IPAddress_create"/>
                      </prop>
                      <prop type="string" name="enableDnsProxy" arg="$resource.properties.dnsSettings.enableDnsProxy">
                        <enum>
                          <item value="&quot;DISABLED&quot;"/>
                          <item value="&quot;ENABLED&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enabledDnsType" arg="$resource.properties.dnsSettings.enabledDnsType">
                        <enum>
                          <item value="&quot;AZURE&quot;"/>
                          <item value="&quot;CUSTOM&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="frontEndSettings" arg="$resource.properties.frontEndSettings">
                      <item type="object">
                        <prop type="@EndpointConfiguration_create" name="backendConfiguration" arg="$resource.properties.frontEndSettings[].backendConfiguration" required="True"/>
                        <prop type="object" name="frontendConfiguration" arg="$resource.properties.frontEndSettings[].frontendConfiguration" required="True" cls="EndpointConfiguration_create">
                          <prop type="@IPAddress_create" name="address" arg="@EndpointConfiguration_create.address" required="True"/>
                          <prop type="string" name="port" arg="@EndpointConfiguration_create.port" required="True"/>
                        </prop>
                        <prop type="string" name="name" arg="$resource.properties.frontEndSettings[].name" required="True"/>
                        <prop type="string" name="protocol" arg="$resource.properties.frontEndSettings[].protocol" required="True">
                          <enum>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="isPanoramaManaged" arg="$resource.properties.isPanoramaManaged">
                      <enum>
                        <item value="&quot;FALSE&quot;"/>
                        <item value="&quot;TRUE&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="marketplaceDetails" arg="$resource.properties.marketplaceDetails" required="True">
                      <prop type="string" name="marketplaceSubscriptionStatus" arg="$resource.properties.marketplaceDetails.marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;FulfillmentRequested&quot;"/>
                          <item value="&quot;NotStarted&quot;"/>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" arg="$resource.properties.marketplaceDetails.offerId" required="True"/>
                      <prop type="string" name="publisherId" arg="$resource.properties.marketplaceDetails.publisherId" required="True"/>
                    </prop>
                    <prop type="object" name="networkProfile" arg="$resource.properties.networkProfile" required="True">
                      <prop type="array<@IPAddress_create>" name="egressNatIp" arg="$resource.properties.networkProfile.egressNatIp">
                        <item type="@IPAddress_create"/>
                      </prop>
                      <prop type="string" name="enableEgressNat" arg="$resource.properties.networkProfile.enableEgressNat" required="True">
                        <enum>
                          <item value="&quot;DISABLED&quot;"/>
                          <item value="&quot;ENABLED&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkType" arg="$resource.properties.networkProfile.networkType" required="True">
                        <enum>
                          <item value="&quot;VNET&quot;"/>
                          <item value="&quot;VWAN&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<@IPAddress_create>" name="publicIps" arg="$resource.properties.networkProfile.publicIps" required="True">
                        <item type="@IPAddress_create"/>
                      </prop>
                      <prop type="object" name="vnetConfiguration" arg="$resource.properties.networkProfile.vnetConfiguration">
                        <prop type="object" name="ipOfTrustSubnetForUdr" arg="$resource.properties.networkProfile.vnetConfiguration.ipOfTrustSubnetForUdr" cls="IPAddress_create">
                          <prop type="string" name="address" arg="@IPAddress_create.address"/>
                          <prop type="string" name="resourceId" arg="@IPAddress_create.resourceId"/>
                        </prop>
                        <prop type="@IPAddressSpace_create" name="trustSubnet" arg="$resource.properties.networkProfile.vnetConfiguration.trustSubnet" required="True"/>
                        <prop type="@IPAddressSpace_create" name="unTrustSubnet" arg="$resource.properties.networkProfile.vnetConfiguration.unTrustSubnet" required="True"/>
                        <prop type="object" name="vnet" arg="$resource.properties.networkProfile.vnetConfiguration.vnet" required="True" cls="IPAddressSpace_create">
                          <prop type="string" name="addressSpace" arg="@IPAddressSpace_create.addressSpace"/>
                          <prop type="string" name="resourceId" arg="@IPAddressSpace_create.resourceId"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vwanConfiguration" arg="$resource.properties.networkProfile.vwanConfiguration">
                        <prop type="@IPAddress_create" name="ipOfTrustSubnetForUdr" arg="$resource.properties.networkProfile.vwanConfiguration.ipOfTrustSubnetForUdr"/>
                        <prop type="string" name="networkVirtualApplianceId" arg="$resource.properties.networkProfile.vwanConfiguration.networkVirtualApplianceId"/>
                        <prop type="@IPAddressSpace_create" name="trustSubnet" arg="$resource.properties.networkProfile.vwanConfiguration.trustSubnet"/>
                        <prop type="@IPAddressSpace_create" name="unTrustSubnet" arg="$resource.properties.networkProfile.vwanConfiguration.unTrustSubnet"/>
                        <prop type="@IPAddressSpace_create" name="vHub" arg="$resource.properties.networkProfile.vwanConfiguration.vHub" required="True"/>
                      </prop>
                    </prop>
                    <prop type="string" name="panEtag" arg="$resource.properties.panEtag"/>
                    <prop type="object" name="panoramaConfig" arg="$resource.properties.panoramaConfig">
                      <prop type="string" name="configString" arg="$resource.properties.panoramaConfig.configString" required="True"/>
                    </prop>
                    <prop type="object" name="planData" arg="$resource.properties.planData" required="True">
                      <prop type="string" name="billingCycle" arg="$resource.properties.planData.billingCycle" required="True">
                        <enum>
                          <item value="&quot;MONTHLY&quot;"/>
                          <item value="&quot;WEEKLY&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="planId" arg="$resource.properties.planData.planId" required="True">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="usageType" arg="$resource.properties.planData.usageType">
                        <enum>
                          <item value="&quot;COMMITTED&quot;"/>
                          <item value="&quot;PAYG&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="associatedRulestack">
                      <prop type="string" name="location"/>
                      <prop type="string" name="resourceId"/>
                      <prop type="string" name="rulestackId"/>
                    </prop>
                    <prop type="object" name="dnsSettings" required="True">
                      <prop type="array<@IPAddress_read>" name="dnsServers">
                        <item type="@IPAddress_read"/>
                      </prop>
                      <prop type="string" name="enableDnsProxy">
                        <enum>
                          <item value="&quot;DISABLED&quot;"/>
                          <item value="&quot;ENABLED&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enabledDnsType">
                        <enum>
                          <item value="&quot;AZURE&quot;"/>
                          <item value="&quot;CUSTOM&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="frontEndSettings">
                      <item type="object">
                        <prop type="@EndpointConfiguration_read" name="backendConfiguration" required="True"/>
                        <prop type="object" name="frontendConfiguration" required="True" cls="EndpointConfiguration_read">
                          <prop type="@IPAddress_read" name="address" required="True"/>
                          <prop type="string" name="port" required="True"/>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="protocol" required="True">
                          <enum>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="isPanoramaManaged">
                      <enum>
                        <item value="&quot;FALSE&quot;"/>
                        <item value="&quot;TRUE&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="marketplaceDetails" required="True">
                      <prop readOnly="True" type="string" name="marketplaceSubscriptionId"/>
                      <prop type="string" name="marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;FulfillmentRequested&quot;"/>
                          <item value="&quot;NotStarted&quot;"/>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" required="True"/>
                      <prop type="string" name="publisherId" required="True"/>
                    </prop>
                    <prop type="object" name="networkProfile" required="True">
                      <prop type="array<@IPAddress_read>" name="egressNatIp">
                        <item type="@IPAddress_read"/>
                      </prop>
                      <prop type="string" name="enableEgressNat" required="True">
                        <enum>
                          <item value="&quot;DISABLED&quot;"/>
                          <item value="&quot;ENABLED&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkType" required="True">
                        <enum>
                          <item value="&quot;VNET&quot;"/>
                          <item value="&quot;VWAN&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<@IPAddress_read>" name="publicIps" required="True">
                        <item type="@IPAddress_read"/>
                      </prop>
                      <prop type="object" name="vnetConfiguration">
                        <prop type="object" name="ipOfTrustSubnetForUdr" cls="IPAddress_read">
                          <prop type="string" name="address"/>
                          <prop type="string" name="resourceId"/>
                        </prop>
                        <prop type="@IPAddressSpace_read" name="trustSubnet" required="True"/>
                        <prop type="@IPAddressSpace_read" name="unTrustSubnet" required="True"/>
                        <prop type="object" name="vnet" required="True" cls="IPAddressSpace_read">
                          <prop type="string" name="addressSpace"/>
                          <prop type="string" name="resourceId"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vwanConfiguration">
                        <prop type="@IPAddress_read" name="ipOfTrustSubnetForUdr"/>
                        <prop type="string" name="networkVirtualApplianceId"/>
                        <prop type="@IPAddressSpace_read" name="trustSubnet"/>
                        <prop type="@IPAddressSpace_read" name="unTrustSubnet"/>
                        <prop type="@IPAddressSpace_read" name="vHub" required="True"/>
                      </prop>
                    </prop>
                    <prop type="string" name="panEtag"/>
                    <prop type="object" name="panoramaConfig">
                      <prop readOnly="True" type="string" name="cgName"/>
                      <prop type="string" name="configString" required="True"/>
                      <prop readOnly="True" type="string" name="dgName"/>
                      <prop readOnly="True" type="string" name="hostName"/>
                      <prop readOnly="True" type="string" name="panoramaServer"/>
                      <prop readOnly="True" type="string" name="panoramaServer2"/>
                      <prop readOnly="True" type="string" name="tplName"/>
                      <prop readOnly="True" type="string" name="vmAuthKey"/>
                    </prop>
                    <prop type="object" name="planData" required="True">
                      <prop type="string" name="billingCycle" required="True">
                        <enum>
                          <item value="&quot;MONTHLY&quot;"/>
                          <item value="&quot;WEEKLY&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="effectiveDate"/>
                      <prop type="string" name="planId" required="True">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="usageType">
                        <enum>
                          <item value="&quot;COMMITTED&quot;"/>
                          <item value="&quot;PAYG&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-08-29">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/paloaltonetworks.cloudngfw/firewalls/{}" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QYWxvQWx0b05ldHdvcmtzLkNsb3Vkbmdmdy9maXJld2FsbHMve2ZpcmV3YWxsTmFtZX0=/V/MjAyMi0wOC0yOQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firewallName" options="firewall-name name n" required="True" idPart="name">
          <help short="Firewall resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.identity" options="identity" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type">
            <help short="The type of managed identity assigned to this resource."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The identities assigned to this resource by the user."/>
            <additionalProp>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$resource.identity.userAssignedIdentities{}.clientId" options="client-id">
                  <help short="The active directory client identifier for this principal."/>
                </arg>
                <arg nullable="True" type="string" var="$resource.identity.userAssignedIdentities{}.principalId" options="principal-id">
                  <help short="The active directory identifier for this principal."/>
                </arg>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Firewalls_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{firewallName}">
          <request method="get">
            <path>
              <param type="string" name="firewallName" arg="$Path.firewallName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-29&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="FirewallResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="associatedRulestack">
                      <prop type="string" name="location"/>
                      <prop type="string" name="resourceId"/>
                      <prop type="string" name="rulestackId"/>
                    </prop>
                    <prop type="object" name="dnsSettings" required="True">
                      <prop type="array<@IPAddress_read>" name="dnsServers">
                        <item type="@IPAddress_read"/>
                      </prop>
                      <prop type="string" name="enableDnsProxy">
                        <enum>
                          <item value="&quot;DISABLED&quot;"/>
                          <item value="&quot;ENABLED&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enabledDnsType">
                        <enum>
                          <item value="&quot;AZURE&quot;"/>
                          <item value="&quot;CUSTOM&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="frontEndSettings">
                      <item type="object">
                        <prop type="@EndpointConfiguration_read" name="backendConfiguration" required="True"/>
                        <prop type="object" name="frontendConfiguration" required="True" cls="EndpointConfiguration_read">
                          <prop type="@IPAddress_read" name="address" required="True"/>
                          <prop type="string" name="port" required="True"/>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="protocol" required="True">
                          <enum>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="isPanoramaManaged">
                      <enum>
                        <item value="&quot;FALSE&quot;"/>
                        <item value="&quot;TRUE&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="marketplaceDetails" required="True">
                      <prop readOnly="True" type="string" name="marketplaceSubscriptionId"/>
                      <prop type="string" name="marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;FulfillmentRequested&quot;"/>
                          <item value="&quot;NotStarted&quot;"/>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" required="True"/>
                      <prop type="string" name="publisherId" required="True"/>
                    </prop>
                    <prop type="object" name="networkProfile" required="True">
                      <prop type="array<@IPAddress_read>" name="egressNatIp">
                        <item type="@IPAddress_read"/>
                      </prop>
                      <prop type="string" name="enableEgressNat" required="True">
                        <enum>
                          <item value="&quot;DISABLED&quot;"/>
                          <item value="&quot;ENABLED&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkType" required="True">
                        <enum>
                          <item value="&quot;VNET&quot;"/>
                          <item value="&quot;VWAN&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<@IPAddress_read>" name="publicIps" required="True">
                        <item type="@IPAddress_read"/>
                      </prop>
                      <prop type="object" name="vnetConfiguration">
                        <prop type="object" name="ipOfTrustSubnetForUdr" cls="IPAddress_read">
                          <prop type="string" name="address"/>
                          <prop type="string" name="resourceId"/>
                        </prop>
                        <prop type="@IPAddressSpace_read" name="trustSubnet" required="True"/>
                        <prop type="@IPAddressSpace_read" name="unTrustSubnet" required="True"/>
                        <prop type="object" name="vnet" required="True" cls="IPAddressSpace_read">
                          <prop type="string" name="addressSpace"/>
                          <prop type="string" name="resourceId"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vwanConfiguration">
                        <prop type="@IPAddress_read" name="ipOfTrustSubnetForUdr"/>
                        <prop type="string" name="networkVirtualApplianceId"/>
                        <prop type="@IPAddressSpace_read" name="trustSubnet"/>
                        <prop type="@IPAddressSpace_read" name="unTrustSubnet"/>
                        <prop type="@IPAddressSpace_read" name="vHub" required="True"/>
                      </prop>
                    </prop>
                    <prop type="string" name="panEtag"/>
                    <prop type="object" name="panoramaConfig">
                      <prop readOnly="True" type="string" name="cgName"/>
                      <prop type="string" name="configString" required="True"/>
                      <prop readOnly="True" type="string" name="dgName"/>
                      <prop readOnly="True" type="string" name="hostName"/>
                      <prop readOnly="True" type="string" name="panoramaServer"/>
                      <prop readOnly="True" type="string" name="panoramaServer2"/>
                      <prop readOnly="True" type="string" name="tplName"/>
                      <prop readOnly="True" type="string" name="vmAuthKey"/>
                    </prop>
                    <prop type="object" name="planData" required="True">
                      <prop type="string" name="billingCycle" required="True">
                        <enum>
                          <item value="&quot;MONTHLY&quot;"/>
                          <item value="&quot;WEEKLY&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="effectiveDate"/>
                      <prop type="string" name="planId" required="True">
                        <format maxLength="50"/>
                      </prop>
                      <prop type="string" name="usageType">
                        <enum>
                          <item value="&quot;COMMITTED&quot;"/>
                          <item value="&quot;PAYG&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$resource.identity">
                <prop type="string" name="type" arg="$resource.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object">
                      <prop type="string" name="clientId" arg="$resource.identity.userAssignedIdentities{}.clientId"/>
                      <prop type="string" name="principalId" arg="$resource.identity.userAssignedIdentities{}.principalId"/>
                    </item>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Firewalls_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{firewallName}">
          <request method="put">
            <path>
              <param type="string" name="firewallName" arg="$Path.firewallName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-29&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@FirewallResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
