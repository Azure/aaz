<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicebus/namespaces/{}/topics/{}" version="2022-01-01-preview" swagger="mgmt-plane/servicebus/ResourceProviders/Microsoft.ServiceBus/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUJ1cy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS90b3BpY3Mve3RvcGljTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"/>
  <commandGroup name="servicebus topic">
    <command name="show" version="2022-01-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicebus/namespaces/{}/topics/{}" version="2022-01-01-preview" swagger="mgmt-plane/servicebus/ResourceProviders/Microsoft.ServiceBus/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUJ1cy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS90b3BpY3Mve3RvcGljTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.topicName" options="topic-name name n" required="True" idPart="child_name_1">
          <help short="The topic name."/>
          <format minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="Topics_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}">
          <request method="get">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="topicName" arg="$Path.topicName" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ServiceBus/namespaces/{}/topics/{}"/>
                  </prop>
                  <prop readOnly="True" type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="dateTime" name="accessedAt"/>
                    <prop type="duration" name="autoDeleteOnIdle"/>
                    <prop type="object" name="countDetails">
                      <prop readOnly="True" type="integer64" name="activeMessageCount"/>
                      <prop readOnly="True" type="integer64" name="deadLetterMessageCount"/>
                      <prop readOnly="True" type="integer64" name="scheduledMessageCount"/>
                      <prop readOnly="True" type="integer64" name="transferDeadLetterMessageCount"/>
                      <prop readOnly="True" type="integer64" name="transferMessageCount"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop type="duration" name="defaultMessageTimeToLive"/>
                    <prop type="duration" name="duplicateDetectionHistoryTimeWindow"/>
                    <prop type="boolean" name="enableBatchedOperations"/>
                    <prop type="boolean" name="enableExpress"/>
                    <prop type="boolean" name="enablePartitioning"/>
                    <prop type="integer64" name="maxMessageSizeInKilobytes"/>
                    <prop type="integer32" name="maxSizeInMegabytes"/>
                    <prop type="boolean" name="requiresDuplicateDetection"/>
                    <prop readOnly="True" type="integer64" name="sizeInBytes"/>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;ReceiveDisabled&quot;"/>
                        <item value="&quot;Renaming&quot;"/>
                        <item value="&quot;Restoring&quot;"/>
                        <item value="&quot;SendDisabled&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="subscriptionCount"/>
                    <prop type="boolean" name="supportOrdering"/>
                    <prop readOnly="True" type="dateTime" name="updatedAt"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicebus/namespaces/{}/topics/{}" version="2022-01-01-preview" swagger="mgmt-plane/servicebus/ResourceProviders/Microsoft.ServiceBus/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUJ1cy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS90b3BpY3Mve3RvcGljTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.topicName" options="topic-name name n" required="True" idPart="child_name_1">
          <help short="The topic name."/>
          <format minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="Topics_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}">
          <request method="delete">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="topicName" arg="$Path.topicName" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicebus/namespaces/{}/topics/{}" version="2022-01-01-preview" swagger="mgmt-plane/servicebus/ResourceProviders/Microsoft.ServiceBus/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUJ1cy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS90b3BpY3Mve3RvcGljTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.topicName" options="topic-name name n" required="True" idPart="child_name_1">
          <help short="The topic name."/>
          <format minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="duration" var="$parameters.properties.autoDeleteOnIdle" options="auto-delete-on-idle" group="Properties">
          <help short="ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."/>
        </arg>
        <arg type="duration" var="$parameters.properties.defaultMessageTimeToLive" options="default-message-time-to-live" group="Properties">
          <help short="ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."/>
        </arg>
        <arg type="duration" var="$parameters.properties.duplicateDetectionHistoryTimeWindow" options="duplicate-detection-history-time-window d" group="Properties">
          <help short="ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableBatchedOperations" options="enable-batched-operations" group="Properties">
          <help short="Value that indicates whether server-side batched operations are enabled."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enableExpress" options="enable-express" group="Properties">
          <help short="Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enablePartitioning" options="enable-partitioning" group="Properties">
          <help short="Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."/>
        </arg>
        <arg type="integer64" var="$parameters.properties.maxMessageSizeInKilobytes" options="max-message-size-in-kilobytes max-message-size" group="Properties">
          <help short="Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."/>
        </arg>
        <arg type="integer32" var="$parameters.properties.maxSizeInMegabytes" options="max-size-in-megabytes max-size" group="Properties">
          <help short="Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.requiresDuplicateDetection" options="enable-duplicate-detection duplicate-detection" group="Properties">
          <help short="A value indicating if this queue requires duplicate detection."/>
        </arg>
        <arg type="string" var="$parameters.properties.status" options="status" group="Properties">
          <help short="Enumerates the possible values for the status of a messaging entity."/>
          <enum>
            <item name="Active" value="&quot;Active&quot;"/>
            <item name="Creating" value="&quot;Creating&quot;"/>
            <item name="Deleting" value="&quot;Deleting&quot;"/>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="ReceiveDisabled" value="&quot;ReceiveDisabled&quot;"/>
            <item name="Renaming" value="&quot;Renaming&quot;"/>
            <item name="Restoring" value="&quot;Restoring&quot;"/>
            <item name="SendDisabled" value="&quot;SendDisabled&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$parameters.properties.supportOrdering" options="enable-ordering" group="Properties">
          <help short="Value that indicates whether the topic supports ordering."/>
        </arg>
      </argGroup>
      <operation operationId="Topics_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}">
          <request method="put">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="topicName" arg="$Path.topicName" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="duration" name="autoDeleteOnIdle" arg="$parameters.properties.autoDeleteOnIdle"/>
                    <prop type="duration" name="defaultMessageTimeToLive" arg="$parameters.properties.defaultMessageTimeToLive"/>
                    <prop type="duration" name="duplicateDetectionHistoryTimeWindow" arg="$parameters.properties.duplicateDetectionHistoryTimeWindow"/>
                    <prop type="boolean" name="enableBatchedOperations" arg="$parameters.properties.enableBatchedOperations"/>
                    <prop type="boolean" name="enableExpress" arg="$parameters.properties.enableExpress"/>
                    <prop type="boolean" name="enablePartitioning" arg="$parameters.properties.enablePartitioning"/>
                    <prop type="integer64" name="maxMessageSizeInKilobytes" arg="$parameters.properties.maxMessageSizeInKilobytes"/>
                    <prop type="integer32" name="maxSizeInMegabytes" arg="$parameters.properties.maxSizeInMegabytes"/>
                    <prop type="boolean" name="requiresDuplicateDetection" arg="$parameters.properties.requiresDuplicateDetection"/>
                    <prop type="string" name="status" arg="$parameters.properties.status">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;ReceiveDisabled&quot;"/>
                        <item value="&quot;Renaming&quot;"/>
                        <item value="&quot;Restoring&quot;"/>
                        <item value="&quot;SendDisabled&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="supportOrdering" arg="$parameters.properties.supportOrdering"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ServiceBus/namespaces/{}/topics/{}"/>
                  </prop>
                  <prop readOnly="True" type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="dateTime" name="accessedAt"/>
                    <prop type="duration" name="autoDeleteOnIdle"/>
                    <prop type="object" name="countDetails">
                      <prop readOnly="True" type="integer64" name="activeMessageCount"/>
                      <prop readOnly="True" type="integer64" name="deadLetterMessageCount"/>
                      <prop readOnly="True" type="integer64" name="scheduledMessageCount"/>
                      <prop readOnly="True" type="integer64" name="transferDeadLetterMessageCount"/>
                      <prop readOnly="True" type="integer64" name="transferMessageCount"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop type="duration" name="defaultMessageTimeToLive"/>
                    <prop type="duration" name="duplicateDetectionHistoryTimeWindow"/>
                    <prop type="boolean" name="enableBatchedOperations"/>
                    <prop type="boolean" name="enableExpress"/>
                    <prop type="boolean" name="enablePartitioning"/>
                    <prop type="integer64" name="maxMessageSizeInKilobytes"/>
                    <prop type="integer32" name="maxSizeInMegabytes"/>
                    <prop type="boolean" name="requiresDuplicateDetection"/>
                    <prop readOnly="True" type="integer64" name="sizeInBytes"/>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;ReceiveDisabled&quot;"/>
                        <item value="&quot;Renaming&quot;"/>
                        <item value="&quot;Restoring&quot;"/>
                        <item value="&quot;SendDisabled&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="subscriptionCount"/>
                    <prop type="boolean" name="supportOrdering"/>
                    <prop readOnly="True" type="dateTime" name="updatedAt"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicebus/namespaces/{}/topics/{}" version="2022-01-01-preview" swagger="mgmt-plane/servicebus/ResourceProviders/Microsoft.ServiceBus/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUJ1cy9uYW1lc3BhY2VzL3tuYW1lc3BhY2VOYW1lfS90b3BpY3Mve3RvcGljTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.namespaceName" options="namespace-name" required="True" idPart="name">
          <help short="The namespace name"/>
          <format maxLength="50" minLength="6"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.topicName" options="topic-name name n" required="True" idPart="child_name_1">
          <help short="The topic name."/>
          <format minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="duration" var="$parameters.properties.autoDeleteOnIdle" options="auto-delete-on-idle" group="Properties">
          <help short="ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes."/>
        </arg>
        <arg nullable="True" type="duration" var="$parameters.properties.defaultMessageTimeToLive" options="default-message-time-to-live" group="Properties">
          <help short="ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself."/>
        </arg>
        <arg nullable="True" type="duration" var="$parameters.properties.duplicateDetectionHistoryTimeWindow" options="duplicate-detection-history-time-window d" group="Properties">
          <help short="ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enableBatchedOperations" options="enable-batched-operations" group="Properties">
          <help short="Value that indicates whether server-side batched operations are enabled."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enableExpress" options="enable-express" group="Properties">
          <help short="Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.enablePartitioning" options="enable-partitioning" group="Properties">
          <help short="Value that indicates whether the topic to be partitioned across multiple message brokers is enabled."/>
        </arg>
        <arg nullable="True" type="integer64" var="$parameters.properties.maxMessageSizeInKilobytes" options="max-message-size-in-kilobytes max-message-size" group="Properties">
          <help short="Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024."/>
        </arg>
        <arg nullable="True" type="integer32" var="$parameters.properties.maxSizeInMegabytes" options="max-size-in-megabytes max-size" group="Properties">
          <help short="Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024."/>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.requiresDuplicateDetection" options="enable-duplicate-detection duplicate-detection" group="Properties">
          <help short="A value indicating if this queue requires duplicate detection."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.status" options="status" group="Properties">
          <help short="Enumerates the possible values for the status of a messaging entity."/>
          <enum>
            <item name="Active" value="&quot;Active&quot;"/>
            <item name="Creating" value="&quot;Creating&quot;"/>
            <item name="Deleting" value="&quot;Deleting&quot;"/>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="ReceiveDisabled" value="&quot;ReceiveDisabled&quot;"/>
            <item name="Renaming" value="&quot;Renaming&quot;"/>
            <item name="Restoring" value="&quot;Restoring&quot;"/>
            <item name="SendDisabled" value="&quot;SendDisabled&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$parameters.properties.supportOrdering" options="enable-ordering" group="Properties">
          <help short="Value that indicates whether the topic supports ordering."/>
        </arg>
      </argGroup>
      <operation operationId="Topics_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}">
          <request method="get">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="topicName" arg="$Path.topicName" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="SBTopic_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ServiceBus/namespaces/{}/topics/{}"/>
                  </prop>
                  <prop readOnly="True" type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="dateTime" name="accessedAt"/>
                    <prop type="duration" name="autoDeleteOnIdle"/>
                    <prop type="object" name="countDetails">
                      <prop readOnly="True" type="integer64" name="activeMessageCount"/>
                      <prop readOnly="True" type="integer64" name="deadLetterMessageCount"/>
                      <prop readOnly="True" type="integer64" name="scheduledMessageCount"/>
                      <prop readOnly="True" type="integer64" name="transferDeadLetterMessageCount"/>
                      <prop readOnly="True" type="integer64" name="transferMessageCount"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop type="duration" name="defaultMessageTimeToLive"/>
                    <prop type="duration" name="duplicateDetectionHistoryTimeWindow"/>
                    <prop type="boolean" name="enableBatchedOperations"/>
                    <prop type="boolean" name="enableExpress"/>
                    <prop type="boolean" name="enablePartitioning"/>
                    <prop type="integer64" name="maxMessageSizeInKilobytes"/>
                    <prop type="integer32" name="maxSizeInMegabytes"/>
                    <prop type="boolean" name="requiresDuplicateDetection"/>
                    <prop readOnly="True" type="integer64" name="sizeInBytes"/>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;ReceiveDisabled&quot;"/>
                        <item value="&quot;Renaming&quot;"/>
                        <item value="&quot;Restoring&quot;"/>
                        <item value="&quot;SendDisabled&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer32" name="subscriptionCount"/>
                    <prop type="boolean" name="supportOrdering"/>
                    <prop readOnly="True" type="dateTime" name="updatedAt"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="duration" name="autoDeleteOnIdle" arg="$parameters.properties.autoDeleteOnIdle"/>
                <prop type="duration" name="defaultMessageTimeToLive" arg="$parameters.properties.defaultMessageTimeToLive"/>
                <prop type="duration" name="duplicateDetectionHistoryTimeWindow" arg="$parameters.properties.duplicateDetectionHistoryTimeWindow"/>
                <prop type="boolean" name="enableBatchedOperations" arg="$parameters.properties.enableBatchedOperations"/>
                <prop type="boolean" name="enableExpress" arg="$parameters.properties.enableExpress"/>
                <prop type="boolean" name="enablePartitioning" arg="$parameters.properties.enablePartitioning"/>
                <prop type="integer64" name="maxMessageSizeInKilobytes" arg="$parameters.properties.maxMessageSizeInKilobytes"/>
                <prop type="integer32" name="maxSizeInMegabytes" arg="$parameters.properties.maxSizeInMegabytes"/>
                <prop type="boolean" name="requiresDuplicateDetection" arg="$parameters.properties.requiresDuplicateDetection"/>
                <prop type="string" name="status" arg="$parameters.properties.status">
                  <enum>
                    <item value="&quot;Active&quot;"/>
                    <item value="&quot;Creating&quot;"/>
                    <item value="&quot;Deleting&quot;"/>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;ReceiveDisabled&quot;"/>
                    <item value="&quot;Renaming&quot;"/>
                    <item value="&quot;Restoring&quot;"/>
                    <item value="&quot;SendDisabled&quot;"/>
                    <item value="&quot;Unknown&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="supportOrdering" arg="$parameters.properties.supportOrdering"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Topics_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}">
          <request method="put">
            <path>
              <param type="string" name="namespaceName" arg="$Path.namespaceName" required="True">
                <format maxLength="50" minLength="6"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="topicName" arg="$Path.topicName" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@SBTopic_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
