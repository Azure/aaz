<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/devboxdefinitions/{}" version="2023-06-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2RldmJveGRlZmluaXRpb25zL3tkZXZCb3hEZWZpbml0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}/devboxdefinitions/{}" version="2023-06-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0vZGV2Ym94ZGVmaW5pdGlvbnMve2RldkJveERlZmluaXRpb25OYW1lfQ==/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter admin devbox-definition">
    <command name="show" version="2023-06-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/devboxdefinitions/{}" version="2023-06-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2RldmJveGRlZmluaXRpb25zL3tkZXZCb3hEZWZpbml0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}/devboxdefinitions/{}" version="2023-06-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0vZGV2Ym94ZGVmaW5pdGlvbnMve2RldkJveERlZmluaXRpb25OYW1lfQ==/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.devBoxDefinitionName" options="devbox-definition-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the dev box definition."/>
        </arg>
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" group="" idPart="name">
          <help short="The name of the dev center. Use `az configure -d dev-center=<dev_center_name>` to configure a default."/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name project" group="" idPart="name">
          <help short="The name of the project. Use `az configure -d project=<project_name>` to configure a default."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_DevBoxDefinitions_GetByProject">
        <operator type="and">
          <operator type="hasValue" arg="$Path.devBoxDefinitionName"/>
          <operator type="hasValue" arg="$Path.projectName"/>
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_DevBoxDefinitions_Get">
        <operator type="and">
          <operator type="hasValue" arg="$Path.devBoxDefinitionName"/>
          <operator type="hasValue" arg="$Path.devCenterName"/>
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_DevBoxDefinitions_GetByProject" operationId="DevBoxDefinitions_GetByProject">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/devboxdefinitions/{devBoxDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="devBoxDefinitionName" arg="$Path.devBoxDefinitionName" required="True"/>
              <param type="string" name="projectName" arg="$Path.projectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="@ImageReference_read" name="activeImageReference"/>
                    <prop type="string" name="hibernateSupport">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="imageReference" required="True" cls="ImageReference_read">
                      <prop readOnly="True" type="string" name="exactVersion"/>
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="imageValidationErrorDetails">
                      <prop type="string" name="code"/>
                      <prop type="string" name="message"/>
                    </prop>
                    <prop type="string" name="imageValidationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TimedOut&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="osStorageType"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="integer32" name="capacity"/>
                      <prop type="string" name="family"/>
                      <prop type="string" name="name" required="True"/>
                      <prop type="string" name="size"/>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Free&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="validationErrorDetails">
                      <item type="object">
                        <prop type="string" name="code"/>
                        <prop type="string" name="message"/>
                      </item>
                    </prop>
                    <prop type="string" name="validationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_DevBoxDefinitions_Get" operationId="DevBoxDefinitions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/{devBoxDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="devBoxDefinitionName" arg="$Path.devBoxDefinitionName" required="True"/>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="@ImageReference_read" name="activeImageReference"/>
                    <prop type="string" name="hibernateSupport">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="@ImageReference_read" name="imageReference" required="True"/>
                    <prop type="object" name="imageValidationErrorDetails">
                      <prop type="string" name="code"/>
                      <prop type="string" name="message"/>
                    </prop>
                    <prop type="string" name="imageValidationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TimedOut&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="osStorageType"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="integer32" name="capacity"/>
                      <prop type="string" name="family"/>
                      <prop type="string" name="name" required="True"/>
                      <prop type="string" name="size"/>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Free&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="validationErrorDetails">
                      <item type="object">
                        <prop type="string" name="code"/>
                        <prop type="string" name="message"/>
                      </item>
                    </prop>
                    <prop type="string" name="validationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-06-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/devboxdefinitions/{}" version="2023-06-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2RldmJveGRlZmluaXRpb25zL3tkZXZCb3hEZWZpbml0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.devBoxDefinitionName" options="devbox-definition-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the dev box definition."/>
        </arg>
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" required="True" group="" idPart="name">
          <help short="The name of the dev center. Use `az configure -d dev-center=<dev_center_name>` to configure a default."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DevBoxDefinitions_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/{devBoxDefinitionName}">
          <request method="delete">
            <path>
              <param type="string" name="devBoxDefinitionName" arg="$Path.devBoxDefinitionName" required="True"/>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-06-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/devboxdefinitions/{}" version="2023-06-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2RldmJveGRlZmluaXRpb25zL3tkZXZCb3hEZWZpbml0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.devBoxDefinitionName" options="devbox-definition-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the dev box definition."/>
        </arg>
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" required="True" group="" idPart="name">
          <help short="The name of the dev center. Use `az configure -d dev-center=<dev_center_name>` to configure a default."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" required="True" group="Body">
          <help short="The geo-location where the resource lives. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.hibernateSupport" options="hibernate-support" group="Properties">
          <help short="Indicates whether dev boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$body.properties.imageReference" options="image-reference" group="Properties">
          <help short="Image reference information."/>
          <arg type="string" var="$body.properties.imageReference.id" options="id">
            <help short="Image ID, or Image version ID. When Image ID is provided, its latest version will be used."/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.osStorageType" options="os-storage-type" group="Properties">
          <help short="The storage type used for the operating system disk of dev boxes created using this definition."/>
        </arg>
        <arg type="object" var="$body.properties.sku" options="sku" group="Properties">
          <help short="The SKU for dev boxes created using this definition."/>
          <arg type="integer32" var="$body.properties.sku.capacity" options="capacity">
            <help short="If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."/>
          </arg>
          <arg type="string" var="$body.properties.sku.family" options="family">
            <help short="If the service has different generations of hardware, for the same SKU, then that can be captured here."/>
          </arg>
          <arg type="string" var="$body.properties.sku.name" options="name" required="True">
            <help short="The name of the SKU. Ex - P3. It is typically a letter+number code"/>
          </arg>
          <arg type="string" var="$body.properties.sku.size" options="size">
            <help short="The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "/>
          </arg>
          <arg type="string" var="$body.properties.sku.tier" options="tier">
            <help short="This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Free" value="&quot;Free&quot;"/>
              <item name="Premium" value="&quot;Premium&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="DevBoxDefinitions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/{devBoxDefinitionName}">
          <request method="put">
            <path>
              <param type="string" name="devBoxDefinitionName" arg="$Path.devBoxDefinitionName" required="True"/>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="hibernateSupport" arg="$body.properties.hibernateSupport">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="imageReference" arg="$body.properties.imageReference" required="True">
                      <prop type="string" name="id" arg="$body.properties.imageReference.id"/>
                    </prop>
                    <prop type="string" name="osStorageType" arg="$body.properties.osStorageType"/>
                    <prop type="object" name="sku" arg="$body.properties.sku" required="True">
                      <prop type="integer32" name="capacity" arg="$body.properties.sku.capacity"/>
                      <prop type="string" name="family" arg="$body.properties.sku.family"/>
                      <prop type="string" name="name" arg="$body.properties.sku.name" required="True"/>
                      <prop type="string" name="size" arg="$body.properties.sku.size"/>
                      <prop type="string" name="tier" arg="$body.properties.sku.tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Free&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="@ImageReference_read" name="activeImageReference"/>
                    <prop type="string" name="hibernateSupport">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="imageReference" required="True" cls="ImageReference_read">
                      <prop readOnly="True" type="string" name="exactVersion"/>
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="imageValidationErrorDetails">
                      <prop type="string" name="code"/>
                      <prop type="string" name="message"/>
                    </prop>
                    <prop type="string" name="imageValidationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TimedOut&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="osStorageType"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="integer32" name="capacity"/>
                      <prop type="string" name="family"/>
                      <prop type="string" name="name" required="True"/>
                      <prop type="string" name="size"/>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Free&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="validationErrorDetails">
                      <item type="object">
                        <prop type="string" name="code"/>
                        <prop type="string" name="message"/>
                      </item>
                    </prop>
                    <prop type="string" name="validationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-06-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/devcenters/{}/devboxdefinitions/{}" version="2023-06-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL2RldmNlbnRlcnMve2RldkNlbnRlck5hbWV9L2RldmJveGRlZmluaXRpb25zL3tkZXZCb3hEZWZpbml0aW9uTmFtZX0=/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.devBoxDefinitionName" options="devbox-definition-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the dev box definition."/>
        </arg>
        <arg type="string" var="$Path.devCenterName" options="dev-center-name dev-center d" required="True" group="" idPart="name">
          <help short="The name of the dev center. Use `az configure -d dev-center=<dev_center_name>` to configure a default."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$body.properties.hibernateSupport" options="hibernate-support" group="Properties">
          <help short="Indicates whether dev boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$body.properties.imageReference" options="image-reference" group="Properties">
          <help short="Image reference information."/>
          <arg nullable="True" type="string" var="$body.properties.imageReference.id" options="id">
            <help short="Image ID, or Image version ID. When Image ID is provided, its latest version will be used."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.osStorageType" options="os-storage-type" group="Properties">
          <help short="The storage type used for the operating system disk of dev boxes created using this definition."/>
        </arg>
        <arg type="object" var="$body.properties.sku" options="sku" group="Properties">
          <help short="The SKU for dev boxes created using this definition."/>
          <arg nullable="True" type="integer32" var="$body.properties.sku.capacity" options="capacity">
            <help short="If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.sku.family" options="family">
            <help short="If the service has different generations of hardware, for the same SKU, then that can be captured here."/>
          </arg>
          <arg type="string" var="$body.properties.sku.name" options="name">
            <help short="The name of the SKU. Ex - P3. It is typically a letter+number code"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.sku.size" options="size">
            <help short="The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.sku.tier" options="tier">
            <help short="This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Free" value="&quot;Free&quot;"/>
              <item name="Premium" value="&quot;Premium&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="DevBoxDefinitions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/{devBoxDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="devBoxDefinitionName" arg="$Path.devBoxDefinitionName" required="True"/>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DevBoxDefinition_read">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="@ImageReference_read" name="activeImageReference"/>
                    <prop type="string" name="hibernateSupport">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="imageReference" required="True" cls="ImageReference_read">
                      <prop readOnly="True" type="string" name="exactVersion"/>
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="imageValidationErrorDetails">
                      <prop type="string" name="code"/>
                      <prop type="string" name="message"/>
                    </prop>
                    <prop type="string" name="imageValidationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TimedOut&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="osStorageType"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="integer32" name="capacity"/>
                      <prop type="string" name="family"/>
                      <prop type="string" name="name" required="True"/>
                      <prop type="string" name="size"/>
                      <prop type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Free&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="validationErrorDetails">
                      <item type="object">
                        <prop type="string" name="code"/>
                        <prop type="string" name="message"/>
                      </item>
                    </prop>
                    <prop type="string" name="validationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="hibernateSupport" arg="$body.properties.hibernateSupport">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="imageReference" arg="$body.properties.imageReference" required="True">
                  <prop type="string" name="id" arg="$body.properties.imageReference.id"/>
                </prop>
                <prop type="string" name="osStorageType" arg="$body.properties.osStorageType"/>
                <prop type="object" name="sku" arg="$body.properties.sku" required="True">
                  <prop type="integer32" name="capacity" arg="$body.properties.sku.capacity"/>
                  <prop type="string" name="family" arg="$body.properties.sku.family"/>
                  <prop type="string" name="name" arg="$body.properties.sku.name" required="True"/>
                  <prop type="string" name="size" arg="$body.properties.sku.size"/>
                  <prop type="string" name="tier" arg="$body.properties.sku.tier">
                    <enum>
                      <item value="&quot;Basic&quot;"/>
                      <item value="&quot;Free&quot;"/>
                      <item value="&quot;Premium&quot;"/>
                      <item value="&quot;Standard&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="DevBoxDefinitions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devcenters/{devCenterName}/devboxdefinitions/{devBoxDefinitionName}">
          <request method="put">
            <path>
              <param type="string" name="devBoxDefinitionName" arg="$Path.devBoxDefinitionName" required="True"/>
              <param type="string" name="devCenterName" arg="$Path.devCenterName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@DevBoxDefinition_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
