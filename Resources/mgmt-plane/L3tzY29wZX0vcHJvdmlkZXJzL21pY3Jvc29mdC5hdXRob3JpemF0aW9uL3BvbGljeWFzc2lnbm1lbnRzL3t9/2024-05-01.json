{"plane": "mgmt-plane", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "commandGroups": [{"name": "policy assignment", "commands": [{"name": "show", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}, {"type": "string", "var": "$Query.expand", "options": ["expand"], "group": "", "help": {"short": "Additional properties to include in output", "lines": ["Comma-separated list of additional properties to include in the command output. Supported values are 'LatestDefinitionVersion, EffectiveDefinitionVersion'."]}}]}], "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"params": [{"type": "string", "name": "$expand", "arg": "$Query.expand"}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}], "operations": [{"operationId": "PolicyAssignments_Delete", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": ""}, {"name": "create", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}, {"name": "Identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$parameters.identity.systemAssigned", "options": ["assign-identity", "system-assigned", "mi-system-assigned"], "group": "Identity", "help": {"short": "Sets the system assigned managed identity.", "lines": ["Sets the system assigned managed identity of the policy assignment."]}}, {"type": "string", "var": "$parameters.identity.type", "options": ["type"], "hide": true, "group": "Identity", "help": {"short": "The managed identity type.", "lines": ["The managed identity type is the only required field when adding a system or user assigned identity to a resource."]}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"blank": {"value": []}, "type": "array<string>", "var": "$parameters.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "Identity", "help": {"short": "Sets the user assigned managed identity.", "lines": ["Sets the user assigned managed identity of the policy assignment."]}, "item": {"type": "string"}}, {"type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "hide": true, "group": "Identity", "help": {"short": "The user assigned managed identity.", "lines": ["The user assigned managed identity used by the policy assignment. The user assigned managed identity dictionary keys will be ARM resource ids (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}')."]}, "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"name": "Parameters", "args": [{"type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "group": "Parameters", "help": {"short": "The location of the policy assignment.", "lines": ["The location of the policy assignment is only required when utilizing managed identity."]}}]}, {"name": "Properties", "args": [{"type": "string", "var": "$parameters.properties.assignmentType", "options": ["assignment-type"], "hide": true, "group": "Properties", "help": {"short": "The type of policy assignment. Possible values are NotSpecified, System, SystemHidden, and Custom. Immutable."}, "enum": {"items": [{"name": "Custom", "value": "Custom"}, {"name": "NotSpecified", "value": "NotSpecified"}, {"name": "System", "value": "System"}, {"name": "SystemHidden", "value": "SystemHidden"}]}}, {"type": "string", "var": "$parameters.properties.definitionVersion", "options": ["definition-version"], "group": "Properties", "help": {"short": "The policy version to assign.", "lines": ["The version of the policy definition or policy set definition to assign."]}}, {"type": "string", "var": "$parameters.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "Policy assignment description.", "lines": ["Full description of the policy assignment."]}}, {"type": "string", "var": "$parameters.properties.displayName", "options": ["display-name"], "group": "Properties", "help": {"short": "The display name of the policy assignment.", "lines": ["The display name of the policy assignment is not part of its ID, allowing for longer and more flexible naming."]}}, {"type": "string", "var": "$parameters.properties.enforcementMode", "options": ["e", "enforcement-mode"], "group": "Properties", "help": {"short": "The policy assignment enforcement mode.", "lines": ["The policy assignment enforcement mode. Possible values are Default and DoNotEnforce."]}, "default": {"value": "Default"}, "enum": {"items": [{"name": "Default", "value": "Default"}, {"name": "DoNotEnforce", "value": "DoNotEnforce"}]}}, {"type": "object", "var": "$parameters.properties.metadata", "options": ["metadata"], "group": "Properties", "help": {"short": "The policy assignment metadata.", "lines": ["The policy assignment metadata. Metadata is an open-ended object and is typically a collection of key value pairs."]}, "additionalProps": {"item": {"type": "any"}}}, {"type": "array<string>", "var": "$parameters.properties.notScopes", "options": ["not-scopes"], "group": "Properties", "help": {"short": "The policy assignment excluded scopes.", "lines": ["The collection of scopes within the policy assignment scope that it does not apply to."]}, "item": {"type": "string"}}, {"type": "array<object>", "var": "$parameters.properties.overrides", "options": ["overrides"], "group": "Properties", "help": {"short": "The policy override.", "lines": ["Array of objects that specify resource selector values to use for this assignment."]}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.overrides[].kind", "options": ["kind"], "help": {"short": "The override kind."}, "enum": {"items": [{"name": "definitionVersion", "value": "definitionVersion"}, {"name": "policyEffect", "value": "policyEffect"}]}}, {"type": "array<@Selector_create>", "var": "$parameters.properties.overrides[].selectors", "options": ["selectors"], "help": {"short": "The list of the selector expressions."}, "item": {"type": "@Selector_create"}}, {"type": "string", "var": "$parameters.properties.overrides[].value", "options": ["value"], "help": {"short": "The value to override the policy property."}}]}}, {"type": "object", "var": "$parameters.properties.parameters", "options": ["p", "params"], "group": "Properties", "help": {"short": "The parameter values for the assigned policy rule.", "lines": ["Object or file path containing the policy rule parameter values to be used when assigning the policy definition. The object keys are the parameter names."]}, "additionalProps": {"item": {"type": "object", "args": [{"type": "any", "var": "$parameters.properties.parameters{}.value", "options": ["value"], "help": {"short": "The value of the parameter."}}]}}}, {"type": "string", "var": "$parameters.properties.policyDefinitionId", "options": ["d", "policy-set-definition"], "group": "Properties", "help": {"short": "The policy definition or policy set definition to assign.", "lines": ["The resource ID of the policy definition (format: /{scope}/providers/Microsoft.Authorization/policyDefinitions/{name}) or policy set definition (format: /{scope}/providers/Microsoft.Authorization/policySetDefinitions/{name}) to be assigned."]}}, {"type": "array<object>", "var": "$parameters.properties.resourceSelectors", "options": ["resource-selectors"], "group": "Properties", "help": {"short": "The resource selectors list to filter policies by resource properties.", "lines": ["The collection of resource selector expressions used to filter policy assignment applicability by certain resource property values."]}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.resourceSelectors[].name", "options": ["name"], "help": {"short": "The name of the resource selector."}}, {"type": "array<object>", "var": "$parameters.properties.resourceSelectors[].selectors", "options": ["selectors"], "help": {"short": "The list of the selector expressions."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "@Selector_create.in", "options": ["in"], "help": {"short": "The list of values to filter in."}, "item": {"type": "string"}}, {"type": "string", "var": "@Selector_create.kind", "options": ["kind"], "help": {"short": "The selector kind."}, "enum": {"items": [{"name": "policyDefinitionReferenceId", "value": "policyDefinitionReferenceId"}, {"name": "resourceLocation", "value": "resourceLocation"}, {"name": "resourceType", "value": "resourceType"}, {"name": "resourceWithoutLocation", "value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "var": "@Selector_create.notIn", "options": ["not-in"], "help": {"short": "The list of values to filter out."}, "item": {"type": "string"}}], "cls": "Selector_create"}}]}}]}, {"name": "non-compliance-message", "args": [{"type": "array<object>", "var": "$parameters.properties.nonComplianceMessages", "options": ["m", "non-compliance-messages"], "group": "non-compliance-message", "help": {"short": "The messages that describe why a resource is non-compliant with the policy."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.nonComplianceMessages[].message", "options": ["m", "message"], "required": true, "group": "", "help": {"short": "A custom non-compliance message.", "lines": ["A message that describes the reasons a resource was determined to be non-compliant. This will be shown in 'deny' error messages and resource non-compliance results."]}}, {"type": "string", "var": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "options": ["r", "policy-definition-reference-id"], "group": "", "help": {"short": "The policy definition reference ID.", "lines": ["The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If not provided, the message applies to all policy definitions assigned by this policy assignment."]}}]}}]}], "operations": [{"operationId": "PolicyAssignments_Create", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}], "userAssigned": {"action": "create", "type": "array<string>", "name": "userAssigned", "arg": "$parameters.identity.userAssigned", "item": {"action": "create", "type": "string"}}, "systemAssigned": {"action": "create", "type": "string", "name": "systemAssigned", "arg": "$parameters.identity.systemAssigned"}}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "arg": "$parameters.properties.assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion", "arg": "$parameters.properties.definitionVersion"}, {"type": "string", "name": "description", "arg": "$parameters.properties.description"}, {"type": "string", "name": "displayName", "arg": "$parameters.properties.displayName"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "arg": "$parameters.properties.enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"type": "object", "name": "metadata", "arg": "$parameters.properties.metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "arg": "$parameters.properties.nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "arg": "$parameters.properties.nonComplianceMessages[].message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId", "arg": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "arg": "$parameters.properties.notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "arg": "$parameters.properties.overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "arg": "$parameters.properties.overrides[].kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_create>", "name": "selectors", "arg": "$parameters.properties.overrides[].selectors", "item": {"type": "@Selector_create"}}, {"type": "string", "name": "value", "arg": "$parameters.properties.overrides[].value"}]}}, {"type": "object", "name": "parameters", "arg": "$parameters.properties.parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value", "arg": "$parameters.properties.parameters{}.value"}]}}}, {"type": "string", "name": "policyDefinitionId", "arg": "$parameters.properties.policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "arg": "$parameters.properties.resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.resourceSelectors[].name"}, {"type": "array<object>", "name": "selectors", "arg": "$parameters.properties.resourceSelectors[].selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "arg": "@Selector_create.in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "arg": "@Selector_create.kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "arg": "@Selector_create.notIn", "item": {"type": "string"}}], "cls": "Selector_create"}}]}}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}, {"name": "Identity", "args": [{"nullable": true, "type": "string", "var": "$parameters.identity.type", "options": ["type"], "hide": true, "group": "Identity", "help": {"short": "The managed identity type.", "lines": ["The managed identity type is the only required field when adding a system or user assigned identity to a resource."]}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"nullable": true, "type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "hide": true, "group": "Identity", "help": {"short": "The user assigned managed identity.", "lines": ["The user assigned managed identity used by the policy assignment. The user assigned managed identity dictionary keys will be ARM resource ids (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}')."]}, "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"name": "Parameters", "args": [{"nullable": true, "type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "group": "Parameters", "help": {"short": "The location of the policy assignment.", "lines": ["The location of the policy assignment is only required when utilizing managed identity."]}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.assignmentType", "options": ["assignment-type"], "hide": true, "group": "Properties", "help": {"short": "The type of policy assignment. Possible values are NotSpecified, System, SystemHidden, and Custom. Immutable."}, "enum": {"items": [{"name": "Custom", "value": "Custom"}, {"name": "NotSpecified", "value": "NotSpecified"}, {"name": "System", "value": "System"}, {"name": "SystemHidden", "value": "SystemHidden"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.definitionVersion", "options": ["definition-version"], "group": "Properties", "help": {"short": "The policy version to assign.", "lines": ["The version of the policy definition or policy set definition to assign."]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "Policy assignment description.", "lines": ["Full description of the policy assignment."]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.displayName", "options": ["display-name"], "group": "Properties", "help": {"short": "The display name of the policy assignment.", "lines": ["The display name of the policy assignment is not part of its ID, allowing for longer and more flexible naming."]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.enforcementMode", "options": ["e", "enforcement-mode"], "group": "Properties", "help": {"short": "The policy assignment enforcement mode.", "lines": ["The policy assignment enforcement mode. Possible values are Default and DoNotEnforce."]}, "enum": {"items": [{"name": "Default", "value": "Default"}, {"name": "DoNotEnforce", "value": "DoNotEnforce"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.metadata", "options": ["metadata"], "group": "Properties", "help": {"short": "The policy assignment metadata.", "lines": ["The policy assignment metadata. Metadata is an open-ended object and is typically a collection of key value pairs."]}, "additionalProps": {"item": {"nullable": true, "type": "any"}}}, {"nullable": true, "type": "array<string>", "var": "$parameters.properties.notScopes", "options": ["not-scopes"], "group": "Properties", "help": {"short": "The policy assignment excluded scopes.", "lines": ["The collection of scopes within the policy assignment scope that it does not apply to."]}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.overrides", "options": ["overrides"], "group": "Properties", "help": {"short": "The policy property value override."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.overrides[].kind", "options": ["kind"], "help": {"short": "The override kind."}, "enum": {"items": [{"name": "definitionVersion", "value": "definitionVersion"}, {"name": "policyEffect", "value": "policyEffect"}]}}, {"nullable": true, "type": "array<@Selector_update>", "var": "$parameters.properties.overrides[].selectors", "options": ["selectors"], "help": {"short": "The list of the selector expressions."}, "item": {"nullable": true, "type": "@Selector_update"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.overrides[].value", "options": ["value"], "help": {"short": "The value to override the policy property."}}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.parameters", "options": ["p", "params"], "group": "Properties", "help": {"short": "The parameter values for the assigned policy rule.", "lines": ["Object or file path containing the policy rule parameter values to be used when assigning the policy definition. The object keys are the parameter names."]}, "additionalProps": {"item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "any", "var": "$parameters.properties.parameters{}.value", "options": ["value"], "help": {"short": "The value of the parameter."}}]}}}, {"nullable": true, "type": "string", "var": "$parameters.properties.policyDefinitionId", "options": ["d", "policy-set-definition"], "group": "Properties", "help": {"short": "The policy definition or policy set definition to assign.", "lines": ["The resource ID of the policy definition (format: /{scope}/providers/Microsoft.Authorization/policyDefinitions/{name}) or policy set definition (format: /{scope}/providers/Microsoft.Authorization/policySetDefinitions/{name}) to be assigned."]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.resourceSelectors", "options": ["resource-selectors"], "group": "Properties", "help": {"short": "The resource selectors list to filter policies by resource properties.", "lines": ["The collection of resource selector expressions used to filter policy assignment applicability by certain resource property values."]}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.resourceSelectors[].name", "options": ["name"], "help": {"short": "The name of the resource selector."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.resourceSelectors[].selectors", "options": ["selectors"], "help": {"short": "The list of the selector expressions."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<string>", "var": "@Selector_update.in", "options": ["in"], "help": {"short": "The list of values to filter in."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "@Selector_update.kind", "options": ["kind"], "help": {"short": "The selector kind."}, "enum": {"items": [{"name": "policyDefinitionReferenceId", "value": "policyDefinitionReferenceId"}, {"name": "resourceLocation", "value": "resourceLocation"}, {"name": "resourceType", "value": "resourceType"}, {"name": "resourceWithoutLocation", "value": "resourceWithoutLocation"}]}}, {"nullable": true, "type": "array<string>", "var": "@Selector_update.notIn", "options": ["not-in"], "help": {"short": "The list of values to filter out."}, "item": {"nullable": true, "type": "string"}}], "cls": "Selector_update"}}]}}]}, {"name": "non-compliance-message", "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.nonComplianceMessages", "options": ["m", "non-compliance-messages"], "group": "non-compliance-message", "help": {"short": "The messages that describe why a resource is non-compliant with the policy."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$parameters.properties.nonComplianceMessages[].message", "options": ["m", "message"], "group": "", "help": {"short": "A custom non-compliance message.", "lines": ["A message that describes the reasons a resource was determined to be non-compliant. This will be shown in 'deny' error messages and resource non-compliance results."]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "options": ["r", "policy-definition-reference-id"], "group": "", "help": {"short": "The policy definition reference ID.", "lines": ["The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If not provided, the message applies to all policy definitions assigned by this policy assignment."]}}]}}]}], "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "arg": "$parameters.properties.assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion", "arg": "$parameters.properties.definitionVersion"}, {"type": "string", "name": "description", "arg": "$parameters.properties.description"}, {"type": "string", "name": "displayName", "arg": "$parameters.properties.displayName"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "arg": "$parameters.properties.enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"type": "object", "name": "metadata", "arg": "$parameters.properties.metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "arg": "$parameters.properties.nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "arg": "$parameters.properties.nonComplianceMessages[].message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId", "arg": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "arg": "$parameters.properties.notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "arg": "$parameters.properties.overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "arg": "$parameters.properties.overrides[].kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_update>", "name": "selectors", "arg": "$parameters.properties.overrides[].selectors", "item": {"type": "@Selector_update"}}, {"type": "string", "name": "value", "arg": "$parameters.properties.overrides[].value"}]}}, {"type": "object", "name": "parameters", "arg": "$parameters.properties.parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value", "arg": "$parameters.properties.parameters{}.value"}]}}}, {"type": "string", "name": "policyDefinitionId", "arg": "$parameters.properties.policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "arg": "$parameters.properties.resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.resourceSelectors[].name"}, {"type": "array<object>", "name": "selectors", "arg": "$parameters.properties.resourceSelectors[].selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "arg": "@Selector_update.in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "arg": "@Selector_update.kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "arg": "@Selector_update.notIn", "item": {"type": "string"}}], "cls": "Selector_update"}}]}}], "clientFlatten": true}], "clientFlatten": true}}}}, {"operationId": "PolicyAssignments_Create", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "@PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}], "commandGroups": [{"name": "identity", "commands": [{"name": "assign", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "subresource": "identity", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}, {"name": "Parameters.identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$parameters.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "group": "Parameters.identity", "help": {"short": "Set the system managed identity."}}, {"blank": {"value": []}, "type": "array<string>", "var": "$parameters.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "Parameters.identity", "help": {"short": "Set the user managed identity."}, "item": {"type": "string"}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "object", "name": "identity"}}}, "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Subresource", "json": {"schema": {"action": "assign", "type": "IdentityObject", "name": "parameters.identity", "required": true, "userAssigned": {"action": "assign", "type": "array<string>", "name": "userAssigned", "arg": "$parameters.identity.userAssigned", "item": {"action": "assign", "type": "string"}}, "systemAssigned": {"action": "assign", "type": "string", "name": "systemAssigned", "arg": "$parameters.identity.systemAssigned"}}}}}, {"operationId": "PolicyAssignments_Create", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "@PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}], "confirmation": ""}, {"name": "remove", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "subresource": "identity", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}, {"name": "Parameters.identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$parameters.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "group": "Parameters.identity", "help": {"short": "Remove the system managed identity."}}, {"blank": {"value": []}, "type": "array<string>", "var": "$parameters.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "Parameters.identity", "help": {"short": "Remove the user managed identity."}, "item": {"type": "string"}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "object", "name": "identity"}}}, "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Subresource", "json": {"schema": {"action": "remove", "type": "IdentityObject", "name": "parameters.identity", "required": true, "userAssigned": {"action": "remove", "type": "array<string>", "name": "userAssigned", "arg": "$parameters.identity.userAssigned", "item": {"action": "remove", "type": "string"}}, "systemAssigned": {"action": "remove", "type": "string", "name": "systemAssigned", "arg": "$parameters.identity.systemAssigned"}}}}}, {"operationId": "PolicyAssignments_Create", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "@PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}], "confirmation": ""}, {"name": "show", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "subresource": "identity", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "object", "name": "identity"}}}, "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}], "confirmation": ""}]}, {"name": "non-compliance-message", "commands": [{"name": "list", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "subresource": "properties.nonComplianceMessages", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "array", "name": "properties.nonComplianceMessages"}}}, "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "array", "ref": "$Subresource", "clientFlatten": true}], "confirmation": ""}, {"name": "create", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "subresource": "properties.nonComplianceMessages[]", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}, {"type": "string", "var": "$parameters.properties.nonComplianceMessages[].message", "options": ["m", "message"], "required": true, "group": "", "help": {"short": "A custom non-compliance message.", "lines": ["A message that describes the reasons a resource was determined to be non-compliant. This will be shown in 'deny' error messages and resource non-compliance results."]}}, {"type": "string", "var": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "options": ["r", "policy-definition-reference-id"], "required": true, "group": "", "help": {"short": "The policy definition reference ID.", "lines": ["The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If not provided, the message applies to all policy definitions assigned by this policy assignment."]}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "array", "name": "properties.nonComplianceMessages", "item": {"type": "object"}, "identifiers": [{"type": "string", "name": "[].message", "arg": "$parameters.properties.nonComplianceMessages[].message", "required": true}, {"type": "string", "name": "[].policyDefinitionReferenceId", "arg": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "required": true}]}}}, "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceCreate": {"ref": "$Subresource", "json": {"schema": {"type": "object", "name": "parameters.properties.nonComplianceMessages[]", "required": true, "props": [{"type": "string", "name": "message", "arg": "$parameters.properties.nonComplianceMessages[].message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId", "arg": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId"}]}}}}, {"operationId": "PolicyAssignments_Create", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "@PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "subresource": "properties.nonComplianceMessages[]", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}, {"type": "string", "var": "$parameters.properties.nonComplianceMessages[].message", "options": ["m", "message"], "required": true, "group": "", "help": {"short": "A custom non-compliance message.", "lines": ["A message that describes the reasons a resource was determined to be non-compliant. This will be shown in 'deny' error messages and resource non-compliance results."]}}, {"type": "string", "var": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "options": ["r", "policy-definition-reference-id"], "required": true, "group": "", "help": {"short": "The policy definition reference ID.", "lines": ["The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If not provided, the message applies to all policy definitions assigned by this policy assignment."]}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "array", "name": "properties.nonComplianceMessages", "item": {"type": "object"}, "identifiers": [{"type": "string", "name": "[].message", "arg": "$parameters.properties.nonComplianceMessages[].message", "required": true}, {"type": "string", "name": "[].policyDefinitionReferenceId", "arg": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "required": true}]}}}, "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Subresource", "json": {"schema": {"type": "object", "name": "parameters.properties.nonComplianceMessages[]", "required": true, "props": [{"type": "string", "name": "message", "arg": "$parameters.properties.nonComplianceMessages[].message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId", "arg": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId"}]}}}}, {"operationId": "PolicyAssignments_Create", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "@PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "subresource": "properties.nonComplianceMessages[]", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}, {"type": "string", "var": "$parameters.properties.nonComplianceMessages[].message", "options": ["m", "message"], "required": true, "group": "", "help": {"short": "A custom non-compliance message.", "lines": ["A message that describes the reasons a resource was determined to be non-compliant. This will be shown in 'deny' error messages and resource non-compliance results."]}}, {"type": "string", "var": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "options": ["r", "policy-definition-reference-id"], "required": true, "group": "", "help": {"short": "The policy definition reference ID.", "lines": ["The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If not provided, the message applies to all policy definitions assigned by this policy assignment."]}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "array", "name": "properties.nonComplianceMessages", "item": {"type": "object"}, "identifiers": [{"type": "string", "name": "[].message", "arg": "$parameters.properties.nonComplianceMessages[].message", "required": true}, {"type": "string", "name": "[].policyDefinitionReferenceId", "arg": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "required": true}]}}}, "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceDelete": {"ref": "$Subresource", "json": {}}}, {"operationId": "PolicyAssignments_Create", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [201], "body": {"json": {"var": "$Instance", "schema": {"type": "@PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": ""}, {"name": "show", "version": "2024-05-01", "resources": [{"id": "/{scope}/providers/microsoft.authorization/policyassignments/{}", "version": "2024-05-01", "subresource": "properties.nonComplianceMessages[]", "swagger": "mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeUFzc2lnbm1lbnRzL3twb2xpY3lBc3NpZ25tZW50TmFtZX0=/V/MjAyNC0wNS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.policyAssignmentName", "options": ["n", "name"], "required": true, "group": "", "help": {"short": "The name of the policy assignment.", "lines": ["The name of the policy assignment is the name segment of its resource ID."]}, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "var": "$Path.scope", "options": ["scope"], "required": true, "group": "", "help": {"short": "The scope of the policy assignment.", "lines": ["Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'. The scope of an assignment is always the part of its ID preceding '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'. If scope is not provided, the scope will be the implied or specified subscription."]}}, {"type": "string", "var": "$parameters.properties.nonComplianceMessages[].message", "options": ["m", "message"], "required": true, "group": "", "help": {"short": "A custom non-compliance message.", "lines": ["A message that describes the reasons a resource was determined to be non-compliant. This will be shown in 'deny' error messages and resource non-compliance results."]}}, {"type": "string", "var": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "options": ["r", "policy-definition-reference-id"], "required": true, "group": "", "help": {"short": "The policy definition reference ID.", "lines": ["The policy definition reference ID within a policy set definition the message is intended for. This is only applicable if the policy assignment assigns a policy set definition. If not provided, the message applies to all policy definitions assigned by this policy assignment."]}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "array", "name": "properties.nonComplianceMessages", "item": {"type": "object"}, "identifiers": [{"type": "string", "name": "[].message", "arg": "$parameters.properties.nonComplianceMessages[].message", "required": true}, {"type": "string", "name": "[].policyDefinitionReferenceId", "arg": "$parameters.properties.nonComplianceMessages[].policyDefinitionReferenceId", "required": true}]}}}, "operations": [{"operationId": "PolicyAssignments_Get", "http": {"path": "/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "policyAssignmentName", "arg": "$Path.policyAssignmentName", "required": true, "format": {"pattern": "^[^<>*%&:\\?.+/]*[^<>*%&:\\?.+/ ]+$"}}, {"type": "string", "name": "scope", "arg": "$Path.scope", "required": true, "skipUrlEncoding": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-05-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "assignmentType", "enum": {"items": [{"value": "Custom"}, {"value": "NotSpecified"}, {"value": "System"}, {"value": "SystemHidden"}]}}, {"type": "string", "name": "definitionVersion"}, {"type": "string", "name": "description"}, {"type": "string", "name": "displayName"}, {"readOnly": true, "type": "string", "name": "effectiveDefinitionVersion"}, {"default": {"value": "Default"}, "type": "string", "name": "enforcementMode", "enum": {"items": [{"value": "Default"}, {"value": "DoNotEnforce"}]}}, {"readOnly": true, "type": "string", "name": "latestDefinitionVersion"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "any"}}}, {"type": "array<object>", "name": "nonComplianceMessages", "item": {"type": "object", "props": [{"type": "string", "name": "message", "required": true}, {"type": "string", "name": "policyDefinitionReferenceId"}]}, "identifiers": ["message", "policyDefinitionReferenceId"]}, {"type": "array<string>", "name": "notScopes", "item": {"type": "string"}}, {"type": "array<object>", "name": "overrides", "item": {"type": "object", "props": [{"type": "string", "name": "kind", "enum": {"items": [{"value": "definitionVersion"}, {"value": "policyEffect"}]}}, {"type": "array<@Selector_read>", "name": "selectors", "item": {"type": "@Selector_read"}}, {"type": "string", "name": "value"}]}}, {"type": "object", "name": "parameters", "additionalProps": {"item": {"type": "object", "props": [{"type": "any", "name": "value"}]}}}, {"type": "string", "name": "policyDefinitionId"}, {"type": "array<object>", "name": "resourceSelectors", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<object>", "name": "selectors", "item": {"type": "object", "props": [{"type": "array<string>", "name": "in", "item": {"type": "string"}}, {"type": "string", "name": "kind", "enum": {"items": [{"value": "policyDefinitionReferenceId"}, {"value": "resourceLocation"}, {"value": "resourceType"}, {"value": "resourceWithoutLocation"}]}}, {"type": "array<string>", "name": "notIn", "item": {"type": "string"}}], "cls": "Selector_read"}}]}}, {"readOnly": true, "type": "string", "name": "scope"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "PolicyAssignment_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}], "confirmation": ""}]}]}]}