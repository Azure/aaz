<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
  <commandGroup name="netappfiles volume">
    <command name="show" version="2023-07-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
          <help short="The name of the NetApp account"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
        </arg>
        <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
          <help short="The name of the capacity pool"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.volumeName" options="volume-name name n v" required="True" group="" idPart="child_name_2">
          <help short="The name of the volume"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="Volumes_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="poolName" arg="$Path.poolName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/capacityPools/{}/volumes/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="float" name="actualThroughputMibps"/>
                    <prop type="string" name="avsDataStore">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop nullable="True" type="string" name="backupId"/>
                    <prop readOnly="True" type="string" name="baremetalTenantId"/>
                    <prop type="string" name="capacityPoolResourceId"/>
                    <prop readOnly="True" nullable="True" type="integer32" name="cloneProgress"/>
                    <prop type="boolean" name="coolAccess">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="coolAccessRetrievalPolicy">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;Never&quot;"/>
                        <item value="&quot;OnRead&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="coolnessPeriod">
                      <format maximum="183" minimum="7"/>
                    </prop>
                    <prop type="string" name="creationToken" required="True">
                      <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                    </prop>
                    <prop type="object" name="dataProtection">
                      <prop type="object" name="backup">
                        <prop type="boolean" name="backupEnabled"/>
                        <prop type="string" name="backupPolicyId"/>
                        <prop type="string" name="backupVaultId"/>
                        <prop type="boolean" name="policyEnforced"/>
                      </prop>
                      <prop type="object" name="replication">
                        <prop type="string" name="endpointType">
                          <enum>
                            <item value="&quot;dst&quot;"/>
                            <item value="&quot;src&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="remotePath">
                          <prop type="string" name="externalHostName" required="True"/>
                          <prop type="string" name="serverName" required="True"/>
                          <prop type="string" name="volumeName" required="True"/>
                        </prop>
                        <prop type="string" name="remoteVolumeRegion"/>
                        <prop type="string" name="remoteVolumeResourceId" required="True"/>
                        <prop readOnly="True" type="string" name="replicationId"/>
                        <prop type="string" name="replicationSchedule">
                          <enum>
                            <item value="&quot;_10minutely&quot;"/>
                            <item value="&quot;daily&quot;"/>
                            <item value="&quot;hourly&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="snapshot">
                        <prop type="string" name="snapshotPolicyId"/>
                      </prop>
                      <prop type="object" name="volumeRelocation">
                        <prop readOnly="True" type="boolean" name="readyToBeFinalized"/>
                        <prop type="boolean" name="relocationRequested"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="dataStoreResourceId">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="defaultGroupQuotaInKiBs">
                      <default value="0"/>
                    </prop>
                    <prop type="integer64" name="defaultUserQuotaInKiBs">
                      <default value="0"/>
                    </prop>
                    <prop type="boolean" name="deleteBaseSnapshot"/>
                    <prop type="string" name="enableSubvolumes">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="boolean" name="encrypted"/>
                    <prop type="string" name="encryptionKeySource">
                      <default value="&quot;Microsoft.NetApp&quot;"/>
                      <enum>
                        <item value="&quot;Microsoft.KeyVault&quot;"/>
                        <item value="&quot;Microsoft.NetApp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="exportPolicy">
                      <prop type="array<object>" name="rules" identifiers="ruleIndex">
                        <item type="object">
                          <prop type="string" name="allowedClients"/>
                          <prop type="string" name="chownMode">
                            <default value="&quot;Restricted&quot;"/>
                            <enum>
                              <item value="&quot;Restricted&quot;"/>
                              <item value="&quot;Unrestricted&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="cifs"/>
                          <prop type="boolean" name="hasRootAccess">
                            <default value="true"/>
                          </prop>
                          <prop type="boolean" name="kerberos5ReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5ReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5iReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5iReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5pReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5pReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="nfsv3"/>
                          <prop type="boolean" name="nfsv41"/>
                          <prop type="integer32" name="ruleIndex"/>
                          <prop type="boolean" name="unixReadOnly"/>
                          <prop type="boolean" name="unixReadWrite"/>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="fileAccessLogs">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="fileSystemId">
                      <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                    </prop>
                    <prop readOnly="True" nullable="True" type="integer64" name="inheritedSizeInBytes"/>
                    <prop type="boolean" name="isDefaultQuotaEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isLargeVolume">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isRestoring"/>
                    <prop type="boolean" name="kerberosEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="keyVaultPrivateEndpointResourceId"/>
                    <prop type="boolean" name="ldapEnabled">
                      <default value="false"/>
                    </prop>
                    <prop readOnly="True" type="integer64" name="maximumNumberOfFiles"/>
                    <prop readOnly="True" type="array<object>" name="mountTargets" identifiers="fileSystemId">
                      <item type="object">
                        <prop type="string" name="fileSystemId" required="True">
                          <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                        </prop>
                        <prop readOnly="True" type="string" name="ipAddress"/>
                        <prop readOnly="True" type="string" name="mountTargetId">
                          <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                        </prop>
                        <prop type="string" name="smbServerFqdn"/>
                      </item>
                    </prop>
                    <prop type="string" name="networkFeatures">
                      <default value="&quot;Basic&quot;"/>
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Basic_Standard&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;Standard_Basic&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="networkSiblingSetId">
                      <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                    </prop>
                    <prop readOnly="True" nullable="True" type="string" name="originatingResourceId"/>
                    <prop type="array<object>" name="placementRules" identifiers="key">
                      <item type="object">
                        <prop type="string" name="key" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="protocolTypes">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" nullable="True" type="string" name="provisionedAvailabilityZone"/>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="proximityPlacementGroup"/>
                    <prop type="string" name="securityStyle">
                      <default value="&quot;unix&quot;"/>
                      <enum>
                        <item value="&quot;ntfs&quot;"/>
                        <item value="&quot;unix&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="serviceLevel">
                      <default value="&quot;Premium&quot;"/>
                      <enum>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StandardZRS&quot;"/>
                        <item value="&quot;Ultra&quot;"/>
                      </enum>
                    </prop>
                    <prop nullable="True" type="string" name="smbAccessBasedEnumeration">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="smbContinuouslyAvailable">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="smbEncryption">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="smbNonBrowsable">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="snapshotDirectoryVisible">
                      <default value="true"/>
                    </prop>
                    <prop nullable="True" type="string" name="snapshotId"/>
                    <prop readOnly="True" type="string" name="storageToNetworkProximity">
                      <enum>
                        <item value="&quot;AcrossT2&quot;"/>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;T1&quot;"/>
                        <item value="&quot;T2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="subnetId" required="True"/>
                    <prop readOnly="True" type="string" name="t2Network"/>
                    <prop nullable="True" type="float" name="throughputMibps"/>
                    <prop nullable="True" type="string" name="unixPermissions">
                      <format maxLength="4" minLength="4"/>
                    </prop>
                    <prop type="integer64" name="usageThreshold" required="True">
                      <default value="107374182400"/>
                      <format maximum="2638827906662400" minimum="107374182400"/>
                    </prop>
                    <prop readOnly="True" type="string" name="volumeGroupName"/>
                    <prop type="string" name="volumeSpecName"/>
                    <prop type="string" name="volumeType"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string">
                      <format maxLength="255" minLength="1"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-07-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
          <help short="The name of the NetApp account"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
        </arg>
        <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
          <help short="The name of the capacity pool"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.volumeName" options="volume-name name n v" required="True" group="" idPart="child_name_2">
          <help short="The name of the volume"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
        </arg>
        <arg type="boolean" var="$Query.forceDelete" options="force-delete force" group="">
          <help short="An option to force delete the volume. Will cleanup resources connected to the particular volume"/>
        </arg>
      </argGroup>
      <operation operationId="Volumes_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
          <request method="delete">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="poolName" arg="$Path.poolName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
            </path>
            <query>
              <param type="boolean" name="forceDelete" arg="$Query.forceDelete"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-07-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
          <help short="The name of the NetApp account"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
        </arg>
        <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
          <help short="The name of the capacity pool"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.volumeName" options="volume-name name n v" required="True" group="" idPart="child_name_2">
          <help short="The name of the volume"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Backup">
        <arg type="boolean" var="$body.properties.dataProtection.backup.backupEnabled" options="backup-enabled" group="Backup">
          <help short="Backup Enabled"/>
        </arg>
        <arg type="string" var="$body.properties.dataProtection.backup.backupPolicyId" options="backup-policy-id" group="Backup">
          <help short="Backup Policy Resource ID"/>
        </arg>
        <arg type="string" var="$body.properties.dataProtection.backup.backupVaultId" options="backup-vault-id" group="Backup">
          <help short="Backup Vault Resource ID"/>
        </arg>
        <arg type="boolean" var="$body.properties.dataProtection.backup.policyEnforced" options="policy-enforced" group="Backup">
          <help short="Policy Enforced"/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" required="True" group="Body">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<string>" var="$body.zones" options="zones" group="Body">
          <help short="Availability Zone"/>
          <item type="string">
            <format maxLength="255" minLength="1"/>
          </item>
        </arg>
      </argGroup>
      <argGroup name="CMK Encryption">
        <arg type="string" var="$body.properties.encryptionKeySource" options="encryption-key-source" group="CMK Encryption">
          <help short="Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'"/>
          <default value="&quot;Microsoft.NetApp&quot;"/>
          <enum>
            <item name="Microsoft.KeyVault" value="&quot;Microsoft.KeyVault&quot;"/>
            <item name="Microsoft.NetApp" value="&quot;Microsoft.NetApp&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.keyVaultPrivateEndpointResourceId" options="key-vault-private-endpoint-resource-id kv-private-endpoint-id" group="CMK Encryption">
          <help short="The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."/>
        </arg>
      </argGroup>
      <argGroup name="ExportPolicy">
        <arg type="array<object>" var="$body.properties.exportPolicy.rules" options="export-policy-rules rules" group="ExportPolicy">
          <help short="Export policy rule"/>
          <item type="object">
            <arg type="string" var="$body.properties.exportPolicy.rules[].allowedClients" options="allowed-clients" group="Export Policies">
              <help short="Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"/>
            </arg>
            <arg type="string" var="$body.properties.exportPolicy.rules[].chownMode" options="chown-mode" group="Export Policies">
              <help short="This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own."/>
              <default value="&quot;Restricted&quot;"/>
              <enum>
                <item name="Restricted" value="&quot;Restricted&quot;"/>
                <item name="Unrestricted" value="&quot;Unrestricted&quot;"/>
              </enum>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].cifs" options="cifs">
              <help short="Allows CIFS protocol"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].hasRootAccess" options="has-root-access" group="Export Policies">
              <help short="Has root access to volume"/>
              <default value="true"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5ReadOnly" options="kerberos5-read-only">
              <help short="Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later"/>
              <default value="false"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5ReadWrite" options="kerberos5-read-write">
              <help short="Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later"/>
              <default value="false"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5iReadOnly" options="kerberos5i-read-only">
              <help short="Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later"/>
              <default value="false"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5iReadWrite" options="kerberos5i-read-write">
              <help short="Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later"/>
              <default value="false"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5pReadOnly" options="kerberos5p-read-only">
              <help short="Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later"/>
              <default value="false"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5pReadWrite" options="kerberos5p-read-write">
              <help short="Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later"/>
              <default value="false"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].nfsv3" options="nfsv3">
              <help short="Allows NFSv3 protocol. Enable only for NFSv3 type volumes"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].nfsv41" options="nfsv41">
              <help short="Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"/>
            </arg>
            <arg type="integer32" var="$body.properties.exportPolicy.rules[].ruleIndex" options="rule-index">
              <help short="Order index"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].unixReadOnly" options="unix-read-only">
              <help short="Read only access"/>
            </arg>
            <arg type="boolean" var="$body.properties.exportPolicy.rules[].unixReadWrite" options="unix-read-write">
              <help short="Read and write access"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.avsDataStore" options="avs-data-store" group="Properties">
          <help short="Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose"/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.backupId" options="backup-id" group="Properties">
          <help short="Resource identifier used to identify the Backup."/>
        </arg>
        <arg type="string" var="$body.properties.capacityPoolResourceId" options="capacity-pool-resource-id pool-resource-id" group="Properties">
          <help short="Pool Resource Id used in case of creating a volume through volume group"/>
        </arg>
        <arg type="boolean" var="$body.properties.coolAccess" options="cool-access" group="Properties">
          <help short="Specifies whether Cool Access(tiering) is enabled for the volume."/>
          <default value="false"/>
        </arg>
        <arg type="string" var="$body.properties.coolAccessRetrievalPolicy" options="cool-access-retrieval-policy ca-retrieval-policy" group="Properties">
          <help short="coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are:   Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.  OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.  Never - No client-driven data is pulled from cool tier to standard storage."/>
          <enum>
            <item name="Default" value="&quot;Default&quot;"/>
            <item name="Never" value="&quot;Never&quot;"/>
            <item name="OnRead" value="&quot;OnRead&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$body.properties.coolnessPeriod" options="coolness-period" group="Properties">
          <help short="Specifies the number of days after which data that is not accessed by clients will be tiered."/>
          <format maximum="183" minimum="7"/>
        </arg>
        <arg type="string" var="$body.properties.creationToken" options="creation-token file-path" required="True" group="Properties">
          <help short="A unique file path for the volume. Used when creating mount targets"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
        </arg>
        <arg type="integer64" var="$body.properties.defaultGroupQuotaInKiBs" options="default-group-quota-in-ki-bs default-group-quota" group="Properties">
          <help short="Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies."/>
          <default value="0"/>
        </arg>
        <arg type="integer64" var="$body.properties.defaultUserQuotaInKiBs" options="default-user-quota-in-ki-bs default-user-quota" group="Properties">
          <help short="Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies ."/>
          <default value="0"/>
        </arg>
        <arg type="boolean" var="$body.properties.deleteBaseSnapshot" options="delete-base-snapshot" group="Properties">
          <help short="If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"/>
        </arg>
        <arg type="string" var="$body.properties.enableSubvolumes" options="enable-subvolumes" group="Properties">
          <help short="Flag indicating whether subvolume operations are enabled on the volume"/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$body.properties.isDefaultQuotaEnabled" options="is-default-quota-enabled default-quota-enabled" group="Properties">
          <help short="Specifies if default quota is enabled for the volume."/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$body.properties.isLargeVolume" options="is-large-volume" group="Properties">
          <help short="Specifies whether volume is a Large Volume or Regular Volume."/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$body.properties.isRestoring" options="is-restoring" group="Properties">
          <help short="Restoring"/>
        </arg>
        <arg type="boolean" var="$body.properties.kerberosEnabled" options="kerberos-enabled" group="Properties">
          <help short="Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later"/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$body.properties.ldapEnabled" options="ldap-enabled" group="Properties">
          <help short="Specifies whether LDAP is enabled or not for a given NFS volume."/>
          <default value="false"/>
        </arg>
        <arg type="string" var="$body.properties.networkFeatures" options="network-features" group="Properties">
          <help short="Basic network, or Standard features available to the volume."/>
          <default value="&quot;Basic&quot;"/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="Basic_Standard" value="&quot;Basic_Standard&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="Standard_Basic" value="&quot;Standard_Basic&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$body.properties.placementRules" options="placement-rules" group="Properties">
          <help short="Application specific placement rules for the particular volume"/>
          <item type="object">
            <arg type="string" var="$body.properties.placementRules[].key" options="key" required="True">
              <help short="Key for an application specific parameter for the placement of volumes in the volume group"/>
            </arg>
            <arg type="string" var="$body.properties.placementRules[].value" options="value" required="True">
              <help short="Value for an application specific parameter for the placement of volumes in the volume group"/>
            </arg>
          </item>
        </arg>
        <arg type="array<string>" var="$body.properties.protocolTypes" options="protocol-types" group="Properties">
          <help short="Set of protocol types, default NFSv3, CIFS for SMB protocol"/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$body.properties.proximityPlacementGroup" options="proximity-placement-group ppg" group="Properties">
          <help short="Proximity placement group associated with the volume"/>
        </arg>
        <arg type="string" var="$body.properties.securityStyle" options="security-style" group="Properties">
          <help short="The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol"/>
          <default value="&quot;unix&quot;"/>
          <enum>
            <item name="ntfs" value="&quot;ntfs&quot;"/>
            <item name="unix" value="&quot;unix&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.serviceLevel" options="service-level" group="Properties">
          <help short="serviceLevel"/>
          <default value="&quot;Premium&quot;"/>
          <enum>
            <item name="Premium" value="&quot;Premium&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="StandardZRS" value="&quot;StandardZRS&quot;"/>
            <item name="Ultra" value="&quot;Ultra&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.smbAccessBasedEnumeration" options="smb-access-based-enumeration smb-access-enumeration" group="Properties">
          <help short="Enables access based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$body.properties.smbContinuouslyAvailable" options="smb-continuously-available smb-continuously-avl" group="Properties">
          <help short="Enables continuously available share property for smb volume. Only applicable for SMB volume"/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$body.properties.smbEncryption" options="smb-encryption" group="Properties">
          <help short="Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later"/>
          <default value="false"/>
        </arg>
        <arg type="string" var="$body.properties.smbNonBrowsable" options="smb-non-browsable" group="Properties">
          <help short="Enables non browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$body.properties.snapshotDirectoryVisible" options="snapshot-directory-visible snapshot-dir-visible" group="Properties">
          <help short="If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."/>
          <default value="true"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.snapshotId" options="snapshot-id" group="Properties">
          <help short="Resource identifier used to identify the Snapshot."/>
        </arg>
        <arg type="string" var="$body.properties.subnetId" options="subnet-id subnet" required="True" group="Properties">
          <help short="The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"/>
          <default value="&quot;default&quot;"/>
        </arg>
        <arg nullable="True" type="float" var="$body.properties.throughputMibps" options="throughput-mibps" group="Properties">
          <help short="Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.unixPermissions" options="unix-permissions" group="Properties">
          <help short="UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users."/>
          <default value="&quot;0770&quot;"/>
          <format maxLength="4" minLength="4"/>
        </arg>
        <arg type="integer64" var="$body.properties.usageThreshold" options="usage-threshold" required="True" group="Properties">
          <help short="Maximum storage quota allowed for a file system in bytes." lines="LargeVolume. alerting Minimum 100TiB, 500Tib quota only. Upper limit This soft used size GiB. for 100 for is is is a"/>
          <default value="107374182400"/>
          <format maximum="2638827906662400" minimum="107374182400"/>
        </arg>
        <arg type="string" var="$body.properties.volumeSpecName" options="volume-spec-name" group="Properties">
          <help short="Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log"/>
        </arg>
        <arg type="string" var="$body.properties.volumeType" options="volume-type" group="Properties">
          <help short="What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection"/>
        </arg>
      </argGroup>
      <argGroup name="Replication">
        <arg type="string" var="$body.properties.dataProtection.replication.endpointType" options="endpoint-type" group="Replication">
          <help short="Indicates whether the local volume is the source or destination for the Volume Replication"/>
          <enum>
            <item name="dst" value="&quot;dst&quot;"/>
            <item name="src" value="&quot;src&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$body.properties.dataProtection.replication.remotePath" options="remote-path" group="Replication">
          <help short="The full path to a volume that is to be migrated into ANF. Required for Migration volumes"/>
          <arg type="string" var="$body.properties.dataProtection.replication.remotePath.externalHostName" options="external-host-name" required="True">
            <help short="The Path to a ONTAP Host"/>
          </arg>
          <arg type="string" var="$body.properties.dataProtection.replication.remotePath.serverName" options="server-name" required="True">
            <help short="The name of a server on the ONTAP Host"/>
          </arg>
          <arg type="string" var="$body.properties.dataProtection.replication.remotePath.volumeName" options="volume-name" required="True">
            <help short="The name of a volume on the server"/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.dataProtection.replication.remoteVolumeRegion" options="remote-volume-region" group="Replication">
          <help short="The remote region for the other end of the Volume Replication."/>
        </arg>
        <arg type="string" var="$body.properties.dataProtection.replication.remoteVolumeResourceId" options="remote-volume-resource-id remote-volume-id" group="Replication">
          <help short="The resource ID of the remote volume."/>
        </arg>
        <arg type="string" var="$body.properties.dataProtection.replication.replicationSchedule" options="replication-schedule" group="Replication">
          <help short="Schedule"/>
          <enum>
            <item name="_10minutely" value="&quot;_10minutely&quot;"/>
            <item name="daily" value="&quot;daily&quot;"/>
            <item name="hourly" value="&quot;hourly&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Snapshot">
        <arg type="string" var="$body.properties.dataProtection.snapshot.snapshotPolicyId" options="snapshot-policy-id" group="Snapshot">
          <help short="Snapshot Policy ResourceId"/>
        </arg>
      </argGroup>
      <argGroup name="VolumeRelocation">
        <arg type="boolean" var="$body.properties.dataProtection.volumeRelocation.relocationRequested" options="relocation-requested" group="VolumeRelocation">
          <help short="Has relocation been requested for this volume"/>
        </arg>
      </argGroup>
      <operation operationId="Volumes_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
          <request method="put">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="poolName" arg="$Path.poolName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="avsDataStore" arg="$body.properties.avsDataStore">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop nullable="True" type="string" name="backupId" arg="$body.properties.backupId"/>
                    <prop type="string" name="capacityPoolResourceId" arg="$body.properties.capacityPoolResourceId"/>
                    <prop type="boolean" name="coolAccess" arg="$body.properties.coolAccess">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="coolAccessRetrievalPolicy" arg="$body.properties.coolAccessRetrievalPolicy">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;Never&quot;"/>
                        <item value="&quot;OnRead&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="coolnessPeriod" arg="$body.properties.coolnessPeriod">
                      <format maximum="183" minimum="7"/>
                    </prop>
                    <prop type="string" name="creationToken" arg="$body.properties.creationToken" required="True">
                      <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                    </prop>
                    <prop type="object" name="dataProtection">
                      <prop type="object" name="backup">
                        <prop type="boolean" name="backupEnabled" arg="$body.properties.dataProtection.backup.backupEnabled"/>
                        <prop type="string" name="backupPolicyId" arg="$body.properties.dataProtection.backup.backupPolicyId"/>
                        <prop type="string" name="backupVaultId" arg="$body.properties.dataProtection.backup.backupVaultId"/>
                        <prop type="boolean" name="policyEnforced" arg="$body.properties.dataProtection.backup.policyEnforced"/>
                      </prop>
                      <prop type="object" name="replication">
                        <prop type="string" name="endpointType" arg="$body.properties.dataProtection.replication.endpointType">
                          <enum>
                            <item value="&quot;dst&quot;"/>
                            <item value="&quot;src&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="remotePath" arg="$body.properties.dataProtection.replication.remotePath">
                          <prop type="string" name="externalHostName" arg="$body.properties.dataProtection.replication.remotePath.externalHostName" required="True"/>
                          <prop type="string" name="serverName" arg="$body.properties.dataProtection.replication.remotePath.serverName" required="True"/>
                          <prop type="string" name="volumeName" arg="$body.properties.dataProtection.replication.remotePath.volumeName" required="True"/>
                        </prop>
                        <prop type="string" name="remoteVolumeRegion" arg="$body.properties.dataProtection.replication.remoteVolumeRegion"/>
                        <prop type="string" name="remoteVolumeResourceId" arg="$body.properties.dataProtection.replication.remoteVolumeResourceId" required="True"/>
                        <prop type="string" name="replicationSchedule" arg="$body.properties.dataProtection.replication.replicationSchedule">
                          <enum>
                            <item value="&quot;_10minutely&quot;"/>
                            <item value="&quot;daily&quot;"/>
                            <item value="&quot;hourly&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="snapshot">
                        <prop type="string" name="snapshotPolicyId" arg="$body.properties.dataProtection.snapshot.snapshotPolicyId"/>
                      </prop>
                      <prop type="object" name="volumeRelocation">
                        <prop type="boolean" name="relocationRequested" arg="$body.properties.dataProtection.volumeRelocation.relocationRequested"/>
                      </prop>
                    </prop>
                    <prop type="integer64" name="defaultGroupQuotaInKiBs" arg="$body.properties.defaultGroupQuotaInKiBs">
                      <default value="0"/>
                    </prop>
                    <prop type="integer64" name="defaultUserQuotaInKiBs" arg="$body.properties.defaultUserQuotaInKiBs">
                      <default value="0"/>
                    </prop>
                    <prop type="boolean" name="deleteBaseSnapshot" arg="$body.properties.deleteBaseSnapshot"/>
                    <prop type="string" name="enableSubvolumes" arg="$body.properties.enableSubvolumes">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="encryptionKeySource" arg="$body.properties.encryptionKeySource">
                      <default value="&quot;Microsoft.NetApp&quot;"/>
                      <enum>
                        <item value="&quot;Microsoft.KeyVault&quot;"/>
                        <item value="&quot;Microsoft.NetApp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="exportPolicy">
                      <prop type="array<object>" name="rules" arg="$body.properties.exportPolicy.rules" identifiers="ruleIndex">
                        <item type="object">
                          <prop type="string" name="allowedClients" arg="$body.properties.exportPolicy.rules[].allowedClients"/>
                          <prop type="string" name="chownMode" arg="$body.properties.exportPolicy.rules[].chownMode">
                            <default value="&quot;Restricted&quot;"/>
                            <enum>
                              <item value="&quot;Restricted&quot;"/>
                              <item value="&quot;Unrestricted&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="cifs" arg="$body.properties.exportPolicy.rules[].cifs"/>
                          <prop type="boolean" name="hasRootAccess" arg="$body.properties.exportPolicy.rules[].hasRootAccess">
                            <default value="true"/>
                          </prop>
                          <prop type="boolean" name="kerberos5ReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5ReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5ReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5ReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5iReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5iReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5iReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5iReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5pReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5pReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5pReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5pReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="nfsv3" arg="$body.properties.exportPolicy.rules[].nfsv3"/>
                          <prop type="boolean" name="nfsv41" arg="$body.properties.exportPolicy.rules[].nfsv41"/>
                          <prop type="integer32" name="ruleIndex" arg="$body.properties.exportPolicy.rules[].ruleIndex"/>
                          <prop type="boolean" name="unixReadOnly" arg="$body.properties.exportPolicy.rules[].unixReadOnly"/>
                          <prop type="boolean" name="unixReadWrite" arg="$body.properties.exportPolicy.rules[].unixReadWrite"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="boolean" name="isDefaultQuotaEnabled" arg="$body.properties.isDefaultQuotaEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isLargeVolume" arg="$body.properties.isLargeVolume">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isRestoring" arg="$body.properties.isRestoring"/>
                    <prop type="boolean" name="kerberosEnabled" arg="$body.properties.kerberosEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="keyVaultPrivateEndpointResourceId" arg="$body.properties.keyVaultPrivateEndpointResourceId"/>
                    <prop type="boolean" name="ldapEnabled" arg="$body.properties.ldapEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="networkFeatures" arg="$body.properties.networkFeatures">
                      <default value="&quot;Basic&quot;"/>
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Basic_Standard&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;Standard_Basic&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="placementRules" arg="$body.properties.placementRules" identifiers="key">
                      <item type="object">
                        <prop type="string" name="key" arg="$body.properties.placementRules[].key" required="True"/>
                        <prop type="string" name="value" arg="$body.properties.placementRules[].value" required="True"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="protocolTypes" arg="$body.properties.protocolTypes">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="proximityPlacementGroup" arg="$body.properties.proximityPlacementGroup"/>
                    <prop type="string" name="securityStyle" arg="$body.properties.securityStyle">
                      <default value="&quot;unix&quot;"/>
                      <enum>
                        <item value="&quot;ntfs&quot;"/>
                        <item value="&quot;unix&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="serviceLevel" arg="$body.properties.serviceLevel">
                      <default value="&quot;Premium&quot;"/>
                      <enum>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StandardZRS&quot;"/>
                        <item value="&quot;Ultra&quot;"/>
                      </enum>
                    </prop>
                    <prop nullable="True" type="string" name="smbAccessBasedEnumeration" arg="$body.properties.smbAccessBasedEnumeration">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="smbContinuouslyAvailable" arg="$body.properties.smbContinuouslyAvailable">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="smbEncryption" arg="$body.properties.smbEncryption">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="smbNonBrowsable" arg="$body.properties.smbNonBrowsable">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="snapshotDirectoryVisible" arg="$body.properties.snapshotDirectoryVisible">
                      <default value="true"/>
                    </prop>
                    <prop nullable="True" type="string" name="snapshotId" arg="$body.properties.snapshotId"/>
                    <prop type="string" name="subnetId" arg="$body.properties.subnetId" required="True"/>
                    <prop nullable="True" type="float" name="throughputMibps" arg="$body.properties.throughputMibps"/>
                    <prop nullable="True" type="string" name="unixPermissions" arg="$body.properties.unixPermissions">
                      <format maxLength="4" minLength="4"/>
                    </prop>
                    <prop type="integer64" name="usageThreshold" arg="$body.properties.usageThreshold" required="True">
                      <default value="107374182400"/>
                      <format maximum="2638827906662400" minimum="107374182400"/>
                    </prop>
                    <prop type="string" name="volumeSpecName" arg="$body.properties.volumeSpecName"/>
                    <prop type="string" name="volumeType" arg="$body.properties.volumeType"/>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop type="array<string>" name="zones" arg="$body.zones">
                    <item type="string">
                      <format maxLength="255" minLength="1"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/capacityPools/{}/volumes/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="float" name="actualThroughputMibps"/>
                    <prop type="string" name="avsDataStore">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop nullable="True" type="string" name="backupId"/>
                    <prop readOnly="True" type="string" name="baremetalTenantId"/>
                    <prop type="string" name="capacityPoolResourceId"/>
                    <prop readOnly="True" nullable="True" type="integer32" name="cloneProgress"/>
                    <prop type="boolean" name="coolAccess">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="coolAccessRetrievalPolicy">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;Never&quot;"/>
                        <item value="&quot;OnRead&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="coolnessPeriod">
                      <format maximum="183" minimum="7"/>
                    </prop>
                    <prop type="string" name="creationToken" required="True">
                      <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                    </prop>
                    <prop type="object" name="dataProtection">
                      <prop type="object" name="backup">
                        <prop type="boolean" name="backupEnabled"/>
                        <prop type="string" name="backupPolicyId"/>
                        <prop type="string" name="backupVaultId"/>
                        <prop type="boolean" name="policyEnforced"/>
                      </prop>
                      <prop type="object" name="replication">
                        <prop type="string" name="endpointType">
                          <enum>
                            <item value="&quot;dst&quot;"/>
                            <item value="&quot;src&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="remotePath">
                          <prop type="string" name="externalHostName" required="True"/>
                          <prop type="string" name="serverName" required="True"/>
                          <prop type="string" name="volumeName" required="True"/>
                        </prop>
                        <prop type="string" name="remoteVolumeRegion"/>
                        <prop type="string" name="remoteVolumeResourceId" required="True"/>
                        <prop readOnly="True" type="string" name="replicationId"/>
                        <prop type="string" name="replicationSchedule">
                          <enum>
                            <item value="&quot;_10minutely&quot;"/>
                            <item value="&quot;daily&quot;"/>
                            <item value="&quot;hourly&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="snapshot">
                        <prop type="string" name="snapshotPolicyId"/>
                      </prop>
                      <prop type="object" name="volumeRelocation">
                        <prop readOnly="True" type="boolean" name="readyToBeFinalized"/>
                        <prop type="boolean" name="relocationRequested"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="dataStoreResourceId">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="defaultGroupQuotaInKiBs">
                      <default value="0"/>
                    </prop>
                    <prop type="integer64" name="defaultUserQuotaInKiBs">
                      <default value="0"/>
                    </prop>
                    <prop type="boolean" name="deleteBaseSnapshot"/>
                    <prop type="string" name="enableSubvolumes">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="boolean" name="encrypted"/>
                    <prop type="string" name="encryptionKeySource">
                      <default value="&quot;Microsoft.NetApp&quot;"/>
                      <enum>
                        <item value="&quot;Microsoft.KeyVault&quot;"/>
                        <item value="&quot;Microsoft.NetApp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="exportPolicy">
                      <prop type="array<object>" name="rules" identifiers="ruleIndex">
                        <item type="object">
                          <prop type="string" name="allowedClients"/>
                          <prop type="string" name="chownMode">
                            <default value="&quot;Restricted&quot;"/>
                            <enum>
                              <item value="&quot;Restricted&quot;"/>
                              <item value="&quot;Unrestricted&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="cifs"/>
                          <prop type="boolean" name="hasRootAccess">
                            <default value="true"/>
                          </prop>
                          <prop type="boolean" name="kerberos5ReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5ReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5iReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5iReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5pReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5pReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="nfsv3"/>
                          <prop type="boolean" name="nfsv41"/>
                          <prop type="integer32" name="ruleIndex"/>
                          <prop type="boolean" name="unixReadOnly"/>
                          <prop type="boolean" name="unixReadWrite"/>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="fileAccessLogs">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="fileSystemId">
                      <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                    </prop>
                    <prop readOnly="True" nullable="True" type="integer64" name="inheritedSizeInBytes"/>
                    <prop type="boolean" name="isDefaultQuotaEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isLargeVolume">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isRestoring"/>
                    <prop type="boolean" name="kerberosEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="keyVaultPrivateEndpointResourceId"/>
                    <prop type="boolean" name="ldapEnabled">
                      <default value="false"/>
                    </prop>
                    <prop readOnly="True" type="integer64" name="maximumNumberOfFiles"/>
                    <prop readOnly="True" type="array<object>" name="mountTargets" identifiers="fileSystemId">
                      <item type="object">
                        <prop type="string" name="fileSystemId" required="True">
                          <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                        </prop>
                        <prop readOnly="True" type="string" name="ipAddress"/>
                        <prop readOnly="True" type="string" name="mountTargetId">
                          <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                        </prop>
                        <prop type="string" name="smbServerFqdn"/>
                      </item>
                    </prop>
                    <prop type="string" name="networkFeatures">
                      <default value="&quot;Basic&quot;"/>
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Basic_Standard&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;Standard_Basic&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="networkSiblingSetId">
                      <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                    </prop>
                    <prop readOnly="True" nullable="True" type="string" name="originatingResourceId"/>
                    <prop type="array<object>" name="placementRules" identifiers="key">
                      <item type="object">
                        <prop type="string" name="key" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="protocolTypes">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" nullable="True" type="string" name="provisionedAvailabilityZone"/>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="proximityPlacementGroup"/>
                    <prop type="string" name="securityStyle">
                      <default value="&quot;unix&quot;"/>
                      <enum>
                        <item value="&quot;ntfs&quot;"/>
                        <item value="&quot;unix&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="serviceLevel">
                      <default value="&quot;Premium&quot;"/>
                      <enum>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StandardZRS&quot;"/>
                        <item value="&quot;Ultra&quot;"/>
                      </enum>
                    </prop>
                    <prop nullable="True" type="string" name="smbAccessBasedEnumeration">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="smbContinuouslyAvailable">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="smbEncryption">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="smbNonBrowsable">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="snapshotDirectoryVisible">
                      <default value="true"/>
                    </prop>
                    <prop nullable="True" type="string" name="snapshotId"/>
                    <prop readOnly="True" type="string" name="storageToNetworkProximity">
                      <enum>
                        <item value="&quot;AcrossT2&quot;"/>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;T1&quot;"/>
                        <item value="&quot;T2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="subnetId" required="True"/>
                    <prop readOnly="True" type="string" name="t2Network"/>
                    <prop nullable="True" type="float" name="throughputMibps"/>
                    <prop nullable="True" type="string" name="unixPermissions">
                      <format maxLength="4" minLength="4"/>
                    </prop>
                    <prop type="integer64" name="usageThreshold" required="True">
                      <default value="107374182400"/>
                      <format maximum="2638827906662400" minimum="107374182400"/>
                    </prop>
                    <prop readOnly="True" type="string" name="volumeGroupName"/>
                    <prop type="string" name="volumeSpecName"/>
                    <prop type="string" name="volumeType"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string">
                      <format maxLength="255" minLength="1"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-07-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
          <help short="The name of the NetApp account"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
        </arg>
        <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
          <help short="The name of the capacity pool"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.volumeName" options="volume-name name n v" required="True" group="" idPart="child_name_2">
          <help short="The name of the volume"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Backup">
        <arg nullable="True" type="boolean" var="$body.properties.dataProtection.backup.backupEnabled" options="backup-enabled" group="Backup">
          <help short="Backup Enabled"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.dataProtection.backup.backupPolicyId" options="backup-policy-id" group="Backup">
          <help short="Backup Policy Resource ID"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.dataProtection.backup.backupVaultId" options="backup-vault-id" group="Backup">
          <help short="Backup Vault Resource ID"/>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.dataProtection.backup.policyEnforced" options="policy-enforced" group="Backup">
          <help short="Policy Enforced"/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="CMK Encryption">
        <arg nullable="True" type="string" var="$body.properties.encryptionKeySource" options="encryption-key-source" group="CMK Encryption">
          <help short="Source of key used to encrypt data in volume. Applicable if NetApp account has encryption.keySource = 'Microsoft.KeyVault'. Possible values (case-insensitive) are: 'Microsoft.NetApp, Microsoft.KeyVault'"/>
          <enum>
            <item name="Microsoft.KeyVault" value="&quot;Microsoft.KeyVault&quot;"/>
            <item name="Microsoft.NetApp" value="&quot;Microsoft.NetApp&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.keyVaultPrivateEndpointResourceId" options="key-vault-private-endpoint-resource-id kv-private-endpoint-id" group="CMK Encryption">
          <help short="The resource ID of private endpoint for KeyVault. It must reside in the same VNET as the volume. Only applicable if encryptionKeySource = 'Microsoft.KeyVault'."/>
        </arg>
      </argGroup>
      <argGroup name="ExportPolicy">
        <arg nullable="True" type="array<object>" var="$body.properties.exportPolicy.rules" options="export-policy-rules rules" group="ExportPolicy">
          <help short="Export policy rule"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$body.properties.exportPolicy.rules[].allowedClients" options="allowed-clients" group="Export Policies">
              <help short="Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"/>
            </arg>
            <arg nullable="True" type="string" var="$body.properties.exportPolicy.rules[].chownMode" options="chown-mode" group="Export Policies">
              <help short="This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own."/>
              <enum>
                <item name="Restricted" value="&quot;Restricted&quot;"/>
                <item name="Unrestricted" value="&quot;Unrestricted&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].cifs" options="cifs">
              <help short="Allows CIFS protocol"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].hasRootAccess" options="has-root-access" group="Export Policies">
              <help short="Has root access to volume"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5ReadOnly" options="kerberos5-read-only">
              <help short="Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5ReadWrite" options="kerberos5-read-write">
              <help short="Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5iReadOnly" options="kerberos5i-read-only">
              <help short="Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5iReadWrite" options="kerberos5i-read-write">
              <help short="Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5pReadOnly" options="kerberos5p-read-only">
              <help short="Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5pReadWrite" options="kerberos5p-read-write">
              <help short="Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].nfsv3" options="nfsv3">
              <help short="Allows NFSv3 protocol. Enable only for NFSv3 type volumes"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].nfsv41" options="nfsv41">
              <help short="Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"/>
            </arg>
            <arg nullable="True" type="integer32" var="$body.properties.exportPolicy.rules[].ruleIndex" options="rule-index">
              <help short="Order index"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].unixReadOnly" options="unix-read-only">
              <help short="Read only access"/>
            </arg>
            <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].unixReadWrite" options="unix-read-write">
              <help short="Read and write access"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$body.properties.avsDataStore" options="avs-data-store" group="Properties">
          <help short="Specifies whether the volume is enabled for Azure VMware Solution (AVS) datastore purpose"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.capacityPoolResourceId" options="capacity-pool-resource-id pool-resource-id" group="Properties">
          <help short="Pool Resource Id used in case of creating a volume through volume group"/>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.coolAccess" options="cool-access" group="Properties">
          <help short="Specifies whether Cool Access(tiering) is enabled for the volume."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.coolAccessRetrievalPolicy" options="cool-access-retrieval-policy ca-retrieval-policy" group="Properties">
          <help short="coolAccessRetrievalPolicy determines the data retrieval behavior from the cool tier to standard storage based on the read pattern for cool access enabled volumes. The possible values for this field are:   Default - Data will be pulled from cool tier to standard storage on random reads. This policy is the default.  OnRead - All client-driven data read is pulled from cool tier to standard storage on both sequential and random reads.  Never - No client-driven data is pulled from cool tier to standard storage."/>
          <enum>
            <item name="Default" value="&quot;Default&quot;"/>
            <item name="Never" value="&quot;Never&quot;"/>
            <item name="OnRead" value="&quot;OnRead&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$body.properties.coolnessPeriod" options="coolness-period" group="Properties">
          <help short="Specifies the number of days after which data that is not accessed by clients will be tiered."/>
          <format maximum="183" minimum="7"/>
        </arg>
        <arg type="string" var="$body.properties.creationToken" options="creation-token" group="Properties">
          <help short="A unique file path for the volume. Used when creating mount targets"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
        </arg>
        <arg nullable="True" type="integer64" var="$body.properties.defaultGroupQuotaInKiBs" options="default-group-quota-in-ki-bs default-group-quota" group="Properties">
          <help short="Default group quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies."/>
        </arg>
        <arg nullable="True" type="integer64" var="$body.properties.defaultUserQuotaInKiBs" options="default-user-quota-in-ki-bs default-user-quota" group="Properties">
          <help short="Default user quota for volume in KiBs. If isDefaultQuotaEnabled is set, the minimum value of 4 KiBs applies ."/>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.deleteBaseSnapshot" options="delete-base-snapshot" group="Properties">
          <help short="If enabled (true) the snapshot the volume was created from will be automatically deleted after the volume create operation has finished.  Defaults to false"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.enableSubvolumes" options="enable-subvolumes" group="Properties">
          <help short="Flag indicating whether subvolume operations are enabled on the volume"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.isDefaultQuotaEnabled" options="is-default-quota-enabled default-quota-enabled" group="Properties">
          <help short="Specifies if default quota is enabled for the volume."/>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.isLargeVolume" options="is-large-volume" group="Properties">
          <help short="Specifies whether volume is a Large Volume or Regular Volume."/>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.isRestoring" options="is-restoring" group="Properties">
          <help short="Restoring"/>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.ldapEnabled" options="ldap-enabled" group="Properties">
          <help short="Specifies whether LDAP is enabled or not for a given NFS volume."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.networkFeatures" options="network-features" group="Properties">
          <help short="Basic network, or Standard features available to the volume. hide me"/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="Basic_Standard" value="&quot;Basic_Standard&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="Standard_Basic" value="&quot;Standard_Basic&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<object>" var="$body.properties.placementRules" options="placement-rules" group="Properties">
          <help short="Application specific placement rules for the particular volume"/>
          <item nullable="True" type="object">
            <arg type="string" var="$body.properties.placementRules[].key" options="key">
              <help short="Key for an application specific parameter for the placement of volumes in the volume group"/>
            </arg>
            <arg type="string" var="$body.properties.placementRules[].value" options="value">
              <help short="Value for an application specific parameter for the placement of volumes in the volume group"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<string>" var="$body.properties.protocolTypes" options="protocol-types" group="Properties">
          <help short="Set of protocol types, default NFSv3, CIFS for SMB protocol"/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.proximityPlacementGroup" options="proximity-placement-group ppg" group="Properties">
          <help short="Proximity placement group associated with the volume"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.securityStyle" options="security-style" group="Properties">
          <help short="The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol"/>
          <enum>
            <item name="ntfs" value="&quot;ntfs&quot;"/>
            <item name="unix" value="&quot;unix&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.serviceLevel" options="service-level" group="Properties">
          <help short="serviceLevel"/>
          <enum>
            <item name="Premium" value="&quot;Premium&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="StandardZRS" value="&quot;StandardZRS&quot;"/>
            <item name="Ultra" value="&quot;Ultra&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.smbAccessBasedEnumeration" options="smb-access-based-enumeration smb-access-enumeration" group="Properties">
          <help short="Enables access based enumeration share property for SMB Shares. Only applicable for SMB/DualProtocol volume"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.smbContinuouslyAvailable" options="smb-continuously-available smb-continuously-avl" group="Properties">
          <help short="Enables continuously available share property for smb volume. Only applicable for SMB volume"/>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.smbEncryption" options="smb-encryption" group="Properties">
          <help short="Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.smbNonBrowsable" options="smb-non-browsable" group="Properties">
          <help short="Enables non browsable property for SMB Shares. Only applicable for SMB/DualProtocol volume"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="boolean" var="$body.properties.snapshotDirectoryVisible" options="snapshot-directory-visible snapshot-dir-visible" group="Properties">
          <help short="If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (defaults to true)."/>
        </arg>
        <arg type="string" var="$body.properties.subnetId" options="subnet-id subnet" group="Properties">
          <help short="The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes"/>
        </arg>
        <arg nullable="True" type="float" var="$body.properties.throughputMibps" options="throughput-mibps" group="Properties">
          <help short="Maximum throughput in MiB/s that can be achieved by this volume and this will be accepted as input only for manual qosType volume"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.unixPermissions" options="unix-permissions" group="Properties">
          <help short="UNIX permissions for NFS volume accepted in octal 4 digit format. First digit selects the set user ID(4), set group ID (2) and sticky (1) attributes. Second digit selects permission for the owner of the file: read (4), write (2) and execute (1). Third selects permissions for other users in the same group. the fourth for other users not in the group. 0755 - gives read/write/execute permissions to owner and read/execute to group and other users."/>
          <format maxLength="4" minLength="4"/>
        </arg>
        <arg type="integer64" var="$body.properties.usageThreshold" options="usage-threshold" group="Properties">
          <help short="Maximum storage quota allowed for a file system in bytes." lines="LargeVolume. alerting Minimum 100TiB, 500Tib quota only. Upper limit This soft used size GiB. for 100 for is is is a"/>
          <format maximum="2638827906662400" minimum="107374182400"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.volumeSpecName" options="volume-spec-name" group="Properties">
          <help short="Volume spec name is the application specific designation or identifier for the particular volume in a volume group for e.g. data, log"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.volumeType" options="volume-type" group="Properties">
          <help short="What type of volume is this. For destination volumes in Cross Region Replication, set type to DataProtection"/>
        </arg>
      </argGroup>
      <argGroup name="Replication">
        <arg nullable="True" type="string" var="$body.properties.dataProtection.replication.endpointType" options="endpoint-type" group="Replication">
          <help short="Indicates whether the local volume is the source or destination for the Volume Replication"/>
          <enum>
            <item name="dst" value="&quot;dst&quot;"/>
            <item name="src" value="&quot;src&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.dataProtection.replication.remoteVolumeRegion" options="remote-volume-region" group="Replication">
          <help short="The remote region for the other end of the Volume Replication."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.dataProtection.replication.replicationSchedule" options="replication-schedule" group="Replication">
          <help short="Schedule"/>
          <enum>
            <item name="_10minutely" value="&quot;_10minutely&quot;"/>
            <item name="daily" value="&quot;daily&quot;"/>
            <item name="hourly" value="&quot;hourly&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Snapshot">
        <arg nullable="True" type="string" var="$body.properties.dataProtection.snapshot.snapshotPolicyId" options="snapshot-policy-id" group="Snapshot">
          <help short="Snapshot Policy ResourceId"/>
        </arg>
      </argGroup>
      <argGroup name="VolumeRelocation">
        <arg nullable="True" type="boolean" var="$body.properties.dataProtection.volumeRelocation.relocationRequested" options="relocation-requested" group="VolumeRelocation">
          <help short="Has relocation been requested for this volume"/>
        </arg>
      </argGroup>
      <operation operationId="Volumes_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="poolName" arg="$Path.poolName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Volume_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/capacityPools/{}/volumes/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="float" name="actualThroughputMibps"/>
                    <prop type="string" name="avsDataStore">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop nullable="True" type="string" name="backupId"/>
                    <prop readOnly="True" type="string" name="baremetalTenantId"/>
                    <prop type="string" name="capacityPoolResourceId"/>
                    <prop readOnly="True" nullable="True" type="integer32" name="cloneProgress"/>
                    <prop type="boolean" name="coolAccess">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="coolAccessRetrievalPolicy">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;Never&quot;"/>
                        <item value="&quot;OnRead&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="coolnessPeriod">
                      <format maximum="183" minimum="7"/>
                    </prop>
                    <prop type="string" name="creationToken" required="True">
                      <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                    </prop>
                    <prop type="object" name="dataProtection">
                      <prop type="object" name="backup">
                        <prop type="boolean" name="backupEnabled"/>
                        <prop type="string" name="backupPolicyId"/>
                        <prop type="string" name="backupVaultId"/>
                        <prop type="boolean" name="policyEnforced"/>
                      </prop>
                      <prop type="object" name="replication">
                        <prop type="string" name="endpointType">
                          <enum>
                            <item value="&quot;dst&quot;"/>
                            <item value="&quot;src&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="remotePath">
                          <prop type="string" name="externalHostName" required="True"/>
                          <prop type="string" name="serverName" required="True"/>
                          <prop type="string" name="volumeName" required="True"/>
                        </prop>
                        <prop type="string" name="remoteVolumeRegion"/>
                        <prop type="string" name="remoteVolumeResourceId" required="True"/>
                        <prop readOnly="True" type="string" name="replicationId"/>
                        <prop type="string" name="replicationSchedule">
                          <enum>
                            <item value="&quot;_10minutely&quot;"/>
                            <item value="&quot;daily&quot;"/>
                            <item value="&quot;hourly&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="snapshot">
                        <prop type="string" name="snapshotPolicyId"/>
                      </prop>
                      <prop type="object" name="volumeRelocation">
                        <prop readOnly="True" type="boolean" name="readyToBeFinalized"/>
                        <prop type="boolean" name="relocationRequested"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="dataStoreResourceId">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="defaultGroupQuotaInKiBs">
                      <default value="0"/>
                    </prop>
                    <prop type="integer64" name="defaultUserQuotaInKiBs">
                      <default value="0"/>
                    </prop>
                    <prop type="boolean" name="deleteBaseSnapshot"/>
                    <prop type="string" name="enableSubvolumes">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="boolean" name="encrypted"/>
                    <prop type="string" name="encryptionKeySource">
                      <default value="&quot;Microsoft.NetApp&quot;"/>
                      <enum>
                        <item value="&quot;Microsoft.KeyVault&quot;"/>
                        <item value="&quot;Microsoft.NetApp&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="exportPolicy">
                      <prop type="array<object>" name="rules" identifiers="ruleIndex">
                        <item type="object">
                          <prop type="string" name="allowedClients"/>
                          <prop type="string" name="chownMode">
                            <default value="&quot;Restricted&quot;"/>
                            <enum>
                              <item value="&quot;Restricted&quot;"/>
                              <item value="&quot;Unrestricted&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="cifs"/>
                          <prop type="boolean" name="hasRootAccess">
                            <default value="true"/>
                          </prop>
                          <prop type="boolean" name="kerberos5ReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5ReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5iReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5iReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5pReadOnly">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="kerberos5pReadWrite">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="nfsv3"/>
                          <prop type="boolean" name="nfsv41"/>
                          <prop type="integer32" name="ruleIndex"/>
                          <prop type="boolean" name="unixReadOnly"/>
                          <prop type="boolean" name="unixReadWrite"/>
                        </item>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="fileAccessLogs">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="fileSystemId">
                      <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                    </prop>
                    <prop readOnly="True" nullable="True" type="integer64" name="inheritedSizeInBytes"/>
                    <prop type="boolean" name="isDefaultQuotaEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isLargeVolume">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isRestoring"/>
                    <prop type="boolean" name="kerberosEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="keyVaultPrivateEndpointResourceId"/>
                    <prop type="boolean" name="ldapEnabled">
                      <default value="false"/>
                    </prop>
                    <prop readOnly="True" type="integer64" name="maximumNumberOfFiles"/>
                    <prop readOnly="True" type="array<object>" name="mountTargets" identifiers="fileSystemId">
                      <item type="object">
                        <prop type="string" name="fileSystemId" required="True">
                          <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                        </prop>
                        <prop readOnly="True" type="string" name="ipAddress"/>
                        <prop readOnly="True" type="string" name="mountTargetId">
                          <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                        </prop>
                        <prop type="string" name="smbServerFqdn"/>
                      </item>
                    </prop>
                    <prop type="string" name="networkFeatures">
                      <default value="&quot;Basic&quot;"/>
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Basic_Standard&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;Standard_Basic&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="networkSiblingSetId">
                      <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                    </prop>
                    <prop readOnly="True" nullable="True" type="string" name="originatingResourceId"/>
                    <prop type="array<object>" name="placementRules" identifiers="key">
                      <item type="object">
                        <prop type="string" name="key" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="array<string>" name="protocolTypes">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" nullable="True" type="string" name="provisionedAvailabilityZone"/>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="proximityPlacementGroup"/>
                    <prop type="string" name="securityStyle">
                      <default value="&quot;unix&quot;"/>
                      <enum>
                        <item value="&quot;ntfs&quot;"/>
                        <item value="&quot;unix&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="serviceLevel">
                      <default value="&quot;Premium&quot;"/>
                      <enum>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StandardZRS&quot;"/>
                        <item value="&quot;Ultra&quot;"/>
                      </enum>
                    </prop>
                    <prop nullable="True" type="string" name="smbAccessBasedEnumeration">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="smbContinuouslyAvailable">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="smbEncryption">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="smbNonBrowsable">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="snapshotDirectoryVisible">
                      <default value="true"/>
                    </prop>
                    <prop nullable="True" type="string" name="snapshotId"/>
                    <prop readOnly="True" type="string" name="storageToNetworkProximity">
                      <enum>
                        <item value="&quot;AcrossT2&quot;"/>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;T1&quot;"/>
                        <item value="&quot;T2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="subnetId" required="True"/>
                    <prop readOnly="True" type="string" name="t2Network"/>
                    <prop nullable="True" type="float" name="throughputMibps"/>
                    <prop nullable="True" type="string" name="unixPermissions">
                      <format maxLength="4" minLength="4"/>
                    </prop>
                    <prop type="integer64" name="usageThreshold" required="True">
                      <default value="107374182400"/>
                      <format maximum="2638827906662400" minimum="107374182400"/>
                    </prop>
                    <prop readOnly="True" type="string" name="volumeGroupName"/>
                    <prop type="string" name="volumeSpecName"/>
                    <prop type="string" name="volumeType"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string">
                      <format maxLength="255" minLength="1"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="string" name="avsDataStore" arg="$body.properties.avsDataStore">
                  <default value="&quot;Disabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="capacityPoolResourceId" arg="$body.properties.capacityPoolResourceId"/>
                <prop type="boolean" name="coolAccess" arg="$body.properties.coolAccess">
                  <default value="false"/>
                </prop>
                <prop type="string" name="coolAccessRetrievalPolicy" arg="$body.properties.coolAccessRetrievalPolicy">
                  <enum>
                    <item value="&quot;Default&quot;"/>
                    <item value="&quot;Never&quot;"/>
                    <item value="&quot;OnRead&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="coolnessPeriod" arg="$body.properties.coolnessPeriod">
                  <format maximum="183" minimum="7"/>
                </prop>
                <prop type="string" name="creationToken" arg="$body.properties.creationToken" required="True">
                  <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                </prop>
                <prop type="object" name="dataProtection">
                  <prop type="object" name="backup">
                    <prop type="boolean" name="backupEnabled" arg="$body.properties.dataProtection.backup.backupEnabled"/>
                    <prop type="string" name="backupPolicyId" arg="$body.properties.dataProtection.backup.backupPolicyId"/>
                    <prop type="string" name="backupVaultId" arg="$body.properties.dataProtection.backup.backupVaultId"/>
                    <prop type="boolean" name="policyEnforced" arg="$body.properties.dataProtection.backup.policyEnforced"/>
                  </prop>
                  <prop type="object" name="replication">
                    <prop type="string" name="endpointType" arg="$body.properties.dataProtection.replication.endpointType">
                      <enum>
                        <item value="&quot;dst&quot;"/>
                        <item value="&quot;src&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="remoteVolumeRegion" arg="$body.properties.dataProtection.replication.remoteVolumeRegion"/>
                    <prop type="string" name="replicationSchedule" arg="$body.properties.dataProtection.replication.replicationSchedule">
                      <enum>
                        <item value="&quot;_10minutely&quot;"/>
                        <item value="&quot;daily&quot;"/>
                        <item value="&quot;hourly&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="snapshot">
                    <prop type="string" name="snapshotPolicyId" arg="$body.properties.dataProtection.snapshot.snapshotPolicyId"/>
                  </prop>
                  <prop type="object" name="volumeRelocation">
                    <prop type="boolean" name="relocationRequested" arg="$body.properties.dataProtection.volumeRelocation.relocationRequested"/>
                  </prop>
                </prop>
                <prop type="integer64" name="defaultGroupQuotaInKiBs" arg="$body.properties.defaultGroupQuotaInKiBs">
                  <default value="0"/>
                </prop>
                <prop type="integer64" name="defaultUserQuotaInKiBs" arg="$body.properties.defaultUserQuotaInKiBs">
                  <default value="0"/>
                </prop>
                <prop type="boolean" name="deleteBaseSnapshot" arg="$body.properties.deleteBaseSnapshot"/>
                <prop type="string" name="enableSubvolumes" arg="$body.properties.enableSubvolumes">
                  <default value="&quot;Disabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="encryptionKeySource" arg="$body.properties.encryptionKeySource">
                  <default value="&quot;Microsoft.NetApp&quot;"/>
                  <enum>
                    <item value="&quot;Microsoft.KeyVault&quot;"/>
                    <item value="&quot;Microsoft.NetApp&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="exportPolicy">
                  <prop type="array<object>" name="rules" arg="$body.properties.exportPolicy.rules" identifiers="ruleIndex">
                    <item type="object">
                      <prop type="string" name="allowedClients" arg="$body.properties.exportPolicy.rules[].allowedClients"/>
                      <prop type="string" name="chownMode" arg="$body.properties.exportPolicy.rules[].chownMode">
                        <default value="&quot;Restricted&quot;"/>
                        <enum>
                          <item value="&quot;Restricted&quot;"/>
                          <item value="&quot;Unrestricted&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="cifs" arg="$body.properties.exportPolicy.rules[].cifs"/>
                      <prop type="boolean" name="hasRootAccess" arg="$body.properties.exportPolicy.rules[].hasRootAccess">
                        <default value="true"/>
                      </prop>
                      <prop type="boolean" name="kerberos5ReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5ReadOnly">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="kerberos5ReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5ReadWrite">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="kerberos5iReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5iReadOnly">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="kerberos5iReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5iReadWrite">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="kerberos5pReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5pReadOnly">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="kerberos5pReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5pReadWrite">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="nfsv3" arg="$body.properties.exportPolicy.rules[].nfsv3"/>
                      <prop type="boolean" name="nfsv41" arg="$body.properties.exportPolicy.rules[].nfsv41"/>
                      <prop type="integer32" name="ruleIndex" arg="$body.properties.exportPolicy.rules[].ruleIndex"/>
                      <prop type="boolean" name="unixReadOnly" arg="$body.properties.exportPolicy.rules[].unixReadOnly"/>
                      <prop type="boolean" name="unixReadWrite" arg="$body.properties.exportPolicy.rules[].unixReadWrite"/>
                    </item>
                  </prop>
                </prop>
                <prop type="boolean" name="isDefaultQuotaEnabled" arg="$body.properties.isDefaultQuotaEnabled">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="isLargeVolume" arg="$body.properties.isLargeVolume">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="isRestoring" arg="$body.properties.isRestoring"/>
                <prop type="string" name="keyVaultPrivateEndpointResourceId" arg="$body.properties.keyVaultPrivateEndpointResourceId"/>
                <prop type="boolean" name="ldapEnabled" arg="$body.properties.ldapEnabled">
                  <default value="false"/>
                </prop>
                <prop type="string" name="networkFeatures" arg="$body.properties.networkFeatures">
                  <default value="&quot;Basic&quot;"/>
                  <enum>
                    <item value="&quot;Basic&quot;"/>
                    <item value="&quot;Basic_Standard&quot;"/>
                    <item value="&quot;Standard&quot;"/>
                    <item value="&quot;Standard_Basic&quot;"/>
                  </enum>
                </prop>
                <prop type="array<object>" name="placementRules" arg="$body.properties.placementRules" identifiers="key">
                  <item type="object">
                    <prop type="string" name="key" arg="$body.properties.placementRules[].key" required="True"/>
                    <prop type="string" name="value" arg="$body.properties.placementRules[].value" required="True"/>
                  </item>
                </prop>
                <prop type="array<string>" name="protocolTypes" arg="$body.properties.protocolTypes">
                  <item type="string"/>
                </prop>
                <prop type="string" name="proximityPlacementGroup" arg="$body.properties.proximityPlacementGroup"/>
                <prop type="string" name="securityStyle" arg="$body.properties.securityStyle">
                  <default value="&quot;unix&quot;"/>
                  <enum>
                    <item value="&quot;ntfs&quot;"/>
                    <item value="&quot;unix&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="serviceLevel" arg="$body.properties.serviceLevel">
                  <default value="&quot;Premium&quot;"/>
                  <enum>
                    <item value="&quot;Premium&quot;"/>
                    <item value="&quot;Standard&quot;"/>
                    <item value="&quot;StandardZRS&quot;"/>
                    <item value="&quot;Ultra&quot;"/>
                  </enum>
                </prop>
                <prop nullable="True" type="string" name="smbAccessBasedEnumeration" arg="$body.properties.smbAccessBasedEnumeration">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="smbContinuouslyAvailable" arg="$body.properties.smbContinuouslyAvailable">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="smbEncryption" arg="$body.properties.smbEncryption">
                  <default value="false"/>
                </prop>
                <prop type="string" name="smbNonBrowsable" arg="$body.properties.smbNonBrowsable">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="snapshotDirectoryVisible" arg="$body.properties.snapshotDirectoryVisible">
                  <default value="true"/>
                </prop>
                <prop type="string" name="subnetId" arg="$body.properties.subnetId" required="True"/>
                <prop nullable="True" type="float" name="throughputMibps" arg="$body.properties.throughputMibps"/>
                <prop nullable="True" type="string" name="unixPermissions" arg="$body.properties.unixPermissions">
                  <format maxLength="4" minLength="4"/>
                </prop>
                <prop type="integer64" name="usageThreshold" arg="$body.properties.usageThreshold" required="True">
                  <default value="107374182400"/>
                  <format maximum="2638827906662400" minimum="107374182400"/>
                </prop>
                <prop type="string" name="volumeSpecName" arg="$body.properties.volumeSpecName"/>
                <prop type="string" name="volumeType" arg="$body.properties.volumeType"/>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Volumes_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
          <request method="put">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
              </param>
              <param type="string" name="poolName" arg="$Path.poolName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Volume_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="export-policy">
      <command name="list" version="2023-07-01-preview" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" subresource="properties.exportPolicy.rules" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
            <help short="The name of the NetApp account"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
          </arg>
          <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
            <help short="The name of the capacity pool"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.volumeName" options="volume-name name n v" required="True" group="" idPart="child_name_2">
            <help short="The name of the volume"/>
            <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="body">
            <prop type="array" name="properties.exportPolicy.rules"/>
          </json>
        </subresourceSelector>
        <operation operationId="Volumes_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
            <request method="get">
              <path>
                <param type="string" name="accountName" arg="$Path.accountName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
                </param>
                <param type="string" name="poolName" arg="$Path.poolName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                  <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-07-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Volume_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/capacityPools/{}/volumes/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="float" name="actualThroughputMibps"/>
                      <prop type="string" name="avsDataStore">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="backupId"/>
                      <prop readOnly="True" type="string" name="baremetalTenantId"/>
                      <prop type="string" name="capacityPoolResourceId"/>
                      <prop readOnly="True" nullable="True" type="integer32" name="cloneProgress"/>
                      <prop type="boolean" name="coolAccess">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="coolAccessRetrievalPolicy">
                        <enum>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;Never&quot;"/>
                          <item value="&quot;OnRead&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="coolnessPeriod">
                        <format maximum="183" minimum="7"/>
                      </prop>
                      <prop type="string" name="creationToken" required="True">
                        <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                      </prop>
                      <prop type="object" name="dataProtection">
                        <prop type="object" name="backup">
                          <prop type="boolean" name="backupEnabled"/>
                          <prop type="string" name="backupPolicyId"/>
                          <prop type="string" name="backupVaultId"/>
                          <prop type="boolean" name="policyEnforced"/>
                        </prop>
                        <prop type="object" name="replication">
                          <prop type="string" name="endpointType">
                            <enum>
                              <item value="&quot;dst&quot;"/>
                              <item value="&quot;src&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="remotePath">
                            <prop type="string" name="externalHostName" required="True"/>
                            <prop type="string" name="serverName" required="True"/>
                            <prop type="string" name="volumeName" required="True"/>
                          </prop>
                          <prop type="string" name="remoteVolumeRegion"/>
                          <prop type="string" name="remoteVolumeResourceId" required="True"/>
                          <prop readOnly="True" type="string" name="replicationId"/>
                          <prop type="string" name="replicationSchedule">
                            <enum>
                              <item value="&quot;_10minutely&quot;"/>
                              <item value="&quot;daily&quot;"/>
                              <item value="&quot;hourly&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="snapshot">
                          <prop type="string" name="snapshotPolicyId"/>
                        </prop>
                        <prop type="object" name="volumeRelocation">
                          <prop readOnly="True" type="boolean" name="readyToBeFinalized"/>
                          <prop type="boolean" name="relocationRequested"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="dataStoreResourceId">
                        <item type="string"/>
                      </prop>
                      <prop type="integer64" name="defaultGroupQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="integer64" name="defaultUserQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="boolean" name="deleteBaseSnapshot"/>
                      <prop type="string" name="enableSubvolumes">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="boolean" name="encrypted"/>
                      <prop type="string" name="encryptionKeySource">
                        <default value="&quot;Microsoft.NetApp&quot;"/>
                        <enum>
                          <item value="&quot;Microsoft.KeyVault&quot;"/>
                          <item value="&quot;Microsoft.NetApp&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="exportPolicy">
                        <prop type="array<object>" name="rules" identifiers="ruleIndex">
                          <item type="object">
                            <prop type="string" name="allowedClients"/>
                            <prop type="string" name="chownMode">
                              <default value="&quot;Restricted&quot;"/>
                              <enum>
                                <item value="&quot;Restricted&quot;"/>
                                <item value="&quot;Unrestricted&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="cifs"/>
                            <prop type="boolean" name="hasRootAccess">
                              <default value="true"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="nfsv3"/>
                            <prop type="boolean" name="nfsv41"/>
                            <prop type="integer32" name="ruleIndex"/>
                            <prop type="boolean" name="unixReadOnly"/>
                            <prop type="boolean" name="unixReadWrite"/>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="fileAccessLogs">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="fileSystemId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="integer64" name="inheritedSizeInBytes"/>
                      <prop type="boolean" name="isDefaultQuotaEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isLargeVolume">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isRestoring"/>
                      <prop type="boolean" name="kerberosEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="keyVaultPrivateEndpointResourceId"/>
                      <prop type="boolean" name="ldapEnabled">
                        <default value="false"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="maximumNumberOfFiles"/>
                      <prop readOnly="True" type="array<object>" name="mountTargets" identifiers="fileSystemId">
                        <item type="object">
                          <prop type="string" name="fileSystemId" required="True">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop readOnly="True" type="string" name="ipAddress"/>
                          <prop readOnly="True" type="string" name="mountTargetId">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop type="string" name="smbServerFqdn"/>
                        </item>
                      </prop>
                      <prop type="string" name="networkFeatures">
                        <default value="&quot;Basic&quot;"/>
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Basic_Standard&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;Standard_Basic&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="networkSiblingSetId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="originatingResourceId"/>
                      <prop type="array<object>" name="placementRules" identifiers="key">
                        <item type="object">
                          <prop type="string" name="key" required="True"/>
                          <prop type="string" name="value" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="protocolTypes">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="provisionedAvailabilityZone"/>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="string" name="proximityPlacementGroup"/>
                      <prop type="string" name="securityStyle">
                        <default value="&quot;unix&quot;"/>
                        <enum>
                          <item value="&quot;ntfs&quot;"/>
                          <item value="&quot;unix&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="serviceLevel">
                        <default value="&quot;Premium&quot;"/>
                        <enum>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StandardZRS&quot;"/>
                          <item value="&quot;Ultra&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="smbAccessBasedEnumeration">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="smbContinuouslyAvailable">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="smbEncryption">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="smbNonBrowsable">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="snapshotDirectoryVisible">
                        <default value="true"/>
                      </prop>
                      <prop nullable="True" type="string" name="snapshotId"/>
                      <prop readOnly="True" type="string" name="storageToNetworkProximity">
                        <enum>
                          <item value="&quot;AcrossT2&quot;"/>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;T1&quot;"/>
                          <item value="&quot;T2&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="subnetId" required="True"/>
                      <prop readOnly="True" type="string" name="t2Network"/>
                      <prop nullable="True" type="float" name="throughputMibps"/>
                      <prop nullable="True" type="string" name="unixPermissions">
                        <format maxLength="4" minLength="4"/>
                      </prop>
                      <prop type="integer64" name="usageThreshold" required="True">
                        <default value="107374182400"/>
                        <format maximum="2638827906662400" minimum="107374182400"/>
                      </prop>
                      <prop readOnly="True" type="string" name="volumeGroupName"/>
                      <prop type="string" name="volumeSpecName"/>
                      <prop type="string" name="volumeType"/>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                    <prop type="array<string>" name="zones">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="array" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="add" version="2023-07-01-preview" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" subresource="properties.exportPolicy.rules[]" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
            <help short="The name of the NetApp account"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
          </arg>
          <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
            <help short="The name of the capacity pool"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.volumeName" options="volume-name name n v" required="True" group="" idPart="child_name_2">
            <help short="The name of the volume"/>
            <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
          <arg type="integer32" var="$body.properties.exportPolicy.rules[].ruleIndex" options="rule-index" required="True">
            <help short="Order index"/>
          </arg>
        </argGroup>
        <argGroup name="Body.properties.exportPolicy.rules[]">
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].cifs" options="cifs" group="Body.properties.exportPolicy.rules[]">
            <help short="Allows CIFS protocol"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5ReadOnly" options="kerberos5-read-only" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later"/>
            <default value="false"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5ReadWrite" options="kerberos5-read-write" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later"/>
            <default value="false"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5iReadOnly" options="kerberos5i-read-only" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later"/>
            <default value="false"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5iReadWrite" options="kerberos5i-read-write" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later"/>
            <default value="false"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5pReadOnly" options="kerberos5p-read-only" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later"/>
            <default value="false"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5pReadWrite" options="kerberos5p-read-write" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later"/>
            <default value="false"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].nfsv3" options="nfsv3" group="Body.properties.exportPolicy.rules[]">
            <help short="Allows NFSv3 protocol. Enable only for NFSv3 type volumes"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].nfsv41" options="nfsv41" group="Body.properties.exportPolicy.rules[]">
            <help short="Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].unixReadOnly" options="unix-read-only" group="Body.properties.exportPolicy.rules[]">
            <help short="Read only access"/>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].unixReadWrite" options="unix-read-write" group="Body.properties.exportPolicy.rules[]">
            <help short="Read and write access"/>
          </arg>
        </argGroup>
        <argGroup name="Export Policies">
          <arg type="string" var="$body.properties.exportPolicy.rules[].allowedClients" options="allowed-clients" group="Export Policies">
            <help short="Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"/>
          </arg>
          <arg type="string" var="$body.properties.exportPolicy.rules[].chownMode" options="chown-mode" group="Export Policies">
            <help short="This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own."/>
            <default value="&quot;Restricted&quot;"/>
            <enum>
              <item name="Restricted" value="&quot;Restricted&quot;"/>
              <item name="Unrestricted" value="&quot;Unrestricted&quot;"/>
            </enum>
          </arg>
          <arg type="boolean" var="$body.properties.exportPolicy.rules[].hasRootAccess" options="has-root-access" group="Export Policies">
            <help short="Has root access to volume"/>
            <default value="true"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="body">
            <prop type="array" name="properties.exportPolicy.rules">
              <item type="object"/>
              <identifier type="integer32" name="[].ruleIndex" arg="$body.properties.exportPolicy.rules[].ruleIndex" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="Volumes_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
            <request method="get">
              <path>
                <param type="string" name="accountName" arg="$Path.accountName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
                </param>
                <param type="string" name="poolName" arg="$Path.poolName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                  <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-07-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Volume_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/capacityPools/{}/volumes/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="float" name="actualThroughputMibps"/>
                      <prop type="string" name="avsDataStore">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="backupId"/>
                      <prop readOnly="True" type="string" name="baremetalTenantId"/>
                      <prop type="string" name="capacityPoolResourceId"/>
                      <prop readOnly="True" nullable="True" type="integer32" name="cloneProgress"/>
                      <prop type="boolean" name="coolAccess">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="coolAccessRetrievalPolicy">
                        <enum>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;Never&quot;"/>
                          <item value="&quot;OnRead&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="coolnessPeriod">
                        <format maximum="183" minimum="7"/>
                      </prop>
                      <prop type="string" name="creationToken" required="True">
                        <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                      </prop>
                      <prop type="object" name="dataProtection">
                        <prop type="object" name="backup">
                          <prop type="boolean" name="backupEnabled"/>
                          <prop type="string" name="backupPolicyId"/>
                          <prop type="string" name="backupVaultId"/>
                          <prop type="boolean" name="policyEnforced"/>
                        </prop>
                        <prop type="object" name="replication">
                          <prop type="string" name="endpointType">
                            <enum>
                              <item value="&quot;dst&quot;"/>
                              <item value="&quot;src&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="remotePath">
                            <prop type="string" name="externalHostName" required="True"/>
                            <prop type="string" name="serverName" required="True"/>
                            <prop type="string" name="volumeName" required="True"/>
                          </prop>
                          <prop type="string" name="remoteVolumeRegion"/>
                          <prop type="string" name="remoteVolumeResourceId" required="True"/>
                          <prop readOnly="True" type="string" name="replicationId"/>
                          <prop type="string" name="replicationSchedule">
                            <enum>
                              <item value="&quot;_10minutely&quot;"/>
                              <item value="&quot;daily&quot;"/>
                              <item value="&quot;hourly&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="snapshot">
                          <prop type="string" name="snapshotPolicyId"/>
                        </prop>
                        <prop type="object" name="volumeRelocation">
                          <prop readOnly="True" type="boolean" name="readyToBeFinalized"/>
                          <prop type="boolean" name="relocationRequested"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="dataStoreResourceId">
                        <item type="string"/>
                      </prop>
                      <prop type="integer64" name="defaultGroupQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="integer64" name="defaultUserQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="boolean" name="deleteBaseSnapshot"/>
                      <prop type="string" name="enableSubvolumes">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="boolean" name="encrypted"/>
                      <prop type="string" name="encryptionKeySource">
                        <default value="&quot;Microsoft.NetApp&quot;"/>
                        <enum>
                          <item value="&quot;Microsoft.KeyVault&quot;"/>
                          <item value="&quot;Microsoft.NetApp&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="exportPolicy">
                        <prop type="array<object>" name="rules" identifiers="ruleIndex">
                          <item type="object">
                            <prop type="string" name="allowedClients"/>
                            <prop type="string" name="chownMode">
                              <default value="&quot;Restricted&quot;"/>
                              <enum>
                                <item value="&quot;Restricted&quot;"/>
                                <item value="&quot;Unrestricted&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="cifs"/>
                            <prop type="boolean" name="hasRootAccess">
                              <default value="true"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="nfsv3"/>
                            <prop type="boolean" name="nfsv41"/>
                            <prop type="integer32" name="ruleIndex"/>
                            <prop type="boolean" name="unixReadOnly"/>
                            <prop type="boolean" name="unixReadWrite"/>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="fileAccessLogs">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="fileSystemId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="integer64" name="inheritedSizeInBytes"/>
                      <prop type="boolean" name="isDefaultQuotaEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isLargeVolume">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isRestoring"/>
                      <prop type="boolean" name="kerberosEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="keyVaultPrivateEndpointResourceId"/>
                      <prop type="boolean" name="ldapEnabled">
                        <default value="false"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="maximumNumberOfFiles"/>
                      <prop readOnly="True" type="array<object>" name="mountTargets" identifiers="fileSystemId">
                        <item type="object">
                          <prop type="string" name="fileSystemId" required="True">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop readOnly="True" type="string" name="ipAddress"/>
                          <prop readOnly="True" type="string" name="mountTargetId">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop type="string" name="smbServerFqdn"/>
                        </item>
                      </prop>
                      <prop type="string" name="networkFeatures">
                        <default value="&quot;Basic&quot;"/>
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Basic_Standard&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;Standard_Basic&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="networkSiblingSetId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="originatingResourceId"/>
                      <prop type="array<object>" name="placementRules" identifiers="key">
                        <item type="object">
                          <prop type="string" name="key" required="True"/>
                          <prop type="string" name="value" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="protocolTypes">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="provisionedAvailabilityZone"/>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="string" name="proximityPlacementGroup"/>
                      <prop type="string" name="securityStyle">
                        <default value="&quot;unix&quot;"/>
                        <enum>
                          <item value="&quot;ntfs&quot;"/>
                          <item value="&quot;unix&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="serviceLevel">
                        <default value="&quot;Premium&quot;"/>
                        <enum>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StandardZRS&quot;"/>
                          <item value="&quot;Ultra&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="smbAccessBasedEnumeration">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="smbContinuouslyAvailable">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="smbEncryption">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="smbNonBrowsable">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="snapshotDirectoryVisible">
                        <default value="true"/>
                      </prop>
                      <prop nullable="True" type="string" name="snapshotId"/>
                      <prop readOnly="True" type="string" name="storageToNetworkProximity">
                        <enum>
                          <item value="&quot;AcrossT2&quot;"/>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;T1&quot;"/>
                          <item value="&quot;T2&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="subnetId" required="True"/>
                      <prop readOnly="True" type="string" name="t2Network"/>
                      <prop nullable="True" type="float" name="throughputMibps"/>
                      <prop nullable="True" type="string" name="unixPermissions">
                        <format maxLength="4" minLength="4"/>
                      </prop>
                      <prop type="integer64" name="usageThreshold" required="True">
                        <default value="107374182400"/>
                        <format maximum="2638827906662400" minimum="107374182400"/>
                      </prop>
                      <prop readOnly="True" type="string" name="volumeGroupName"/>
                      <prop type="string" name="volumeSpecName"/>
                      <prop type="string" name="volumeType"/>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                    <prop type="array<string>" name="zones">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceCreate ref="$Subresource">
            <json>
              <schema type="object" name="body.properties.exportPolicy.rules[]" required="True">
                <prop type="string" name="allowedClients" arg="$body.properties.exportPolicy.rules[].allowedClients"/>
                <prop type="string" name="chownMode" arg="$body.properties.exportPolicy.rules[].chownMode">
                  <default value="&quot;Restricted&quot;"/>
                  <enum>
                    <item value="&quot;Restricted&quot;"/>
                    <item value="&quot;Unrestricted&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="cifs" arg="$body.properties.exportPolicy.rules[].cifs"/>
                <prop type="boolean" name="hasRootAccess" arg="$body.properties.exportPolicy.rules[].hasRootAccess">
                  <default value="true"/>
                </prop>
                <prop type="boolean" name="kerberos5ReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5ReadOnly">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5ReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5ReadWrite">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5iReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5iReadOnly">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5iReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5iReadWrite">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5pReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5pReadOnly">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5pReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5pReadWrite">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="nfsv3" arg="$body.properties.exportPolicy.rules[].nfsv3"/>
                <prop type="boolean" name="nfsv41" arg="$body.properties.exportPolicy.rules[].nfsv41"/>
                <prop type="integer32" name="ruleIndex" arg="$body.properties.exportPolicy.rules[].ruleIndex"/>
                <prop type="boolean" name="unixReadOnly" arg="$body.properties.exportPolicy.rules[].unixReadOnly"/>
                <prop type="boolean" name="unixReadWrite" arg="$body.properties.exportPolicy.rules[].unixReadWrite"/>
              </schema>
            </json>
          </instanceCreate>
        </operation>
        <operation operationId="Volumes_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
            <request method="put">
              <path>
                <param type="string" name="accountName" arg="$Path.accountName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
                </param>
                <param type="string" name="poolName" arg="$Path.poolName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                  <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-07-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@Volume_read"/>
                </json>
              </body>
            </response>
            <response statusCode="202"/>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="update" version="2023-07-01-preview" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" subresource="properties.exportPolicy.rules[]" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
            <help short="The name of the NetApp account"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
          </arg>
          <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
            <help short="The name of the capacity pool"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.volumeName" options="volume-name name n v" required="True" group="" idPart="child_name_2">
            <help short="The name of the volume"/>
            <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
          <arg type="integer32" var="$body.properties.exportPolicy.rules[].ruleIndex" options="rule-index" required="True">
            <help short="Order index"/>
          </arg>
        </argGroup>
        <argGroup name="Body.properties.exportPolicy.rules[]">
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].cifs" options="cifs" group="Body.properties.exportPolicy.rules[]">
            <help short="Allows CIFS protocol"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5ReadOnly" options="kerberos5-read-only" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5ReadWrite" options="kerberos5-read-write" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5iReadOnly" options="kerberos5i-read-only" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5iReadWrite" options="kerberos5i-read-write" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5pReadOnly" options="kerberos5p-read-only" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].kerberos5pReadWrite" options="kerberos5p-read-write" group="Body.properties.exportPolicy.rules[]">
            <help short="Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].nfsv3" options="nfsv3" group="Body.properties.exportPolicy.rules[]">
            <help short="Allows NFSv3 protocol. Enable only for NFSv3 type volumes"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].nfsv41" options="nfsv41" group="Body.properties.exportPolicy.rules[]">
            <help short="Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].unixReadOnly" options="unix-read-only" group="Body.properties.exportPolicy.rules[]">
            <help short="Read only access"/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].unixReadWrite" options="unix-read-write" group="Body.properties.exportPolicy.rules[]">
            <help short="Read and write access"/>
          </arg>
        </argGroup>
        <argGroup name="Export Policies">
          <arg nullable="True" type="string" var="$body.properties.exportPolicy.rules[].allowedClients" options="allowed-clients" group="Export Policies">
            <help short="Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.exportPolicy.rules[].chownMode" options="chown-mode" group="Export Policies">
            <help short="This parameter specifies who is authorized to change the ownership of a file. restricted - Only root user can change the ownership of the file. unrestricted - Non-root users can change ownership of files that they own."/>
            <enum>
              <item name="Restricted" value="&quot;Restricted&quot;"/>
              <item name="Unrestricted" value="&quot;Unrestricted&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.exportPolicy.rules[].hasRootAccess" options="has-root-access" group="Export Policies">
            <help short="Has root access to volume"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="body">
            <prop type="array" name="properties.exportPolicy.rules">
              <item type="object"/>
              <identifier type="integer32" name="[].ruleIndex" arg="$body.properties.exportPolicy.rules[].ruleIndex" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="Volumes_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
            <request method="get">
              <path>
                <param type="string" name="accountName" arg="$Path.accountName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
                </param>
                <param type="string" name="poolName" arg="$Path.poolName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                  <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-07-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Volume_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/capacityPools/{}/volumes/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="float" name="actualThroughputMibps"/>
                      <prop type="string" name="avsDataStore">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="backupId"/>
                      <prop readOnly="True" type="string" name="baremetalTenantId"/>
                      <prop type="string" name="capacityPoolResourceId"/>
                      <prop readOnly="True" nullable="True" type="integer32" name="cloneProgress"/>
                      <prop type="boolean" name="coolAccess">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="coolAccessRetrievalPolicy">
                        <enum>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;Never&quot;"/>
                          <item value="&quot;OnRead&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="coolnessPeriod">
                        <format maximum="183" minimum="7"/>
                      </prop>
                      <prop type="string" name="creationToken" required="True">
                        <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                      </prop>
                      <prop type="object" name="dataProtection">
                        <prop type="object" name="backup">
                          <prop type="boolean" name="backupEnabled"/>
                          <prop type="string" name="backupPolicyId"/>
                          <prop type="string" name="backupVaultId"/>
                          <prop type="boolean" name="policyEnforced"/>
                        </prop>
                        <prop type="object" name="replication">
                          <prop type="string" name="endpointType">
                            <enum>
                              <item value="&quot;dst&quot;"/>
                              <item value="&quot;src&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="remotePath">
                            <prop type="string" name="externalHostName" required="True"/>
                            <prop type="string" name="serverName" required="True"/>
                            <prop type="string" name="volumeName" required="True"/>
                          </prop>
                          <prop type="string" name="remoteVolumeRegion"/>
                          <prop type="string" name="remoteVolumeResourceId" required="True"/>
                          <prop readOnly="True" type="string" name="replicationId"/>
                          <prop type="string" name="replicationSchedule">
                            <enum>
                              <item value="&quot;_10minutely&quot;"/>
                              <item value="&quot;daily&quot;"/>
                              <item value="&quot;hourly&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="snapshot">
                          <prop type="string" name="snapshotPolicyId"/>
                        </prop>
                        <prop type="object" name="volumeRelocation">
                          <prop readOnly="True" type="boolean" name="readyToBeFinalized"/>
                          <prop type="boolean" name="relocationRequested"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="dataStoreResourceId">
                        <item type="string"/>
                      </prop>
                      <prop type="integer64" name="defaultGroupQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="integer64" name="defaultUserQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="boolean" name="deleteBaseSnapshot"/>
                      <prop type="string" name="enableSubvolumes">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="boolean" name="encrypted"/>
                      <prop type="string" name="encryptionKeySource">
                        <default value="&quot;Microsoft.NetApp&quot;"/>
                        <enum>
                          <item value="&quot;Microsoft.KeyVault&quot;"/>
                          <item value="&quot;Microsoft.NetApp&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="exportPolicy">
                        <prop type="array<object>" name="rules" identifiers="ruleIndex">
                          <item type="object">
                            <prop type="string" name="allowedClients"/>
                            <prop type="string" name="chownMode">
                              <default value="&quot;Restricted&quot;"/>
                              <enum>
                                <item value="&quot;Restricted&quot;"/>
                                <item value="&quot;Unrestricted&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="cifs"/>
                            <prop type="boolean" name="hasRootAccess">
                              <default value="true"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="nfsv3"/>
                            <prop type="boolean" name="nfsv41"/>
                            <prop type="integer32" name="ruleIndex"/>
                            <prop type="boolean" name="unixReadOnly"/>
                            <prop type="boolean" name="unixReadWrite"/>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="fileAccessLogs">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="fileSystemId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="integer64" name="inheritedSizeInBytes"/>
                      <prop type="boolean" name="isDefaultQuotaEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isLargeVolume">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isRestoring"/>
                      <prop type="boolean" name="kerberosEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="keyVaultPrivateEndpointResourceId"/>
                      <prop type="boolean" name="ldapEnabled">
                        <default value="false"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="maximumNumberOfFiles"/>
                      <prop readOnly="True" type="array<object>" name="mountTargets" identifiers="fileSystemId">
                        <item type="object">
                          <prop type="string" name="fileSystemId" required="True">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop readOnly="True" type="string" name="ipAddress"/>
                          <prop readOnly="True" type="string" name="mountTargetId">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop type="string" name="smbServerFqdn"/>
                        </item>
                      </prop>
                      <prop type="string" name="networkFeatures">
                        <default value="&quot;Basic&quot;"/>
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Basic_Standard&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;Standard_Basic&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="networkSiblingSetId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="originatingResourceId"/>
                      <prop type="array<object>" name="placementRules" identifiers="key">
                        <item type="object">
                          <prop type="string" name="key" required="True"/>
                          <prop type="string" name="value" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="protocolTypes">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="provisionedAvailabilityZone"/>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="string" name="proximityPlacementGroup"/>
                      <prop type="string" name="securityStyle">
                        <default value="&quot;unix&quot;"/>
                        <enum>
                          <item value="&quot;ntfs&quot;"/>
                          <item value="&quot;unix&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="serviceLevel">
                        <default value="&quot;Premium&quot;"/>
                        <enum>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StandardZRS&quot;"/>
                          <item value="&quot;Ultra&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="smbAccessBasedEnumeration">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="smbContinuouslyAvailable">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="smbEncryption">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="smbNonBrowsable">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="snapshotDirectoryVisible">
                        <default value="true"/>
                      </prop>
                      <prop nullable="True" type="string" name="snapshotId"/>
                      <prop readOnly="True" type="string" name="storageToNetworkProximity">
                        <enum>
                          <item value="&quot;AcrossT2&quot;"/>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;T1&quot;"/>
                          <item value="&quot;T2&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="subnetId" required="True"/>
                      <prop readOnly="True" type="string" name="t2Network"/>
                      <prop nullable="True" type="float" name="throughputMibps"/>
                      <prop nullable="True" type="string" name="unixPermissions">
                        <format maxLength="4" minLength="4"/>
                      </prop>
                      <prop type="integer64" name="usageThreshold" required="True">
                        <default value="107374182400"/>
                        <format maximum="2638827906662400" minimum="107374182400"/>
                      </prop>
                      <prop readOnly="True" type="string" name="volumeGroupName"/>
                      <prop type="string" name="volumeSpecName"/>
                      <prop type="string" name="volumeType"/>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                    <prop type="array<string>" name="zones">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema type="object" name="body.properties.exportPolicy.rules[]" required="True">
                <prop type="string" name="allowedClients" arg="$body.properties.exportPolicy.rules[].allowedClients"/>
                <prop type="string" name="chownMode" arg="$body.properties.exportPolicy.rules[].chownMode">
                  <default value="&quot;Restricted&quot;"/>
                  <enum>
                    <item value="&quot;Restricted&quot;"/>
                    <item value="&quot;Unrestricted&quot;"/>
                  </enum>
                </prop>
                <prop type="boolean" name="cifs" arg="$body.properties.exportPolicy.rules[].cifs"/>
                <prop type="boolean" name="hasRootAccess" arg="$body.properties.exportPolicy.rules[].hasRootAccess">
                  <default value="true"/>
                </prop>
                <prop type="boolean" name="kerberos5ReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5ReadOnly">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5ReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5ReadWrite">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5iReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5iReadOnly">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5iReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5iReadWrite">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5pReadOnly" arg="$body.properties.exportPolicy.rules[].kerberos5pReadOnly">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="kerberos5pReadWrite" arg="$body.properties.exportPolicy.rules[].kerberos5pReadWrite">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="nfsv3" arg="$body.properties.exportPolicy.rules[].nfsv3"/>
                <prop type="boolean" name="nfsv41" arg="$body.properties.exportPolicy.rules[].nfsv41"/>
                <prop type="integer32" name="ruleIndex" arg="$body.properties.exportPolicy.rules[].ruleIndex"/>
                <prop type="boolean" name="unixReadOnly" arg="$body.properties.exportPolicy.rules[].unixReadOnly"/>
                <prop type="boolean" name="unixReadWrite" arg="$body.properties.exportPolicy.rules[].unixReadWrite"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="Volumes_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
            <request method="put">
              <path>
                <param type="string" name="accountName" arg="$Path.accountName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
                </param>
                <param type="string" name="poolName" arg="$Path.poolName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                  <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-07-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@Volume_read"/>
                </json>
              </body>
            </response>
            <response statusCode="202"/>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2023-07-01-preview" confirmation="Are you sure you want to perform this operation?">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" subresource="properties.exportPolicy.rules[]" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
            <help short="The name of the NetApp account"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
          </arg>
          <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
            <help short="The name of the capacity pool"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.volumeName" options="volume-name name n v" required="True" group="" idPart="child_name_2">
            <help short="The name of the volume"/>
            <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
          <arg type="integer32" var="$body.properties.exportPolicy.rules[].ruleIndex" options="rule-index" required="True">
            <help short="Order index"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="body">
            <prop type="array" name="properties.exportPolicy.rules">
              <item type="object"/>
              <identifier type="integer32" name="[].ruleIndex" arg="$body.properties.exportPolicy.rules[].ruleIndex" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="Volumes_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
            <request method="get">
              <path>
                <param type="string" name="accountName" arg="$Path.accountName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
                </param>
                <param type="string" name="poolName" arg="$Path.poolName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                  <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-07-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Volume_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/capacityPools/{}/volumes/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="float" name="actualThroughputMibps"/>
                      <prop type="string" name="avsDataStore">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="backupId"/>
                      <prop readOnly="True" type="string" name="baremetalTenantId"/>
                      <prop type="string" name="capacityPoolResourceId"/>
                      <prop readOnly="True" nullable="True" type="integer32" name="cloneProgress"/>
                      <prop type="boolean" name="coolAccess">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="coolAccessRetrievalPolicy">
                        <enum>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;Never&quot;"/>
                          <item value="&quot;OnRead&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="coolnessPeriod">
                        <format maximum="183" minimum="7"/>
                      </prop>
                      <prop type="string" name="creationToken" required="True">
                        <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                      </prop>
                      <prop type="object" name="dataProtection">
                        <prop type="object" name="backup">
                          <prop type="boolean" name="backupEnabled"/>
                          <prop type="string" name="backupPolicyId"/>
                          <prop type="string" name="backupVaultId"/>
                          <prop type="boolean" name="policyEnforced"/>
                        </prop>
                        <prop type="object" name="replication">
                          <prop type="string" name="endpointType">
                            <enum>
                              <item value="&quot;dst&quot;"/>
                              <item value="&quot;src&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="remotePath">
                            <prop type="string" name="externalHostName" required="True"/>
                            <prop type="string" name="serverName" required="True"/>
                            <prop type="string" name="volumeName" required="True"/>
                          </prop>
                          <prop type="string" name="remoteVolumeRegion"/>
                          <prop type="string" name="remoteVolumeResourceId" required="True"/>
                          <prop readOnly="True" type="string" name="replicationId"/>
                          <prop type="string" name="replicationSchedule">
                            <enum>
                              <item value="&quot;_10minutely&quot;"/>
                              <item value="&quot;daily&quot;"/>
                              <item value="&quot;hourly&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="snapshot">
                          <prop type="string" name="snapshotPolicyId"/>
                        </prop>
                        <prop type="object" name="volumeRelocation">
                          <prop readOnly="True" type="boolean" name="readyToBeFinalized"/>
                          <prop type="boolean" name="relocationRequested"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="dataStoreResourceId">
                        <item type="string"/>
                      </prop>
                      <prop type="integer64" name="defaultGroupQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="integer64" name="defaultUserQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="boolean" name="deleteBaseSnapshot"/>
                      <prop type="string" name="enableSubvolumes">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="boolean" name="encrypted"/>
                      <prop type="string" name="encryptionKeySource">
                        <default value="&quot;Microsoft.NetApp&quot;"/>
                        <enum>
                          <item value="&quot;Microsoft.KeyVault&quot;"/>
                          <item value="&quot;Microsoft.NetApp&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="exportPolicy">
                        <prop type="array<object>" name="rules" identifiers="ruleIndex">
                          <item type="object">
                            <prop type="string" name="allowedClients"/>
                            <prop type="string" name="chownMode">
                              <default value="&quot;Restricted&quot;"/>
                              <enum>
                                <item value="&quot;Restricted&quot;"/>
                                <item value="&quot;Unrestricted&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="cifs"/>
                            <prop type="boolean" name="hasRootAccess">
                              <default value="true"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="nfsv3"/>
                            <prop type="boolean" name="nfsv41"/>
                            <prop type="integer32" name="ruleIndex"/>
                            <prop type="boolean" name="unixReadOnly"/>
                            <prop type="boolean" name="unixReadWrite"/>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="fileAccessLogs">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="fileSystemId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="integer64" name="inheritedSizeInBytes"/>
                      <prop type="boolean" name="isDefaultQuotaEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isLargeVolume">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isRestoring"/>
                      <prop type="boolean" name="kerberosEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="keyVaultPrivateEndpointResourceId"/>
                      <prop type="boolean" name="ldapEnabled">
                        <default value="false"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="maximumNumberOfFiles"/>
                      <prop readOnly="True" type="array<object>" name="mountTargets" identifiers="fileSystemId">
                        <item type="object">
                          <prop type="string" name="fileSystemId" required="True">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop readOnly="True" type="string" name="ipAddress"/>
                          <prop readOnly="True" type="string" name="mountTargetId">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop type="string" name="smbServerFqdn"/>
                        </item>
                      </prop>
                      <prop type="string" name="networkFeatures">
                        <default value="&quot;Basic&quot;"/>
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Basic_Standard&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;Standard_Basic&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="networkSiblingSetId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="originatingResourceId"/>
                      <prop type="array<object>" name="placementRules" identifiers="key">
                        <item type="object">
                          <prop type="string" name="key" required="True"/>
                          <prop type="string" name="value" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="protocolTypes">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="provisionedAvailabilityZone"/>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="string" name="proximityPlacementGroup"/>
                      <prop type="string" name="securityStyle">
                        <default value="&quot;unix&quot;"/>
                        <enum>
                          <item value="&quot;ntfs&quot;"/>
                          <item value="&quot;unix&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="serviceLevel">
                        <default value="&quot;Premium&quot;"/>
                        <enum>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StandardZRS&quot;"/>
                          <item value="&quot;Ultra&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="smbAccessBasedEnumeration">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="smbContinuouslyAvailable">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="smbEncryption">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="smbNonBrowsable">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="snapshotDirectoryVisible">
                        <default value="true"/>
                      </prop>
                      <prop nullable="True" type="string" name="snapshotId"/>
                      <prop readOnly="True" type="string" name="storageToNetworkProximity">
                        <enum>
                          <item value="&quot;AcrossT2&quot;"/>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;T1&quot;"/>
                          <item value="&quot;T2&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="subnetId" required="True"/>
                      <prop readOnly="True" type="string" name="t2Network"/>
                      <prop nullable="True" type="float" name="throughputMibps"/>
                      <prop nullable="True" type="string" name="unixPermissions">
                        <format maxLength="4" minLength="4"/>
                      </prop>
                      <prop type="integer64" name="usageThreshold" required="True">
                        <default value="107374182400"/>
                        <format maximum="2638827906662400" minimum="107374182400"/>
                      </prop>
                      <prop readOnly="True" type="string" name="volumeGroupName"/>
                      <prop type="string" name="volumeSpecName"/>
                      <prop type="string" name="volumeType"/>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                    <prop type="array<string>" name="zones">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceDelete ref="$Subresource">
            <json/>
          </instanceDelete>
        </operation>
        <operation operationId="Volumes_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
            <request method="put">
              <path>
                <param type="string" name="accountName" arg="$Path.accountName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
                </param>
                <param type="string" name="poolName" arg="$Path.poolName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                  <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-07-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@Volume_read"/>
                </json>
              </body>
            </response>
            <response statusCode="202"/>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
      </command>
      <command name="show" version="2023-07-01-preview" confirmation="">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts/{}/capacitypools/{}/volumes/{}" version="2023-07-01-preview" subresource="properties.exportPolicy.rules[]" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRzL3thY2NvdW50TmFtZX0vY2FwYWNpdHlQb29scy97cG9vbE5hbWV9L3ZvbHVtZXMve3ZvbHVtZU5hbWV9/V/MjAyMy0wNy0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.accountName" options="account-name a" required="True" group="" idPart="name">
            <help short="The name of the NetApp account"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
          </arg>
          <arg type="string" var="$Path.poolName" options="pool-name p" required="True" group="" idPart="child_name_1">
            <help short="The name of the capacity pool"/>
            <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.volumeName" options="volume-name name n v" required="True" group="" idPart="child_name_2">
            <help short="The name of the volume"/>
            <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
          </arg>
          <arg type="integer32" var="$body.properties.exportPolicy.rules[].ruleIndex" options="rule-index" required="True">
            <help short="Order index"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="body">
            <prop type="array" name="properties.exportPolicy.rules">
              <item type="object"/>
              <identifier type="integer32" name="[].ruleIndex" arg="$body.properties.exportPolicy.rules[].ruleIndex" required="True"/>
            </prop>
          </json>
        </subresourceSelector>
        <operation operationId="Volumes_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts/{accountName}/capacityPools/{poolName}/volumes/{volumeName}">
            <request method="get">
              <path>
                <param type="string" name="accountName" arg="$Path.accountName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,127}$"/>
                </param>
                <param type="string" name="poolName" arg="$Path.poolName" required="True">
                  <format pattern="^[a-zA-Z0-9][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="volumeName" arg="$Path.volumeName" required="True">
                  <format pattern="^[a-zA-Z][a-zA-Z0-9\-_]{0,63}$" maxLength="64" minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-07-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Volume_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}/capacityPools/{}/volumes/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop readOnly="True" type="float" name="actualThroughputMibps"/>
                      <prop type="string" name="avsDataStore">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="backupId"/>
                      <prop readOnly="True" type="string" name="baremetalTenantId"/>
                      <prop type="string" name="capacityPoolResourceId"/>
                      <prop readOnly="True" nullable="True" type="integer32" name="cloneProgress"/>
                      <prop type="boolean" name="coolAccess">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="coolAccessRetrievalPolicy">
                        <enum>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;Never&quot;"/>
                          <item value="&quot;OnRead&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="coolnessPeriod">
                        <format maximum="183" minimum="7"/>
                      </prop>
                      <prop type="string" name="creationToken" required="True">
                        <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,79}$" maxLength="80" minLength="1"/>
                      </prop>
                      <prop type="object" name="dataProtection">
                        <prop type="object" name="backup">
                          <prop type="boolean" name="backupEnabled"/>
                          <prop type="string" name="backupPolicyId"/>
                          <prop type="string" name="backupVaultId"/>
                          <prop type="boolean" name="policyEnforced"/>
                        </prop>
                        <prop type="object" name="replication">
                          <prop type="string" name="endpointType">
                            <enum>
                              <item value="&quot;dst&quot;"/>
                              <item value="&quot;src&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="remotePath">
                            <prop type="string" name="externalHostName" required="True"/>
                            <prop type="string" name="serverName" required="True"/>
                            <prop type="string" name="volumeName" required="True"/>
                          </prop>
                          <prop type="string" name="remoteVolumeRegion"/>
                          <prop type="string" name="remoteVolumeResourceId" required="True"/>
                          <prop readOnly="True" type="string" name="replicationId"/>
                          <prop type="string" name="replicationSchedule">
                            <enum>
                              <item value="&quot;_10minutely&quot;"/>
                              <item value="&quot;daily&quot;"/>
                              <item value="&quot;hourly&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="snapshot">
                          <prop type="string" name="snapshotPolicyId"/>
                        </prop>
                        <prop type="object" name="volumeRelocation">
                          <prop readOnly="True" type="boolean" name="readyToBeFinalized"/>
                          <prop type="boolean" name="relocationRequested"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="dataStoreResourceId">
                        <item type="string"/>
                      </prop>
                      <prop type="integer64" name="defaultGroupQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="integer64" name="defaultUserQuotaInKiBs">
                        <default value="0"/>
                      </prop>
                      <prop type="boolean" name="deleteBaseSnapshot"/>
                      <prop type="string" name="enableSubvolumes">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="boolean" name="encrypted"/>
                      <prop type="string" name="encryptionKeySource">
                        <default value="&quot;Microsoft.NetApp&quot;"/>
                        <enum>
                          <item value="&quot;Microsoft.KeyVault&quot;"/>
                          <item value="&quot;Microsoft.NetApp&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="exportPolicy">
                        <prop type="array<object>" name="rules" identifiers="ruleIndex">
                          <item type="object">
                            <prop type="string" name="allowedClients"/>
                            <prop type="string" name="chownMode">
                              <default value="&quot;Restricted&quot;"/>
                              <enum>
                                <item value="&quot;Restricted&quot;"/>
                                <item value="&quot;Unrestricted&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="cifs"/>
                            <prop type="boolean" name="hasRootAccess">
                              <default value="true"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5ReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5iReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadOnly">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="kerberos5pReadWrite">
                              <default value="false"/>
                            </prop>
                            <prop type="boolean" name="nfsv3"/>
                            <prop type="boolean" name="nfsv41"/>
                            <prop type="integer32" name="ruleIndex"/>
                            <prop type="boolean" name="unixReadOnly"/>
                            <prop type="boolean" name="unixReadWrite"/>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="fileAccessLogs">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="fileSystemId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="integer64" name="inheritedSizeInBytes"/>
                      <prop type="boolean" name="isDefaultQuotaEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isLargeVolume">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isRestoring"/>
                      <prop type="boolean" name="kerberosEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="keyVaultPrivateEndpointResourceId"/>
                      <prop type="boolean" name="ldapEnabled">
                        <default value="false"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="maximumNumberOfFiles"/>
                      <prop readOnly="True" type="array<object>" name="mountTargets" identifiers="fileSystemId">
                        <item type="object">
                          <prop type="string" name="fileSystemId" required="True">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop readOnly="True" type="string" name="ipAddress"/>
                          <prop readOnly="True" type="string" name="mountTargetId">
                            <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                          </prop>
                          <prop type="string" name="smbServerFqdn"/>
                        </item>
                      </prop>
                      <prop type="string" name="networkFeatures">
                        <default value="&quot;Basic&quot;"/>
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Basic_Standard&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;Standard_Basic&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="networkSiblingSetId">
                        <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="originatingResourceId"/>
                      <prop type="array<object>" name="placementRules" identifiers="key">
                        <item type="object">
                          <prop type="string" name="key" required="True"/>
                          <prop type="string" name="value" required="True"/>
                        </item>
                      </prop>
                      <prop type="array<string>" name="protocolTypes">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" nullable="True" type="string" name="provisionedAvailabilityZone"/>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="string" name="proximityPlacementGroup"/>
                      <prop type="string" name="securityStyle">
                        <default value="&quot;unix&quot;"/>
                        <enum>
                          <item value="&quot;ntfs&quot;"/>
                          <item value="&quot;unix&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="serviceLevel">
                        <default value="&quot;Premium&quot;"/>
                        <enum>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                          <item value="&quot;StandardZRS&quot;"/>
                          <item value="&quot;Ultra&quot;"/>
                        </enum>
                      </prop>
                      <prop nullable="True" type="string" name="smbAccessBasedEnumeration">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="smbContinuouslyAvailable">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="smbEncryption">
                        <default value="false"/>
                      </prop>
                      <prop type="string" name="smbNonBrowsable">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="snapshotDirectoryVisible">
                        <default value="true"/>
                      </prop>
                      <prop nullable="True" type="string" name="snapshotId"/>
                      <prop readOnly="True" type="string" name="storageToNetworkProximity">
                        <enum>
                          <item value="&quot;AcrossT2&quot;"/>
                          <item value="&quot;Default&quot;"/>
                          <item value="&quot;T1&quot;"/>
                          <item value="&quot;T2&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="subnetId" required="True"/>
                      <prop readOnly="True" type="string" name="t2Network"/>
                      <prop nullable="True" type="float" name="throughputMibps"/>
                      <prop nullable="True" type="string" name="unixPermissions">
                        <format maxLength="4" minLength="4"/>
                      </prop>
                      <prop type="integer64" name="usageThreshold" required="True">
                        <default value="107374182400"/>
                        <format maximum="2638827906662400" minimum="107374182400"/>
                      </prop>
                      <prop readOnly="True" type="string" name="volumeGroupName"/>
                      <prop type="string" name="volumeSpecName"/>
                      <prop type="string" name="volumeType"/>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                    <prop type="array<string>" name="zones">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
