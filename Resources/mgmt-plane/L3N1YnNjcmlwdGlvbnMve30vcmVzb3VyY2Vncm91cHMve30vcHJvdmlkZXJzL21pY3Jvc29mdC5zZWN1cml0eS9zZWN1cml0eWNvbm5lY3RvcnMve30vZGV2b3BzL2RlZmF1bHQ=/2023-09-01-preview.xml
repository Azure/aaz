<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}/devops/default" version="2023-09-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9L2Rldm9wcy9kZWZhdWx0/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
  <commandGroup name="security security-connector devops">
    <command name="show" version="2023-09-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}/devops/default" version="2023-09-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9L2Rldm9wcy9kZWZhdWx0/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityConnectorName" options="security-connector-name name n" required="True" group="" idPart="name">
          <help short="The security connector name."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DevOpsConfigurations_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="securityConnectorName" arg="$Path.securityConnectorName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Security/securityConnectors/{}/devops/default"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="authorization">
                      <prop type="string" name="code" secret="True"/>
                    </prop>
                    <prop type="string" name="autoDiscovery">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;NotApplicable&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningStatusMessage"/>
                    <prop readOnly="True" type="dateTime" name="provisioningStatusUpdateTimeUtc"/>
                    <prop type="array<string>" name="topLevelInventoryList">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}/devops/default" version="2023-09-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9L2Rldm9wcy9kZWZhdWx0/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityConnectorName" options="security-connector-name name n" required="True" group="" idPart="name">
          <help short="The security connector name."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DevOpsConfigurations_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="securityConnectorName" arg="$Path.securityConnectorName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}/devops/default" version="2023-09-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9L2Rldm9wcy9kZWZhdWx0/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityConnectorName" options="security-connector-name name n" required="True" group="" idPart="name">
          <help short="The security connector name."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Authorization">
        <arg type="string" var="$devOpsConfiguration.properties.authorization.code" options="authorization-code" group="Authorization">
          <help short="Sets one-time OAuth code to exchange for refresh and access tokens."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$devOpsConfiguration.properties.autoDiscovery" options="auto-discovery" group="Properties">
          <help short="AutoDiscovery states."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="NotApplicable" value="&quot;NotApplicable&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$devOpsConfiguration.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the resource. Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion successful. DeletionFailure - Deletion failure."/>
          <enum>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="DeletionFailure" value="&quot;DeletionFailure&quot;"/>
            <item name="DeletionSuccess" value="&quot;DeletionSuccess&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="Pending" value="&quot;Pending&quot;"/>
            <item name="PendingDeletion" value="&quot;PendingDeletion&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$devOpsConfiguration.properties.topLevelInventoryList" options="inventory-list" group="Properties">
          <help short="List of top-level inventory to select when AutoDiscovery is disabled. This field is ignored when AutoDiscovery is enabled."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <operation operationId="DevOpsConfigurations_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="securityConnectorName" arg="$Path.securityConnectorName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="devOpsConfiguration" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="object" name="authorization">
                      <prop type="string" name="code" arg="$devOpsConfiguration.properties.authorization.code" secret="True"/>
                    </prop>
                    <prop type="string" name="autoDiscovery" arg="$devOpsConfiguration.properties.autoDiscovery">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;NotApplicable&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$devOpsConfiguration.properties.provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="topLevelInventoryList" arg="$devOpsConfiguration.properties.topLevelInventoryList">
                      <item type="string"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DevOpsConfiguration_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Security/securityConnectors/{}/devops/default"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="authorization">
                      <prop type="string" name="code" secret="True"/>
                    </prop>
                    <prop type="string" name="autoDiscovery">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;NotApplicable&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningStatusMessage"/>
                    <prop readOnly="True" type="dateTime" name="provisioningStatusUpdateTimeUtc"/>
                    <prop type="array<string>" name="topLevelInventoryList">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@DevOpsConfiguration_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}/devops/default" version="2023-09-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9L2Rldm9wcy9kZWZhdWx0/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityConnectorName" options="security-connector-name name n" required="True" group="" idPart="name">
          <help short="The security connector name."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Authorization">
        <arg type="string" var="$devOpsConfiguration.properties.authorization.code" options="authorization-code" group="Authorization">
          <help short="Sets one-time OAuth code to exchange for refresh and access tokens. Optional if connector was created by the same identity."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$devOpsConfiguration.properties.autoDiscovery" options="auto-discovery" group="Properties">
          <help short="AutoDiscovery states."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="NotApplicable" value="&quot;NotApplicable&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$devOpsConfiguration.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the resource. Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion successful. DeletionFailure - Deletion failure."/>
          <enum>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="DeletionFailure" value="&quot;DeletionFailure&quot;"/>
            <item name="DeletionSuccess" value="&quot;DeletionSuccess&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="Pending" value="&quot;Pending&quot;"/>
            <item name="PendingDeletion" value="&quot;PendingDeletion&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$devOpsConfiguration.properties.topLevelInventoryList" options="inventory-list" group="Properties">
          <help short="List of top-level inventory to select when AutoDiscovery is disabled. This field is ignored when AutoDiscovery is enabled."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <operation operationId="DevOpsConfigurations_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default">
          <request method="patch">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="securityConnectorName" arg="$Path.securityConnectorName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="devOpsConfiguration" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="object" name="authorization">
                      <prop type="string" name="code" arg="$devOpsConfiguration.properties.authorization.code" secret="True"/>
                    </prop>
                    <prop type="string" name="autoDiscovery" arg="$devOpsConfiguration.properties.autoDiscovery">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;NotApplicable&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$devOpsConfiguration.properties.provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="topLevelInventoryList" arg="$devOpsConfiguration.properties.topLevelInventoryList">
                      <item type="string"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DevOpsConfiguration_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Security/securityConnectors/{}/devops/default"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="authorization">
                      <prop type="string" name="code" secret="True"/>
                    </prop>
                    <prop type="string" name="autoDiscovery">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;NotApplicable&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningStatusMessage"/>
                    <prop readOnly="True" type="dateTime" name="provisioningStatusUpdateTimeUtc"/>
                    <prop type="array<string>" name="topLevelInventoryList">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@DevOpsConfiguration_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
