<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectionmonitors" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGlvbk1vbml0b3Jz/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network watcher connection-monitor">
    <command name="list" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectionmonitors" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGlvbk1vbml0b3Jz/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the Network Watcher resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group-name g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ConnectionMonitors_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors">
          <request method="get">
            <path>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/connectionMonitors/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="boolean" name="autoStart">
                          <default value="true"/>
                        </prop>
                        <prop readOnly="True" type="string" name="connectionMonitorType">
                          <enum>
                            <item value="&quot;MultiEndpoint&quot;"/>
                            <item value="&quot;SingleSourceDestination&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="destination">
                          <prop type="string" name="address"/>
                          <prop type="integer32" name="port">
                            <format maximum="65535" minimum="0"/>
                          </prop>
                          <prop type="string" name="resourceId"/>
                        </prop>
                        <prop type="array<object>" name="endpoints">
                          <item type="object">
                            <prop type="string" name="address"/>
                            <prop type="string" name="coverageLevel">
                              <enum>
                                <item value="&quot;AboveAverage&quot;"/>
                                <item value="&quot;Average&quot;"/>
                                <item value="&quot;BelowAverage&quot;"/>
                                <item value="&quot;Default&quot;"/>
                                <item value="&quot;Full&quot;"/>
                                <item value="&quot;Low&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="filter">
                              <prop type="array<object>" name="items">
                                <item type="object">
                                  <prop type="string" name="address"/>
                                  <prop type="string" name="type">
                                    <enum>
                                      <item value="&quot;AgentAddress&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="type">
                                <enum>
                                  <item value="&quot;Include&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="resourceId"/>
                            <prop type="object" name="scope">
                              <prop type="array<@ConnectionMonitorEndpointScopeItem_read>" name="exclude">
                                <item type="@ConnectionMonitorEndpointScopeItem_read"/>
                              </prop>
                              <prop type="array<object>" name="include">
                                <item type="object" cls="ConnectionMonitorEndpointScopeItem_read">
                                  <prop type="string" name="address"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;AzureArcVM&quot;"/>
                                <item value="&quot;AzureSubnet&quot;"/>
                                <item value="&quot;AzureVM&quot;"/>
                                <item value="&quot;AzureVMSS&quot;"/>
                                <item value="&quot;AzureVNet&quot;"/>
                                <item value="&quot;ExternalAddress&quot;"/>
                                <item value="&quot;MMAWorkspaceMachine&quot;"/>
                                <item value="&quot;MMAWorkspaceNetwork&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="monitoringIntervalInSeconds">
                          <default value="60"/>
                          <format maximum="1800" minimum="30"/>
                        </prop>
                        <prop readOnly="True" type="string" name="monitoringStatus"/>
                        <prop type="string" name="notes"/>
                        <prop type="array<object>" name="outputs">
                          <item type="object">
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;Workspace&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="workspaceSettings">
                              <prop type="string" name="workspaceResourceId"/>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="source">
                          <prop type="integer32" name="port">
                            <format maximum="65535" minimum="0"/>
                          </prop>
                          <prop type="string" name="resourceId" required="True"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="startTime"/>
                        <prop type="array<object>" name="testConfigurations">
                          <item type="object">
                            <prop type="object" name="httpConfiguration">
                              <prop type="string" name="method">
                                <enum>
                                  <item value="&quot;Get&quot;"/>
                                  <item value="&quot;Post&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="path"/>
                              <prop type="integer32" name="port">
                                <format maximum="65535" minimum="0"/>
                              </prop>
                              <prop type="boolean" name="preferHTTPS"/>
                              <prop type="array<object>" name="requestHeaders">
                                <item type="object">
                                  <prop type="string" name="name"/>
                                  <prop type="string" name="value"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="validStatusCodeRanges">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="object" name="icmpConfiguration">
                              <prop type="boolean" name="disableTraceRoute"/>
                            </prop>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="preferredIPVersion">
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="protocol" required="True">
                              <enum>
                                <item value="&quot;Http&quot;"/>
                                <item value="&quot;Icmp&quot;"/>
                                <item value="&quot;Tcp&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="successThreshold">
                              <prop type="integer32" name="checksFailedPercent"/>
                              <prop type="float" name="roundTripTimeMs"/>
                            </prop>
                            <prop type="object" name="tcpConfiguration">
                              <prop type="string" name="destinationPortBehavior">
                                <enum>
                                  <item value="&quot;ListenIfAvailable&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="disableTraceRoute"/>
                              <prop type="integer32" name="port">
                                <format maximum="65535" minimum="0"/>
                              </prop>
                            </prop>
                            <prop type="integer32" name="testFrequencySec"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="testGroups">
                          <item type="object">
                            <prop type="array<string>" name="destinations" required="True">
                              <item type="string"/>
                            </prop>
                            <prop type="boolean" name="disable"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="array<string>" name="sources" required="True">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="testConfigurations" required="True">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
