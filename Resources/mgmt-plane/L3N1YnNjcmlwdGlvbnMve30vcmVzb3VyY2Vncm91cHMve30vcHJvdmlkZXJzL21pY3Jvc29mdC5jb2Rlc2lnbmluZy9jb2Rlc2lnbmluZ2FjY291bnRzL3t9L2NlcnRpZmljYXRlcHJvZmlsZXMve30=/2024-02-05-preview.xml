<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.codesigning/codesigningaccounts/{}/certificateprofiles/{}" version="2024-02-05-preview" swagger="mgmt-plane/codesigning/ResourceProviders/Microsoft.CodeSigning/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29kZVNpZ25pbmcvY29kZVNpZ25pbmdBY2NvdW50cy97YWNjb3VudE5hbWV9L2NlcnRpZmljYXRlUHJvZmlsZXMve3Byb2ZpbGVOYW1lfQ==/V/MjAyNC0wMi0wNS1wcmV2aWV3"/>
  <commandGroup name="trustedsigning certificate-profile">
    <command name="show" version="2024-02-05-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.codesigning/codesigningaccounts/{}/certificateprofiles/{}" version="2024-02-05-preview" swagger="mgmt-plane/codesigning/ResourceProviders/Microsoft.CodeSigning/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29kZVNpZ25pbmcvY29kZVNpZ25pbmdBY2NvdW50cy97YWNjb3VudE5hbWV9L2NlcnRpZmljYXRlUHJvZmlsZXMve3Byb2ZpbGVOYW1lfQ==/V/MjAyNC0wMi0wNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name" required="True" idPart="name">
          <help short="Trusted Signing account name."/>
          <format pattern="^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="string" var="$Path.profileName" options="profile-name name n" required="True" idPart="child_name_1">
          <help short="Certificate profile name."/>
          <format pattern="^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="CertificateProfiles_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CodeSigning/codeSigningAccounts/{accountName}/certificateProfiles/{profileName}">
          <request method="get">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="profileName" arg="$Path.profileName" required="True">
                <format pattern="^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-05-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.CodeSigning/codeSigningAccounts/{}/certificateProfiles/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="array<object>" name="certificates">
                      <item type="object">
                        <prop type="string" name="createdDate"/>
                        <prop type="string" name="expiryDate"/>
                        <prop type="object" name="revocation" clientFlatten="True">
                          <prop type="dateTime" name="effectiveAt"/>
                          <prop type="string" name="failureReason"/>
                          <prop type="string" name="reason"/>
                          <prop type="string" name="remarks"/>
                          <prop type="dateTime" name="requestedAt"/>
                          <prop readOnly="True" type="string" name="status">
                            <enum>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="serialNumber"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Expired&quot;"/>
                            <item value="&quot;Revoked&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subjectName"/>
                        <prop type="string" name="thumbprint"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="city"/>
                    <prop readOnly="True" type="string" name="commonName"/>
                    <prop readOnly="True" type="string" name="country"/>
                    <prop readOnly="True" type="string" name="enhancedKeyUsage"/>
                    <prop type="string" name="identityValidationId"/>
                    <prop type="boolean" name="includeCity">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includeCountry">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includePostalCode">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includeState">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includeStreetAddress">
                      <default value="false"/>
                    </prop>
                    <prop readOnly="True" type="string" name="organization"/>
                    <prop readOnly="True" type="string" name="organizationUnit"/>
                    <prop readOnly="True" type="string" name="postalCode"/>
                    <prop type="string" name="profileType" required="True">
                      <enum>
                        <item value="&quot;PrivateTrust&quot;"/>
                        <item value="&quot;PrivateTrustCIPolicy&quot;"/>
                        <item value="&quot;PublicTrust&quot;"/>
                        <item value="&quot;PublicTrustTest&quot;"/>
                        <item value="&quot;VBSEnclave&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="state"/>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Suspended&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="streetAddress"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-02-05-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.codesigning/codesigningaccounts/{}/certificateprofiles/{}" version="2024-02-05-preview" swagger="mgmt-plane/codesigning/ResourceProviders/Microsoft.CodeSigning/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29kZVNpZ25pbmcvY29kZVNpZ25pbmdBY2NvdW50cy97YWNjb3VudE5hbWV9L2NlcnRpZmljYXRlUHJvZmlsZXMve3Byb2ZpbGVOYW1lfQ==/V/MjAyNC0wMi0wNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name" required="True" idPart="name">
          <help short="Trusted Signing account name."/>
          <format pattern="^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="string" var="$Path.profileName" options="profile-name name n" required="True" idPart="child_name_1">
          <help short="Certificate profile name."/>
          <format pattern="^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="CertificateProfiles_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CodeSigning/codeSigningAccounts/{accountName}/certificateProfiles/{profileName}">
          <request method="delete">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="profileName" arg="$Path.profileName" required="True">
                <format pattern="^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-05-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-02-05-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.codesigning/codesigningaccounts/{}/certificateprofiles/{}" version="2024-02-05-preview" swagger="mgmt-plane/codesigning/ResourceProviders/Microsoft.CodeSigning/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29kZVNpZ25pbmcvY29kZVNpZ25pbmdBY2NvdW50cy97YWNjb3VudE5hbWV9L2NlcnRpZmljYXRlUHJvZmlsZXMve3Byb2ZpbGVOYW1lfQ==/V/MjAyNC0wMi0wNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.accountName" options="account-name" required="True" idPart="name">
          <help short="Trusted Signing account name."/>
          <format pattern="^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="string" var="$Path.profileName" options="profile-name name n" required="True" idPart="child_name_1">
          <help short="Certificate profile name."/>
          <format pattern="^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.identityValidationId" options="identity-validation-id" group="Properties">
          <help short="Identity validation id used for the certificate subject name."/>
        </arg>
        <arg type="boolean" var="$resource.properties.includeCity" options="include-city" group="Properties">
          <help short="Whether to include L in the certificate subject name. Applicable only for private trust, private trust ci profile types"/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$resource.properties.includeCountry" options="include-country" group="Properties">
          <help short="Whether to include C in the certificate subject name. Applicable only for private trust, private trust ci profile types"/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$resource.properties.includePostalCode" options="include-postal-code" group="Properties">
          <help short="Whether to include PC in the certificate subject name."/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$resource.properties.includeState" options="include-state" group="Properties">
          <help short="Whether to include S in the certificate subject name. Applicable only for private trust, private trust ci profile types"/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$resource.properties.includeStreetAddress" options="include-street-address" group="Properties">
          <help short="Whether to include STREET in the certificate subject name."/>
          <default value="false"/>
        </arg>
        <arg type="string" var="$resource.properties.profileType" options="profile-type" group="Properties">
          <help short="Profile type of the certificate."/>
          <enum>
            <item name="PrivateTrust" value="&quot;PrivateTrust&quot;"/>
            <item name="PrivateTrustCIPolicy" value="&quot;PrivateTrustCIPolicy&quot;"/>
            <item name="PublicTrust" value="&quot;PublicTrust&quot;"/>
            <item name="PublicTrustTest" value="&quot;PublicTrustTest&quot;"/>
            <item name="VBSEnclave" value="&quot;VBSEnclave&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="CertificateProfiles_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CodeSigning/codeSigningAccounts/{accountName}/certificateProfiles/{profileName}">
          <request method="put">
            <path>
              <param type="string" name="accountName" arg="$Path.accountName" required="True">
                <format pattern="^(?=.{3,24}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="profileName" arg="$Path.profileName" required="True">
                <format pattern="^(?=.{5,100}$)[^0-9][A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-05-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="identityValidationId" arg="$resource.properties.identityValidationId"/>
                    <prop type="boolean" name="includeCity" arg="$resource.properties.includeCity">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includeCountry" arg="$resource.properties.includeCountry">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includePostalCode" arg="$resource.properties.includePostalCode">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includeState" arg="$resource.properties.includeState">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includeStreetAddress" arg="$resource.properties.includeStreetAddress">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="profileType" arg="$resource.properties.profileType" required="True">
                      <enum>
                        <item value="&quot;PrivateTrust&quot;"/>
                        <item value="&quot;PrivateTrustCIPolicy&quot;"/>
                        <item value="&quot;PublicTrust&quot;"/>
                        <item value="&quot;PublicTrustTest&quot;"/>
                        <item value="&quot;VBSEnclave&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.CodeSigning/codeSigningAccounts/{}/certificateProfiles/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="array<object>" name="certificates">
                      <item type="object">
                        <prop type="string" name="createdDate"/>
                        <prop type="string" name="expiryDate"/>
                        <prop type="object" name="revocation" clientFlatten="True">
                          <prop type="dateTime" name="effectiveAt"/>
                          <prop type="string" name="failureReason"/>
                          <prop type="string" name="reason"/>
                          <prop type="string" name="remarks"/>
                          <prop type="dateTime" name="requestedAt"/>
                          <prop readOnly="True" type="string" name="status">
                            <enum>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="serialNumber"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Expired&quot;"/>
                            <item value="&quot;Revoked&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subjectName"/>
                        <prop type="string" name="thumbprint"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="city"/>
                    <prop readOnly="True" type="string" name="commonName"/>
                    <prop readOnly="True" type="string" name="country"/>
                    <prop readOnly="True" type="string" name="enhancedKeyUsage"/>
                    <prop type="string" name="identityValidationId"/>
                    <prop type="boolean" name="includeCity">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includeCountry">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includePostalCode">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includeState">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="includeStreetAddress">
                      <default value="false"/>
                    </prop>
                    <prop readOnly="True" type="string" name="organization"/>
                    <prop readOnly="True" type="string" name="organizationUnit"/>
                    <prop readOnly="True" type="string" name="postalCode"/>
                    <prop type="string" name="profileType" required="True">
                      <enum>
                        <item value="&quot;PrivateTrust&quot;"/>
                        <item value="&quot;PrivateTrustCIPolicy&quot;"/>
                        <item value="&quot;PublicTrust&quot;"/>
                        <item value="&quot;PublicTrustTest&quot;"/>
                        <item value="&quot;VBSEnclave&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="state"/>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Suspended&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="streetAddress"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
