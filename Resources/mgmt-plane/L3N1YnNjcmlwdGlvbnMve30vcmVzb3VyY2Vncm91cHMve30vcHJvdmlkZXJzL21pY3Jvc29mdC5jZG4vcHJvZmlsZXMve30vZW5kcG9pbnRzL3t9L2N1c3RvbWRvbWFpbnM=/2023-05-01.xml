<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/endpoints/{}/customdomains" version="2023-05-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vZW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9L2N1c3RvbURvbWFpbnM=/V/MjAyMy0wNS0wMQ=="/>
  <commandGroup name="cdn custom-domain">
    <command name="list" version="2023-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/endpoints/{}/customdomains" version="2023-05-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vZW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9L2N1c3RvbURvbWFpbnM=/V/MjAyMy0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.endpointName" options="endpoint-name" required="True" idPart="child_name_1">
          <help short="Name of the endpoint under the profile which is unique globally."/>
        </arg>
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the CDN profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="CustomDomains_ListByEndpoint">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains">
          <request method="get">
            <path>
              <param type="string" name="endpointName" arg="$Path.endpointName" required="True"/>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/endpoints/{}/customDomains/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="customHttpsParameters">
                          <prop type="string" name="certificateSource" required="True">
                            <enum>
                              <item value="&quot;AzureKeyVault&quot;"/>
                              <item value="&quot;Cdn&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="minimumTlsVersion">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;TLS10&quot;"/>
                              <item value="&quot;TLS12&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="protocolType" required="True">
                            <enum>
                              <item value="&quot;IPBased&quot;"/>
                              <item value="&quot;ServerNameIndication&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="certificateSource" value="AzureKeyVault">
                            <prop type="object" name="certificateSourceParameters" required="True">
                              <prop type="string" name="deleteRule" required="True">
                                <enum>
                                  <item value="&quot;NoAction&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="resourceGroupName" required="True"/>
                              <prop type="string" name="secretName" required="True"/>
                              <prop type="string" name="secretVersion"/>
                              <prop type="string" name="subscriptionId" required="True"/>
                              <prop type="string" name="typeName" required="True">
                                <enum>
                                  <item value="&quot;KeyVaultCertificateSourceParameters&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="updateRule" required="True">
                                <enum>
                                  <item value="&quot;NoAction&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="vaultName" required="True"/>
                            </prop>
                          </discriminator>
                          <discriminator property="certificateSource" value="Cdn">
                            <prop type="object" name="certificateSourceParameters" required="True">
                              <prop type="string" name="certificateType" required="True">
                                <enum>
                                  <item value="&quot;Dedicated&quot;"/>
                                  <item value="&quot;Shared&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="typeName" required="True">
                                <enum>
                                  <item value="&quot;CdnCertificateSourceParameters&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </discriminator>
                        </prop>
                        <prop readOnly="True" type="string" name="customHttpsProvisioningState">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Disabling&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Enabling&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="customHttpsProvisioningSubstate">
                          <enum>
                            <item value="&quot;CertificateDeleted&quot;"/>
                            <item value="&quot;CertificateDeployed&quot;"/>
                            <item value="&quot;DeletingCertificate&quot;"/>
                            <item value="&quot;DeployingCertificate&quot;"/>
                            <item value="&quot;DomainControlValidationRequestApproved&quot;"/>
                            <item value="&quot;DomainControlValidationRequestRejected&quot;"/>
                            <item value="&quot;DomainControlValidationRequestTimedOut&quot;"/>
                            <item value="&quot;IssuingCertificate&quot;"/>
                            <item value="&quot;PendingDomainControlValidationREquestApproval&quot;"/>
                            <item value="&quot;SubmittingDomainControlValidationRequest&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="hostName" required="True"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Disabling&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Enabling&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="resourceState">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="validationData"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;application&quot;"/>
                            <item value="&quot;key&quot;"/>
                            <item value="&quot;managedIdentity&quot;"/>
                            <item value="&quot;user&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;application&quot;"/>
                            <item value="&quot;key&quot;"/>
                            <item value="&quot;managedIdentity&quot;"/>
                            <item value="&quot;user&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
