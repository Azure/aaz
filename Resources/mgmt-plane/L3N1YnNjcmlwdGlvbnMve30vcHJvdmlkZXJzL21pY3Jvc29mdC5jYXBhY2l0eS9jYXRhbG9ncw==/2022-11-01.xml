<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.capacity/catalogs" version="2022-11-01" swagger="mgmt-plane/reservations/ResourceProviders/Microsoft.Capacity/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNhcGFjaXR5L2NhdGFsb2dz/V/MjAyMi0xMS0wMQ=="/>
  <commandGroup name="reservations catalog">
    <command name="show" version="2022-11-01">
      <resource id="/subscriptions/{}/providers/microsoft.capacity/catalogs" version="2022-11-01" swagger="mgmt-plane/reservations/ResourceProviders/Microsoft.Capacity/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNhcGFjaXR5L2NhdGFsb2dz/V/MjAyMi0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription-id" required="True" group="" idPart="subscription">
          <help short="subscription id"/>
        </arg>
        <arg type="string" var="$Query.filter" options="filter">
          <help short="May be used to filter by Catalog properties. The filter supports 'eq', 'or', and 'and'."/>
        </arg>
        <arg type="string" var="$Query.location" options="location">
          <help short="Filters the skus based on the location specified in this parameter. This can be an azure region or global"/>
        </arg>
        <arg type="string" var="$Query.offerId" options="offer-id">
          <help short="Offer id used to get the third party products"/>
        </arg>
        <arg type="string" var="$Query.planId" options="plan-id">
          <help short="Plan id used to get the third party products"/>
        </arg>
        <arg type="string" var="$Query.publisherId" options="publisher-id">
          <help short="Publisher id used to get the third party products"/>
        </arg>
        <arg type="string" var="$Query.reservedResourceType" options="reserved-resource-type">
          <help short="The type of the resource for which the skus should be provided."/>
        </arg>
        <arg type="float" var="$Query.skip" options="skip">
          <help short="The number of reservations to skip from the list before returning results"/>
        </arg>
        <arg type="float" var="$Query.take" options="take">
          <help short="To number of reservations to return"/>
        </arg>
      </argGroup>
      <operation operationId="GetCatalog">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="float" name="$skip" arg="$Query.skip"/>
              <param type="float" name="$take" arg="$Query.take"/>
              <param type="string" name="location" arg="$Query.location"/>
              <param type="string" name="offerId" arg="$Query.offerId"/>
              <param type="string" name="planId" arg="$Query.planId"/>
              <param type="string" name="publisherId" arg="$Query.publisherId"/>
              <param type="string" name="reservedResourceType" arg="$Query.reservedResourceType"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="integer64" name="totalItems"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop type="object" name="billingPlans">
                        <additionalProp>
                          <item type="array<string>">
                            <item type="string">
                              <enum>
                                <item value="&quot;Monthly&quot;"/>
                                <item value="&quot;Upfront&quot;"/>
                              </enum>
                            </item>
                          </item>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="capabilities" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="locations">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="object" name="msrp">
                        <prop type="object" name="p1Y">
                          <prop type="float64" name="amount"/>
                          <prop type="string" name="currencyCode"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop readOnly="True" type="string" name="resourceType"/>
                      <prop readOnly="True" type="array<object>" name="restrictions">
                        <item type="object">
                          <prop type="string" name="reasonCode"/>
                          <prop type="string" name="type"/>
                          <prop type="array<string>" name="values">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="size"/>
                      <prop readOnly="True" type="array<object>" name="skuProperties" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="terms">
                        <item type="string">
                          <enum>
                            <item value="&quot;P1Y&quot;"/>
                            <item value="&quot;P3Y&quot;"/>
                            <item value="&quot;P5Y&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="tier"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
