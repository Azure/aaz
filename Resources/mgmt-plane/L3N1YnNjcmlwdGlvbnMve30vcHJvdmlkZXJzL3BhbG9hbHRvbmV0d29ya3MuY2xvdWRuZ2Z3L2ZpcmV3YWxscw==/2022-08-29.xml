<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/paloaltonetworks.cloudngfw/firewalls" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvUGFsb0FsdG9OZXR3b3Jrcy5DbG91ZG5nZncvZmlyZXdhbGxz/V/MjAyMi0wOC0yOQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/paloaltonetworks.cloudngfw/firewalls" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QYWxvQWx0b05ldHdvcmtzLkNsb3Vkbmdmdy9maXJld2FsbHM=/V/MjAyMi0wOC0yOQ=="/>
  <commandGroup name="palo-alto cloudngfw firewall">
    <command name="list" version="2022-08-29">
      <resource id="/subscriptions/{}/providers/paloaltonetworks.cloudngfw/firewalls" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvUGFsb0FsdG9OZXR3b3Jrcy5DbG91ZG5nZncvZmlyZXdhbGxz/V/MjAyMi0wOC0yOQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/paloaltonetworks.cloudngfw/firewalls" version="2022-08-29" swagger="mgmt-plane/paloaltonetworks/ResourceProviders/PaloAltoNetworks.Cloudngfw/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QYWxvQWx0b05ldHdvcmtzLkNsb3Vkbmdmdy9maXJld2FsbHM=/V/MjAyMi0wOC0yOQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Firewalls_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Firewalls_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Firewalls_ListByResourceGroup" operationId="Firewalls_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PaloAltoNetworks.Cloudngfw/firewalls">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-29&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop type="string" name="clientId"/>
                              <prop type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="object" name="associatedRulestack">
                          <prop type="string" name="location"/>
                          <prop type="string" name="resourceId"/>
                          <prop type="string" name="rulestackId"/>
                        </prop>
                        <prop type="object" name="dnsSettings" required="True">
                          <prop type="array<@IPAddress_read>" name="dnsServers">
                            <item type="@IPAddress_read"/>
                          </prop>
                          <prop type="string" name="enableDnsProxy">
                            <enum>
                              <item value="&quot;DISABLED&quot;"/>
                              <item value="&quot;ENABLED&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="enabledDnsType">
                            <enum>
                              <item value="&quot;AZURE&quot;"/>
                              <item value="&quot;CUSTOM&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="frontEndSettings">
                          <item type="object">
                            <prop type="@EndpointConfiguration_read" name="backendConfiguration" required="True"/>
                            <prop type="object" name="frontendConfiguration" required="True" cls="EndpointConfiguration_read">
                              <prop type="@IPAddress_read" name="address" required="True"/>
                              <prop type="string" name="port" required="True"/>
                            </prop>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="protocol" required="True">
                              <enum>
                                <item value="&quot;TCP&quot;"/>
                                <item value="&quot;UDP&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="isPanoramaManaged">
                          <enum>
                            <item value="&quot;FALSE&quot;"/>
                            <item value="&quot;TRUE&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="marketplaceDetails" required="True">
                          <prop readOnly="True" type="string" name="marketplaceSubscriptionId"/>
                          <prop type="string" name="marketplaceSubscriptionStatus">
                            <enum>
                              <item value="&quot;FulfillmentRequested&quot;"/>
                              <item value="&quot;NotStarted&quot;"/>
                              <item value="&quot;PendingFulfillmentStart&quot;"/>
                              <item value="&quot;Subscribed&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;Unsubscribed&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="offerId" required="True"/>
                          <prop type="string" name="publisherId" required="True"/>
                        </prop>
                        <prop type="object" name="networkProfile" required="True">
                          <prop type="array<@IPAddress_read>" name="egressNatIp">
                            <item type="@IPAddress_read"/>
                          </prop>
                          <prop type="string" name="enableEgressNat" required="True">
                            <enum>
                              <item value="&quot;DISABLED&quot;"/>
                              <item value="&quot;ENABLED&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="networkType" required="True">
                            <enum>
                              <item value="&quot;VNET&quot;"/>
                              <item value="&quot;VWAN&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<@IPAddress_read>" name="publicIps" required="True">
                            <item type="@IPAddress_read"/>
                          </prop>
                          <prop type="object" name="vnetConfiguration">
                            <prop type="object" name="ipOfTrustSubnetForUdr" cls="IPAddress_read">
                              <prop type="string" name="address"/>
                              <prop type="string" name="resourceId"/>
                            </prop>
                            <prop type="@IPAddressSpace_read" name="trustSubnet" required="True"/>
                            <prop type="@IPAddressSpace_read" name="unTrustSubnet" required="True"/>
                            <prop type="object" name="vnet" required="True" cls="IPAddressSpace_read">
                              <prop type="string" name="addressSpace"/>
                              <prop type="string" name="resourceId"/>
                            </prop>
                          </prop>
                          <prop type="object" name="vwanConfiguration">
                            <prop type="@IPAddress_read" name="ipOfTrustSubnetForUdr"/>
                            <prop type="string" name="networkVirtualApplianceId"/>
                            <prop type="@IPAddressSpace_read" name="trustSubnet"/>
                            <prop type="@IPAddressSpace_read" name="unTrustSubnet"/>
                            <prop type="@IPAddressSpace_read" name="vHub" required="True"/>
                          </prop>
                        </prop>
                        <prop type="string" name="panEtag"/>
                        <prop type="object" name="panoramaConfig">
                          <prop readOnly="True" type="string" name="cgName"/>
                          <prop type="string" name="configString" required="True"/>
                          <prop readOnly="True" type="string" name="dgName"/>
                          <prop readOnly="True" type="string" name="hostName"/>
                          <prop readOnly="True" type="string" name="panoramaServer"/>
                          <prop readOnly="True" type="string" name="panoramaServer2"/>
                          <prop readOnly="True" type="string" name="tplName"/>
                          <prop readOnly="True" type="string" name="vmAuthKey"/>
                        </prop>
                        <prop type="object" name="planData" required="True">
                          <prop type="string" name="billingCycle" required="True">
                            <enum>
                              <item value="&quot;MONTHLY&quot;"/>
                              <item value="&quot;WEEKLY&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="effectiveDate"/>
                          <prop type="string" name="planId" required="True">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="usageType">
                            <enum>
                              <item value="&quot;COMMITTED&quot;"/>
                              <item value="&quot;PAYG&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Firewalls_ListBySubscription" operationId="Firewalls_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/PaloAltoNetworks.Cloudngfw/firewalls">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-29&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/PaloAltoNetworks.Cloudngfw/firewalls/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="string" name="principalId"/>
                        <prop readOnly="True" type="string" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop type="string" name="clientId"/>
                              <prop type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="object" name="associatedRulestack">
                          <prop type="string" name="location"/>
                          <prop type="string" name="resourceId"/>
                          <prop type="string" name="rulestackId"/>
                        </prop>
                        <prop type="object" name="dnsSettings" required="True">
                          <prop type="array<@IPAddress_read>" name="dnsServers">
                            <item type="@IPAddress_read"/>
                          </prop>
                          <prop type="string" name="enableDnsProxy">
                            <enum>
                              <item value="&quot;DISABLED&quot;"/>
                              <item value="&quot;ENABLED&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="enabledDnsType">
                            <enum>
                              <item value="&quot;AZURE&quot;"/>
                              <item value="&quot;CUSTOM&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="frontEndSettings">
                          <item type="object">
                            <prop type="@EndpointConfiguration_read" name="backendConfiguration" required="True"/>
                            <prop type="@EndpointConfiguration_read" name="frontendConfiguration" required="True"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="protocol" required="True">
                              <enum>
                                <item value="&quot;TCP&quot;"/>
                                <item value="&quot;UDP&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="isPanoramaManaged">
                          <enum>
                            <item value="&quot;FALSE&quot;"/>
                            <item value="&quot;TRUE&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="marketplaceDetails" required="True">
                          <prop readOnly="True" type="string" name="marketplaceSubscriptionId"/>
                          <prop type="string" name="marketplaceSubscriptionStatus">
                            <enum>
                              <item value="&quot;FulfillmentRequested&quot;"/>
                              <item value="&quot;NotStarted&quot;"/>
                              <item value="&quot;PendingFulfillmentStart&quot;"/>
                              <item value="&quot;Subscribed&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;Unsubscribed&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="offerId" required="True"/>
                          <prop type="string" name="publisherId" required="True"/>
                        </prop>
                        <prop type="object" name="networkProfile" required="True">
                          <prop type="array<@IPAddress_read>" name="egressNatIp">
                            <item type="@IPAddress_read"/>
                          </prop>
                          <prop type="string" name="enableEgressNat" required="True">
                            <enum>
                              <item value="&quot;DISABLED&quot;"/>
                              <item value="&quot;ENABLED&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="networkType" required="True">
                            <enum>
                              <item value="&quot;VNET&quot;"/>
                              <item value="&quot;VWAN&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<@IPAddress_read>" name="publicIps" required="True">
                            <item type="@IPAddress_read"/>
                          </prop>
                          <prop type="object" name="vnetConfiguration">
                            <prop type="@IPAddress_read" name="ipOfTrustSubnetForUdr"/>
                            <prop type="@IPAddressSpace_read" name="trustSubnet" required="True"/>
                            <prop type="@IPAddressSpace_read" name="unTrustSubnet" required="True"/>
                            <prop type="@IPAddressSpace_read" name="vnet" required="True"/>
                          </prop>
                          <prop type="object" name="vwanConfiguration">
                            <prop type="@IPAddress_read" name="ipOfTrustSubnetForUdr"/>
                            <prop type="string" name="networkVirtualApplianceId"/>
                            <prop type="@IPAddressSpace_read" name="trustSubnet"/>
                            <prop type="@IPAddressSpace_read" name="unTrustSubnet"/>
                            <prop type="@IPAddressSpace_read" name="vHub" required="True"/>
                          </prop>
                        </prop>
                        <prop type="string" name="panEtag"/>
                        <prop type="object" name="panoramaConfig">
                          <prop readOnly="True" type="string" name="cgName"/>
                          <prop type="string" name="configString" required="True"/>
                          <prop readOnly="True" type="string" name="dgName"/>
                          <prop readOnly="True" type="string" name="hostName"/>
                          <prop readOnly="True" type="string" name="panoramaServer"/>
                          <prop readOnly="True" type="string" name="panoramaServer2"/>
                          <prop readOnly="True" type="string" name="tplName"/>
                          <prop readOnly="True" type="string" name="vmAuthKey"/>
                        </prop>
                        <prop type="object" name="planData" required="True">
                          <prop type="string" name="billingCycle" required="True">
                            <enum>
                              <item value="&quot;MONTHLY&quot;"/>
                              <item value="&quot;WEEKLY&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="effectiveDate"/>
                          <prop type="string" name="planId" required="True">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="usageType">
                            <enum>
                              <item value="&quot;COMMITTED&quot;"/>
                              <item value="&quot;PAYG&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
