<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network express-route peering">
    <command name="show" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="string" var="$Path.peeringName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the peering."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteCircuitPeerings_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}">
          <request method="get">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="azureASN"/>
                    <prop type="array<object>" name="connections">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="addressPrefix"/>
                          <prop type="string" name="authorizationKey"/>
                          <prop readOnly="True" type="string" name="circuitConnectionStatus">
                            <enum>
                              <item value="&quot;Connected&quot;"/>
                              <item value="&quot;Connecting&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                            </enum>
                          </prop>
                          <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                          <prop type="object" name="ipv6CircuitConnectionConfig">
                            <prop type="string" name="addressPrefix"/>
                            <prop readOnly="True" type="string" name="circuitConnectionStatus">
                              <enum>
                                <item value="&quot;Connected&quot;"/>
                                <item value="&quot;Connecting&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="object" name="expressRouteConnection">
                      <prop readOnly="True" type="string" name="id"/>
                    </prop>
                    <prop type="string" name="gatewayManagerEtag"/>
                    <prop type="object" name="ipv6PeeringConfig">
                      <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                      <prop type="string" name="primaryPeerAddressPrefix"/>
                      <prop type="@SubResource_read" name="routeFilter"/>
                      <prop type="string" name="secondaryPeerAddressPrefix"/>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                      <prop type="array<string>" name="advertisedCommunities">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="advertisedPublicPrefixes">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                        <enum>
                          <item value="&quot;Configured&quot;"/>
                          <item value="&quot;Configuring&quot;"/>
                          <item value="&quot;NotConfigured&quot;"/>
                          <item value="&quot;ValidationNeeded&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="customerASN"/>
                      <prop type="integer32" name="legacyMode"/>
                      <prop type="string" name="routingRegistryName"/>
                    </prop>
                    <prop type="integer64" name="peerASN">
                      <format maximum="4294967295" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="peeredConnections">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="addressPrefix"/>
                          <prop type="string" name="authResourceGuid"/>
                          <prop readOnly="True" type="string" name="circuitConnectionStatus">
                            <enum>
                              <item value="&quot;Connected&quot;"/>
                              <item value="&quot;Connecting&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="connectionName"/>
                          <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                          <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="peeringType">
                      <enum>
                        <item value="&quot;AzurePrivatePeering&quot;"/>
                        <item value="&quot;AzurePublicPeering&quot;"/>
                        <item value="&quot;MicrosoftPeering&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="primaryAzurePort"/>
                    <prop type="string" name="primaryPeerAddressPrefix"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="routeFilter" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="string" name="secondaryAzurePort"/>
                    <prop type="string" name="secondaryPeerAddressPrefix"/>
                    <prop type="string" name="sharedKey"/>
                    <prop type="string" name="state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="stats">
                      <prop type="integer64" name="primarybytesIn"/>
                      <prop type="integer64" name="primarybytesOut"/>
                      <prop type="integer64" name="secondarybytesIn"/>
                      <prop type="integer64" name="secondarybytesOut"/>
                    </prop>
                    <prop type="integer32" name="vlanId"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="string" var="$Path.peeringName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the peering."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteCircuitPeerings_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}">
          <request method="delete">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="string" var="$Path.peeringName" options="peering-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the peering."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="integer64" var="$peeringParameters.properties.peerASN" options="peer-asn" group="">
          <help short="Autonomous system number of the customer/connectivity provider."/>
          <format maximum="4294967295" minimum="1"/>
        </arg>
        <arg type="string" var="$peeringParameters.properties.peeringType" options="peering-type" group="">
          <help short="BGP peering type for the circuit.  Allowed values: AzurePrivatePeering, AzurePublicPeering, MicrosoftPeering."/>
          <enum>
            <item name="AzurePrivatePeering" value="&quot;AzurePrivatePeering&quot;"/>
            <item name="AzurePublicPeering" value="&quot;AzurePublicPeering&quot;"/>
            <item name="MicrosoftPeering" value="&quot;MicrosoftPeering&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$peeringParameters.properties.primaryPeerAddressPrefix" options="primary-peer-subnet" group="">
          <help short="/30(ipv4) or /126(ipv6) subnet used to configure IP addresses for primary interface."/>
        </arg>
        <arg type="string" var="$peeringParameters.properties.secondaryPeerAddressPrefix" options="secondary-peer-subnet" group="">
          <help short="/30(ipv4) or /126(ipv6) subnet used to configure IP addresses for secondary interface."/>
        </arg>
        <arg type="string" var="$peeringParameters.properties.sharedKey" options="shared-key" group="">
          <help short="Key for generating an MD5 for the BGP session."/>
        </arg>
        <arg type="integer32" var="$peeringParameters.properties.vlanId" options="vlan-id" group="">
          <help short="Identifier used to identify the customer."/>
        </arg>
      </argGroup>
      <argGroup name="Microsoft Peering">
        <arg type="array<string>" var="$peeringParameters.properties.microsoftPeeringConfig.advertisedPublicPrefixes" options="advertised-public-prefixes" group="Microsoft Peering">
          <help short="Space-separated list of prefixes to be advertised through the BGP peering."/>
          <item type="string"/>
        </arg>
        <arg type="integer32" var="$peeringParameters.properties.microsoftPeeringConfig.customerASN" options="customer-asn" group="Microsoft Peering">
          <help short="Autonomous system number of the customer."/>
        </arg>
        <arg type="integer32" var="$peeringParameters.properties.microsoftPeeringConfig.legacyMode" options="legacy-mode" group="Microsoft Peering">
          <help short="Integer representing the legacy mode of the peering."/>
        </arg>
        <arg type="string" var="$peeringParameters.properties.microsoftPeeringConfig.routingRegistryName" options="routing-registry-name" group="Microsoft Peering">
          <help short="Internet Routing Registry / Regional Internet Registry. Allowed values: AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC."/>
        </arg>
        <arg type="string" var="$peeringParameters.properties.routeFilter.id" options="route-filter" group="Microsoft Peering">
          <help short="Name or ID of a route filter to apply to the peering settings."/>
        </arg>
      </argGroup>
      <argGroup name="MicrosoftPeeringConfig">
        <arg type="array<string>" var="$peeringParameters.properties.microsoftPeeringConfig.advertisedCommunities" options="advertised-communities" hide="True" group="MicrosoftPeeringConfig">
          <help short="advertised-communities"/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="PeeringParameters">
        <arg type="ResourceId" var="$peeringParameters.id" options="id" hide="True" group="PeeringParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="integer32" var="$peeringParameters.properties.azureASN" options="azure-asn" hide="True" group="Properties">
          <help short="The Azure ASN."/>
        </arg>
        <arg type="array<object>" var="$peeringParameters.properties.connections" options="connections" hide="True" group="Properties">
          <help short="The list of circuit connections associated with Azure Private Peering for this circuit."/>
          <item type="object">
            <arg type="ResourceId" var="$peeringParameters.properties.connections[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
            </arg>
            <arg type="string" var="$peeringParameters.properties.connections[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$peeringParameters.properties.connections[].properties.addressPrefix" options="address-prefix" group="Properties">
              <help short="/29 IP address space to carve out Customer addresses for tunnels."/>
            </arg>
            <arg type="string" var="$peeringParameters.properties.connections[].properties.authorizationKey" options="authorization-key" group="Properties">
              <help short="The authorization key."/>
            </arg>
            <arg type="object" var="$peeringParameters.properties.connections[].properties.expressRouteCircuitPeering" options="express-route-circuit-peering" group="Properties" cls="SubResource_create">
              <help short="Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."/>
              <arg type="string" var="@SubResource_create.id" options="filter-id" group="">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg type="object" var="$peeringParameters.properties.connections[].properties.ipv6CircuitConnectionConfig" options="ipv6-circuit-connection-config" group="Properties">
              <help short="IPv6 Address PrefixProperties of the express route circuit connection."/>
              <arg type="string" var="$peeringParameters.properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix" options="address-prefix">
                <help short="/125 IP address space to carve out customer addresses for global reach."/>
              </arg>
            </arg>
            <arg type="@SubResource_create" var="$peeringParameters.properties.connections[].properties.peerExpressRouteCircuitPeering" options="peer-express-route-circuit-peering" group="Properties">
              <help short="Reference to Express Route Circuit Private Peering Resource of the peered circuit."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$peeringParameters.properties.gatewayManagerEtag" options="gateway-manager-etag" hide="True" group="Properties">
          <help short="The GatewayManager Etag."/>
        </arg>
        <arg type="object" var="$peeringParameters.properties.ipv6PeeringConfig" options="ipv6-peering-config" group="Properties">
          <help short="The IPv6 peering configuration."/>
          <arg type="object" var="$peeringParameters.properties.ipv6PeeringConfig.microsoftPeeringConfig" options="microsoft-peering-config" cls="ExpressRouteCircuitPeeringConfig_create">
            <help short="The Microsoft peering configuration."/>
            <arg type="array<string>" var="@ExpressRouteCircuitPeeringConfig_create.advertisedCommunities" options="advertised-communities">
              <help short="The communities of bgp peering. Specified for microsoft peering."/>
              <item type="string"/>
            </arg>
            <arg type="array<string>" var="@ExpressRouteCircuitPeeringConfig_create.advertisedPublicPrefixes" options="advertised-public-prefixes">
              <help short="The reference to AdvertisedPublicPrefixes."/>
              <item type="string"/>
            </arg>
            <arg type="integer32" var="@ExpressRouteCircuitPeeringConfig_create.customerASN" options="customer-asn">
              <help short="The CustomerASN of the peering."/>
            </arg>
            <arg type="integer32" var="@ExpressRouteCircuitPeeringConfig_create.legacyMode" options="legacy-mode">
              <help short="The legacy mode of the peering."/>
            </arg>
            <arg type="string" var="@ExpressRouteCircuitPeeringConfig_create.routingRegistryName" options="routing-registry-name">
              <help short="The RoutingRegistryName of the configuration."/>
            </arg>
          </arg>
          <arg type="string" var="$peeringParameters.properties.ipv6PeeringConfig.primaryPeerAddressPrefix" options="primary-peer-address-prefix">
            <help short="The primary address prefix."/>
          </arg>
          <arg type="string" var="$peeringParameters.properties.ipv6PeeringConfig.routeFilter.id" options="route-filter" group="">
            <help short="The reference to the RouteFilter resource."/>
          </arg>
          <arg type="string" var="$peeringParameters.properties.ipv6PeeringConfig.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix">
            <help short="The secondary address prefix."/>
          </arg>
          <arg type="string" var="$peeringParameters.properties.ipv6PeeringConfig.state" options="state">
            <help short="The state of peering."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$peeringParameters.properties.primaryAzurePort" options="primary-azure-port" hide="True" group="Properties">
          <help short="The primary port."/>
        </arg>
        <arg type="string" var="$peeringParameters.properties.secondaryAzurePort" options="secondary-azure-port" hide="True" group="Properties">
          <help short="The secondary port."/>
        </arg>
        <arg type="string" var="$peeringParameters.properties.state" options="state" hide="True" group="Properties">
          <help short="The peering state."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$peeringParameters.properties.stats" options="stats" hide="True" group="Properties">
          <help short="The peering stats of express route circuit."/>
          <arg type="integer64" var="$peeringParameters.properties.stats.primarybytesIn" options="primarybytes-in">
            <help short="The Primary BytesIn of the peering."/>
          </arg>
          <arg type="integer64" var="$peeringParameters.properties.stats.primarybytesOut" options="primarybytes-out">
            <help short="The primary BytesOut of the peering."/>
          </arg>
          <arg type="integer64" var="$peeringParameters.properties.stats.secondarybytesIn" options="secondarybytes-in">
            <help short="The secondary BytesIn of the peering."/>
          </arg>
          <arg type="integer64" var="$peeringParameters.properties.stats.secondarybytesOut" options="secondarybytes-out">
            <help short="The secondary BytesOut of the peering."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteCircuitPeerings_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}">
          <request method="put">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="peeringParameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$peeringParameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                  </prop>
                  <prop type="string" name="name" arg="$Path.peeringName"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="azureASN" arg="$peeringParameters.properties.azureASN"/>
                    <prop type="array<object>" name="connections" arg="$peeringParameters.properties.connections">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$peeringParameters.properties.connections[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$peeringParameters.properties.connections[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="addressPrefix" arg="$peeringParameters.properties.connections[].properties.addressPrefix"/>
                          <prop type="string" name="authorizationKey" arg="$peeringParameters.properties.connections[].properties.authorizationKey"/>
                          <prop type="object" name="expressRouteCircuitPeering" arg="$peeringParameters.properties.connections[].properties.expressRouteCircuitPeering" cls="SubResource_create">
                            <prop type="string" name="id" arg="@SubResource_create.id"/>
                          </prop>
                          <prop type="object" name="ipv6CircuitConnectionConfig" arg="$peeringParameters.properties.connections[].properties.ipv6CircuitConnectionConfig">
                            <prop type="string" name="addressPrefix" arg="$peeringParameters.properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix"/>
                          </prop>
                          <prop type="@SubResource_create" name="peerExpressRouteCircuitPeering" arg="$peeringParameters.properties.connections[].properties.peerExpressRouteCircuitPeering"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="gatewayManagerEtag" arg="$peeringParameters.properties.gatewayManagerEtag"/>
                    <prop type="object" name="ipv6PeeringConfig" arg="$peeringParameters.properties.ipv6PeeringConfig">
                      <prop type="object" name="microsoftPeeringConfig" arg="$peeringParameters.properties.ipv6PeeringConfig.microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_create">
                        <prop type="array<string>" name="advertisedCommunities" arg="@ExpressRouteCircuitPeeringConfig_create.advertisedCommunities">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="advertisedPublicPrefixes" arg="@ExpressRouteCircuitPeeringConfig_create.advertisedPublicPrefixes">
                          <item type="string"/>
                        </prop>
                        <prop type="integer32" name="customerASN" arg="@ExpressRouteCircuitPeeringConfig_create.customerASN"/>
                        <prop type="integer32" name="legacyMode" arg="@ExpressRouteCircuitPeeringConfig_create.legacyMode"/>
                        <prop type="string" name="routingRegistryName" arg="@ExpressRouteCircuitPeeringConfig_create.routingRegistryName"/>
                      </prop>
                      <prop type="string" name="primaryPeerAddressPrefix" arg="$peeringParameters.properties.ipv6PeeringConfig.primaryPeerAddressPrefix"/>
                      <prop type="object" name="routeFilter">
                        <prop type="string" name="id" arg="$peeringParameters.properties.ipv6PeeringConfig.routeFilter.id"/>
                      </prop>
                      <prop type="string" name="secondaryPeerAddressPrefix" arg="$peeringParameters.properties.ipv6PeeringConfig.secondaryPeerAddressPrefix"/>
                      <prop type="string" name="state" arg="$peeringParameters.properties.ipv6PeeringConfig.state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="microsoftPeeringConfig">
                      <prop type="array<string>" name="advertisedCommunities" arg="$peeringParameters.properties.microsoftPeeringConfig.advertisedCommunities">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="advertisedPublicPrefixes" arg="$peeringParameters.properties.microsoftPeeringConfig.advertisedPublicPrefixes">
                        <item type="string"/>
                      </prop>
                      <prop type="integer32" name="customerASN" arg="$peeringParameters.properties.microsoftPeeringConfig.customerASN"/>
                      <prop type="integer32" name="legacyMode" arg="$peeringParameters.properties.microsoftPeeringConfig.legacyMode"/>
                      <prop type="string" name="routingRegistryName" arg="$peeringParameters.properties.microsoftPeeringConfig.routingRegistryName"/>
                    </prop>
                    <prop type="integer64" name="peerASN" arg="$peeringParameters.properties.peerASN">
                      <format maximum="4294967295" minimum="1"/>
                    </prop>
                    <prop type="string" name="peeringType" arg="$peeringParameters.properties.peeringType">
                      <enum>
                        <item value="&quot;AzurePrivatePeering&quot;"/>
                        <item value="&quot;AzurePublicPeering&quot;"/>
                        <item value="&quot;MicrosoftPeering&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="primaryAzurePort" arg="$peeringParameters.properties.primaryAzurePort"/>
                    <prop type="string" name="primaryPeerAddressPrefix" arg="$peeringParameters.properties.primaryPeerAddressPrefix"/>
                    <prop type="object" name="routeFilter">
                      <prop type="string" name="id" arg="$peeringParameters.properties.routeFilter.id"/>
                    </prop>
                    <prop type="string" name="secondaryAzurePort" arg="$peeringParameters.properties.secondaryAzurePort"/>
                    <prop type="string" name="secondaryPeerAddressPrefix" arg="$peeringParameters.properties.secondaryPeerAddressPrefix"/>
                    <prop type="string" name="sharedKey" arg="$peeringParameters.properties.sharedKey"/>
                    <prop type="string" name="state" arg="$peeringParameters.properties.state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="stats" arg="$peeringParameters.properties.stats">
                      <prop type="integer64" name="primarybytesIn" arg="$peeringParameters.properties.stats.primarybytesIn"/>
                      <prop type="integer64" name="primarybytesOut" arg="$peeringParameters.properties.stats.primarybytesOut"/>
                      <prop type="integer64" name="secondarybytesIn" arg="$peeringParameters.properties.stats.secondarybytesIn"/>
                      <prop type="integer64" name="secondarybytesOut" arg="$peeringParameters.properties.stats.secondarybytesOut"/>
                    </prop>
                    <prop type="integer32" name="vlanId" arg="$peeringParameters.properties.vlanId"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="azureASN"/>
                    <prop type="array<object>" name="connections">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="addressPrefix"/>
                          <prop type="string" name="authorizationKey"/>
                          <prop readOnly="True" type="string" name="circuitConnectionStatus">
                            <enum>
                              <item value="&quot;Connected&quot;"/>
                              <item value="&quot;Connecting&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                            </enum>
                          </prop>
                          <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                          <prop type="object" name="ipv6CircuitConnectionConfig">
                            <prop type="string" name="addressPrefix"/>
                            <prop readOnly="True" type="string" name="circuitConnectionStatus">
                              <enum>
                                <item value="&quot;Connected&quot;"/>
                                <item value="&quot;Connecting&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="object" name="expressRouteConnection">
                      <prop readOnly="True" type="string" name="id"/>
                    </prop>
                    <prop type="string" name="gatewayManagerEtag"/>
                    <prop type="object" name="ipv6PeeringConfig">
                      <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                      <prop type="string" name="primaryPeerAddressPrefix"/>
                      <prop type="@SubResource_read" name="routeFilter"/>
                      <prop type="string" name="secondaryPeerAddressPrefix"/>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                      <prop type="array<string>" name="advertisedCommunities">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="advertisedPublicPrefixes">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                        <enum>
                          <item value="&quot;Configured&quot;"/>
                          <item value="&quot;Configuring&quot;"/>
                          <item value="&quot;NotConfigured&quot;"/>
                          <item value="&quot;ValidationNeeded&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="customerASN"/>
                      <prop type="integer32" name="legacyMode"/>
                      <prop type="string" name="routingRegistryName"/>
                    </prop>
                    <prop type="integer64" name="peerASN">
                      <format maximum="4294967295" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="peeredConnections">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="addressPrefix"/>
                          <prop type="string" name="authResourceGuid"/>
                          <prop readOnly="True" type="string" name="circuitConnectionStatus">
                            <enum>
                              <item value="&quot;Connected&quot;"/>
                              <item value="&quot;Connecting&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="connectionName"/>
                          <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                          <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="peeringType">
                      <enum>
                        <item value="&quot;AzurePrivatePeering&quot;"/>
                        <item value="&quot;AzurePublicPeering&quot;"/>
                        <item value="&quot;MicrosoftPeering&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="primaryAzurePort"/>
                    <prop type="string" name="primaryPeerAddressPrefix"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="routeFilter" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="string" name="secondaryAzurePort"/>
                    <prop type="string" name="secondaryPeerAddressPrefix"/>
                    <prop type="string" name="sharedKey"/>
                    <prop type="string" name="state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="stats">
                      <prop type="integer64" name="primarybytesIn"/>
                      <prop type="integer64" name="primarybytesOut"/>
                      <prop type="integer64" name="secondarybytesIn"/>
                      <prop type="integer64" name="secondarybytesOut"/>
                    </prop>
                    <prop type="integer32" name="vlanId"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutecircuits/{}/peerings/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVDaXJjdWl0cy97Y2lyY3VpdE5hbWV9L3BlZXJpbmdzL3twZWVyaW5nTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.circuitName" options="circuit-name" required="True" group="" idPart="name">
          <help short="ExpressRoute circuit name."/>
        </arg>
        <arg type="string" var="$Path.peeringName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the peering."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="integer64" var="$peeringParameters.properties.peerASN" options="peer-asn" group="">
          <help short="Autonomous system number of the customer/connectivity provider."/>
          <format maximum="4294967295" minimum="1"/>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.peeringType" options="peering-type" group="">
          <help short="BGP peering type for the circuit.  Allowed values: AzurePrivatePeering, AzurePublicPeering, MicrosoftPeering."/>
          <enum>
            <item name="AzurePrivatePeering" value="&quot;AzurePrivatePeering&quot;"/>
            <item name="AzurePublicPeering" value="&quot;AzurePublicPeering&quot;"/>
            <item name="MicrosoftPeering" value="&quot;MicrosoftPeering&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.primaryPeerAddressPrefix" options="primary-peer-subnet" group="">
          <help short="/30(ipv4) or /126(ipv6) subnet used to configure IP addresses for primary interface."/>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.secondaryPeerAddressPrefix" options="secondary-peer-subnet" group="">
          <help short="/30(ipv4) or /126(ipv6) subnet used to configure IP addresses for secondary interface."/>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.sharedKey" options="shared-key" group="">
          <help short="Key for generating an MD5 for the BGP session."/>
        </arg>
        <arg nullable="True" type="integer32" var="$peeringParameters.properties.vlanId" options="vlan-id" group="">
          <help short="Identifier used to identify the customer."/>
        </arg>
      </argGroup>
      <argGroup name="Microsoft Peering">
        <arg nullable="True" type="array<string>" var="$peeringParameters.properties.microsoftPeeringConfig.advertisedPublicPrefixes" options="advertised-public-prefixes" group="Microsoft Peering">
          <help short="Space-separated list of prefixes to be advertised through the BGP peering."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="integer32" var="$peeringParameters.properties.microsoftPeeringConfig.customerASN" options="customer-asn" group="Microsoft Peering">
          <help short="Autonomous system number of the customer."/>
        </arg>
        <arg nullable="True" type="integer32" var="$peeringParameters.properties.microsoftPeeringConfig.legacyMode" options="legacy-mode" group="Microsoft Peering">
          <help short="Integer representing the legacy mode of the peering."/>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.microsoftPeeringConfig.routingRegistryName" options="routing-registry-name" group="Microsoft Peering">
          <help short="Internet Routing Registry / Regional Internet Registry. Allowed values: AFRINIC, ALTDB, APNIC, ARIN, LACNIC, LEVEL3, RADB, RIPENCC."/>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.routeFilter.id" options="route-filter" group="Microsoft Peering">
          <help short="Name or ID of a route filter to apply to the peering settings."/>
        </arg>
      </argGroup>
      <argGroup name="MicrosoftPeeringConfig">
        <arg nullable="True" type="array<string>" var="$peeringParameters.properties.microsoftPeeringConfig.advertisedCommunities" options="advertised-communities" hide="True" group="MicrosoftPeeringConfig">
          <help short="advertised-communities"/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="PeeringParameters">
        <arg nullable="True" type="ResourceId" var="$peeringParameters.id" options="id" hide="True" group="PeeringParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="integer32" var="$peeringParameters.properties.azureASN" options="azure-asn" hide="True" group="Properties">
          <help short="The Azure ASN."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$peeringParameters.properties.connections" options="connections" hide="True" group="Properties">
          <help short="The list of circuit connections associated with Azure Private Peering for this circuit."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="ResourceId" var="$peeringParameters.properties.connections[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
            </arg>
            <arg nullable="True" type="string" var="$peeringParameters.properties.connections[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg nullable="True" type="string" var="$peeringParameters.properties.connections[].properties.addressPrefix" options="address-prefix" group="Properties">
              <help short="/29 IP address space to carve out Customer addresses for tunnels."/>
            </arg>
            <arg nullable="True" type="string" var="$peeringParameters.properties.connections[].properties.authorizationKey" options="authorization-key" group="Properties">
              <help short="The authorization key."/>
            </arg>
            <arg nullable="True" type="object" var="$peeringParameters.properties.connections[].properties.expressRouteCircuitPeering" options="express-route-circuit-peering" group="Properties" cls="SubResource_update">
              <help short="Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection."/>
              <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="$peeringParameters.properties.connections[].properties.ipv6CircuitConnectionConfig" options="ipv6-circuit-connection-config" group="Properties">
              <help short="IPv6 Address PrefixProperties of the express route circuit connection."/>
              <arg nullable="True" type="string" var="$peeringParameters.properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix" options="address-prefix">
                <help short="/125 IP address space to carve out customer addresses for global reach."/>
              </arg>
            </arg>
            <arg nullable="True" type="@SubResource_update" var="$peeringParameters.properties.connections[].properties.peerExpressRouteCircuitPeering" options="peer-express-route-circuit-peering" group="Properties">
              <help short="Reference to Express Route Circuit Private Peering Resource of the peered circuit."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.gatewayManagerEtag" options="gateway-manager-etag" hide="True" group="Properties">
          <help short="The GatewayManager Etag."/>
        </arg>
        <arg nullable="True" type="object" var="$peeringParameters.properties.ipv6PeeringConfig" options="ipv6-peering-config" group="Properties">
          <help short="The IPv6 peering configuration."/>
          <arg nullable="True" type="object" var="$peeringParameters.properties.ipv6PeeringConfig.microsoftPeeringConfig" options="microsoft-peering-config" cls="ExpressRouteCircuitPeeringConfig_update">
            <help short="The Microsoft peering configuration."/>
            <arg nullable="True" type="array<string>" var="@ExpressRouteCircuitPeeringConfig_update.advertisedCommunities" options="advertised-communities">
              <help short="The communities of bgp peering. Specified for microsoft peering."/>
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="array<string>" var="@ExpressRouteCircuitPeeringConfig_update.advertisedPublicPrefixes" options="advertised-public-prefixes">
              <help short="The reference to AdvertisedPublicPrefixes."/>
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="integer32" var="@ExpressRouteCircuitPeeringConfig_update.customerASN" options="customer-asn">
              <help short="The CustomerASN of the peering."/>
            </arg>
            <arg nullable="True" type="integer32" var="@ExpressRouteCircuitPeeringConfig_update.legacyMode" options="legacy-mode">
              <help short="The legacy mode of the peering."/>
            </arg>
            <arg nullable="True" type="string" var="@ExpressRouteCircuitPeeringConfig_update.routingRegistryName" options="routing-registry-name">
              <help short="The RoutingRegistryName of the configuration."/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$peeringParameters.properties.ipv6PeeringConfig.primaryPeerAddressPrefix" options="primary-peer-address-prefix">
            <help short="The primary address prefix."/>
          </arg>
          <arg nullable="True" type="string" var="$peeringParameters.properties.ipv6PeeringConfig.routeFilter.id" options="route-filter" group="">
            <help short="The reference to the RouteFilter resource."/>
          </arg>
          <arg nullable="True" type="string" var="$peeringParameters.properties.ipv6PeeringConfig.secondaryPeerAddressPrefix" options="secondary-peer-address-prefix">
            <help short="The secondary address prefix."/>
          </arg>
          <arg nullable="True" type="string" var="$peeringParameters.properties.ipv6PeeringConfig.state" options="state">
            <help short="The state of peering."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.primaryAzurePort" options="primary-azure-port" hide="True" group="Properties">
          <help short="The primary port."/>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.secondaryAzurePort" options="secondary-azure-port" hide="True" group="Properties">
          <help short="The secondary port."/>
        </arg>
        <arg nullable="True" type="string" var="$peeringParameters.properties.state" options="state" hide="True" group="Properties">
          <help short="The peering state."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$peeringParameters.properties.stats" options="stats" hide="True" group="Properties">
          <help short="The peering stats of express route circuit."/>
          <arg nullable="True" type="integer64" var="$peeringParameters.properties.stats.primarybytesIn" options="primarybytes-in">
            <help short="The Primary BytesIn of the peering."/>
          </arg>
          <arg nullable="True" type="integer64" var="$peeringParameters.properties.stats.primarybytesOut" options="primarybytes-out">
            <help short="The primary BytesOut of the peering."/>
          </arg>
          <arg nullable="True" type="integer64" var="$peeringParameters.properties.stats.secondarybytesIn" options="secondarybytes-in">
            <help short="The secondary BytesIn of the peering."/>
          </arg>
          <arg nullable="True" type="integer64" var="$peeringParameters.properties.stats.secondarybytesOut" options="secondarybytes-out">
            <help short="The secondary BytesOut of the peering."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteCircuitPeerings_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}">
          <request method="get">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ExpressRouteCircuitPeering_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                  </prop>
                  <prop type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="integer32" name="azureASN"/>
                    <prop type="array<object>" name="connections">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="addressPrefix"/>
                          <prop type="string" name="authorizationKey"/>
                          <prop readOnly="True" type="string" name="circuitConnectionStatus">
                            <enum>
                              <item value="&quot;Connected&quot;"/>
                              <item value="&quot;Connecting&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                            </enum>
                          </prop>
                          <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                          <prop type="object" name="ipv6CircuitConnectionConfig">
                            <prop type="string" name="addressPrefix"/>
                            <prop readOnly="True" type="string" name="circuitConnectionStatus">
                              <enum>
                                <item value="&quot;Connected&quot;"/>
                                <item value="&quot;Connecting&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="object" name="expressRouteConnection">
                      <prop readOnly="True" type="string" name="id"/>
                    </prop>
                    <prop type="string" name="gatewayManagerEtag"/>
                    <prop type="object" name="ipv6PeeringConfig">
                      <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                      <prop type="string" name="primaryPeerAddressPrefix"/>
                      <prop type="@SubResource_read" name="routeFilter"/>
                      <prop type="string" name="secondaryPeerAddressPrefix"/>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                      <prop type="array<string>" name="advertisedCommunities">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="advertisedPublicPrefixes">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                        <enum>
                          <item value="&quot;Configured&quot;"/>
                          <item value="&quot;Configuring&quot;"/>
                          <item value="&quot;NotConfigured&quot;"/>
                          <item value="&quot;ValidationNeeded&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="customerASN"/>
                      <prop type="integer32" name="legacyMode"/>
                      <prop type="string" name="routingRegistryName"/>
                    </prop>
                    <prop type="integer64" name="peerASN">
                      <format maximum="4294967295" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="peeredConnections">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="addressPrefix"/>
                          <prop type="string" name="authResourceGuid"/>
                          <prop readOnly="True" type="string" name="circuitConnectionStatus">
                            <enum>
                              <item value="&quot;Connected&quot;"/>
                              <item value="&quot;Connecting&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="connectionName"/>
                          <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                          <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="peeringType">
                      <enum>
                        <item value="&quot;AzurePrivatePeering&quot;"/>
                        <item value="&quot;AzurePublicPeering&quot;"/>
                        <item value="&quot;MicrosoftPeering&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="primaryAzurePort"/>
                    <prop type="string" name="primaryPeerAddressPrefix"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="routeFilter" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="string" name="secondaryAzurePort"/>
                    <prop type="string" name="secondaryPeerAddressPrefix"/>
                    <prop type="string" name="sharedKey"/>
                    <prop type="string" name="state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="stats">
                      <prop type="integer64" name="primarybytesIn"/>
                      <prop type="integer64" name="primarybytesOut"/>
                      <prop type="integer64" name="secondarybytesIn"/>
                      <prop type="integer64" name="secondarybytesOut"/>
                    </prop>
                    <prop type="integer32" name="vlanId"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="peeringParameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$peeringParameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
              </prop>
              <prop type="string" name="name" arg="$Path.peeringName"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="integer32" name="azureASN" arg="$peeringParameters.properties.azureASN"/>
                <prop type="array<object>" name="connections" arg="$peeringParameters.properties.connections">
                  <item type="object">
                    <prop type="ResourceId" name="id" arg="$peeringParameters.properties.connections[].id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                    </prop>
                    <prop type="string" name="name" arg="$peeringParameters.properties.connections[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="addressPrefix" arg="$peeringParameters.properties.connections[].properties.addressPrefix"/>
                      <prop type="string" name="authorizationKey" arg="$peeringParameters.properties.connections[].properties.authorizationKey"/>
                      <prop type="object" name="expressRouteCircuitPeering" arg="$peeringParameters.properties.connections[].properties.expressRouteCircuitPeering" cls="SubResource_update">
                        <prop type="string" name="id" arg="@SubResource_update.id"/>
                      </prop>
                      <prop type="object" name="ipv6CircuitConnectionConfig" arg="$peeringParameters.properties.connections[].properties.ipv6CircuitConnectionConfig">
                        <prop type="string" name="addressPrefix" arg="$peeringParameters.properties.connections[].properties.ipv6CircuitConnectionConfig.addressPrefix"/>
                      </prop>
                      <prop type="@SubResource_update" name="peerExpressRouteCircuitPeering" arg="$peeringParameters.properties.connections[].properties.peerExpressRouteCircuitPeering"/>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="gatewayManagerEtag" arg="$peeringParameters.properties.gatewayManagerEtag"/>
                <prop type="object" name="ipv6PeeringConfig" arg="$peeringParameters.properties.ipv6PeeringConfig">
                  <prop type="object" name="microsoftPeeringConfig" arg="$peeringParameters.properties.ipv6PeeringConfig.microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_update">
                    <prop type="array<string>" name="advertisedCommunities" arg="@ExpressRouteCircuitPeeringConfig_update.advertisedCommunities">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="advertisedPublicPrefixes" arg="@ExpressRouteCircuitPeeringConfig_update.advertisedPublicPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="customerASN" arg="@ExpressRouteCircuitPeeringConfig_update.customerASN"/>
                    <prop type="integer32" name="legacyMode" arg="@ExpressRouteCircuitPeeringConfig_update.legacyMode"/>
                    <prop type="string" name="routingRegistryName" arg="@ExpressRouteCircuitPeeringConfig_update.routingRegistryName"/>
                  </prop>
                  <prop type="string" name="primaryPeerAddressPrefix" arg="$peeringParameters.properties.ipv6PeeringConfig.primaryPeerAddressPrefix"/>
                  <prop type="object" name="routeFilter">
                    <prop type="string" name="id" arg="$peeringParameters.properties.ipv6PeeringConfig.routeFilter.id"/>
                  </prop>
                  <prop type="string" name="secondaryPeerAddressPrefix" arg="$peeringParameters.properties.ipv6PeeringConfig.secondaryPeerAddressPrefix"/>
                  <prop type="string" name="state" arg="$peeringParameters.properties.ipv6PeeringConfig.state">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="microsoftPeeringConfig">
                  <prop type="array<string>" name="advertisedCommunities" arg="$peeringParameters.properties.microsoftPeeringConfig.advertisedCommunities">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="advertisedPublicPrefixes" arg="$peeringParameters.properties.microsoftPeeringConfig.advertisedPublicPrefixes">
                    <item type="string"/>
                  </prop>
                  <prop type="integer32" name="customerASN" arg="$peeringParameters.properties.microsoftPeeringConfig.customerASN"/>
                  <prop type="integer32" name="legacyMode" arg="$peeringParameters.properties.microsoftPeeringConfig.legacyMode"/>
                  <prop type="string" name="routingRegistryName" arg="$peeringParameters.properties.microsoftPeeringConfig.routingRegistryName"/>
                </prop>
                <prop type="integer64" name="peerASN" arg="$peeringParameters.properties.peerASN">
                  <format maximum="4294967295" minimum="1"/>
                </prop>
                <prop type="string" name="peeringType" arg="$peeringParameters.properties.peeringType">
                  <enum>
                    <item value="&quot;AzurePrivatePeering&quot;"/>
                    <item value="&quot;AzurePublicPeering&quot;"/>
                    <item value="&quot;MicrosoftPeering&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="primaryAzurePort" arg="$peeringParameters.properties.primaryAzurePort"/>
                <prop type="string" name="primaryPeerAddressPrefix" arg="$peeringParameters.properties.primaryPeerAddressPrefix"/>
                <prop type="object" name="routeFilter">
                  <prop type="string" name="id" arg="$peeringParameters.properties.routeFilter.id"/>
                </prop>
                <prop type="string" name="secondaryAzurePort" arg="$peeringParameters.properties.secondaryAzurePort"/>
                <prop type="string" name="secondaryPeerAddressPrefix" arg="$peeringParameters.properties.secondaryPeerAddressPrefix"/>
                <prop type="string" name="sharedKey" arg="$peeringParameters.properties.sharedKey"/>
                <prop type="string" name="state" arg="$peeringParameters.properties.state">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="stats" arg="$peeringParameters.properties.stats">
                  <prop type="integer64" name="primarybytesIn" arg="$peeringParameters.properties.stats.primarybytesIn"/>
                  <prop type="integer64" name="primarybytesOut" arg="$peeringParameters.properties.stats.primarybytesOut"/>
                  <prop type="integer64" name="secondarybytesIn" arg="$peeringParameters.properties.stats.secondarybytesIn"/>
                  <prop type="integer64" name="secondarybytesOut" arg="$peeringParameters.properties.stats.secondarybytesOut"/>
                </prop>
                <prop type="integer32" name="vlanId" arg="$peeringParameters.properties.vlanId"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ExpressRouteCircuitPeerings_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}">
          <request method="put">
            <path>
              <param type="string" name="circuitName" arg="$Path.circuitName" required="True"/>
              <param type="string" name="peeringName" arg="$Path.peeringName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ExpressRouteCircuitPeering_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
