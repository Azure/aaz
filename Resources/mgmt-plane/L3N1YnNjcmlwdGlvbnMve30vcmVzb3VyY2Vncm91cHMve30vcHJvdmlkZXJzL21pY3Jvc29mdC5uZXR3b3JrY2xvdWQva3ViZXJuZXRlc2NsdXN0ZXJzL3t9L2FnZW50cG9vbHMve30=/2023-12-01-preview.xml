<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}/agentpools/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfS9hZ2VudFBvb2xzL3thZ2VudFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
  <commandGroup name="networkcloud kubernetescluster agentpool">
    <command name="show" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}/agentpools/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfS9hZ2VudFBvb2xzL3thZ2VudFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.agentPoolName" options="agent-pool-name name n" required="True" idPart="child_name_1">
          <help short="The name of the Kubernetes cluster agent pool."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.kubernetesClusterName" options="kubernetes-cluster-name" required="True" idPart="name">
          <help short="The name of the Kubernetes cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AgentPools_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}/agentPools/{agentPoolName}">
          <request method="get">
            <path>
              <param type="string" name="agentPoolName" arg="$Path.agentPoolName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="kubernetesClusterName" arg="$Path.kubernetesClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/kubernetesClusters/{}/agentPools/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="administratorConfiguration">
                      <prop type="string" name="adminUsername"/>
                      <prop type="array<object>" name="sshPublicKeys">
                        <item type="object">
                          <prop type="string" name="keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="agentOptions">
                      <prop type="integer64" name="hugepagesCount" required="True"/>
                      <prop type="string" name="hugepagesSize">
                        <default value="&quot;2M&quot;"/>
                        <enum>
                          <item value="&quot;1G&quot;"/>
                          <item value="&quot;2M&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="attachedNetworkConfiguration">
                      <prop type="array<object>" name="l2Networks">
                        <item type="object">
                          <prop type="ResourceId" name="networkId" required="True"/>
                          <prop type="string" name="pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="l3Networks">
                        <item type="object">
                          <prop type="string" name="ipamEnabled">
                            <default value="&quot;False&quot;"/>
                            <enum>
                              <item value="&quot;False&quot;"/>
                              <item value="&quot;True&quot;"/>
                            </enum>
                          </prop>
                          <prop type="ResourceId" name="networkId" required="True"/>
                          <prop type="string" name="pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="trunkedNetworks">
                        <item type="object">
                          <prop type="ResourceId" name="networkId" required="True"/>
                          <prop type="string" name="pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="availabilityZones">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="count" required="True"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="string" name="kubernetesVersion"/>
                    <prop type="array<object>" name="labels">
                      <item type="object" cls="KubernetesLabel_read">
                        <prop type="string" name="key" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="mode" required="True">
                      <enum>
                        <item value="&quot;NotApplicable&quot;"/>
                        <item value="&quot;System&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@KubernetesLabel_read>" name="taints">
                      <item type="@KubernetesLabel_read"/>
                    </prop>
                    <prop type="object" name="upgradeSettings">
                      <prop type="string" name="maxSurge">
                        <default value="&quot;1&quot;"/>
                      </prop>
                    </prop>
                    <prop type="string" name="vmSkuName" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-12-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}/agentpools/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfS9hZ2VudFBvb2xzL3thZ2VudFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.agentPoolName" options="agent-pool-name name n" required="True" idPart="child_name_1">
          <help short="The name of the Kubernetes cluster agent pool."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.kubernetesClusterName" options="kubernetes-cluster-name" required="True" idPart="name">
          <help short="The name of the Kubernetes cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AgentPools_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}/agentPools/{agentPoolName}">
          <request method="delete">
            <path>
              <param type="string" name="agentPoolName" arg="$Path.agentPoolName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="kubernetesClusterName" arg="$Path.kubernetesClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="OperationStatusResult_read">
                  <prop type="dateTime" name="endTime"/>
                  <prop type="object" name="error" cls="ErrorDetail_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                    <prop readOnly="True" type="string" name="target"/>
                  </prop>
                  <prop type="string" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="array<@OperationStatusResult_read>" name="operations">
                    <item type="@OperationStatusResult_read"/>
                  </prop>
                  <prop type="float" name="percentComplete">
                    <format maximum="100.0" minimum="0.0"/>
                  </prop>
                  <prop readOnly="True" type="string" name="resourceId"/>
                  <prop type="dateTime" name="startTime"/>
                  <prop type="string" name="status" required="True"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}/agentpools/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfS9hZ2VudFBvb2xzL3thZ2VudFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.agentPoolName" options="agent-pool-name name n" required="True" idPart="child_name_1">
          <help short="The name of the Kubernetes cluster agent pool."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.kubernetesClusterName" options="kubernetes-cluster-name" required="True" idPart="name">
          <help short="The name of the Kubernetes cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AdministratorConfiguration">
        <arg type="string" var="$agentPoolParameters.properties.administratorConfiguration.adminUsername" options="admin-username" group="AdministratorConfiguration">
          <help short="The user name for the administrator that will be applied to the operating systems that run Kubernetes nodes. If not supplied, a user name will be chosen by the service."/>
        </arg>
        <arg type="array<object>" var="$agentPoolParameters.properties.administratorConfiguration.sshPublicKeys" options="ssh-public-keys" group="AdministratorConfiguration">
          <help short="The SSH configuration for the operating systems that run the nodes in the Kubernetes cluster. In some cases, specification of public keys may be required to produce a working environment."/>
          <item type="object">
            <arg type="string" var="$agentPoolParameters.properties.administratorConfiguration.sshPublicKeys[].keyData" options="key-data" required="True">
              <help short="The SSH public key data."/>
              <format minLength="1"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="AgentPoolParameters">
        <arg type="object" var="$agentPoolParameters.extendedLocation" options="extended-location" group="AgentPoolParameters">
          <help short="The extended location of the cluster associated with the resource."/>
          <arg type="string" var="$agentPoolParameters.extendedLocation.name" options="name" required="True">
            <help short="The resource ID of the extended location on which the resource will be created."/>
          </arg>
          <arg type="string" var="$agentPoolParameters.extendedLocation.type" options="type" required="True">
            <help short="The extended location type, for example, CustomLocation."/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$agentPoolParameters.location" options="location l" required="True" group="AgentPoolParameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$agentPoolParameters.tags" options="tags" group="AgentPoolParameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$agentPoolParameters.properties.agentOptions" options="agent-options" group="Properties">
          <help short="The configurations that will be applied to each agent in this agent pool."/>
          <arg type="integer64" var="$agentPoolParameters.properties.agentOptions.hugepagesCount" options="hugepages-count" required="True">
            <help short="The number of hugepages to allocate."/>
          </arg>
          <arg type="string" var="$agentPoolParameters.properties.agentOptions.hugepagesSize" options="hugepages-size">
            <help short="The size of the hugepages to allocate."/>
            <default value="&quot;2M&quot;"/>
            <enum>
              <item name="1G" value="&quot;1G&quot;"/>
              <item name="2M" value="&quot;2M&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$agentPoolParameters.properties.attachedNetworkConfiguration" options="attached-network-configuration" group="Properties">
          <help short="The configuration of networks being attached to the agent pool for use by the workloads that run on this Kubernetes cluster. These networks are in addition to the networks connected in the Kubernetes cluster attached network configuration."/>
          <arg type="array<object>" var="$agentPoolParameters.properties.attachedNetworkConfiguration.l2Networks" options="l2-networks">
            <help short="The list of Layer 2 Networks and related configuration for attachment."/>
            <item type="object">
              <arg type="ResourceId" var="$agentPoolParameters.properties.attachedNetworkConfiguration.l2Networks[].networkId" options="network-id" required="True">
                <help short="The resource ID of the network that is being configured for attachment."/>
              </arg>
              <arg type="string" var="$agentPoolParameters.properties.attachedNetworkConfiguration.l2Networks[].pluginType" options="plugin-type">
                <help short="The indicator of how this network will be utilized by the Kubernetes cluster."/>
                <default value="&quot;SRIOV&quot;"/>
                <enum>
                  <item name="DPDK" value="&quot;DPDK&quot;"/>
                  <item name="IPVLAN" value="&quot;IPVLAN&quot;"/>
                  <item name="MACVLAN" value="&quot;MACVLAN&quot;"/>
                  <item name="OSDevice" value="&quot;OSDevice&quot;"/>
                  <item name="SRIOV" value="&quot;SRIOV&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$agentPoolParameters.properties.attachedNetworkConfiguration.l3Networks" options="l3-networks">
            <help short="The list of Layer 3 Networks and related configuration for attachment."/>
            <item type="object">
              <arg type="string" var="$agentPoolParameters.properties.attachedNetworkConfiguration.l3Networks[].ipamEnabled" options="ipam-enabled">
                <help short="The indication of whether this network will or will not perform IP address management and allocate IP addresses when attached."/>
                <default value="&quot;False&quot;"/>
                <enum>
                  <item name="False" value="&quot;False&quot;"/>
                  <item name="True" value="&quot;True&quot;"/>
                </enum>
              </arg>
              <arg type="ResourceId" var="$agentPoolParameters.properties.attachedNetworkConfiguration.l3Networks[].networkId" options="network-id" required="True">
                <help short="The resource ID of the network that is being configured for attachment."/>
              </arg>
              <arg type="string" var="$agentPoolParameters.properties.attachedNetworkConfiguration.l3Networks[].pluginType" options="plugin-type">
                <help short="The indicator of how this network will be utilized by the Kubernetes cluster."/>
                <default value="&quot;SRIOV&quot;"/>
                <enum>
                  <item name="DPDK" value="&quot;DPDK&quot;"/>
                  <item name="IPVLAN" value="&quot;IPVLAN&quot;"/>
                  <item name="MACVLAN" value="&quot;MACVLAN&quot;"/>
                  <item name="OSDevice" value="&quot;OSDevice&quot;"/>
                  <item name="SRIOV" value="&quot;SRIOV&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$agentPoolParameters.properties.attachedNetworkConfiguration.trunkedNetworks" options="trunked-networks">
            <help short="The list of Trunked Networks and related configuration for attachment."/>
            <item type="object">
              <arg type="ResourceId" var="$agentPoolParameters.properties.attachedNetworkConfiguration.trunkedNetworks[].networkId" options="network-id" required="True">
                <help short="The resource ID of the network that is being configured for attachment."/>
              </arg>
              <arg type="string" var="$agentPoolParameters.properties.attachedNetworkConfiguration.trunkedNetworks[].pluginType" options="plugin-type">
                <help short="The indicator of how this network will be utilized by the Kubernetes cluster."/>
                <default value="&quot;SRIOV&quot;"/>
                <enum>
                  <item name="DPDK" value="&quot;DPDK&quot;"/>
                  <item name="IPVLAN" value="&quot;IPVLAN&quot;"/>
                  <item name="MACVLAN" value="&quot;MACVLAN&quot;"/>
                  <item name="OSDevice" value="&quot;OSDevice&quot;"/>
                  <item name="SRIOV" value="&quot;SRIOV&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="array<string>" var="$agentPoolParameters.properties.availabilityZones" options="availability-zones" group="Properties">
          <help short="The list of availability zones of the Network Cloud cluster used for the provisioning of nodes in this agent pool. If not specified, all availability zones will be used."/>
          <item type="string"/>
        </arg>
        <arg type="integer64" var="$agentPoolParameters.properties.count" options="count" required="True" group="Properties">
          <help short="The number of virtual machines that use this configuration."/>
        </arg>
        <arg type="array<object>" var="$agentPoolParameters.properties.labels" options="labels" group="Properties">
          <help short="The labels applied to the nodes in this agent pool."/>
          <item type="object" cls="KubernetesLabel_create">
            <arg type="string" var="@KubernetesLabel_create.key" options="key" required="True">
              <help short="The name of the label or taint."/>
            </arg>
            <arg type="string" var="@KubernetesLabel_create.value" options="value" required="True">
              <help short="The value of the label or taint."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$agentPoolParameters.properties.mode" options="mode" required="True" group="Properties">
          <help short="The selection of how this agent pool is utilized, either as a system pool or a user pool. System pools run the features and critical services for the Kubernetes Cluster, while user pools are dedicated to user workloads. Every Kubernetes cluster must contain at least one system node pool with at least one node."/>
          <enum>
            <item name="NotApplicable" value="&quot;NotApplicable&quot;"/>
            <item name="System" value="&quot;System&quot;"/>
            <item name="User" value="&quot;User&quot;"/>
          </enum>
        </arg>
        <arg type="array<@KubernetesLabel_create>" var="$agentPoolParameters.properties.taints" options="taints" group="Properties">
          <help short="The taints applied to the nodes in this agent pool."/>
          <item type="@KubernetesLabel_create"/>
        </arg>
        <arg type="object" var="$agentPoolParameters.properties.upgradeSettings" options="upgrade-settings" group="Properties">
          <help short="The configuration of the agent pool."/>
          <arg type="string" var="$agentPoolParameters.properties.upgradeSettings.maxSurge" options="max-surge">
            <help short="The maximum number or percentage of nodes that are surged during upgrade. This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1."/>
            <default value="&quot;1&quot;"/>
          </arg>
        </arg>
        <arg type="string" var="$agentPoolParameters.properties.vmSkuName" options="vm-sku-name" required="True" group="Properties">
          <help short="The name of the VM SKU that determines the size of resources allocated for node VMs."/>
        </arg>
      </argGroup>
      <operation operationId="AgentPools_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}/agentPools/{agentPoolName}">
          <request method="put">
            <path>
              <param type="string" name="agentPoolName" arg="$Path.agentPoolName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="kubernetesClusterName" arg="$Path.kubernetesClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="agentPoolParameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$agentPoolParameters.extendedLocation">
                    <prop type="string" name="name" arg="$agentPoolParameters.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$agentPoolParameters.extendedLocation.type" required="True"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$agentPoolParameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="administratorConfiguration">
                      <prop type="string" name="adminUsername" arg="$agentPoolParameters.properties.administratorConfiguration.adminUsername"/>
                      <prop type="array<object>" name="sshPublicKeys" arg="$agentPoolParameters.properties.administratorConfiguration.sshPublicKeys">
                        <item type="object">
                          <prop type="string" name="keyData" arg="$agentPoolParameters.properties.administratorConfiguration.sshPublicKeys[].keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="agentOptions" arg="$agentPoolParameters.properties.agentOptions">
                      <prop type="integer64" name="hugepagesCount" arg="$agentPoolParameters.properties.agentOptions.hugepagesCount" required="True"/>
                      <prop type="string" name="hugepagesSize" arg="$agentPoolParameters.properties.agentOptions.hugepagesSize">
                        <default value="&quot;2M&quot;"/>
                        <enum>
                          <item value="&quot;1G&quot;"/>
                          <item value="&quot;2M&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="attachedNetworkConfiguration" arg="$agentPoolParameters.properties.attachedNetworkConfiguration">
                      <prop type="array<object>" name="l2Networks" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.l2Networks">
                        <item type="object">
                          <prop type="ResourceId" name="networkId" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.l2Networks[].networkId" required="True"/>
                          <prop type="string" name="pluginType" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.l2Networks[].pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="l3Networks" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.l3Networks">
                        <item type="object">
                          <prop type="string" name="ipamEnabled" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.l3Networks[].ipamEnabled">
                            <default value="&quot;False&quot;"/>
                            <enum>
                              <item value="&quot;False&quot;"/>
                              <item value="&quot;True&quot;"/>
                            </enum>
                          </prop>
                          <prop type="ResourceId" name="networkId" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.l3Networks[].networkId" required="True"/>
                          <prop type="string" name="pluginType" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.l3Networks[].pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="trunkedNetworks" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.trunkedNetworks">
                        <item type="object">
                          <prop type="ResourceId" name="networkId" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.trunkedNetworks[].networkId" required="True"/>
                          <prop type="string" name="pluginType" arg="$agentPoolParameters.properties.attachedNetworkConfiguration.trunkedNetworks[].pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="availabilityZones" arg="$agentPoolParameters.properties.availabilityZones">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="count" arg="$agentPoolParameters.properties.count" required="True"/>
                    <prop type="array<object>" name="labels" arg="$agentPoolParameters.properties.labels">
                      <item type="object" cls="KubernetesLabel_create">
                        <prop type="string" name="key" arg="@KubernetesLabel_create.key" required="True"/>
                        <prop type="string" name="value" arg="@KubernetesLabel_create.value" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="mode" arg="$agentPoolParameters.properties.mode" required="True">
                      <enum>
                        <item value="&quot;NotApplicable&quot;"/>
                        <item value="&quot;System&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@KubernetesLabel_create>" name="taints" arg="$agentPoolParameters.properties.taints">
                      <item type="@KubernetesLabel_create"/>
                    </prop>
                    <prop type="object" name="upgradeSettings" arg="$agentPoolParameters.properties.upgradeSettings">
                      <prop type="string" name="maxSurge" arg="$agentPoolParameters.properties.upgradeSettings.maxSurge">
                        <default value="&quot;1&quot;"/>
                      </prop>
                    </prop>
                    <prop type="string" name="vmSkuName" arg="$agentPoolParameters.properties.vmSkuName" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$agentPoolParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/kubernetesClusters/{}/agentPools/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="administratorConfiguration">
                      <prop type="string" name="adminUsername"/>
                      <prop type="array<object>" name="sshPublicKeys">
                        <item type="object">
                          <prop type="string" name="keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="agentOptions">
                      <prop type="integer64" name="hugepagesCount" required="True"/>
                      <prop type="string" name="hugepagesSize">
                        <default value="&quot;2M&quot;"/>
                        <enum>
                          <item value="&quot;1G&quot;"/>
                          <item value="&quot;2M&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="attachedNetworkConfiguration">
                      <prop type="array<object>" name="l2Networks">
                        <item type="object">
                          <prop type="ResourceId" name="networkId" required="True"/>
                          <prop type="string" name="pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="l3Networks">
                        <item type="object">
                          <prop type="string" name="ipamEnabled">
                            <default value="&quot;False&quot;"/>
                            <enum>
                              <item value="&quot;False&quot;"/>
                              <item value="&quot;True&quot;"/>
                            </enum>
                          </prop>
                          <prop type="ResourceId" name="networkId" required="True"/>
                          <prop type="string" name="pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="trunkedNetworks">
                        <item type="object">
                          <prop type="ResourceId" name="networkId" required="True"/>
                          <prop type="string" name="pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="availabilityZones">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="count" required="True"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="string" name="kubernetesVersion"/>
                    <prop type="array<object>" name="labels">
                      <item type="object" cls="KubernetesLabel_read">
                        <prop type="string" name="key" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="mode" required="True">
                      <enum>
                        <item value="&quot;NotApplicable&quot;"/>
                        <item value="&quot;System&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@KubernetesLabel_read>" name="taints">
                      <item type="@KubernetesLabel_read"/>
                    </prop>
                    <prop type="object" name="upgradeSettings">
                      <prop type="string" name="maxSurge">
                        <default value="&quot;1&quot;"/>
                      </prop>
                    </prop>
                    <prop type="string" name="vmSkuName" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-12-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/kubernetesclusters/{}/agentpools/{}" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2t1YmVybmV0ZXNDbHVzdGVycy97a3ViZXJuZXRlc0NsdXN0ZXJOYW1lfS9hZ2VudFBvb2xzL3thZ2VudFBvb2xOYW1lfQ==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.agentPoolName" options="agent-pool-name name n" required="True" idPart="child_name_1">
          <help short="The name of the Kubernetes cluster agent pool."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="string" var="$Path.kubernetesClusterName" options="kubernetes-cluster-name" required="True" idPart="name">
          <help short="The name of the Kubernetes cluster."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AdministratorConfiguration">
        <arg type="array<object>" var="$agentPoolUpdateParameters.properties.administratorConfiguration.sshPublicKeys" options="ssh-public-keys" group="AdministratorConfiguration">
          <help short="SshPublicKey represents the public key used to authenticate with a resource through SSH."/>
          <item type="object">
            <arg type="string" var="$agentPoolUpdateParameters.properties.administratorConfiguration.sshPublicKeys[].keyData" options="key-data" required="True">
              <help short="The SSH public key data."/>
              <format minLength="1"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="AgentPoolUpdateParameters">
        <arg type="object" var="$agentPoolUpdateParameters.tags" options="tags" group="AgentPoolUpdateParameters">
          <help short="The Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="integer64" var="$agentPoolUpdateParameters.properties.count" options="count" group="Properties">
          <help short="The number of virtual machines that use this configuration."/>
        </arg>
        <arg type="object" var="$agentPoolUpdateParameters.properties.upgradeSettings" options="upgrade-settings" group="Properties">
          <help short="The configuration of the agent pool."/>
          <arg type="string" var="$agentPoolUpdateParameters.properties.upgradeSettings.maxSurge" options="max-surge">
            <help short="The maximum number or percentage of nodes that are surged during upgrade. This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 1."/>
            <default value="&quot;1&quot;"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="AgentPools_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/kubernetesClusters/{kubernetesClusterName}/agentPools/{agentPoolName}">
          <request method="patch">
            <path>
              <param type="string" name="agentPoolName" arg="$Path.agentPoolName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="kubernetesClusterName" arg="$Path.kubernetesClusterName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="agentPoolUpdateParameters" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="administratorConfiguration">
                      <prop type="array<object>" name="sshPublicKeys" arg="$agentPoolUpdateParameters.properties.administratorConfiguration.sshPublicKeys" identifiers="keyData">
                        <item type="object">
                          <prop type="string" name="keyData" arg="$agentPoolUpdateParameters.properties.administratorConfiguration.sshPublicKeys[].keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer64" name="count" arg="$agentPoolUpdateParameters.properties.count"/>
                    <prop type="object" name="upgradeSettings" arg="$agentPoolUpdateParameters.properties.upgradeSettings">
                      <prop type="string" name="maxSurge" arg="$agentPoolUpdateParameters.properties.upgradeSettings.maxSurge">
                        <default value="&quot;1&quot;"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$agentPoolUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="AgentPool_read">
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/kubernetesClusters/{}/agentPools/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="object" name="administratorConfiguration">
                      <prop type="string" name="adminUsername"/>
                      <prop type="array<object>" name="sshPublicKeys">
                        <item type="object">
                          <prop type="string" name="keyData" required="True">
                            <format minLength="1"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="agentOptions">
                      <prop type="integer64" name="hugepagesCount" required="True"/>
                      <prop type="string" name="hugepagesSize">
                        <default value="&quot;2M&quot;"/>
                        <enum>
                          <item value="&quot;1G&quot;"/>
                          <item value="&quot;2M&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="attachedNetworkConfiguration">
                      <prop type="array<object>" name="l2Networks">
                        <item type="object">
                          <prop type="ResourceId" name="networkId" required="True"/>
                          <prop type="string" name="pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="l3Networks">
                        <item type="object">
                          <prop type="string" name="ipamEnabled">
                            <default value="&quot;False&quot;"/>
                            <enum>
                              <item value="&quot;False&quot;"/>
                              <item value="&quot;True&quot;"/>
                            </enum>
                          </prop>
                          <prop type="ResourceId" name="networkId" required="True"/>
                          <prop type="string" name="pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="trunkedNetworks">
                        <item type="object">
                          <prop type="ResourceId" name="networkId" required="True"/>
                          <prop type="string" name="pluginType">
                            <default value="&quot;SRIOV&quot;"/>
                            <enum>
                              <item value="&quot;DPDK&quot;"/>
                              <item value="&quot;IPVLAN&quot;"/>
                              <item value="&quot;MACVLAN&quot;"/>
                              <item value="&quot;OSDevice&quot;"/>
                              <item value="&quot;SRIOV&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="availabilityZones">
                      <item type="string"/>
                    </prop>
                    <prop type="integer64" name="count" required="True"/>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop readOnly="True" type="string" name="kubernetesVersion"/>
                    <prop type="array<object>" name="labels">
                      <item type="object" cls="KubernetesLabel_read">
                        <prop type="string" name="key" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="mode" required="True">
                      <enum>
                        <item value="&quot;NotApplicable&quot;"/>
                        <item value="&quot;System&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<@KubernetesLabel_read>" name="taints">
                      <item type="@KubernetesLabel_read"/>
                    </prop>
                    <prop type="object" name="upgradeSettings">
                      <prop type="string" name="maxSurge">
                        <default value="&quot;1&quot;"/>
                      </prop>
                    </prop>
                    <prop type="string" name="vmSkuName" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@AgentPool_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
