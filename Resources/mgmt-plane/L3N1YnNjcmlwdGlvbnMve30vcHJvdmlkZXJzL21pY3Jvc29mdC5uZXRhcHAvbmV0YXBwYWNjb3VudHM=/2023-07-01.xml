<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.netapp/netappaccounts" version="2023-07-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldEFwcC9uZXRBcHBBY2NvdW50cw==/V/MjAyMy0wNy0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts" version="2023-07-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRz/V/MjAyMy0wNy0wMQ=="/>
  <commandGroup name="netappfiles account">
    <command name="list" version="2023-07-01">
      <resource id="/subscriptions/{}/providers/microsoft.netapp/netappaccounts" version="2023-07-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldEFwcC9uZXRBcHBBY2NvdW50cw==/V/MjAyMy0wNy0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.netapp/netappaccounts" version="2023-07-01" swagger="mgmt-plane/netapp/ResourceProviders/Microsoft.NetApp/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0QXBwL25ldEFwcEFjY291bnRz/V/MjAyMy0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Accounts_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Accounts_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Accounts_List" operationId="Accounts_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetApp/netAppAccounts">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="uuid" name="principalId"/>
                        <prop readOnly="True" type="uuid" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item nullable="True" type="object">
                              <prop readOnly="True" type="uuid" name="clientId"/>
                              <prop readOnly="True" type="uuid" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="activeDirectories" identifiers="activeDirectoryId">
                          <item type="object">
                            <prop nullable="True" type="string" name="activeDirectoryId"/>
                            <prop type="string" name="adName">
                              <format maxLength="64" minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="administrators">
                              <item type="string">
                                <format maxLength="255" minLength="1"/>
                              </item>
                            </prop>
                            <prop type="boolean" name="aesEncryption"/>
                            <prop type="boolean" name="allowLocalNfsUsersWithLdap"/>
                            <prop type="array<string>" name="backupOperators">
                              <item type="string">
                                <format maxLength="255" minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="dns">
                              <format pattern="^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$"/>
                            </prop>
                            <prop type="string" name="domain"/>
                            <prop type="boolean" name="encryptDCConnections"/>
                            <prop type="string" name="kdcIP">
                              <format pattern="^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$"/>
                            </prop>
                            <prop type="boolean" name="ldapOverTLS"/>
                            <prop type="object" name="ldapSearchScope">
                              <prop type="string" name="groupDN">
                                <format maxLength="255"/>
                              </prop>
                              <prop type="string" name="groupMembershipFilter">
                                <format maxLength="255"/>
                              </prop>
                              <prop type="string" name="userDN">
                                <format maxLength="255"/>
                              </prop>
                            </prop>
                            <prop type="boolean" name="ldapSigning"/>
                            <prop type="string" name="organizationalUnit">
                              <default value="&quot;CN=Computers&quot;"/>
                            </prop>
                            <prop type="string" name="password" secret="True">
                              <format maxLength="64"/>
                            </prop>
                            <prop type="string" name="preferredServersForLdapClient">
                              <format pattern="^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$" maxLength="32"/>
                            </prop>
                            <prop type="array<string>" name="securityOperators">
                              <item type="string">
                                <format maxLength="255" minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="serverRootCACertificate" secret="True">
                              <format maxLength="10240" minLength="1"/>
                            </prop>
                            <prop type="string" name="site"/>
                            <prop type="string" name="smbServerName"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;Created&quot;"/>
                                <item value="&quot;Deleted&quot;"/>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;InUse&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="statusDetails"/>
                            <prop type="string" name="username"/>
                          </item>
                        </prop>
                        <prop readOnly="True" nullable="True" type="boolean" name="disableShowmount"/>
                        <prop type="object" name="encryption">
                          <prop type="object" name="identity">
                            <prop readOnly="True" type="string" name="principalId"/>
                            <prop type="string" name="userAssignedIdentity"/>
                          </prop>
                          <prop type="string" name="keySource">
                            <default value="&quot;Microsoft.NetApp&quot;"/>
                            <enum>
                              <item value="&quot;Microsoft.KeyVault&quot;"/>
                              <item value="&quot;Microsoft.NetApp&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties">
                            <prop type="string" name="keyName" required="True"/>
                            <prop readOnly="True" type="string" name="keyVaultId">
                              <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                            </prop>
                            <prop type="string" name="keyVaultResourceId" required="True"/>
                            <prop type="string" name="keyVaultUri" required="True"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;Created&quot;"/>
                                <item value="&quot;Deleted&quot;"/>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;InUse&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Accounts_ListBySubscription" operationId="Accounts_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.NetApp/netAppAccounts">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetApp/netAppAccounts/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop readOnly="True" type="uuid" name="principalId"/>
                        <prop readOnly="True" type="uuid" name="tenantId"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item nullable="True" type="object">
                              <prop readOnly="True" type="uuid" name="clientId"/>
                              <prop readOnly="True" type="uuid" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="activeDirectories" identifiers="activeDirectoryId">
                          <item type="object">
                            <prop nullable="True" type="string" name="activeDirectoryId"/>
                            <prop type="string" name="adName">
                              <format maxLength="64" minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="administrators">
                              <item type="string">
                                <format maxLength="255" minLength="1"/>
                              </item>
                            </prop>
                            <prop type="boolean" name="aesEncryption"/>
                            <prop type="boolean" name="allowLocalNfsUsersWithLdap"/>
                            <prop type="array<string>" name="backupOperators">
                              <item type="string">
                                <format maxLength="255" minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="dns">
                              <format pattern="^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$"/>
                            </prop>
                            <prop type="string" name="domain"/>
                            <prop type="boolean" name="encryptDCConnections"/>
                            <prop type="string" name="kdcIP">
                              <format pattern="^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$"/>
                            </prop>
                            <prop type="boolean" name="ldapOverTLS"/>
                            <prop type="object" name="ldapSearchScope">
                              <prop type="string" name="groupDN">
                                <format maxLength="255"/>
                              </prop>
                              <prop type="string" name="groupMembershipFilter">
                                <format maxLength="255"/>
                              </prop>
                              <prop type="string" name="userDN">
                                <format maxLength="255"/>
                              </prop>
                            </prop>
                            <prop type="boolean" name="ldapSigning"/>
                            <prop type="string" name="organizationalUnit">
                              <default value="&quot;CN=Computers&quot;"/>
                            </prop>
                            <prop type="string" name="password" secret="True">
                              <format maxLength="64"/>
                            </prop>
                            <prop type="string" name="preferredServersForLdapClient">
                              <format pattern="^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)((, ?)(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))?)?$" maxLength="32"/>
                            </prop>
                            <prop type="array<string>" name="securityOperators">
                              <item type="string">
                                <format maxLength="255" minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="serverRootCACertificate" secret="True">
                              <format maxLength="10240" minLength="1"/>
                            </prop>
                            <prop type="string" name="site"/>
                            <prop type="string" name="smbServerName"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;Created&quot;"/>
                                <item value="&quot;Deleted&quot;"/>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;InUse&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="statusDetails"/>
                            <prop type="string" name="username"/>
                          </item>
                        </prop>
                        <prop readOnly="True" nullable="True" type="boolean" name="disableShowmount"/>
                        <prop type="object" name="encryption">
                          <prop type="object" name="identity">
                            <prop readOnly="True" type="string" name="principalId"/>
                            <prop type="string" name="userAssignedIdentity"/>
                          </prop>
                          <prop type="string" name="keySource">
                            <default value="&quot;Microsoft.NetApp&quot;"/>
                            <enum>
                              <item value="&quot;Microsoft.KeyVault&quot;"/>
                              <item value="&quot;Microsoft.NetApp&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="keyVaultProperties">
                            <prop type="string" name="keyName" required="True"/>
                            <prop readOnly="True" type="string" name="keyVaultId">
                              <format pattern="^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$" maxLength="36" minLength="36"/>
                            </prop>
                            <prop type="string" name="keyVaultResourceId" required="True"/>
                            <prop type="string" name="keyVaultUri" required="True"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;Created&quot;"/>
                                <item value="&quot;Deleted&quot;"/>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;InUse&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
