<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}" version="2023-11-01-preview" swagger="mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyMy0xMS0wMS1wcmV2aWV3"/>
  <commandGroup name="acr">
    <command name="show" version="2023-11-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}" version="2023-11-01-preview" swagger="mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyMy0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.registryName" options="registry-name name n" required="True" idPart="name">
          <help short="The name of the container registry."/>
          <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Registries_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
          <request method="get">
            <path>
              <param type="string" name="registryName" arg="$Path.registryName" required="True">
                <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="adminUserEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="anonymousPullEnabled">
                      <default value="false"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="creationDate"/>
                    <prop type="boolean" name="dataEndpointEnabled"/>
                    <prop readOnly="True" type="array<string>" name="dataEndpointHostNames">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="keyVaultProperties">
                        <prop type="string" name="identity"/>
                        <prop type="string" name="keyIdentifier"/>
                        <prop readOnly="True" type="boolean" name="keyRotationEnabled"/>
                        <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                        <prop readOnly="True" type="string" name="versionedKeyIdentifier"/>
                      </prop>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;disabled&quot;"/>
                          <item value="&quot;enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="loginServer"/>
                    <prop type="string" name="metadataSearch">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkRuleBypassOptions">
                      <default value="&quot;AzureServices&quot;"/>
                      <enum>
                        <item value="&quot;AzureServices&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="string" name="defaultAction" required="True">
                        <default value="&quot;Allow&quot;"/>
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules">
                        <item type="object">
                          <prop type="string" name="action">
                            <default value="&quot;Allow&quot;"/>
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="value" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="policies">
                      <prop type="object" name="azureADAuthenticationAsArmPolicy">
                        <prop type="string" name="status">
                          <default value="&quot;enabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="exportPolicy">
                        <prop type="string" name="status">
                          <default value="&quot;enabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="quarantinePolicy">
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="retentionPolicy">
                        <prop type="integer32" name="days">
                          <default value="7"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="softDeletePolicy">
                        <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                        <prop type="integer32" name="retentionDays">
                          <default value="7"/>
                        </prop>
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="trustPolicy">
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type">
                          <default value="&quot;Notary&quot;"/>
                          <enum>
                            <item value="&quot;Notary&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;Recreate&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="status">
                      <prop readOnly="True" type="string" name="displayStatus"/>
                      <prop readOnly="True" type="string" name="message"/>
                      <prop readOnly="True" type="dateTime" name="timestamp"/>
                    </prop>
                    <prop type="string" name="zoneRedundancy">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Classic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Classic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-11-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}" version="2023-11-01-preview" swagger="mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyMy0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.registryName" options="registry-name name n" required="True" idPart="name">
          <help short="The name of the container registry."/>
          <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Registries_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
          <request method="delete">
            <path>
              <param type="string" name="registryName" arg="$Path.registryName" required="True">
                <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-11-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}" version="2023-11-01-preview" swagger="mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyMy0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.registryName" options="registry-name name n" required="True" idPart="name">
          <help short="The name of the container registry."/>
          <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$registry.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$registry.identity.type" options="type" hide="True" group="Identity">
          <help short="The identity type."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$registry.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$registry.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The list of user identities associated with the resource. The user identity &#13; dictionary key references will be ARM resource ids in the form: &#13; '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/&#13;     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$registry.properties.adminUserEnabled" options="admin-user-enabled" group="Properties">
          <help short="The value that indicates whether the admin user is enabled."/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$registry.properties.anonymousPullEnabled" options="anonymous-pull-enabled" group="Properties">
          <help short="Enables registry-wide pull from unauthenticated clients."/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$registry.properties.dataEndpointEnabled" options="data-endpoint-enabled" group="Properties">
          <help short="Enable a single data endpoint per region for serving data."/>
        </arg>
        <arg type="object" var="$registry.properties.encryption" options="encryption" group="Properties">
          <help short="The encryption settings of container registry."/>
          <arg type="object" var="$registry.properties.encryption.keyVaultProperties" options="key-vault-properties">
            <help short="Key vault properties."/>
            <arg type="string" var="$registry.properties.encryption.keyVaultProperties.identity" options="identity">
              <help short="The client id of the identity which will be used to access key vault."/>
            </arg>
            <arg type="string" var="$registry.properties.encryption.keyVaultProperties.keyIdentifier" options="key-identifier">
              <help short="Key vault uri to access the encryption key."/>
            </arg>
          </arg>
          <arg type="string" var="$registry.properties.encryption.status" options="status">
            <help short="Indicates whether or not the encryption is enabled for container registry."/>
            <enum>
              <item name="disabled" value="&quot;disabled&quot;"/>
              <item name="enabled" value="&quot;enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$registry.properties.metadataSearch" options="metadata-search" group="Properties">
          <help short="Determines whether registry artifacts are indexed for metadata search."/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$registry.properties.networkRuleBypassOptions" options="network-rule-bypass-options" group="Properties">
          <help short="Whether to allow trusted Azure services to access a network restricted registry."/>
          <default value="&quot;AzureServices&quot;"/>
          <enum>
            <item name="AzureServices" value="&quot;AzureServices&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$registry.properties.networkRuleSet" options="network-rule-set" group="Properties">
          <help short="The network rule set for a container registry."/>
          <arg type="string" var="$registry.properties.networkRuleSet.defaultAction" options="default-action" required="True">
            <help short="The default action of allow or deny when no other rules match."/>
            <default value="&quot;Allow&quot;"/>
            <enum>
              <item name="Allow" value="&quot;Allow&quot;"/>
              <item name="Deny" value="&quot;Deny&quot;"/>
            </enum>
          </arg>
          <arg type="array<object>" var="$registry.properties.networkRuleSet.ipRules" options="ip-rules">
            <help short="The IP ACL rules."/>
            <item type="object">
              <arg type="string" var="$registry.properties.networkRuleSet.ipRules[].action" options="action">
                <help short="The action of IP ACL rule."/>
                <default value="&quot;Allow&quot;"/>
                <enum>
                  <item name="Allow" value="&quot;Allow&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$registry.properties.networkRuleSet.ipRules[].value" options="value" required="True">
                <help short="Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="object" var="$registry.properties.policies" options="policies" group="Properties">
          <help short="The policies for a container registry."/>
          <arg type="object" var="$registry.properties.policies.azureADAuthenticationAsArmPolicy" options="azure-ad-authentication-as-arm-policy">
            <help short="The policy for using ARM audience token for a container registry."/>
            <arg type="string" var="$registry.properties.policies.azureADAuthenticationAsArmPolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <default value="&quot;enabled&quot;"/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$registry.properties.policies.exportPolicy" options="export-policy">
            <help short="The export policy for a container registry."/>
            <arg type="string" var="$registry.properties.policies.exportPolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <default value="&quot;enabled&quot;"/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$registry.properties.policies.quarantinePolicy" options="quarantine-policy">
            <help short="The quarantine policy for a container registry."/>
            <arg type="string" var="$registry.properties.policies.quarantinePolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <default value="&quot;disabled&quot;"/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$registry.properties.policies.retentionPolicy" options="retention-policy">
            <help short="The retention policy for a container registry."/>
            <arg type="integer32" var="$registry.properties.policies.retentionPolicy.days" options="days">
              <help short="The number of days to retain an untagged manifest after which it gets purged."/>
              <default value="7"/>
            </arg>
            <arg type="string" var="$registry.properties.policies.retentionPolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <default value="&quot;disabled&quot;"/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$registry.properties.policies.softDeletePolicy" options="soft-delete-policy">
            <help short="The soft delete policy for a container registry."/>
            <arg type="integer32" var="$registry.properties.policies.softDeletePolicy.retentionDays" options="retention-days">
              <help short="The number of days after which a soft-deleted item is permanently deleted."/>
              <default value="7"/>
            </arg>
            <arg type="string" var="$registry.properties.policies.softDeletePolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <default value="&quot;disabled&quot;"/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$registry.properties.policies.trustPolicy" options="trust-policy">
            <help short="The content trust policy for a container registry."/>
            <arg type="string" var="$registry.properties.policies.trustPolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <default value="&quot;disabled&quot;"/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$registry.properties.policies.trustPolicy.type" options="type">
              <help short="The type of trust policy."/>
              <default value="&quot;Notary&quot;"/>
              <enum>
                <item name="Notary" value="&quot;Notary&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$registry.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="Whether or not public network access is allowed for the container registry."/>
          <default value="&quot;Enabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$registry.properties.zoneRedundancy" options="zone-redundancy" group="Properties">
          <help short="Whether or not zone redundancy is enabled for this container registry"/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Registry">
        <arg type="ResourceLocation" var="$registry.location" options="location l" required="True" group="Registry">
          <help short="The location of the resource. This cannot be changed after the resource is created."/>
        </arg>
        <arg type="object" var="$registry.sku" options="sku" required="True" group="Registry">
          <help short="The SKU of the container registry."/>
          <arg type="string" var="$registry.sku.name" options="name" required="True">
            <help short="The SKU name of the container registry. Required for registry creation."/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Classic" value="&quot;Classic&quot;"/>
              <item name="Premium" value="&quot;Premium&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$registry.tags" options="tags" group="Registry">
          <help short="The tags of the resource."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Registries_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
          <request method="put">
            <path>
              <param type="string" name="registryName" arg="$Path.registryName" required="True">
                <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="registry" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$registry.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$registry.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$registry.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$registry.identity.systemAssigned"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$registry.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="adminUserEnabled" arg="$registry.properties.adminUserEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="anonymousPullEnabled" arg="$registry.properties.anonymousPullEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="dataEndpointEnabled" arg="$registry.properties.dataEndpointEnabled"/>
                    <prop type="object" name="encryption" arg="$registry.properties.encryption">
                      <prop type="object" name="keyVaultProperties" arg="$registry.properties.encryption.keyVaultProperties">
                        <prop type="string" name="identity" arg="$registry.properties.encryption.keyVaultProperties.identity"/>
                        <prop type="string" name="keyIdentifier" arg="$registry.properties.encryption.keyVaultProperties.keyIdentifier"/>
                      </prop>
                      <prop type="string" name="status" arg="$registry.properties.encryption.status">
                        <enum>
                          <item value="&quot;disabled&quot;"/>
                          <item value="&quot;enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="metadataSearch" arg="$registry.properties.metadataSearch">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkRuleBypassOptions" arg="$registry.properties.networkRuleBypassOptions">
                      <default value="&quot;AzureServices&quot;"/>
                      <enum>
                        <item value="&quot;AzureServices&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet" arg="$registry.properties.networkRuleSet">
                      <prop type="string" name="defaultAction" arg="$registry.properties.networkRuleSet.defaultAction" required="True">
                        <default value="&quot;Allow&quot;"/>
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules" arg="$registry.properties.networkRuleSet.ipRules">
                        <item type="object">
                          <prop type="string" name="action" arg="$registry.properties.networkRuleSet.ipRules[].action">
                            <default value="&quot;Allow&quot;"/>
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="value" arg="$registry.properties.networkRuleSet.ipRules[].value" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="policies" arg="$registry.properties.policies">
                      <prop type="object" name="azureADAuthenticationAsArmPolicy" arg="$registry.properties.policies.azureADAuthenticationAsArmPolicy">
                        <prop type="string" name="status" arg="$registry.properties.policies.azureADAuthenticationAsArmPolicy.status">
                          <default value="&quot;enabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="exportPolicy" arg="$registry.properties.policies.exportPolicy">
                        <prop type="string" name="status" arg="$registry.properties.policies.exportPolicy.status">
                          <default value="&quot;enabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="quarantinePolicy" arg="$registry.properties.policies.quarantinePolicy">
                        <prop type="string" name="status" arg="$registry.properties.policies.quarantinePolicy.status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="retentionPolicy" arg="$registry.properties.policies.retentionPolicy">
                        <prop type="integer32" name="days" arg="$registry.properties.policies.retentionPolicy.days">
                          <default value="7"/>
                        </prop>
                        <prop type="string" name="status" arg="$registry.properties.policies.retentionPolicy.status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="softDeletePolicy" arg="$registry.properties.policies.softDeletePolicy">
                        <prop type="integer32" name="retentionDays" arg="$registry.properties.policies.softDeletePolicy.retentionDays">
                          <default value="7"/>
                        </prop>
                        <prop type="string" name="status" arg="$registry.properties.policies.softDeletePolicy.status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="trustPolicy" arg="$registry.properties.policies.trustPolicy">
                        <prop type="string" name="status" arg="$registry.properties.policies.trustPolicy.status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type" arg="$registry.properties.policies.trustPolicy.type">
                          <default value="&quot;Notary&quot;"/>
                          <enum>
                            <item value="&quot;Notary&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$registry.properties.publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="zoneRedundancy" arg="$registry.properties.zoneRedundancy">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" arg="$registry.sku" required="True">
                    <prop type="string" name="name" arg="$registry.sku.name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Classic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$registry.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="adminUserEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="anonymousPullEnabled">
                      <default value="false"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="creationDate"/>
                    <prop type="boolean" name="dataEndpointEnabled"/>
                    <prop readOnly="True" type="array<string>" name="dataEndpointHostNames">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="keyVaultProperties">
                        <prop type="string" name="identity"/>
                        <prop type="string" name="keyIdentifier"/>
                        <prop readOnly="True" type="boolean" name="keyRotationEnabled"/>
                        <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                        <prop readOnly="True" type="string" name="versionedKeyIdentifier"/>
                      </prop>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;disabled&quot;"/>
                          <item value="&quot;enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="loginServer"/>
                    <prop type="string" name="metadataSearch">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkRuleBypassOptions">
                      <default value="&quot;AzureServices&quot;"/>
                      <enum>
                        <item value="&quot;AzureServices&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="string" name="defaultAction" required="True">
                        <default value="&quot;Allow&quot;"/>
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules">
                        <item type="object">
                          <prop type="string" name="action">
                            <default value="&quot;Allow&quot;"/>
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="value" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="policies">
                      <prop type="object" name="azureADAuthenticationAsArmPolicy">
                        <prop type="string" name="status">
                          <default value="&quot;enabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="exportPolicy">
                        <prop type="string" name="status">
                          <default value="&quot;enabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="quarantinePolicy">
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="retentionPolicy">
                        <prop type="integer32" name="days">
                          <default value="7"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="softDeletePolicy">
                        <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                        <prop type="integer32" name="retentionDays">
                          <default value="7"/>
                        </prop>
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="trustPolicy">
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type">
                          <default value="&quot;Notary&quot;"/>
                          <enum>
                            <item value="&quot;Notary&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;Recreate&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="status">
                      <prop readOnly="True" type="string" name="displayStatus"/>
                      <prop readOnly="True" type="string" name="message"/>
                      <prop readOnly="True" type="dateTime" name="timestamp"/>
                    </prop>
                    <prop type="string" name="zoneRedundancy">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Classic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Classic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-11-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}" version="2023-11-01-preview" swagger="mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyMy0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.registryName" options="registry-name name n" required="True" idPart="name">
          <help short="The name of the container registry."/>
          <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg nullable="True" type="string" var="$registry.identity.type" options="type" hide="True" group="Identity">
          <help short="The identity type."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$registry.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The list of user identities associated with the resource. The user identity &#13; dictionary key references will be ARM resource ids in the form: &#13; '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/&#13;     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$registry.properties.adminUserEnabled" options="admin-user-enabled" group="Properties">
          <help short="The value that indicates whether the admin user is enabled."/>
        </arg>
        <arg nullable="True" type="boolean" var="$registry.properties.anonymousPullEnabled" options="anonymous-pull-enabled" group="Properties">
          <help short="Enables registry-wide pull from unauthenticated clients."/>
        </arg>
        <arg nullable="True" type="boolean" var="$registry.properties.dataEndpointEnabled" options="data-endpoint-enabled" group="Properties">
          <help short="Enable a single data endpoint per region for serving data."/>
        </arg>
        <arg nullable="True" type="object" var="$registry.properties.encryption" options="encryption" group="Properties">
          <help short="The encryption settings of container registry."/>
          <arg nullable="True" type="object" var="$registry.properties.encryption.keyVaultProperties" options="key-vault-properties">
            <help short="Key vault properties."/>
            <arg nullable="True" type="string" var="$registry.properties.encryption.keyVaultProperties.identity" options="identity">
              <help short="The client id of the identity which will be used to access key vault."/>
            </arg>
            <arg nullable="True" type="string" var="$registry.properties.encryption.keyVaultProperties.keyIdentifier" options="key-identifier">
              <help short="Key vault uri to access the encryption key."/>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$registry.properties.encryption.status" options="status">
            <help short="Indicates whether or not the encryption is enabled for container registry."/>
            <enum>
              <item name="disabled" value="&quot;disabled&quot;"/>
              <item name="enabled" value="&quot;enabled&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$registry.properties.metadataSearch" options="metadata-search" group="Properties">
          <help short="Determines whether registry artifacts are indexed for metadata search."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$registry.properties.networkRuleBypassOptions" options="network-rule-bypass-options" group="Properties">
          <help short="Whether to allow trusted Azure services to access a network restricted registry."/>
          <enum>
            <item name="AzureServices" value="&quot;AzureServices&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$registry.properties.networkRuleSet" options="network-rule-set" group="Properties">
          <help short="The network rule set for a container registry."/>
          <arg type="string" var="$registry.properties.networkRuleSet.defaultAction" options="default-action">
            <help short="The default action of allow or deny when no other rules match."/>
            <enum>
              <item name="Allow" value="&quot;Allow&quot;"/>
              <item name="Deny" value="&quot;Deny&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="array<object>" var="$registry.properties.networkRuleSet.ipRules" options="ip-rules">
            <help short="The IP ACL rules."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$registry.properties.networkRuleSet.ipRules[].action" options="action">
                <help short="The action of IP ACL rule."/>
                <enum>
                  <item name="Allow" value="&quot;Allow&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$registry.properties.networkRuleSet.ipRules[].value" options="value">
                <help short="Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$registry.properties.policies" options="policies" group="Properties">
          <help short="The policies for a container registry."/>
          <arg nullable="True" type="object" var="$registry.properties.policies.azureADAuthenticationAsArmPolicy" options="azure-ad-authentication-as-arm-policy">
            <help short="The policy for using ARM audience token for a container registry."/>
            <arg nullable="True" type="string" var="$registry.properties.policies.azureADAuthenticationAsArmPolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$registry.properties.policies.exportPolicy" options="export-policy">
            <help short="The export policy for a container registry."/>
            <arg nullable="True" type="string" var="$registry.properties.policies.exportPolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$registry.properties.policies.quarantinePolicy" options="quarantine-policy">
            <help short="The quarantine policy for a container registry."/>
            <arg nullable="True" type="string" var="$registry.properties.policies.quarantinePolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$registry.properties.policies.retentionPolicy" options="retention-policy">
            <help short="The retention policy for a container registry."/>
            <arg nullable="True" type="integer32" var="$registry.properties.policies.retentionPolicy.days" options="days">
              <help short="The number of days to retain an untagged manifest after which it gets purged."/>
            </arg>
            <arg nullable="True" type="string" var="$registry.properties.policies.retentionPolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$registry.properties.policies.softDeletePolicy" options="soft-delete-policy">
            <help short="The soft delete policy for a container registry."/>
            <arg nullable="True" type="integer32" var="$registry.properties.policies.softDeletePolicy.retentionDays" options="retention-days">
              <help short="The number of days after which a soft-deleted item is permanently deleted."/>
            </arg>
            <arg nullable="True" type="string" var="$registry.properties.policies.softDeletePolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$registry.properties.policies.trustPolicy" options="trust-policy">
            <help short="The content trust policy for a container registry."/>
            <arg nullable="True" type="string" var="$registry.properties.policies.trustPolicy.status" options="status">
              <help short="The value that indicates whether the policy is enabled or not."/>
              <enum>
                <item name="disabled" value="&quot;disabled&quot;"/>
                <item name="enabled" value="&quot;enabled&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$registry.properties.policies.trustPolicy.type" options="type">
              <help short="The type of trust policy."/>
              <enum>
                <item name="Notary" value="&quot;Notary&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$registry.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="Whether or not public network access is allowed for the container registry."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$registry.properties.zoneRedundancy" options="zone-redundancy" group="Properties">
          <help short="Whether or not zone redundancy is enabled for this container registry"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Registry">
        <arg type="object" var="$registry.sku" options="sku" group="Registry">
          <help short="The SKU of the container registry."/>
          <arg type="string" var="$registry.sku.name" options="name">
            <help short="The SKU name of the container registry. Required for registry creation."/>
            <enum>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Classic" value="&quot;Classic&quot;"/>
              <item name="Premium" value="&quot;Premium&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$registry.tags" options="tags" group="Registry">
          <help short="The tags of the resource."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Registries_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
          <request method="get">
            <path>
              <param type="string" name="registryName" arg="$Path.registryName" required="True">
                <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Registry_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="adminUserEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="anonymousPullEnabled">
                      <default value="false"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="creationDate"/>
                    <prop type="boolean" name="dataEndpointEnabled"/>
                    <prop readOnly="True" type="array<string>" name="dataEndpointHostNames">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="keyVaultProperties">
                        <prop type="string" name="identity"/>
                        <prop type="string" name="keyIdentifier"/>
                        <prop readOnly="True" type="boolean" name="keyRotationEnabled"/>
                        <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                        <prop readOnly="True" type="string" name="versionedKeyIdentifier"/>
                      </prop>
                      <prop type="string" name="status">
                        <enum>
                          <item value="&quot;disabled&quot;"/>
                          <item value="&quot;enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="loginServer"/>
                    <prop type="string" name="metadataSearch">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkRuleBypassOptions">
                      <default value="&quot;AzureServices&quot;"/>
                      <enum>
                        <item value="&quot;AzureServices&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="string" name="defaultAction" required="True">
                        <default value="&quot;Allow&quot;"/>
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules">
                        <item type="object">
                          <prop type="string" name="action">
                            <default value="&quot;Allow&quot;"/>
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="value" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="policies">
                      <prop type="object" name="azureADAuthenticationAsArmPolicy">
                        <prop type="string" name="status">
                          <default value="&quot;enabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="exportPolicy">
                        <prop type="string" name="status">
                          <default value="&quot;enabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="quarantinePolicy">
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="retentionPolicy">
                        <prop type="integer32" name="days">
                          <default value="7"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="softDeletePolicy">
                        <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                        <prop type="integer32" name="retentionDays">
                          <default value="7"/>
                        </prop>
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="trustPolicy">
                        <prop type="string" name="status">
                          <default value="&quot;disabled&quot;"/>
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="type">
                          <default value="&quot;Notary&quot;"/>
                          <enum>
                            <item value="&quot;Notary&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;Recreate&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="status">
                      <prop readOnly="True" type="string" name="displayStatus"/>
                      <prop readOnly="True" type="string" name="message"/>
                      <prop readOnly="True" type="dateTime" name="timestamp"/>
                    </prop>
                    <prop type="string" name="zoneRedundancy">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" required="True">
                    <prop type="string" name="name" required="True">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Classic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="tier">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Classic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="registry" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity">
                <prop type="string" name="type" arg="$registry.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$registry.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="adminUserEnabled" arg="$registry.properties.adminUserEnabled">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="anonymousPullEnabled" arg="$registry.properties.anonymousPullEnabled">
                  <default value="false"/>
                </prop>
                <prop type="boolean" name="dataEndpointEnabled" arg="$registry.properties.dataEndpointEnabled"/>
                <prop type="object" name="encryption" arg="$registry.properties.encryption">
                  <prop type="object" name="keyVaultProperties" arg="$registry.properties.encryption.keyVaultProperties">
                    <prop type="string" name="identity" arg="$registry.properties.encryption.keyVaultProperties.identity"/>
                    <prop type="string" name="keyIdentifier" arg="$registry.properties.encryption.keyVaultProperties.keyIdentifier"/>
                  </prop>
                  <prop type="string" name="status" arg="$registry.properties.encryption.status">
                    <enum>
                      <item value="&quot;disabled&quot;"/>
                      <item value="&quot;enabled&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="string" name="metadataSearch" arg="$registry.properties.metadataSearch">
                  <default value="&quot;Disabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="networkRuleBypassOptions" arg="$registry.properties.networkRuleBypassOptions">
                  <default value="&quot;AzureServices&quot;"/>
                  <enum>
                    <item value="&quot;AzureServices&quot;"/>
                    <item value="&quot;None&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="networkRuleSet" arg="$registry.properties.networkRuleSet">
                  <prop type="string" name="defaultAction" arg="$registry.properties.networkRuleSet.defaultAction" required="True">
                    <default value="&quot;Allow&quot;"/>
                    <enum>
                      <item value="&quot;Allow&quot;"/>
                      <item value="&quot;Deny&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<object>" name="ipRules" arg="$registry.properties.networkRuleSet.ipRules">
                    <item type="object">
                      <prop type="string" name="action" arg="$registry.properties.networkRuleSet.ipRules[].action">
                        <default value="&quot;Allow&quot;"/>
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="value" arg="$registry.properties.networkRuleSet.ipRules[].value" required="True"/>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="policies" arg="$registry.properties.policies">
                  <prop type="object" name="azureADAuthenticationAsArmPolicy" arg="$registry.properties.policies.azureADAuthenticationAsArmPolicy">
                    <prop type="string" name="status" arg="$registry.properties.policies.azureADAuthenticationAsArmPolicy.status">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="exportPolicy" arg="$registry.properties.policies.exportPolicy">
                    <prop type="string" name="status" arg="$registry.properties.policies.exportPolicy.status">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="quarantinePolicy" arg="$registry.properties.policies.quarantinePolicy">
                    <prop type="string" name="status" arg="$registry.properties.policies.quarantinePolicy.status">
                      <default value="&quot;disabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="retentionPolicy" arg="$registry.properties.policies.retentionPolicy">
                    <prop type="integer32" name="days" arg="$registry.properties.policies.retentionPolicy.days">
                      <default value="7"/>
                    </prop>
                    <prop type="string" name="status" arg="$registry.properties.policies.retentionPolicy.status">
                      <default value="&quot;disabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="softDeletePolicy" arg="$registry.properties.policies.softDeletePolicy">
                    <prop type="integer32" name="retentionDays" arg="$registry.properties.policies.softDeletePolicy.retentionDays">
                      <default value="7"/>
                    </prop>
                    <prop type="string" name="status" arg="$registry.properties.policies.softDeletePolicy.status">
                      <default value="&quot;disabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="trustPolicy" arg="$registry.properties.policies.trustPolicy">
                    <prop type="string" name="status" arg="$registry.properties.policies.trustPolicy.status">
                      <default value="&quot;disabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="type" arg="$registry.properties.policies.trustPolicy.type">
                      <default value="&quot;Notary&quot;"/>
                      <enum>
                        <item value="&quot;Notary&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </prop>
                <prop type="string" name="publicNetworkAccess" arg="$registry.properties.publicNetworkAccess">
                  <default value="&quot;Enabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="zoneRedundancy" arg="$registry.properties.zoneRedundancy">
                  <default value="&quot;Disabled&quot;"/>
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="sku" arg="$registry.sku" required="True">
                <prop type="string" name="name" arg="$registry.sku.name" required="True">
                  <enum>
                    <item value="&quot;Basic&quot;"/>
                    <item value="&quot;Classic&quot;"/>
                    <item value="&quot;Premium&quot;"/>
                    <item value="&quot;Standard&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$registry.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Registries_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
          <request method="put">
            <path>
              <param type="string" name="registryName" arg="$Path.registryName" required="True">
                <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Registry_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="identity">
      <command name="assign" version="2023-11-01-preview">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}" version="2023-11-01-preview" subresource="identity" swagger="mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyMy0xMS0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.registryName" options="registry-name name n" required="True" idPart="name">
            <help short="The name of the container registry."/>
            <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Registry.identity">
          <arg type="string" var="$registry.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Registry.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$registry.identity.userAssigned" options="mi-user-assigned user-assigned" group="Registry.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="registry">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="Registries_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
            <request method="get">
              <path>
                <param type="string" name="registryName" arg="$Path.registryName" required="True">
                  <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-11-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Registry_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="boolean" name="adminUserEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="anonymousPullEnabled">
                        <default value="false"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="creationDate"/>
                      <prop type="boolean" name="dataEndpointEnabled"/>
                      <prop readOnly="True" type="array<string>" name="dataEndpointHostNames">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="encryption">
                        <prop type="object" name="keyVaultProperties">
                          <prop type="string" name="identity"/>
                          <prop type="string" name="keyIdentifier"/>
                          <prop readOnly="True" type="boolean" name="keyRotationEnabled"/>
                          <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                          <prop readOnly="True" type="string" name="versionedKeyIdentifier"/>
                        </prop>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="loginServer"/>
                      <prop type="string" name="metadataSearch">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkRuleBypassOptions">
                        <default value="&quot;AzureServices&quot;"/>
                        <enum>
                          <item value="&quot;AzureServices&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="networkRuleSet">
                        <prop type="string" name="defaultAction" required="True">
                          <default value="&quot;Allow&quot;"/>
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                            <item value="&quot;Deny&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="ipRules">
                          <item type="object">
                            <prop type="string" name="action">
                              <default value="&quot;Allow&quot;"/>
                              <enum>
                                <item value="&quot;Allow&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="value" required="True"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="policies">
                        <prop type="object" name="azureADAuthenticationAsArmPolicy">
                          <prop type="string" name="status">
                            <default value="&quot;enabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="exportPolicy">
                          <prop type="string" name="status">
                            <default value="&quot;enabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="quarantinePolicy">
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="retentionPolicy">
                          <prop type="integer32" name="days">
                            <default value="7"/>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="softDeletePolicy">
                          <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                          <prop type="integer32" name="retentionDays">
                            <default value="7"/>
                          </prop>
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="trustPolicy">
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type">
                            <default value="&quot;Notary&quot;"/>
                            <enum>
                              <item value="&quot;Notary&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                        <item type="object">
                          <prop readOnly="True" type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"/>
                          </prop>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="object" name="privateEndpoint">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="object" name="privateLinkServiceConnectionState">
                              <prop type="string" name="actionsRequired">
                                <enum>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;Recreate&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="description"/>
                              <prop type="string" name="status">
                                <enum>
                                  <item value="&quot;Approved&quot;"/>
                                  <item value="&quot;Disconnected&quot;"/>
                                  <item value="&quot;Pending&quot;"/>
                                  <item value="&quot;Rejected&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Canceled&quot;"/>
                                <item value="&quot;Creating&quot;"/>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="publicNetworkAccess">
                        <default value="&quot;Enabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="object" name="status">
                        <prop readOnly="True" type="string" name="displayStatus"/>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="dateTime" name="timestamp"/>
                      </prop>
                      <prop type="string" name="zoneRedundancy">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name" required="True">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Classic&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Classic&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="assign" type="IdentityObject" name="registry.identity" required="True">
                <userAssigned action="assign" type="array<string>" name="userAssigned" arg="$registry.identity.userAssigned">
                  <item action="assign" type="string"/>
                </userAssigned>
                <systemAssigned action="assign" type="string" name="systemAssigned" arg="$registry.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="Registries_Create">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
            <request method="put">
              <path>
                <param type="string" name="registryName" arg="$Path.registryName" required="True">
                  <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-11-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@Registry_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2023-11-01-preview">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}" version="2023-11-01-preview" subresource="identity" swagger="mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyMy0xMS0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.registryName" options="registry-name name n" required="True" idPart="name">
            <help short="The name of the container registry."/>
            <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Registry.identity">
          <arg type="string" var="$registry.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Registry.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$registry.identity.userAssigned" options="mi-user-assigned user-assigned" group="Registry.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="registry">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="Registries_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
            <request method="get">
              <path>
                <param type="string" name="registryName" arg="$Path.registryName" required="True">
                  <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-11-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Registry_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="boolean" name="adminUserEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="anonymousPullEnabled">
                        <default value="false"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="creationDate"/>
                      <prop type="boolean" name="dataEndpointEnabled"/>
                      <prop readOnly="True" type="array<string>" name="dataEndpointHostNames">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="encryption">
                        <prop type="object" name="keyVaultProperties">
                          <prop type="string" name="identity"/>
                          <prop type="string" name="keyIdentifier"/>
                          <prop readOnly="True" type="boolean" name="keyRotationEnabled"/>
                          <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                          <prop readOnly="True" type="string" name="versionedKeyIdentifier"/>
                        </prop>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="loginServer"/>
                      <prop type="string" name="metadataSearch">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkRuleBypassOptions">
                        <default value="&quot;AzureServices&quot;"/>
                        <enum>
                          <item value="&quot;AzureServices&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="networkRuleSet">
                        <prop type="string" name="defaultAction" required="True">
                          <default value="&quot;Allow&quot;"/>
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                            <item value="&quot;Deny&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="ipRules">
                          <item type="object">
                            <prop type="string" name="action">
                              <default value="&quot;Allow&quot;"/>
                              <enum>
                                <item value="&quot;Allow&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="value" required="True"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="policies">
                        <prop type="object" name="azureADAuthenticationAsArmPolicy">
                          <prop type="string" name="status">
                            <default value="&quot;enabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="exportPolicy">
                          <prop type="string" name="status">
                            <default value="&quot;enabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="quarantinePolicy">
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="retentionPolicy">
                          <prop type="integer32" name="days">
                            <default value="7"/>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="softDeletePolicy">
                          <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                          <prop type="integer32" name="retentionDays">
                            <default value="7"/>
                          </prop>
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="trustPolicy">
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type">
                            <default value="&quot;Notary&quot;"/>
                            <enum>
                              <item value="&quot;Notary&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                        <item type="object">
                          <prop readOnly="True" type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"/>
                          </prop>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="object" name="privateEndpoint">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="object" name="privateLinkServiceConnectionState">
                              <prop type="string" name="actionsRequired">
                                <enum>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;Recreate&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="description"/>
                              <prop type="string" name="status">
                                <enum>
                                  <item value="&quot;Approved&quot;"/>
                                  <item value="&quot;Disconnected&quot;"/>
                                  <item value="&quot;Pending&quot;"/>
                                  <item value="&quot;Rejected&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Canceled&quot;"/>
                                <item value="&quot;Creating&quot;"/>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="publicNetworkAccess">
                        <default value="&quot;Enabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="object" name="status">
                        <prop readOnly="True" type="string" name="displayStatus"/>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="dateTime" name="timestamp"/>
                      </prop>
                      <prop type="string" name="zoneRedundancy">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name" required="True">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Classic&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Classic&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="remove" type="IdentityObject" name="registry.identity" required="True">
                <userAssigned action="remove" type="array<string>" name="userAssigned" arg="$registry.identity.userAssigned">
                  <item action="remove" type="string"/>
                </userAssigned>
                <systemAssigned action="remove" type="string" name="systemAssigned" arg="$registry.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="Registries_Create">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
            <request method="put">
              <path>
                <param type="string" name="registryName" arg="$Path.registryName" required="True">
                  <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-11-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@Registry_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="show" version="2023-11-01-preview">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}" version="2023-11-01-preview" subresource="identity" swagger="mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyMy0xMS0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.registryName" options="registry-name name n" required="True" idPart="name">
            <help short="The name of the container registry."/>
            <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="registry">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="Registries_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}">
            <request method="get">
              <path>
                <param type="string" name="registryName" arg="$Path.registryName" required="True">
                  <format pattern="^[a-zA-Z0-9]*$" maxLength="50" minLength="5"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-11-01-preview&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="Registry_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="boolean" name="adminUserEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="anonymousPullEnabled">
                        <default value="false"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="creationDate"/>
                      <prop type="boolean" name="dataEndpointEnabled"/>
                      <prop readOnly="True" type="array<string>" name="dataEndpointHostNames">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="encryption">
                        <prop type="object" name="keyVaultProperties">
                          <prop type="string" name="identity"/>
                          <prop type="string" name="keyIdentifier"/>
                          <prop readOnly="True" type="boolean" name="keyRotationEnabled"/>
                          <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                          <prop readOnly="True" type="string" name="versionedKeyIdentifier"/>
                        </prop>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;disabled&quot;"/>
                            <item value="&quot;enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="loginServer"/>
                      <prop type="string" name="metadataSearch">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="networkRuleBypassOptions">
                        <default value="&quot;AzureServices&quot;"/>
                        <enum>
                          <item value="&quot;AzureServices&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="networkRuleSet">
                        <prop type="string" name="defaultAction" required="True">
                          <default value="&quot;Allow&quot;"/>
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                            <item value="&quot;Deny&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="ipRules">
                          <item type="object">
                            <prop type="string" name="action">
                              <default value="&quot;Allow&quot;"/>
                              <enum>
                                <item value="&quot;Allow&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="value" required="True"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="policies">
                        <prop type="object" name="azureADAuthenticationAsArmPolicy">
                          <prop type="string" name="status">
                            <default value="&quot;enabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="exportPolicy">
                          <prop type="string" name="status">
                            <default value="&quot;enabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="quarantinePolicy">
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="retentionPolicy">
                          <prop type="integer32" name="days">
                            <default value="7"/>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="softDeletePolicy">
                          <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                          <prop type="integer32" name="retentionDays">
                            <default value="7"/>
                          </prop>
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="trustPolicy">
                          <prop type="string" name="status">
                            <default value="&quot;disabled&quot;"/>
                            <enum>
                              <item value="&quot;disabled&quot;"/>
                              <item value="&quot;enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type">
                            <default value="&quot;Notary&quot;"/>
                            <enum>
                              <item value="&quot;Notary&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                        <item type="object">
                          <prop readOnly="True" type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"/>
                          </prop>
                          <prop readOnly="True" type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="object" name="privateEndpoint">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="object" name="privateLinkServiceConnectionState">
                              <prop type="string" name="actionsRequired">
                                <enum>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;Recreate&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="description"/>
                              <prop type="string" name="status">
                                <enum>
                                  <item value="&quot;Approved&quot;"/>
                                  <item value="&quot;Disconnected&quot;"/>
                                  <item value="&quot;Pending&quot;"/>
                                  <item value="&quot;Rejected&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Canceled&quot;"/>
                                <item value="&quot;Creating&quot;"/>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="publicNetworkAccess">
                        <default value="&quot;Enabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="object" name="status">
                        <prop readOnly="True" type="string" name="displayStatus"/>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="dateTime" name="timestamp"/>
                      </prop>
                      <prop type="string" name="zoneRedundancy">
                        <default value="&quot;Disabled&quot;"/>
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="sku" required="True">
                      <prop type="string" name="name" required="True">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Classic&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="tier">
                        <enum>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Classic&quot;"/>
                          <item value="&quot;Premium&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
