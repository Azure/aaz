{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}", "version": "2024-11-01-preview", "swagger": "mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "container-registry registry", "commands": [{"name": "show", "version": "2024-11-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}", "version": "2024-11-01-preview", "swagger": "mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.registryName", "options": ["n", "name", "registry-name"], "required": true, "idPart": "name", "help": {"short": "The name of the container registry."}, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Registries_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "registryName", "arg": "$Path.registryName", "required": true, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": false}, "type": "boolean", "name": "adminUserEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "anonymousPullEnabled"}, {"default": {"value": "Unsecure"}, "type": "string", "name": "autoGeneratedDomainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}, {"value": "Unsecure"}]}}, {"readOnly": true, "type": "dateTime", "name": "creationDate"}, {"type": "boolean", "name": "dataEndpointEnabled"}, {"readOnly": true, "type": "array<string>", "name": "dataEndpointHostNames", "item": {"type": "string"}}, {"type": "object", "name": "encryption", "props": [{"type": "object", "name": "keyVaultProperties", "props": [{"type": "string", "name": "identity"}, {"type": "string", "name": "keyIdentifier"}, {"readOnly": true, "type": "boolean", "name": "keyRotationEnabled"}, {"readOnly": true, "type": "dateTime", "name": "lastKeyRotationTimestamp"}, {"readOnly": true, "type": "string", "name": "versionedKeyIdentifier"}]}, {"type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"readOnly": true, "type": "string", "name": "loginServer"}, {"default": {"value": "Disabled"}, "type": "string", "name": "metadataSearch", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "AzureServices"}, "type": "string", "name": "networkRuleBypassOptions", "enum": {"items": [{"value": "AzureServices"}, {"value": "None"}]}}, {"type": "object", "name": "networkRuleSet", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "defaultAction", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "array<object>", "name": "ipRules", "item": {"type": "object", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "action", "enum": {"items": [{"value": "Allow"}]}}, {"type": "string", "name": "value", "required": true}]}}]}, {"type": "object", "name": "policies", "props": [{"type": "object", "name": "azureADAuthenticationAsArmPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "exportPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "quarantinePolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "retentionPolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "days"}, {"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "softDeletePolicy", "props": [{"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": 7}, "type": "integer32", "name": "retentionDays"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "trustPolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}, {"default": {"value": "Notary"}, "type": "string", "name": "type", "enum": {"items": [{"value": "Notary"}]}}]}]}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "props": [{"type": "string", "name": "actionsRequired", "enum": {"items": [{"value": "None"}, {"value": "Recreate"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Disconnected"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "@SystemData_read", "name": "systemData"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "object", "name": "status", "props": [{"readOnly": true, "type": "string", "name": "displayStatus"}, {"readOnly": true, "type": "string", "name": "message"}, {"readOnly": true, "type": "dateTime", "name": "timestamp"}]}, {"default": {"value": "Disabled"}, "type": "string", "name": "zoneRedundancy", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}], "clientFlatten": true}, {"type": "object", "name": "sku", "required": true, "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}, {"readOnly": true, "type": "string", "name": "tier", "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}], "cls": "SystemData_read"}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-11-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}", "version": "2024-11-01-preview", "swagger": "mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.registryName", "options": ["n", "name", "registry-name"], "required": true, "idPart": "name", "help": {"short": "The name of the container registry."}, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "Registries_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "registryName", "arg": "$Path.registryName", "required": true, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202], "header": {"items": [{"name": "Location"}]}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2024-11-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}", "version": "2024-11-01-preview", "swagger": "mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.registryName", "options": ["n", "name", "registry-name"], "required": true, "idPart": "name", "help": {"short": "The name of the container registry."}, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$registry.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "group": "Identity", "help": {"short": "Set the system managed identity."}}, {"type": "string", "var": "$registry.identity.type", "options": ["type"], "hide": true, "group": "Identity", "help": {"short": "The identity type."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"blank": {"value": []}, "type": "array<string>", "var": "$registry.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "Identity", "help": {"short": "Set the user managed identities."}, "item": {"type": "string"}}, {"type": "object", "var": "$registry.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "hide": true, "group": "Identity", "help": {"short": "The list of user identities associated with the resource. The user identity \r dictionary key references will be ARM resource ids in the form: \r '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."}, "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"name": "Properties", "args": [{"type": "boolean", "var": "$registry.properties.adminUserEnabled", "options": ["admin-user-enabled"], "group": "Properties", "help": {"short": "The value that indicates whether the admin user is enabled."}, "default": {"value": false}}, {"type": "boolean", "var": "$registry.properties.anonymousPullEnabled", "options": ["anonymous-pull-enabled"], "group": "Properties", "help": {"short": "Enables registry-wide pull from unauthenticated clients."}, "default": {"value": false}}, {"type": "string", "var": "$registry.properties.autoGeneratedDomainNameLabelScope", "options": ["auto-generated-domain-name-label-scope"], "group": "Properties", "help": {"short": "Determines the domain name label reuse scope."}, "default": {"value": "Unsecure"}, "enum": {"items": [{"name": "NoReuse", "value": "NoReuse"}, {"name": "ResourceGroupReuse", "value": "ResourceGroupReuse"}, {"name": "SubscriptionReuse", "value": "SubscriptionReuse"}, {"name": "TenantReuse", "value": "TenantReuse"}, {"name": "Unsecure", "value": "Unsecure"}]}}, {"type": "boolean", "var": "$registry.properties.dataEndpointEnabled", "options": ["data-endpoint-enabled"], "group": "Properties", "help": {"short": "Enable a single data endpoint per region for serving data."}}, {"type": "object", "var": "$registry.properties.encryption", "options": ["encryption"], "group": "Properties", "help": {"short": "The encryption settings of container registry."}, "args": [{"type": "object", "var": "$registry.properties.encryption.keyVaultProperties", "options": ["key-vault-properties"], "help": {"short": "Key vault properties."}, "args": [{"type": "string", "var": "$registry.properties.encryption.keyVaultProperties.identity", "options": ["identity"], "help": {"short": "The client id of the identity which will be used to access key vault."}}, {"type": "string", "var": "$registry.properties.encryption.keyVaultProperties.keyIdentifier", "options": ["key-identifier"], "help": {"short": "Key vault uri to access the encryption key."}}]}, {"type": "string", "var": "$registry.properties.encryption.status", "options": ["status"], "help": {"short": "Indicates whether or not the encryption is enabled for container registry."}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "string", "var": "$registry.properties.metadataSearch", "options": ["metadata-search"], "group": "Properties", "help": {"short": "Determines whether registry artifacts are indexed for metadata search."}, "default": {"value": "Disabled"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$registry.properties.networkRuleBypassOptions", "options": ["network-rule-bypass-options"], "group": "Properties", "help": {"short": "Whether to allow trusted Azure services to access a network restricted registry."}, "default": {"value": "AzureServices"}, "enum": {"items": [{"name": "AzureServices", "value": "AzureServices"}, {"name": "None", "value": "None"}]}}, {"type": "object", "var": "$registry.properties.networkRuleSet", "options": ["network-rule-set"], "group": "Properties", "help": {"short": "The network rule set for a container registry."}, "args": [{"type": "string", "var": "$registry.properties.networkRuleSet.defaultAction", "options": ["default-action"], "required": true, "help": {"short": "The default action of allow or deny when no other rules match."}, "default": {"value": "Allow"}, "enum": {"items": [{"name": "Allow", "value": "Allow"}, {"name": "Deny", "value": "Deny"}]}}, {"type": "array<object>", "var": "$registry.properties.networkRuleSet.ipRules", "options": ["ip-rules"], "help": {"short": "The IP ACL rules."}, "item": {"type": "object", "args": [{"type": "string", "var": "$registry.properties.networkRuleSet.ipRules[].action", "options": ["action"], "help": {"short": "The action of IP ACL rule."}, "default": {"value": "Allow"}, "enum": {"items": [{"name": "Allow", "value": "Allow"}]}}, {"type": "string", "var": "$registry.properties.networkRuleSet.ipRules[].value", "options": ["value"], "required": true, "help": {"short": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."}}]}}]}, {"type": "object", "var": "$registry.properties.policies", "options": ["policies"], "group": "Properties", "help": {"short": "The policies for a container registry."}, "args": [{"type": "object", "var": "$registry.properties.policies.azureADAuthenticationAsArmPolicy", "options": ["azure-ad-authentication-as-arm-policy"], "help": {"short": "The policy for using ARM audience token for a container registry."}, "args": [{"type": "string", "var": "$registry.properties.policies.azureADAuthenticationAsArmPolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "enabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registry.properties.policies.exportPolicy", "options": ["export-policy"], "help": {"short": "The export policy for a container registry."}, "args": [{"type": "string", "var": "$registry.properties.policies.exportPolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "enabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registry.properties.policies.quarantinePolicy", "options": ["quarantine-policy"], "help": {"short": "The quarantine policy for a container registry."}, "args": [{"type": "string", "var": "$registry.properties.policies.quarantinePolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "disabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registry.properties.policies.retentionPolicy", "options": ["retention-policy"], "help": {"short": "The retention policy for a container registry."}, "args": [{"type": "integer32", "var": "$registry.properties.policies.retentionPolicy.days", "options": ["days"], "help": {"short": "The number of days to retain an untagged manifest after which it gets purged."}, "default": {"value": 7}}, {"type": "string", "var": "$registry.properties.policies.retentionPolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "disabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registry.properties.policies.softDeletePolicy", "options": ["soft-delete-policy"], "help": {"short": "The soft delete policy for a container registry."}, "args": [{"type": "integer32", "var": "$registry.properties.policies.softDeletePolicy.retentionDays", "options": ["retention-days"], "help": {"short": "The number of days after which a soft-deleted item is permanently deleted."}, "default": {"value": 7}}, {"type": "string", "var": "$registry.properties.policies.softDeletePolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "disabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registry.properties.policies.trustPolicy", "options": ["trust-policy"], "help": {"short": "The content trust policy for a container registry."}, "args": [{"type": "string", "var": "$registry.properties.policies.trustPolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "disabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}, {"type": "string", "var": "$registry.properties.policies.trustPolicy.type", "options": ["type"], "help": {"short": "The type of trust policy."}, "default": {"value": "Notary"}, "enum": {"items": [{"name": "Notary", "value": "Notary"}]}}]}]}, {"type": "string", "var": "$registry.properties.publicNetworkAccess", "options": ["public-network-access"], "group": "Properties", "help": {"short": "Whether or not public network access is allowed for the container registry."}, "default": {"value": "Enabled"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$registry.properties.zoneRedundancy", "options": ["zone-redundancy"], "group": "Properties", "help": {"short": "Whether or not zone redundancy is enabled for this container registry"}, "default": {"value": "Disabled"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}]}, {"name": "Registry", "args": [{"type": "ResourceLocation", "var": "$registry.location", "options": ["l", "location"], "required": true, "group": "Registry", "help": {"short": "The location of the resource. This cannot be changed after the resource is created."}}, {"type": "object", "var": "$registry.sku", "options": ["sku"], "required": true, "group": "Registry", "help": {"short": "The SKU of the container registry."}, "args": [{"type": "string", "var": "$registry.sku.name", "options": ["name"], "required": true, "help": {"short": "The SKU name of the container registry. Required for registry creation."}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Classic", "value": "Classic"}, {"name": "Premium", "value": "Premium"}, {"name": "Standard", "value": "Standard"}]}}]}, {"type": "object", "var": "$registry.tags", "options": ["tags"], "group": "Registry", "help": {"short": "The tags of the resource."}, "additionalProps": {"item": {"type": "string"}}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Registries_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "registryName", "arg": "$Path.registryName", "required": true, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "registry", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$registry.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$registry.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}], "userAssigned": {"action": "create", "type": "array<string>", "name": "userAssigned", "arg": "$registry.identity.userAssigned", "item": {"action": "create", "type": "string"}}, "systemAssigned": {"action": "create", "type": "string", "name": "systemAssigned", "arg": "$registry.identity.systemAssigned"}}, {"type": "ResourceLocation", "name": "location", "arg": "$registry.location", "required": true}, {"type": "object", "name": "properties", "props": [{"default": {"value": false}, "type": "boolean", "name": "adminUserEnabled", "arg": "$registry.properties.adminUserEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "anonymousPullEnabled", "arg": "$registry.properties.anonymousPullEnabled"}, {"default": {"value": "Unsecure"}, "type": "string", "name": "autoGeneratedDomainNameLabelScope", "arg": "$registry.properties.autoGeneratedDomainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}, {"value": "Unsecure"}]}}, {"type": "boolean", "name": "dataEndpointEnabled", "arg": "$registry.properties.dataEndpointEnabled"}, {"type": "object", "name": "encryption", "arg": "$registry.properties.encryption", "props": [{"type": "object", "name": "keyVaultProperties", "arg": "$registry.properties.encryption.keyVaultProperties", "props": [{"type": "string", "name": "identity", "arg": "$registry.properties.encryption.keyVaultProperties.identity"}, {"type": "string", "name": "keyIdentifier", "arg": "$registry.properties.encryption.keyVaultProperties.keyIdentifier"}]}, {"type": "string", "name": "status", "arg": "$registry.properties.encryption.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"default": {"value": "Disabled"}, "type": "string", "name": "metadataSearch", "arg": "$registry.properties.metadataSearch", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "AzureServices"}, "type": "string", "name": "networkRuleBypassOptions", "arg": "$registry.properties.networkRuleBypassOptions", "enum": {"items": [{"value": "AzureServices"}, {"value": "None"}]}}, {"type": "object", "name": "networkRuleSet", "arg": "$registry.properties.networkRuleSet", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "defaultAction", "arg": "$registry.properties.networkRuleSet.defaultAction", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "array<object>", "name": "ipRules", "arg": "$registry.properties.networkRuleSet.ipRules", "item": {"type": "object", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "action", "arg": "$registry.properties.networkRuleSet.ipRules[].action", "enum": {"items": [{"value": "Allow"}]}}, {"type": "string", "name": "value", "arg": "$registry.properties.networkRuleSet.ipRules[].value", "required": true}]}}]}, {"type": "object", "name": "policies", "arg": "$registry.properties.policies", "props": [{"type": "object", "name": "azureADAuthenticationAsArmPolicy", "arg": "$registry.properties.policies.azureADAuthenticationAsArmPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "arg": "$registry.properties.policies.azureADAuthenticationAsArmPolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "exportPolicy", "arg": "$registry.properties.policies.exportPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "arg": "$registry.properties.policies.exportPolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "quarantinePolicy", "arg": "$registry.properties.policies.quarantinePolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "arg": "$registry.properties.policies.quarantinePolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "retentionPolicy", "arg": "$registry.properties.policies.retentionPolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "days", "arg": "$registry.properties.policies.retentionPolicy.days"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "arg": "$registry.properties.policies.retentionPolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "softDeletePolicy", "arg": "$registry.properties.policies.softDeletePolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "retentionDays", "arg": "$registry.properties.policies.softDeletePolicy.retentionDays"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "arg": "$registry.properties.policies.softDeletePolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "trustPolicy", "arg": "$registry.properties.policies.trustPolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "arg": "$registry.properties.policies.trustPolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}, {"default": {"value": "Notary"}, "type": "string", "name": "type", "arg": "$registry.properties.policies.trustPolicy.type", "enum": {"items": [{"value": "Notary"}]}}]}]}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "arg": "$registry.properties.publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "Disabled"}, "type": "string", "name": "zoneRedundancy", "arg": "$registry.properties.zoneRedundancy", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}], "clientFlatten": true}, {"type": "object", "name": "sku", "arg": "$registry.sku", "required": true, "props": [{"type": "string", "name": "name", "arg": "$registry.sku.name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "tags", "arg": "$registry.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": false}, "type": "boolean", "name": "adminUserEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "anonymousPullEnabled"}, {"default": {"value": "Unsecure"}, "type": "string", "name": "autoGeneratedDomainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}, {"value": "Unsecure"}]}}, {"readOnly": true, "type": "dateTime", "name": "creationDate"}, {"type": "boolean", "name": "dataEndpointEnabled"}, {"readOnly": true, "type": "array<string>", "name": "dataEndpointHostNames", "item": {"type": "string"}}, {"type": "object", "name": "encryption", "props": [{"type": "object", "name": "keyVaultProperties", "props": [{"type": "string", "name": "identity"}, {"type": "string", "name": "keyIdentifier"}, {"readOnly": true, "type": "boolean", "name": "keyRotationEnabled"}, {"readOnly": true, "type": "dateTime", "name": "lastKeyRotationTimestamp"}, {"readOnly": true, "type": "string", "name": "versionedKeyIdentifier"}]}, {"type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"readOnly": true, "type": "string", "name": "loginServer"}, {"default": {"value": "Disabled"}, "type": "string", "name": "metadataSearch", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "AzureServices"}, "type": "string", "name": "networkRuleBypassOptions", "enum": {"items": [{"value": "AzureServices"}, {"value": "None"}]}}, {"type": "object", "name": "networkRuleSet", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "defaultAction", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "array<object>", "name": "ipRules", "item": {"type": "object", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "action", "enum": {"items": [{"value": "Allow"}]}}, {"type": "string", "name": "value", "required": true}]}}]}, {"type": "object", "name": "policies", "props": [{"type": "object", "name": "azureADAuthenticationAsArmPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "exportPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "quarantinePolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "retentionPolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "days"}, {"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "softDeletePolicy", "props": [{"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": 7}, "type": "integer32", "name": "retentionDays"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "trustPolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}, {"default": {"value": "Notary"}, "type": "string", "name": "type", "enum": {"items": [{"value": "Notary"}]}}]}]}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "props": [{"type": "string", "name": "actionsRequired", "enum": {"items": [{"value": "None"}, {"value": "Recreate"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Disconnected"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "@SystemData_read", "name": "systemData"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "object", "name": "status", "props": [{"readOnly": true, "type": "string", "name": "displayStatus"}, {"readOnly": true, "type": "string", "name": "message"}, {"readOnly": true, "type": "dateTime", "name": "timestamp"}]}, {"default": {"value": "Disabled"}, "type": "string", "name": "zoneRedundancy", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}], "clientFlatten": true}, {"type": "object", "name": "sku", "required": true, "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}, {"readOnly": true, "type": "string", "name": "tier", "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}], "cls": "SystemData_read"}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2024-11-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}", "version": "2024-11-01-preview", "swagger": "mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.registryName", "options": ["n", "name", "registry-name"], "required": true, "idPart": "name", "help": {"short": "The name of the container registry."}, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$registryUpdateParameters.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "group": "Identity", "help": {"short": "Set the system managed identity."}}, {"type": "string", "var": "$registryUpdateParameters.identity.type", "options": ["type"], "hide": true, "group": "Identity", "help": {"short": "The identity type."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"blank": {"value": []}, "type": "array<string>", "var": "$registryUpdateParameters.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "Identity", "help": {"short": "Set the user managed identities."}, "item": {"type": "string"}}, {"type": "object", "var": "$registryUpdateParameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "hide": true, "group": "Identity", "help": {"short": "The list of user identities associated with the resource. The user identity \r dictionary key references will be ARM resource ids in the form: \r '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."}, "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"name": "Properties", "args": [{"type": "boolean", "var": "$registryUpdateParameters.properties.adminUserEnabled", "options": ["admin-user-enabled"], "group": "Properties", "help": {"short": "The value that indicates whether the admin user is enabled."}}, {"type": "boolean", "var": "$registryUpdateParameters.properties.anonymousPullEnabled", "options": ["anonymous-pull-enabled"], "group": "Properties", "help": {"short": "Enables registry-wide pull from unauthenticated clients."}}, {"type": "boolean", "var": "$registryUpdateParameters.properties.dataEndpointEnabled", "options": ["data-endpoint-enabled"], "group": "Properties", "help": {"short": "Enable a single data endpoint per region for serving data."}}, {"type": "object", "var": "$registryUpdateParameters.properties.encryption", "options": ["encryption"], "group": "Properties", "help": {"short": "The encryption settings of container registry."}, "args": [{"type": "object", "var": "$registryUpdateParameters.properties.encryption.keyVaultProperties", "options": ["key-vault-properties"], "help": {"short": "Key vault properties."}, "args": [{"type": "string", "var": "$registryUpdateParameters.properties.encryption.keyVaultProperties.identity", "options": ["identity"], "help": {"short": "The client id of the identity which will be used to access key vault."}}, {"type": "string", "var": "$registryUpdateParameters.properties.encryption.keyVaultProperties.keyIdentifier", "options": ["key-identifier"], "help": {"short": "Key vault uri to access the encryption key."}}]}, {"type": "string", "var": "$registryUpdateParameters.properties.encryption.status", "options": ["status"], "help": {"short": "Indicates whether or not the encryption is enabled for container registry."}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "string", "var": "$registryUpdateParameters.properties.metadataSearch", "options": ["metadata-search"], "group": "Properties", "help": {"short": "Determines whether registry artifacts are indexed for metadata search."}, "default": {"value": "Disabled"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$registryUpdateParameters.properties.networkRuleBypassOptions", "options": ["network-rule-bypass-options"], "group": "Properties", "help": {"short": "Whether to allow trusted Azure services to access a network restricted registry."}, "default": {"value": "AzureServices"}, "enum": {"items": [{"name": "AzureServices", "value": "AzureServices"}, {"name": "None", "value": "None"}]}}, {"type": "object", "var": "$registryUpdateParameters.properties.networkRuleSet", "options": ["network-rule-set"], "group": "Properties", "help": {"short": "The network rule set for a container registry."}, "args": [{"type": "string", "var": "$registryUpdateParameters.properties.networkRuleSet.defaultAction", "options": ["default-action"], "required": true, "help": {"short": "The default action of allow or deny when no other rules match."}, "default": {"value": "Allow"}, "enum": {"items": [{"name": "Allow", "value": "Allow"}, {"name": "Deny", "value": "Deny"}]}}, {"type": "array<object>", "var": "$registryUpdateParameters.properties.networkRuleSet.ipRules", "options": ["ip-rules"], "help": {"short": "The IP ACL rules."}, "item": {"type": "object", "args": [{"type": "string", "var": "$registryUpdateParameters.properties.networkRuleSet.ipRules[].action", "options": ["action"], "help": {"short": "The action of IP ACL rule."}, "default": {"value": "Allow"}, "enum": {"items": [{"name": "Allow", "value": "Allow"}]}}, {"type": "string", "var": "$registryUpdateParameters.properties.networkRuleSet.ipRules[].value", "options": ["value"], "required": true, "help": {"short": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."}}]}}]}, {"type": "object", "var": "$registryUpdateParameters.properties.policies", "options": ["policies"], "group": "Properties", "help": {"short": "The policies for a container registry."}, "args": [{"type": "object", "var": "$registryUpdateParameters.properties.policies.azureADAuthenticationAsArmPolicy", "options": ["azure-ad-authentication-as-arm-policy"], "help": {"short": "The policy for using ARM audience token for a container registry."}, "args": [{"type": "string", "var": "$registryUpdateParameters.properties.policies.azureADAuthenticationAsArmPolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "enabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registryUpdateParameters.properties.policies.exportPolicy", "options": ["export-policy"], "help": {"short": "The export policy for a container registry."}, "args": [{"type": "string", "var": "$registryUpdateParameters.properties.policies.exportPolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "enabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registryUpdateParameters.properties.policies.quarantinePolicy", "options": ["quarantine-policy"], "help": {"short": "The quarantine policy for a container registry."}, "args": [{"type": "string", "var": "$registryUpdateParameters.properties.policies.quarantinePolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "disabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registryUpdateParameters.properties.policies.retentionPolicy", "options": ["retention-policy"], "help": {"short": "The retention policy for a container registry."}, "args": [{"type": "integer32", "var": "$registryUpdateParameters.properties.policies.retentionPolicy.days", "options": ["days"], "help": {"short": "The number of days to retain an untagged manifest after which it gets purged."}, "default": {"value": 7}}, {"type": "string", "var": "$registryUpdateParameters.properties.policies.retentionPolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "disabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registryUpdateParameters.properties.policies.softDeletePolicy", "options": ["soft-delete-policy"], "help": {"short": "The soft delete policy for a container registry."}, "args": [{"type": "integer32", "var": "$registryUpdateParameters.properties.policies.softDeletePolicy.retentionDays", "options": ["retention-days"], "help": {"short": "The number of days after which a soft-deleted item is permanently deleted."}, "default": {"value": 7}}, {"type": "string", "var": "$registryUpdateParameters.properties.policies.softDeletePolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "disabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}]}, {"type": "object", "var": "$registryUpdateParameters.properties.policies.trustPolicy", "options": ["trust-policy"], "help": {"short": "The content trust policy for a container registry."}, "args": [{"type": "string", "var": "$registryUpdateParameters.properties.policies.trustPolicy.status", "options": ["status"], "help": {"short": "The value that indicates whether the policy is enabled or not."}, "default": {"value": "disabled"}, "enum": {"items": [{"name": "disabled", "value": "disabled"}, {"name": "enabled", "value": "enabled"}]}}, {"type": "string", "var": "$registryUpdateParameters.properties.policies.trustPolicy.type", "options": ["type"], "help": {"short": "The type of trust policy."}, "default": {"value": "Notary"}, "enum": {"items": [{"name": "Notary", "value": "Notary"}]}}]}]}, {"type": "string", "var": "$registryUpdateParameters.properties.publicNetworkAccess", "options": ["public-network-access"], "group": "Properties", "help": {"short": "Whether or not public network access is allowed for the container registry."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}]}, {"name": "RegistryUpdateParameters", "args": [{"type": "object", "var": "$registryUpdateParameters.sku", "options": ["sku"], "group": "RegistryUpdateParameters", "help": {"short": "The SKU of the container registry."}, "args": [{"type": "string", "var": "$registryUpdateParameters.sku.name", "options": ["name"], "required": true, "help": {"short": "The SKU name of the container registry. Required for registry creation."}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Classic", "value": "Classic"}, {"name": "Premium", "value": "Premium"}, {"name": "Standard", "value": "Standard"}]}}]}, {"type": "object", "var": "$registryUpdateParameters.tags", "options": ["tags"], "group": "RegistryUpdateParameters", "help": {"short": "The tags for the container registry."}, "additionalProps": {"item": {"type": "string"}}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Registries_Update", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", "request": {"method": "patch", "path": {"params": [{"type": "string", "name": "registryName", "arg": "$Path.registryName", "required": true, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "registryUpdateParameters", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$registryUpdateParameters.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$registryUpdateParameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}], "userAssigned": {"action": "create", "type": "array<string>", "name": "userAssigned", "arg": "$registryUpdateParameters.identity.userAssigned", "item": {"action": "create", "type": "string"}}, "systemAssigned": {"action": "create", "type": "string", "name": "systemAssigned", "arg": "$registryUpdateParameters.identity.systemAssigned"}}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "adminUserEnabled", "arg": "$registryUpdateParameters.properties.adminUserEnabled"}, {"type": "boolean", "name": "anonymousPullEnabled", "arg": "$registryUpdateParameters.properties.anonymousPullEnabled"}, {"type": "boolean", "name": "dataEndpointEnabled", "arg": "$registryUpdateParameters.properties.dataEndpointEnabled"}, {"type": "object", "name": "encryption", "arg": "$registryUpdateParameters.properties.encryption", "props": [{"type": "object", "name": "keyVaultProperties", "arg": "$registryUpdateParameters.properties.encryption.keyVaultProperties", "props": [{"type": "string", "name": "identity", "arg": "$registryUpdateParameters.properties.encryption.keyVaultProperties.identity"}, {"type": "string", "name": "keyIdentifier", "arg": "$registryUpdateParameters.properties.encryption.keyVaultProperties.keyIdentifier"}]}, {"type": "string", "name": "status", "arg": "$registryUpdateParameters.properties.encryption.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"default": {"value": "Disabled"}, "type": "string", "name": "metadataSearch", "arg": "$registryUpdateParameters.properties.metadataSearch", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "AzureServices"}, "type": "string", "name": "networkRuleBypassOptions", "arg": "$registryUpdateParameters.properties.networkRuleBypassOptions", "enum": {"items": [{"value": "AzureServices"}, {"value": "None"}]}}, {"type": "object", "name": "networkRuleSet", "arg": "$registryUpdateParameters.properties.networkRuleSet", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "defaultAction", "arg": "$registryUpdateParameters.properties.networkRuleSet.defaultAction", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "array<object>", "name": "ipRules", "arg": "$registryUpdateParameters.properties.networkRuleSet.ipRules", "item": {"type": "object", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "action", "arg": "$registryUpdateParameters.properties.networkRuleSet.ipRules[].action", "enum": {"items": [{"value": "Allow"}]}}, {"type": "string", "name": "value", "arg": "$registryUpdateParameters.properties.networkRuleSet.ipRules[].value", "required": true}]}}]}, {"type": "object", "name": "policies", "arg": "$registryUpdateParameters.properties.policies", "props": [{"type": "object", "name": "azureADAuthenticationAsArmPolicy", "arg": "$registryUpdateParameters.properties.policies.azureADAuthenticationAsArmPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "arg": "$registryUpdateParameters.properties.policies.azureADAuthenticationAsArmPolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "exportPolicy", "arg": "$registryUpdateParameters.properties.policies.exportPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "arg": "$registryUpdateParameters.properties.policies.exportPolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "quarantinePolicy", "arg": "$registryUpdateParameters.properties.policies.quarantinePolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "arg": "$registryUpdateParameters.properties.policies.quarantinePolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "retentionPolicy", "arg": "$registryUpdateParameters.properties.policies.retentionPolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "days", "arg": "$registryUpdateParameters.properties.policies.retentionPolicy.days"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "arg": "$registryUpdateParameters.properties.policies.retentionPolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "softDeletePolicy", "arg": "$registryUpdateParameters.properties.policies.softDeletePolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "retentionDays", "arg": "$registryUpdateParameters.properties.policies.softDeletePolicy.retentionDays"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "arg": "$registryUpdateParameters.properties.policies.softDeletePolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "trustPolicy", "arg": "$registryUpdateParameters.properties.policies.trustPolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "arg": "$registryUpdateParameters.properties.policies.trustPolicy.status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}, {"default": {"value": "Notary"}, "type": "string", "name": "type", "arg": "$registryUpdateParameters.properties.policies.trustPolicy.type", "enum": {"items": [{"value": "Notary"}]}}]}]}, {"type": "string", "name": "publicNetworkAccess", "arg": "$registryUpdateParameters.properties.publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}], "clientFlatten": true}, {"type": "object", "name": "sku", "arg": "$registryUpdateParameters.sku", "props": [{"type": "string", "name": "name", "arg": "$registryUpdateParameters.sku.name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"type": "object", "name": "tags", "arg": "$registryUpdateParameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": false}, "type": "boolean", "name": "adminUserEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "anonymousPullEnabled"}, {"default": {"value": "Unsecure"}, "type": "string", "name": "autoGeneratedDomainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}, {"value": "Unsecure"}]}}, {"readOnly": true, "type": "dateTime", "name": "creationDate"}, {"type": "boolean", "name": "dataEndpointEnabled"}, {"readOnly": true, "type": "array<string>", "name": "dataEndpointHostNames", "item": {"type": "string"}}, {"type": "object", "name": "encryption", "props": [{"type": "object", "name": "keyVaultProperties", "props": [{"type": "string", "name": "identity"}, {"type": "string", "name": "keyIdentifier"}, {"readOnly": true, "type": "boolean", "name": "keyRotationEnabled"}, {"readOnly": true, "type": "dateTime", "name": "lastKeyRotationTimestamp"}, {"readOnly": true, "type": "string", "name": "versionedKeyIdentifier"}]}, {"type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"readOnly": true, "type": "string", "name": "loginServer"}, {"default": {"value": "Disabled"}, "type": "string", "name": "metadataSearch", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "AzureServices"}, "type": "string", "name": "networkRuleBypassOptions", "enum": {"items": [{"value": "AzureServices"}, {"value": "None"}]}}, {"type": "object", "name": "networkRuleSet", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "defaultAction", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "array<object>", "name": "ipRules", "item": {"type": "object", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "action", "enum": {"items": [{"value": "Allow"}]}}, {"type": "string", "name": "value", "required": true}]}}]}, {"type": "object", "name": "policies", "props": [{"type": "object", "name": "azureADAuthenticationAsArmPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "exportPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "quarantinePolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "retentionPolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "days"}, {"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "softDeletePolicy", "props": [{"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": 7}, "type": "integer32", "name": "retentionDays"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "trustPolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}, {"default": {"value": "Notary"}, "type": "string", "name": "type", "enum": {"items": [{"value": "Notary"}]}}]}]}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "props": [{"type": "string", "name": "actionsRequired", "enum": {"items": [{"value": "None"}, {"value": "Recreate"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Disconnected"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "@SystemData_read", "name": "systemData"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "object", "name": "status", "props": [{"readOnly": true, "type": "string", "name": "displayStatus"}, {"readOnly": true, "type": "string", "name": "message"}, {"readOnly": true, "type": "dateTime", "name": "timestamp"}]}, {"default": {"value": "Disabled"}, "type": "string", "name": "zoneRedundancy", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}], "clientFlatten": true}, {"type": "object", "name": "sku", "required": true, "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}, {"readOnly": true, "type": "string", "name": "tier", "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}], "cls": "SystemData_read"}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}], "commandGroups": [{"name": "identity", "commands": [{"name": "assign", "version": "2024-11-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}", "version": "2024-11-01-preview", "subresource": "identity", "swagger": "mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.registryName", "options": ["n", "name", "registry-name"], "required": true, "idPart": "name", "help": {"short": "The name of the container registry."}, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "RegistryUpdateParameters.identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$registryUpdateParameters.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "group": "RegistryUpdateParameters.identity", "help": {"short": "Set the system managed identity."}}, {"blank": {"value": []}, "type": "array<string>", "var": "$registryUpdateParameters.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "RegistryUpdateParameters.identity", "help": {"short": "Set the user managed identities."}, "item": {"type": "string"}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "registryUpdateParameters", "prop": {"type": "object", "name": "identity"}}}, "operations": [{"operationId": "Registries_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "registryName", "arg": "$Path.registryName", "required": true, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": false}, "type": "boolean", "name": "adminUserEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "anonymousPullEnabled"}, {"default": {"value": "Unsecure"}, "type": "string", "name": "autoGeneratedDomainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}, {"value": "Unsecure"}]}}, {"readOnly": true, "type": "dateTime", "name": "creationDate"}, {"type": "boolean", "name": "dataEndpointEnabled"}, {"readOnly": true, "type": "array<string>", "name": "dataEndpointHostNames", "item": {"type": "string"}}, {"type": "object", "name": "encryption", "props": [{"type": "object", "name": "keyVaultProperties", "props": [{"type": "string", "name": "identity"}, {"type": "string", "name": "keyIdentifier"}, {"readOnly": true, "type": "boolean", "name": "keyRotationEnabled"}, {"readOnly": true, "type": "dateTime", "name": "lastKeyRotationTimestamp"}, {"readOnly": true, "type": "string", "name": "versionedKeyIdentifier"}]}, {"type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"readOnly": true, "type": "string", "name": "loginServer"}, {"default": {"value": "Disabled"}, "type": "string", "name": "metadataSearch", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "AzureServices"}, "type": "string", "name": "networkRuleBypassOptions", "enum": {"items": [{"value": "AzureServices"}, {"value": "None"}]}}, {"type": "object", "name": "networkRuleSet", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "defaultAction", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "array<object>", "name": "ipRules", "item": {"type": "object", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "action", "enum": {"items": [{"value": "Allow"}]}}, {"type": "string", "name": "value", "required": true}]}}]}, {"type": "object", "name": "policies", "props": [{"type": "object", "name": "azureADAuthenticationAsArmPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "exportPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "quarantinePolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "retentionPolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "days"}, {"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "softDeletePolicy", "props": [{"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": 7}, "type": "integer32", "name": "retentionDays"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "trustPolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}, {"default": {"value": "Notary"}, "type": "string", "name": "type", "enum": {"items": [{"value": "Notary"}]}}]}]}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "props": [{"type": "string", "name": "actionsRequired", "enum": {"items": [{"value": "None"}, {"value": "Recreate"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Disconnected"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "@SystemData_read", "name": "systemData"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "object", "name": "status", "props": [{"readOnly": true, "type": "string", "name": "displayStatus"}, {"readOnly": true, "type": "string", "name": "message"}, {"readOnly": true, "type": "dateTime", "name": "timestamp"}]}, {"default": {"value": "Disabled"}, "type": "string", "name": "zoneRedundancy", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}], "clientFlatten": true}, {"type": "object", "name": "sku", "required": true, "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}, {"readOnly": true, "type": "string", "name": "tier", "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}], "cls": "SystemData_read"}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Registry_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Subresource", "json": {"schema": {"action": "assign", "type": "IdentityObject", "name": "registryUpdateParameters.identity", "required": true, "userAssigned": {"action": "assign", "type": "array<string>", "name": "userAssigned", "arg": "$registryUpdateParameters.identity.userAssigned", "item": {"action": "assign", "type": "string"}}, "systemAssigned": {"action": "assign", "type": "string", "name": "systemAssigned", "arg": "$registryUpdateParameters.identity.systemAssigned"}}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Registries_Update", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", "request": {"method": "patch", "path": {"params": [{"type": "string", "name": "registryName", "arg": "$Path.registryName", "required": true, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance", "schema": {"type": "object", "name": "registryUpdateParameters", "required": true, "props": [{"type": "IdentityObject", "name": "identity"}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@Registry_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}]}, {"name": "remove", "version": "2024-11-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}", "version": "2024-11-01-preview", "subresource": "identity", "swagger": "mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.registryName", "options": ["n", "name", "registry-name"], "required": true, "idPart": "name", "help": {"short": "The name of the container registry."}, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "RegistryUpdateParameters.identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$registryUpdateParameters.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "group": "RegistryUpdateParameters.identity", "help": {"short": "Set the system managed identity."}}, {"blank": {"value": []}, "type": "array<string>", "var": "$registryUpdateParameters.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "RegistryUpdateParameters.identity", "help": {"short": "Set the user managed identities."}, "item": {"type": "string"}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "registryUpdateParameters", "prop": {"type": "object", "name": "identity"}}}, "operations": [{"operationId": "Registries_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "registryName", "arg": "$Path.registryName", "required": true, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": false}, "type": "boolean", "name": "adminUserEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "anonymousPullEnabled"}, {"default": {"value": "Unsecure"}, "type": "string", "name": "autoGeneratedDomainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}, {"value": "Unsecure"}]}}, {"readOnly": true, "type": "dateTime", "name": "creationDate"}, {"type": "boolean", "name": "dataEndpointEnabled"}, {"readOnly": true, "type": "array<string>", "name": "dataEndpointHostNames", "item": {"type": "string"}}, {"type": "object", "name": "encryption", "props": [{"type": "object", "name": "keyVaultProperties", "props": [{"type": "string", "name": "identity"}, {"type": "string", "name": "keyIdentifier"}, {"readOnly": true, "type": "boolean", "name": "keyRotationEnabled"}, {"readOnly": true, "type": "dateTime", "name": "lastKeyRotationTimestamp"}, {"readOnly": true, "type": "string", "name": "versionedKeyIdentifier"}]}, {"type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"readOnly": true, "type": "string", "name": "loginServer"}, {"default": {"value": "Disabled"}, "type": "string", "name": "metadataSearch", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "AzureServices"}, "type": "string", "name": "networkRuleBypassOptions", "enum": {"items": [{"value": "AzureServices"}, {"value": "None"}]}}, {"type": "object", "name": "networkRuleSet", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "defaultAction", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "array<object>", "name": "ipRules", "item": {"type": "object", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "action", "enum": {"items": [{"value": "Allow"}]}}, {"type": "string", "name": "value", "required": true}]}}]}, {"type": "object", "name": "policies", "props": [{"type": "object", "name": "azureADAuthenticationAsArmPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "exportPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "quarantinePolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "retentionPolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "days"}, {"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "softDeletePolicy", "props": [{"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": 7}, "type": "integer32", "name": "retentionDays"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "trustPolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}, {"default": {"value": "Notary"}, "type": "string", "name": "type", "enum": {"items": [{"value": "Notary"}]}}]}]}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "props": [{"type": "string", "name": "actionsRequired", "enum": {"items": [{"value": "None"}, {"value": "Recreate"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Disconnected"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "@SystemData_read", "name": "systemData"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "object", "name": "status", "props": [{"readOnly": true, "type": "string", "name": "displayStatus"}, {"readOnly": true, "type": "string", "name": "message"}, {"readOnly": true, "type": "dateTime", "name": "timestamp"}]}, {"default": {"value": "Disabled"}, "type": "string", "name": "zoneRedundancy", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}], "clientFlatten": true}, {"type": "object", "name": "sku", "required": true, "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}, {"readOnly": true, "type": "string", "name": "tier", "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}], "cls": "SystemData_read"}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Registry_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Subresource", "json": {"schema": {"action": "remove", "type": "IdentityObject", "name": "registryUpdateParameters.identity", "required": true, "userAssigned": {"action": "remove", "type": "array<string>", "name": "userAssigned", "arg": "$registryUpdateParameters.identity.userAssigned", "item": {"action": "remove", "type": "string"}}, "systemAssigned": {"action": "remove", "type": "string", "name": "systemAssigned", "arg": "$registryUpdateParameters.identity.systemAssigned"}}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Registries_Update", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", "request": {"method": "patch", "path": {"params": [{"type": "string", "name": "registryName", "arg": "$Path.registryName", "required": true, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance", "schema": {"type": "object", "name": "registryUpdateParameters", "required": true, "props": [{"type": "IdentityObject", "name": "identity"}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@Registry_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}]}, {"name": "show", "version": "2024-11-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}", "version": "2024-11-01-preview", "subresource": "identity", "swagger": "mgmt-plane/containerregistry/ResourceProviders/Microsoft.ContainerRegistry/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29udGFpbmVyUmVnaXN0cnkvcmVnaXN0cmllcy97cmVnaXN0cnlOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.registryName", "options": ["n", "name", "registry-name"], "required": true, "idPart": "name", "help": {"short": "The name of the container registry."}, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "registryUpdateParameters", "prop": {"type": "object", "name": "identity"}}}, "operations": [{"operationId": "Registries_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "registryName", "arg": "$Path.registryName", "required": true, "format": {"pattern": "^[a-zA-Z0-9]*$", "maxLength": 50, "minLength": 5}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"default": {"value": false}, "type": "boolean", "name": "adminUserEnabled"}, {"default": {"value": false}, "type": "boolean", "name": "anonymousPullEnabled"}, {"default": {"value": "Unsecure"}, "type": "string", "name": "autoGeneratedDomainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}, {"value": "Unsecure"}]}}, {"readOnly": true, "type": "dateTime", "name": "creationDate"}, {"type": "boolean", "name": "dataEndpointEnabled"}, {"readOnly": true, "type": "array<string>", "name": "dataEndpointHostNames", "item": {"type": "string"}}, {"type": "object", "name": "encryption", "props": [{"type": "object", "name": "keyVaultProperties", "props": [{"type": "string", "name": "identity"}, {"type": "string", "name": "keyIdentifier"}, {"readOnly": true, "type": "boolean", "name": "keyRotationEnabled"}, {"readOnly": true, "type": "dateTime", "name": "lastKeyRotationTimestamp"}, {"readOnly": true, "type": "string", "name": "versionedKeyIdentifier"}]}, {"type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"readOnly": true, "type": "string", "name": "loginServer"}, {"default": {"value": "Disabled"}, "type": "string", "name": "metadataSearch", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"default": {"value": "AzureServices"}, "type": "string", "name": "networkRuleBypassOptions", "enum": {"items": [{"value": "AzureServices"}, {"value": "None"}]}}, {"type": "object", "name": "networkRuleSet", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "defaultAction", "required": true, "enum": {"items": [{"value": "Allow"}, {"value": "Deny"}]}}, {"type": "array<object>", "name": "ipRules", "item": {"type": "object", "props": [{"default": {"value": "Allow"}, "type": "string", "name": "action", "enum": {"items": [{"value": "Allow"}]}}, {"type": "string", "name": "value", "required": true}]}}]}, {"type": "object", "name": "policies", "props": [{"type": "object", "name": "azureADAuthenticationAsArmPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "exportPolicy", "props": [{"default": {"value": "enabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "quarantinePolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "retentionPolicy", "props": [{"default": {"value": 7}, "type": "integer32", "name": "days"}, {"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "softDeletePolicy", "props": [{"readOnly": true, "type": "dateTime", "name": "lastUpdatedTime"}, {"default": {"value": 7}, "type": "integer32", "name": "retentionDays"}, {"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}]}, {"type": "object", "name": "trustPolicy", "props": [{"default": {"value": "disabled"}, "type": "string", "name": "status", "enum": {"items": [{"value": "disabled"}, {"value": "enabled"}]}}, {"default": {"value": "Notary"}, "type": "string", "name": "type", "enum": {"items": [{"value": "Notary"}]}}]}]}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "props": [{"type": "string", "name": "actionsRequired", "enum": {"items": [{"value": "None"}, {"value": "Recreate"}]}}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Disconnected"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "@SystemData_read", "name": "systemData"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"readOnly": true, "type": "object", "name": "status", "props": [{"readOnly": true, "type": "string", "name": "displayStatus"}, {"readOnly": true, "type": "string", "name": "message"}, {"readOnly": true, "type": "dateTime", "name": "timestamp"}]}, {"default": {"value": "Disabled"}, "type": "string", "name": "zoneRedundancy", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}], "clientFlatten": true}, {"type": "object", "name": "sku", "required": true, "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}, {"readOnly": true, "type": "string", "name": "tier", "enum": {"items": [{"value": "Basic"}, {"value": "Classic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}], "cls": "SystemData_read"}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Registry_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}]}]}]}]}