<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
  <commandGroup name="providerhub provider-registration">
    <command name="show" version="2024-04-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace name n" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ProviderRegistrations_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}">
          <request method="get">
            <path>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.ProviderHub/providerRegistrations/{}"/>
                  </prop>
                  <prop type="string" name="kind">
                    <default value="&quot;Managed&quot;"/>
                    <enum>
                      <item value="&quot;Direct&quot;"/>
                      <item value="&quot;Hybrid&quot;"/>
                      <item value="&quot;Managed&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="capabilities" identifiers="quotaId">
                      <item type="object">
                        <prop type="string" name="effect" required="True">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                            <item value="&quot;Disallow&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="quotaId" required="True"/>
                        <prop type="array<string>" name="requiredFeatures">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="crossTenantTokenValidation">
                      <enum>
                        <item value="&quot;EnsureSecureValidation&quot;"/>
                        <item value="&quot;PassthroughInsecureToken&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="customManifestVersion"/>
                    <prop type="object" name="dstsConfiguration">
                      <prop type="string" name="serviceDnsName"/>
                      <prop type="string" name="serviceName" required="True"/>
                    </prop>
                    <prop nullable="True" type="boolean" name="enableTenantLinkedNotification"/>
                    <prop type="object" name="featuresRule">
                      <prop type="string" name="requiredFeaturesPolicy" required="True">
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Any&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="globalNotificationEndpoints">
                      <item type="object" cls="ResourceProviderEndpoint_read">
                        <prop type="array<string>" name="apiVersions">
                          <item type="string"/>
                        </prop>
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="endpointType">
                          <enum>
                            <item value="&quot;Canary&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Production&quot;"/>
                            <item value="&quot;TestInProduction&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="endpointUri"/>
                        <prop type="object" name="featuresRule">
                          <prop type="string" name="requiredFeaturesPolicy" required="True">
                            <enum>
                              <item value="&quot;All&quot;"/>
                              <item value="&quot;Any&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="array<string>" name="locations">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="requiredFeatures">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="skuLink"/>
                        <prop type="duration" name="timeout"/>
                      </item>
                    </prop>
                    <prop type="string" name="legacyNamespace"/>
                    <prop type="array<string>" name="legacyRegistrations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="linkedNotificationRules">
                      <item type="object">
                        <prop type="array<string>" name="actions">
                          <item type="string"/>
                        </prop>
                        <prop type="object" name="dstsConfiguration">
                          <prop type="string" name="serviceDnsName"/>
                          <prop type="string" name="serviceName" required="True"/>
                        </prop>
                        <prop type="array<@ResourceProviderEndpoint_read>" name="endpoints">
                          <item type="@ResourceProviderEndpoint_read"/>
                        </prop>
                        <prop type="object" name="tokenAuthConfiguration" cls="TokenAuthConfiguration_read">
                          <prop type="string" name="authenticationScheme">
                            <enum>
                              <item value="&quot;Bearer&quot;"/>
                              <item value="&quot;PoP&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="disableCertificateAuthenticationFallback"/>
                          <prop type="string" name="signedRequestScope">
                            <enum>
                              <item value="&quot;Endpoint&quot;"/>
                              <item value="&quot;ResourceUri&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="management">
                      <prop type="array<string>" name="authorizationOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="canaryManifestOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="errorResponseMessageOptions">
                        <prop type="string" name="serverFailureResponseMessageType">
                          <enum>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;OutageReporting&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="expeditedRolloutMetadata">
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="expeditedRolloutIntent">
                          <enum>
                            <item value="&quot;Hotfix&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="expeditedRolloutSubmitters">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="incidentContactEmail"/>
                      <prop type="string" name="incidentRoutingService"/>
                      <prop type="string" name="incidentRoutingTeam"/>
                      <prop type="array<string>" name="manifestOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="pcCode"/>
                      <prop type="string" name="profitCenterProgramId"/>
                      <prop type="string" name="resourceAccessPolicy">
                        <enum>
                          <item value="&quot;AcisActionAllowed&quot;"/>
                          <item value="&quot;AcisReadAllowed&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="resourceAccessRoles">
                        <item type="object">
                          <prop type="array<string>" name="actions">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="allowedGroupClaims">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<string>" name="schemaOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="array<object>" name="serviceTreeInfos">
                        <item type="object">
                          <prop type="string" name="componentId"/>
                          <prop type="string" name="readiness">
                            <enum>
                              <item value="&quot;ClosingDown&quot;"/>
                              <item value="&quot;Deprecated&quot;"/>
                              <item value="&quot;GA&quot;"/>
                              <item value="&quot;InDevelopment&quot;"/>
                              <item value="&quot;InternalOnly&quot;"/>
                              <item value="&quot;PrivatePreview&quot;"/>
                              <item value="&quot;PublicPreview&quot;"/>
                              <item value="&quot;RemovedFromARM&quot;"/>
                              <item value="&quot;Retired&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="serviceId"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<@ResourceProviderEndpoint_read>" name="managementGroupGlobalNotificationEndpoints">
                      <item type="@ResourceProviderEndpoint_read"/>
                    </prop>
                    <prop type="object" name="metadata">
                      <additionalProp anyType="True"/>
                    </prop>
                    <prop type="string" name="namespace"/>
                    <prop type="string" name="notificationOptions">
                      <enum>
                        <item value="&quot;EmitSpendingLimit&quot;"/>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="notificationSettings">
                      <prop type="array<object>" name="subscriberSettings">
                        <item type="object">
                          <prop type="array<object>" name="filterRules">
                            <item type="object">
                              <prop type="array<object>" name="endpointInformation">
                                <item type="object">
                                  <prop type="string" name="endpoint"/>
                                  <prop type="string" name="endpointType">
                                    <enum>
                                      <item value="&quot;Eventhub&quot;"/>
                                      <item value="&quot;Webhook&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="schemaVersion"/>
                                </item>
                              </prop>
                              <prop type="string" name="filterQuery"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="notifications">
                      <item type="object">
                        <prop type="string" name="notificationType">
                          <enum>
                            <item value="&quot;SubscriptionNotification&quot;"/>
                            <item value="&quot;Unspecified&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="skipNotifications">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Unspecified&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<string>" name="optionalFeatures">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="privateResourceProviderConfiguration">
                      <prop type="array<string>" name="allowedSubscriptions">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="providerAuthentication">
                      <prop type="array<string>" name="allowedAudiences" required="True">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="providerAuthorizations">
                      <item type="object" cls="ResourceProviderAuthorization_read">
                        <prop type="array<object>" name="allowedThirdPartyExtensions" identifiers="name">
                          <item type="object">
                            <prop type="string" name="name"/>
                          </item>
                        </prop>
                        <prop type="string" name="applicationId"/>
                        <prop type="string" name="groupingTag"/>
                        <prop type="object" name="managedByAuthorization">
                          <prop type="array<object>" name="additionalAuthorizations" identifiers="roleDefinitionId applicationId">
                            <item type="object">
                              <prop type="string" name="applicationId"/>
                              <prop type="string" name="roleDefinitionId"/>
                            </item>
                          </prop>
                          <prop type="boolean" name="allowManagedByInheritance"/>
                          <prop type="string" name="managedByResourceRoleDefinitionId"/>
                        </prop>
                        <prop type="string" name="managedByRoleDefinitionId"/>
                        <prop type="string" name="roleDefinitionId"/>
                      </item>
                    </prop>
                    <prop type="object" name="providerHubMetadata">
                      <prop type="string" name="directRpRoleDefinitionId"/>
                      <prop type="string" name="globalAsyncOperationResourceTypeName"/>
                      <prop type="object" name="providerAuthentication">
                        <prop type="array<string>" name="allowedAudiences" required="True">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<@ResourceProviderAuthorization_read>" name="providerAuthorizations">
                        <item type="@ResourceProviderAuthorization_read"/>
                      </prop>
                      <prop type="string" name="regionalAsyncOperationResourceTypeName"/>
                      <prop type="object" name="thirdPartyProviderAuthorization">
                        <prop type="array<object>" name="authorizations">
                          <item type="object">
                            <prop type="string" name="principalId" required="True"/>
                            <prop type="string" name="roleDefinitionId" required="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="managedByTenantId"/>
                      </prop>
                    </prop>
                    <prop type="string" name="providerType">
                      <enum>
                        <item value="&quot;AuthorizationFree&quot;"/>
                        <item value="&quot;External&quot;"/>
                        <item value="&quot;Hidden&quot;"/>
                        <item value="&quot;Internal&quot;"/>
                        <item value="&quot;LegacyRegistrationRequired&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RegistrationFree&quot;"/>
                        <item value="&quot;TenantOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="providerVersion"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="requestHeaderOptions">
                      <prop type="string" name="optInHeaders">
                        <enum>
                          <item value="&quot;ClientGroupMembership&quot;"/>
                          <item value="&quot;ClientPrincipalNameEncoded&quot;"/>
                          <item value="&quot;MSIResourceIdEncoded&quot;"/>
                          <item value="&quot;ManagementGroupAncestorsEncoded&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;PrivateLinkId&quot;"/>
                          <item value="&quot;PrivateLinkResourceId&quot;"/>
                          <item value="&quot;PrivateLinkVnetTrafficTag&quot;"/>
                          <item value="&quot;ResourceGroupLocation&quot;"/>
                          <item value="&quot;SignedAuxiliaryTokens&quot;"/>
                          <item value="&quot;SignedUserToken&quot;"/>
                          <item value="&quot;UnboundedClientGroupMembership&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="optOutHeaders">
                        <enum>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;SystemDataCreatedByLastModifiedBy&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="requiredFeatures">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="resourceGroupLockOptionDuringMove">
                      <prop type="string" name="blockActionVerb">
                        <enum>
                          <item value="&quot;Action&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;Read&quot;"/>
                          <item value="&quot;Unrecognized&quot;"/>
                          <item value="&quot;Write&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="resourceHydrationAccounts">
                      <item type="object">
                        <prop type="string" name="accountName"/>
                        <prop type="string" name="encryptedKey"/>
                        <prop type="integer64" name="maxChildResourceConsistencyJobLimit"/>
                        <prop type="string" name="subscriptionId"/>
                      </item>
                    </prop>
                    <prop type="object" name="resourceProviderAuthorizationRules">
                      <prop type="object" name="asyncOperationPollingRules">
                        <prop type="string" name="additionalOptions">
                          <enum>
                            <item value="&quot;ProtectedAsyncOperationPolling&quot;"/>
                            <item value="&quot;ProtectedAsyncOperationPollingAuditOnly&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="authorizationActions">
                          <item type="string"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="responseOptions">
                      <prop type="string" name="serviceClientOptionsType">
                        <enum>
                          <item value="&quot;DisableAutomaticDecompression&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="serviceName"/>
                    <prop type="array<object>" name="services">
                      <item type="object">
                        <prop type="string" name="serviceName"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Inactive&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="subscriptionLifecycleNotificationSpecifications">
                      <prop type="duration" name="softDeleteTTL"/>
                      <prop type="array<object>" name="subscriptionStateOverrideActions">
                        <item type="object">
                          <prop type="string" name="action" required="True">
                            <enum>
                              <item value="&quot;BillingCancellation&quot;"/>
                              <item value="&quot;DeleteAllResources&quot;"/>
                              <item value="&quot;NoOp&quot;"/>
                              <item value="&quot;NotDefined&quot;"/>
                              <item value="&quot;SoftDeleteAllResources&quot;"/>
                              <item value="&quot;UndoSoftDelete&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="state" required="True">
                            <enum>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Registered&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;SuspendedToDeleted&quot;"/>
                              <item value="&quot;SuspendedToRegistered&quot;"/>
                              <item value="&quot;SuspendedToUnregistered&quot;"/>
                              <item value="&quot;SuspendedToWarned&quot;"/>
                              <item value="&quot;Unregistered&quot;"/>
                              <item value="&quot;Warned&quot;"/>
                              <item value="&quot;WarnedToDeleted&quot;"/>
                              <item value="&quot;WarnedToRegistered&quot;"/>
                              <item value="&quot;WarnedToSuspended&quot;"/>
                              <item value="&quot;WarnedToUnregistered&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="templateDeploymentOptions">
                      <prop type="array<string>" name="preflightOptions">
                        <item type="string">
                          <enum>
                            <item value="&quot;ContinueDeploymentOnFailure&quot;"/>
                            <item value="&quot;DefaultValidationOnly&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="boolean" name="preflightSupported"/>
                    </prop>
                    <prop type="@TokenAuthConfiguration_read" name="tokenAuthConfiguration"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-04-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace name n" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ProviderRegistrations_Delete">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}">
          <request method="delete">
            <path>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-04-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace name n" required="True" group="" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="FeaturesRule">
        <arg type="string" var="$properties.properties.featuresRule.requiredFeaturesPolicy" options="required-features-policy req-features-policy" group="FeaturesRule">
          <help short="The accepted values are &quot;Any&quot; or &quot;All&quot;."/>
          <enum>
            <item name="All" value="&quot;All&quot;"/>
            <item name="Any" value="&quot;Any&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Management">
        <arg type="array<string>" var="$properties.properties.management.authorizationOwners" options="authorization-owners" group="Management">
          <help short="The authorization owners."/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$properties.properties.management.canaryManifestOwners" options="canary-manifest-owners" group="Management">
          <help short="List of manifest owners for canary"/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$properties.properties.management.errorResponseMessageOptions" options="error-response-message-options message-options" group="Management">
          <help short="Options for error response messages."/>
          <arg type="string" var="$properties.properties.management.errorResponseMessageOptions.serverFailureResponseMessageType" options="server-failure-response-message-type">
            <help short="Type of server failure response message."/>
            <enum>
              <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
              <item name="OutageReporting" value="&quot;OutageReporting&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$properties.properties.management.expeditedRolloutMetadata" options="expedited-rollout-metadata rollout-metadata" group="Management">
          <help short="Metadata for expedited rollout."/>
          <arg type="boolean" var="$properties.properties.management.expeditedRolloutMetadata.enabled" options="enabled">
            <help short="Expedited rollout enabled?"/>
          </arg>
          <arg type="string" var="$properties.properties.management.expeditedRolloutMetadata.expeditedRolloutIntent" options="expedited-rollout-intent">
            <help short="Expedited rollout intent."/>
            <enum>
              <item name="Hotfix" value="&quot;Hotfix&quot;"/>
              <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="array<string>" var="$properties.properties.management.expeditedRolloutSubmitters" options="expedited-rollout-submitters rollout-submitters" group="Management">
          <help short="List of expedited rollout submitters."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$properties.properties.management.incidentContactEmail" options="incident-contact-email" group="Management">
          <help short="The email address of contacts for incidents related to the RP."/>
        </arg>
        <arg type="string" var="$properties.properties.management.incidentRoutingService" options="incident-routing-service incident-service" group="Management">
          <help short="The service in IcM when creating or transferring incidents to the RP."/>
        </arg>
        <arg type="string" var="$properties.properties.management.incidentRoutingTeam" options="incident-routing-team incident-team" group="Management">
          <help short="The team in IcM when creating or transferring incidents to the RP."/>
        </arg>
        <arg type="array<string>" var="$properties.properties.management.manifestOwners" options="manifest-owners" group="Management" singularOptions="manifest-owner">
          <help short="Specifies an array of required ACIS claims to modify the resource provider's manifest content via ACIS."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$properties.properties.management.pcCode" options="pc-code" group="Management">
          <help short="The profit center code for the subscription."/>
        </arg>
        <arg type="string" var="$properties.properties.management.profitCenterProgramId" options="profit-center-program-id pc-program-id" group="Management">
          <help short="The profit center program id for the subscription."/>
        </arg>
        <arg type="string" var="$properties.properties.management.resourceAccessPolicy" options="resource-access-policy" group="Management">
          <help short="The resource access policy."/>
          <enum>
            <item name="AcisActionAllowed" value="&quot;AcisActionAllowed&quot;"/>
            <item name="AcisReadAllowed" value="&quot;AcisReadAllowed&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$properties.properties.management.resourceAccessRoles" options="resource-access-roles" group="Management">
          <help short="The resource access roles."/>
          <item type="object">
            <arg type="array<string>" var="$properties.properties.management.resourceAccessRoles[].actions" options="actions">
              <item type="string"/>
            </arg>
            <arg type="array<string>" var="$properties.properties.management.resourceAccessRoles[].allowedGroupClaims" options="allowed-group-claims">
              <item type="string"/>
            </arg>
          </item>
        </arg>
        <arg type="array<string>" var="$properties.properties.management.schemaOwners" options="schema-owners" group="Management" singularOptions="schema-owners schema-owner">
          <help short="Specifies an array of needed ACIS claims to modify the resource provider schema via ACIS."/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$properties.properties.management.serviceTreeInfos" options="service-tree-infos" group="Management" singularOptions="service-tree-infos service-tree-info">
          <help short="The ServiceTree information for the resource provider."/>
          <item type="object">
            <arg type="string" var="$properties.properties.management.serviceTreeInfos[].componentId" options="component-id"/>
            <arg type="string" var="$properties.properties.management.serviceTreeInfos[].readiness" options="readiness">
              <enum>
                <item name="ClosingDown" value="&quot;ClosingDown&quot;"/>
                <item name="Deprecated" value="&quot;Deprecated&quot;"/>
                <item name="GA" value="&quot;GA&quot;"/>
                <item name="InDevelopment" value="&quot;InDevelopment&quot;"/>
                <item name="InternalOnly" value="&quot;InternalOnly&quot;"/>
                <item name="PrivatePreview" value="&quot;PrivatePreview&quot;"/>
                <item name="PublicPreview" value="&quot;PublicPreview&quot;"/>
                <item name="RemovedFromARM" value="&quot;RemovedFromARM&quot;"/>
                <item name="Retired" value="&quot;Retired&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$properties.properties.management.serviceTreeInfos[].serviceId" options="service-id"/>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$properties.kind" options="kind" group="Properties">
          <help short="Provider registration kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type."/>
          <default value="&quot;Managed&quot;"/>
          <enum>
            <item name="Direct" value="&quot;Direct&quot;"/>
            <item name="Hybrid" value="&quot;Hybrid&quot;"/>
            <item name="Managed" value="&quot;Managed&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$properties.properties.capabilities" options="capabilities" group="Properties" singularOptions="capabilities capability">
          <help short="This allows a restrictive subscription type to have access to register and use the Resource Provider."/>
          <item type="object">
            <arg type="string" var="$properties.properties.capabilities[].effect" options="effect" required="True">
              <enum>
                <item name="Allow" value="&quot;Allow&quot;"/>
                <item name="Disallow" value="&quot;Disallow&quot;"/>
                <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$properties.properties.capabilities[].quotaId" options="quota-id" required="True"/>
            <arg type="array<string>" var="$properties.properties.capabilities[].requiredFeatures" options="required-features">
              <item type="string"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$properties.properties.crossTenantTokenValidation" options="cross-tenant-token-validation token-validation" group="Properties">
          <help short="The cross tenant token validation."/>
          <enum>
            <item name="EnsureSecureValidation" value="&quot;EnsureSecureValidation&quot;"/>
            <item name="PassthroughInsecureToken" value="&quot;PassthroughInsecureToken&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$properties.properties.customManifestVersion" options="custom-manifest-version custom-manifest-vers" group="Properties">
          <help short="Custom manifest version."/>
        </arg>
        <arg type="object" var="$properties.properties.dstsConfiguration" options="dsts-configuration" group="Properties">
          <help short="The DSTS configuration."/>
          <arg type="string" var="$properties.properties.dstsConfiguration.serviceDnsName" options="service-dns-name"/>
          <arg type="string" var="$properties.properties.dstsConfiguration.serviceName" options="service-name" required="True"/>
        </arg>
        <arg nullable="True" type="boolean" var="$properties.properties.enableTenantLinkedNotification" options="enable-tenant-linked-notification enable-linked-notif" group="Properties">
          <help short="The enable tenant linked notification."/>
        </arg>
        <arg type="array<object>" var="$properties.properties.globalNotificationEndpoints" options="global-notification-endpoints global-notif-endpoints" group="Properties">
          <help short="The global notification endpoints."/>
          <item type="object" cls="ResourceProviderEndpoint_create">
            <arg type="array<string>" var="@ResourceProviderEndpoint_create.apiVersions" options="api-versions">
              <item type="string"/>
            </arg>
            <arg type="boolean" var="@ResourceProviderEndpoint_create.enabled" options="enabled"/>
            <arg type="string" var="@ResourceProviderEndpoint_create.endpointType" options="endpoint-type">
              <enum>
                <item name="Canary" value="&quot;Canary&quot;"/>
                <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
                <item name="Production" value="&quot;Production&quot;"/>
                <item name="TestInProduction" value="&quot;TestInProduction&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="@ResourceProviderEndpoint_create.endpointUri" options="endpoint-uri"/>
            <arg type="object" var="@ResourceProviderEndpoint_create.featuresRule" options="features-rule">
              <arg type="string" var="@ResourceProviderEndpoint_create.featuresRule.requiredFeaturesPolicy" options="required-features-policy" required="True">
                <enum>
                  <item name="All" value="&quot;All&quot;"/>
                  <item name="Any" value="&quot;Any&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="array<string>" var="@ResourceProviderEndpoint_create.locations" options="locations">
              <item type="string"/>
            </arg>
            <arg type="array<string>" var="@ResourceProviderEndpoint_create.requiredFeatures" options="required-features">
              <item type="string"/>
            </arg>
            <arg type="string" var="@ResourceProviderEndpoint_create.skuLink" options="sku-link"/>
            <arg type="duration" var="@ResourceProviderEndpoint_create.timeout" options="timeout"/>
          </item>
        </arg>
        <arg type="string" var="$properties.properties.legacyNamespace" options="legacy-namespace" group="Properties">
          <help short="Legacy namespace."/>
        </arg>
        <arg type="array<string>" var="$properties.properties.legacyRegistrations" options="legacy-registrations" group="Properties">
          <help short="Legacy registrations."/>
          <item type="string"/>
        </arg>
        <arg type="array<object>" var="$properties.properties.linkedNotificationRules" options="linked-notification-rules linked-notif-rules" group="Properties">
          <help short="The linked notification rules."/>
          <item type="object">
            <arg type="array<string>" var="$properties.properties.linkedNotificationRules[].actions" options="actions">
              <item type="string"/>
            </arg>
            <arg type="object" var="$properties.properties.linkedNotificationRules[].dstsConfiguration" options="dsts-configuration">
              <arg type="string" var="$properties.properties.linkedNotificationRules[].dstsConfiguration.serviceDnsName" options="service-dns-name"/>
              <arg type="string" var="$properties.properties.linkedNotificationRules[].dstsConfiguration.serviceName" options="service-name" required="True"/>
            </arg>
            <arg type="array<@ResourceProviderEndpoint_create>" var="$properties.properties.linkedNotificationRules[].endpoints" options="endpoints">
              <item type="@ResourceProviderEndpoint_create"/>
            </arg>
            <arg type="object" var="$properties.properties.linkedNotificationRules[].tokenAuthConfiguration" options="token-auth-configuration" cls="TokenAuthConfiguration_create">
              <arg type="string" var="@TokenAuthConfiguration_create.authenticationScheme" options="authentication-scheme">
                <enum>
                  <item name="Bearer" value="&quot;Bearer&quot;"/>
                  <item name="PoP" value="&quot;PoP&quot;"/>
                </enum>
              </arg>
              <arg type="boolean" var="@TokenAuthConfiguration_create.disableCertificateAuthenticationFallback" options="disable-certificate-authentication-fallback"/>
              <arg type="string" var="@TokenAuthConfiguration_create.signedRequestScope" options="signed-request-scope">
                <enum>
                  <item name="Endpoint" value="&quot;Endpoint&quot;"/>
                  <item name="ResourceUri" value="&quot;ResourceUri&quot;"/>
                </enum>
              </arg>
            </arg>
          </item>
        </arg>
        <arg type="array<@ResourceProviderEndpoint_create>" var="$properties.properties.managementGroupGlobalNotificationEndpoints" options="management-group-global-notification-endpoints mg-notif-endpoints" group="Properties">
          <help short="Management groups global notification endpoints."/>
          <item type="@ResourceProviderEndpoint_create"/>
        </arg>
        <arg type="object" var="$properties.properties.metadata" options="metadata" group="Properties">
          <blank value="{}"/>
          <help short="The metadata."/>
          <additionalProp anyType="True"/>
        </arg>
        <arg type="string" var="$properties.properties.namespace" options="namespace" group="Properties">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="string" var="$properties.properties.notificationOptions" options="notification-options" group="Properties">
          <help short="Notification options."/>
          <enum>
            <item name="EmitSpendingLimit" value="&quot;EmitSpendingLimit&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$properties.properties.notificationSettings" options="notification-settings" group="Properties">
          <help short="Notification settings."/>
          <arg type="array<object>" var="$properties.properties.notificationSettings.subscriberSettings" options="subscriber-settings">
            <item type="object">
              <arg type="array<object>" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules" options="filter-rules">
                <item type="object">
                  <arg type="array<object>" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation" options="endpoint-information">
                    <item type="object">
                      <arg type="string" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].endpoint" options="endpoint"/>
                      <arg type="string" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].endpointType" options="endpoint-type">
                        <enum>
                          <item name="Eventhub" value="&quot;Eventhub&quot;"/>
                          <item name="Webhook" value="&quot;Webhook&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].schemaVersion" options="schema-version"/>
                    </item>
                  </arg>
                  <arg type="string" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].filterQuery" options="filter-query"/>
                </item>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="array<object>" var="$properties.properties.notifications" options="notifications" group="Properties">
          <help short="The notifications object."/>
          <item type="object">
            <arg type="string" var="$properties.properties.notifications[].notificationType" options="notification-type">
              <enum>
                <item name="SubscriptionNotification" value="&quot;SubscriptionNotification&quot;"/>
                <item name="Unspecified" value="&quot;Unspecified&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$properties.properties.notifications[].skipNotifications" options="skip-notifications">
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
                <item name="Unspecified" value="&quot;Unspecified&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="array<string>" var="$properties.properties.optionalFeatures" options="optional-features" group="Properties">
          <help short="Optional features."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$properties.properties.privateResourceProviderConfiguration" options="private-resource-provider-configuration private-rp-config" group="Properties">
          <help short="The private resource provider configuration."/>
          <arg type="array<string>" var="$properties.properties.privateResourceProviderConfiguration.allowedSubscriptions" options="allowed-subscriptions">
            <item type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$properties.properties.providerAuthentication" options="provider-authentication provider-authn" group="Properties">
          <help short="Used to set alternative audiences or resources that ARM should accept from the token while authenticating requests for the provider."/>
          <arg type="array<string>" var="$properties.properties.providerAuthentication.allowedAudiences" options="allowed-audiences" required="True">
            <item type="string"/>
          </arg>
        </arg>
        <arg type="array<object>" var="$properties.properties.providerAuthorizations" options="provider-authorizations" group="Properties" singularOptions="provider-authorizations provider-authz provider-auth">
          <help short="The resource provider authorizations."/>
          <item type="object" cls="ResourceProviderAuthorization_create">
            <arg type="array<object>" var="@ResourceProviderAuthorization_create.allowedThirdPartyExtensions" options="allowed-third-party-extensions">
              <item type="object">
                <arg type="string" var="@ResourceProviderAuthorization_create.allowedThirdPartyExtensions[].name" options="name">
                  <help short="Name of third party extension."/>
                </arg>
              </item>
            </arg>
            <arg type="string" var="@ResourceProviderAuthorization_create.applicationId" options="application-id"/>
            <arg type="string" var="@ResourceProviderAuthorization_create.groupingTag" options="grouping-tag"/>
            <arg type="object" var="@ResourceProviderAuthorization_create.managedByAuthorization" options="managed-by-authorization">
              <help short="Managed by authorization."/>
              <arg type="array<object>" var="@ResourceProviderAuthorization_create.managedByAuthorization.additionalAuthorizations" options="additional-authorizations">
                <item type="object">
                  <arg type="string" var="@ResourceProviderAuthorization_create.managedByAuthorization.additionalAuthorizations[].applicationId" options="application-id"/>
                  <arg type="string" var="@ResourceProviderAuthorization_create.managedByAuthorization.additionalAuthorizations[].roleDefinitionId" options="role-definition-id"/>
                </item>
              </arg>
              <arg type="boolean" var="@ResourceProviderAuthorization_create.managedByAuthorization.allowManagedByInheritance" options="allow-managed-by-inheritance">
                <help short="Indicates whether the managed by resource role definition ID should be inherited."/>
              </arg>
              <arg type="string" var="@ResourceProviderAuthorization_create.managedByAuthorization.managedByResourceRoleDefinitionId" options="managed-by-resource-role-definition-id">
                <help short="The managed by resource role definition ID for the application."/>
              </arg>
            </arg>
            <arg type="string" var="@ResourceProviderAuthorization_create.managedByRoleDefinitionId" options="managed-by-role-definition-id"/>
            <arg type="string" var="@ResourceProviderAuthorization_create.roleDefinitionId" options="role-definition-id"/>
          </item>
        </arg>
        <arg type="object" var="$properties.properties.providerHubMetadata" options="provider-hub-metadata" group="Properties">
          <help short="The ProviderHub metadata."/>
          <arg type="string" var="$properties.properties.providerHubMetadata.directRpRoleDefinitionId" options="direct-rp-role-definition-id"/>
          <arg type="string" var="$properties.properties.providerHubMetadata.globalAsyncOperationResourceTypeName" options="global-async-operation-resource-type-name"/>
          <arg type="object" var="$properties.properties.providerHubMetadata.providerAuthentication" options="providerhub-metadata-authentication provider-authentication metadata-authn" group="">
            <help short="The ProviderHub metadata authorizations."/>
            <arg type="array<string>" var="$properties.properties.providerHubMetadata.providerAuthentication.allowedAudiences" options="allowed-audiences" required="True">
              <item type="string"/>
            </arg>
          </arg>
          <arg type="array<@ResourceProviderAuthorization_create>" var="$properties.properties.providerHubMetadata.providerAuthorizations" options="providerhub-metadata-authorizations provider-authorizations metadata-authz" group="" singularOptions="providerhub-metadata-authorizations providerhub-metadata-authorization">
            <help short="The ProviderHub metadata authorizations."/>
            <item type="@ResourceProviderAuthorization_create"/>
          </arg>
          <arg type="string" var="$properties.properties.providerHubMetadata.regionalAsyncOperationResourceTypeName" options="regional-async-operation-resource-type-name"/>
          <arg type="array<object>" var="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations" options="lighthouse-authorizations lighthouse-auth authorizations" group="ThirdPartyProviderAuthorization">
            <help short="The lighthouse authorizations."/>
            <item type="object">
              <arg type="string" var="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations[].principalId" options="principal-id" required="True"/>
              <arg type="string" var="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations[].roleDefinitionId" options="role-definition-id" required="True"/>
            </item>
          </arg>
          <arg type="string" var="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.managedByTenantId" options="managed-by-tenant-id" group="ThirdPartyProviderAuthorization">
            <help short="The managed by tenant ID."/>
          </arg>
        </arg>
        <arg type="string" var="$properties.properties.providerType" options="provider-type" group="Properties">
          <help short="The provider type."/>
          <enum>
            <item name="AuthorizationFree" value="&quot;AuthorizationFree&quot;"/>
            <item name="External" value="&quot;External&quot;"/>
            <item name="Hidden" value="&quot;Hidden&quot;"/>
            <item name="Internal" value="&quot;Internal&quot;"/>
            <item name="LegacyRegistrationRequired" value="&quot;LegacyRegistrationRequired&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="RegistrationFree" value="&quot;RegistrationFree&quot;"/>
            <item name="TenantOnly" value="&quot;TenantOnly&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$properties.properties.providerVersion" options="provider-version" group="Properties">
          <help short="The provider version."/>
        </arg>
        <arg type="array<string>" var="$properties.properties.requiredFeatures" options="required-features" group="Properties">
          <help short="The required features."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$properties.properties.resourceGroupLockOptionDuringMove" options="resource-group-lock-option-during-move rg-lock-option" group="Properties">
          <help short="Resource group lock option during move."/>
          <arg type="string" var="$properties.properties.resourceGroupLockOptionDuringMove.blockActionVerb" options="block-action-verb">
            <help short="The action verb that will be blocked when the resource group is locked during move."/>
            <enum>
              <item name="Action" value="&quot;Action&quot;"/>
              <item name="Delete" value="&quot;Delete&quot;"/>
              <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
              <item name="Read" value="&quot;Read&quot;"/>
              <item name="Unrecognized" value="&quot;Unrecognized&quot;"/>
              <item name="Write" value="&quot;Write&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="array<object>" var="$properties.properties.resourceHydrationAccounts" options="resource-hydration-accounts resc-hydration-accts" group="Properties">
          <help short="resource hydration accounts"/>
          <item type="object">
            <arg type="string" var="$properties.properties.resourceHydrationAccounts[].accountName" options="account-name"/>
            <arg type="string" var="$properties.properties.resourceHydrationAccounts[].encryptedKey" options="encrypted-key"/>
            <arg type="integer64" var="$properties.properties.resourceHydrationAccounts[].maxChildResourceConsistencyJobLimit" options="max-child-resource-consistency-job-limit"/>
            <arg type="string" var="$properties.properties.resourceHydrationAccounts[].subscriptionId" options="subscription-id"/>
          </item>
        </arg>
        <arg type="object" var="$properties.properties.resourceProviderAuthorizationRules" options="resource-provider-authorization-rules rp-auth-rules" group="Properties">
          <help short="The resource provider authorization rules."/>
          <arg type="object" var="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules" options="async-operation-polling-rules">
            <arg type="string" var="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules.additionalOptions" options="additional-options">
              <enum>
                <item name="ProtectedAsyncOperationPolling" value="&quot;ProtectedAsyncOperationPolling&quot;"/>
                <item name="ProtectedAsyncOperationPollingAuditOnly" value="&quot;ProtectedAsyncOperationPollingAuditOnly&quot;"/>
              </enum>
            </arg>
            <arg type="array<string>" var="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules.authorizationActions" options="authorization-actions">
              <item type="string"/>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$properties.properties.responseOptions" options="response-options" group="Properties">
          <help short="Response options."/>
          <arg type="string" var="$properties.properties.responseOptions.serviceClientOptionsType" options="service-client-options-type">
            <enum>
              <item name="DisableAutomaticDecompression" value="&quot;DisableAutomaticDecompression&quot;"/>
              <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$properties.properties.serviceName" options="service-name" group="Properties">
          <help short="The service name."/>
        </arg>
        <arg type="array<object>" var="$properties.properties.services" options="services" group="Properties">
          <help short="The services."/>
          <item type="object">
            <arg type="string" var="$properties.properties.services[].serviceName" options="service-name" group="">
              <help short="The service name."/>
            </arg>
            <arg type="string" var="$properties.properties.services[].status" options="status">
              <enum>
                <item name="Active" value="&quot;Active&quot;"/>
                <item name="Inactive" value="&quot;Inactive&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$properties.properties.templateDeploymentOptions" options="template-deployment-options tmplt-deploy-opt" group="Properties">
          <help short="The template deployment options."/>
          <arg type="array<string>" var="$properties.properties.templateDeploymentOptions.preflightOptions" options="preflight-options">
            <item type="string">
              <enum>
                <item name="ContinueDeploymentOnFailure" value="&quot;ContinueDeploymentOnFailure&quot;"/>
                <item name="DefaultValidationOnly" value="&quot;DefaultValidationOnly&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
              </enum>
            </item>
          </arg>
          <arg type="boolean" var="$properties.properties.templateDeploymentOptions.preflightSupported" options="preflight-supported"/>
        </arg>
        <arg type="@TokenAuthConfiguration_create" var="$properties.properties.tokenAuthConfiguration" options="token-auth-configuration token-auth-config" group="Properties">
          <help short="The token auth configuration."/>
        </arg>
      </argGroup>
      <argGroup name="RequestHeaderOptions">
        <arg type="string" var="$properties.properties.requestHeaderOptions.optInHeaders" options="opt-in-headers" group="RequestHeaderOptions">
          <help short="The opt-in headers."/>
          <enum>
            <item name="ClientGroupMembership" value="&quot;ClientGroupMembership&quot;"/>
            <item name="ClientPrincipalNameEncoded" value="&quot;ClientPrincipalNameEncoded&quot;"/>
            <item name="MSIResourceIdEncoded" value="&quot;MSIResourceIdEncoded&quot;"/>
            <item name="ManagementGroupAncestorsEncoded" value="&quot;ManagementGroupAncestorsEncoded&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="PrivateLinkId" value="&quot;PrivateLinkId&quot;"/>
            <item name="PrivateLinkResourceId" value="&quot;PrivateLinkResourceId&quot;"/>
            <item name="PrivateLinkVnetTrafficTag" value="&quot;PrivateLinkVnetTrafficTag&quot;"/>
            <item name="ResourceGroupLocation" value="&quot;ResourceGroupLocation&quot;"/>
            <item name="SignedAuxiliaryTokens" value="&quot;SignedAuxiliaryTokens&quot;"/>
            <item name="SignedUserToken" value="&quot;SignedUserToken&quot;"/>
            <item name="UnboundedClientGroupMembership" value="&quot;UnboundedClientGroupMembership&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$properties.properties.requestHeaderOptions.optOutHeaders" options="opt-out-headers" group="RequestHeaderOptions">
          <help short="The opt-out headers."/>
          <enum>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="SystemDataCreatedByLastModifiedBy" value="&quot;SystemDataCreatedByLastModifiedBy&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="SubscriptionLifecycleNotificationSpecifications">
        <arg type="duration" var="$properties.properties.subscriptionLifecycleNotificationSpecifications.softDeleteTTL" options="soft-delete-ttl" group="SubscriptionLifecycleNotificationSpecifications">
          <help short="The soft delete time to live."/>
        </arg>
        <arg type="array<object>" var="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions" options="subscription-state-override-actions override-actions" group="SubscriptionLifecycleNotificationSpecifications">
          <help short="The subscription state override actions."/>
          <item type="object">
            <arg type="string" var="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions[].action" options="action" required="True">
              <enum>
                <item name="BillingCancellation" value="&quot;BillingCancellation&quot;"/>
                <item name="DeleteAllResources" value="&quot;DeleteAllResources&quot;"/>
                <item name="NoOp" value="&quot;NoOp&quot;"/>
                <item name="NotDefined" value="&quot;NotDefined&quot;"/>
                <item name="SoftDeleteAllResources" value="&quot;SoftDeleteAllResources&quot;"/>
                <item name="UndoSoftDelete" value="&quot;UndoSoftDelete&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions[].state" options="state" required="True">
              <enum>
                <item name="Deleted" value="&quot;Deleted&quot;"/>
                <item name="Registered" value="&quot;Registered&quot;"/>
                <item name="Suspended" value="&quot;Suspended&quot;"/>
                <item name="SuspendedToDeleted" value="&quot;SuspendedToDeleted&quot;"/>
                <item name="SuspendedToRegistered" value="&quot;SuspendedToRegistered&quot;"/>
                <item name="SuspendedToUnregistered" value="&quot;SuspendedToUnregistered&quot;"/>
                <item name="SuspendedToWarned" value="&quot;SuspendedToWarned&quot;"/>
                <item name="Unregistered" value="&quot;Unregistered&quot;"/>
                <item name="Warned" value="&quot;Warned&quot;"/>
                <item name="WarnedToDeleted" value="&quot;WarnedToDeleted&quot;"/>
                <item name="WarnedToRegistered" value="&quot;WarnedToRegistered&quot;"/>
                <item name="WarnedToSuspended" value="&quot;WarnedToSuspended&quot;"/>
                <item name="WarnedToUnregistered" value="&quot;WarnedToUnregistered&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ProviderRegistrations_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}">
          <request method="put">
            <path>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="string" name="kind" arg="$properties.kind">
                    <default value="&quot;Managed&quot;"/>
                    <enum>
                      <item value="&quot;Direct&quot;"/>
                      <item value="&quot;Hybrid&quot;"/>
                      <item value="&quot;Managed&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="capabilities" arg="$properties.properties.capabilities" identifiers="quotaId">
                      <item type="object">
                        <prop type="string" name="effect" arg="$properties.properties.capabilities[].effect" required="True">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                            <item value="&quot;Disallow&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="quotaId" arg="$properties.properties.capabilities[].quotaId" required="True"/>
                        <prop type="array<string>" name="requiredFeatures" arg="$properties.properties.capabilities[].requiredFeatures">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="crossTenantTokenValidation" arg="$properties.properties.crossTenantTokenValidation">
                      <enum>
                        <item value="&quot;EnsureSecureValidation&quot;"/>
                        <item value="&quot;PassthroughInsecureToken&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="customManifestVersion" arg="$properties.properties.customManifestVersion"/>
                    <prop type="object" name="dstsConfiguration" arg="$properties.properties.dstsConfiguration">
                      <prop type="string" name="serviceDnsName" arg="$properties.properties.dstsConfiguration.serviceDnsName"/>
                      <prop type="string" name="serviceName" arg="$properties.properties.dstsConfiguration.serviceName" required="True"/>
                    </prop>
                    <prop nullable="True" type="boolean" name="enableTenantLinkedNotification" arg="$properties.properties.enableTenantLinkedNotification"/>
                    <prop type="object" name="featuresRule">
                      <prop type="string" name="requiredFeaturesPolicy" arg="$properties.properties.featuresRule.requiredFeaturesPolicy" required="True">
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Any&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="globalNotificationEndpoints" arg="$properties.properties.globalNotificationEndpoints">
                      <item type="object" cls="ResourceProviderEndpoint_create">
                        <prop type="array<string>" name="apiVersions" arg="@ResourceProviderEndpoint_create.apiVersions">
                          <item type="string"/>
                        </prop>
                        <prop type="boolean" name="enabled" arg="@ResourceProviderEndpoint_create.enabled"/>
                        <prop type="string" name="endpointType" arg="@ResourceProviderEndpoint_create.endpointType">
                          <enum>
                            <item value="&quot;Canary&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Production&quot;"/>
                            <item value="&quot;TestInProduction&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="endpointUri" arg="@ResourceProviderEndpoint_create.endpointUri"/>
                        <prop type="object" name="featuresRule" arg="@ResourceProviderEndpoint_create.featuresRule">
                          <prop type="string" name="requiredFeaturesPolicy" arg="@ResourceProviderEndpoint_create.featuresRule.requiredFeaturesPolicy" required="True">
                            <enum>
                              <item value="&quot;All&quot;"/>
                              <item value="&quot;Any&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="array<string>" name="locations" arg="@ResourceProviderEndpoint_create.locations">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="requiredFeatures" arg="@ResourceProviderEndpoint_create.requiredFeatures">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="skuLink" arg="@ResourceProviderEndpoint_create.skuLink"/>
                        <prop type="duration" name="timeout" arg="@ResourceProviderEndpoint_create.timeout"/>
                      </item>
                    </prop>
                    <prop type="string" name="legacyNamespace" arg="$properties.properties.legacyNamespace"/>
                    <prop type="array<string>" name="legacyRegistrations" arg="$properties.properties.legacyRegistrations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="linkedNotificationRules" arg="$properties.properties.linkedNotificationRules">
                      <item type="object">
                        <prop type="array<string>" name="actions" arg="$properties.properties.linkedNotificationRules[].actions">
                          <item type="string"/>
                        </prop>
                        <prop type="object" name="dstsConfiguration" arg="$properties.properties.linkedNotificationRules[].dstsConfiguration">
                          <prop type="string" name="serviceDnsName" arg="$properties.properties.linkedNotificationRules[].dstsConfiguration.serviceDnsName"/>
                          <prop type="string" name="serviceName" arg="$properties.properties.linkedNotificationRules[].dstsConfiguration.serviceName" required="True"/>
                        </prop>
                        <prop type="array<@ResourceProviderEndpoint_create>" name="endpoints" arg="$properties.properties.linkedNotificationRules[].endpoints">
                          <item type="@ResourceProviderEndpoint_create"/>
                        </prop>
                        <prop type="object" name="tokenAuthConfiguration" arg="$properties.properties.linkedNotificationRules[].tokenAuthConfiguration" cls="TokenAuthConfiguration_create">
                          <prop type="string" name="authenticationScheme" arg="@TokenAuthConfiguration_create.authenticationScheme">
                            <enum>
                              <item value="&quot;Bearer&quot;"/>
                              <item value="&quot;PoP&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="disableCertificateAuthenticationFallback" arg="@TokenAuthConfiguration_create.disableCertificateAuthenticationFallback"/>
                          <prop type="string" name="signedRequestScope" arg="@TokenAuthConfiguration_create.signedRequestScope">
                            <enum>
                              <item value="&quot;Endpoint&quot;"/>
                              <item value="&quot;ResourceUri&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="management">
                      <prop type="array<string>" name="authorizationOwners" arg="$properties.properties.management.authorizationOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="canaryManifestOwners" arg="$properties.properties.management.canaryManifestOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="errorResponseMessageOptions" arg="$properties.properties.management.errorResponseMessageOptions">
                        <prop type="string" name="serverFailureResponseMessageType" arg="$properties.properties.management.errorResponseMessageOptions.serverFailureResponseMessageType">
                          <enum>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;OutageReporting&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="expeditedRolloutMetadata" arg="$properties.properties.management.expeditedRolloutMetadata">
                        <prop type="boolean" name="enabled" arg="$properties.properties.management.expeditedRolloutMetadata.enabled"/>
                        <prop type="string" name="expeditedRolloutIntent" arg="$properties.properties.management.expeditedRolloutMetadata.expeditedRolloutIntent">
                          <enum>
                            <item value="&quot;Hotfix&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="expeditedRolloutSubmitters" arg="$properties.properties.management.expeditedRolloutSubmitters">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="incidentContactEmail" arg="$properties.properties.management.incidentContactEmail"/>
                      <prop type="string" name="incidentRoutingService" arg="$properties.properties.management.incidentRoutingService"/>
                      <prop type="string" name="incidentRoutingTeam" arg="$properties.properties.management.incidentRoutingTeam"/>
                      <prop type="array<string>" name="manifestOwners" arg="$properties.properties.management.manifestOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="pcCode" arg="$properties.properties.management.pcCode"/>
                      <prop type="string" name="profitCenterProgramId" arg="$properties.properties.management.profitCenterProgramId"/>
                      <prop type="string" name="resourceAccessPolicy" arg="$properties.properties.management.resourceAccessPolicy">
                        <enum>
                          <item value="&quot;AcisActionAllowed&quot;"/>
                          <item value="&quot;AcisReadAllowed&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="resourceAccessRoles" arg="$properties.properties.management.resourceAccessRoles">
                        <item type="object">
                          <prop type="array<string>" name="actions" arg="$properties.properties.management.resourceAccessRoles[].actions">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="allowedGroupClaims" arg="$properties.properties.management.resourceAccessRoles[].allowedGroupClaims">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<string>" name="schemaOwners" arg="$properties.properties.management.schemaOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="array<object>" name="serviceTreeInfos" arg="$properties.properties.management.serviceTreeInfos">
                        <item type="object">
                          <prop type="string" name="componentId" arg="$properties.properties.management.serviceTreeInfos[].componentId"/>
                          <prop type="string" name="readiness" arg="$properties.properties.management.serviceTreeInfos[].readiness">
                            <enum>
                              <item value="&quot;ClosingDown&quot;"/>
                              <item value="&quot;Deprecated&quot;"/>
                              <item value="&quot;GA&quot;"/>
                              <item value="&quot;InDevelopment&quot;"/>
                              <item value="&quot;InternalOnly&quot;"/>
                              <item value="&quot;PrivatePreview&quot;"/>
                              <item value="&quot;PublicPreview&quot;"/>
                              <item value="&quot;RemovedFromARM&quot;"/>
                              <item value="&quot;Retired&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="serviceId" arg="$properties.properties.management.serviceTreeInfos[].serviceId"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<@ResourceProviderEndpoint_create>" name="managementGroupGlobalNotificationEndpoints" arg="$properties.properties.managementGroupGlobalNotificationEndpoints">
                      <item type="@ResourceProviderEndpoint_create"/>
                    </prop>
                    <prop type="object" name="metadata" arg="$properties.properties.metadata">
                      <additionalProp anyType="True"/>
                    </prop>
                    <prop type="string" name="namespace" arg="$properties.properties.namespace"/>
                    <prop type="string" name="notificationOptions" arg="$properties.properties.notificationOptions">
                      <enum>
                        <item value="&quot;EmitSpendingLimit&quot;"/>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="notificationSettings" arg="$properties.properties.notificationSettings">
                      <prop type="array<object>" name="subscriberSettings" arg="$properties.properties.notificationSettings.subscriberSettings">
                        <item type="object">
                          <prop type="array<object>" name="filterRules" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules">
                            <item type="object">
                              <prop type="array<object>" name="endpointInformation" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation">
                                <item type="object">
                                  <prop type="string" name="endpoint" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].endpoint"/>
                                  <prop type="string" name="endpointType" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].endpointType">
                                    <enum>
                                      <item value="&quot;Eventhub&quot;"/>
                                      <item value="&quot;Webhook&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="schemaVersion" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].schemaVersion"/>
                                </item>
                              </prop>
                              <prop type="string" name="filterQuery" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].filterQuery"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="notifications" arg="$properties.properties.notifications">
                      <item type="object">
                        <prop type="string" name="notificationType" arg="$properties.properties.notifications[].notificationType">
                          <enum>
                            <item value="&quot;SubscriptionNotification&quot;"/>
                            <item value="&quot;Unspecified&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="skipNotifications" arg="$properties.properties.notifications[].skipNotifications">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Unspecified&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<string>" name="optionalFeatures" arg="$properties.properties.optionalFeatures">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="privateResourceProviderConfiguration" arg="$properties.properties.privateResourceProviderConfiguration">
                      <prop type="array<string>" name="allowedSubscriptions" arg="$properties.properties.privateResourceProviderConfiguration.allowedSubscriptions">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="providerAuthentication" arg="$properties.properties.providerAuthentication">
                      <prop type="array<string>" name="allowedAudiences" arg="$properties.properties.providerAuthentication.allowedAudiences" required="True">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="providerAuthorizations" arg="$properties.properties.providerAuthorizations">
                      <item type="object" cls="ResourceProviderAuthorization_create">
                        <prop type="array<object>" name="allowedThirdPartyExtensions" arg="@ResourceProviderAuthorization_create.allowedThirdPartyExtensions" identifiers="name">
                          <item type="object">
                            <prop type="string" name="name" arg="@ResourceProviderAuthorization_create.allowedThirdPartyExtensions[].name"/>
                          </item>
                        </prop>
                        <prop type="string" name="applicationId" arg="@ResourceProviderAuthorization_create.applicationId"/>
                        <prop type="string" name="groupingTag" arg="@ResourceProviderAuthorization_create.groupingTag"/>
                        <prop type="object" name="managedByAuthorization" arg="@ResourceProviderAuthorization_create.managedByAuthorization">
                          <prop type="array<object>" name="additionalAuthorizations" arg="@ResourceProviderAuthorization_create.managedByAuthorization.additionalAuthorizations" identifiers="roleDefinitionId applicationId">
                            <item type="object">
                              <prop type="string" name="applicationId" arg="@ResourceProviderAuthorization_create.managedByAuthorization.additionalAuthorizations[].applicationId"/>
                              <prop type="string" name="roleDefinitionId" arg="@ResourceProviderAuthorization_create.managedByAuthorization.additionalAuthorizations[].roleDefinitionId"/>
                            </item>
                          </prop>
                          <prop type="boolean" name="allowManagedByInheritance" arg="@ResourceProviderAuthorization_create.managedByAuthorization.allowManagedByInheritance"/>
                          <prop type="string" name="managedByResourceRoleDefinitionId" arg="@ResourceProviderAuthorization_create.managedByAuthorization.managedByResourceRoleDefinitionId"/>
                        </prop>
                        <prop type="string" name="managedByRoleDefinitionId" arg="@ResourceProviderAuthorization_create.managedByRoleDefinitionId"/>
                        <prop type="string" name="roleDefinitionId" arg="@ResourceProviderAuthorization_create.roleDefinitionId"/>
                      </item>
                    </prop>
                    <prop type="object" name="providerHubMetadata" arg="$properties.properties.providerHubMetadata">
                      <prop type="string" name="directRpRoleDefinitionId" arg="$properties.properties.providerHubMetadata.directRpRoleDefinitionId"/>
                      <prop type="string" name="globalAsyncOperationResourceTypeName" arg="$properties.properties.providerHubMetadata.globalAsyncOperationResourceTypeName"/>
                      <prop type="object" name="providerAuthentication" arg="$properties.properties.providerHubMetadata.providerAuthentication">
                        <prop type="array<string>" name="allowedAudiences" arg="$properties.properties.providerHubMetadata.providerAuthentication.allowedAudiences" required="True">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<@ResourceProviderAuthorization_create>" name="providerAuthorizations" arg="$properties.properties.providerHubMetadata.providerAuthorizations">
                        <item type="@ResourceProviderAuthorization_create"/>
                      </prop>
                      <prop type="string" name="regionalAsyncOperationResourceTypeName" arg="$properties.properties.providerHubMetadata.regionalAsyncOperationResourceTypeName"/>
                      <prop type="object" name="thirdPartyProviderAuthorization">
                        <prop type="array<object>" name="authorizations" arg="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations">
                          <item type="object">
                            <prop type="string" name="principalId" arg="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations[].principalId" required="True"/>
                            <prop type="string" name="roleDefinitionId" arg="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations[].roleDefinitionId" required="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="managedByTenantId" arg="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.managedByTenantId"/>
                      </prop>
                    </prop>
                    <prop type="string" name="providerType" arg="$properties.properties.providerType">
                      <enum>
                        <item value="&quot;AuthorizationFree&quot;"/>
                        <item value="&quot;External&quot;"/>
                        <item value="&quot;Hidden&quot;"/>
                        <item value="&quot;Internal&quot;"/>
                        <item value="&quot;LegacyRegistrationRequired&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RegistrationFree&quot;"/>
                        <item value="&quot;TenantOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="providerVersion" arg="$properties.properties.providerVersion"/>
                    <prop type="object" name="requestHeaderOptions">
                      <prop type="string" name="optInHeaders" arg="$properties.properties.requestHeaderOptions.optInHeaders">
                        <enum>
                          <item value="&quot;ClientGroupMembership&quot;"/>
                          <item value="&quot;ClientPrincipalNameEncoded&quot;"/>
                          <item value="&quot;MSIResourceIdEncoded&quot;"/>
                          <item value="&quot;ManagementGroupAncestorsEncoded&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;PrivateLinkId&quot;"/>
                          <item value="&quot;PrivateLinkResourceId&quot;"/>
                          <item value="&quot;PrivateLinkVnetTrafficTag&quot;"/>
                          <item value="&quot;ResourceGroupLocation&quot;"/>
                          <item value="&quot;SignedAuxiliaryTokens&quot;"/>
                          <item value="&quot;SignedUserToken&quot;"/>
                          <item value="&quot;UnboundedClientGroupMembership&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="optOutHeaders" arg="$properties.properties.requestHeaderOptions.optOutHeaders">
                        <enum>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;SystemDataCreatedByLastModifiedBy&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="requiredFeatures" arg="$properties.properties.requiredFeatures">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="resourceGroupLockOptionDuringMove" arg="$properties.properties.resourceGroupLockOptionDuringMove">
                      <prop type="string" name="blockActionVerb" arg="$properties.properties.resourceGroupLockOptionDuringMove.blockActionVerb">
                        <enum>
                          <item value="&quot;Action&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;Read&quot;"/>
                          <item value="&quot;Unrecognized&quot;"/>
                          <item value="&quot;Write&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="resourceHydrationAccounts" arg="$properties.properties.resourceHydrationAccounts">
                      <item type="object">
                        <prop type="string" name="accountName" arg="$properties.properties.resourceHydrationAccounts[].accountName"/>
                        <prop type="string" name="encryptedKey" arg="$properties.properties.resourceHydrationAccounts[].encryptedKey"/>
                        <prop type="integer64" name="maxChildResourceConsistencyJobLimit" arg="$properties.properties.resourceHydrationAccounts[].maxChildResourceConsistencyJobLimit"/>
                        <prop type="string" name="subscriptionId" arg="$properties.properties.resourceHydrationAccounts[].subscriptionId"/>
                      </item>
                    </prop>
                    <prop type="object" name="resourceProviderAuthorizationRules" arg="$properties.properties.resourceProviderAuthorizationRules">
                      <prop type="object" name="asyncOperationPollingRules" arg="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules">
                        <prop type="string" name="additionalOptions" arg="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules.additionalOptions">
                          <enum>
                            <item value="&quot;ProtectedAsyncOperationPolling&quot;"/>
                            <item value="&quot;ProtectedAsyncOperationPollingAuditOnly&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="authorizationActions" arg="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules.authorizationActions">
                          <item type="string"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="responseOptions" arg="$properties.properties.responseOptions">
                      <prop type="string" name="serviceClientOptionsType" arg="$properties.properties.responseOptions.serviceClientOptionsType">
                        <enum>
                          <item value="&quot;DisableAutomaticDecompression&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="serviceName" arg="$properties.properties.serviceName"/>
                    <prop type="array<object>" name="services" arg="$properties.properties.services">
                      <item type="object">
                        <prop type="string" name="serviceName" arg="$properties.properties.services[].serviceName"/>
                        <prop type="string" name="status" arg="$properties.properties.services[].status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Inactive&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="subscriptionLifecycleNotificationSpecifications">
                      <prop type="duration" name="softDeleteTTL" arg="$properties.properties.subscriptionLifecycleNotificationSpecifications.softDeleteTTL"/>
                      <prop type="array<object>" name="subscriptionStateOverrideActions" arg="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions">
                        <item type="object">
                          <prop type="string" name="action" arg="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions[].action" required="True">
                            <enum>
                              <item value="&quot;BillingCancellation&quot;"/>
                              <item value="&quot;DeleteAllResources&quot;"/>
                              <item value="&quot;NoOp&quot;"/>
                              <item value="&quot;NotDefined&quot;"/>
                              <item value="&quot;SoftDeleteAllResources&quot;"/>
                              <item value="&quot;UndoSoftDelete&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="state" arg="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions[].state" required="True">
                            <enum>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Registered&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;SuspendedToDeleted&quot;"/>
                              <item value="&quot;SuspendedToRegistered&quot;"/>
                              <item value="&quot;SuspendedToUnregistered&quot;"/>
                              <item value="&quot;SuspendedToWarned&quot;"/>
                              <item value="&quot;Unregistered&quot;"/>
                              <item value="&quot;Warned&quot;"/>
                              <item value="&quot;WarnedToDeleted&quot;"/>
                              <item value="&quot;WarnedToRegistered&quot;"/>
                              <item value="&quot;WarnedToSuspended&quot;"/>
                              <item value="&quot;WarnedToUnregistered&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="templateDeploymentOptions" arg="$properties.properties.templateDeploymentOptions">
                      <prop type="array<string>" name="preflightOptions" arg="$properties.properties.templateDeploymentOptions.preflightOptions">
                        <item type="string">
                          <enum>
                            <item value="&quot;ContinueDeploymentOnFailure&quot;"/>
                            <item value="&quot;DefaultValidationOnly&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="boolean" name="preflightSupported" arg="$properties.properties.templateDeploymentOptions.preflightSupported"/>
                    </prop>
                    <prop type="@TokenAuthConfiguration_create" name="tokenAuthConfiguration" arg="$properties.properties.tokenAuthConfiguration"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.ProviderHub/providerRegistrations/{}"/>
                  </prop>
                  <prop type="string" name="kind">
                    <default value="&quot;Managed&quot;"/>
                    <enum>
                      <item value="&quot;Direct&quot;"/>
                      <item value="&quot;Hybrid&quot;"/>
                      <item value="&quot;Managed&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="capabilities" identifiers="quotaId">
                      <item type="object">
                        <prop type="string" name="effect" required="True">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                            <item value="&quot;Disallow&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="quotaId" required="True"/>
                        <prop type="array<string>" name="requiredFeatures">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="crossTenantTokenValidation">
                      <enum>
                        <item value="&quot;EnsureSecureValidation&quot;"/>
                        <item value="&quot;PassthroughInsecureToken&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="customManifestVersion"/>
                    <prop type="object" name="dstsConfiguration">
                      <prop type="string" name="serviceDnsName"/>
                      <prop type="string" name="serviceName" required="True"/>
                    </prop>
                    <prop nullable="True" type="boolean" name="enableTenantLinkedNotification"/>
                    <prop type="object" name="featuresRule">
                      <prop type="string" name="requiredFeaturesPolicy" required="True">
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Any&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="globalNotificationEndpoints">
                      <item type="object" cls="ResourceProviderEndpoint_read">
                        <prop type="array<string>" name="apiVersions">
                          <item type="string"/>
                        </prop>
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="endpointType">
                          <enum>
                            <item value="&quot;Canary&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Production&quot;"/>
                            <item value="&quot;TestInProduction&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="endpointUri"/>
                        <prop type="object" name="featuresRule">
                          <prop type="string" name="requiredFeaturesPolicy" required="True">
                            <enum>
                              <item value="&quot;All&quot;"/>
                              <item value="&quot;Any&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="array<string>" name="locations">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="requiredFeatures">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="skuLink"/>
                        <prop type="duration" name="timeout"/>
                      </item>
                    </prop>
                    <prop type="string" name="legacyNamespace"/>
                    <prop type="array<string>" name="legacyRegistrations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="linkedNotificationRules">
                      <item type="object">
                        <prop type="array<string>" name="actions">
                          <item type="string"/>
                        </prop>
                        <prop type="object" name="dstsConfiguration">
                          <prop type="string" name="serviceDnsName"/>
                          <prop type="string" name="serviceName" required="True"/>
                        </prop>
                        <prop type="array<@ResourceProviderEndpoint_read>" name="endpoints">
                          <item type="@ResourceProviderEndpoint_read"/>
                        </prop>
                        <prop type="object" name="tokenAuthConfiguration" cls="TokenAuthConfiguration_read">
                          <prop type="string" name="authenticationScheme">
                            <enum>
                              <item value="&quot;Bearer&quot;"/>
                              <item value="&quot;PoP&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="disableCertificateAuthenticationFallback"/>
                          <prop type="string" name="signedRequestScope">
                            <enum>
                              <item value="&quot;Endpoint&quot;"/>
                              <item value="&quot;ResourceUri&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="management">
                      <prop type="array<string>" name="authorizationOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="canaryManifestOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="errorResponseMessageOptions">
                        <prop type="string" name="serverFailureResponseMessageType">
                          <enum>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;OutageReporting&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="expeditedRolloutMetadata">
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="expeditedRolloutIntent">
                          <enum>
                            <item value="&quot;Hotfix&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="expeditedRolloutSubmitters">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="incidentContactEmail"/>
                      <prop type="string" name="incidentRoutingService"/>
                      <prop type="string" name="incidentRoutingTeam"/>
                      <prop type="array<string>" name="manifestOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="pcCode"/>
                      <prop type="string" name="profitCenterProgramId"/>
                      <prop type="string" name="resourceAccessPolicy">
                        <enum>
                          <item value="&quot;AcisActionAllowed&quot;"/>
                          <item value="&quot;AcisReadAllowed&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="resourceAccessRoles">
                        <item type="object">
                          <prop type="array<string>" name="actions">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="allowedGroupClaims">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<string>" name="schemaOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="array<object>" name="serviceTreeInfos">
                        <item type="object">
                          <prop type="string" name="componentId"/>
                          <prop type="string" name="readiness">
                            <enum>
                              <item value="&quot;ClosingDown&quot;"/>
                              <item value="&quot;Deprecated&quot;"/>
                              <item value="&quot;GA&quot;"/>
                              <item value="&quot;InDevelopment&quot;"/>
                              <item value="&quot;InternalOnly&quot;"/>
                              <item value="&quot;PrivatePreview&quot;"/>
                              <item value="&quot;PublicPreview&quot;"/>
                              <item value="&quot;RemovedFromARM&quot;"/>
                              <item value="&quot;Retired&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="serviceId"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<@ResourceProviderEndpoint_read>" name="managementGroupGlobalNotificationEndpoints">
                      <item type="@ResourceProviderEndpoint_read"/>
                    </prop>
                    <prop type="object" name="metadata">
                      <additionalProp anyType="True"/>
                    </prop>
                    <prop type="string" name="namespace"/>
                    <prop type="string" name="notificationOptions">
                      <enum>
                        <item value="&quot;EmitSpendingLimit&quot;"/>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="notificationSettings">
                      <prop type="array<object>" name="subscriberSettings">
                        <item type="object">
                          <prop type="array<object>" name="filterRules">
                            <item type="object">
                              <prop type="array<object>" name="endpointInformation">
                                <item type="object">
                                  <prop type="string" name="endpoint"/>
                                  <prop type="string" name="endpointType">
                                    <enum>
                                      <item value="&quot;Eventhub&quot;"/>
                                      <item value="&quot;Webhook&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="schemaVersion"/>
                                </item>
                              </prop>
                              <prop type="string" name="filterQuery"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="notifications">
                      <item type="object">
                        <prop type="string" name="notificationType">
                          <enum>
                            <item value="&quot;SubscriptionNotification&quot;"/>
                            <item value="&quot;Unspecified&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="skipNotifications">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Unspecified&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<string>" name="optionalFeatures">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="privateResourceProviderConfiguration">
                      <prop type="array<string>" name="allowedSubscriptions">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="providerAuthentication">
                      <prop type="array<string>" name="allowedAudiences" required="True">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="providerAuthorizations">
                      <item type="object" cls="ResourceProviderAuthorization_read">
                        <prop type="array<object>" name="allowedThirdPartyExtensions" identifiers="name">
                          <item type="object">
                            <prop type="string" name="name"/>
                          </item>
                        </prop>
                        <prop type="string" name="applicationId"/>
                        <prop type="string" name="groupingTag"/>
                        <prop type="object" name="managedByAuthorization">
                          <prop type="array<object>" name="additionalAuthorizations" identifiers="roleDefinitionId applicationId">
                            <item type="object">
                              <prop type="string" name="applicationId"/>
                              <prop type="string" name="roleDefinitionId"/>
                            </item>
                          </prop>
                          <prop type="boolean" name="allowManagedByInheritance"/>
                          <prop type="string" name="managedByResourceRoleDefinitionId"/>
                        </prop>
                        <prop type="string" name="managedByRoleDefinitionId"/>
                        <prop type="string" name="roleDefinitionId"/>
                      </item>
                    </prop>
                    <prop type="object" name="providerHubMetadata">
                      <prop type="string" name="directRpRoleDefinitionId"/>
                      <prop type="string" name="globalAsyncOperationResourceTypeName"/>
                      <prop type="object" name="providerAuthentication">
                        <prop type="array<string>" name="allowedAudiences" required="True">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<@ResourceProviderAuthorization_read>" name="providerAuthorizations">
                        <item type="@ResourceProviderAuthorization_read"/>
                      </prop>
                      <prop type="string" name="regionalAsyncOperationResourceTypeName"/>
                      <prop type="object" name="thirdPartyProviderAuthorization">
                        <prop type="array<object>" name="authorizations">
                          <item type="object">
                            <prop type="string" name="principalId" required="True"/>
                            <prop type="string" name="roleDefinitionId" required="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="managedByTenantId"/>
                      </prop>
                    </prop>
                    <prop type="string" name="providerType">
                      <enum>
                        <item value="&quot;AuthorizationFree&quot;"/>
                        <item value="&quot;External&quot;"/>
                        <item value="&quot;Hidden&quot;"/>
                        <item value="&quot;Internal&quot;"/>
                        <item value="&quot;LegacyRegistrationRequired&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RegistrationFree&quot;"/>
                        <item value="&quot;TenantOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="providerVersion"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="requestHeaderOptions">
                      <prop type="string" name="optInHeaders">
                        <enum>
                          <item value="&quot;ClientGroupMembership&quot;"/>
                          <item value="&quot;ClientPrincipalNameEncoded&quot;"/>
                          <item value="&quot;MSIResourceIdEncoded&quot;"/>
                          <item value="&quot;ManagementGroupAncestorsEncoded&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;PrivateLinkId&quot;"/>
                          <item value="&quot;PrivateLinkResourceId&quot;"/>
                          <item value="&quot;PrivateLinkVnetTrafficTag&quot;"/>
                          <item value="&quot;ResourceGroupLocation&quot;"/>
                          <item value="&quot;SignedAuxiliaryTokens&quot;"/>
                          <item value="&quot;SignedUserToken&quot;"/>
                          <item value="&quot;UnboundedClientGroupMembership&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="optOutHeaders">
                        <enum>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;SystemDataCreatedByLastModifiedBy&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="requiredFeatures">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="resourceGroupLockOptionDuringMove">
                      <prop type="string" name="blockActionVerb">
                        <enum>
                          <item value="&quot;Action&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;Read&quot;"/>
                          <item value="&quot;Unrecognized&quot;"/>
                          <item value="&quot;Write&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="resourceHydrationAccounts">
                      <item type="object">
                        <prop type="string" name="accountName"/>
                        <prop type="string" name="encryptedKey"/>
                        <prop type="integer64" name="maxChildResourceConsistencyJobLimit"/>
                        <prop type="string" name="subscriptionId"/>
                      </item>
                    </prop>
                    <prop type="object" name="resourceProviderAuthorizationRules">
                      <prop type="object" name="asyncOperationPollingRules">
                        <prop type="string" name="additionalOptions">
                          <enum>
                            <item value="&quot;ProtectedAsyncOperationPolling&quot;"/>
                            <item value="&quot;ProtectedAsyncOperationPollingAuditOnly&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="authorizationActions">
                          <item type="string"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="responseOptions">
                      <prop type="string" name="serviceClientOptionsType">
                        <enum>
                          <item value="&quot;DisableAutomaticDecompression&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="serviceName"/>
                    <prop type="array<object>" name="services">
                      <item type="object">
                        <prop type="string" name="serviceName"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Inactive&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="subscriptionLifecycleNotificationSpecifications">
                      <prop type="duration" name="softDeleteTTL"/>
                      <prop type="array<object>" name="subscriptionStateOverrideActions">
                        <item type="object">
                          <prop type="string" name="action" required="True">
                            <enum>
                              <item value="&quot;BillingCancellation&quot;"/>
                              <item value="&quot;DeleteAllResources&quot;"/>
                              <item value="&quot;NoOp&quot;"/>
                              <item value="&quot;NotDefined&quot;"/>
                              <item value="&quot;SoftDeleteAllResources&quot;"/>
                              <item value="&quot;UndoSoftDelete&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="state" required="True">
                            <enum>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Registered&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;SuspendedToDeleted&quot;"/>
                              <item value="&quot;SuspendedToRegistered&quot;"/>
                              <item value="&quot;SuspendedToUnregistered&quot;"/>
                              <item value="&quot;SuspendedToWarned&quot;"/>
                              <item value="&quot;Unregistered&quot;"/>
                              <item value="&quot;Warned&quot;"/>
                              <item value="&quot;WarnedToDeleted&quot;"/>
                              <item value="&quot;WarnedToRegistered&quot;"/>
                              <item value="&quot;WarnedToSuspended&quot;"/>
                              <item value="&quot;WarnedToUnregistered&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="templateDeploymentOptions">
                      <prop type="array<string>" name="preflightOptions">
                        <item type="string">
                          <enum>
                            <item value="&quot;ContinueDeploymentOnFailure&quot;"/>
                            <item value="&quot;DefaultValidationOnly&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="boolean" name="preflightSupported"/>
                    </prop>
                    <prop type="@TokenAuthConfiguration_read" name="tokenAuthConfiguration"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-04-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.providerhub/providerregistrations/{}" version="2024-04-01-preview" swagger="mgmt-plane/providerhub/ResourceProviders/Microsoft.ProviderHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlByb3ZpZGVySHViL3Byb3ZpZGVyUmVnaXN0cmF0aW9ucy97cHJvdmlkZXJOYW1lc3BhY2V9/V/MjAyNC0wNC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.providerNamespace" options="provider-namespace name n" required="True" idPart="name">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="FeaturesRule">
        <arg type="string" var="$properties.properties.featuresRule.requiredFeaturesPolicy" options="required-features-policy req-features-policy" group="FeaturesRule">
          <help short="The accepted values are &quot;Any&quot; or &quot;All&quot;."/>
          <enum>
            <item name="All" value="&quot;All&quot;"/>
            <item name="Any" value="&quot;Any&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Management">
        <arg nullable="True" type="array<string>" var="$properties.properties.management.authorizationOwners" options="authorization-owners" group="Management">
          <help short="The authorization owners."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$properties.properties.management.canaryManifestOwners" options="canary-manifest-owners" group="Management">
          <help short="List of manifest owners for canary."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.management.errorResponseMessageOptions" options="error-response-message-options message-options" group="Management">
          <help short="Options for error response messages."/>
          <arg nullable="True" type="string" var="$properties.properties.management.errorResponseMessageOptions.serverFailureResponseMessageType" options="server-failure-response-message-type">
            <help short="Type of server failure response message."/>
            <enum>
              <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
              <item name="OutageReporting" value="&quot;OutageReporting&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.management.expeditedRolloutMetadata" options="expedited-rollout-metadata rollout-metadata" group="Management">
          <help short="Metadata for expedited rollout."/>
          <arg nullable="True" type="boolean" var="$properties.properties.management.expeditedRolloutMetadata.enabled" options="enabled">
            <help short="Expedited rollout enabled?"/>
          </arg>
          <arg nullable="True" type="string" var="$properties.properties.management.expeditedRolloutMetadata.expeditedRolloutIntent" options="expedited-rollout-intent">
            <help short="Expedited rollout intent."/>
            <enum>
              <item name="Hotfix" value="&quot;Hotfix&quot;"/>
              <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="array<string>" var="$properties.properties.management.expeditedRolloutSubmitters" options="expedited-rollout-submitters rollout-submitters" group="Management">
          <help short="List of expedited rollout submitters."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.management.incidentContactEmail" options="incident-contact-email" group="Management">
          <help short="The email address of contacts for incidents related to the RP."/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.management.incidentRoutingService" options="incident-routing-service incident-service" group="Management">
          <help short="The service in IcM when creating or transferring incidents to the RP."/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.management.incidentRoutingTeam" options="incident-routing-team incident-team" group="Management">
          <help short="The team in IcM when creating or transferring incidents to the RP."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$properties.properties.management.manifestOwners" options="manifest-owners" group="Management" singularOptions="manifest-owner">
          <help short="Specifies an array of required ACIS claims to modify the resource provider's manifest content via ACIS."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.management.pcCode" options="pc-code" group="Management">
          <help short="The profit center code for the subscription."/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.management.profitCenterProgramId" options="profit-center-program-id pc-program-id" group="Management">
          <help short="The profit center program id for the subscription."/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.management.resourceAccessPolicy" options="resource-access-policy" group="Management">
          <help short="The resource access policy."/>
          <enum>
            <item name="AcisActionAllowed" value="&quot;AcisActionAllowed&quot;"/>
            <item name="AcisReadAllowed" value="&quot;AcisReadAllowed&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.management.resourceAccessRoles" options="resource-access-roles" group="Management">
          <help short="The resource access roles."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<string>" var="$properties.properties.management.resourceAccessRoles[].actions" options="actions">
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="array<string>" var="$properties.properties.management.resourceAccessRoles[].allowedGroupClaims" options="allowed-group-claims">
              <item nullable="True" type="string"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<string>" var="$properties.properties.management.schemaOwners" options="schema-owners" group="Management" singularOptions="schema-owners schema-owner">
          <help short="Specifies an array of needed ACIS claims to modify the resource provider schema via ACIS."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.management.serviceTreeInfos" options="service-tree-infos" group="Management" singularOptions="service-tree-infos service-tree-info">
          <help short="The ServiceTree information for the resource provider."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$properties.properties.management.serviceTreeInfos[].componentId" options="component-id"/>
            <arg nullable="True" type="string" var="$properties.properties.management.serviceTreeInfos[].readiness" options="readiness">
              <enum>
                <item name="ClosingDown" value="&quot;ClosingDown&quot;"/>
                <item name="Deprecated" value="&quot;Deprecated&quot;"/>
                <item name="GA" value="&quot;GA&quot;"/>
                <item name="InDevelopment" value="&quot;InDevelopment&quot;"/>
                <item name="InternalOnly" value="&quot;InternalOnly&quot;"/>
                <item name="PrivatePreview" value="&quot;PrivatePreview&quot;"/>
                <item name="PublicPreview" value="&quot;PublicPreview&quot;"/>
                <item name="RemovedFromARM" value="&quot;RemovedFromARM&quot;"/>
                <item name="Retired" value="&quot;Retired&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$properties.properties.management.serviceTreeInfos[].serviceId" options="service-id"/>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$properties.kind" options="kind" group="Properties">
          <help short="Provider registration kind. This Metadata is also used by portal/tooling/etc to render different UX experiences for resources of the same type."/>
          <enum>
            <item name="Direct" value="&quot;Direct&quot;"/>
            <item name="Hybrid" value="&quot;Hybrid&quot;"/>
            <item name="Managed" value="&quot;Managed&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.capabilities" options="capabilities" group="Properties" singularOptions="capabilities capability">
          <help short="This allows a restrictive subscription type to have access to register and use the Resource Provider."/>
          <item nullable="True" type="object">
            <arg type="string" var="$properties.properties.capabilities[].effect" options="effect">
              <enum>
                <item name="Allow" value="&quot;Allow&quot;"/>
                <item name="Disallow" value="&quot;Disallow&quot;"/>
                <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$properties.properties.capabilities[].quotaId" options="quota-id"/>
            <arg nullable="True" type="array<string>" var="$properties.properties.capabilities[].requiredFeatures" options="required-features">
              <item nullable="True" type="string"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.crossTenantTokenValidation" options="cross-tenant-token-validation token-validation" group="Properties">
          <help short="The cross tenant token validation."/>
          <enum>
            <item name="EnsureSecureValidation" value="&quot;EnsureSecureValidation&quot;"/>
            <item name="PassthroughInsecureToken" value="&quot;PassthroughInsecureToken&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.customManifestVersion" options="custom-manifest-version custom-manifest-vers" group="Properties">
          <help short="Custom manifest version."/>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.dstsConfiguration" options="dsts-configuration" group="Properties">
          <help short="The DSTS configuration."/>
          <arg nullable="True" type="string" var="$properties.properties.dstsConfiguration.serviceDnsName" options="service-dns-name"/>
          <arg type="string" var="$properties.properties.dstsConfiguration.serviceName" options="service-name"/>
        </arg>
        <arg nullable="True" type="boolean" var="$properties.properties.enableTenantLinkedNotification" options="enable-tenant-linked-notification enable-linked-notif" group="Properties">
          <help short="The enable tenant linked notification."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.globalNotificationEndpoints" options="global-notification-endpoints global-notif-endpoints" group="Properties">
          <help short="The global notification endpoints."/>
          <item nullable="True" type="object" cls="ResourceProviderEndpoint_update">
            <arg nullable="True" type="array<string>" var="@ResourceProviderEndpoint_update.apiVersions" options="api-versions">
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="boolean" var="@ResourceProviderEndpoint_update.enabled" options="enabled"/>
            <arg nullable="True" type="string" var="@ResourceProviderEndpoint_update.endpointType" options="endpoint-type">
              <enum>
                <item name="Canary" value="&quot;Canary&quot;"/>
                <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
                <item name="Production" value="&quot;Production&quot;"/>
                <item name="TestInProduction" value="&quot;TestInProduction&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="@ResourceProviderEndpoint_update.endpointUri" options="endpoint-uri"/>
            <arg nullable="True" type="object" var="@ResourceProviderEndpoint_update.featuresRule" options="features-rule">
              <arg type="string" var="@ResourceProviderEndpoint_update.featuresRule.requiredFeaturesPolicy" options="required-features-policy">
                <enum>
                  <item name="All" value="&quot;All&quot;"/>
                  <item name="Any" value="&quot;Any&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="array<string>" var="@ResourceProviderEndpoint_update.locations" options="locations">
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="array<string>" var="@ResourceProviderEndpoint_update.requiredFeatures" options="required-features">
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="string" var="@ResourceProviderEndpoint_update.skuLink" options="sku-link"/>
            <arg nullable="True" type="duration" var="@ResourceProviderEndpoint_update.timeout" options="timeout"/>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.legacyNamespace" options="legacy-namespace" group="Properties">
          <help short="Legacy namespace."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$properties.properties.legacyRegistrations" options="legacy-registrations" group="Properties">
          <help short="Legacy registrations."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.linkedNotificationRules" options="linked-notification-rules linked-notif-rules" group="Properties">
          <help short="The linked notification rules."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="array<string>" var="$properties.properties.linkedNotificationRules[].actions" options="actions">
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="object" var="$properties.properties.linkedNotificationRules[].dstsConfiguration" options="dsts-configuration">
              <arg nullable="True" type="string" var="$properties.properties.linkedNotificationRules[].dstsConfiguration.serviceDnsName" options="service-dns-name"/>
              <arg type="string" var="$properties.properties.linkedNotificationRules[].dstsConfiguration.serviceName" options="service-name"/>
            </arg>
            <arg nullable="True" type="array<@ResourceProviderEndpoint_update>" var="$properties.properties.linkedNotificationRules[].endpoints" options="endpoints">
              <item nullable="True" type="@ResourceProviderEndpoint_update"/>
            </arg>
            <arg nullable="True" type="object" var="$properties.properties.linkedNotificationRules[].tokenAuthConfiguration" options="token-auth-configuration" cls="TokenAuthConfiguration_update">
              <arg nullable="True" type="string" var="@TokenAuthConfiguration_update.authenticationScheme" options="authentication-scheme">
                <enum>
                  <item name="Bearer" value="&quot;Bearer&quot;"/>
                  <item name="PoP" value="&quot;PoP&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="boolean" var="@TokenAuthConfiguration_update.disableCertificateAuthenticationFallback" options="disable-certificate-authentication-fallback"/>
              <arg nullable="True" type="string" var="@TokenAuthConfiguration_update.signedRequestScope" options="signed-request-scope">
                <enum>
                  <item name="Endpoint" value="&quot;Endpoint&quot;"/>
                  <item name="ResourceUri" value="&quot;ResourceUri&quot;"/>
                </enum>
              </arg>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<@ResourceProviderEndpoint_update>" var="$properties.properties.managementGroupGlobalNotificationEndpoints" options="management-group-global-notification-endpoints mg-notif-endpoints" group="Properties">
          <help short="Management groups global notification endpoints."/>
          <item nullable="True" type="@ResourceProviderEndpoint_update"/>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.metadata" options="metadata" group="Properties">
          <blank value="{}"/>
          <help short="The metadata."/>
          <additionalProp anyType="True"/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.namespace" options="namespace" group="Properties">
          <help short="The name of the resource provider hosted within ProviderHub."/>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.notificationOptions" options="notification-options" group="Properties">
          <help short="Notification options."/>
          <enum>
            <item name="EmitSpendingLimit" value="&quot;EmitSpendingLimit&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.notificationSettings" options="notification-settings" group="Properties">
          <help short="Notification settings."/>
          <arg nullable="True" type="array<object>" var="$properties.properties.notificationSettings.subscriberSettings" options="subscriber-settings">
            <item nullable="True" type="object">
              <arg nullable="True" type="array<object>" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules" options="filter-rules">
                <item nullable="True" type="object">
                  <arg nullable="True" type="array<object>" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation" options="endpoint-information">
                    <item nullable="True" type="object">
                      <arg nullable="True" type="string" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].endpoint" options="endpoint"/>
                      <arg nullable="True" type="string" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].endpointType" options="endpoint-type">
                        <enum>
                          <item name="Eventhub" value="&quot;Eventhub&quot;"/>
                          <item name="Webhook" value="&quot;Webhook&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="string" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].schemaVersion" options="schema-version"/>
                    </item>
                  </arg>
                  <arg nullable="True" type="string" var="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].filterQuery" options="filter-query"/>
                </item>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.notifications" options="notifications" group="Properties">
          <help short="The notifications object."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$properties.properties.notifications[].notificationType" options="notification-type">
              <enum>
                <item name="SubscriptionNotification" value="&quot;SubscriptionNotification&quot;"/>
                <item name="Unspecified" value="&quot;Unspecified&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$properties.properties.notifications[].skipNotifications" options="skip-notifications">
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
                <item name="Unspecified" value="&quot;Unspecified&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<string>" var="$properties.properties.optionalFeatures" options="optional-features" group="Properties">
          <help short="Optional features."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.privateResourceProviderConfiguration" options="private-resource-provider-configuration private-rp-config" group="Properties">
          <help short="The private resource provider configuration."/>
          <arg nullable="True" type="array<string>" var="$properties.properties.privateResourceProviderConfiguration.allowedSubscriptions" options="allowed-subscriptions">
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.providerAuthentication" options="provider-authentication provider-authn" group="Properties">
          <help short="Used to set alternative audiences or resources that ARM should accept from the token while authenticating requests for the provider."/>
          <arg type="array<string>" var="$properties.properties.providerAuthentication.allowedAudiences" options="allowed-audiences">
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.providerAuthorizations" options="provider-authorizations" group="Properties" singularOptions="provider-authorizations provider-authz provider-auth">
          <help short="The resource provider authorizations."/>
          <item nullable="True" type="object" cls="ResourceProviderAuthorization_update">
            <arg nullable="True" type="array<object>" var="@ResourceProviderAuthorization_update.allowedThirdPartyExtensions" options="allowed-third-party-extensions">
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="@ResourceProviderAuthorization_update.allowedThirdPartyExtensions[].name" options="name">
                  <help short="Name of third party extension."/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="string" var="@ResourceProviderAuthorization_update.applicationId" options="application-id"/>
            <arg nullable="True" type="string" var="@ResourceProviderAuthorization_update.groupingTag" options="grouping-tag"/>
            <arg nullable="True" type="object" var="@ResourceProviderAuthorization_update.managedByAuthorization" options="managed-by-authorization">
              <help short="Managed by authorization."/>
              <arg nullable="True" type="array<object>" var="@ResourceProviderAuthorization_update.managedByAuthorization.additionalAuthorizations" options="additional-authorizations">
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="@ResourceProviderAuthorization_update.managedByAuthorization.additionalAuthorizations[].applicationId" options="application-id"/>
                  <arg nullable="True" type="string" var="@ResourceProviderAuthorization_update.managedByAuthorization.additionalAuthorizations[].roleDefinitionId" options="role-definition-id"/>
                </item>
              </arg>
              <arg nullable="True" type="boolean" var="@ResourceProviderAuthorization_update.managedByAuthorization.allowManagedByInheritance" options="allow-managed-by-inheritance">
                <help short="Indicates whether the managed by resource role definition ID should be inherited."/>
              </arg>
              <arg nullable="True" type="string" var="@ResourceProviderAuthorization_update.managedByAuthorization.managedByResourceRoleDefinitionId" options="managed-by-resource-role-definition-id">
                <help short="The managed by resource role definition ID for the application."/>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="@ResourceProviderAuthorization_update.managedByRoleDefinitionId" options="managed-by-role-definition-id"/>
            <arg nullable="True" type="string" var="@ResourceProviderAuthorization_update.roleDefinitionId" options="role-definition-id"/>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.providerHubMetadata" options="provider-hub-metadata" group="Properties">
          <help short="The ProviderHub metadata."/>
          <arg nullable="True" type="string" var="$properties.properties.providerHubMetadata.directRpRoleDefinitionId" options="direct-rp-role-definition-id"/>
          <arg nullable="True" type="string" var="$properties.properties.providerHubMetadata.globalAsyncOperationResourceTypeName" options="global-async-operation-resource-type-name"/>
          <arg nullable="True" type="object" var="$properties.properties.providerHubMetadata.providerAuthentication" options="provider-authentication">
            <arg type="array<string>" var="$properties.properties.providerHubMetadata.providerAuthentication.allowedAudiences" options="allowed-audiences">
              <item nullable="True" type="string"/>
            </arg>
          </arg>
          <arg nullable="True" type="array<@ResourceProviderAuthorization_update>" var="$properties.properties.providerHubMetadata.providerAuthorizations" options="provider-authorizations">
            <item nullable="True" type="@ResourceProviderAuthorization_update"/>
          </arg>
          <arg nullable="True" type="string" var="$properties.properties.providerHubMetadata.regionalAsyncOperationResourceTypeName" options="regional-async-operation-resource-type-name"/>
          <arg nullable="True" type="object" var="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization" options="third-party-provider-authorization">
            <arg nullable="True" type="array<object>" var="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations" options="authorizations">
              <item nullable="True" type="object">
                <arg type="string" var="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations[].principalId" options="principal-id"/>
                <arg type="string" var="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations[].roleDefinitionId" options="role-definition-id"/>
              </item>
            </arg>
            <arg nullable="True" type="string" var="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.managedByTenantId" options="managed-by-tenant-id" group="ThirdPartyProviderAuthorization">
              <help short="The managed by tenant ID."/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.providerType" options="provider-type" group="Properties">
          <help short="The provider type."/>
          <enum>
            <item name="AuthorizationFree" value="&quot;AuthorizationFree&quot;"/>
            <item name="External" value="&quot;External&quot;"/>
            <item name="Hidden" value="&quot;Hidden&quot;"/>
            <item name="Internal" value="&quot;Internal&quot;"/>
            <item name="LegacyRegistrationRequired" value="&quot;LegacyRegistrationRequired&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="RegistrationFree" value="&quot;RegistrationFree&quot;"/>
            <item name="TenantOnly" value="&quot;TenantOnly&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.providerVersion" options="provider-version" group="Properties">
          <help short="The provider version."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$properties.properties.requiredFeatures" options="required-features" group="Properties">
          <help short="The required features."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.resourceGroupLockOptionDuringMove" options="resource-group-lock-option-during-move rg-lock-option" group="Properties">
          <help short="Resource group lock option during move."/>
          <arg nullable="True" type="string" var="$properties.properties.resourceGroupLockOptionDuringMove.blockActionVerb" options="block-action-verb">
            <help short="The action verb that will be blocked when the resource group is locked during move."/>
            <enum>
              <item name="Action" value="&quot;Action&quot;"/>
              <item name="Delete" value="&quot;Delete&quot;"/>
              <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
              <item name="Read" value="&quot;Read&quot;"/>
              <item name="Unrecognized" value="&quot;Unrecognized&quot;"/>
              <item name="Write" value="&quot;Write&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.resourceHydrationAccounts" options="resource-hydration-accounts resc-hydration-accts" group="Properties">
          <help short="resource hydration accounts"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$properties.properties.resourceHydrationAccounts[].accountName" options="account-name"/>
            <arg nullable="True" type="string" var="$properties.properties.resourceHydrationAccounts[].encryptedKey" options="encrypted-key"/>
            <arg nullable="True" type="integer64" var="$properties.properties.resourceHydrationAccounts[].maxChildResourceConsistencyJobLimit" options="max-child-resource-consistency-job-limit"/>
            <arg nullable="True" type="string" var="$properties.properties.resourceHydrationAccounts[].subscriptionId" options="subscription-id"/>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.resourceProviderAuthorizationRules" options="resource-provider-authorization-rules rp-auth-rules" group="Properties">
          <help short="The resource provider authorization rules."/>
          <arg nullable="True" type="object" var="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules" options="async-operation-polling-rules">
            <arg nullable="True" type="string" var="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules.additionalOptions" options="additional-options">
              <enum>
                <item name="ProtectedAsyncOperationPolling" value="&quot;ProtectedAsyncOperationPolling&quot;"/>
                <item name="ProtectedAsyncOperationPollingAuditOnly" value="&quot;ProtectedAsyncOperationPollingAuditOnly&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="array<string>" var="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules.authorizationActions" options="authorization-actions">
              <item nullable="True" type="string"/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.responseOptions" options="response-options" group="Properties">
          <help short="Response options."/>
          <arg nullable="True" type="string" var="$properties.properties.responseOptions.serviceClientOptionsType" options="service-client-options-type">
            <enum>
              <item name="DisableAutomaticDecompression" value="&quot;DisableAutomaticDecompression&quot;"/>
              <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.serviceName" options="service-name" group="Properties">
          <help short="The service name."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.services" options="services" group="Properties">
          <help short="The services."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$properties.properties.services[].serviceName" options="service-name" group="">
              <help short="The service name."/>
            </arg>
            <arg nullable="True" type="string" var="$properties.properties.services[].status" options="status">
              <enum>
                <item name="Active" value="&quot;Active&quot;"/>
                <item name="Inactive" value="&quot;Inactive&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$properties.properties.templateDeploymentOptions" options="template-deployment-options tmplt-deploy-opt" group="Properties">
          <help short="The template deployment options."/>
          <arg nullable="True" type="array<string>" var="$properties.properties.templateDeploymentOptions.preflightOptions" options="preflight-options">
            <item nullable="True" type="string">
              <enum>
                <item name="ContinueDeploymentOnFailure" value="&quot;ContinueDeploymentOnFailure&quot;"/>
                <item name="DefaultValidationOnly" value="&quot;DefaultValidationOnly&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
              </enum>
            </item>
          </arg>
          <arg nullable="True" type="boolean" var="$properties.properties.templateDeploymentOptions.preflightSupported" options="preflight-supported"/>
        </arg>
        <arg nullable="True" type="@TokenAuthConfiguration_update" var="$properties.properties.tokenAuthConfiguration" options="token-auth-configuration token-auth-config" group="Properties">
          <help short="The token auth configuration."/>
        </arg>
      </argGroup>
      <argGroup name="RequestHeaderOptions">
        <arg nullable="True" type="string" var="$properties.properties.requestHeaderOptions.optInHeaders" options="opt-in-headers" group="RequestHeaderOptions">
          <help short="The opt-in headers."/>
          <enum>
            <item name="ClientGroupMembership" value="&quot;ClientGroupMembership&quot;"/>
            <item name="ClientPrincipalNameEncoded" value="&quot;ClientPrincipalNameEncoded&quot;"/>
            <item name="MSIResourceIdEncoded" value="&quot;MSIResourceIdEncoded&quot;"/>
            <item name="ManagementGroupAncestorsEncoded" value="&quot;ManagementGroupAncestorsEncoded&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="PrivateLinkId" value="&quot;PrivateLinkId&quot;"/>
            <item name="PrivateLinkResourceId" value="&quot;PrivateLinkResourceId&quot;"/>
            <item name="PrivateLinkVnetTrafficTag" value="&quot;PrivateLinkVnetTrafficTag&quot;"/>
            <item name="ResourceGroupLocation" value="&quot;ResourceGroupLocation&quot;"/>
            <item name="SignedAuxiliaryTokens" value="&quot;SignedAuxiliaryTokens&quot;"/>
            <item name="SignedUserToken" value="&quot;SignedUserToken&quot;"/>
            <item name="UnboundedClientGroupMembership" value="&quot;UnboundedClientGroupMembership&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$properties.properties.requestHeaderOptions.optOutHeaders" options="opt-out-headers" group="RequestHeaderOptions">
          <help short="The opt-out headers."/>
          <enum>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="SystemDataCreatedByLastModifiedBy" value="&quot;SystemDataCreatedByLastModifiedBy&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="SubscriptionLifecycleNotificationSpecifications">
        <arg nullable="True" type="duration" var="$properties.properties.subscriptionLifecycleNotificationSpecifications.softDeleteTTL" options="soft-delete-ttl" group="SubscriptionLifecycleNotificationSpecifications">
          <help short="The soft delete time to live."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions" options="subscription-state-override-actions override-actions" group="SubscriptionLifecycleNotificationSpecifications">
          <help short="The subscription state override actions."/>
          <item nullable="True" type="object">
            <arg type="string" var="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions[].action" options="action">
              <enum>
                <item name="BillingCancellation" value="&quot;BillingCancellation&quot;"/>
                <item name="DeleteAllResources" value="&quot;DeleteAllResources&quot;"/>
                <item name="NoOp" value="&quot;NoOp&quot;"/>
                <item name="NotDefined" value="&quot;NotDefined&quot;"/>
                <item name="SoftDeleteAllResources" value="&quot;SoftDeleteAllResources&quot;"/>
                <item name="UndoSoftDelete" value="&quot;UndoSoftDelete&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions[].state" options="state">
              <enum>
                <item name="Deleted" value="&quot;Deleted&quot;"/>
                <item name="Registered" value="&quot;Registered&quot;"/>
                <item name="Suspended" value="&quot;Suspended&quot;"/>
                <item name="SuspendedToDeleted" value="&quot;SuspendedToDeleted&quot;"/>
                <item name="SuspendedToRegistered" value="&quot;SuspendedToRegistered&quot;"/>
                <item name="SuspendedToUnregistered" value="&quot;SuspendedToUnregistered&quot;"/>
                <item name="SuspendedToWarned" value="&quot;SuspendedToWarned&quot;"/>
                <item name="Unregistered" value="&quot;Unregistered&quot;"/>
                <item name="Warned" value="&quot;Warned&quot;"/>
                <item name="WarnedToDeleted" value="&quot;WarnedToDeleted&quot;"/>
                <item name="WarnedToRegistered" value="&quot;WarnedToRegistered&quot;"/>
                <item name="WarnedToSuspended" value="&quot;WarnedToSuspended&quot;"/>
                <item name="WarnedToUnregistered" value="&quot;WarnedToUnregistered&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ProviderRegistrations_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}">
          <request method="get">
            <path>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ProviderRegistration_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.ProviderHub/providerRegistrations/{}"/>
                  </prop>
                  <prop type="string" name="kind">
                    <default value="&quot;Managed&quot;"/>
                    <enum>
                      <item value="&quot;Direct&quot;"/>
                      <item value="&quot;Hybrid&quot;"/>
                      <item value="&quot;Managed&quot;"/>
                    </enum>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="capabilities" identifiers="quotaId">
                      <item type="object">
                        <prop type="string" name="effect" required="True">
                          <enum>
                            <item value="&quot;Allow&quot;"/>
                            <item value="&quot;Disallow&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="quotaId" required="True"/>
                        <prop type="array<string>" name="requiredFeatures">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="crossTenantTokenValidation">
                      <enum>
                        <item value="&quot;EnsureSecureValidation&quot;"/>
                        <item value="&quot;PassthroughInsecureToken&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="customManifestVersion"/>
                    <prop type="object" name="dstsConfiguration">
                      <prop type="string" name="serviceDnsName"/>
                      <prop type="string" name="serviceName" required="True"/>
                    </prop>
                    <prop nullable="True" type="boolean" name="enableTenantLinkedNotification"/>
                    <prop type="object" name="featuresRule">
                      <prop type="string" name="requiredFeaturesPolicy" required="True">
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Any&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="globalNotificationEndpoints">
                      <item type="object" cls="ResourceProviderEndpoint_read">
                        <prop type="array<string>" name="apiVersions">
                          <item type="string"/>
                        </prop>
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="endpointType">
                          <enum>
                            <item value="&quot;Canary&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Production&quot;"/>
                            <item value="&quot;TestInProduction&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="endpointUri"/>
                        <prop type="object" name="featuresRule">
                          <prop type="string" name="requiredFeaturesPolicy" required="True">
                            <enum>
                              <item value="&quot;All&quot;"/>
                              <item value="&quot;Any&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="array<string>" name="locations">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="requiredFeatures">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="skuLink"/>
                        <prop type="duration" name="timeout"/>
                      </item>
                    </prop>
                    <prop type="string" name="legacyNamespace"/>
                    <prop type="array<string>" name="legacyRegistrations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="linkedNotificationRules">
                      <item type="object">
                        <prop type="array<string>" name="actions">
                          <item type="string"/>
                        </prop>
                        <prop type="object" name="dstsConfiguration">
                          <prop type="string" name="serviceDnsName"/>
                          <prop type="string" name="serviceName" required="True"/>
                        </prop>
                        <prop type="array<@ResourceProviderEndpoint_read>" name="endpoints">
                          <item type="@ResourceProviderEndpoint_read"/>
                        </prop>
                        <prop type="object" name="tokenAuthConfiguration" cls="TokenAuthConfiguration_read">
                          <prop type="string" name="authenticationScheme">
                            <enum>
                              <item value="&quot;Bearer&quot;"/>
                              <item value="&quot;PoP&quot;"/>
                            </enum>
                          </prop>
                          <prop type="boolean" name="disableCertificateAuthenticationFallback"/>
                          <prop type="string" name="signedRequestScope">
                            <enum>
                              <item value="&quot;Endpoint&quot;"/>
                              <item value="&quot;ResourceUri&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="management">
                      <prop type="array<string>" name="authorizationOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="canaryManifestOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="object" name="errorResponseMessageOptions">
                        <prop type="string" name="serverFailureResponseMessageType">
                          <enum>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;OutageReporting&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="expeditedRolloutMetadata">
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="expeditedRolloutIntent">
                          <enum>
                            <item value="&quot;Hotfix&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="array<string>" name="expeditedRolloutSubmitters">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="incidentContactEmail"/>
                      <prop type="string" name="incidentRoutingService"/>
                      <prop type="string" name="incidentRoutingTeam"/>
                      <prop type="array<string>" name="manifestOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="pcCode"/>
                      <prop type="string" name="profitCenterProgramId"/>
                      <prop type="string" name="resourceAccessPolicy">
                        <enum>
                          <item value="&quot;AcisActionAllowed&quot;"/>
                          <item value="&quot;AcisReadAllowed&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="resourceAccessRoles">
                        <item type="object">
                          <prop type="array<string>" name="actions">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="allowedGroupClaims">
                            <item type="string"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<string>" name="schemaOwners">
                        <item type="string"/>
                      </prop>
                      <prop type="array<object>" name="serviceTreeInfos">
                        <item type="object">
                          <prop type="string" name="componentId"/>
                          <prop type="string" name="readiness">
                            <enum>
                              <item value="&quot;ClosingDown&quot;"/>
                              <item value="&quot;Deprecated&quot;"/>
                              <item value="&quot;GA&quot;"/>
                              <item value="&quot;InDevelopment&quot;"/>
                              <item value="&quot;InternalOnly&quot;"/>
                              <item value="&quot;PrivatePreview&quot;"/>
                              <item value="&quot;PublicPreview&quot;"/>
                              <item value="&quot;RemovedFromARM&quot;"/>
                              <item value="&quot;Retired&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="serviceId"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<@ResourceProviderEndpoint_read>" name="managementGroupGlobalNotificationEndpoints">
                      <item type="@ResourceProviderEndpoint_read"/>
                    </prop>
                    <prop type="object" name="metadata">
                      <additionalProp anyType="True"/>
                    </prop>
                    <prop type="string" name="namespace"/>
                    <prop type="string" name="notificationOptions">
                      <enum>
                        <item value="&quot;EmitSpendingLimit&quot;"/>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="notificationSettings">
                      <prop type="array<object>" name="subscriberSettings">
                        <item type="object">
                          <prop type="array<object>" name="filterRules">
                            <item type="object">
                              <prop type="array<object>" name="endpointInformation">
                                <item type="object">
                                  <prop type="string" name="endpoint"/>
                                  <prop type="string" name="endpointType">
                                    <enum>
                                      <item value="&quot;Eventhub&quot;"/>
                                      <item value="&quot;Webhook&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="schemaVersion"/>
                                </item>
                              </prop>
                              <prop type="string" name="filterQuery"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="notifications">
                      <item type="object">
                        <prop type="string" name="notificationType">
                          <enum>
                            <item value="&quot;SubscriptionNotification&quot;"/>
                            <item value="&quot;Unspecified&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="skipNotifications">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Unspecified&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<string>" name="optionalFeatures">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="privateResourceProviderConfiguration">
                      <prop type="array<string>" name="allowedSubscriptions">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="providerAuthentication">
                      <prop type="array<string>" name="allowedAudiences" required="True">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="providerAuthorizations">
                      <item type="object" cls="ResourceProviderAuthorization_read">
                        <prop type="array<object>" name="allowedThirdPartyExtensions" identifiers="name">
                          <item type="object">
                            <prop type="string" name="name"/>
                          </item>
                        </prop>
                        <prop type="string" name="applicationId"/>
                        <prop type="string" name="groupingTag"/>
                        <prop type="object" name="managedByAuthorization">
                          <prop type="array<object>" name="additionalAuthorizations" identifiers="roleDefinitionId applicationId">
                            <item type="object">
                              <prop type="string" name="applicationId"/>
                              <prop type="string" name="roleDefinitionId"/>
                            </item>
                          </prop>
                          <prop type="boolean" name="allowManagedByInheritance"/>
                          <prop type="string" name="managedByResourceRoleDefinitionId"/>
                        </prop>
                        <prop type="string" name="managedByRoleDefinitionId"/>
                        <prop type="string" name="roleDefinitionId"/>
                      </item>
                    </prop>
                    <prop type="object" name="providerHubMetadata">
                      <prop type="string" name="directRpRoleDefinitionId"/>
                      <prop type="string" name="globalAsyncOperationResourceTypeName"/>
                      <prop type="object" name="providerAuthentication">
                        <prop type="array<string>" name="allowedAudiences" required="True">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<@ResourceProviderAuthorization_read>" name="providerAuthorizations">
                        <item type="@ResourceProviderAuthorization_read"/>
                      </prop>
                      <prop type="string" name="regionalAsyncOperationResourceTypeName"/>
                      <prop type="object" name="thirdPartyProviderAuthorization">
                        <prop type="array<object>" name="authorizations">
                          <item type="object">
                            <prop type="string" name="principalId" required="True"/>
                            <prop type="string" name="roleDefinitionId" required="True"/>
                          </item>
                        </prop>
                        <prop type="string" name="managedByTenantId"/>
                      </prop>
                    </prop>
                    <prop type="string" name="providerType">
                      <enum>
                        <item value="&quot;AuthorizationFree&quot;"/>
                        <item value="&quot;External&quot;"/>
                        <item value="&quot;Hidden&quot;"/>
                        <item value="&quot;Internal&quot;"/>
                        <item value="&quot;LegacyRegistrationRequired&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RegistrationFree&quot;"/>
                        <item value="&quot;TenantOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="providerVersion"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="requestHeaderOptions">
                      <prop type="string" name="optInHeaders">
                        <enum>
                          <item value="&quot;ClientGroupMembership&quot;"/>
                          <item value="&quot;ClientPrincipalNameEncoded&quot;"/>
                          <item value="&quot;MSIResourceIdEncoded&quot;"/>
                          <item value="&quot;ManagementGroupAncestorsEncoded&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;PrivateLinkId&quot;"/>
                          <item value="&quot;PrivateLinkResourceId&quot;"/>
                          <item value="&quot;PrivateLinkVnetTrafficTag&quot;"/>
                          <item value="&quot;ResourceGroupLocation&quot;"/>
                          <item value="&quot;SignedAuxiliaryTokens&quot;"/>
                          <item value="&quot;SignedUserToken&quot;"/>
                          <item value="&quot;UnboundedClientGroupMembership&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="optOutHeaders">
                        <enum>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;SystemDataCreatedByLastModifiedBy&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="requiredFeatures">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="resourceGroupLockOptionDuringMove">
                      <prop type="string" name="blockActionVerb">
                        <enum>
                          <item value="&quot;Action&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                          <item value="&quot;Read&quot;"/>
                          <item value="&quot;Unrecognized&quot;"/>
                          <item value="&quot;Write&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="resourceHydrationAccounts">
                      <item type="object">
                        <prop type="string" name="accountName"/>
                        <prop type="string" name="encryptedKey"/>
                        <prop type="integer64" name="maxChildResourceConsistencyJobLimit"/>
                        <prop type="string" name="subscriptionId"/>
                      </item>
                    </prop>
                    <prop type="object" name="resourceProviderAuthorizationRules">
                      <prop type="object" name="asyncOperationPollingRules">
                        <prop type="string" name="additionalOptions">
                          <enum>
                            <item value="&quot;ProtectedAsyncOperationPolling&quot;"/>
                            <item value="&quot;ProtectedAsyncOperationPollingAuditOnly&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="authorizationActions">
                          <item type="string"/>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="object" name="responseOptions">
                      <prop type="string" name="serviceClientOptionsType">
                        <enum>
                          <item value="&quot;DisableAutomaticDecompression&quot;"/>
                          <item value="&quot;NotSpecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="serviceName"/>
                    <prop type="array<object>" name="services">
                      <item type="object">
                        <prop type="string" name="serviceName"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Inactive&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="subscriptionLifecycleNotificationSpecifications">
                      <prop type="duration" name="softDeleteTTL"/>
                      <prop type="array<object>" name="subscriptionStateOverrideActions">
                        <item type="object">
                          <prop type="string" name="action" required="True">
                            <enum>
                              <item value="&quot;BillingCancellation&quot;"/>
                              <item value="&quot;DeleteAllResources&quot;"/>
                              <item value="&quot;NoOp&quot;"/>
                              <item value="&quot;NotDefined&quot;"/>
                              <item value="&quot;SoftDeleteAllResources&quot;"/>
                              <item value="&quot;UndoSoftDelete&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="state" required="True">
                            <enum>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Registered&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;SuspendedToDeleted&quot;"/>
                              <item value="&quot;SuspendedToRegistered&quot;"/>
                              <item value="&quot;SuspendedToUnregistered&quot;"/>
                              <item value="&quot;SuspendedToWarned&quot;"/>
                              <item value="&quot;Unregistered&quot;"/>
                              <item value="&quot;Warned&quot;"/>
                              <item value="&quot;WarnedToDeleted&quot;"/>
                              <item value="&quot;WarnedToRegistered&quot;"/>
                              <item value="&quot;WarnedToSuspended&quot;"/>
                              <item value="&quot;WarnedToUnregistered&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="templateDeploymentOptions">
                      <prop type="array<string>" name="preflightOptions">
                        <item type="string">
                          <enum>
                            <item value="&quot;ContinueDeploymentOnFailure&quot;"/>
                            <item value="&quot;DefaultValidationOnly&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </item>
                      </prop>
                      <prop type="boolean" name="preflightSupported"/>
                    </prop>
                    <prop type="@TokenAuthConfiguration_read" name="tokenAuthConfiguration"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="properties" required="True" clientFlatten="True">
              <prop type="string" name="kind" arg="$properties.kind">
                <default value="&quot;Managed&quot;"/>
                <enum>
                  <item value="&quot;Direct&quot;"/>
                  <item value="&quot;Hybrid&quot;"/>
                  <item value="&quot;Managed&quot;"/>
                </enum>
              </prop>
              <prop type="object" name="properties">
                <prop type="array<object>" name="capabilities" arg="$properties.properties.capabilities" identifiers="quotaId">
                  <item type="object">
                    <prop type="string" name="effect" arg="$properties.properties.capabilities[].effect" required="True">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Disallow&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="quotaId" arg="$properties.properties.capabilities[].quotaId" required="True"/>
                    <prop type="array<string>" name="requiredFeatures" arg="$properties.properties.capabilities[].requiredFeatures">
                      <item type="string"/>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="crossTenantTokenValidation" arg="$properties.properties.crossTenantTokenValidation">
                  <enum>
                    <item value="&quot;EnsureSecureValidation&quot;"/>
                    <item value="&quot;PassthroughInsecureToken&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="customManifestVersion" arg="$properties.properties.customManifestVersion"/>
                <prop type="object" name="dstsConfiguration" arg="$properties.properties.dstsConfiguration">
                  <prop type="string" name="serviceDnsName" arg="$properties.properties.dstsConfiguration.serviceDnsName"/>
                  <prop type="string" name="serviceName" arg="$properties.properties.dstsConfiguration.serviceName" required="True"/>
                </prop>
                <prop nullable="True" type="boolean" name="enableTenantLinkedNotification" arg="$properties.properties.enableTenantLinkedNotification"/>
                <prop type="object" name="featuresRule">
                  <prop type="string" name="requiredFeaturesPolicy" arg="$properties.properties.featuresRule.requiredFeaturesPolicy" required="True">
                    <enum>
                      <item value="&quot;All&quot;"/>
                      <item value="&quot;Any&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="array<object>" name="globalNotificationEndpoints" arg="$properties.properties.globalNotificationEndpoints">
                  <item type="object" cls="ResourceProviderEndpoint_update">
                    <prop type="array<string>" name="apiVersions" arg="@ResourceProviderEndpoint_update.apiVersions">
                      <item type="string"/>
                    </prop>
                    <prop type="boolean" name="enabled" arg="@ResourceProviderEndpoint_update.enabled"/>
                    <prop type="string" name="endpointType" arg="@ResourceProviderEndpoint_update.endpointType">
                      <enum>
                        <item value="&quot;Canary&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Production&quot;"/>
                        <item value="&quot;TestInProduction&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="endpointUri" arg="@ResourceProviderEndpoint_update.endpointUri"/>
                    <prop type="object" name="featuresRule" arg="@ResourceProviderEndpoint_update.featuresRule">
                      <prop type="string" name="requiredFeaturesPolicy" arg="@ResourceProviderEndpoint_update.featuresRule.requiredFeaturesPolicy" required="True">
                        <enum>
                          <item value="&quot;All&quot;"/>
                          <item value="&quot;Any&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<string>" name="locations" arg="@ResourceProviderEndpoint_update.locations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="requiredFeatures" arg="@ResourceProviderEndpoint_update.requiredFeatures">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="skuLink" arg="@ResourceProviderEndpoint_update.skuLink"/>
                    <prop type="duration" name="timeout" arg="@ResourceProviderEndpoint_update.timeout"/>
                  </item>
                </prop>
                <prop type="string" name="legacyNamespace" arg="$properties.properties.legacyNamespace"/>
                <prop type="array<string>" name="legacyRegistrations" arg="$properties.properties.legacyRegistrations">
                  <item type="string"/>
                </prop>
                <prop type="array<object>" name="linkedNotificationRules" arg="$properties.properties.linkedNotificationRules">
                  <item type="object">
                    <prop type="array<string>" name="actions" arg="$properties.properties.linkedNotificationRules[].actions">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="dstsConfiguration" arg="$properties.properties.linkedNotificationRules[].dstsConfiguration">
                      <prop type="string" name="serviceDnsName" arg="$properties.properties.linkedNotificationRules[].dstsConfiguration.serviceDnsName"/>
                      <prop type="string" name="serviceName" arg="$properties.properties.linkedNotificationRules[].dstsConfiguration.serviceName" required="True"/>
                    </prop>
                    <prop type="array<@ResourceProviderEndpoint_update>" name="endpoints" arg="$properties.properties.linkedNotificationRules[].endpoints">
                      <item type="@ResourceProviderEndpoint_update"/>
                    </prop>
                    <prop type="object" name="tokenAuthConfiguration" arg="$properties.properties.linkedNotificationRules[].tokenAuthConfiguration" cls="TokenAuthConfiguration_update">
                      <prop type="string" name="authenticationScheme" arg="@TokenAuthConfiguration_update.authenticationScheme">
                        <enum>
                          <item value="&quot;Bearer&quot;"/>
                          <item value="&quot;PoP&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="disableCertificateAuthenticationFallback" arg="@TokenAuthConfiguration_update.disableCertificateAuthenticationFallback"/>
                      <prop type="string" name="signedRequestScope" arg="@TokenAuthConfiguration_update.signedRequestScope">
                        <enum>
                          <item value="&quot;Endpoint&quot;"/>
                          <item value="&quot;ResourceUri&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="object" name="management">
                  <prop type="array<string>" name="authorizationOwners" arg="$properties.properties.management.authorizationOwners">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="canaryManifestOwners" arg="$properties.properties.management.canaryManifestOwners">
                    <item type="string"/>
                  </prop>
                  <prop type="object" name="errorResponseMessageOptions" arg="$properties.properties.management.errorResponseMessageOptions">
                    <prop type="string" name="serverFailureResponseMessageType" arg="$properties.properties.management.errorResponseMessageOptions.serverFailureResponseMessageType">
                      <enum>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;OutageReporting&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="expeditedRolloutMetadata" arg="$properties.properties.management.expeditedRolloutMetadata">
                    <prop type="boolean" name="enabled" arg="$properties.properties.management.expeditedRolloutMetadata.enabled"/>
                    <prop type="string" name="expeditedRolloutIntent" arg="$properties.properties.management.expeditedRolloutMetadata.expeditedRolloutIntent">
                      <enum>
                        <item value="&quot;Hotfix&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="array<string>" name="expeditedRolloutSubmitters" arg="$properties.properties.management.expeditedRolloutSubmitters">
                    <item type="string"/>
                  </prop>
                  <prop type="string" name="incidentContactEmail" arg="$properties.properties.management.incidentContactEmail"/>
                  <prop type="string" name="incidentRoutingService" arg="$properties.properties.management.incidentRoutingService"/>
                  <prop type="string" name="incidentRoutingTeam" arg="$properties.properties.management.incidentRoutingTeam"/>
                  <prop type="array<string>" name="manifestOwners" arg="$properties.properties.management.manifestOwners">
                    <item type="string"/>
                  </prop>
                  <prop type="string" name="pcCode" arg="$properties.properties.management.pcCode"/>
                  <prop type="string" name="profitCenterProgramId" arg="$properties.properties.management.profitCenterProgramId"/>
                  <prop type="string" name="resourceAccessPolicy" arg="$properties.properties.management.resourceAccessPolicy">
                    <enum>
                      <item value="&quot;AcisActionAllowed&quot;"/>
                      <item value="&quot;AcisReadAllowed&quot;"/>
                      <item value="&quot;NotSpecified&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<object>" name="resourceAccessRoles" arg="$properties.properties.management.resourceAccessRoles">
                    <item type="object">
                      <prop type="array<string>" name="actions" arg="$properties.properties.management.resourceAccessRoles[].actions">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="allowedGroupClaims" arg="$properties.properties.management.resourceAccessRoles[].allowedGroupClaims">
                        <item type="string"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<string>" name="schemaOwners" arg="$properties.properties.management.schemaOwners">
                    <item type="string"/>
                  </prop>
                  <prop type="array<object>" name="serviceTreeInfos" arg="$properties.properties.management.serviceTreeInfos">
                    <item type="object">
                      <prop type="string" name="componentId" arg="$properties.properties.management.serviceTreeInfos[].componentId"/>
                      <prop type="string" name="readiness" arg="$properties.properties.management.serviceTreeInfos[].readiness">
                        <enum>
                          <item value="&quot;ClosingDown&quot;"/>
                          <item value="&quot;Deprecated&quot;"/>
                          <item value="&quot;GA&quot;"/>
                          <item value="&quot;InDevelopment&quot;"/>
                          <item value="&quot;InternalOnly&quot;"/>
                          <item value="&quot;PrivatePreview&quot;"/>
                          <item value="&quot;PublicPreview&quot;"/>
                          <item value="&quot;RemovedFromARM&quot;"/>
                          <item value="&quot;Retired&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="serviceId" arg="$properties.properties.management.serviceTreeInfos[].serviceId"/>
                    </item>
                  </prop>
                </prop>
                <prop type="array<@ResourceProviderEndpoint_update>" name="managementGroupGlobalNotificationEndpoints" arg="$properties.properties.managementGroupGlobalNotificationEndpoints">
                  <item type="@ResourceProviderEndpoint_update"/>
                </prop>
                <prop type="object" name="metadata" arg="$properties.properties.metadata">
                  <additionalProp anyType="True"/>
                </prop>
                <prop type="string" name="namespace" arg="$properties.properties.namespace"/>
                <prop type="string" name="notificationOptions" arg="$properties.properties.notificationOptions">
                  <enum>
                    <item value="&quot;EmitSpendingLimit&quot;"/>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;NotSpecified&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="notificationSettings" arg="$properties.properties.notificationSettings">
                  <prop type="array<object>" name="subscriberSettings" arg="$properties.properties.notificationSettings.subscriberSettings">
                    <item type="object">
                      <prop type="array<object>" name="filterRules" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules">
                        <item type="object">
                          <prop type="array<object>" name="endpointInformation" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation">
                            <item type="object">
                              <prop type="string" name="endpoint" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].endpoint"/>
                              <prop type="string" name="endpointType" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].endpointType">
                                <enum>
                                  <item value="&quot;Eventhub&quot;"/>
                                  <item value="&quot;Webhook&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="schemaVersion" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].endpointInformation[].schemaVersion"/>
                            </item>
                          </prop>
                          <prop type="string" name="filterQuery" arg="$properties.properties.notificationSettings.subscriberSettings[].filterRules[].filterQuery"/>
                        </item>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="array<object>" name="notifications" arg="$properties.properties.notifications">
                  <item type="object">
                    <prop type="string" name="notificationType" arg="$properties.properties.notifications[].notificationType">
                      <enum>
                        <item value="&quot;SubscriptionNotification&quot;"/>
                        <item value="&quot;Unspecified&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="skipNotifications" arg="$properties.properties.notifications[].skipNotifications">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;Unspecified&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="array<string>" name="optionalFeatures" arg="$properties.properties.optionalFeatures">
                  <item type="string"/>
                </prop>
                <prop type="object" name="privateResourceProviderConfiguration" arg="$properties.properties.privateResourceProviderConfiguration">
                  <prop type="array<string>" name="allowedSubscriptions" arg="$properties.properties.privateResourceProviderConfiguration.allowedSubscriptions">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="object" name="providerAuthentication" arg="$properties.properties.providerAuthentication">
                  <prop type="array<string>" name="allowedAudiences" arg="$properties.properties.providerAuthentication.allowedAudiences" required="True">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="array<object>" name="providerAuthorizations" arg="$properties.properties.providerAuthorizations">
                  <item type="object" cls="ResourceProviderAuthorization_update">
                    <prop type="array<object>" name="allowedThirdPartyExtensions" arg="@ResourceProviderAuthorization_update.allowedThirdPartyExtensions" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" arg="@ResourceProviderAuthorization_update.allowedThirdPartyExtensions[].name"/>
                      </item>
                    </prop>
                    <prop type="string" name="applicationId" arg="@ResourceProviderAuthorization_update.applicationId"/>
                    <prop type="string" name="groupingTag" arg="@ResourceProviderAuthorization_update.groupingTag"/>
                    <prop type="object" name="managedByAuthorization" arg="@ResourceProviderAuthorization_update.managedByAuthorization">
                      <prop type="array<object>" name="additionalAuthorizations" arg="@ResourceProviderAuthorization_update.managedByAuthorization.additionalAuthorizations" identifiers="roleDefinitionId applicationId">
                        <item type="object">
                          <prop type="string" name="applicationId" arg="@ResourceProviderAuthorization_update.managedByAuthorization.additionalAuthorizations[].applicationId"/>
                          <prop type="string" name="roleDefinitionId" arg="@ResourceProviderAuthorization_update.managedByAuthorization.additionalAuthorizations[].roleDefinitionId"/>
                        </item>
                      </prop>
                      <prop type="boolean" name="allowManagedByInheritance" arg="@ResourceProviderAuthorization_update.managedByAuthorization.allowManagedByInheritance"/>
                      <prop type="string" name="managedByResourceRoleDefinitionId" arg="@ResourceProviderAuthorization_update.managedByAuthorization.managedByResourceRoleDefinitionId"/>
                    </prop>
                    <prop type="string" name="managedByRoleDefinitionId" arg="@ResourceProviderAuthorization_update.managedByRoleDefinitionId"/>
                    <prop type="string" name="roleDefinitionId" arg="@ResourceProviderAuthorization_update.roleDefinitionId"/>
                  </item>
                </prop>
                <prop type="object" name="providerHubMetadata" arg="$properties.properties.providerHubMetadata">
                  <prop type="string" name="directRpRoleDefinitionId" arg="$properties.properties.providerHubMetadata.directRpRoleDefinitionId"/>
                  <prop type="string" name="globalAsyncOperationResourceTypeName" arg="$properties.properties.providerHubMetadata.globalAsyncOperationResourceTypeName"/>
                  <prop type="object" name="providerAuthentication" arg="$properties.properties.providerHubMetadata.providerAuthentication">
                    <prop type="array<string>" name="allowedAudiences" arg="$properties.properties.providerHubMetadata.providerAuthentication.allowedAudiences" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="array<@ResourceProviderAuthorization_update>" name="providerAuthorizations" arg="$properties.properties.providerHubMetadata.providerAuthorizations">
                    <item type="@ResourceProviderAuthorization_update"/>
                  </prop>
                  <prop type="string" name="regionalAsyncOperationResourceTypeName" arg="$properties.properties.providerHubMetadata.regionalAsyncOperationResourceTypeName"/>
                  <prop type="object" name="thirdPartyProviderAuthorization" arg="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization">
                    <prop type="array<object>" name="authorizations" arg="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations">
                      <item type="object">
                        <prop type="string" name="principalId" arg="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations[].principalId" required="True"/>
                        <prop type="string" name="roleDefinitionId" arg="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.authorizations[].roleDefinitionId" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="managedByTenantId" arg="$properties.properties.providerHubMetadata.thirdPartyProviderAuthorization.managedByTenantId"/>
                  </prop>
                </prop>
                <prop type="string" name="providerType" arg="$properties.properties.providerType">
                  <enum>
                    <item value="&quot;AuthorizationFree&quot;"/>
                    <item value="&quot;External&quot;"/>
                    <item value="&quot;Hidden&quot;"/>
                    <item value="&quot;Internal&quot;"/>
                    <item value="&quot;LegacyRegistrationRequired&quot;"/>
                    <item value="&quot;NotSpecified&quot;"/>
                    <item value="&quot;RegistrationFree&quot;"/>
                    <item value="&quot;TenantOnly&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="providerVersion" arg="$properties.properties.providerVersion"/>
                <prop type="object" name="requestHeaderOptions">
                  <prop type="string" name="optInHeaders" arg="$properties.properties.requestHeaderOptions.optInHeaders">
                    <enum>
                      <item value="&quot;ClientGroupMembership&quot;"/>
                      <item value="&quot;ClientPrincipalNameEncoded&quot;"/>
                      <item value="&quot;MSIResourceIdEncoded&quot;"/>
                      <item value="&quot;ManagementGroupAncestorsEncoded&quot;"/>
                      <item value="&quot;NotSpecified&quot;"/>
                      <item value="&quot;PrivateLinkId&quot;"/>
                      <item value="&quot;PrivateLinkResourceId&quot;"/>
                      <item value="&quot;PrivateLinkVnetTrafficTag&quot;"/>
                      <item value="&quot;ResourceGroupLocation&quot;"/>
                      <item value="&quot;SignedAuxiliaryTokens&quot;"/>
                      <item value="&quot;SignedUserToken&quot;"/>
                      <item value="&quot;UnboundedClientGroupMembership&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="optOutHeaders" arg="$properties.properties.requestHeaderOptions.optOutHeaders">
                    <enum>
                      <item value="&quot;NotSpecified&quot;"/>
                      <item value="&quot;SystemDataCreatedByLastModifiedBy&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="array<string>" name="requiredFeatures" arg="$properties.properties.requiredFeatures">
                  <item type="string"/>
                </prop>
                <prop type="object" name="resourceGroupLockOptionDuringMove" arg="$properties.properties.resourceGroupLockOptionDuringMove">
                  <prop type="string" name="blockActionVerb" arg="$properties.properties.resourceGroupLockOptionDuringMove.blockActionVerb">
                    <enum>
                      <item value="&quot;Action&quot;"/>
                      <item value="&quot;Delete&quot;"/>
                      <item value="&quot;NotSpecified&quot;"/>
                      <item value="&quot;Read&quot;"/>
                      <item value="&quot;Unrecognized&quot;"/>
                      <item value="&quot;Write&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="array<object>" name="resourceHydrationAccounts" arg="$properties.properties.resourceHydrationAccounts">
                  <item type="object">
                    <prop type="string" name="accountName" arg="$properties.properties.resourceHydrationAccounts[].accountName"/>
                    <prop type="string" name="encryptedKey" arg="$properties.properties.resourceHydrationAccounts[].encryptedKey"/>
                    <prop type="integer64" name="maxChildResourceConsistencyJobLimit" arg="$properties.properties.resourceHydrationAccounts[].maxChildResourceConsistencyJobLimit"/>
                    <prop type="string" name="subscriptionId" arg="$properties.properties.resourceHydrationAccounts[].subscriptionId"/>
                  </item>
                </prop>
                <prop type="object" name="resourceProviderAuthorizationRules" arg="$properties.properties.resourceProviderAuthorizationRules">
                  <prop type="object" name="asyncOperationPollingRules" arg="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules">
                    <prop type="string" name="additionalOptions" arg="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules.additionalOptions">
                      <enum>
                        <item value="&quot;ProtectedAsyncOperationPolling&quot;"/>
                        <item value="&quot;ProtectedAsyncOperationPollingAuditOnly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="authorizationActions" arg="$properties.properties.resourceProviderAuthorizationRules.asyncOperationPollingRules.authorizationActions">
                      <item type="string"/>
                    </prop>
                  </prop>
                </prop>
                <prop type="object" name="responseOptions" arg="$properties.properties.responseOptions">
                  <prop type="string" name="serviceClientOptionsType" arg="$properties.properties.responseOptions.serviceClientOptionsType">
                    <enum>
                      <item value="&quot;DisableAutomaticDecompression&quot;"/>
                      <item value="&quot;NotSpecified&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="string" name="serviceName" arg="$properties.properties.serviceName"/>
                <prop type="array<object>" name="services" arg="$properties.properties.services">
                  <item type="object">
                    <prop type="string" name="serviceName" arg="$properties.properties.services[].serviceName"/>
                    <prop type="string" name="status" arg="$properties.properties.services[].status">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Inactive&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="object" name="subscriptionLifecycleNotificationSpecifications">
                  <prop type="duration" name="softDeleteTTL" arg="$properties.properties.subscriptionLifecycleNotificationSpecifications.softDeleteTTL"/>
                  <prop type="array<object>" name="subscriptionStateOverrideActions" arg="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions">
                    <item type="object">
                      <prop type="string" name="action" arg="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions[].action" required="True">
                        <enum>
                          <item value="&quot;BillingCancellation&quot;"/>
                          <item value="&quot;DeleteAllResources&quot;"/>
                          <item value="&quot;NoOp&quot;"/>
                          <item value="&quot;NotDefined&quot;"/>
                          <item value="&quot;SoftDeleteAllResources&quot;"/>
                          <item value="&quot;UndoSoftDelete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state" arg="$properties.properties.subscriptionLifecycleNotificationSpecifications.subscriptionStateOverrideActions[].state" required="True">
                        <enum>
                          <item value="&quot;Deleted&quot;"/>
                          <item value="&quot;Registered&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;SuspendedToDeleted&quot;"/>
                          <item value="&quot;SuspendedToRegistered&quot;"/>
                          <item value="&quot;SuspendedToUnregistered&quot;"/>
                          <item value="&quot;SuspendedToWarned&quot;"/>
                          <item value="&quot;Unregistered&quot;"/>
                          <item value="&quot;Warned&quot;"/>
                          <item value="&quot;WarnedToDeleted&quot;"/>
                          <item value="&quot;WarnedToRegistered&quot;"/>
                          <item value="&quot;WarnedToSuspended&quot;"/>
                          <item value="&quot;WarnedToUnregistered&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="templateDeploymentOptions" arg="$properties.properties.templateDeploymentOptions">
                  <prop type="array<string>" name="preflightOptions" arg="$properties.properties.templateDeploymentOptions.preflightOptions">
                    <item type="string">
                      <enum>
                        <item value="&quot;ContinueDeploymentOnFailure&quot;"/>
                        <item value="&quot;DefaultValidationOnly&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </item>
                  </prop>
                  <prop type="boolean" name="preflightSupported" arg="$properties.properties.templateDeploymentOptions.preflightSupported"/>
                </prop>
                <prop type="@TokenAuthConfiguration_update" name="tokenAuthConfiguration" arg="$properties.properties.tokenAuthConfiguration"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ProviderRegistrations_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ProviderHub/providerRegistrations/{providerNamespace}">
          <request method="put">
            <path>
              <param type="string" name="providerNamespace" arg="$Path.providerNamespace" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-04-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ProviderRegistration_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
