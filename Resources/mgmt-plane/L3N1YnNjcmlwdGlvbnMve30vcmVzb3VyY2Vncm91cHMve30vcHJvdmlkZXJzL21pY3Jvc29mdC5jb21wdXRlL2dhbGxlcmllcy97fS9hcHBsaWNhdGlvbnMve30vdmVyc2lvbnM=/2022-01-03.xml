<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/applications/{}/versions" version="2022-01-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9hcHBsaWNhdGlvbnMve2dhbGxlcnlBcHBsaWNhdGlvbk5hbWV9L3ZlcnNpb25z/V/MjAyMi0wMS0wMw=="/>
  <commandGroup name="sig gallery-application version">
    <command name="list" version="2022-01-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/applications/{}/versions" version="2022-01-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9hcHBsaWNhdGlvbnMve2dhbGxlcnlBcHBsaWNhdGlvbk5hbWV9L3ZlcnNpb25z/V/MjAyMi0wMS0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryApplicationName" options="gallery-application-name application-name" required="True" group="">
          <help short="The name of the gallery application."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="">
          <help short="Gallery name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <operation operationId="GalleryApplicationVersions_ListByGalleryApplication">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{galleryApplicationName}/versions">
          <request method="get">
            <path>
              <param type="string" name="galleryApplicationName" arg="$Path.galleryApplicationName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/applications/{}/versions/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Migrating&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="publishingProfile" required="True">
                          <prop type="object" name="advancedSettings">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop type="boolean" name="enableHealthCheck"/>
                          <prop type="dateTime" name="endOfLifeDate"/>
                          <prop type="boolean" name="excludeFromLatest"/>
                          <prop type="object" name="manageActions">
                            <prop type="string" name="install" required="True"/>
                            <prop type="string" name="remove" required="True"/>
                            <prop type="string" name="update"/>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="publishedDate"/>
                          <prop type="integer32" name="replicaCount"/>
                          <prop type="string" name="replicationMode">
                            <enum>
                              <item value="&quot;Full&quot;"/>
                              <item value="&quot;Shallow&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="settings">
                            <prop type="string" name="configFileName"/>
                            <prop type="string" name="packageFileName"/>
                          </prop>
                          <prop type="object" name="source" required="True">
                            <prop type="string" name="defaultConfigurationLink"/>
                            <prop type="string" name="mediaLink" required="True"/>
                          </prop>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<object>" name="targetExtendedLocations">
                            <item type="object">
                              <prop type="@EncryptionImages_read" name="encryption"/>
                              <prop type="object" name="extendedLocation">
                                <prop type="string" name="name"/>
                                <prop type="string" name="type">
                                  <enum>
                                    <item value="&quot;EdgeZone&quot;"/>
                                    <item value="&quot;Unknown&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="integer32" name="extendedLocationReplicaCount"/>
                              <prop type="string" name="name"/>
                              <prop type="string" name="storageAccountType">
                                <enum>
                                  <item value="&quot;Premium_LRS&quot;"/>
                                  <item value="&quot;Standard_LRS&quot;"/>
                                  <item value="&quot;Standard_ZRS&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="array<object>" name="targetRegions">
                            <item type="object">
                              <prop type="object" name="encryption" cls="EncryptionImages_read">
                                <prop type="array<object>" name="dataDiskImages">
                                  <item type="object">
                                    <prop type="string" name="diskEncryptionSetId"/>
                                    <prop type="integer32" name="lun" required="True"/>
                                  </item>
                                </prop>
                                <prop type="object" name="osDiskImage">
                                  <prop type="string" name="diskEncryptionSetId"/>
                                  <prop type="object" name="securityProfile">
                                    <prop type="string" name="confidentialVMEncryptionType">
                                      <enum>
                                        <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                        <item value="&quot;EncryptedWithCmk&quot;"/>
                                        <item value="&quot;EncryptedWithPmk&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="secureVMDiskEncryptionSetId"/>
                                  </prop>
                                </prop>
                              </prop>
                              <prop type="string" name="name" required="True"/>
                              <prop type="integer32" name="regionalReplicaCount"/>
                              <prop type="string" name="storageAccountType">
                                <enum>
                                  <item value="&quot;Premium_LRS&quot;"/>
                                  <item value="&quot;Standard_LRS&quot;"/>
                                  <item value="&quot;Standard_ZRS&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="replicationStatus">
                          <prop readOnly="True" type="string" name="aggregatedState">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="summary">
                            <item type="object">
                              <prop readOnly="True" type="string" name="details"/>
                              <prop readOnly="True" type="integer32" name="progress"/>
                              <prop readOnly="True" type="string" name="region"/>
                              <prop readOnly="True" type="string" name="state">
                                <enum>
                                  <item value="&quot;Completed&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Replicating&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
