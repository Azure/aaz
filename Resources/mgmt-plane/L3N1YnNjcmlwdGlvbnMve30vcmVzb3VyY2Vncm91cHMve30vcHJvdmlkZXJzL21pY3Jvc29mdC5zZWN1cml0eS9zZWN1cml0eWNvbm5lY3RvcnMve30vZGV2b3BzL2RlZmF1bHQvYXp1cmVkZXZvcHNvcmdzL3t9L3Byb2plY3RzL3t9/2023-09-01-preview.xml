<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}/devops/default/azuredevopsorgs/{}/projects/{}" version="2023-09-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9L2Rldm9wcy9kZWZhdWx0L2F6dXJlRGV2T3BzT3Jncy97b3JnTmFtZX0vcHJvamVjdHMve3Byb2plY3ROYW1lfQ==/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
  <commandGroup name="security security-connector devops azuredevopsorg project">
    <command name="show" version="2023-09-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}/devops/default/azuredevopsorgs/{}/projects/{}" version="2023-09-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9L2Rldm9wcy9kZWZhdWx0L2F6dXJlRGV2T3BzT3Jncy97b3JnTmFtZX0vcHJvamVjdHMve3Byb2plY3ROYW1lfQ==/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.orgName" options="org-name" required="True" idPart="child_name_2">
          <help short="The Azure DevOps organization name."/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name" required="True" group="" idPart="child_name_3">
          <help short="The project name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityConnectorName" options="security-connector-name name n" required="True" group="" idPart="name">
          <help short="The security connector name."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AzureDevOpsProjects_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects/{projectName}">
          <request method="get">
            <path>
              <param type="string" name="orgName" arg="$Path.orgName" required="True"/>
              <param type="string" name="projectName" arg="$Path.projectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="securityConnectorName" arg="$Path.securityConnectorName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Security/securityConnectors/{}/devops/default/azureDevOpsOrgs/{}/projects/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="actionableRemediation">
                      <prop type="object" name="branchConfiguration">
                        <prop type="string" name="annotateDefaultBranch">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="branchNames">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="categoryConfigurations">
                        <item type="object">
                          <prop type="string" name="category">
                            <enum>
                              <item value="&quot;Artifacts&quot;"/>
                              <item value="&quot;Code&quot;"/>
                              <item value="&quot;Containers&quot;"/>
                              <item value="&quot;Dependencies&quot;"/>
                              <item value="&quot;IaC&quot;"/>
                              <item value="&quot;Secrets&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="minimumSeverityLevel"/>
                        </item>
                      </prop>
                      <prop type="string" name="inheritFromParentState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="onboardingState">
                      <enum>
                        <item value="&quot;NotApplicable&quot;"/>
                        <item value="&quot;NotOnboarded&quot;"/>
                        <item value="&quot;Onboarded&quot;"/>
                        <item value="&quot;OnboardedByOtherConnector&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="parentOrgName"/>
                    <prop readOnly="True" type="string" name="projectId"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningStatusMessage"/>
                    <prop readOnly="True" type="dateTime" name="provisioningStatusUpdateTimeUtc"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2023-09-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}/devops/default/azuredevopsorgs/{}/projects/{}" version="2023-09-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9L2Rldm9wcy9kZWZhdWx0L2F6dXJlRGV2T3BzT3Jncy97b3JnTmFtZX0vcHJvamVjdHMve3Byb2plY3ROYW1lfQ==/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.orgName" options="org-name" required="True" idPart="child_name_2">
          <help short="The Azure DevOps organization name."/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name" required="True" group="" idPart="child_name_3">
          <help short="The project name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityConnectorName" options="security-connector-name name n" required="True" group="" idPart="name">
          <help short="The security connector name."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$azureDevOpsProject.properties.actionableRemediation" options="actionable-remediation" group="Properties">
          <help short="Configuration payload for PR Annotations."/>
          <arg type="object" var="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration" options="branch-configuration">
            <help short="Repository branch configuration for PR Annotations."/>
            <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration.annotateDefaultBranch" options="annotate-default-branch" group="">
              <help short="Configuration of PR Annotations on default branch. Enabled - PR Annotations are enabled on the resource's default branch. Disabled - PR Annotations are disabled on the resource's default branch."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg type="array<string>" var="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration.branchNames" options="branch-names">
              <help short="Gets or sets branches that should have annotations."/>
              <item type="string"/>
            </arg>
          </arg>
          <arg type="array<object>" var="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations" options="category-configurations">
            <help short="Gets or sets list of categories and severity levels."/>
            <item type="object">
              <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations[].category" options="category" group="">
                <help short="Rule categories. Code - code scanning results. Artifact scanning results. Dependencies scanning results. IaC results. Secrets scanning results. Container scanning results."/>
                <enum>
                  <item name="Artifacts" value="&quot;Artifacts&quot;"/>
                  <item name="Code" value="&quot;Code&quot;"/>
                  <item name="Containers" value="&quot;Containers&quot;"/>
                  <item name="Dependencies" value="&quot;Dependencies&quot;"/>
                  <item name="IaC" value="&quot;IaC&quot;"/>
                  <item name="Secrets" value="&quot;Secrets&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations[].minimumSeverityLevel" options="minimum-severity-level">
                <help short="Gets or sets minimum severity level for a given category."/>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.inheritFromParentState" options="inherit-from-parent-state" group="">
            <help short="Update Settings. Enabled - Resource should inherit configurations from parent. Disabled - Resource should not inherit configurations from parent."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.state" options="state" group="">
            <help short="ActionableRemediation Setting. None - the setting was never set. Enabled - ActionableRemediation is enabled. Disabled - ActionableRemediation is disabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$azureDevOpsProject.properties.onboardingState" options="onboarding-state" hide="True" group="Properties">
          <help short="Details about resource onboarding status across all connectors. OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources. Onboarded - this resource has already been onboarded by the specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding state is not applicable to the current endpoint."/>
          <enum>
            <item name="NotApplicable" value="&quot;NotApplicable&quot;"/>
            <item name="NotOnboarded" value="&quot;NotOnboarded&quot;"/>
            <item name="Onboarded" value="&quot;Onboarded&quot;"/>
            <item name="OnboardedByOtherConnector" value="&quot;OnboardedByOtherConnector&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$azureDevOpsProject.properties.parentOrgName" options="parent-org-name" hide="True" group="Properties">
          <help short="Gets or sets parent Azure DevOps Organization name."/>
        </arg>
        <arg type="string" var="$azureDevOpsProject.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the resource. Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion successful. DeletionFailure - Deletion failure."/>
          <enum>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="DeletionFailure" value="&quot;DeletionFailure&quot;"/>
            <item name="DeletionSuccess" value="&quot;DeletionSuccess&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="Pending" value="&quot;Pending&quot;"/>
            <item name="PendingDeletion" value="&quot;PendingDeletion&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="AzureDevOpsProjects_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects/{projectName}">
          <request method="put">
            <path>
              <param type="string" name="orgName" arg="$Path.orgName" required="True"/>
              <param type="string" name="projectName" arg="$Path.projectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="securityConnectorName" arg="$Path.securityConnectorName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="azureDevOpsProject" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="object" name="actionableRemediation" arg="$azureDevOpsProject.properties.actionableRemediation">
                      <prop type="object" name="branchConfiguration" arg="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration">
                        <prop type="string" name="annotateDefaultBranch" arg="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration.annotateDefaultBranch">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="branchNames" arg="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration.branchNames">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="categoryConfigurations" arg="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations">
                        <item type="object">
                          <prop type="string" name="category" arg="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations[].category">
                            <enum>
                              <item value="&quot;Artifacts&quot;"/>
                              <item value="&quot;Code&quot;"/>
                              <item value="&quot;Containers&quot;"/>
                              <item value="&quot;Dependencies&quot;"/>
                              <item value="&quot;IaC&quot;"/>
                              <item value="&quot;Secrets&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="minimumSeverityLevel" arg="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations[].minimumSeverityLevel"/>
                        </item>
                      </prop>
                      <prop type="string" name="inheritFromParentState" arg="$azureDevOpsProject.properties.actionableRemediation.inheritFromParentState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state" arg="$azureDevOpsProject.properties.actionableRemediation.state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="onboardingState" arg="$azureDevOpsProject.properties.onboardingState">
                      <enum>
                        <item value="&quot;NotApplicable&quot;"/>
                        <item value="&quot;NotOnboarded&quot;"/>
                        <item value="&quot;Onboarded&quot;"/>
                        <item value="&quot;OnboardedByOtherConnector&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="parentOrgName" arg="$azureDevOpsProject.properties.parentOrgName"/>
                    <prop type="string" name="provisioningState" arg="$azureDevOpsProject.properties.provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Security/securityConnectors/{}/devops/default/azureDevOpsOrgs/{}/projects/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="actionableRemediation">
                      <prop type="object" name="branchConfiguration">
                        <prop type="string" name="annotateDefaultBranch">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="branchNames">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="categoryConfigurations">
                        <item type="object">
                          <prop type="string" name="category">
                            <enum>
                              <item value="&quot;Artifacts&quot;"/>
                              <item value="&quot;Code&quot;"/>
                              <item value="&quot;Containers&quot;"/>
                              <item value="&quot;Dependencies&quot;"/>
                              <item value="&quot;IaC&quot;"/>
                              <item value="&quot;Secrets&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="minimumSeverityLevel"/>
                        </item>
                      </prop>
                      <prop type="string" name="inheritFromParentState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="onboardingState">
                      <enum>
                        <item value="&quot;NotApplicable&quot;"/>
                        <item value="&quot;NotOnboarded&quot;"/>
                        <item value="&quot;Onboarded&quot;"/>
                        <item value="&quot;OnboardedByOtherConnector&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="parentOrgName"/>
                    <prop readOnly="True" type="string" name="projectId"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningStatusMessage"/>
                    <prop readOnly="True" type="dateTime" name="provisioningStatusUpdateTimeUtc"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}/devops/default/azuredevopsorgs/{}/projects/{}" version="2023-09-01-preview" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9L2Rldm9wcy9kZWZhdWx0L2F6dXJlRGV2T3BzT3Jncy97b3JnTmFtZX0vcHJvamVjdHMve3Byb2plY3ROYW1lfQ==/V/MjAyMy0wOS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.orgName" options="org-name" required="True" idPart="child_name_2">
          <help short="The Azure DevOps organization name."/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name" required="True" group="" idPart="child_name_3">
          <help short="The project name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.securityConnectorName" options="security-connector-name name n" required="True" group="" idPart="name">
          <help short="The security connector name."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$azureDevOpsProject.properties.actionableRemediation" options="actionable-remediation" group="Properties">
          <help short="Configuration payload for PR Annotations."/>
          <arg type="object" var="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration" options="branch-configuration">
            <help short="Repository branch configuration for PR Annotations."/>
            <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration.annotateDefaultBranch" options="annotate-default-branch" group="">
              <help short="Configuration of PR Annotations on default branch. Enabled - PR Annotations are enabled on the resource's default branch. Disabled - PR Annotations are disabled on the resource's default branch."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg type="array<string>" var="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration.branchNames" options="branch-names">
              <help short="Gets or sets branches that should have annotations."/>
              <item type="string"/>
            </arg>
          </arg>
          <arg type="array<object>" var="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations" options="category-configurations">
            <help short="Gets or sets list of categories and severity levels."/>
            <item type="object">
              <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations[].category" options="category" group="">
                <help short="Rule categories. Code - code scanning results. Artifact scanning results. Dependencies scanning results. IaC results. Secrets scanning results. Container scanning results."/>
                <enum>
                  <item name="Artifacts" value="&quot;Artifacts&quot;"/>
                  <item name="Code" value="&quot;Code&quot;"/>
                  <item name="Containers" value="&quot;Containers&quot;"/>
                  <item name="Dependencies" value="&quot;Dependencies&quot;"/>
                  <item name="IaC" value="&quot;IaC&quot;"/>
                  <item name="Secrets" value="&quot;Secrets&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations[].minimumSeverityLevel" options="minimum-severity-level">
                <help short="Gets or sets minimum severity level for a given category."/>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.inheritFromParentState" options="inherit-from-parent-state" group="">
            <help short="Update Settings. Enabled - Resource should inherit configurations from parent. Disabled - Resource should not inherit configurations from parent."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$azureDevOpsProject.properties.actionableRemediation.state" options="state" group="">
            <help short="ActionableRemediation Setting. None - the setting was never set. Enabled - ActionableRemediation is enabled. Disabled - ActionableRemediation is disabled."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$azureDevOpsProject.properties.onboardingState" options="onboarding-state" hide="True" group="Properties">
          <help short="Details about resource onboarding status across all connectors. OnboardedByOtherConnector - this resource has already been onboarded to another connector. This is only applicable to top-level resources. Onboarded - this resource has already been onboarded by the specified connector. NotOnboarded - this resource has not been onboarded to any connector. NotApplicable - the onboarding state is not applicable to the current endpoint."/>
          <enum>
            <item name="NotApplicable" value="&quot;NotApplicable&quot;"/>
            <item name="NotOnboarded" value="&quot;NotOnboarded&quot;"/>
            <item name="Onboarded" value="&quot;Onboarded&quot;"/>
            <item name="OnboardedByOtherConnector" value="&quot;OnboardedByOtherConnector&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$azureDevOpsProject.properties.parentOrgName" options="parent-org-name" hide="True" group="Properties">
          <help short="Gets or sets parent Azure DevOps Organization name."/>
        </arg>
        <arg type="string" var="$azureDevOpsProject.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="The provisioning state of the resource. Pending - Provisioning pending. Failed - Provisioning failed. Succeeded - Successful provisioning. Canceled - Provisioning canceled. PendingDeletion - Deletion pending. DeletionSuccess - Deletion successful. DeletionFailure - Deletion failure."/>
          <enum>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="DeletionFailure" value="&quot;DeletionFailure&quot;"/>
            <item name="DeletionSuccess" value="&quot;DeletionSuccess&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="Pending" value="&quot;Pending&quot;"/>
            <item name="PendingDeletion" value="&quot;PendingDeletion&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="AzureDevOpsProjects_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}/devops/default/azureDevOpsOrgs/{orgName}/projects/{projectName}">
          <request method="patch">
            <path>
              <param type="string" name="orgName" arg="$Path.orgName" required="True"/>
              <param type="string" name="projectName" arg="$Path.projectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="securityConnectorName" arg="$Path.securityConnectorName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="azureDevOpsProject" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="object" name="actionableRemediation" arg="$azureDevOpsProject.properties.actionableRemediation">
                      <prop type="object" name="branchConfiguration" arg="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration">
                        <prop type="string" name="annotateDefaultBranch" arg="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration.annotateDefaultBranch">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="branchNames" arg="$azureDevOpsProject.properties.actionableRemediation.branchConfiguration.branchNames">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="categoryConfigurations" arg="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations">
                        <item type="object">
                          <prop type="string" name="category" arg="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations[].category">
                            <enum>
                              <item value="&quot;Artifacts&quot;"/>
                              <item value="&quot;Code&quot;"/>
                              <item value="&quot;Containers&quot;"/>
                              <item value="&quot;Dependencies&quot;"/>
                              <item value="&quot;IaC&quot;"/>
                              <item value="&quot;Secrets&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="minimumSeverityLevel" arg="$azureDevOpsProject.properties.actionableRemediation.categoryConfigurations[].minimumSeverityLevel"/>
                        </item>
                      </prop>
                      <prop type="string" name="inheritFromParentState" arg="$azureDevOpsProject.properties.actionableRemediation.inheritFromParentState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state" arg="$azureDevOpsProject.properties.actionableRemediation.state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="onboardingState" arg="$azureDevOpsProject.properties.onboardingState">
                      <enum>
                        <item value="&quot;NotApplicable&quot;"/>
                        <item value="&quot;NotOnboarded&quot;"/>
                        <item value="&quot;Onboarded&quot;"/>
                        <item value="&quot;OnboardedByOtherConnector&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="parentOrgName" arg="$azureDevOpsProject.properties.parentOrgName"/>
                    <prop type="string" name="provisioningState" arg="$azureDevOpsProject.properties.provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="AzureDevOpsProject_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Security/securityConnectors/{}/devops/default/azureDevOpsOrgs/{}/projects/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="actionableRemediation">
                      <prop type="object" name="branchConfiguration">
                        <prop type="string" name="annotateDefaultBranch">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="branchNames">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="array<object>" name="categoryConfigurations">
                        <item type="object">
                          <prop type="string" name="category">
                            <enum>
                              <item value="&quot;Artifacts&quot;"/>
                              <item value="&quot;Code&quot;"/>
                              <item value="&quot;Containers&quot;"/>
                              <item value="&quot;Dependencies&quot;"/>
                              <item value="&quot;IaC&quot;"/>
                              <item value="&quot;Secrets&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="minimumSeverityLevel"/>
                        </item>
                      </prop>
                      <prop type="string" name="inheritFromParentState">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="onboardingState">
                      <enum>
                        <item value="&quot;NotApplicable&quot;"/>
                        <item value="&quot;NotOnboarded&quot;"/>
                        <item value="&quot;Onboarded&quot;"/>
                        <item value="&quot;OnboardedByOtherConnector&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="parentOrgName"/>
                    <prop readOnly="True" type="string" name="projectId"/>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;DeletionFailure&quot;"/>
                        <item value="&quot;DeletionSuccess&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;PendingDeletion&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningStatusMessage"/>
                    <prop readOnly="True" type="dateTime" name="provisioningStatusUpdateTimeUtc"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@AzureDevOpsProject_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
