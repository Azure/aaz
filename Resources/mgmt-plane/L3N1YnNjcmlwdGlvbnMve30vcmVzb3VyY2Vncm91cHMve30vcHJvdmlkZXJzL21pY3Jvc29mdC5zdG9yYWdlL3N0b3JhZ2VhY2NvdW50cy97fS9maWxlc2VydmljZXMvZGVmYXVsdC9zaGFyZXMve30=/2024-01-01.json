{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/fileservices/default/shares/{}", "version": "2024-01-01", "swagger": "mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9maWxlU2VydmljZXMvZGVmYXVsdC9zaGFyZXMve3NoYXJlTmFtZX0=/V/MjAyNC0wMS0wMQ=="}], "commandGroups": [{"name": "storage share-rm", "commands": [{"name": "show", "version": "2024-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/fileservices/default/shares/{}", "version": "2024-01-01", "swagger": "mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9maWxlU2VydmljZXMvZGVmYXVsdC9zaGFyZXMve3NoYXJlTmFtZX0=/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.x-ms-snapshot", "options": ["snapshot"], "group": "", "help": {"short": "Optional, used to delete a snapshot.The DateTime value that specifies the share snapshot to retrieve."}}, {"type": "string", "var": "$Path.accountName", "options": ["account-name", "storage-account"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."}, "format": {"pattern": "^[a-z0-9]+$", "maxLength": 24, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "string", "var": "$Path.shareName", "options": ["n", "name", "share-name"], "required": true, "group": "", "idPart": "child_name_2", "help": {"short": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."}, "format": {"maxLength": 63, "minLength": 3}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Query.expand", "options": ["expand"], "group": "", "help": {"short": "Optional, used to expand the properties within share's properties. Valid values are: deleted, snapshots. Should be passed as a string with delimiter ','"}}]}], "operations": [{"operationId": "FileShares_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-z0-9]+$", "maxLength": 24, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "shareName", "arg": "$Path.shareName", "required": true, "format": {"maxLength": 63, "minLength": 3}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"params": [{"type": "string", "name": "$expand", "arg": "$Query.expand"}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "header": {"params": [{"type": "string", "name": "x-ms-snapshot", "arg": "$Header.x-ms-snapshot"}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Storage/storageAccounts/{}/fileServices/default/shares/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessTier", "enum": {"items": [{"value": "Cool"}, {"value": "Hot"}, {"value": "Premium"}, {"value": "TransactionOptimized"}]}}, {"readOnly": true, "type": "dateTime", "name": "accessTierChangeTime"}, {"readOnly": true, "type": "string", "name": "accessTierStatus"}, {"readOnly": true, "type": "boolean", "name": "deleted"}, {"readOnly": true, "type": "dateTime", "name": "deletedTime"}, {"type": "string", "name": "enabledProtocols", "enum": {"items": [{"value": "NFS"}, {"value": "SMB"}]}}, {"type": "object", "name": "fileSharePaidBursting", "props": [{"type": "boolean", "name": "paidBurstingEnabled"}, {"type": "integer32", "name": "paidBurstingMaxBandwidthMibps"}, {"type": "integer32", "name": "paidBurstingMaxIops"}]}, {"readOnly": true, "type": "integer32", "name": "includedBurstIops"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "string", "name": "leaseDuration", "enum": {"items": [{"value": "Fixed"}, {"value": "Infinite"}]}}, {"readOnly": true, "type": "string", "name": "leaseState", "enum": {"items": [{"value": "Available"}, {"value": "Breaking"}, {"value": "Broken"}, {"value": "Expired"}, {"value": "Leased"}]}}, {"readOnly": true, "type": "string", "name": "leaseStatus", "enum": {"items": [{"value": "Locked"}, {"value": "Unlocked"}]}}, {"readOnly": true, "type": "integer64", "name": "maxBurstCreditsForIops"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "dateTime", "name": "nextAllowedProvisionedBandwidthDowngradeTime"}, {"readOnly": true, "type": "dateTime", "name": "nextAllowedProvisionedIopsDowngradeTime"}, {"readOnly": true, "type": "dateTime", "name": "nextAllowedQuotaDowngradeTime"}, {"type": "integer32", "name": "provisionedBandwidthMibps"}, {"type": "integer32", "name": "provisionedIops"}, {"readOnly": true, "type": "integer", "name": "remainingRetentionDays"}, {"type": "string", "name": "rootSquash", "enum": {"items": [{"value": "AllSquash"}, {"value": "NoRootSquash"}, {"value": "RootSquash"}]}}, {"type": "integer32", "name": "shareQuota"}, {"readOnly": true, "type": "integer64", "name": "shareUsageBytes"}, {"type": "array<object>", "name": "signedIdentifiers", "item": {"type": "object", "props": [{"type": "object", "name": "accessPolicy", "props": [{"type": "dateTime", "name": "expiryTime"}, {"type": "string", "name": "permission"}, {"type": "dateTime", "name": "startTime"}]}, {"type": "string", "name": "id"}]}}, {"readOnly": true, "type": "dateTime", "name": "snapshotTime"}, {"readOnly": true, "type": "string", "name": "version"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2024-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/fileservices/default/shares/{}", "version": "2024-01-01", "swagger": "mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9maWxlU2VydmljZXMvZGVmYXVsdC9zaGFyZXMve3NoYXJlTmFtZX0=/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.x-ms-snapshot", "options": ["snapshot"], "group": "", "help": {"short": "Optional, used to delete a snapshot.The DateTime value that specifies the share snapshot to retrieve."}}, {"type": "string", "var": "$Path.accountName", "options": ["account-name", "storage-account"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."}, "format": {"pattern": "^[a-z0-9]+$", "maxLength": 24, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "string", "var": "$Path.shareName", "options": ["n", "name", "share-name"], "required": true, "group": "", "idPart": "child_name_2", "help": {"short": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."}, "format": {"maxLength": 63, "minLength": 3}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Query.include", "options": ["include"], "group": "", "help": {"short": "Optional. Valid values are: snapshots, leased-snapshots, none. The default value is none. For 'snapshots', the file share is deleted including all of its file share snapshots. If the file share contains leased-snapshots, the deletion fails. For 'leased-snapshots', the file share is deleted included all of its file share snapshots (leased/unleased). For 'none', the file share is deleted if it has no share snapshots. If the file share contains any snapshots (leased or unleased), the deletion fails."}, "default": {"value": "none"}}]}], "operations": [{"operationId": "FileShares_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-z0-9]+$", "maxLength": 24, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "shareName", "arg": "$Path.shareName", "required": true, "format": {"maxLength": 63, "minLength": 3}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"params": [{"type": "string", "name": "$include", "arg": "$Query.include"}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "header": {"params": [{"type": "string", "name": "x-ms-snapshot", "arg": "$Header.x-ms-snapshot"}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2024-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/fileservices/default/shares/{}", "version": "2024-01-01", "swagger": "mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9maWxlU2VydmljZXMvZGVmYXVsdC9zaGFyZXMve3NoYXJlTmFtZX0=/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.accountName", "options": ["account-name", "storage-account"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."}, "format": {"pattern": "^[a-z0-9]+$", "maxLength": 24, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "string", "var": "$Path.shareName", "options": ["n", "name", "share-name"], "required": true, "group": "", "idPart": "child_name_2", "help": {"short": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."}, "format": {"maxLength": 63, "minLength": 3}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Query.expand", "options": ["expand"], "hide": true, "group": "", "help": {"short": "Optional, used to expand the properties within share's properties. Valid values are: snapshots. Should be passed as a string with delimiter ','"}}]}, {"name": "Properties", "args": [{"type": "string", "var": "$fileShare.properties.accessTier", "options": ["access-tier"], "group": "Properties", "help": {"short": "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium."}, "enum": {"items": [{"name": "Cool", "value": "Cool"}, {"name": "Hot", "value": "Hot"}, {"name": "Premium", "value": "Premium"}, {"name": "TransactionOptimized", "value": "TransactionOptimized"}]}}, {"type": "string", "var": "$fileShare.properties.enabledProtocols", "options": ["enabled-protocols"], "group": "Properties", "help": {"short": "The authentication protocol that is used for the file share. NFS protocol will be                                    only available for premium file shares (file shares in the FileStorage account type). Can only be specified when creating a share."}, "enum": {"items": [{"name": "NFS", "value": "NFS"}, {"name": "SMB", "value": "SMB"}]}}, {"type": "object", "var": "$fileShare.properties.metadata", "options": ["metadata"], "group": "Properties", "help": {"short": "A name-value pair to associate with the share as metadata."}, "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "var": "$fileShare.properties.rootSquash", "options": ["root-squash"], "group": "Properties", "help": {"short": "Reduction of the access rights for the remote superuser. The property is for NFS share only. The default is NoRootSquash."}, "enum": {"items": [{"name": "AllSquash", "value": "AllSquash"}, {"name": "NoRootSquash", "value": "NoRootSquash"}, {"name": "RootSquash", "value": "RootSquash"}]}}, {"type": "integer32", "var": "$fileShare.properties.shareQuota", "options": ["q", "quota"], "group": "Properties", "help": {"short": "The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size."}}, {"type": "array<object>", "var": "$fileShare.properties.signedIdentifiers", "options": ["signed-identifiers"], "hide": true, "group": "Properties", "help": {"short": "List of stored access policies specified on the share."}, "item": {"type": "object", "args": [{"type": "object", "var": "$fileShare.properties.signedIdentifiers[].accessPolicy", "options": ["access-policy"], "help": {"short": "Access policy"}, "args": [{"type": "dateTime", "var": "$fileShare.properties.signedIdentifiers[].accessPolicy.expiryTime", "options": ["expiry-time"], "help": {"short": "Expiry time of the access policy"}}, {"type": "string", "var": "$fileShare.properties.signedIdentifiers[].accessPolicy.permission", "options": ["permission"], "help": {"short": "List of abbreviated permissions."}}, {"type": "dateTime", "var": "$fileShare.properties.signedIdentifiers[].accessPolicy.startTime", "options": ["start-time"], "help": {"short": "Start time of the access policy"}}]}, {"type": "string", "var": "$fileShare.properties.signedIdentifiers[].id", "options": ["id"], "help": {"short": "An unique identifier of the stored access policy."}}]}}]}, {"name": "Provisioned V1 Paid Bursting", "args": [{"type": "boolean", "var": "$fileShare.properties.fileSharePaidBursting.paidBurstingEnabled", "options": ["paid-bursting-enabled"], "group": "Provisioned V1 Paid Bursting", "help": {"short": "Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned v1 SSD account type."}}, {"type": "integer32", "var": "$fileShare.properties.fileSharePaidBursting.paidBurstingMaxBandwidthMibps", "options": ["bursting-max-mibps", "paid-bursting-max-bandwidth-mibps"], "group": "Provisioned V1 Paid Bursting", "help": {"short": "The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth for a share."}}, {"type": "integer32", "var": "$fileShare.properties.fileSharePaidBursting.paidBurstingMaxIops", "options": ["paid-bursting-max-iops"], "group": "Provisioned V1 Paid Bursting", "help": {"short": "The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share."}}]}, {"name": "Provisioned V2", "args": [{"type": "integer32", "var": "$fileShare.properties.provisionedBandwidthMibps", "options": ["provisioned-bandwidth", "provisioned-bandwidth-mibps"], "group": "Provisioned V2", "help": {"short": "The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned bandwidth."}}, {"type": "integer32", "var": "$fileShare.properties.provisionedIops", "options": ["provisioned-iops"], "group": "Provisioned V2", "help": {"short": "The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS."}}]}], "operations": [{"operationId": "FileShares_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-z0-9]+$", "maxLength": 24, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "shareName", "arg": "$Path.shareName", "required": true, "format": {"maxLength": 63, "minLength": 3}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"params": [{"type": "string", "name": "$expand", "arg": "$Query.expand"}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "fileShare", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessTier", "arg": "$fileShare.properties.accessTier", "enum": {"items": [{"value": "Cool"}, {"value": "Hot"}, {"value": "Premium"}, {"value": "TransactionOptimized"}]}}, {"type": "string", "name": "enabledProtocols", "arg": "$fileShare.properties.enabledProtocols", "enum": {"items": [{"value": "NFS"}, {"value": "SMB"}]}}, {"type": "object", "name": "fileSharePaidBursting", "props": [{"type": "boolean", "name": "paidBurstingEnabled", "arg": "$fileShare.properties.fileSharePaidBursting.paidBurstingEnabled"}, {"type": "integer32", "name": "paidBurstingMaxBandwidthMibps", "arg": "$fileShare.properties.fileSharePaidBursting.paidBurstingMaxBandwidthMibps"}, {"type": "integer32", "name": "paidBurstingMaxIops", "arg": "$fileShare.properties.fileSharePaidBursting.paidBurstingMaxIops"}]}, {"type": "object", "name": "metadata", "arg": "$fileShare.properties.metadata", "additionalProps": {"item": {"type": "string"}}}, {"type": "integer32", "name": "provisionedBandwidthMibps", "arg": "$fileShare.properties.provisionedBandwidthMibps"}, {"type": "integer32", "name": "provisionedIops", "arg": "$fileShare.properties.provisionedIops"}, {"type": "string", "name": "rootSquash", "arg": "$fileShare.properties.rootSquash", "enum": {"items": [{"value": "AllSquash"}, {"value": "NoRootSquash"}, {"value": "RootSquash"}]}}, {"type": "integer32", "name": "shareQuota", "arg": "$fileShare.properties.shareQuota"}, {"type": "array<object>", "name": "signedIdentifiers", "arg": "$fileShare.properties.signedIdentifiers", "item": {"type": "object", "props": [{"type": "object", "name": "accessPolicy", "arg": "$fileShare.properties.signedIdentifiers[].accessPolicy", "props": [{"type": "dateTime", "name": "expiryTime", "arg": "$fileShare.properties.signedIdentifiers[].accessPolicy.expiryTime"}, {"type": "string", "name": "permission", "arg": "$fileShare.properties.signedIdentifiers[].accessPolicy.permission"}, {"type": "dateTime", "name": "startTime", "arg": "$fileShare.properties.signedIdentifiers[].accessPolicy.startTime"}]}, {"type": "string", "name": "id", "arg": "$fileShare.properties.signedIdentifiers[].id"}]}}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Storage/storageAccounts/{}/fileServices/default/shares/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessTier", "enum": {"items": [{"value": "Cool"}, {"value": "Hot"}, {"value": "Premium"}, {"value": "TransactionOptimized"}]}}, {"readOnly": true, "type": "dateTime", "name": "accessTierChangeTime"}, {"readOnly": true, "type": "string", "name": "accessTierStatus"}, {"readOnly": true, "type": "boolean", "name": "deleted"}, {"readOnly": true, "type": "dateTime", "name": "deletedTime"}, {"type": "string", "name": "enabledProtocols", "enum": {"items": [{"value": "NFS"}, {"value": "SMB"}]}}, {"type": "object", "name": "fileSharePaidBursting", "props": [{"type": "boolean", "name": "paidBurstingEnabled"}, {"type": "integer32", "name": "paidBurstingMaxBandwidthMibps"}, {"type": "integer32", "name": "paidBurstingMaxIops"}]}, {"readOnly": true, "type": "integer32", "name": "includedBurstIops"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "string", "name": "leaseDuration", "enum": {"items": [{"value": "Fixed"}, {"value": "Infinite"}]}}, {"readOnly": true, "type": "string", "name": "leaseState", "enum": {"items": [{"value": "Available"}, {"value": "Breaking"}, {"value": "Broken"}, {"value": "Expired"}, {"value": "Leased"}]}}, {"readOnly": true, "type": "string", "name": "leaseStatus", "enum": {"items": [{"value": "Locked"}, {"value": "Unlocked"}]}}, {"readOnly": true, "type": "integer64", "name": "maxBurstCreditsForIops"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "dateTime", "name": "nextAllowedProvisionedBandwidthDowngradeTime"}, {"readOnly": true, "type": "dateTime", "name": "nextAllowedProvisionedIopsDowngradeTime"}, {"readOnly": true, "type": "dateTime", "name": "nextAllowedQuotaDowngradeTime"}, {"type": "integer32", "name": "provisionedBandwidthMibps"}, {"type": "integer32", "name": "provisionedIops"}, {"readOnly": true, "type": "integer", "name": "remainingRetentionDays"}, {"type": "string", "name": "rootSquash", "enum": {"items": [{"value": "AllSquash"}, {"value": "NoRootSquash"}, {"value": "RootSquash"}]}}, {"type": "integer32", "name": "shareQuota"}, {"readOnly": true, "type": "integer64", "name": "shareUsageBytes"}, {"type": "array<object>", "name": "signedIdentifiers", "item": {"type": "object", "props": [{"type": "object", "name": "accessPolicy", "props": [{"type": "dateTime", "name": "expiryTime"}, {"type": "string", "name": "permission"}, {"type": "dateTime", "name": "startTime"}]}, {"type": "string", "name": "id"}]}}, {"readOnly": true, "type": "dateTime", "name": "snapshotTime"}, {"readOnly": true, "type": "string", "name": "version"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2024-01-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.storage/storageaccounts/{}/fileservices/default/shares/{}", "version": "2024-01-01", "swagger": "mgmt-plane/storage/ResourceProviders/Microsoft.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZS9zdG9yYWdlQWNjb3VudHMve2FjY291bnROYW1lfS9maWxlU2VydmljZXMvZGVmYXVsdC9zaGFyZXMve3NoYXJlTmFtZX0=/V/MjAyNC0wMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.accountName", "options": ["account-name", "storage-account"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."}, "format": {"pattern": "^[a-z0-9]+$", "maxLength": 24, "minLength": 3}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "string", "var": "$Path.shareName", "options": ["n", "name", "share-name"], "required": true, "group": "", "idPart": "child_name_2", "help": {"short": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."}, "format": {"maxLength": 63, "minLength": 3}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Query.expand", "options": ["expand"], "hide": true, "group": "", "help": {"short": "Optional, used to expand the properties within share's properties. Valid values are: snapshots. Should be passed as a string with delimiter ','"}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "string", "var": "$fileShare.properties.accessTier", "options": ["access-tier"], "group": "Properties", "help": {"short": "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium."}, "enum": {"items": [{"name": "Cool", "value": "Cool"}, {"name": "Hot", "value": "Hot"}, {"name": "Premium", "value": "Premium"}, {"name": "TransactionOptimized", "value": "TransactionOptimized"}]}}, {"nullable": true, "type": "object", "var": "$fileShare.properties.metadata", "options": ["metadata"], "group": "Properties", "help": {"short": "A name-value pair to associate with the share as metadata."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "string", "var": "$fileShare.properties.rootSquash", "options": ["root-squash"], "group": "Properties", "help": {"short": "Reduction of the access rights for the remote superuser. The property is for NFS share only. The default is NoRootSquash."}, "enum": {"items": [{"name": "AllSquash", "value": "AllSquash"}, {"name": "NoRootSquash", "value": "NoRootSquash"}, {"name": "RootSquash", "value": "RootSquash"}]}}, {"nullable": true, "type": "integer32", "var": "$fileShare.properties.shareQuota", "options": ["q", "quota"], "group": "Properties", "help": {"short": "The provisioned size of the share, in gibibytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400. For file shares created under Files Provisioned v2 account type, please refer to the GetFileServiceUsage API response for the minimum and maximum allowed provisioned storage size."}}, {"nullable": true, "type": "array<object>", "var": "$fileShare.properties.signedIdentifiers", "options": ["signed-identifiers"], "hide": true, "group": "Properties", "help": {"short": "List of stored access policies specified on the share."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "object", "var": "$fileShare.properties.signedIdentifiers[].accessPolicy", "options": ["access-policy"], "help": {"short": "Access policy"}, "args": [{"nullable": true, "type": "dateTime", "var": "$fileShare.properties.signedIdentifiers[].accessPolicy.expiryTime", "options": ["expiry-time"], "help": {"short": "Expiry time of the access policy"}}, {"nullable": true, "type": "string", "var": "$fileShare.properties.signedIdentifiers[].accessPolicy.permission", "options": ["permission"], "help": {"short": "List of abbreviated permissions."}}, {"nullable": true, "type": "dateTime", "var": "$fileShare.properties.signedIdentifiers[].accessPolicy.startTime", "options": ["start-time"], "help": {"short": "Start time of the access policy"}}]}, {"nullable": true, "type": "string", "var": "$fileShare.properties.signedIdentifiers[].id", "options": ["id"], "help": {"short": "An unique identifier of the stored access policy."}}]}}]}, {"name": "Provisioned V1 Paid Bursting", "args": [{"nullable": true, "type": "boolean", "var": "$fileShare.properties.fileSharePaidBursting.paidBurstingEnabled", "options": ["paid-bursting-enabled"], "group": "Provisioned V1 Paid Bursting", "help": {"short": "Indicates whether paid bursting is enabled for the share. This property is only for file shares created under Files Provisioned v1 SSD account type."}}, {"nullable": true, "type": "integer32", "var": "$fileShare.properties.fileSharePaidBursting.paidBurstingMaxBandwidthMibps", "options": ["bursting-max-mibps", "paid-bursting-max-bandwidth-mibps"], "group": "Provisioned V1 Paid Bursting", "help": {"short": "The maximum paid bursting bandwidth for the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 10340 which is the maximum allowed bandwidth for a share."}}, {"nullable": true, "type": "integer32", "var": "$fileShare.properties.fileSharePaidBursting.paidBurstingMaxIops", "options": ["paid-bursting-max-iops"], "group": "Provisioned V1 Paid Bursting", "help": {"short": "The maximum paid bursting IOPS for the share. This property is only for file shares created under Files Provisioned v1 SSD account type. The maximum allowed value is 102400 which is the maximum allowed IOPS for a share."}}]}, {"name": "Provisioned V2", "args": [{"nullable": true, "type": "integer32", "var": "$fileShare.properties.provisionedBandwidthMibps", "options": ["provisioned-bandwidth", "provisioned-bandwidth-mibps"], "group": "Provisioned V2", "help": {"short": "The provisioned bandwidth of the share, in mebibytes per second. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned bandwidth."}}, {"nullable": true, "type": "integer32", "var": "$fileShare.properties.provisionedIops", "options": ["provisioned-iops"], "group": "Provisioned V2", "help": {"short": "The provisioned IOPS of the share. This property is only for file shares created under Files Provisioned v2 account type. Please refer to the GetFileServiceUsage API response for the minimum and maximum allowed value for provisioned IOPS."}}]}], "operations": [{"operationId": "FileShares_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-z0-9]+$", "maxLength": 24, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "shareName", "arg": "$Path.shareName", "required": true, "format": {"maxLength": 63, "minLength": 3}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"params": [{"type": "string", "name": "$expand", "arg": "$Query.expand"}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Storage/storageAccounts/{}/fileServices/default/shares/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessTier", "enum": {"items": [{"value": "Cool"}, {"value": "Hot"}, {"value": "Premium"}, {"value": "TransactionOptimized"}]}}, {"readOnly": true, "type": "dateTime", "name": "accessTierChangeTime"}, {"readOnly": true, "type": "string", "name": "accessTierStatus"}, {"readOnly": true, "type": "boolean", "name": "deleted"}, {"readOnly": true, "type": "dateTime", "name": "deletedTime"}, {"type": "string", "name": "enabledProtocols", "enum": {"items": [{"value": "NFS"}, {"value": "SMB"}]}}, {"type": "object", "name": "fileSharePaidBursting", "props": [{"type": "boolean", "name": "paidBurstingEnabled"}, {"type": "integer32", "name": "paidBurstingMaxBandwidthMibps"}, {"type": "integer32", "name": "paidBurstingMaxIops"}]}, {"readOnly": true, "type": "integer32", "name": "includedBurstIops"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "string", "name": "leaseDuration", "enum": {"items": [{"value": "Fixed"}, {"value": "Infinite"}]}}, {"readOnly": true, "type": "string", "name": "leaseState", "enum": {"items": [{"value": "Available"}, {"value": "Breaking"}, {"value": "Broken"}, {"value": "Expired"}, {"value": "Leased"}]}}, {"readOnly": true, "type": "string", "name": "leaseStatus", "enum": {"items": [{"value": "Locked"}, {"value": "Unlocked"}]}}, {"readOnly": true, "type": "integer64", "name": "maxBurstCreditsForIops"}, {"type": "object", "name": "metadata", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "dateTime", "name": "nextAllowedProvisionedBandwidthDowngradeTime"}, {"readOnly": true, "type": "dateTime", "name": "nextAllowedProvisionedIopsDowngradeTime"}, {"readOnly": true, "type": "dateTime", "name": "nextAllowedQuotaDowngradeTime"}, {"type": "integer32", "name": "provisionedBandwidthMibps"}, {"type": "integer32", "name": "provisionedIops"}, {"readOnly": true, "type": "integer", "name": "remainingRetentionDays"}, {"type": "string", "name": "rootSquash", "enum": {"items": [{"value": "AllSquash"}, {"value": "NoRootSquash"}, {"value": "RootSquash"}]}}, {"type": "integer32", "name": "shareQuota"}, {"readOnly": true, "type": "integer64", "name": "shareUsageBytes"}, {"type": "array<object>", "name": "signedIdentifiers", "item": {"type": "object", "props": [{"type": "object", "name": "accessPolicy", "props": [{"type": "dateTime", "name": "expiryTime"}, {"type": "string", "name": "permission"}, {"type": "dateTime", "name": "startTime"}]}, {"type": "string", "name": "id"}]}}, {"readOnly": true, "type": "dateTime", "name": "snapshotTime"}, {"readOnly": true, "type": "string", "name": "version"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "FileShare_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "fileShare", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessTier", "arg": "$fileShare.properties.accessTier", "enum": {"items": [{"value": "Cool"}, {"value": "Hot"}, {"value": "Premium"}, {"value": "TransactionOptimized"}]}}, {"type": "object", "name": "fileSharePaidBursting", "props": [{"type": "boolean", "name": "paidBurstingEnabled", "arg": "$fileShare.properties.fileSharePaidBursting.paidBurstingEnabled"}, {"type": "integer32", "name": "paidBurstingMaxBandwidthMibps", "arg": "$fileShare.properties.fileSharePaidBursting.paidBurstingMaxBandwidthMibps"}, {"type": "integer32", "name": "paidBurstingMaxIops", "arg": "$fileShare.properties.fileSharePaidBursting.paidBurstingMaxIops"}]}, {"type": "object", "name": "metadata", "arg": "$fileShare.properties.metadata", "additionalProps": {"item": {"type": "string"}}}, {"type": "integer32", "name": "provisionedBandwidthMibps", "arg": "$fileShare.properties.provisionedBandwidthMibps"}, {"type": "integer32", "name": "provisionedIops", "arg": "$fileShare.properties.provisionedIops"}, {"type": "string", "name": "rootSquash", "arg": "$fileShare.properties.rootSquash", "enum": {"items": [{"value": "AllSquash"}, {"value": "NoRootSquash"}, {"value": "RootSquash"}]}}, {"type": "integer32", "name": "shareQuota", "arg": "$fileShare.properties.shareQuota"}, {"type": "array<object>", "name": "signedIdentifiers", "arg": "$fileShare.properties.signedIdentifiers", "item": {"type": "object", "props": [{"type": "object", "name": "accessPolicy", "arg": "$fileShare.properties.signedIdentifiers[].accessPolicy", "props": [{"type": "dateTime", "name": "expiryTime", "arg": "$fileShare.properties.signedIdentifiers[].accessPolicy.expiryTime"}, {"type": "string", "name": "permission", "arg": "$fileShare.properties.signedIdentifiers[].accessPolicy.permission"}, {"type": "dateTime", "name": "startTime", "arg": "$fileShare.properties.signedIdentifiers[].accessPolicy.startTime"}]}, {"type": "string", "name": "id", "arg": "$fileShare.properties.signedIdentifiers[].id"}]}}], "clientFlatten": true}], "clientFlatten": true}}}}, {"operationId": "FileShares_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/fileServices/default/shares/{shareName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "accountName", "arg": "$Path.accountName", "required": true, "format": {"pattern": "^[a-z0-9]+$", "maxLength": 24, "minLength": 3}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "shareName", "arg": "$Path.shareName", "required": true, "format": {"maxLength": 63, "minLength": 3}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"params": [{"type": "string", "name": "$expand", "arg": "$Query.expand"}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2024-01-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@FileShare_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}