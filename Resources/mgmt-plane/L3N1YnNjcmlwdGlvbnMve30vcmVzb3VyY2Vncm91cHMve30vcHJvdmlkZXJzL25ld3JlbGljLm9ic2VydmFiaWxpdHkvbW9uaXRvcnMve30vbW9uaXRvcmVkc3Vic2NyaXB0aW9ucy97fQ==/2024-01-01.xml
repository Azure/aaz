<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/monitoredsubscriptions/{}" version="2024-01-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vbW9uaXRvcmVkU3Vic2NyaXB0aW9ucy97Y29uZmlndXJhdGlvbk5hbWV9/V/MjAyNC0wMS0wMQ=="/>
  <commandGroup name="new-relic monitor monitored-subscription">
    <command name="show" version="2024-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/monitoredsubscriptions/{}" version="2024-01-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vbW9uaXRvcmVkU3Vic2NyaXB0aW9ucy97Y29uZmlndXJhdGlvbk5hbWV9/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name" required="True" group="" idPart="child_name_1">
          <help short="The configuration name. Only 'default' value is supported."/>
          <default value="&quot;default&quot;"/>
          <format pattern="^.*$"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" group="" idPart="name">
          <help short="Name of the Monitoring resource"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."/>
        </arg>
      </argGroup>
      <operation operationId="MonitoredSubscriptions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="get">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/NewRelic.Observability/monitors/{}/monitoredSubscriptions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="monitoredSubscriptionList">
                      <item type="object">
                        <prop type="string" name="error"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subscriptionId"/>
                        <prop type="object" name="tagRules">
                          <prop type="object" name="logRules">
                            <prop type="array<object>" name="filteringTags">
                              <item type="object" cls="FilteringTag_read">
                                <prop type="string" name="action">
                                  <enum>
                                    <item value="&quot;Exclude&quot;"/>
                                    <item value="&quot;Include&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="string" name="sendAadLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="sendActivityLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="sendSubscriptionLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="object" name="metricRules">
                            <prop type="array<@FilteringTag_read>" name="filteringTags">
                              <item type="@FilteringTag_read"/>
                            </prop>
                            <prop type="string" name="sendMetrics">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="userEmail">
                              <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Accepted&quot;"/>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;NotSpecified&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-01-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/monitoredsubscriptions/{}" version="2024-01-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vbW9uaXRvcmVkU3Vic2NyaXB0aW9ucy97Y29uZmlndXJhdGlvbk5hbWV9/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name" required="True" group="" idPart="child_name_1">
          <help short="The configuration name. Only 'default' value is supported."/>
          <default value="&quot;default&quot;"/>
          <format pattern="^.*$"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" group="" idPart="name">
          <help short="Name of the Monitoring resource"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."/>
        </arg>
      </argGroup>
      <operation operationId="MonitoredSubscriptions_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="delete">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/monitoredsubscriptions/{}" version="2024-01-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vbW9uaXRvcmVkU3Vic2NyaXB0aW9ucy97Y29uZmlndXJhdGlvbk5hbWV9/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name" required="True" group="" idPart="child_name_1">
          <help short="The configuration name. Only 'default' value is supported."/>
          <default value="&quot;default&quot;"/>
          <format pattern="^.*$"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" group="" idPart="name">
          <help short="Name of the Monitoring resource"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$body.properties.monitoredSubscriptionList" options="monitored-subscription-list" group="Properties">
          <help short="List of subscriptions and the state of the monitoring."/>
          <item type="object">
            <arg type="string" var="$body.properties.monitoredSubscriptionList[].error" options="error">
              <help short="The reason of not monitoring the subscription."/>
            </arg>
            <arg type="string" var="$body.properties.monitoredSubscriptionList[].status" options="status">
              <help short="The state of monitoring."/>
              <enum>
                <item name="Active" value="&quot;Active&quot;"/>
                <item name="Deleting" value="&quot;Deleting&quot;"/>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="InProgress" value="&quot;InProgress&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$body.properties.monitoredSubscriptionList[].subscriptionId" options="subscription-id">
              <help short="The subscriptionId to be monitored."/>
            </arg>
            <arg type="object" var="$body.properties.monitoredSubscriptionList[].tagRules" options="tag-rules">
              <help short="The resource-specific properties for this resource."/>
              <arg type="object" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules" options="log-rules">
                <help short="Set of rules for sending logs for the Monitor resource."/>
                <arg type="array<object>" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags" options="filtering-tags">
                  <help short="List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
                  <item type="object" cls="FilteringTag_create">
                    <arg type="string" var="@FilteringTag_create.action" options="action">
                      <help short="Valid actions for a filtering tag. Exclusion takes priority over inclusion."/>
                      <enum>
                        <item name="Exclude" value="&quot;Exclude&quot;"/>
                        <item name="Include" value="&quot;Include&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@FilteringTag_create.name" options="name">
                      <help short="The name (also known as the key) of the tag."/>
                    </arg>
                    <arg type="string" var="@FilteringTag_create.value" options="value">
                      <help short="The value of the tag."/>
                    </arg>
                  </item>
                </arg>
                <arg type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendAadLogs" options="send-aad-logs">
                  <help short="Flag specifying if AAD logs should be sent for the Monitor resource."/>
                  <enum>
                    <item name="Disabled" value="&quot;Disabled&quot;"/>
                    <item name="Enabled" value="&quot;Enabled&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendActivityLogs" options="send-activity-logs">
                  <help short="Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."/>
                  <enum>
                    <item name="Disabled" value="&quot;Disabled&quot;"/>
                    <item name="Enabled" value="&quot;Enabled&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendSubscriptionLogs" options="send-subscription-logs">
                  <help short="Flag specifying if subscription logs should be sent for the Monitor resource."/>
                  <enum>
                    <item name="Disabled" value="&quot;Disabled&quot;"/>
                    <item name="Enabled" value="&quot;Enabled&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="object" var="$body.properties.monitoredSubscriptionList[].tagRules.metricRules" options="metric-rules">
                <help short="Set of rules for sending metrics for the Monitor resource."/>
                <arg type="array<@FilteringTag_create>" var="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.filteringTags" options="filtering-tags">
                  <help short="List of filtering tags to be used for capturing metrics."/>
                  <item type="@FilteringTag_create"/>
                </arg>
                <arg type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.sendMetrics" options="send-metrics">
                  <help short="Flag specifying if metrics should be sent for the Monitor resource."/>
                  <enum>
                    <item name="Disabled" value="&quot;Disabled&quot;"/>
                    <item name="Enabled" value="&quot;Enabled&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.userEmail" options="user-email">
                  <help short="User Email"/>
                  <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                </arg>
              </arg>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$body.properties.patchOperation" options="patch-operation" group="Properties">
          <help short="The operation for the patch on the resource."/>
          <enum>
            <item name="Active" value="&quot;Active&quot;"/>
            <item name="AddBegin" value="&quot;AddBegin&quot;"/>
            <item name="AddComplete" value="&quot;AddComplete&quot;"/>
            <item name="DeleteBegin" value="&quot;DeleteBegin&quot;"/>
            <item name="DeleteComplete" value="&quot;DeleteComplete&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="MonitoredSubscriptions_CreateorUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="put">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="monitoredSubscriptionList" arg="$body.properties.monitoredSubscriptionList">
                      <item type="object">
                        <prop type="string" name="error" arg="$body.properties.monitoredSubscriptionList[].error"/>
                        <prop type="string" name="status" arg="$body.properties.monitoredSubscriptionList[].status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subscriptionId" arg="$body.properties.monitoredSubscriptionList[].subscriptionId"/>
                        <prop type="object" name="tagRules" arg="$body.properties.monitoredSubscriptionList[].tagRules">
                          <prop type="object" name="logRules" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules">
                            <prop type="array<object>" name="filteringTags" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags">
                              <item type="object" cls="FilteringTag_create">
                                <prop type="string" name="action" arg="@FilteringTag_create.action">
                                  <enum>
                                    <item value="&quot;Exclude&quot;"/>
                                    <item value="&quot;Include&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="name" arg="@FilteringTag_create.name"/>
                                <prop type="string" name="value" arg="@FilteringTag_create.value"/>
                              </item>
                            </prop>
                            <prop type="string" name="sendAadLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendAadLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="sendActivityLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendActivityLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="sendSubscriptionLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendSubscriptionLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="object" name="metricRules" arg="$body.properties.monitoredSubscriptionList[].tagRules.metricRules">
                            <prop type="array<@FilteringTag_create>" name="filteringTags" arg="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.filteringTags">
                              <item type="@FilteringTag_create"/>
                            </prop>
                            <prop type="string" name="sendMetrics" arg="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.sendMetrics">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="userEmail" arg="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.userEmail">
                              <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                            </prop>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="patchOperation" arg="$body.properties.patchOperation">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;AddBegin&quot;"/>
                        <item value="&quot;AddComplete&quot;"/>
                        <item value="&quot;DeleteBegin&quot;"/>
                        <item value="&quot;DeleteComplete&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/NewRelic.Observability/monitors/{}/monitoredSubscriptions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="monitoredSubscriptionList">
                      <item type="object">
                        <prop type="string" name="error"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subscriptionId"/>
                        <prop type="object" name="tagRules">
                          <prop type="object" name="logRules">
                            <prop type="array<object>" name="filteringTags">
                              <item type="object" cls="FilteringTag_read">
                                <prop type="string" name="action">
                                  <enum>
                                    <item value="&quot;Exclude&quot;"/>
                                    <item value="&quot;Include&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="string" name="sendAadLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="sendActivityLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="sendSubscriptionLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="object" name="metricRules">
                            <prop type="array<@FilteringTag_read>" name="filteringTags">
                              <item type="@FilteringTag_read"/>
                            </prop>
                            <prop type="string" name="sendMetrics">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="userEmail">
                              <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Accepted&quot;"/>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;NotSpecified&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/newrelic.observability/monitors/{}/monitoredsubscriptions/{}" version="2024-01-01" swagger="mgmt-plane/newrelic/ResourceProviders/NewRelic.Observability/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZXdSZWxpYy5PYnNlcnZhYmlsaXR5L21vbml0b3JzL3ttb25pdG9yTmFtZX0vbW9uaXRvcmVkU3Vic2NyaXB0aW9ucy97Y29uZmlndXJhdGlvbk5hbWV9/V/MjAyNC0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name" required="True" group="" idPart="child_name_1">
          <help short="The configuration name. Only 'default' value is supported."/>
          <default value="&quot;default&quot;"/>
          <format pattern="^.*$"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" group="" idPart="name">
          <help short="Name of the Monitoring resource"/>
          <format pattern="^.*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s NAME_OR_ID."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$body.properties.monitoredSubscriptionList" options="monitored-subscription-list" group="Properties">
          <help short="List of subscriptions and the state of the monitoring."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].error" options="error">
              <help short="The reason of not monitoring the subscription."/>
            </arg>
            <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].status" options="status">
              <help short="The state of monitoring."/>
              <enum>
                <item name="Active" value="&quot;Active&quot;"/>
                <item name="Deleting" value="&quot;Deleting&quot;"/>
                <item name="Failed" value="&quot;Failed&quot;"/>
                <item name="InProgress" value="&quot;InProgress&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].subscriptionId" options="subscription-id">
              <help short="The subscriptionId to be monitored."/>
            </arg>
            <arg nullable="True" type="object" var="$body.properties.monitoredSubscriptionList[].tagRules" options="tag-rules">
              <help short="The resource-specific properties for this resource."/>
              <arg nullable="True" type="object" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules" options="log-rules">
                <help short="Set of rules for sending logs for the Monitor resource."/>
                <arg nullable="True" type="array<object>" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags" options="filtering-tags">
                  <help short="List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
                  <item nullable="True" type="object" cls="FilteringTag_update">
                    <arg nullable="True" type="string" var="@FilteringTag_update.action" options="action">
                      <help short="Valid actions for a filtering tag. Exclusion takes priority over inclusion."/>
                      <enum>
                        <item name="Exclude" value="&quot;Exclude&quot;"/>
                        <item name="Include" value="&quot;Include&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@FilteringTag_update.name" options="name">
                      <help short="The name (also known as the key) of the tag."/>
                    </arg>
                    <arg nullable="True" type="string" var="@FilteringTag_update.value" options="value">
                      <help short="The value of the tag."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendAadLogs" options="send-aad-logs">
                  <help short="Flag specifying if AAD logs should be sent for the Monitor resource."/>
                  <enum>
                    <item name="Disabled" value="&quot;Disabled&quot;"/>
                    <item name="Enabled" value="&quot;Enabled&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendActivityLogs" options="send-activity-logs">
                  <help short="Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."/>
                  <enum>
                    <item name="Disabled" value="&quot;Disabled&quot;"/>
                    <item name="Enabled" value="&quot;Enabled&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendSubscriptionLogs" options="send-subscription-logs">
                  <help short="Flag specifying if subscription logs should be sent for the Monitor resource."/>
                  <enum>
                    <item name="Disabled" value="&quot;Disabled&quot;"/>
                    <item name="Enabled" value="&quot;Enabled&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="object" var="$body.properties.monitoredSubscriptionList[].tagRules.metricRules" options="metric-rules">
                <help short="Set of rules for sending metrics for the Monitor resource."/>
                <arg nullable="True" type="array<@FilteringTag_update>" var="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.filteringTags" options="filtering-tags">
                  <help short="List of filtering tags to be used for capturing metrics."/>
                  <item nullable="True" type="@FilteringTag_update"/>
                </arg>
                <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.sendMetrics" options="send-metrics">
                  <help short="Flag specifying if metrics should be sent for the Monitor resource."/>
                  <enum>
                    <item name="Disabled" value="&quot;Disabled&quot;"/>
                    <item name="Enabled" value="&quot;Enabled&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.userEmail" options="user-email">
                  <help short="User Email"/>
                  <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                </arg>
              </arg>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.patchOperation" options="patch-operation" group="Properties">
          <help short="The operation for the patch on the resource."/>
          <enum>
            <item name="Active" value="&quot;Active&quot;"/>
            <item name="AddBegin" value="&quot;AddBegin&quot;"/>
            <item name="AddComplete" value="&quot;AddComplete&quot;"/>
            <item name="DeleteBegin" value="&quot;DeleteBegin&quot;"/>
            <item name="DeleteComplete" value="&quot;DeleteComplete&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="MonitoredSubscriptions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="get">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="MonitoredSubscriptionProperties_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/NewRelic.Observability/monitors/{}/monitoredSubscriptions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="monitoredSubscriptionList">
                      <item type="object">
                        <prop type="string" name="error"/>
                        <prop type="string" name="status">
                          <enum>
                            <item value="&quot;Active&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="subscriptionId"/>
                        <prop type="object" name="tagRules">
                          <prop type="object" name="logRules">
                            <prop type="array<object>" name="filteringTags">
                              <item type="object" cls="FilteringTag_read">
                                <prop type="string" name="action">
                                  <enum>
                                    <item value="&quot;Exclude&quot;"/>
                                    <item value="&quot;Include&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="name"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="string" name="sendAadLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="sendActivityLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="sendSubscriptionLogs">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="object" name="metricRules">
                            <prop type="array<@FilteringTag_read>" name="filteringTags">
                              <item type="@FilteringTag_read"/>
                            </prop>
                            <prop type="string" name="sendMetrics">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="userEmail">
                              <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Accepted&quot;"/>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleted&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;NotSpecified&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="array<object>" name="monitoredSubscriptionList" arg="$body.properties.monitoredSubscriptionList">
                  <item type="object">
                    <prop type="string" name="error" arg="$body.properties.monitoredSubscriptionList[].error"/>
                    <prop type="string" name="status" arg="$body.properties.monitoredSubscriptionList[].status">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="subscriptionId" arg="$body.properties.monitoredSubscriptionList[].subscriptionId"/>
                    <prop type="object" name="tagRules" arg="$body.properties.monitoredSubscriptionList[].tagRules">
                      <prop type="object" name="logRules" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules">
                        <prop type="array<object>" name="filteringTags" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.filteringTags">
                          <item type="object" cls="FilteringTag_update">
                            <prop type="string" name="action" arg="@FilteringTag_update.action">
                              <enum>
                                <item value="&quot;Exclude&quot;"/>
                                <item value="&quot;Include&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="name" arg="@FilteringTag_update.name"/>
                            <prop type="string" name="value" arg="@FilteringTag_update.value"/>
                          </item>
                        </prop>
                        <prop type="string" name="sendAadLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendAadLogs">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="sendActivityLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendActivityLogs">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="sendSubscriptionLogs" arg="$body.properties.monitoredSubscriptionList[].tagRules.logRules.sendSubscriptionLogs">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="metricRules" arg="$body.properties.monitoredSubscriptionList[].tagRules.metricRules">
                        <prop type="array<@FilteringTag_update>" name="filteringTags" arg="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.filteringTags">
                          <item type="@FilteringTag_update"/>
                        </prop>
                        <prop type="string" name="sendMetrics" arg="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.sendMetrics">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userEmail" arg="$body.properties.monitoredSubscriptionList[].tagRules.metricRules.userEmail">
                          <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                        </prop>
                      </prop>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="patchOperation" arg="$body.properties.patchOperation">
                  <enum>
                    <item value="&quot;Active&quot;"/>
                    <item value="&quot;AddBegin&quot;"/>
                    <item value="&quot;AddComplete&quot;"/>
                    <item value="&quot;DeleteBegin&quot;"/>
                    <item value="&quot;DeleteComplete&quot;"/>
                  </enum>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="MonitoredSubscriptions_CreateorUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/NewRelic.Observability/monitors/{monitorName}/monitoredSubscriptions/{configurationName}">
          <request method="put">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True">
                <format pattern="^.*$"/>
                <enum>
                  <item value="&quot;default&quot;"/>
                </enum>
              </param>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True">
                <format pattern="^.*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@MonitoredSubscriptionProperties_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
