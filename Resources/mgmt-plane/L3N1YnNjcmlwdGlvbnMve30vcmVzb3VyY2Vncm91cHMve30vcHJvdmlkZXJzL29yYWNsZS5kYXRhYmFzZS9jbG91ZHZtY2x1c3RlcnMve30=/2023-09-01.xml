<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudvmclusters/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRWbUNsdXN0ZXJzL3tjbG91ZHZtY2x1c3Rlcm5hbWV9/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="oracle-database cloud-vm-cluster">
    <command name="show" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudvmclusters/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRWbUNsdXN0ZXJzL3tjbG91ZHZtY2x1c3Rlcm5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudvmclustername" options="cloudvmclustername name n" required="True" idPart="name">
          <help short="CloudVmCluster name"/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="CloudVmClusters_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}">
          <request method="get">
            <path>
              <param type="string" name="cloudvmclustername" arg="$Path.cloudvmclustername" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/cloudVmClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="backupSubnetCidr">
                      <format maxLength="32" minLength="1"/>
                    </prop>
                    <prop type="ResourceId" name="cloudExadataInfrastructureId" required="True"/>
                    <prop type="string" name="clusterName">
                      <format maxLength="11" minLength="1"/>
                    </prop>
                    <prop type="string" name="compartmentId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="integer32" name="cpuCoreCount" required="True"/>
                    <prop type="object" name="dataCollectionOptions">
                      <prop type="boolean" name="isDiagnosticsEventsEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isHealthMonitoringEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isIncidentLogsEnabled">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="integer32" name="dataStoragePercentage"/>
                    <prop type="float64" name="dataStorageSizeInTbs"/>
                    <prop type="integer32" name="dbNodeStorageSizeInGbs"/>
                    <prop type="array<string>" name="dbServers">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                    <prop type="string" name="diskRedundancy">
                      <enum>
                        <item value="&quot;High&quot;"/>
                        <item value="&quot;Normal&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="displayName" required="True">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="domain"/>
                    <prop type="string" name="giVersion" required="True"/>
                    <prop type="string" name="hostname" required="True">
                      <format maxLength="23" minLength="1"/>
                    </prop>
                    <prop type="object" name="iormConfigCache">
                      <prop type="array<object>" name="dbPlans">
                        <item type="object">
                          <prop type="string" name="dbName"/>
                          <prop type="string" name="flashCacheLimit"/>
                          <prop type="integer32" name="share">
                            <format maximum="32" minimum="1"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="lifecycleDetails"/>
                      <prop type="string" name="lifecycleState">
                        <enum>
                          <item value="&quot;BootStrapping&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="objective">
                        <enum>
                          <item value="&quot;Auto&quot;"/>
                          <item value="&quot;Balanced&quot;"/>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighThroughput&quot;"/>
                          <item value="&quot;LowLatency&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="isLocalBackupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isSparseDiskgroupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="lastUpdateHistoryEntryId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="licenseModel">
                      <enum>
                        <item value="&quot;BringYourOwnLicense&quot;"/>
                        <item value="&quot;LicenseIncluded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="lifecycleDetails"/>
                    <prop type="string" name="lifecycleState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MaintenanceInProgress&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Terminated&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer64" name="listenerPort"/>
                    <prop type="integer32" name="memorySizeInGbs"/>
                    <prop readOnly="True" type="integer32" name="nodeCount"/>
                    <prop type="array<object>" name="nsgCidrs">
                      <item type="object">
                        <prop type="object" name="destinationPortRange">
                          <prop type="integer32" name="max" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="integer32" name="min" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="source" required="True">
                          <format maxLength="128" minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="nsgUrl"/>
                    <prop readOnly="True" type="string" name="ociUrl"/>
                    <prop type="string" name="ocid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="float32" name="ocpuCount"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="scanDnsName">
                      <format maxLength="72" minLength="1"/>
                    </prop>
                    <prop type="string" name="scanDnsRecordId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="scanIpIds">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="scanListenerPortTcp"/>
                    <prop type="integer32" name="scanListenerPortTcpSsl"/>
                    <prop readOnly="True" type="string" name="shape">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="array<string>" name="sshPublicKeys" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="storageSizeInGbs"/>
                    <prop type="ResourceId" name="subnetId" required="True"/>
                    <prop type="string" name="subnetOcid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="systemVersion">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop type="string" name="timeZone">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="vipIds">
                      <item type="string"/>
                    </prop>
                    <prop type="ResourceId" name="vnetId" required="True"/>
                    <prop type="string" name="zoneId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudvmclusters/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRWbUNsdXN0ZXJzL3tjbG91ZHZtY2x1c3Rlcm5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudvmclustername" options="cloudvmclustername name n" required="True" idPart="name">
          <help short="CloudVmCluster name"/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="CloudVmClusters_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}">
          <request method="delete">
            <path>
              <param type="string" name="cloudvmclustername" arg="$Path.cloudvmclustername" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudvmclusters/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRWbUNsdXN0ZXJzL3tjbG91ZHZtY2x1c3Rlcm5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudvmclustername" options="cloudvmclustername name n" required="True" idPart="name">
          <help short="CloudVmCluster name"/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.backupSubnetCidr" options="backup-subnet-cidr" group="Properties">
          <help short="Client OCI backup subnet CIDR, default is 192.168.252.0/22"/>
          <format maxLength="32" minLength="1"/>
        </arg>
        <arg type="ResourceId" var="$resource.properties.cloudExadataInfrastructureId" options="cloud-exadata-infrastructure-id exa-infra-id" group="Properties">
          <help short="Cloud Exadata Infrastructure ID"/>
        </arg>
        <arg type="string" var="$resource.properties.clusterName" options="cluster-name" group="Properties">
          <help short="The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. "/>
          <format maxLength="11" minLength="1"/>
        </arg>
        <arg type="integer32" var="$resource.properties.cpuCoreCount" options="cpu-core-count" group="Properties">
          <help short="The number of CPU cores enabled on the cloud VM cluster."/>
        </arg>
        <arg type="object" var="$resource.properties.dataCollectionOptions" options="data-collection-options collection-options" group="Properties">
          <help short="Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS."/>
          <arg type="boolean" var="$resource.properties.dataCollectionOptions.isDiagnosticsEventsEnabled" options="is-diagnostics-events-enabled">
            <help short="Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS."/>
            <default value="false"/>
          </arg>
          <arg type="boolean" var="$resource.properties.dataCollectionOptions.isHealthMonitoringEnabled" options="is-health-monitoring-enabled">
            <help short="Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS."/>
            <default value="false"/>
          </arg>
          <arg type="boolean" var="$resource.properties.dataCollectionOptions.isIncidentLogsEnabled" options="is-incident-logs-enabled">
            <help short="Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS."/>
            <default value="false"/>
          </arg>
        </arg>
        <arg type="integer32" var="$resource.properties.dataStoragePercentage" options="data-storage-percentage storage-percent" group="Properties">
          <help short="The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage."/>
        </arg>
        <arg type="float64" var="$resource.properties.dataStorageSizeInTbs" options="data-storage-size-in-tbs storage-tbs" group="Properties">
          <help short="The data disk group size to be allocated in TBs."/>
        </arg>
        <arg type="integer32" var="$resource.properties.dbNodeStorageSizeInGbs" options="db-node-storage-size-in-gbs node-storage-gbs" group="Properties">
          <help short="The local node storage to be allocated in GBs."/>
        </arg>
        <arg type="array<string>" var="$resource.properties.dbServers" options="db-servers" group="Properties">
          <help short="The list of DB servers."/>
          <item type="string">
            <format maxLength="255" minLength="1"/>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.displayName" options="display-name" group="Properties">
          <help short="Display Name"/>
          <format maxLength="255" minLength="1"/>
        </arg>
        <arg type="string" var="$resource.properties.domain" options="domain" group="Properties">
          <help short="The domain name for the cloud VM cluster."/>
        </arg>
        <arg type="string" var="$resource.properties.giVersion" options="gi-version" group="Properties">
          <help short="Oracle Grid Infrastructure (GI) software version"/>
        </arg>
        <arg type="string" var="$resource.properties.hostname" options="hostname" group="Properties">
          <help short="The hostname for the cloud VM cluster."/>
          <format maxLength="23" minLength="1"/>
        </arg>
        <arg type="boolean" var="$resource.properties.isLocalBackupEnabled" options="is-local-backup-enabled local-backup-enabled" group="Properties">
          <help short="If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster."/>
          <default value="false"/>
        </arg>
        <arg type="boolean" var="$resource.properties.isSparseDiskgroupEnabled" options="is-sparse-diskgroup-enabled sparse-diskgroup" group="Properties">
          <help short="If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created."/>
          <default value="false"/>
        </arg>
        <arg type="string" var="$resource.properties.licenseModel" options="license-model" group="Properties">
          <help short="The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. "/>
          <enum>
            <item name="BringYourOwnLicense" value="&quot;BringYourOwnLicense&quot;"/>
            <item name="LicenseIncluded" value="&quot;LicenseIncluded&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$resource.properties.memorySizeInGbs" options="memory-size-in-gbs" group="Properties">
          <help short="The memory to be allocated in GBs."/>
        </arg>
        <arg type="array<object>" var="$resource.properties.nsgCidrs" options="nsg-cidrs" group="Properties">
          <help short="CIDR blocks for additional NSG ingress rules. The VNET CIDRs used to provision the VM Cluster will be added by default."/>
          <item type="object">
            <arg type="object" var="$resource.properties.nsgCidrs[].destinationPortRange" options="destination-port-range">
              <help short="Destination port range to specify particular destination ports for TCP rules."/>
              <arg type="integer32" var="$resource.properties.nsgCidrs[].destinationPortRange.max" options="max" required="True">
                <help short="The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value."/>
                <format maximum="65535" minimum="1"/>
              </arg>
              <arg type="integer32" var="$resource.properties.nsgCidrs[].destinationPortRange.min" options="min" required="True">
                <help short="The minimum port number, which must not be greater than the maximum port number."/>
                <format maximum="65535" minimum="1"/>
              </arg>
            </arg>
            <arg type="string" var="$resource.properties.nsgCidrs[].source" options="source" required="True">
              <help short="Conceptually, this is the range of IP addresses that a packet coming into the instance can come from."/>
              <format maxLength="128" minLength="1"/>
            </arg>
          </item>
        </arg>
        <arg type="float32" var="$resource.properties.ocpuCount" options="ocpu-count" group="Properties">
          <help short="The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part."/>
        </arg>
        <arg type="integer32" var="$resource.properties.scanListenerPortTcp" options="scan-listener-port-tcp" group="Properties">
          <help short="The TCP Single Client Access Name (SCAN) port. The default port is 1521."/>
        </arg>
        <arg type="integer32" var="$resource.properties.scanListenerPortTcpSsl" options="scan-listener-port-tcp-ssl scan-tcps-port" group="Properties">
          <help short="The TCPS Single Client Access Name (SCAN) port. The default port is 2484."/>
        </arg>
        <arg type="array<string>" var="$resource.properties.sshPublicKeys" options="ssh-public-keys" group="Properties">
          <help short="The public key portion of one or more key pairs used for SSH access to the cloud VM cluster."/>
          <item type="string"/>
        </arg>
        <arg type="ResourceId" var="$resource.properties.subnetId" options="subnet-id" group="Properties">
          <help short="Client subnet"/>
        </arg>
        <arg type="string" var="$resource.properties.systemVersion" options="system-version" group="Properties">
          <help short="Operating system version of the image."/>
          <format maxLength="255" minLength="1"/>
        </arg>
        <arg type="string" var="$resource.properties.timeZone" options="time-zone" group="Properties">
          <help short="The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm)."/>
          <format maxLength="255" minLength="1"/>
        </arg>
        <arg type="ResourceId" var="$resource.properties.vnetId" options="vnet-id" group="Properties">
          <help short="VNET for network connectivity"/>
        </arg>
        <arg type="string" var="$resource.properties.zoneId" options="zone-id" group="Properties">
          <help short="The OCID of the zone the cloud VM cluster is associated with."/>
          <format maxLength="255" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="CloudVmClusters_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}">
          <request method="put">
            <path>
              <param type="string" name="cloudvmclustername" arg="$Path.cloudvmclustername" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="backupSubnetCidr" arg="$resource.properties.backupSubnetCidr">
                      <format maxLength="32" minLength="1"/>
                    </prop>
                    <prop type="ResourceId" name="cloudExadataInfrastructureId" arg="$resource.properties.cloudExadataInfrastructureId" required="True"/>
                    <prop type="string" name="clusterName" arg="$resource.properties.clusterName">
                      <format maxLength="11" minLength="1"/>
                    </prop>
                    <prop type="integer32" name="cpuCoreCount" arg="$resource.properties.cpuCoreCount" required="True"/>
                    <prop type="object" name="dataCollectionOptions" arg="$resource.properties.dataCollectionOptions">
                      <prop type="boolean" name="isDiagnosticsEventsEnabled" arg="$resource.properties.dataCollectionOptions.isDiagnosticsEventsEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isHealthMonitoringEnabled" arg="$resource.properties.dataCollectionOptions.isHealthMonitoringEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isIncidentLogsEnabled" arg="$resource.properties.dataCollectionOptions.isIncidentLogsEnabled">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="integer32" name="dataStoragePercentage" arg="$resource.properties.dataStoragePercentage"/>
                    <prop type="float64" name="dataStorageSizeInTbs" arg="$resource.properties.dataStorageSizeInTbs"/>
                    <prop type="integer32" name="dbNodeStorageSizeInGbs" arg="$resource.properties.dbNodeStorageSizeInGbs"/>
                    <prop type="array<string>" name="dbServers" arg="$resource.properties.dbServers">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                    <prop type="string" name="displayName" arg="$resource.properties.displayName" required="True">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="domain" arg="$resource.properties.domain"/>
                    <prop type="string" name="giVersion" arg="$resource.properties.giVersion" required="True"/>
                    <prop type="string" name="hostname" arg="$resource.properties.hostname" required="True">
                      <format maxLength="23" minLength="1"/>
                    </prop>
                    <prop type="boolean" name="isLocalBackupEnabled" arg="$resource.properties.isLocalBackupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isSparseDiskgroupEnabled" arg="$resource.properties.isSparseDiskgroupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="licenseModel" arg="$resource.properties.licenseModel">
                      <enum>
                        <item value="&quot;BringYourOwnLicense&quot;"/>
                        <item value="&quot;LicenseIncluded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="memorySizeInGbs" arg="$resource.properties.memorySizeInGbs"/>
                    <prop type="array<object>" name="nsgCidrs" arg="$resource.properties.nsgCidrs">
                      <item type="object">
                        <prop type="object" name="destinationPortRange" arg="$resource.properties.nsgCidrs[].destinationPortRange">
                          <prop type="integer32" name="max" arg="$resource.properties.nsgCidrs[].destinationPortRange.max" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="integer32" name="min" arg="$resource.properties.nsgCidrs[].destinationPortRange.min" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="source" arg="$resource.properties.nsgCidrs[].source" required="True">
                          <format maxLength="128" minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="float32" name="ocpuCount" arg="$resource.properties.ocpuCount"/>
                    <prop type="integer32" name="scanListenerPortTcp" arg="$resource.properties.scanListenerPortTcp"/>
                    <prop type="integer32" name="scanListenerPortTcpSsl" arg="$resource.properties.scanListenerPortTcpSsl"/>
                    <prop type="array<string>" name="sshPublicKeys" arg="$resource.properties.sshPublicKeys" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="ResourceId" name="subnetId" arg="$resource.properties.subnetId" required="True"/>
                    <prop type="string" name="systemVersion" arg="$resource.properties.systemVersion">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="timeZone" arg="$resource.properties.timeZone">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="ResourceId" name="vnetId" arg="$resource.properties.vnetId" required="True"/>
                    <prop type="string" name="zoneId" arg="$resource.properties.zoneId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/cloudVmClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="backupSubnetCidr">
                      <format maxLength="32" minLength="1"/>
                    </prop>
                    <prop type="ResourceId" name="cloudExadataInfrastructureId" required="True"/>
                    <prop type="string" name="clusterName">
                      <format maxLength="11" minLength="1"/>
                    </prop>
                    <prop type="string" name="compartmentId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="integer32" name="cpuCoreCount" required="True"/>
                    <prop type="object" name="dataCollectionOptions">
                      <prop type="boolean" name="isDiagnosticsEventsEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isHealthMonitoringEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isIncidentLogsEnabled">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="integer32" name="dataStoragePercentage"/>
                    <prop type="float64" name="dataStorageSizeInTbs"/>
                    <prop type="integer32" name="dbNodeStorageSizeInGbs"/>
                    <prop type="array<string>" name="dbServers">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                    <prop type="string" name="diskRedundancy">
                      <enum>
                        <item value="&quot;High&quot;"/>
                        <item value="&quot;Normal&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="displayName" required="True">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="domain"/>
                    <prop type="string" name="giVersion" required="True"/>
                    <prop type="string" name="hostname" required="True">
                      <format maxLength="23" minLength="1"/>
                    </prop>
                    <prop type="object" name="iormConfigCache">
                      <prop type="array<object>" name="dbPlans">
                        <item type="object">
                          <prop type="string" name="dbName"/>
                          <prop type="string" name="flashCacheLimit"/>
                          <prop type="integer32" name="share">
                            <format maximum="32" minimum="1"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="lifecycleDetails"/>
                      <prop type="string" name="lifecycleState">
                        <enum>
                          <item value="&quot;BootStrapping&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="objective">
                        <enum>
                          <item value="&quot;Auto&quot;"/>
                          <item value="&quot;Balanced&quot;"/>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighThroughput&quot;"/>
                          <item value="&quot;LowLatency&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="isLocalBackupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isSparseDiskgroupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="lastUpdateHistoryEntryId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="licenseModel">
                      <enum>
                        <item value="&quot;BringYourOwnLicense&quot;"/>
                        <item value="&quot;LicenseIncluded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="lifecycleDetails"/>
                    <prop type="string" name="lifecycleState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MaintenanceInProgress&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Terminated&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer64" name="listenerPort"/>
                    <prop type="integer32" name="memorySizeInGbs"/>
                    <prop readOnly="True" type="integer32" name="nodeCount"/>
                    <prop type="array<object>" name="nsgCidrs">
                      <item type="object">
                        <prop type="object" name="destinationPortRange">
                          <prop type="integer32" name="max" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="integer32" name="min" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="source" required="True">
                          <format maxLength="128" minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="nsgUrl"/>
                    <prop readOnly="True" type="string" name="ociUrl"/>
                    <prop type="string" name="ocid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="float32" name="ocpuCount"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="scanDnsName">
                      <format maxLength="72" minLength="1"/>
                    </prop>
                    <prop type="string" name="scanDnsRecordId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="scanIpIds">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="scanListenerPortTcp"/>
                    <prop type="integer32" name="scanListenerPortTcpSsl"/>
                    <prop readOnly="True" type="string" name="shape">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="array<string>" name="sshPublicKeys" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="storageSizeInGbs"/>
                    <prop type="ResourceId" name="subnetId" required="True"/>
                    <prop type="string" name="subnetOcid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="systemVersion">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop type="string" name="timeZone">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="vipIds">
                      <item type="string"/>
                    </prop>
                    <prop type="ResourceId" name="vnetId" required="True"/>
                    <prop type="string" name="zoneId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/cloudvmclusters/{}" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvY2xvdWRWbUNsdXN0ZXJzL3tjbG91ZHZtY2x1c3Rlcm5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.cloudvmclustername" options="cloudvmclustername name n" required="True" idPart="name">
          <help short="CloudVmCluster name"/>
          <format pattern=".*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<string>" var="$resource.properties.computeNodes" options="compute-nodes" group="Properties">
          <help short="The list of compute servers to be added to the cloud VM cluster."/>
          <item nullable="True" type="string">
            <format maxLength="255" minLength="1"/>
          </item>
        </arg>
        <arg type="integer32" var="$resource.properties.cpuCoreCount" options="cpu-core-count" group="Properties">
          <help short="The number of CPU cores enabled on the cloud VM cluster."/>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.dataCollectionOptions" options="data-collection-options collection-options" group="Properties">
          <help short="Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS."/>
          <arg nullable="True" type="boolean" var="$resource.properties.dataCollectionOptions.isDiagnosticsEventsEnabled" options="is-diagnostics-events-enabled">
            <help short="Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS."/>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.dataCollectionOptions.isHealthMonitoringEnabled" options="is-health-monitoring-enabled">
            <help short="Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS."/>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.dataCollectionOptions.isIncidentLogsEnabled" options="is-incident-logs-enabled">
            <help short="Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS."/>
          </arg>
        </arg>
        <arg nullable="True" type="float64" var="$resource.properties.dataStorageSizeInTbs" options="data-storage-size-in-tbs storage-tbs" group="Properties">
          <help short="The data disk group size to be allocated in TBs."/>
        </arg>
        <arg nullable="True" type="integer32" var="$resource.properties.dbNodeStorageSizeInGbs" options="db-node-storage-size-in-gbs node-storage-gbs" group="Properties">
          <help short="The local node storage to be allocated in GBs."/>
        </arg>
        <arg type="string" var="$resource.properties.displayName" options="display-name" group="Properties">
          <help short="Display Name"/>
          <format maxLength="255" minLength="1"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.licenseModel" options="license-model" group="Properties">
          <help short="The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. "/>
          <enum>
            <item name="BringYourOwnLicense" value="&quot;BringYourOwnLicense&quot;"/>
            <item name="LicenseIncluded" value="&quot;LicenseIncluded&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="integer32" var="$resource.properties.memorySizeInGbs" options="memory-size-in-gbs" group="Properties">
          <help short="The memory to be allocated in GBs."/>
        </arg>
        <arg nullable="True" type="float32" var="$resource.properties.ocpuCount" options="ocpu-count" group="Properties">
          <help short="The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part."/>
        </arg>
        <arg type="array<string>" var="$resource.properties.sshPublicKeys" options="ssh-public-keys" group="Properties">
          <help short="The public key portion of one or more key pairs used for SSH access to the cloud VM cluster."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="integer32" var="$resource.properties.storageSizeInGbs" options="storage-size-in-gbs" group="Properties">
          <help short="The data disk group size to be allocated in GBs per VM."/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="CloudVmClusters_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}">
          <request method="get">
            <path>
              <param type="string" name="cloudvmclustername" arg="$Path.cloudvmclustername" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="CloudVmCluster_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/cloudVmClusters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="backupSubnetCidr">
                      <format maxLength="32" minLength="1"/>
                    </prop>
                    <prop type="ResourceId" name="cloudExadataInfrastructureId" required="True"/>
                    <prop type="string" name="clusterName">
                      <format maxLength="11" minLength="1"/>
                    </prop>
                    <prop type="string" name="compartmentId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="integer32" name="cpuCoreCount" required="True"/>
                    <prop type="object" name="dataCollectionOptions">
                      <prop type="boolean" name="isDiagnosticsEventsEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isHealthMonitoringEnabled">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="isIncidentLogsEnabled">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="integer32" name="dataStoragePercentage"/>
                    <prop type="float64" name="dataStorageSizeInTbs"/>
                    <prop type="integer32" name="dbNodeStorageSizeInGbs"/>
                    <prop type="array<string>" name="dbServers">
                      <item type="string">
                        <format maxLength="255" minLength="1"/>
                      </item>
                    </prop>
                    <prop type="string" name="diskRedundancy">
                      <enum>
                        <item value="&quot;High&quot;"/>
                        <item value="&quot;Normal&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="displayName" required="True">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="domain"/>
                    <prop type="string" name="giVersion" required="True"/>
                    <prop type="string" name="hostname" required="True">
                      <format maxLength="23" minLength="1"/>
                    </prop>
                    <prop type="object" name="iormConfigCache">
                      <prop type="array<object>" name="dbPlans">
                        <item type="object">
                          <prop type="string" name="dbName"/>
                          <prop type="string" name="flashCacheLimit"/>
                          <prop type="integer32" name="share">
                            <format maximum="32" minimum="1"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="lifecycleDetails"/>
                      <prop type="string" name="lifecycleState">
                        <enum>
                          <item value="&quot;BootStrapping&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="objective">
                        <enum>
                          <item value="&quot;Auto&quot;"/>
                          <item value="&quot;Balanced&quot;"/>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;HighThroughput&quot;"/>
                          <item value="&quot;LowLatency&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="isLocalBackupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="boolean" name="isSparseDiskgroupEnabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="lastUpdateHistoryEntryId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="licenseModel">
                      <enum>
                        <item value="&quot;BringYourOwnLicense&quot;"/>
                        <item value="&quot;LicenseIncluded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="lifecycleDetails"/>
                    <prop type="string" name="lifecycleState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MaintenanceInProgress&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Terminated&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="integer64" name="listenerPort"/>
                    <prop type="integer32" name="memorySizeInGbs"/>
                    <prop readOnly="True" type="integer32" name="nodeCount"/>
                    <prop type="array<object>" name="nsgCidrs">
                      <item type="object">
                        <prop type="object" name="destinationPortRange">
                          <prop type="integer32" name="max" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                          <prop type="integer32" name="min" required="True">
                            <format maximum="65535" minimum="1"/>
                          </prop>
                        </prop>
                        <prop type="string" name="source" required="True">
                          <format maxLength="128" minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="nsgUrl"/>
                    <prop readOnly="True" type="string" name="ociUrl"/>
                    <prop type="string" name="ocid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="float32" name="ocpuCount"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="scanDnsName">
                      <format maxLength="72" minLength="1"/>
                    </prop>
                    <prop type="string" name="scanDnsRecordId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="scanIpIds">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="scanListenerPortTcp"/>
                    <prop type="integer32" name="scanListenerPortTcpSsl"/>
                    <prop readOnly="True" type="string" name="shape">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="array<string>" name="sshPublicKeys" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="storageSizeInGbs"/>
                    <prop type="ResourceId" name="subnetId" required="True"/>
                    <prop type="string" name="subnetOcid">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="systemVersion">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop type="string" name="timeZone">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="vipIds">
                      <item type="string"/>
                    </prop>
                    <prop type="ResourceId" name="vnetId" required="True"/>
                    <prop type="string" name="zoneId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="array<string>" name="computeNodes" arg="$resource.properties.computeNodes">
                  <item type="string">
                    <format maxLength="255" minLength="1"/>
                  </item>
                </prop>
                <prop type="integer32" name="cpuCoreCount" arg="$resource.properties.cpuCoreCount" required="True"/>
                <prop type="object" name="dataCollectionOptions" arg="$resource.properties.dataCollectionOptions">
                  <prop type="boolean" name="isDiagnosticsEventsEnabled" arg="$resource.properties.dataCollectionOptions.isDiagnosticsEventsEnabled">
                    <default value="false"/>
                  </prop>
                  <prop type="boolean" name="isHealthMonitoringEnabled" arg="$resource.properties.dataCollectionOptions.isHealthMonitoringEnabled">
                    <default value="false"/>
                  </prop>
                  <prop type="boolean" name="isIncidentLogsEnabled" arg="$resource.properties.dataCollectionOptions.isIncidentLogsEnabled">
                    <default value="false"/>
                  </prop>
                </prop>
                <prop type="float64" name="dataStorageSizeInTbs" arg="$resource.properties.dataStorageSizeInTbs"/>
                <prop type="integer32" name="dbNodeStorageSizeInGbs" arg="$resource.properties.dbNodeStorageSizeInGbs"/>
                <prop type="string" name="displayName" arg="$resource.properties.displayName" required="True">
                  <format maxLength="255" minLength="1"/>
                </prop>
                <prop type="string" name="licenseModel" arg="$resource.properties.licenseModel">
                  <enum>
                    <item value="&quot;BringYourOwnLicense&quot;"/>
                    <item value="&quot;LicenseIncluded&quot;"/>
                  </enum>
                </prop>
                <prop type="integer32" name="memorySizeInGbs" arg="$resource.properties.memorySizeInGbs"/>
                <prop type="float32" name="ocpuCount" arg="$resource.properties.ocpuCount"/>
                <prop type="array<string>" name="sshPublicKeys" arg="$resource.properties.sshPublicKeys" required="True">
                  <item type="string"/>
                </prop>
                <prop type="integer32" name="storageSizeInGbs" arg="$resource.properties.storageSizeInGbs"/>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="CloudVmClusters_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudvmclustername}">
          <request method="put">
            <path>
              <param type="string" name="cloudvmclustername" arg="$Path.cloudvmclustername" required="True">
                <format pattern=".*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@CloudVmCluster_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
