<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/networkconnections/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL25ldHdvcmtDb25uZWN0aW9ucy97bmV0d29ya0Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter admin network-connection">
    <command name="show" version="2024-05-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/networkconnections/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL25ldHdvcmtDb25uZWN0aW9ucy97bmV0d29ya0Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkConnectionName" options="network-connection-name name n" required="True" group="" idPart="name">
          <help short="Name of the network connection that can be applied to a pool."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}">
          <request method="get">
            <path>
              <param type="string" name="networkConnectionName" arg="$Path.networkConnectionName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/networkConnections/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="domainJoinType" required="True">
                      <enum>
                        <item value="&quot;AzureADJoin&quot;"/>
                        <item value="&quot;HybridAzureADJoin&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="domainName"/>
                    <prop type="string" name="domainPassword" secret="True"/>
                    <prop type="string" name="domainUsername"/>
                    <prop type="string" name="healthCheckStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Passed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Warning&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkingResourceGroupName"/>
                    <prop type="string" name="organizationUnit"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="subnetId" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-05-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/networkconnections/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL25ldHdvcmtDb25uZWN0aW9ucy97bmV0d29ya0Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkConnectionName" options="network-connection-name name n" required="True" group="" idPart="name">
          <help short="Name of the network connection that can be applied to a pool."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkConnections_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}">
          <request method="delete">
            <path>
              <param type="string" name="networkConnectionName" arg="$Path.networkConnectionName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-05-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/networkconnections/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL25ldHdvcmtDb25uZWN0aW9ucy97bmV0d29ya0Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkConnectionName" options="network-connection-name name n" required="True" group="" idPart="name">
          <help short="Name of the network connection that can be applied to a pool."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" required="True" group="Body">
          <help short="The geo-location where the resource lives. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.domainJoinType" options="domain-join-type" group="Properties">
          <help short="AAD Join type."/>
          <enum>
            <item name="AzureADJoin" value="&quot;AzureADJoin&quot;"/>
            <item name="HybridAzureADJoin" value="&quot;HybridAzureADJoin&quot;"/>
            <item name="None" value="&quot;None&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.domainName" options="domain-name" group="Properties">
          <help short="Active Directory domain name."/>
        </arg>
        <arg type="string" var="$body.properties.domainPassword" options="domain-password" group="Properties">
          <help short="The password for the account used to join domain."/>
          <prompt msg="Domain password:"/>
        </arg>
        <arg type="string" var="$body.properties.domainUsername" options="domain-username" group="Properties">
          <help short="The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com."/>
        </arg>
        <arg type="string" var="$body.properties.networkingResourceGroupName" options="networking-resource-group-name r" group="Properties">
          <help short="The name for resource group where NICs will be placed."/>
        </arg>
        <arg type="string" var="$body.properties.organizationUnit" options="organization-unit" group="Properties">
          <help short="Active Directory domain Organization Unit (OU)."/>
        </arg>
        <arg type="string" var="$body.properties.subnetId" options="subnet-id" group="Properties">
          <help short="The subnet to attach dev boxes to."/>
        </arg>
      </argGroup>
      <operation operationId="NetworkConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}">
          <request method="put">
            <path>
              <param type="string" name="networkConnectionName" arg="$Path.networkConnectionName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="domainJoinType" arg="$body.properties.domainJoinType" required="True">
                      <enum>
                        <item value="&quot;AzureADJoin&quot;"/>
                        <item value="&quot;HybridAzureADJoin&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="domainName" arg="$body.properties.domainName"/>
                    <prop type="string" name="domainPassword" arg="$body.properties.domainPassword" secret="True"/>
                    <prop type="string" name="domainUsername" arg="$body.properties.domainUsername"/>
                    <prop type="string" name="networkingResourceGroupName" arg="$body.properties.networkingResourceGroupName"/>
                    <prop type="string" name="organizationUnit" arg="$body.properties.organizationUnit"/>
                    <prop type="string" name="subnetId" arg="$body.properties.subnetId" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/networkConnections/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="domainJoinType" required="True">
                      <enum>
                        <item value="&quot;AzureADJoin&quot;"/>
                        <item value="&quot;HybridAzureADJoin&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="domainName"/>
                    <prop type="string" name="domainPassword" secret="True"/>
                    <prop type="string" name="domainUsername"/>
                    <prop type="string" name="healthCheckStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Passed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Warning&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkingResourceGroupName"/>
                    <prop type="string" name="organizationUnit"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="subnetId" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/networkconnections/{}" version="2024-05-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL25ldHdvcmtDb25uZWN0aW9ucy97bmV0d29ya0Nvbm5lY3Rpb25OYW1lfQ==/V/MjAyNC0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkConnectionName" options="network-connection-name name n" required="True" idPart="name">
          <help short="Name of the Network Connection that can be applied to a Pool."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$body.properties.domainName" options="domain-name" group="Properties">
          <help short="Active Directory domain name"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.domainPassword" options="domain-password" group="Properties">
          <help short="The password for the account used to join domain"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.domainUsername" options="domain-username" group="Properties">
          <help short="The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com."/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.organizationUnit" options="organization-unit" group="Properties">
          <help short="Active Directory domain Organization Unit (OU)"/>
        </arg>
        <arg type="string" var="$body.properties.subnetId" options="subnet-id" group="Properties">
          <help short="The subnet to attach Virtual Machines to"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}">
          <request method="get">
            <path>
              <param type="string" name="networkConnectionName" arg="$Path.networkConnectionName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NetworkConnection_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/networkConnections/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="domainJoinType" required="True">
                      <enum>
                        <item value="&quot;AzureADJoin&quot;"/>
                        <item value="&quot;HybridAzureADJoin&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="domainName"/>
                    <prop type="string" name="domainPassword" secret="True"/>
                    <prop type="string" name="domainUsername"/>
                    <prop type="string" name="healthCheckStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Passed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Warning&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkingResourceGroupName"/>
                    <prop type="string" name="organizationUnit"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Created&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;MovingResources&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;RolloutInProgress&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;StorageProvisioningFailed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TransientFailure&quot;"/>
                        <item value="&quot;Updated&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="subnetId" required="True"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="domainName" arg="$body.properties.domainName"/>
                <prop type="string" name="domainPassword" arg="$body.properties.domainPassword" secret="True"/>
                <prop type="string" name="domainUsername" arg="$body.properties.domainUsername"/>
                <prop type="string" name="organizationUnit" arg="$body.properties.organizationUnit"/>
                <prop type="string" name="subnetId" arg="$body.properties.subnetId" required="True"/>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="NetworkConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkConnections/{networkConnectionName}">
          <request method="put">
            <path>
              <param type="string" name="networkConnectionName" arg="$Path.networkConnectionName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NetworkConnection_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
