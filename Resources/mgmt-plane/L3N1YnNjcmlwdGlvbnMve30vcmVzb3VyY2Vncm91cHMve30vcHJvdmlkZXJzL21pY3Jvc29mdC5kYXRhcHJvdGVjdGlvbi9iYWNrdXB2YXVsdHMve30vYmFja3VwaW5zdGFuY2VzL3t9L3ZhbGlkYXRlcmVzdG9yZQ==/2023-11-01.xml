<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backupinstances/{}/validaterestore" version="2023-11-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cEluc3RhbmNlcy97YmFja3VwSW5zdGFuY2VOYW1lfS92YWxpZGF0ZVJlc3RvcmU=/V/MjAyMy0xMS0wMQ=="/>
  <commandGroup name="dataprotection backup-instance">
    <command name="validate-for-restore" version="2023-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dataprotection/backupvaults/{}/backupinstances/{}/validaterestore" version="2023-11-01" swagger="mgmt-plane/dataprotection/ResourceProviders/Microsoft.DataProtection/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YVByb3RlY3Rpb24vYmFja3VwVmF1bHRzL3t2YXVsdE5hbWV9L2JhY2t1cEluc3RhbmNlcy97YmFja3VwSW5zdGFuY2VOYW1lfS92YWxpZGF0ZVJlc3RvcmU=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.backupInstanceName" options="backup-instance-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the backup instance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vaultName" options="vault-name v" required="True" group="" idPart="name">
          <help short="The name of the backup vault."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="object" var="$parameters.restoreRequestObject" options="restore-request-object" required="True" group="Parameters">
          <help short="Gets or sets the restore request object."/>
          <arg type="object" var="$parameters.restoreRequestObject.AzureBackupRecoveryPointBasedRestoreRequest" options="azure-backup-recovery-point-based-restore-request">
            <arg type="string" var="$parameters.restoreRequestObject.AzureBackupRecoveryPointBasedRestoreRequest.recoveryPointId" options="recovery-point-id" required="True"/>
          </arg>
          <arg type="object" var="$parameters.restoreRequestObject.AzureBackupRecoveryTimeBasedRestoreRequest" options="azure-backup-recovery-time-based-restore-request">
            <arg type="string" var="$parameters.restoreRequestObject.AzureBackupRecoveryTimeBasedRestoreRequest.recoveryPointTime" options="recovery-point-time" required="True">
              <help short="The recovery time in ISO 8601 format example - 2020-08-14T17:30:00.0000000Z."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.restoreRequestObject.AzureBackupRestoreWithRehydrationRequest" options="azure-backup-restore-with-rehydration-request">
            <arg type="string" var="$parameters.restoreRequestObject.AzureBackupRestoreWithRehydrationRequest.recoveryPointId" options="recovery-point-id" required="True"/>
            <arg type="string" var="$parameters.restoreRequestObject.AzureBackupRestoreWithRehydrationRequest.rehydrationPriority" options="rehydration-priority" required="True">
              <help short="Priority to be used for rehydration. Values High or Standard"/>
              <enum>
                <item name="High" value="&quot;High&quot;"/>
                <item name="Invalid" value="&quot;Invalid&quot;"/>
                <item name="Standard" value="&quot;Standard&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.restoreRequestObject.AzureBackupRestoreWithRehydrationRequest.rehydrationRetentionDuration" options="rehydration-retention-duration" required="True">
              <help short="Retention duration in ISO 8601 format i.e P10D ."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.restoreRequestObject.identityDetails" options="identity-details" group="">
            <help short="Contains information of the Identity Details for the BI. If it is null, default will be considered as System Assigned."/>
            <arg type="boolean" var="$parameters.restoreRequestObject.identityDetails.useSystemAssignedIdentity" options="use-system-assigned-identity">
              <help short="Specifies if the BI is protected by System Identity."/>
            </arg>
            <arg type="string" var="$parameters.restoreRequestObject.identityDetails.userAssignedIdentityArmUrl" options="user-assigned-identity-arm-url">
              <help short="ARM URL for User Assigned Identity."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo" options="restore-target-info" required="True">
            <help short="Gets or sets the restore target information."/>
            <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo" options="item-level-restore-target-info">
              <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.datasourceAuthCredentials" options="datasource-auth-credentials" cls="AuthCredentials_create">
                <help short="Credentials to use to authenticate with data source provider."/>
                <arg type="object" var="@AuthCredentials_create.SecretStoreBasedAuthCredentials" options="secret-store-based-auth-credentials">
                  <arg type="object" var="@AuthCredentials_create.SecretStoreBasedAuthCredentials.secretStoreResource" options="secret-store-resource">
                    <help short="Secret store resource"/>
                    <arg type="string" var="@AuthCredentials_create.SecretStoreBasedAuthCredentials.secretStoreResource.secretStoreType" options="secret-store-type" required="True">
                      <help short="Gets or sets the type of secret store"/>
                      <enum>
                        <item name="AzureKeyVault" value="&quot;AzureKeyVault&quot;"/>
                        <item name="Invalid" value="&quot;Invalid&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@AuthCredentials_create.SecretStoreBasedAuthCredentials.secretStoreResource.uri" options="uri">
                      <help short="Uri to get to the resource"/>
                    </arg>
                    <arg type="string" var="@AuthCredentials_create.SecretStoreBasedAuthCredentials.secretStoreResource.value" options="value">
                      <help short="Gets or sets value stored in secret store resource"/>
                    </arg>
                  </arg>
                </arg>
              </arg>
              <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.datasourceInfo" options="datasource-info" required="True" cls="Datasource_create">
                <help short="Information of target DS"/>
                <arg type="string" var="@Datasource_create.datasourceType" options="datasource-type">
                  <help short="DatasourceType of the resource."/>
                </arg>
                <arg type="string" var="@Datasource_create.objectType" options="object-type">
                  <help short="Type of Datasource object, used to initialize the right inherited type"/>
                </arg>
                <arg type="string" var="@Datasource_create.resourceID" options="resource-id" required="True">
                  <help short="Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."/>
                </arg>
                <arg type="string" var="@Datasource_create.resourceLocation" options="resource-location">
                  <help short="Location of datasource."/>
                </arg>
                <arg type="string" var="@Datasource_create.resourceName" options="resource-name">
                  <help short="Unique identifier of the resource in the context of parent."/>
                </arg>
                <arg type="object" var="@Datasource_create.resourceProperties" options="resource-properties" cls="BaseResourceProperties_create">
                  <help short="Properties specific to data source"/>
                  <arg type="string" var="@BaseResourceProperties_create.objectType" options="object-type" required="True">
                    <help short="Type of the specific object - used for deserializing"/>
                    <enum>
                      <item name="DefaultResourceProperties" value="&quot;DefaultResourceProperties&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="string" var="@Datasource_create.resourceType" options="resource-type">
                  <help short="Resource Type of Datasource."/>
                </arg>
                <arg type="string" var="@Datasource_create.resourceUri" options="resource-uri">
                  <help short="Uri of the resource."/>
                </arg>
              </arg>
              <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.datasourceSetInfo" options="datasource-set-info" cls="DatasourceSet_create">
                <help short="Information of target DS Set"/>
                <arg type="string" var="@DatasourceSet_create.datasourceType" options="datasource-type">
                  <help short="DatasourceType of the resource."/>
                </arg>
                <arg type="string" var="@DatasourceSet_create.objectType" options="object-type">
                  <help short="Type of Datasource object, used to initialize the right inherited type"/>
                </arg>
                <arg type="string" var="@DatasourceSet_create.resourceID" options="resource-id" required="True">
                  <help short="Full ARM ID of the resource. For azure resources, this is ARM ID. For non azure resources, this will be the ID created by backup service via Fabric/Vault."/>
                </arg>
                <arg type="string" var="@DatasourceSet_create.resourceLocation" options="resource-location">
                  <help short="Location of datasource."/>
                </arg>
                <arg type="string" var="@DatasourceSet_create.resourceName" options="resource-name">
                  <help short="Unique identifier of the resource in the context of parent."/>
                </arg>
                <arg type="@BaseResourceProperties_create" var="@DatasourceSet_create.resourceProperties" options="resource-properties">
                  <help short="Properties specific to data source set"/>
                </arg>
                <arg type="string" var="@DatasourceSet_create.resourceType" options="resource-type">
                  <help short="Resource Type of Datasource."/>
                </arg>
                <arg type="string" var="@DatasourceSet_create.resourceUri" options="resource-uri">
                  <help short="Uri of the resource."/>
                </arg>
              </arg>
              <arg type="array<object>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria" options="restore-criteria" required="True">
                <help short="Restore Criteria"/>
                <item type="object">
                  <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].ItemPathBasedRestoreCriteria" options="item-path-based-restore-criteria">
                    <arg type="boolean" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].ItemPathBasedRestoreCriteria.isPathRelativeToBackupItem" options="is-path-relative-to-backup-item" required="True">
                      <help short="Flag to specify if the path is relative to backup item or full path"/>
                    </arg>
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].ItemPathBasedRestoreCriteria.itemPath" options="item-path" required="True">
                      <help short="The path of the item to be restored. It could be the full path of the item or the path relative to the backup item"/>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].ItemPathBasedRestoreCriteria.subItemPathPrefix" options="sub-item-path-prefix">
                      <help short="The list of prefix strings to be used as filter criteria during restore. These are relative to the item path specified."/>
                      <item type="string"/>
                    </arg>
                  </arg>
                  <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria" options="kubernetes-cluster-restore-criteria">
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.conflictPolicy" options="conflict-policy">
                      <help short="Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore."/>
                      <enum>
                        <item name="Patch" value="&quot;Patch&quot;"/>
                        <item name="Skip" value="&quot;Skip&quot;"/>
                      </enum>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.excludedNamespaces" options="excluded-namespaces">
                      <help short="Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during restore."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.excludedResourceTypes" options="excluded-resource-types">
                      <help short="Gets or sets the exclude resource types property. This property sets the resource types to be excluded during restore."/>
                      <item type="string"/>
                    </arg>
                    <arg type="boolean" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.includeClusterScopeResources" options="include-cluster-scope-resources" required="True">
                      <help short="Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during restore."/>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.includedNamespaces" options="included-namespaces">
                      <help short="Gets or sets the include namespaces property. This property sets the namespaces to be included during restore."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.includedResourceTypes" options="included-resource-types">
                      <help short="Gets or sets the include resource types property. This property sets the resource types to be included during restore."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.labelSelectors" options="label-selectors">
                      <help short="Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during restore."/>
                      <item type="string"/>
                    </arg>
                    <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.namespaceMappings" options="namespace-mappings">
                      <help short="Gets or sets the Namespace Mappings property. This property sets if namespace needs to be change during restore."/>
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </arg>
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.persistentVolumeRestoreMode" options="persistent-volume-restore-mode">
                      <help short="Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored."/>
                      <enum>
                        <item name="RestoreWithVolumeData" value="&quot;RestoreWithVolumeData&quot;"/>
                        <item name="RestoreWithoutVolumeData" value="&quot;RestoreWithoutVolumeData&quot;"/>
                      </enum>
                    </arg>
                    <arg type="array<object>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.restoreHookReferences" options="restore-hook-references">
                      <help short="Gets or sets the restore hook references. This property sets the hook reference to be executed during restore."/>
                      <item type="object" cls="NamespacedNameResource_create">
                        <arg type="string" var="@NamespacedNameResource_create.name" options="name">
                          <help short="Name of the resource"/>
                        </arg>
                        <arg type="string" var="@NamespacedNameResource_create.namespace" options="namespace">
                          <help short="Namespace in which the resource exists"/>
                        </arg>
                      </item>
                    </arg>
                  </arg>
                  <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria" options="kubernetes-cluster-vault-tier-restore-criteria">
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.conflictPolicy" options="conflict-policy">
                      <help short="Gets or sets the Conflict Policy property. This property sets policy during conflict of resources during restore from vault."/>
                      <enum>
                        <item name="Patch" value="&quot;Patch&quot;"/>
                        <item name="Skip" value="&quot;Skip&quot;"/>
                      </enum>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.excludedNamespaces" options="excluded-namespaces">
                      <help short="Gets or sets the exclude namespaces property. This property sets the namespaces to be excluded during restore from vault."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.excludedResourceTypes" options="excluded-resource-types">
                      <help short="Gets or sets the exclude resource types property. This property sets the resource types to be excluded during restore from vault."/>
                      <item type="string"/>
                    </arg>
                    <arg type="boolean" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.includeClusterScopeResources" options="include-cluster-scope-resources" required="True">
                      <help short="Gets or sets the include cluster resources property. This property if enabled will include cluster scope resources during restore from vault."/>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.includedNamespaces" options="included-namespaces">
                      <help short="Gets or sets the include namespaces property. This property sets the namespaces to be included during restore from vault."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.includedResourceTypes" options="included-resource-types">
                      <help short="Gets or sets the include resource types property. This property sets the resource types to be included during restore from vault."/>
                      <item type="string"/>
                    </arg>
                    <arg type="array<string>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.labelSelectors" options="label-selectors">
                      <help short="Gets or sets the LabelSelectors property. This property sets the resource with such label selectors to be included during restore from vault."/>
                      <item type="string"/>
                    </arg>
                    <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.namespaceMappings" options="namespace-mappings">
                      <help short="Gets or sets the Namespace Mappings property. This property sets if namespace needs to be change during restore from vault."/>
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </arg>
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.persistentVolumeRestoreMode" options="persistent-volume-restore-mode">
                      <help short="Gets or sets the PV (Persistent Volume) Restore Mode property. This property sets whether volumes needs to be restored from vault."/>
                      <enum>
                        <item name="RestoreWithVolumeData" value="&quot;RestoreWithVolumeData&quot;"/>
                        <item name="RestoreWithoutVolumeData" value="&quot;RestoreWithoutVolumeData&quot;"/>
                      </enum>
                    </arg>
                    <arg type="array<@NamespacedNameResource_create>" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.restoreHookReferences" options="restore-hook-references">
                      <help short="Gets or sets the restore hook references. This property sets the hook reference to be executed during restore from vault."/>
                      <item type="@NamespacedNameResource_create"/>
                    </arg>
                    <arg type="ResourceId" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.stagingResourceGroupId" options="staging-resource-group-id">
                      <help short="Gets or sets the staging RG Id for creating staging disks and snapshots during restore from vault."/>
                    </arg>
                    <arg type="ResourceId" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.stagingStorageAccountId" options="staging-storage-account-id">
                      <help short="Gets or sets the staging Storage Account Id for creating backup extension object store data during restore from vault."/>
                    </arg>
                  </arg>
                  <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesPVRestoreCriteria" options="kubernetes-pv-restore-criteria">
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesPVRestoreCriteria.name" options="name">
                      <help short="Selected persistent volume claim name"/>
                    </arg>
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesPVRestoreCriteria.storageClassName" options="storage-class-name">
                      <help short="Selected storage class name for restore operation"/>
                    </arg>
                  </arg>
                  <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesStorageClassRestoreCriteria" options="kubernetes-storage-class-restore-criteria">
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesStorageClassRestoreCriteria.provisioner" options="provisioner">
                      <help short="Provisioner of the storage class"/>
                    </arg>
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesStorageClassRestoreCriteria.selectedStorageClassName" options="selected-storage-class-name">
                      <help short="Selected storage class name"/>
                    </arg>
                  </arg>
                  <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].RangeBasedItemLevelRestoreCriteria" options="range-based-item-level-restore-criteria">
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].RangeBasedItemLevelRestoreCriteria.maxMatchingValue" options="max-matching-value">
                      <help short="maximum value for range prefix match"/>
                    </arg>
                    <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].RangeBasedItemLevelRestoreCriteria.minMatchingValue" options="min-matching-value">
                      <help short="minimum value for range prefix match"/>
                    </arg>
                  </arg>
                </item>
              </arg>
            </arg>
            <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo" options="restore-files-target-info">
              <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails" options="target-details" required="True">
                <help short="Destination of RestoreAsFiles operation, when destination is not a datasource"/>
                <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails.filePrefix" options="file-prefix" required="True" group="">
                  <help short="Restore operation may create multiple files inside location pointed by Url Below will be the common prefix for all of them"/>
                </arg>
                <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails.restoreTargetLocationType" options="restore-target-location-type" required="True" group="">
                  <help short="Denotes the target location where the data will be restored, string value for the enum {Microsoft.Internal.AzureBackup.DataProtection.Common.Interface.RestoreTargetLocationType}"/>
                  <enum>
                    <item name="AzureBlobs" value="&quot;AzureBlobs&quot;"/>
                    <item name="AzureFiles" value="&quot;AzureFiles&quot;"/>
                    <item name="Invalid" value="&quot;Invalid&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails.targetResourceArmId" options="target-resource-arm-id" group="">
                  <help short="Full ARM Id denoting the restore destination. It is the ARM Id pointing to container / file share. This is optional if the target subscription can be identified with the URL field. If not then this is needed if CrossSubscriptionRestore field of BackupVault is in any of the disabled states"/>
                </arg>
                <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails.url" options="url" required="True">
                  <help short="Url denoting the restore destination. It can point to container / file share etc"/>
                </arg>
              </arg>
            </arg>
            <arg type="object" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreTargetInfo" options="restore-target-info">
              <arg type="@AuthCredentials_create" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreTargetInfo.datasourceAuthCredentials" options="datasource-auth-credentials">
                <help short="Credentials to use to authenticate with data source provider."/>
              </arg>
              <arg type="@Datasource_create" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreTargetInfo.datasourceInfo" options="datasource-info" required="True">
                <help short="Information of target DS"/>
              </arg>
              <arg type="@DatasourceSet_create" var="$parameters.restoreRequestObject.restoreTargetInfo.RestoreTargetInfo.datasourceSetInfo" options="datasource-set-info">
                <help short="Information of target DS Set"/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.recoveryOption" options="recovery-option" required="True">
              <help short="Recovery Option"/>
              <enum>
                <item name="FailIfExists" value="&quot;FailIfExists&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.restoreRequestObject.restoreTargetInfo.restoreLocation" options="restore-location">
              <help short="Target Restore region"/>
            </arg>
          </arg>
          <arg type="string" var="$parameters.restoreRequestObject.sourceDataStoreType" options="source-data-store-type" required="True">
            <help short="Gets or sets the type of the source data store."/>
            <enum>
              <item name="ArchiveStore" value="&quot;ArchiveStore&quot;"/>
              <item name="OperationalStore" value="&quot;OperationalStore&quot;"/>
              <item name="SnapshotStore" value="&quot;SnapshotStore&quot;"/>
              <item name="VaultStore" value="&quot;VaultStore&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.restoreRequestObject.sourceResourceId" options="source-resource-id">
            <help short="Fully qualified Azure Resource Manager ID of the datasource which is being recovered."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="BackupInstances_ValidateForRestore">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataProtection/backupVaults/{vaultName}/backupInstances/{backupInstanceName}/validateRestore">
          <request method="post">
            <path>
              <param type="string" name="backupInstanceName" arg="$Path.backupInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vaultName" arg="$Path.vaultName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="restoreRequestObject" arg="$parameters.restoreRequestObject" required="True">
                    <prop type="object" name="identityDetails" arg="$parameters.restoreRequestObject.identityDetails">
                      <prop type="boolean" name="useSystemAssignedIdentity" arg="$parameters.restoreRequestObject.identityDetails.useSystemAssignedIdentity"/>
                      <prop type="string" name="userAssignedIdentityArmUrl" arg="$parameters.restoreRequestObject.identityDetails.userAssignedIdentityArmUrl"/>
                    </prop>
                    <prop type="string" name="objectType" required="True">
                      <enum>
                        <item arg="$parameters.restoreRequestObject.AzureBackupRecoveryPointBasedRestoreRequest" value="&quot;AzureBackupRecoveryPointBasedRestoreRequest&quot;"/>
                        <item arg="$parameters.restoreRequestObject.AzureBackupRecoveryTimeBasedRestoreRequest" value="&quot;AzureBackupRecoveryTimeBasedRestoreRequest&quot;"/>
                        <item arg="$parameters.restoreRequestObject.AzureBackupRestoreWithRehydrationRequest" value="&quot;AzureBackupRestoreWithRehydrationRequest&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="restoreTargetInfo" arg="$parameters.restoreRequestObject.restoreTargetInfo" required="True">
                      <prop type="string" name="objectType" required="True">
                        <enum>
                          <item arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo" value="&quot;ItemLevelRestoreTargetInfo&quot;"/>
                          <item arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo" value="&quot;RestoreFilesTargetInfo&quot;"/>
                          <item arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreTargetInfo" value="&quot;RestoreTargetInfo&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="recoveryOption" arg="$parameters.restoreRequestObject.restoreTargetInfo.recoveryOption" required="True">
                        <enum>
                          <item value="&quot;FailIfExists&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="restoreLocation" arg="$parameters.restoreRequestObject.restoreTargetInfo.restoreLocation"/>
                      <discriminator property="objectType" value="ItemLevelRestoreTargetInfo">
                        <prop type="object" name="datasourceAuthCredentials" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.datasourceAuthCredentials" cls="AuthCredentials_create">
                          <prop type="string" name="objectType" required="True">
                            <enum>
                              <item arg="@AuthCredentials_create.SecretStoreBasedAuthCredentials" value="&quot;SecretStoreBasedAuthCredentials&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="objectType" value="SecretStoreBasedAuthCredentials">
                            <prop type="object" name="secretStoreResource" arg="@AuthCredentials_create.SecretStoreBasedAuthCredentials.secretStoreResource">
                              <prop type="string" name="secretStoreType" arg="@AuthCredentials_create.SecretStoreBasedAuthCredentials.secretStoreResource.secretStoreType" required="True">
                                <enum>
                                  <item value="&quot;AzureKeyVault&quot;"/>
                                  <item value="&quot;Invalid&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="uri" arg="@AuthCredentials_create.SecretStoreBasedAuthCredentials.secretStoreResource.uri"/>
                              <prop type="string" name="value" arg="@AuthCredentials_create.SecretStoreBasedAuthCredentials.secretStoreResource.value"/>
                            </prop>
                          </discriminator>
                        </prop>
                        <prop type="object" name="datasourceInfo" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.datasourceInfo" required="True" cls="Datasource_create">
                          <prop type="string" name="datasourceType" arg="@Datasource_create.datasourceType"/>
                          <prop type="string" name="objectType" arg="@Datasource_create.objectType"/>
                          <prop type="string" name="resourceID" arg="@Datasource_create.resourceID" required="True"/>
                          <prop type="string" name="resourceLocation" arg="@Datasource_create.resourceLocation"/>
                          <prop type="string" name="resourceName" arg="@Datasource_create.resourceName"/>
                          <prop type="object" name="resourceProperties" arg="@Datasource_create.resourceProperties" cls="BaseResourceProperties_create">
                            <prop type="string" name="objectType" arg="@BaseResourceProperties_create.objectType" required="True">
                              <enum>
                                <item value="&quot;DefaultResourceProperties&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="resourceType" arg="@Datasource_create.resourceType"/>
                          <prop type="string" name="resourceUri" arg="@Datasource_create.resourceUri"/>
                        </prop>
                        <prop type="object" name="datasourceSetInfo" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.datasourceSetInfo" cls="DatasourceSet_create">
                          <prop type="string" name="datasourceType" arg="@DatasourceSet_create.datasourceType"/>
                          <prop type="string" name="objectType" arg="@DatasourceSet_create.objectType"/>
                          <prop type="string" name="resourceID" arg="@DatasourceSet_create.resourceID" required="True"/>
                          <prop type="string" name="resourceLocation" arg="@DatasourceSet_create.resourceLocation"/>
                          <prop type="string" name="resourceName" arg="@DatasourceSet_create.resourceName"/>
                          <prop type="@BaseResourceProperties_create" name="resourceProperties" arg="@DatasourceSet_create.resourceProperties"/>
                          <prop type="string" name="resourceType" arg="@DatasourceSet_create.resourceType"/>
                          <prop type="string" name="resourceUri" arg="@DatasourceSet_create.resourceUri"/>
                        </prop>
                        <prop type="array<object>" name="restoreCriteria" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria" required="True">
                          <item type="object">
                            <prop type="string" name="objectType" required="True">
                              <enum>
                                <item arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].ItemPathBasedRestoreCriteria" value="&quot;ItemPathBasedRestoreCriteria&quot;"/>
                                <item arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria" value="&quot;KubernetesClusterRestoreCriteria&quot;"/>
                                <item arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria" value="&quot;KubernetesClusterVaultTierRestoreCriteria&quot;"/>
                                <item arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesPVRestoreCriteria" value="&quot;KubernetesPVRestoreCriteria&quot;"/>
                                <item arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesStorageClassRestoreCriteria" value="&quot;KubernetesStorageClassRestoreCriteria&quot;"/>
                                <item arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].RangeBasedItemLevelRestoreCriteria" value="&quot;RangeBasedItemLevelRestoreCriteria&quot;"/>
                              </enum>
                            </prop>
                            <discriminator property="objectType" value="ItemPathBasedRestoreCriteria">
                              <prop type="boolean" name="isPathRelativeToBackupItem" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].ItemPathBasedRestoreCriteria.isPathRelativeToBackupItem" required="True"/>
                              <prop type="string" name="itemPath" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].ItemPathBasedRestoreCriteria.itemPath" required="True"/>
                              <prop type="array<string>" name="subItemPathPrefix" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].ItemPathBasedRestoreCriteria.subItemPathPrefix">
                                <item type="string"/>
                              </prop>
                            </discriminator>
                            <discriminator property="objectType" value="KubernetesClusterRestoreCriteria">
                              <prop type="string" name="conflictPolicy" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.conflictPolicy">
                                <enum>
                                  <item value="&quot;Patch&quot;"/>
                                  <item value="&quot;Skip&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="excludedNamespaces" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.excludedNamespaces">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="excludedResourceTypes" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.excludedResourceTypes">
                                <item type="string"/>
                              </prop>
                              <prop type="boolean" name="includeClusterScopeResources" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.includeClusterScopeResources" required="True"/>
                              <prop type="array<string>" name="includedNamespaces" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.includedNamespaces">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="includedResourceTypes" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.includedResourceTypes">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="labelSelectors" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.labelSelectors">
                                <item type="string"/>
                              </prop>
                              <prop type="object" name="namespaceMappings" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.namespaceMappings">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop type="string" name="persistentVolumeRestoreMode" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.persistentVolumeRestoreMode">
                                <enum>
                                  <item value="&quot;RestoreWithVolumeData&quot;"/>
                                  <item value="&quot;RestoreWithoutVolumeData&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="restoreHookReferences" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterRestoreCriteria.restoreHookReferences">
                                <item type="object" cls="NamespacedNameResource_create">
                                  <prop type="string" name="name" arg="@NamespacedNameResource_create.name"/>
                                  <prop type="string" name="namespace" arg="@NamespacedNameResource_create.namespace"/>
                                </item>
                              </prop>
                            </discriminator>
                            <discriminator property="objectType" value="KubernetesClusterVaultTierRestoreCriteria">
                              <prop type="string" name="conflictPolicy" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.conflictPolicy">
                                <enum>
                                  <item value="&quot;Patch&quot;"/>
                                  <item value="&quot;Skip&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="excludedNamespaces" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.excludedNamespaces">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="excludedResourceTypes" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.excludedResourceTypes">
                                <item type="string"/>
                              </prop>
                              <prop type="boolean" name="includeClusterScopeResources" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.includeClusterScopeResources" required="True"/>
                              <prop type="array<string>" name="includedNamespaces" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.includedNamespaces">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="includedResourceTypes" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.includedResourceTypes">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="labelSelectors" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.labelSelectors">
                                <item type="string"/>
                              </prop>
                              <prop type="object" name="namespaceMappings" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.namespaceMappings">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop type="string" name="persistentVolumeRestoreMode" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.persistentVolumeRestoreMode">
                                <enum>
                                  <item value="&quot;RestoreWithVolumeData&quot;"/>
                                  <item value="&quot;RestoreWithoutVolumeData&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<@NamespacedNameResource_create>" name="restoreHookReferences" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.restoreHookReferences">
                                <item type="@NamespacedNameResource_create"/>
                              </prop>
                              <prop type="ResourceId" name="stagingResourceGroupId" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.stagingResourceGroupId"/>
                              <prop type="ResourceId" name="stagingStorageAccountId" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesClusterVaultTierRestoreCriteria.stagingStorageAccountId"/>
                            </discriminator>
                            <discriminator property="objectType" value="KubernetesPVRestoreCriteria">
                              <prop type="string" name="name" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesPVRestoreCriteria.name"/>
                              <prop type="string" name="storageClassName" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesPVRestoreCriteria.storageClassName"/>
                            </discriminator>
                            <discriminator property="objectType" value="KubernetesStorageClassRestoreCriteria">
                              <prop type="string" name="provisioner" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesStorageClassRestoreCriteria.provisioner"/>
                              <prop type="string" name="selectedStorageClassName" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].KubernetesStorageClassRestoreCriteria.selectedStorageClassName"/>
                            </discriminator>
                            <discriminator property="objectType" value="RangeBasedItemLevelRestoreCriteria">
                              <prop type="string" name="maxMatchingValue" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].RangeBasedItemLevelRestoreCriteria.maxMatchingValue"/>
                              <prop type="string" name="minMatchingValue" arg="$parameters.restoreRequestObject.restoreTargetInfo.ItemLevelRestoreTargetInfo.restoreCriteria[].RangeBasedItemLevelRestoreCriteria.minMatchingValue"/>
                            </discriminator>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="objectType" value="RestoreFilesTargetInfo">
                        <prop type="object" name="targetDetails" arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails" required="True">
                          <prop type="string" name="filePrefix" arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails.filePrefix" required="True"/>
                          <prop type="string" name="restoreTargetLocationType" arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails.restoreTargetLocationType" required="True">
                            <enum>
                              <item value="&quot;AzureBlobs&quot;"/>
                              <item value="&quot;AzureFiles&quot;"/>
                              <item value="&quot;Invalid&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="targetResourceArmId" arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails.targetResourceArmId"/>
                          <prop type="string" name="url" arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreFilesTargetInfo.targetDetails.url" required="True"/>
                        </prop>
                      </discriminator>
                      <discriminator property="objectType" value="RestoreTargetInfo">
                        <prop type="@AuthCredentials_create" name="datasourceAuthCredentials" arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreTargetInfo.datasourceAuthCredentials"/>
                        <prop type="@Datasource_create" name="datasourceInfo" arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreTargetInfo.datasourceInfo" required="True"/>
                        <prop type="@DatasourceSet_create" name="datasourceSetInfo" arg="$parameters.restoreRequestObject.restoreTargetInfo.RestoreTargetInfo.datasourceSetInfo"/>
                      </discriminator>
                    </prop>
                    <prop type="string" name="sourceDataStoreType" arg="$parameters.restoreRequestObject.sourceDataStoreType" required="True">
                      <enum>
                        <item value="&quot;ArchiveStore&quot;"/>
                        <item value="&quot;OperationalStore&quot;"/>
                        <item value="&quot;SnapshotStore&quot;"/>
                        <item value="&quot;VaultStore&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="sourceResourceId" arg="$parameters.restoreRequestObject.sourceResourceId"/>
                    <discriminator property="objectType" value="AzureBackupRecoveryPointBasedRestoreRequest">
                      <prop type="string" name="recoveryPointId" arg="$parameters.restoreRequestObject.AzureBackupRecoveryPointBasedRestoreRequest.recoveryPointId" required="True"/>
                    </discriminator>
                    <discriminator property="objectType" value="AzureBackupRecoveryTimeBasedRestoreRequest">
                      <prop type="string" name="recoveryPointTime" arg="$parameters.restoreRequestObject.AzureBackupRecoveryTimeBasedRestoreRequest.recoveryPointTime" required="True"/>
                    </discriminator>
                    <discriminator property="objectType" value="AzureBackupRestoreWithRehydrationRequest">
                      <prop type="string" name="recoveryPointId" arg="$parameters.restoreRequestObject.AzureBackupRestoreWithRehydrationRequest.recoveryPointId" required="True"/>
                      <prop type="string" name="rehydrationPriority" arg="$parameters.restoreRequestObject.AzureBackupRestoreWithRehydrationRequest.rehydrationPriority" required="True">
                        <enum>
                          <item value="&quot;High&quot;"/>
                          <item value="&quot;Invalid&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="rehydrationRetentionDuration" arg="$parameters.restoreRequestObject.AzureBackupRestoreWithRehydrationRequest.rehydrationRetentionDuration" required="True"/>
                    </discriminator>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="jobId"/>
                  <prop const="True" type="string" name="objectType" required="True">
                    <default value="&quot;OperationJobExtendedInfo&quot;"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
