<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/informatica.datamanagement/organizations" version="2024-05-08" swagger="mgmt-plane/informatica/ResourceProviders/Informatica.DataManagement/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvSW5mb3JtYXRpY2EuRGF0YU1hbmFnZW1lbnQvb3JnYW5pemF0aW9ucw==/V/MjAyNC0wNS0wOA=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/informatica.datamanagement/organizations" version="2024-05-08" swagger="mgmt-plane/informatica/ResourceProviders/Informatica.DataManagement/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9JbmZvcm1hdGljYS5EYXRhTWFuYWdlbWVudC9vcmdhbml6YXRpb25z/V/MjAyNC0wNS0wOA=="/>
  <commandGroup name="informatica data-management organization">
    <command name="list" version="2024-05-08">
      <resource id="/subscriptions/{}/providers/informatica.datamanagement/organizations" version="2024-05-08" swagger="mgmt-plane/informatica/ResourceProviders/Informatica.DataManagement/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvSW5mb3JtYXRpY2EuRGF0YU1hbmFnZW1lbnQvb3JnYW5pemF0aW9ucw==/V/MjAyNC0wNS0wOA=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/informatica.datamanagement/organizations" version="2024-05-08" swagger="mgmt-plane/informatica/ResourceProviders/Informatica.DataManagement/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9JbmZvcm1hdGljYS5EYXRhTWFuYWdlbWVudC9vcmdhbml6YXRpb25z/V/MjAyNC0wNS0wOA=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" group="" idPart="resource_group">
          <help short="Resource group name"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Subscription"/>
        </arg>
      </argGroup>
      <condition var="$Condition_Organizations_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Organizations_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Organizations_ListByResourceGroup" operationId="Organizations_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Informatica.DataManagement/organizations">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-08&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Informatica.DataManagement/organizations/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="companyDetails">
                          <prop type="string" name="business"/>
                          <prop type="string" name="companyName"/>
                          <prop type="string" name="country"/>
                          <prop type="string" name="domain"/>
                          <prop type="integer32" name="numberOfEmployees"/>
                          <prop type="string" name="officeAddress"/>
                        </prop>
                        <prop type="object" name="informaticaProperties">
                          <prop type="string" name="informaticaRegion"/>
                          <prop type="string" name="organizationId"/>
                          <prop type="string" name="organizationName"/>
                          <prop type="string" name="singleSignOnUrl"/>
                        </prop>
                        <prop type="object" name="linkOrganization">
                          <prop type="string" name="token"/>
                        </prop>
                        <prop type="object" name="marketplaceDetails">
                          <prop type="string" name="marketplaceSubscriptionId"/>
                          <prop type="object" name="offerDetails" required="True">
                            <prop type="string" name="offerId" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="planId" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="planName" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="publisherId" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="termId" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="termUnit">
                              <format maxLength="50"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userDetails">
                          <prop type="string" name="emailAddress">
                            <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                          </prop>
                          <prop type="string" name="firstName">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="lastName">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="phoneNumber">
                            <format maxLength="40"/>
                          </prop>
                          <prop type="string" name="upn"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Organizations_ListBySubscription" operationId="Organizations_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Informatica.DataManagement/organizations">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-08&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Informatica.DataManagement/organizations/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="companyDetails">
                          <prop type="string" name="business"/>
                          <prop type="string" name="companyName"/>
                          <prop type="string" name="country"/>
                          <prop type="string" name="domain"/>
                          <prop type="integer32" name="numberOfEmployees"/>
                          <prop type="string" name="officeAddress"/>
                        </prop>
                        <prop type="object" name="informaticaProperties">
                          <prop type="string" name="informaticaRegion"/>
                          <prop type="string" name="organizationId"/>
                          <prop type="string" name="organizationName"/>
                          <prop type="string" name="singleSignOnUrl"/>
                        </prop>
                        <prop type="object" name="linkOrganization">
                          <prop type="string" name="token"/>
                        </prop>
                        <prop type="object" name="marketplaceDetails">
                          <prop type="string" name="marketplaceSubscriptionId"/>
                          <prop type="object" name="offerDetails" required="True">
                            <prop type="string" name="offerId" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="planId" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="planName" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="publisherId" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="termId" required="True">
                              <format maxLength="250"/>
                            </prop>
                            <prop type="string" name="termUnit">
                              <format maxLength="50"/>
                            </prop>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userDetails">
                          <prop type="string" name="emailAddress">
                            <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                          </prop>
                          <prop type="string" name="firstName">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="lastName">
                            <format maxLength="50"/>
                          </prop>
                          <prop type="string" name="phoneNumber">
                            <format maxLength="40"/>
                          </prop>
                          <prop type="string" name="upn"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
