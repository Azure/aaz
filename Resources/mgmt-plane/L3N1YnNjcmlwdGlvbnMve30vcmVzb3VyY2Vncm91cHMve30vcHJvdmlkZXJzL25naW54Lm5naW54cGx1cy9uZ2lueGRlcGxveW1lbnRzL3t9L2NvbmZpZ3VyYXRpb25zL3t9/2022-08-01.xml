<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/configurations/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NvbmZpZ3VyYXRpb25zL3tjb25maWd1cmF0aW9uTmFtZX0=/V/MjAyMi0wOC0wMQ=="/>
  <commandGroup name="nginx deployment configuration">
    <command name="show" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/configurations/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NvbmZpZ3VyYXRpb25zL3tjb25maWd1cmF0aW9uTmFtZX0=/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name name n" required="True" idPart="child_name_1">
          <help short="The name of configuration, only 'default' is supported value due to the singleton of Nginx conf"/>
        </arg>
        <arg type="string" var="$Path.deploymentName" options="deployment-name" required="True" idPart="name">
          <help short="The name of targeted Nginx deployment"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Configurations_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/configurations/{configurationName}">
          <request method="get">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}/configurations/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="files">
                      <item type="object" cls="NginxConfigurationFile_read">
                        <prop type="string" name="content"/>
                        <prop type="string" name="virtualPath"/>
                      </item>
                    </prop>
                    <prop type="object" name="package">
                      <prop type="string" name="data"/>
                    </prop>
                    <prop type="array<@NginxConfigurationFile_read>" name="protectedFiles">
                      <item type="@NginxConfigurationFile_read"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="rootFile"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/configurations/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NvbmZpZ3VyYXRpb25zL3tjb25maWd1cmF0aW9uTmFtZX0=/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name name n" required="True" idPart="child_name_1">
          <help short="The name of configuration, only 'default' is supported value due to the singleton of Nginx conf"/>
        </arg>
        <arg type="string" var="$Path.deploymentName" options="deployment-name" required="True" idPart="name">
          <help short="The name of targeted Nginx deployment"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" group="Body"/>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$body.properties.files" options="files" group="Properties">
          <help short="This is an array of files required for the config set-up" lines="file>&quot;,&quot;virtual-path&quot;:&quot;<path>&quot;}]. [{&quot;content&quot;:&quot;<Base64 virtual-path multi-file references directive. set-up, file(s) include --files content should config Usage: config files match file. needs other root root file have One the the For the the of to to in an of a"/>
          <item type="object" cls="NginxConfigurationFile_create">
            <arg type="string" var="@NginxConfigurationFile_create.content" options="content"/>
            <arg type="string" var="@NginxConfigurationFile_create.virtualPath" options="virtual-path"/>
          </item>
        </arg>
        <arg type="object" var="$body.properties.package" options="package" hide="True" group="Properties">
          <help short="Compressed files"/>
          <arg type="string" var="$body.properties.package.data" options="data"/>
        </arg>
        <arg type="array<@NginxConfigurationFile_create>" var="$body.properties.protectedFiles" options="protected-files" hide="True" group="Properties">
          <help short="Protected files"/>
          <item type="@NginxConfigurationFile_create"/>
        </arg>
        <arg type="string" var="$body.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="State of configuration"/>
          <enum>
            <item name="Accepted" value="&quot;Accepted&quot;"/>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="Creating" value="&quot;Creating&quot;"/>
            <item name="Deleted" value="&quot;Deleted&quot;"/>
            <item name="Deleting" value="&quot;Deleting&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
            <item name="Updating" value="&quot;Updating&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.rootFile" options="root-file" group="Properties">
          <help short="The root file that should align with your Nginx configuration structure"/>
        </arg>
      </argGroup>
      <operation operationId="Configurations_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/configurations/{configurationName}">
          <request method="put">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$body.location"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="files" arg="$body.properties.files">
                      <item type="object" cls="NginxConfigurationFile_create">
                        <prop type="string" name="content" arg="@NginxConfigurationFile_create.content"/>
                        <prop type="string" name="virtualPath" arg="@NginxConfigurationFile_create.virtualPath"/>
                      </item>
                    </prop>
                    <prop type="object" name="package" arg="$body.properties.package">
                      <prop type="string" name="data" arg="$body.properties.package.data"/>
                    </prop>
                    <prop type="array<@NginxConfigurationFile_create>" name="protectedFiles" arg="$body.properties.protectedFiles">
                      <item type="@NginxConfigurationFile_create"/>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$body.properties.provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="rootFile" arg="$body.properties.rootFile"/>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}/configurations/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="files">
                      <item type="object" cls="NginxConfigurationFile_read">
                        <prop type="string" name="content"/>
                        <prop type="string" name="virtualPath"/>
                      </item>
                    </prop>
                    <prop type="object" name="package">
                      <prop type="string" name="data"/>
                    </prop>
                    <prop type="array<@NginxConfigurationFile_read>" name="protectedFiles">
                      <item type="@NginxConfigurationFile_read"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="rootFile"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/configurations/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NvbmZpZ3VyYXRpb25zL3tjb25maWd1cmF0aW9uTmFtZX0=/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name name n" required="True" idPart="child_name_1">
          <help short="The name of configuration, only 'default' is supported value due to the singleton of Nginx conf"/>
        </arg>
        <arg type="string" var="$Path.deploymentName" options="deployment-name" required="True" idPart="name">
          <help short="The name of targeted Nginx deployment"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg nullable="True" type="ResourceLocation" var="$body.location" options="location l" group="Body"/>
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="Body">
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$body.properties.files" options="files" group="Properties">
          <item nullable="True" type="object" cls="NginxConfigurationFile_update">
            <arg nullable="True" type="string" var="@NginxConfigurationFile_update.content" options="content"/>
            <arg nullable="True" type="string" var="@NginxConfigurationFile_update.virtualPath" options="virtual-path"/>
          </item>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.package" options="package" group="Properties">
          <help short="Compressed files"/>
          <arg nullable="True" type="string" var="$body.properties.package.data" options="data"/>
        </arg>
        <arg nullable="True" type="array<@NginxConfigurationFile_update>" var="$body.properties.protectedFiles" options="protected-files" group="Properties">
          <help short="Protected files"/>
          <item nullable="True" type="@NginxConfigurationFile_update"/>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="State of configuration"/>
          <enum>
            <item name="Accepted" value="&quot;Accepted&quot;"/>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="Creating" value="&quot;Creating&quot;"/>
            <item name="Deleted" value="&quot;Deleted&quot;"/>
            <item name="Deleting" value="&quot;Deleting&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
            <item name="Updating" value="&quot;Updating&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.rootFile" options="root-file" group="Properties"/>
      </argGroup>
      <operation operationId="Configurations_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/configurations/{configurationName}">
          <request method="get">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NginxConfiguration_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}/configurations/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<object>" name="files">
                      <item type="object" cls="NginxConfigurationFile_read">
                        <prop type="string" name="content"/>
                        <prop type="string" name="virtualPath"/>
                      </item>
                    </prop>
                    <prop type="object" name="package">
                      <prop type="string" name="data"/>
                    </prop>
                    <prop type="array<@NginxConfigurationFile_read>" name="protectedFiles">
                      <item type="@NginxConfigurationFile_read"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="rootFile"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop readOnly="True" type="dateTime" name="createdAt"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastModifiedAt"/>
                    <prop readOnly="True" type="string" name="lastModifiedBy"/>
                    <prop readOnly="True" type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$body.location"/>
              <prop type="object" name="properties">
                <prop type="array<object>" name="files" arg="$body.properties.files">
                  <item type="object" cls="NginxConfigurationFile_update">
                    <prop type="string" name="content" arg="@NginxConfigurationFile_update.content"/>
                    <prop type="string" name="virtualPath" arg="@NginxConfigurationFile_update.virtualPath"/>
                  </item>
                </prop>
                <prop type="object" name="package" arg="$body.properties.package">
                  <prop type="string" name="data" arg="$body.properties.package.data"/>
                </prop>
                <prop type="array<@NginxConfigurationFile_update>" name="protectedFiles" arg="$body.properties.protectedFiles">
                  <item type="@NginxConfigurationFile_update"/>
                </prop>
                <prop type="string" name="provisioningState" arg="$body.properties.provisioningState">
                  <enum>
                    <item value="&quot;Accepted&quot;"/>
                    <item value="&quot;Canceled&quot;"/>
                    <item value="&quot;Creating&quot;"/>
                    <item value="&quot;Deleted&quot;"/>
                    <item value="&quot;Deleting&quot;"/>
                    <item value="&quot;Failed&quot;"/>
                    <item value="&quot;NotSpecified&quot;"/>
                    <item value="&quot;Succeeded&quot;"/>
                    <item value="&quot;Updating&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="rootFile" arg="$body.properties.rootFile"/>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Configurations_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/configurations/{configurationName}">
          <request method="put">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NginxConfiguration_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-08-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/configurations/{}" version="2022-08-01" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2NvbmZpZ3VyYXRpb25zL3tjb25maWd1cmF0aW9uTmFtZX0=/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name name n" required="True" idPart="child_name_1">
          <help short="The name of configuration, only 'default' is supported value due to the singleton of Nginx conf"/>
        </arg>
        <arg type="string" var="$Path.deploymentName" options="deployment-name" required="True" idPart="name">
          <help short="The name of targeted Nginx deployment"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Configurations_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/configurations/{configurationName}">
          <request method="delete">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
  </commandGroup>
</CodeGen>
