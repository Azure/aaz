<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/activitylogalerts/{}" version="2017-04-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9taWNyb3NvZnQuaW5zaWdodHMvYWN0aXZpdHlMb2dBbGVydHMve2FjdGl2aXR5TG9nQWxlcnROYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
  <commandGroup name="monitor activity-log alert">
    <command name="show" version="2017-04-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/activitylogalerts/{}" version="2017-04-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9taWNyb3NvZnQuaW5zaWdodHMvYWN0aXZpdHlMb2dBbGVydHMve2FjdGl2aXR5TG9nQWxlcnROYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.activityLogAlertName" options="activity-log-alert-name name n" required="True" idPart="name">
          <help short="The name of the activity log alert."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ActivityLogAlerts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/activityLogAlerts/{activityLogAlertName}">
          <request method="get">
            <path>
              <param type="string" name="activityLogAlertName" arg="$Path.activityLogAlertName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/microsoft.insights/activityLogAlerts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="actions" required="True">
                      <prop type="array<object>" name="actionGroups">
                        <item type="object">
                          <prop type="string" name="actionGroupId" required="True"/>
                          <prop type="object" name="webhookProperties">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="condition" required="True">
                      <prop type="array<object>" name="allOf" required="True">
                        <item type="object">
                          <prop type="string" name="equals" required="True"/>
                          <prop type="string" name="field" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="boolean" name="enabled">
                      <default value="true"/>
                    </prop>
                    <prop type="array<string>" name="scopes" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2017-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/activitylogalerts/{}" version="2017-04-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9taWNyb3NvZnQuaW5zaWdodHMvYWN0aXZpdHlMb2dBbGVydHMve2FjdGl2aXR5TG9nQWxlcnROYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.activityLogAlertName" options="activity-log-alert-name name n" required="True" idPart="name">
          <help short="The name of the activity log alert."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ActivityLogAlerts_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/activityLogAlerts/{activityLogAlertName}">
          <request method="delete">
            <path>
              <param type="string" name="activityLogAlertName" arg="$Path.activityLogAlertName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2017-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/activitylogalerts/{}" version="2017-04-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9taWNyb3NvZnQuaW5zaWdodHMvYWN0aXZpdHlMb2dBbGVydHMve2FjdGl2aXR5TG9nQWxlcnROYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.activityLogAlertName" options="activity-log-alert-name name n" required="True" idPart="name">
          <help short="The name of the activity log alert."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$activityLogAlert.location" options="location l" required="True" group="">
          <help short="Resource location"/>
        </arg>
        <arg type="array<object>" var="$activityLogAlert.properties.actions.actionGroups" options="action-groups" group="">
          <help short="The list of activity log alerts."/>
          <item type="object">
            <arg type="string" var="$activityLogAlert.properties.actions.actionGroups[].actionGroupId" options="action-group-id" required="True">
              <help short="The resourceId of the action group. This cannot be null or empty."/>
            </arg>
            <arg type="object" var="$activityLogAlert.properties.actions.actionGroups[].webhookProperties" options="webhook-properties-raw" group="">
              <help short="the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$activityLogAlert.properties.condition.allOf" options="all-of" group="">
          <help short="The list of activity log alert conditions."/>
          <item type="object">
            <arg type="string" var="$activityLogAlert.properties.condition.allOf[].equals" options="equals" required="True">
              <help short="The field value will be compared to this value (case-insensitive) to determine if the condition is met."/>
            </arg>
            <arg type="string" var="$activityLogAlert.properties.condition.allOf[].field" options="field" required="True">
              <help short="The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$activityLogAlert.properties.description" options="description" group="">
          <help short="A description of this activity log alert."/>
        </arg>
        <arg type="boolean" var="$activityLogAlert.properties.enabled" options="enabled" group="">
          <help short="Indicates whether this activity log alert is enabled. If an activity log alert is not enabled, then none of its actions will be activated."/>
          <default value="true"/>
        </arg>
        <arg type="array<string>" var="$activityLogAlert.properties.scopes" options="scopes" group="">
          <help short="A list of resourceIds that will be used as prefixes." lines="The alert will only apply to activityLogs with resourceIds that fall under one of these prefixes. This list must include at least one item."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$activityLogAlert.tags" options="tags" group="">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="ActivityLogAlerts_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/activityLogAlerts/{activityLogAlertName}">
          <request method="put">
            <path>
              <param type="string" name="activityLogAlertName" arg="$Path.activityLogAlertName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="activityLogAlert" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$activityLogAlert.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="actions" required="True">
                      <prop type="array<object>" name="actionGroups" arg="$activityLogAlert.properties.actions.actionGroups">
                        <item type="object">
                          <prop type="string" name="actionGroupId" arg="$activityLogAlert.properties.actions.actionGroups[].actionGroupId" required="True"/>
                          <prop type="object" name="webhookProperties" arg="$activityLogAlert.properties.actions.actionGroups[].webhookProperties">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="condition" required="True">
                      <prop type="array<object>" name="allOf" arg="$activityLogAlert.properties.condition.allOf" required="True">
                        <item type="object">
                          <prop type="string" name="equals" arg="$activityLogAlert.properties.condition.allOf[].equals" required="True"/>
                          <prop type="string" name="field" arg="$activityLogAlert.properties.condition.allOf[].field" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="description" arg="$activityLogAlert.properties.description"/>
                    <prop type="boolean" name="enabled" arg="$activityLogAlert.properties.enabled">
                      <default value="true"/>
                    </prop>
                    <prop type="array<string>" name="scopes" arg="$activityLogAlert.properties.scopes" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$activityLogAlert.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/microsoft.insights/activityLogAlerts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="actions" required="True">
                      <prop type="array<object>" name="actionGroups">
                        <item type="object">
                          <prop type="string" name="actionGroupId" required="True"/>
                          <prop type="object" name="webhookProperties">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="condition" required="True">
                      <prop type="array<object>" name="allOf" required="True">
                        <item type="object">
                          <prop type="string" name="equals" required="True"/>
                          <prop type="string" name="field" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="boolean" name="enabled">
                      <default value="true"/>
                    </prop>
                    <prop type="array<string>" name="scopes" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2017-04-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/activitylogalerts/{}" version="2017-04-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9taWNyb3NvZnQuaW5zaWdodHMvYWN0aXZpdHlMb2dBbGVydHMve2FjdGl2aXR5TG9nQWxlcnROYW1lfQ==/V/MjAxNy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.activityLogAlertName" options="activity-log-alert-name name n" required="True" idPart="name">
          <help short="The name of the activity log alert."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="array<object>" var="$activityLogAlert.properties.actions.actionGroups" options="action-groups" group="">
          <help short="The list of activity log alerts."/>
          <item nullable="True" type="object">
            <arg type="string" var="$activityLogAlert.properties.actions.actionGroups[].actionGroupId" options="action-group-id">
              <help short="The resourceId of the action group. This cannot be null or empty."/>
            </arg>
            <arg nullable="True" type="object" var="$activityLogAlert.properties.actions.actionGroups[].webhookProperties" options="webhook-properties-raw" group="">
              <help short="the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$activityLogAlert.properties.condition.allOf" options="all-of" group="">
          <help short="The list of activity log alert conditions."/>
          <item nullable="True" type="object">
            <arg type="string" var="$activityLogAlert.properties.condition.allOf[].equals" options="equals">
              <help short="The field value will be compared to this value (case-insensitive) to determine if the condition is met."/>
            </arg>
            <arg type="string" var="$activityLogAlert.properties.condition.allOf[].field" options="field">
              <help short="The name of the field that this condition will examine. The possible values for this field are (case-insensitive): 'resourceId', 'category', 'caller', 'level', 'operationName', 'resourceGroup', 'resourceProvider', 'status', 'subStatus', 'resourceType', or anything beginning with 'properties.'."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$activityLogAlert.properties.description" options="description" group="">
          <help short="A description of this activity log alert."/>
        </arg>
        <arg nullable="True" type="boolean" var="$activityLogAlert.properties.enabled" options="enabled" group="">
          <help short="Indicates whether this activity log alert is enabled. If an activity log alert is not enabled, then none of its actions will be activated."/>
        </arg>
        <arg type="array<string>" var="$activityLogAlert.properties.scopes" options="scopes" group="">
          <help short="A list of resourceIds that will be used as prefixes." lines="The alert will only apply to activityLogs with resourceIds that fall under one of these prefixes. This list must include at least one item."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="object" var="$activityLogAlert.tags" options="tags" group="">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="ActivityLogAlerts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/activityLogAlerts/{activityLogAlertName}">
          <request method="get">
            <path>
              <param type="string" name="activityLogAlertName" arg="$Path.activityLogAlertName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ActivityLogAlertResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/microsoft.insights/activityLogAlerts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="actions" required="True">
                      <prop type="array<object>" name="actionGroups">
                        <item type="object">
                          <prop type="string" name="actionGroupId" required="True"/>
                          <prop type="object" name="webhookProperties">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="condition" required="True">
                      <prop type="array<object>" name="allOf" required="True">
                        <item type="object">
                          <prop type="string" name="equals" required="True"/>
                          <prop type="string" name="field" required="True"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="boolean" name="enabled">
                      <default value="true"/>
                    </prop>
                    <prop type="array<string>" name="scopes" required="True">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="activityLogAlert" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="actions" required="True">
                  <prop type="array<object>" name="actionGroups" arg="$activityLogAlert.properties.actions.actionGroups">
                    <item type="object">
                      <prop type="string" name="actionGroupId" arg="$activityLogAlert.properties.actions.actionGroups[].actionGroupId" required="True"/>
                      <prop type="object" name="webhookProperties" arg="$activityLogAlert.properties.actions.actionGroups[].webhookProperties">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="condition" required="True">
                  <prop type="array<object>" name="allOf" arg="$activityLogAlert.properties.condition.allOf" required="True">
                    <item type="object">
                      <prop type="string" name="equals" arg="$activityLogAlert.properties.condition.allOf[].equals" required="True"/>
                      <prop type="string" name="field" arg="$activityLogAlert.properties.condition.allOf[].field" required="True"/>
                    </item>
                  </prop>
                </prop>
                <prop type="string" name="description" arg="$activityLogAlert.properties.description"/>
                <prop type="boolean" name="enabled" arg="$activityLogAlert.properties.enabled">
                  <default value="true"/>
                </prop>
                <prop type="array<string>" name="scopes" arg="$activityLogAlert.properties.scopes" required="True">
                  <item type="string"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$activityLogAlert.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ActivityLogAlerts_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/microsoft.insights/activityLogAlerts/{activityLogAlertName}">
          <request method="put">
            <path>
              <param type="string" name="activityLogAlertName" arg="$Path.activityLogAlertName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ActivityLogAlertResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
