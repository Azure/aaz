{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}", "version": "2023-10-01-preview", "swagger": "mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "security security-connector", "commands": [{"name": "show", "version": "2023-10-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}", "version": "2023-10-01-preview", "swagger": "mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "string", "var": "$Path.securityConnectorName", "options": ["n", "name", "security-connector-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The security connector name."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "SecurityConnectors_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "securityConnectorName", "arg": "$Path.securityConnectorName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Security/securityConnectors/{}"}}, {"type": "string", "name": "kind"}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "environmentData", "props": [{"type": "string", "name": "environmentType", "required": true, "enum": {"items": [{"value": "AwsAccount"}, {"value": "AzureDevOpsScope"}, {"value": "GcpProject"}, {"value": "GithubScope"}, {"value": "GitlabScope"}]}}], "discriminators": [{"property": "environmentType", "value": "AwsAccount", "props": [{"readOnly": true, "type": "string", "name": "accountName"}, {"type": "object", "name": "organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"value": "Member"}, {"value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedAccountIds", "item": {"type": "string"}}, {"type": "string", "name": "stacksetName"}]}]}, {"type": "array<string>", "name": "regions", "item": {"type": "string"}}, {"type": "integer64", "name": "scanInterval"}]}, {"property": "environmentType", "value": "AzureDevOpsScope"}, {"property": "environmentType", "value": "GcpProject", "props": [{"type": "object", "name": "organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"value": "Member"}, {"value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "managementProjectNumber"}, {"type": "string", "name": "parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedProjectNumbers", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "organizationName"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}]}, {"type": "object", "name": "projectDetails", "props": [{"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "projectName"}, {"type": "string", "name": "projectNumber"}, {"readOnly": true, "type": "string", "name": "workloadIdentityPoolId"}]}, {"type": "integer64", "name": "scanInterval"}]}, {"property": "environmentType", "value": "GithubScope"}, {"property": "environmentType", "value": "GitlabScope"}]}, {"type": "string", "name": "environmentName", "enum": {"items": [{"value": "AWS"}, {"value": "Azure"}, {"value": "AzureDevOps"}, {"value": "GCP"}, {"value": "GitLab"}, {"value": "Github"}]}}, {"type": "string", "name": "hierarchyIdentifier"}, {"readOnly": true, "type": "dateTime", "name": "hierarchyIdentifierTrialEndDate"}, {"type": "array<object>", "name": "offerings", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "description"}, {"type": "string", "name": "offeringType", "required": true, "enum": {"items": [{"value": "CspmMonitorAws"}, {"value": "CspmMonitorAzureDevOps"}, {"value": "CspmMonitorGcp"}, {"value": "CspmMonitorGitLab"}, {"value": "CspmMonitorGithub"}, {"value": "DefenderCspmAws"}, {"value": "DefenderCspmGcp"}, {"value": "DefenderForContainersAws"}, {"value": "DefenderForContainersGcp"}, {"value": "DefenderForDatabasesAws"}, {"value": "DefenderForDatabasesGcp"}, {"value": "DefenderForDevOpsAzureDevOps"}, {"value": "DefenderForDevOpsGitLab"}, {"value": "DefenderForDevOpsGithub"}, {"value": "DefenderForServersAws"}, {"value": "DefenderForServersGcp"}, {"value": "InformationProtectionAws"}]}}], "discriminators": [{"property": "offeringType", "value": "CspmMonitorAws", "props": [{"type": "object", "name": "nativeCloudConnection", "props": [{"type": "string", "name": "cloudRoleArn"}]}]}, {"property": "offeringType", "value": "CspmMonitorAzureDevOps"}, {"property": "offeringType", "value": "CspmMonitorGcp", "props": [{"type": "object", "name": "nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "CspmMonitorGitLab"}, {"property": "offeringType", "value": "CspmMonitorGithub"}, {"property": "offeringType", "value": "DefenderCspmAws", "props": [{"type": "object", "name": "ciem", "props": [{"type": "object", "name": "ciemDiscovery", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "ciemOidc", "props": [{"type": "string", "name": "azureActiveDirectoryAppName"}, {"type": "string", "name": "cloudRoleArn"}]}]}, {"type": "object", "name": "dataSensitivityDiscovery", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderCspmGcp", "props": [{"type": "object", "name": "ciemDiscovery", "props": [{"type": "string", "name": "azureActiveDirectoryAppName"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "dataSensitivityDiscovery", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderForContainersAws", "props": [{"type": "boolean", "name": "autoProvisioning"}, {"type": "object", "name": "cloudWatchToKinesis", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessment", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessmentTask", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "boolean", "name": "enableContainerVulnerabilityAssessment"}, {"type": "object", "name": "kinesisToS3", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "integer64", "name": "kubeAuditRetentionTime"}, {"type": "object", "name": "kubernetesScubaReader", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "kubernetesService", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "string", "name": "scubaExternalId"}]}, {"property": "offeringType", "value": "DefenderForContainersGcp", "props": [{"type": "boolean", "name": "auditLogsAutoProvisioningFlag"}, {"type": "object", "name": "dataPipelineNativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "boolean", "name": "defenderAgentAutoProvisioningFlag"}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "boolean", "name": "policyAgentAutoProvisioningFlag"}]}, {"property": "offeringType", "value": "DefenderForDatabasesAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "rds", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderForDatabasesGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "defenderForDatabasesArcAutoProvisioning", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "DefenderForDevOpsAzureDevOps"}, {"property": "offeringType", "value": "DefenderForDevOpsGitLab"}, {"property": "offeringType", "value": "DefenderForDevOpsGithub"}, {"property": "offeringType", "value": "DefenderForServersAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "defenderForServers", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "subPlan", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderForServersGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "defenderForServers", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "subPlan", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "InformationProtectionAws", "props": [{"type": "object", "name": "informationProtection", "props": [{"type": "string", "name": "cloudRoleArn"}]}]}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2023-10-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}", "version": "2023-10-01-preview", "swagger": "mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "string", "var": "$Path.securityConnectorName", "options": ["n", "name", "security-connector-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The security connector name."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "SecurityConnectors_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "securityConnectorName", "arg": "$Path.securityConnectorName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-10-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}", "version": "2023-10-01-preview", "swagger": "mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "string", "var": "$Path.securityConnectorName", "options": ["n", "name", "security-connector-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The security connector name."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Properties", "args": [{"type": "object", "var": "$securityConnector.properties.environmentData", "options": ["environment-data"], "group": "Properties", "help": {"short": "The security connector environment data."}, "args": [{"type": "object", "var": "$securityConnector.properties.environmentData.AwsAccount", "options": ["aws-account"], "group": "", "help": {"short": "AWS Account"}, "args": [{"type": "object", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData", "options": ["organizational-data"], "help": {"short": "The AWS account's organizational data"}, "args": [{"type": "object", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Member", "options": ["member"], "args": [{"type": "string", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Member.parentHierarchyId", "options": ["parent-hierarchy-id"], "help": {"short": "If the multi cloud account is not of membership type organization, this will be the ID of the account's parent"}}]}, {"type": "object", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization", "options": ["organization"], "args": [{"type": "array<string>", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization.excludedAccountIds", "options": ["excluded-account-ids"], "help": {"short": "If the multi cloud account is of membership type organization, list of accounts excluded from offering"}, "item": {"type": "string"}}, {"type": "string", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization.stacksetName", "options": ["stackset-name"], "help": {"short": "If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset"}}]}]}, {"type": "array<string>", "var": "$securityConnector.properties.environmentData.AwsAccount.regions", "options": ["regions"], "help": {"short": "list of regions to scan"}, "item": {"type": "string"}}, {"type": "integer64", "var": "$securityConnector.properties.environmentData.AwsAccount.scanInterval", "options": ["scan-interval"], "help": {"short": "Scan interval in hours (value should be between 1-hour to 24-hours)"}}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.environmentData.AzureDevOpsScope", "options": ["azuredevops-scope"], "group": "", "help": {"short": "AzureDevOps Scope"}}, {"type": "object", "var": "$securityConnector.properties.environmentData.GcpProject", "options": ["gcp-project"], "group": "", "help": {"short": "GCP Project"}, "args": [{"type": "object", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData", "options": ["organizational-data"], "help": {"short": "The Gcp project's organizational data"}, "args": [{"type": "object", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member", "options": ["member"], "args": [{"type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member.managementProjectNumber", "options": ["management-project-number"], "help": {"short": "The GCP management project number from organizational onboarding"}}, {"type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member.parentHierarchyId", "options": ["parent-hierarchy-id"], "help": {"short": "If the multi cloud account is not of membership type organization, this will be the ID of the project's parent"}}]}, {"type": "object", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization", "options": ["organization"], "args": [{"type": "array<string>", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.excludedProjectNumbers", "options": ["excluded-project-numbers"], "help": {"short": "If the multi cloud account is of membership type organization, list of accounts excluded from offering"}, "item": {"type": "string"}}, {"type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address which represents the organization level permissions container."}}, {"type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id which represents the permissions required to auto provision security connectors"}}]}]}, {"type": "object", "var": "$securityConnector.properties.environmentData.GcpProject.projectDetails", "options": ["project-details"], "help": {"short": "The Gcp project's details"}, "args": [{"type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.projectDetails.projectId", "options": ["project-id"], "help": {"short": "The GCP Project id"}}, {"type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.projectDetails.projectNumber", "options": ["project-number"], "help": {"short": "The unique GCP Project number"}}]}, {"type": "integer64", "var": "$securityConnector.properties.environmentData.GcpProject.scanInterval", "options": ["scan-interval"], "help": {"short": "Scan interval in hours (value should be between 1-hour to 24-hours)"}}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.environmentData.GithubScope", "options": ["github-scope"], "group": "", "help": {"short": "GitHub Scope"}}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.environmentData.GitlabScope", "options": ["gitlab-scope"], "group": "", "help": {"short": "GitLab Scope"}}]}, {"type": "string", "var": "$securityConnector.properties.environmentName", "options": ["environment-name"], "group": "Properties", "help": {"short": "The multi cloud resource's cloud name."}, "enum": {"items": [{"name": "AWS", "value": "AWS"}, {"name": "Azure", "value": "Azure"}, {"name": "AzureDevOps", "value": "AzureDevOps"}, {"name": "GCP", "value": "GCP"}, {"name": "GitLab", "value": "GitLab"}, {"name": "Github", "value": "Github"}]}}, {"type": "string", "var": "$securityConnector.properties.hierarchyIdentifier", "options": ["hierarchy-identifier"], "group": "Properties", "help": {"short": "The multi cloud resource identifier (account id in case of AWS connector, project number in case of GCP connector, GUID in case DevOps connector)."}}, {"type": "array<object>", "var": "$securityConnector.properties.offerings", "options": ["offerings"], "group": "Properties", "help": {"short": "A collection of offerings for the security connector."}, "item": {"type": "object", "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorAws", "options": ["cspm-monitor-aws"], "group": "", "help": {"short": "CspmMonitorAWS Offering"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorAws.nativeCloudConnection", "options": ["native-cloud-connection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].CspmMonitorAws.nativeCloudConnection.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorAzureDevOps", "options": ["cspm-monitor-azuredevops"], "group": "", "help": {"short": "CspmMonitorAzureDevOps Offering"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorGcp", "options": ["cspm-monitor-gcp"], "group": "", "help": {"short": "CspmMonitorGCP Offering"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection", "options": ["native-cloud-connection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this offering"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id for the offering"}}]}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorGitLab", "options": ["cspm-monitor-gitlab"], "group": "", "help": {"short": "CspmMonitorGitLab Offering"}}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorGithub", "options": ["cspm-monitor-github"], "group": "", "help": {"short": "CspmMonitorGitHub Offering"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws", "options": ["defender-cspm-aws"], "group": "", "help": {"short": "DefenderCspmAWS Offering"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem", "options": ["ciem"], "help": {"short": "Defenders CSPM Cloud infrastructure entitlement management (CIEM) offering configurations"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemDiscovery", "options": ["ciem-discovery"], "help": {"short": "Defender CSPM CIEM discovery configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemDiscovery.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for CIEM discovery"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc", "options": ["ciem-oidc"], "help": {"short": "Defender CSPM CIEM AWS OIDC (open id connect) configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc.azureActiveDirectoryAppName", "options": ["azure-active-directory-app-name"], "help": {"short": "the azure active directory app name used of authenticating against AWS"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for CIEM oidc connection"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery", "options": ["data-sensitivity-discovery"], "help": {"short": "The Microsoft Defender Data Sensitivity discovery configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender Data Sensitivity discovery enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm", "options": ["databases-dspm"], "help": {"short": "The databases DSPM configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm.enabled", "options": ["enabled"], "help": {"short": "Is databases DSPM protection enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s", "options": ["mdc-containers-agentless-discovery-k8s"], "help": {"short": "The Microsoft Defender container agentless discovery K8s configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container agentless discovery K8s enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment", "options": ["mdc-containers-image-assessment"], "help": {"short": "The Microsoft Defender container image assessment configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container image assessment enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners", "options": ["vm-scanners"], "help": {"short": "The Microsoft Defender for Server VM scanning configuration"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Server VM scanning"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.exclusionTags", "options": ["exclusion-tags"], "help": {"short": "VM tags that indicates that VM should not be scanned"}, "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.scanningMode", "options": ["scanning-mode"], "help": {"short": "The scanning mode for the VM scan."}, "enum": {"items": [{"name": "Default", "value": "Default"}]}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Server VM scanning enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp", "options": ["defender-cspm-gcp"], "group": "", "help": {"short": "DefenderCspmGCP Offering"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery", "options": ["ciem-discovery"], "help": {"short": "GCP Defenders CSPM Cloud infrastructure entitlement management (CIEM) discovery offering configurations"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.azureActiveDirectoryAppName", "options": ["azure-active-directory-app-name"], "help": {"short": "the azure active directory app name used of authenticating against GCP workload identity federation"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for CIEM discovery offering"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id for CIEM discovery offering"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery", "options": ["data-sensitivity-discovery"], "help": {"short": "The Microsoft Defender Data Sensitivity discovery configuration"}, "args": [{"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender Data Sensitivity discovery enabled"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s", "options": ["mdc-containers-agentless-discovery-k8s"], "help": {"short": "The Microsoft Defender Container agentless discovery configuration"}, "args": [{"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container agentless discovery enabled"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment", "options": ["mdc-containers-image-assessment"], "help": {"short": "The Microsoft Defender Container image assessment configuration"}, "args": [{"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container image assessment enabled"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners", "options": ["vm-scanners"], "help": {"short": "The Microsoft Defender for Server VM scanning configuration"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Server VM scanning"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration.exclusionTags", "options": ["exclusion-tags"], "help": {"short": "VM tags that indicates that VM should not be scanned"}, "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration.scanningMode", "options": ["scanning-mode"], "help": {"short": "The scanning mode for the VM scan."}, "enum": {"items": [{"name": "Default", "value": "Default"}]}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Server VM scanning enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws", "options": ["defender-for-containers-aws"], "args": [{"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.autoProvisioning", "options": ["auto-provisioning"], "help": {"short": "Is audit logs pipeline auto provisioning enabled"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.cloudWatchToKinesis", "options": ["cloud-watch-to-kinesis"], "help": {"short": "The cloudwatch to kinesis connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.cloudWatchToKinesis.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS used by CloudWatch to transfer data into Kinesis"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessment", "options": ["container-vulnerability-assessment"], "help": {"short": "The container vulnerability assessment configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessment.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessmentTask", "options": ["container-vulnerability-assessment-task"], "help": {"short": "The container vulnerability assessment task configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessmentTask.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.enableContainerVulnerabilityAssessment", "options": ["enable-container-vulnerability-assessment"], "help": {"short": "Enable container vulnerability assessment feature"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kinesisToS3", "options": ["kinesis-to-s3"], "help": {"short": "The kinesis to s3 connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kinesisToS3.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS used by Kinesis to transfer data into S3"}}]}, {"type": "integer64", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubeAuditRetentionTime", "options": ["kube-audit-retention-time"], "help": {"short": "The retention time in days of kube audit logs set on the CloudWatch log group"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesScubaReader", "options": ["kubernetes-scuba-reader"], "help": {"short": "The kubernetes to scuba connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesScubaReader.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature used for reading data"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesService", "options": ["kubernetes-service"], "help": {"short": "The kubernetes service connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesService.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature used for provisioning resources"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s", "options": ["mdc-containers-agentless-discovery-k8s"], "help": {"short": "The Microsoft Defender container agentless discovery K8s configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container agentless discovery K8s enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment", "options": ["mdc-containers-image-assessment"], "help": {"short": "The Microsoft Defender container image assessment configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container image assessment enabled"}}]}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.scubaExternalId", "options": ["scuba-external-id"], "help": {"short": "The externalId used by the data reader to prevent the confused deputy attack"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp", "options": ["defender-for-containers-gcp"], "args": [{"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.auditLogsAutoProvisioningFlag", "options": ["audit-logs-auto-provisioning-flag"], "help": {"short": "Is audit logs data collection enabled"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection", "options": ["data-pipeline-native-cloud-connection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The data collection service account email address in GCP for this offering"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The data collection GCP workload identity provider id for this offering"}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.defenderAgentAutoProvisioningFlag", "options": ["defender-agent-auto-provisioning-flag"], "help": {"short": "Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s", "options": ["mdc-containers-agentless-discovery-k8s"], "help": {"short": "The Microsoft Defender Container agentless discovery configuration"}, "args": [{"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container agentless discovery enabled"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment", "options": ["mdc-containers-image-assessment"], "help": {"short": "The Microsoft Defender Container image assessment configuration"}, "args": [{"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container image assessment enabled"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection", "options": ["native-cloud-connection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this offering"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id for this offering"}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.policyAgentAutoProvisioningFlag", "options": ["policy-agent-auto-provisioning-flag"], "help": {"short": "Is Policy Kubernetes agent auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws", "options": ["defender-for-databases-aws"], "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning", "options": ["arc-auto-provisioning"], "help": {"short": "The ARC autoprovisioning configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "Configuration for servers Arc auto provisioning"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration.privateLinkScope", "options": ["private-link-scope"], "help": {"short": "Optional Arc private link scope resource id to link the Arc agent"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration.proxy", "options": ["proxy"], "help": {"short": "Optional http proxy endpoint to use for the Arc agent"}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is arc auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm", "options": ["databases-dspm"], "help": {"short": "The databases data security posture management (DSPM) configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm.enabled", "options": ["enabled"], "help": {"short": "Is databases data security posture management (DSPM) protection enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds", "options": ["rds"], "help": {"short": "The RDS configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds.enabled", "options": ["enabled"], "help": {"short": "Is RDS protection enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp", "options": ["defender-for-databases-gcp"], "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning", "options": ["arc-auto-provisioning"], "help": {"short": "The ARC autoprovisioning configuration"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "Configuration for servers Arc auto provisioning"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration.privateLinkScope", "options": ["private-link-scope"], "help": {"short": "Optional Arc private link scope resource id to link the Arc agent"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration.proxy", "options": ["proxy"], "help": {"short": "Optional http proxy endpoint to use for the Arc agent"}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is arc auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning", "options": ["defender-for-databases-arc-auto-provisioning"], "help": {"short": "The native cloud connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this offering"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id for this offering"}}]}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDevOpsAzureDevOps", "options": ["defender-for-dev-ops-azure-dev-ops"], "hide": true, "group": "", "help": {"short": "defender-for-dev-ops-azure-dev-ops"}}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDevOpsGitLab", "options": ["defender-for-dev-ops-git-lab"], "hide": true, "group": "", "help": {"short": "defender-for-dev-ops-git-lab"}}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDevOpsGithub", "options": ["defender-for-dev-ops-github"], "hide": true, "group": "", "help": {"short": "defender-for-dev-ops-github"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws", "options": ["defender-for-servers-aws"], "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning", "options": ["arc-auto-provisioning"], "help": {"short": "The ARC autoprovisioning configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "Configuration for servers Arc auto provisioning"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration.privateLinkScope", "options": ["private-link-scope"], "help": {"short": "Optional Arc private link scope resource id to link the Arc agent"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration.proxy", "options": ["proxy"], "help": {"short": "Optional HTTP proxy endpoint to use for the Arc agent"}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is arc auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.defenderForServers", "options": ["defender-for-servers"], "help": {"short": "The Defender for servers connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.defenderForServers.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning", "options": ["mde-auto-provisioning"], "help": {"short": "The Microsoft Defender for Endpoint autoprovisioning configuration"}, "args": [{"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Endpoint autoprovisioning"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Endpoint auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.subPlan", "options": ["sub-plan"], "help": {"short": "configuration for the servers offering subPlan"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.subPlan.type", "options": ["type"], "help": {"short": "The available sub plans"}, "enum": {"items": [{"name": "P1", "value": "P1"}, {"name": "P2", "value": "P2"}]}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning", "options": ["va-auto-provisioning"], "help": {"short": "The Vulnerability Assessment autoprovisioning configuration"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "configuration for Vulnerability Assessment autoprovisioning"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.configuration.type", "options": ["type"], "help": {"short": "The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'"}, "enum": {"items": [{"name": "Qualys", "value": "Qualys"}, {"name": "TVM", "value": "TVM"}]}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is Vulnerability Assessment auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners", "options": ["vm-scanners"], "help": {"short": "The Microsoft Defender for Server VM scanning configuration"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Server VM scanning"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.exclusionTags", "options": ["exclusion-tags"], "help": {"short": "VM tags that indicates that VM should not be scanned"}, "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.scanningMode", "options": ["scanning-mode"], "help": {"short": "The scanning mode for the VM scan."}, "enum": {"items": [{"name": "Default", "value": "Default"}]}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Server VM scanning enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp", "options": ["defender-for-servers-gcp"], "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning", "options": ["arc-auto-provisioning"], "help": {"short": "The ARC autoprovisioning configuration"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "Configuration for servers Arc auto provisioning"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration.privateLinkScope", "options": ["private-link-scope"], "help": {"short": "Optional Arc private link scope resource id to link the Arc agent"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration.proxy", "options": ["proxy"], "help": {"short": "Optional HTTP proxy endpoint to use for the Arc agent"}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is arc auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers", "options": ["defender-for-servers"], "help": {"short": "The Defender for servers connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning", "options": ["mde-auto-provisioning"], "help": {"short": "The Microsoft Defender for Endpoint autoprovisioning configuration"}, "args": [{"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Endpoint autoprovisioning"}}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Endpoint auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.subPlan", "options": ["sub-plan"], "help": {"short": "configuration for the servers offering subPlan"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.subPlan.type", "options": ["type"], "help": {"short": "The available sub plans"}, "enum": {"items": [{"name": "P1", "value": "P1"}, {"name": "P2", "value": "P2"}]}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning", "options": ["va-auto-provisioning"], "help": {"short": "The Vulnerability Assessment autoprovisioning configuration"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "configuration for Vulnerability Assessment autoprovisioning"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.configuration.type", "options": ["type"], "help": {"short": "The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'"}, "enum": {"items": [{"name": "Qualys", "value": "Qualys"}, {"name": "TVM", "value": "TVM"}]}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is Vulnerability Assessment auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners", "options": ["vm-scanners"], "help": {"short": "The Microsoft Defender for Server VM scanning configuration"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Server VM scanning"}, "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration.exclusionTags", "options": ["exclusion-tags"], "help": {"short": "VM tags that indicate that VM should not be scanned"}, "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration.scanningMode", "options": ["scanning-mode"], "help": {"short": "The scanning mode for the VM scan."}, "enum": {"items": [{"name": "Default", "value": "Default"}]}}]}, {"type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Server VM scanning enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].InformationProtectionAws", "options": ["information-protection-aws"], "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].InformationProtectionAws.informationProtection", "options": ["information-protection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"type": "string", "var": "$securityConnector.properties.offerings[].InformationProtectionAws.informationProtection.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}]}]}}]}, {"name": "SecurityConnector", "args": [{"type": "string", "var": "$securityConnector.etag", "options": ["etag"], "hide": true, "group": "SecurityConnector", "help": {"short": "Entity tag is used for comparing two or more entities from the same requested resource."}}, {"type": "string", "var": "$securityConnector.kind", "options": ["kind"], "hide": true, "group": "SecurityConnector", "help": {"short": "Kind of the resource"}}, {"type": "ResourceLocation", "var": "$securityConnector.location", "options": ["l", "location"], "group": "SecurityConnector", "help": {"short": "Location where the resource is stored"}}, {"type": "object", "var": "$securityConnector.tags", "options": ["tags"], "group": "SecurityConnector", "help": {"short": "A list of key value pairs that describe the resource."}, "additionalProps": {"item": {"type": "string"}}}]}], "operations": [{"operationId": "SecurityConnectors_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "securityConnectorName", "arg": "$Path.securityConnectorName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "securityConnector", "required": true, "props": [{"type": "string", "name": "etag", "arg": "$securityConnector.etag"}, {"type": "string", "name": "kind", "arg": "$securityConnector.kind"}, {"type": "ResourceLocation", "name": "location", "arg": "$securityConnector.location"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "environmentData", "arg": "$securityConnector.properties.environmentData", "props": [{"type": "string", "name": "environmentType", "required": true, "enum": {"items": [{"arg": "$securityConnector.properties.environmentData.AwsAccount", "value": "AwsAccount"}, {"arg": "$securityConnector.properties.environmentData.AzureDevOpsScope", "value": "AzureDevOpsScope"}, {"arg": "$securityConnector.properties.environmentData.GcpProject", "value": "GcpProject"}, {"arg": "$securityConnector.properties.environmentData.GithubScope", "value": "GithubScope"}, {"arg": "$securityConnector.properties.environmentData.GitlabScope", "value": "GitlabScope"}]}}], "discriminators": [{"property": "environmentType", "value": "AwsAccount", "props": [{"type": "object", "name": "organizationalData", "arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Member", "value": "Member"}, {"arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization", "value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "parentHierarchyId", "arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Member.parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedAccountIds", "arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization.excludedAccountIds", "item": {"type": "string"}}, {"type": "string", "name": "stacksetName", "arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization.stacksetName"}]}]}, {"type": "array<string>", "name": "regions", "arg": "$securityConnector.properties.environmentData.AwsAccount.regions", "item": {"type": "string"}}, {"type": "integer64", "name": "scanInterval", "arg": "$securityConnector.properties.environmentData.AwsAccount.scanInterval"}]}, {"property": "environmentType", "value": "AzureDevOpsScope"}, {"property": "environmentType", "value": "GcpProject", "props": [{"type": "object", "name": "organizationalData", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member", "value": "Member"}, {"arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization", "value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "managementProjectNumber", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member.managementProjectNumber"}, {"type": "string", "name": "parentHierarchyId", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member.parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedProjectNumbers", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.excludedProjectNumbers", "item": {"type": "string"}}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.workloadIdentityProviderId"}]}]}, {"type": "object", "name": "projectDetails", "arg": "$securityConnector.properties.environmentData.GcpProject.projectDetails", "props": [{"type": "string", "name": "projectId", "arg": "$securityConnector.properties.environmentData.GcpProject.projectDetails.projectId"}, {"type": "string", "name": "projectNumber", "arg": "$securityConnector.properties.environmentData.GcpProject.projectDetails.projectNumber"}]}, {"type": "integer64", "name": "scanInterval", "arg": "$securityConnector.properties.environmentData.GcpProject.scanInterval"}]}, {"property": "environmentType", "value": "GithubScope"}, {"property": "environmentType", "value": "GitlabScope"}]}, {"type": "string", "name": "environmentName", "arg": "$securityConnector.properties.environmentName", "enum": {"items": [{"value": "AWS"}, {"value": "Azure"}, {"value": "AzureDevOps"}, {"value": "GCP"}, {"value": "GitLab"}, {"value": "Github"}]}}, {"type": "string", "name": "hierarchyIdentifier", "arg": "$securityConnector.properties.hierarchyIdentifier"}, {"type": "array<object>", "name": "offerings", "arg": "$securityConnector.properties.offerings", "item": {"type": "object", "props": [{"type": "string", "name": "offeringType", "required": true, "enum": {"items": [{"arg": "$securityConnector.properties.offerings[].CspmMonitorAws", "value": "CspmMonitorAws"}, {"arg": "$securityConnector.properties.offerings[].CspmMonitorAzureDevOps", "value": "CspmMonitorAzureDevOps"}, {"arg": "$securityConnector.properties.offerings[].CspmMonitorGcp", "value": "CspmMonitorGcp"}, {"arg": "$securityConnector.properties.offerings[].CspmMonitorGitLab", "value": "CspmMonitorGitLab"}, {"arg": "$securityConnector.properties.offerings[].CspmMonitorGithub", "value": "CspmMonitorGithub"}, {"arg": "$securityConnector.properties.offerings[].DefenderCspmAws", "value": "DefenderCspmAws"}, {"arg": "$securityConnector.properties.offerings[].DefenderCspmGcp", "value": "DefenderCspmGcp"}, {"arg": "$securityConnector.properties.offerings[].DefenderForContainersAws", "value": "DefenderForContainersAws"}, {"arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp", "value": "DefenderForContainersGcp"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws", "value": "DefenderForDatabasesAws"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp", "value": "DefenderForDatabasesGcp"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDevOpsAzureDevOps", "value": "DefenderForDevOpsAzureDevOps"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDevOpsGitLab", "value": "DefenderForDevOpsGitLab"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDevOpsGithub", "value": "DefenderForDevOpsGithub"}, {"arg": "$securityConnector.properties.offerings[].DefenderForServersAws", "value": "DefenderForServersAws"}, {"arg": "$securityConnector.properties.offerings[].DefenderForServersGcp", "value": "DefenderForServersGcp"}, {"arg": "$securityConnector.properties.offerings[].InformationProtectionAws", "value": "InformationProtectionAws"}]}}], "discriminators": [{"property": "offeringType", "value": "CspmMonitorAws", "props": [{"type": "object", "name": "nativeCloudConnection", "arg": "$securityConnector.properties.offerings[].CspmMonitorAws.nativeCloudConnection", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].CspmMonitorAws.nativeCloudConnection.cloudRoleArn"}]}]}, {"property": "offeringType", "value": "CspmMonitorAzureDevOps"}, {"property": "offeringType", "value": "CspmMonitorGcp", "props": [{"type": "object", "name": "nativeCloudConnection", "arg": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection.workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "CspmMonitorGitLab"}, {"property": "offeringType", "value": "CspmMonitorGithub"}, {"property": "offeringType", "value": "DefenderCspmAws", "props": [{"type": "object", "name": "ciem", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem", "props": [{"type": "object", "name": "ciemDiscovery", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemDiscovery", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemDiscovery.cloudRoleArn"}]}, {"type": "object", "name": "ciemOidc", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc", "props": [{"type": "string", "name": "azureActiveDirectoryAppName", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc.azureActiveDirectoryAppName"}, {"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc.cloudRoleArn"}]}]}, {"type": "object", "name": "dataSensitivityDiscovery", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery.enabled"}]}, {"type": "object", "name": "databasesDspm", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm.enabled"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s.enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment.enabled"}]}, {"type": "object", "name": "vmScanners", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.enabled"}]}]}, {"property": "offeringType", "value": "DefenderCspmGcp", "props": [{"type": "object", "name": "ciemDiscovery", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery", "props": [{"type": "string", "name": "azureActiveDirectoryAppName", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.azureActiveDirectoryAppName"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.workloadIdentityProviderId"}]}, {"type": "object", "name": "dataSensitivityDiscovery", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.workloadIdentityProviderId"}]}, {"type": "object", "name": "vmScanners", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration", "props": [{"type": "object", "name": "exclusionTags", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration.exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration.scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.enabled"}]}]}, {"property": "offeringType", "value": "DefenderForContainersAws", "props": [{"type": "boolean", "name": "autoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.autoProvisioning"}, {"type": "object", "name": "cloudWatchToKinesis", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.cloudWatchToKinesis", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.cloudWatchToKinesis.cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessment", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessment", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessment.cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessmentTask", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessmentTask", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessmentTask.cloudRoleArn"}]}, {"type": "boolean", "name": "enableContainerVulnerabilityAssessment", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.enableContainerVulnerabilityAssessment"}, {"type": "object", "name": "kinesisToS3", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kinesisToS3", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kinesisToS3.cloudRoleArn"}]}, {"type": "integer64", "name": "kubeAuditRetentionTime", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubeAuditRetentionTime"}, {"type": "object", "name": "kubernetesScubaReader", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesScubaReader", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesScubaReader.cloudRoleArn"}]}, {"type": "object", "name": "kubernetesService", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesService", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesService.cloudRoleArn"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s.enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment.enabled"}]}, {"type": "string", "name": "scubaExternalId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.scubaExternalId"}]}, {"property": "offeringType", "value": "DefenderForContainersGcp", "props": [{"type": "boolean", "name": "auditLogsAutoProvisioningFlag", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.auditLogsAutoProvisioningFlag"}, {"type": "object", "name": "dataPipelineNativeCloudConnection", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection.workloadIdentityProviderId"}]}, {"type": "boolean", "name": "defenderAgentAutoProvisioningFlag", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.defenderAgentAutoProvisioningFlag"}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.workloadIdentityProviderId"}]}, {"type": "object", "name": "nativeCloudConnection", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection.workloadIdentityProviderId"}]}, {"type": "boolean", "name": "policyAgentAutoProvisioningFlag", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.policyAgentAutoProvisioningFlag"}]}, {"property": "offeringType", "value": "DefenderForDatabasesAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.cloudRoleArn"}, {"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration", "props": [{"type": "string", "name": "privateLinkScope", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration.privateLinkScope"}, {"type": "string", "name": "proxy", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration.proxy"}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.enabled"}]}, {"type": "object", "name": "databasesDspm", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm.enabled"}]}, {"type": "object", "name": "rds", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds.enabled"}]}]}, {"property": "offeringType", "value": "DefenderForDatabasesGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration", "props": [{"type": "string", "name": "privateLinkScope", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration.privateLinkScope"}, {"type": "string", "name": "proxy", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration.proxy"}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.enabled"}]}, {"type": "object", "name": "defenderForDatabasesArcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning.workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "DefenderForDevOpsAzureDevOps"}, {"property": "offeringType", "value": "DefenderForDevOpsGitLab"}, {"property": "offeringType", "value": "DefenderForDevOpsGithub"}, {"property": "offeringType", "value": "DefenderForServersAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.cloudRoleArn"}, {"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration", "props": [{"type": "string", "name": "privateLinkScope", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration.privateLinkScope"}, {"type": "string", "name": "proxy", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration.proxy"}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.enabled"}]}, {"type": "object", "name": "defenderForServers", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.defenderForServers", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.defenderForServers.cloudRoleArn"}]}, {"type": "object", "name": "mdeAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning.configuration"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning.enabled"}]}, {"type": "object", "name": "subPlan", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.subPlan", "props": [{"type": "string", "name": "type", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.subPlan.type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.configuration", "props": [{"type": "string", "name": "type", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.configuration.type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.enabled"}]}, {"type": "object", "name": "vmScanners", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.enabled"}]}]}, {"property": "offeringType", "value": "DefenderForServersGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration", "props": [{"type": "string", "name": "privateLinkScope", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration.privateLinkScope"}, {"type": "string", "name": "proxy", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration.proxy"}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.enabled"}]}, {"type": "object", "name": "defenderForServers", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers.workloadIdentityProviderId"}]}, {"type": "object", "name": "mdeAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning.configuration"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning.enabled"}]}, {"type": "object", "name": "subPlan", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.subPlan", "props": [{"type": "string", "name": "type", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.subPlan.type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.configuration", "props": [{"type": "string", "name": "type", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.configuration.type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.enabled"}]}, {"type": "object", "name": "vmScanners", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration", "props": [{"type": "object", "name": "exclusionTags", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration.exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration.scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.enabled"}]}]}, {"property": "offeringType", "value": "InformationProtectionAws", "props": [{"type": "object", "name": "informationProtection", "arg": "$securityConnector.properties.offerings[].InformationProtectionAws.informationProtection", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].InformationProtectionAws.informationProtection.cloudRoleArn"}]}]}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$securityConnector.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Security/securityConnectors/{}"}}, {"type": "string", "name": "kind"}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "environmentData", "props": [{"type": "string", "name": "environmentType", "required": true, "enum": {"items": [{"value": "AwsAccount"}, {"value": "AzureDevOpsScope"}, {"value": "GcpProject"}, {"value": "GithubScope"}, {"value": "GitlabScope"}]}}], "discriminators": [{"property": "environmentType", "value": "AwsAccount", "props": [{"readOnly": true, "type": "string", "name": "accountName"}, {"type": "object", "name": "organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"value": "Member"}, {"value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedAccountIds", "item": {"type": "string"}}, {"type": "string", "name": "stacksetName"}]}]}, {"type": "array<string>", "name": "regions", "item": {"type": "string"}}, {"type": "integer64", "name": "scanInterval"}]}, {"property": "environmentType", "value": "AzureDevOpsScope"}, {"property": "environmentType", "value": "GcpProject", "props": [{"type": "object", "name": "organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"value": "Member"}, {"value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "managementProjectNumber"}, {"type": "string", "name": "parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedProjectNumbers", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "organizationName"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}]}, {"type": "object", "name": "projectDetails", "props": [{"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "projectName"}, {"type": "string", "name": "projectNumber"}, {"readOnly": true, "type": "string", "name": "workloadIdentityPoolId"}]}, {"type": "integer64", "name": "scanInterval"}]}, {"property": "environmentType", "value": "GithubScope"}, {"property": "environmentType", "value": "GitlabScope"}]}, {"type": "string", "name": "environmentName", "enum": {"items": [{"value": "AWS"}, {"value": "Azure"}, {"value": "AzureDevOps"}, {"value": "GCP"}, {"value": "GitLab"}, {"value": "Github"}]}}, {"type": "string", "name": "hierarchyIdentifier"}, {"readOnly": true, "type": "dateTime", "name": "hierarchyIdentifierTrialEndDate"}, {"type": "array<object>", "name": "offerings", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "description"}, {"type": "string", "name": "offeringType", "required": true, "enum": {"items": [{"value": "CspmMonitorAws"}, {"value": "CspmMonitorAzureDevOps"}, {"value": "CspmMonitorGcp"}, {"value": "CspmMonitorGitLab"}, {"value": "CspmMonitorGithub"}, {"value": "DefenderCspmAws"}, {"value": "DefenderCspmGcp"}, {"value": "DefenderForContainersAws"}, {"value": "DefenderForContainersGcp"}, {"value": "DefenderForDatabasesAws"}, {"value": "DefenderForDatabasesGcp"}, {"value": "DefenderForDevOpsAzureDevOps"}, {"value": "DefenderForDevOpsGitLab"}, {"value": "DefenderForDevOpsGithub"}, {"value": "DefenderForServersAws"}, {"value": "DefenderForServersGcp"}, {"value": "InformationProtectionAws"}]}}], "discriminators": [{"property": "offeringType", "value": "CspmMonitorAws", "props": [{"type": "object", "name": "nativeCloudConnection", "props": [{"type": "string", "name": "cloudRoleArn"}]}]}, {"property": "offeringType", "value": "CspmMonitorAzureDevOps"}, {"property": "offeringType", "value": "CspmMonitorGcp", "props": [{"type": "object", "name": "nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "CspmMonitorGitLab"}, {"property": "offeringType", "value": "CspmMonitorGithub"}, {"property": "offeringType", "value": "DefenderCspmAws", "props": [{"type": "object", "name": "ciem", "props": [{"type": "object", "name": "ciemDiscovery", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "ciemOidc", "props": [{"type": "string", "name": "azureActiveDirectoryAppName"}, {"type": "string", "name": "cloudRoleArn"}]}]}, {"type": "object", "name": "dataSensitivityDiscovery", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderCspmGcp", "props": [{"type": "object", "name": "ciemDiscovery", "props": [{"type": "string", "name": "azureActiveDirectoryAppName"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "dataSensitivityDiscovery", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderForContainersAws", "props": [{"type": "boolean", "name": "autoProvisioning"}, {"type": "object", "name": "cloudWatchToKinesis", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessment", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessmentTask", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "boolean", "name": "enableContainerVulnerabilityAssessment"}, {"type": "object", "name": "kinesisToS3", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "integer64", "name": "kubeAuditRetentionTime"}, {"type": "object", "name": "kubernetesScubaReader", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "kubernetesService", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "string", "name": "scubaExternalId"}]}, {"property": "offeringType", "value": "DefenderForContainersGcp", "props": [{"type": "boolean", "name": "auditLogsAutoProvisioningFlag"}, {"type": "object", "name": "dataPipelineNativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "boolean", "name": "defenderAgentAutoProvisioningFlag"}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "boolean", "name": "policyAgentAutoProvisioningFlag"}]}, {"property": "offeringType", "value": "DefenderForDatabasesAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "rds", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderForDatabasesGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "defenderForDatabasesArcAutoProvisioning", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "DefenderForDevOpsAzureDevOps"}, {"property": "offeringType", "value": "DefenderForDevOpsGitLab"}, {"property": "offeringType", "value": "DefenderForDevOpsGithub"}, {"property": "offeringType", "value": "DefenderForServersAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "defenderForServers", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "subPlan", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderForServersGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "defenderForServers", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "subPlan", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "InformationProtectionAws", "props": [{"type": "object", "name": "informationProtection", "props": [{"type": "string", "name": "cloudRoleArn"}]}]}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2023-10-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/securityconnectors/{}", "version": "2023-10-01-preview", "swagger": "mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvc2VjdXJpdHlDb25uZWN0b3JzL3tzZWN1cml0eUNvbm5lY3Rvck5hbWV9/V/MjAyMy0xMC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "string", "var": "$Path.securityConnectorName", "options": ["n", "name", "security-connector-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The security connector name."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Properties", "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.environmentData", "options": ["environment-data"], "group": "Properties", "help": {"short": "The security connector environment data."}, "args": [{"type": "object", "var": "$securityConnector.properties.environmentData.AwsAccount", "options": ["aws-account"], "group": "", "help": {"short": "AWS Account"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData", "options": ["organizational-data"], "help": {"short": "The AWS account's organizational data"}, "args": [{"type": "object", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Member", "options": ["member"], "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Member.parentHierarchyId", "options": ["parent-hierarchy-id"], "help": {"short": "If the multi cloud account is not of membership type organization, this will be the ID of the account's parent"}}]}, {"type": "object", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization", "options": ["organization"], "args": [{"nullable": true, "type": "array<string>", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization.excludedAccountIds", "options": ["excluded-account-ids"], "help": {"short": "If the multi cloud account is of membership type organization, list of accounts excluded from offering"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization.stacksetName", "options": ["stackset-name"], "help": {"short": "If the multi cloud account is of membership type organization, this will be the name of the onboarding stackset"}}]}]}, {"nullable": true, "type": "array<string>", "var": "$securityConnector.properties.environmentData.AwsAccount.regions", "options": ["regions"], "help": {"short": "list of regions to scan"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "integer64", "var": "$securityConnector.properties.environmentData.AwsAccount.scanInterval", "options": ["scan-interval"], "help": {"short": "Scan interval in hours (value should be between 1-hour to 24-hours)"}}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.environmentData.AzureDevOpsScope", "options": ["azuredevops-scope"], "group": "", "help": {"short": "AzureDevOps Scope"}}, {"type": "object", "var": "$securityConnector.properties.environmentData.GcpProject", "options": ["gcp-project"], "group": "", "help": {"short": "GCP Project"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData", "options": ["organizational-data"], "help": {"short": "The Gcp project's organizational data"}, "args": [{"type": "object", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member", "options": ["member"], "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member.managementProjectNumber", "options": ["management-project-number"], "help": {"short": "The GCP management project number from organizational onboarding"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member.parentHierarchyId", "options": ["parent-hierarchy-id"], "help": {"short": "If the multi cloud account is not of membership type organization, this will be the ID of the project's parent"}}]}, {"type": "object", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization", "options": ["organization"], "args": [{"nullable": true, "type": "array<string>", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.excludedProjectNumbers", "options": ["excluded-project-numbers"], "help": {"short": "If the multi cloud account is of membership type organization, list of accounts excluded from offering"}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address which represents the organization level permissions container."}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id which represents the permissions required to auto provision security connectors"}}]}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.environmentData.GcpProject.projectDetails", "options": ["project-details"], "help": {"short": "The Gcp project's details"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.projectDetails.projectId", "options": ["project-id"], "help": {"short": "The GCP Project id"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.environmentData.GcpProject.projectDetails.projectNumber", "options": ["project-number"], "help": {"short": "The unique GCP Project number"}}]}, {"nullable": true, "type": "integer64", "var": "$securityConnector.properties.environmentData.GcpProject.scanInterval", "options": ["scan-interval"], "help": {"short": "Scan interval in hours (value should be between 1-hour to 24-hours)"}}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.environmentData.GithubScope", "options": ["github-scope"], "group": "", "help": {"short": "GitHub Scope"}}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.environmentData.GitlabScope", "options": ["gitlab-scope"], "group": "", "help": {"short": "GitLab Scope"}}]}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.environmentName", "options": ["environment-name"], "group": "Properties", "help": {"short": "The multi cloud resource's cloud name."}, "enum": {"items": [{"name": "AWS", "value": "AWS"}, {"name": "Azure", "value": "Azure"}, {"name": "AzureDevOps", "value": "AzureDevOps"}, {"name": "GCP", "value": "GCP"}, {"name": "GitLab", "value": "GitLab"}, {"name": "Github", "value": "Github"}]}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.hierarchyIdentifier", "options": ["hierarchy-identifier"], "hide": true, "group": "Properties", "help": {"short": "The multi cloud resource identifier (account id in case of AWS connector, project number in case of GCP connector)."}}, {"nullable": true, "type": "array<object>", "var": "$securityConnector.properties.offerings", "options": ["offerings"], "group": "Properties", "help": {"short": "A collection of offerings for the security connector."}, "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorAws", "options": ["cspm-monitor-aws"], "group": "", "help": {"short": "CspmMonitorAWS Offering"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorAws.nativeCloudConnection", "options": ["native-cloud-connection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].CspmMonitorAws.nativeCloudConnection.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorAzureDevOps", "options": ["cspm-monitor-azuredevops"], "group": "", "help": {"short": "CspmMonitorAzureDevOps Offering"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorGcp", "options": ["cspm-monitor-gcp"], "group": "", "help": {"short": "CspmMonitorGCP Offering"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection", "options": ["native-cloud-connection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this offering"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id for the offering"}}]}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorGitLab", "options": ["cspm-monitor-gitlab"], "group": "", "help": {"short": "CspmMonitorGitLab Offering"}}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].CspmMonitorGithub", "options": ["cspm-monitor-github"], "group": "", "help": {"short": "CspmMonitorGitHub Offering"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws", "options": ["defender-cspm-aws"], "group": "", "help": {"short": "DefenderCspmAWS Offering"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem", "options": ["ciem"], "help": {"short": "Defenders CSPM Cloud infrastructure entitlement management (CIEM) offering configurations"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemDiscovery", "options": ["ciem-discovery"], "help": {"short": "Defender CSPM CIEM discovery configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemDiscovery.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for CIEM discovery"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc", "options": ["ciem-oidc"], "help": {"short": "Defender CSPM CIEM AWS OIDC (open id connect) configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc.azureActiveDirectoryAppName", "options": ["azure-active-directory-app-name"], "help": {"short": "the azure active directory app name used of authenticating against AWS"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for CIEM oidc connection"}}]}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery", "options": ["data-sensitivity-discovery"], "help": {"short": "The Microsoft Defender Data Sensitivity discovery configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender Data Sensitivity discovery enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm", "options": ["databases-dspm"], "help": {"short": "The databases DSPM configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm.enabled", "options": ["enabled"], "help": {"short": "Is databases DSPM protection enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s", "options": ["mdc-containers-agentless-discovery-k8s"], "help": {"short": "The Microsoft Defender container agentless discovery K8s configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container agentless discovery K8s enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment", "options": ["mdc-containers-image-assessment"], "help": {"short": "The Microsoft Defender container image assessment configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container image assessment enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners", "options": ["vm-scanners"], "help": {"short": "The Microsoft Defender for Server VM scanning configuration"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Server VM scanning"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.exclusionTags", "options": ["exclusion-tags"], "help": {"short": "VM tags that indicates that VM should not be scanned"}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.scanningMode", "options": ["scanning-mode"], "help": {"short": "The scanning mode for the VM scan."}, "enum": {"items": [{"name": "Default", "value": "Default"}]}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Server VM scanning enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp", "options": ["defender-cspm-gcp"], "group": "", "help": {"short": "DefenderCspmGCP Offering"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery", "options": ["ciem-discovery"], "help": {"short": "GCP Defenders CSPM Cloud infrastructure entitlement management (CIEM) discovery offering configurations"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.azureActiveDirectoryAppName", "options": ["azure-active-directory-app-name"], "help": {"short": "the azure active directory app name used of authenticating against GCP workload identity federation"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for CIEM discovery offering"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id for CIEM discovery offering"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery", "options": ["data-sensitivity-discovery"], "help": {"short": "The Microsoft Defender Data Sensitivity discovery configuration"}, "args": [{"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender Data Sensitivity discovery enabled"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s", "options": ["mdc-containers-agentless-discovery-k8s"], "help": {"short": "The Microsoft Defender Container agentless discovery configuration"}, "args": [{"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container agentless discovery enabled"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment", "options": ["mdc-containers-image-assessment"], "help": {"short": "The Microsoft Defender Container image assessment configuration"}, "args": [{"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container image assessment enabled"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners", "options": ["vm-scanners"], "help": {"short": "The Microsoft Defender for Server VM scanning configuration"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Server VM scanning"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration.exclusionTags", "options": ["exclusion-tags"], "help": {"short": "VM tags that indicates that VM should not be scanned"}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration.scanningMode", "options": ["scanning-mode"], "help": {"short": "The scanning mode for the VM scan."}, "enum": {"items": [{"name": "Default", "value": "Default"}]}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Server VM scanning enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws", "options": ["defender-for-containers-aws"], "args": [{"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.autoProvisioning", "options": ["auto-provisioning"], "help": {"short": "Is audit logs pipeline auto provisioning enabled"}}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.cloudWatchToKinesis", "options": ["cloud-watch-to-kinesis"], "help": {"short": "The cloudwatch to kinesis connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.cloudWatchToKinesis.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS used by CloudWatch to transfer data into Kinesis"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessment", "options": ["container-vulnerability-assessment"], "help": {"short": "The container vulnerability assessment configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessment.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessmentTask", "options": ["container-vulnerability-assessment-task"], "help": {"short": "The container vulnerability assessment task configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessmentTask.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.enableContainerVulnerabilityAssessment", "options": ["enable-container-vulnerability-assessment"], "help": {"short": "Enable container vulnerability assessment feature"}}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kinesisToS3", "options": ["kinesis-to-s3"], "help": {"short": "The kinesis to s3 connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kinesisToS3.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS used by Kinesis to transfer data into S3"}}]}, {"nullable": true, "type": "integer64", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubeAuditRetentionTime", "options": ["kube-audit-retention-time"], "help": {"short": "The retention time in days of kube audit logs set on the CloudWatch log group"}}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesScubaReader", "options": ["kubernetes-scuba-reader"], "help": {"short": "The kubernetes to scuba connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesScubaReader.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature used for reading data"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesService", "options": ["kubernetes-service"], "help": {"short": "The kubernetes service connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesService.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature used for provisioning resources"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s", "options": ["mdc-containers-agentless-discovery-k8s"], "help": {"short": "The Microsoft Defender container agentless discovery K8s configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container agentless discovery K8s enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment", "options": ["mdc-containers-image-assessment"], "help": {"short": "The Microsoft Defender container image assessment configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container image assessment enabled"}}]}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersAws.scubaExternalId", "options": ["scuba-external-id"], "help": {"short": "The externalId used by the data reader to prevent the confused deputy attack"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp", "options": ["defender-for-containers-gcp"], "args": [{"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.auditLogsAutoProvisioningFlag", "options": ["audit-logs-auto-provisioning-flag"], "help": {"short": "Is audit logs data collection enabled"}}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection", "options": ["data-pipeline-native-cloud-connection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The data collection service account email address in GCP for this offering"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The data collection GCP workload identity provider id for this offering"}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.defenderAgentAutoProvisioningFlag", "options": ["defender-agent-auto-provisioning-flag"], "help": {"short": "Is Microsoft Defender for Cloud Kubernetes agent auto provisioning enabled"}}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s", "options": ["mdc-containers-agentless-discovery-k8s"], "help": {"short": "The Microsoft Defender Container agentless discovery configuration"}, "args": [{"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container agentless discovery enabled"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment", "options": ["mdc-containers-image-assessment"], "help": {"short": "The Microsoft Defender Container image assessment configuration"}, "args": [{"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender container image assessment enabled"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection", "options": ["native-cloud-connection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this offering"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id for this offering"}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForContainersGcp.policyAgentAutoProvisioningFlag", "options": ["policy-agent-auto-provisioning-flag"], "help": {"short": "Is Policy Kubernetes agent auto provisioning enabled"}}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws", "options": ["defender-for-databases-aws"], "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning", "options": ["arc-auto-provisioning"], "help": {"short": "The ARC autoprovisioning configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "Configuration for servers Arc auto provisioning"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration.privateLinkScope", "options": ["private-link-scope"], "help": {"short": "Optional Arc private link scope resource id to link the Arc agent"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration.proxy", "options": ["proxy"], "help": {"short": "Optional http proxy endpoint to use for the Arc agent"}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is arc auto provisioning enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm", "options": ["databases-dspm"], "help": {"short": "The databases data security posture management (DSPM) configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm.enabled", "options": ["enabled"], "help": {"short": "Is databases data security posture management (DSPM) protection enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds", "options": ["rds"], "help": {"short": "The RDS configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds.enabled", "options": ["enabled"], "help": {"short": "Is RDS protection enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp", "options": ["defender-for-databases-gcp"], "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning", "options": ["arc-auto-provisioning"], "help": {"short": "The ARC autoprovisioning configuration"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "Configuration for servers Arc auto provisioning"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration.privateLinkScope", "options": ["private-link-scope"], "help": {"short": "Optional Arc private link scope resource id to link the Arc agent"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration.proxy", "options": ["proxy"], "help": {"short": "Optional http proxy endpoint to use for the Arc agent"}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is arc auto provisioning enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning", "options": ["defender-for-databases-arc-auto-provisioning"], "help": {"short": "The native cloud connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this offering"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The GCP workload identity provider id for this offering"}}]}]}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDevOpsAzureDevOps", "options": ["defender-for-dev-ops-azure-dev-ops"], "hide": true, "group": "", "help": {"short": "defender-for-dev-ops-azure-dev-ops"}}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDevOpsGitLab", "options": ["defender-for-dev-ops-git-lab"], "hide": true, "group": "", "help": {"short": "defender-for-dev-ops-git-lab"}}, {"blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForDevOpsGithub", "options": ["defender-for-dev-ops-github"], "hide": true, "group": "", "help": {"short": "defender-for-dev-ops-github"}}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws", "options": ["defender-for-servers-aws"], "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning", "options": ["arc-auto-provisioning"], "help": {"short": "The ARC autoprovisioning configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "Configuration for servers Arc auto provisioning"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration.privateLinkScope", "options": ["private-link-scope"], "help": {"short": "Optional Arc private link scope resource id to link the Arc agent"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration.proxy", "options": ["proxy"], "help": {"short": "Optional HTTP proxy endpoint to use for the Arc agent"}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is arc auto provisioning enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.defenderForServers", "options": ["defender-for-servers"], "help": {"short": "The Defender for servers connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.defenderForServers.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning", "options": ["mde-auto-provisioning"], "help": {"short": "The Microsoft Defender for Endpoint autoprovisioning configuration"}, "args": [{"nullable": true, "blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Endpoint autoprovisioning"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Endpoint auto provisioning enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.subPlan", "options": ["sub-plan"], "help": {"short": "configuration for the servers offering subPlan"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.subPlan.type", "options": ["type"], "help": {"short": "The available sub plans"}, "enum": {"items": [{"name": "P1", "value": "P1"}, {"name": "P2", "value": "P2"}]}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning", "options": ["va-auto-provisioning"], "help": {"short": "The Vulnerability Assessment autoprovisioning configuration"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "configuration for Vulnerability Assessment autoprovisioning"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.configuration.type", "options": ["type"], "help": {"short": "The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'"}, "enum": {"items": [{"name": "Qualys", "value": "Qualys"}, {"name": "TVM", "value": "TVM"}]}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is Vulnerability Assessment auto provisioning enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners", "options": ["vm-scanners"], "help": {"short": "The Microsoft Defender for Server VM scanning configuration"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Server VM scanning"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.exclusionTags", "options": ["exclusion-tags"], "help": {"short": "VM tags that indicates that VM should not be scanned"}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.scanningMode", "options": ["scanning-mode"], "help": {"short": "The scanning mode for the VM scan."}, "enum": {"items": [{"name": "Default", "value": "Default"}]}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Server VM scanning enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp", "options": ["defender-for-servers-gcp"], "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning", "options": ["arc-auto-provisioning"], "help": {"short": "The ARC autoprovisioning configuration"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "Configuration for servers Arc auto provisioning"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration.privateLinkScope", "options": ["private-link-scope"], "help": {"short": "Optional Arc private link scope resource id to link the Arc agent"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration.proxy", "options": ["proxy"], "help": {"short": "Optional HTTP proxy endpoint to use for the Arc agent"}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is arc auto provisioning enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers", "options": ["defender-for-servers"], "help": {"short": "The Defender for servers connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers.serviceAccountEmailAddress", "options": ["service-account-email-address"], "help": {"short": "The service account email address in GCP for this feature"}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers.workloadIdentityProviderId", "options": ["workload-identity-provider-id"], "help": {"short": "The workload identity provider id in GCP for this feature"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning", "options": ["mde-auto-provisioning"], "help": {"short": "The Microsoft Defender for Endpoint autoprovisioning configuration"}, "args": [{"nullable": true, "blank": {"value": {}}, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Endpoint autoprovisioning"}}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Endpoint auto provisioning enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.subPlan", "options": ["sub-plan"], "help": {"short": "configuration for the servers offering subPlan"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.subPlan.type", "options": ["type"], "help": {"short": "The available sub plans"}, "enum": {"items": [{"name": "P1", "value": "P1"}, {"name": "P2", "value": "P2"}]}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning", "options": ["va-auto-provisioning"], "help": {"short": "The Vulnerability Assessment autoprovisioning configuration"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.configuration", "options": ["configuration"], "help": {"short": "configuration for Vulnerability Assessment autoprovisioning"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.configuration.type", "options": ["type"], "help": {"short": "The Vulnerability Assessment solution to be provisioned. Can be either 'TVM' or 'Qualys'"}, "enum": {"items": [{"name": "Qualys", "value": "Qualys"}, {"name": "TVM", "value": "TVM"}]}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.enabled", "options": ["enabled"], "help": {"short": "Is Vulnerability Assessment auto provisioning enabled"}}]}, {"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners", "options": ["vm-scanners"], "help": {"short": "The Microsoft Defender for Server VM scanning configuration"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration", "options": ["configuration"], "help": {"short": "configuration for Microsoft Defender for Server VM scanning"}, "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration.exclusionTags", "options": ["exclusion-tags"], "help": {"short": "VM tags that indicate that VM should not be scanned"}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration.scanningMode", "options": ["scanning-mode"], "help": {"short": "The scanning mode for the VM scan."}, "enum": {"items": [{"name": "Default", "value": "Default"}]}}]}, {"nullable": true, "type": "boolean", "var": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.enabled", "options": ["enabled"], "help": {"short": "Is Microsoft Defender for Server VM scanning enabled"}}]}]}, {"type": "object", "var": "$securityConnector.properties.offerings[].InformationProtectionAws", "options": ["information-protection-aws"], "args": [{"nullable": true, "type": "object", "var": "$securityConnector.properties.offerings[].InformationProtectionAws.informationProtection", "options": ["information-protection"], "help": {"short": "The native cloud connection configuration"}, "args": [{"nullable": true, "type": "string", "var": "$securityConnector.properties.offerings[].InformationProtectionAws.informationProtection.cloudRoleArn", "options": ["cloud-role-arn"], "help": {"short": "The cloud role ARN in AWS for this feature"}}]}]}]}}]}, {"name": "SecurityConnector", "args": [{"nullable": true, "type": "string", "var": "$securityConnector.etag", "options": ["etag"], "hide": true, "group": "SecurityConnector", "help": {"short": "Entity tag is used for comparing two or more entities from the same requested resource."}}, {"nullable": true, "type": "string", "var": "$securityConnector.kind", "options": ["kind"], "hide": true, "group": "SecurityConnector", "help": {"short": "Kind of the resource"}}, {"nullable": true, "type": "ResourceLocation", "var": "$securityConnector.location", "options": ["l", "location"], "group": "SecurityConnector", "help": {"short": "Location where the resource is stored"}}, {"nullable": true, "type": "object", "var": "$securityConnector.tags", "options": ["tags"], "group": "SecurityConnector", "help": {"short": "A list of key value pairs that describe the resource."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}], "operations": [{"operationId": "SecurityConnectors_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "securityConnectorName", "arg": "$Path.securityConnectorName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "etag"}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Security/securityConnectors/{}"}}, {"type": "string", "name": "kind"}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "environmentData", "props": [{"type": "string", "name": "environmentType", "required": true, "enum": {"items": [{"value": "AwsAccount"}, {"value": "AzureDevOpsScope"}, {"value": "GcpProject"}, {"value": "GithubScope"}, {"value": "GitlabScope"}]}}], "discriminators": [{"property": "environmentType", "value": "AwsAccount", "props": [{"readOnly": true, "type": "string", "name": "accountName"}, {"type": "object", "name": "organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"value": "Member"}, {"value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedAccountIds", "item": {"type": "string"}}, {"type": "string", "name": "stacksetName"}]}]}, {"type": "array<string>", "name": "regions", "item": {"type": "string"}}, {"type": "integer64", "name": "scanInterval"}]}, {"property": "environmentType", "value": "AzureDevOpsScope"}, {"property": "environmentType", "value": "GcpProject", "props": [{"type": "object", "name": "organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"value": "Member"}, {"value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "managementProjectNumber"}, {"type": "string", "name": "parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedProjectNumbers", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "organizationName"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}]}, {"type": "object", "name": "projectDetails", "props": [{"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "projectName"}, {"type": "string", "name": "projectNumber"}, {"readOnly": true, "type": "string", "name": "workloadIdentityPoolId"}]}, {"type": "integer64", "name": "scanInterval"}]}, {"property": "environmentType", "value": "GithubScope"}, {"property": "environmentType", "value": "GitlabScope"}]}, {"type": "string", "name": "environmentName", "enum": {"items": [{"value": "AWS"}, {"value": "Azure"}, {"value": "AzureDevOps"}, {"value": "GCP"}, {"value": "GitLab"}, {"value": "Github"}]}}, {"type": "string", "name": "hierarchyIdentifier"}, {"readOnly": true, "type": "dateTime", "name": "hierarchyIdentifierTrialEndDate"}, {"type": "array<object>", "name": "offerings", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "description"}, {"type": "string", "name": "offeringType", "required": true, "enum": {"items": [{"value": "CspmMonitorAws"}, {"value": "CspmMonitorAzureDevOps"}, {"value": "CspmMonitorGcp"}, {"value": "CspmMonitorGitLab"}, {"value": "CspmMonitorGithub"}, {"value": "DefenderCspmAws"}, {"value": "DefenderCspmGcp"}, {"value": "DefenderForContainersAws"}, {"value": "DefenderForContainersGcp"}, {"value": "DefenderForDatabasesAws"}, {"value": "DefenderForDatabasesGcp"}, {"value": "DefenderForDevOpsAzureDevOps"}, {"value": "DefenderForDevOpsGitLab"}, {"value": "DefenderForDevOpsGithub"}, {"value": "DefenderForServersAws"}, {"value": "DefenderForServersGcp"}, {"value": "InformationProtectionAws"}]}}], "discriminators": [{"property": "offeringType", "value": "CspmMonitorAws", "props": [{"type": "object", "name": "nativeCloudConnection", "props": [{"type": "string", "name": "cloudRoleArn"}]}]}, {"property": "offeringType", "value": "CspmMonitorAzureDevOps"}, {"property": "offeringType", "value": "CspmMonitorGcp", "props": [{"type": "object", "name": "nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "CspmMonitorGitLab"}, {"property": "offeringType", "value": "CspmMonitorGithub"}, {"property": "offeringType", "value": "DefenderCspmAws", "props": [{"type": "object", "name": "ciem", "props": [{"type": "object", "name": "ciemDiscovery", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "ciemOidc", "props": [{"type": "string", "name": "azureActiveDirectoryAppName"}, {"type": "string", "name": "cloudRoleArn"}]}]}, {"type": "object", "name": "dataSensitivityDiscovery", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderCspmGcp", "props": [{"type": "object", "name": "ciemDiscovery", "props": [{"type": "string", "name": "azureActiveDirectoryAppName"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "dataSensitivityDiscovery", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderForContainersAws", "props": [{"type": "boolean", "name": "autoProvisioning"}, {"type": "object", "name": "cloudWatchToKinesis", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessment", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessmentTask", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "boolean", "name": "enableContainerVulnerabilityAssessment"}, {"type": "object", "name": "kinesisToS3", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "integer64", "name": "kubeAuditRetentionTime"}, {"type": "object", "name": "kubernetesScubaReader", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "kubernetesService", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "string", "name": "scubaExternalId"}]}, {"property": "offeringType", "value": "DefenderForContainersGcp", "props": [{"type": "boolean", "name": "auditLogsAutoProvisioningFlag"}, {"type": "object", "name": "dataPipelineNativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "boolean", "name": "defenderAgentAutoProvisioningFlag"}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "boolean", "name": "policyAgentAutoProvisioningFlag"}]}, {"property": "offeringType", "value": "DefenderForDatabasesAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "rds", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderForDatabasesGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "defenderForDatabasesArcAutoProvisioning", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "DefenderForDevOpsAzureDevOps"}, {"property": "offeringType", "value": "DefenderForDevOpsGitLab"}, {"property": "offeringType", "value": "DefenderForDevOpsGithub"}, {"property": "offeringType", "value": "DefenderForServersAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "defenderForServers", "props": [{"type": "string", "name": "cloudRoleArn"}]}, {"type": "object", "name": "mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "subPlan", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "DefenderForServersGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "privateLinkScope"}, {"type": "string", "name": "proxy"}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "defenderForServers", "props": [{"type": "string", "name": "serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId"}]}, {"type": "object", "name": "mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration"}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "subPlan", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "props": [{"type": "string", "name": "type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled"}]}, {"type": "object", "name": "vmScanners", "props": [{"type": "object", "name": "configuration", "props": [{"type": "object", "name": "exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled"}]}]}, {"property": "offeringType", "value": "InformationProtectionAws", "props": [{"type": "object", "name": "informationProtection", "props": [{"type": "string", "name": "cloudRoleArn"}]}]}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "SecurityConnector_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "securityConnector", "required": true, "props": [{"type": "string", "name": "etag", "arg": "$securityConnector.etag"}, {"type": "string", "name": "kind", "arg": "$securityConnector.kind"}, {"type": "ResourceLocation", "name": "location", "arg": "$securityConnector.location"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "environmentData", "arg": "$securityConnector.properties.environmentData", "props": [{"type": "string", "name": "environmentType", "required": true, "enum": {"items": [{"arg": "$securityConnector.properties.environmentData.AwsAccount", "value": "AwsAccount"}, {"arg": "$securityConnector.properties.environmentData.AzureDevOpsScope", "value": "AzureDevOpsScope"}, {"arg": "$securityConnector.properties.environmentData.GcpProject", "value": "GcpProject"}, {"arg": "$securityConnector.properties.environmentData.GithubScope", "value": "GithubScope"}, {"arg": "$securityConnector.properties.environmentData.GitlabScope", "value": "GitlabScope"}]}}], "discriminators": [{"property": "environmentType", "value": "AwsAccount", "props": [{"type": "object", "name": "organizationalData", "arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Member", "value": "Member"}, {"arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization", "value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "parentHierarchyId", "arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Member.parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedAccountIds", "arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization.excludedAccountIds", "item": {"type": "string"}}, {"type": "string", "name": "stacksetName", "arg": "$securityConnector.properties.environmentData.AwsAccount.organizationalData.Organization.stacksetName"}]}]}, {"type": "array<string>", "name": "regions", "arg": "$securityConnector.properties.environmentData.AwsAccount.regions", "item": {"type": "string"}}, {"type": "integer64", "name": "scanInterval", "arg": "$securityConnector.properties.environmentData.AwsAccount.scanInterval"}]}, {"property": "environmentType", "value": "AzureDevOpsScope"}, {"property": "environmentType", "value": "GcpProject", "props": [{"type": "object", "name": "organizationalData", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData", "props": [{"type": "string", "name": "organizationMembershipType", "required": true, "enum": {"items": [{"arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member", "value": "Member"}, {"arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization", "value": "Organization"}]}}], "discriminators": [{"property": "organizationMembershipType", "value": "Member", "props": [{"type": "string", "name": "managementProjectNumber", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member.managementProjectNumber"}, {"type": "string", "name": "parentHierarchyId", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Member.parentHierarchyId"}]}, {"property": "organizationMembershipType", "value": "Organization", "props": [{"type": "array<string>", "name": "excludedProjectNumbers", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.excludedProjectNumbers", "item": {"type": "string"}}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.environmentData.GcpProject.organizationalData.Organization.workloadIdentityProviderId"}]}]}, {"type": "object", "name": "projectDetails", "arg": "$securityConnector.properties.environmentData.GcpProject.projectDetails", "props": [{"type": "string", "name": "projectId", "arg": "$securityConnector.properties.environmentData.GcpProject.projectDetails.projectId"}, {"type": "string", "name": "projectNumber", "arg": "$securityConnector.properties.environmentData.GcpProject.projectDetails.projectNumber"}]}, {"type": "integer64", "name": "scanInterval", "arg": "$securityConnector.properties.environmentData.GcpProject.scanInterval"}]}, {"property": "environmentType", "value": "GithubScope"}, {"property": "environmentType", "value": "GitlabScope"}]}, {"type": "string", "name": "environmentName", "arg": "$securityConnector.properties.environmentName", "enum": {"items": [{"value": "AWS"}, {"value": "Azure"}, {"value": "AzureDevOps"}, {"value": "GCP"}, {"value": "GitLab"}, {"value": "Github"}]}}, {"type": "string", "name": "hierarchyIdentifier", "arg": "$securityConnector.properties.hierarchyIdentifier"}, {"type": "array<object>", "name": "offerings", "arg": "$securityConnector.properties.offerings", "item": {"type": "object", "props": [{"type": "string", "name": "offeringType", "required": true, "enum": {"items": [{"arg": "$securityConnector.properties.offerings[].CspmMonitorAws", "value": "CspmMonitorAws"}, {"arg": "$securityConnector.properties.offerings[].CspmMonitorAzureDevOps", "value": "CspmMonitorAzureDevOps"}, {"arg": "$securityConnector.properties.offerings[].CspmMonitorGcp", "value": "CspmMonitorGcp"}, {"arg": "$securityConnector.properties.offerings[].CspmMonitorGitLab", "value": "CspmMonitorGitLab"}, {"arg": "$securityConnector.properties.offerings[].CspmMonitorGithub", "value": "CspmMonitorGithub"}, {"arg": "$securityConnector.properties.offerings[].DefenderCspmAws", "value": "DefenderCspmAws"}, {"arg": "$securityConnector.properties.offerings[].DefenderCspmGcp", "value": "DefenderCspmGcp"}, {"arg": "$securityConnector.properties.offerings[].DefenderForContainersAws", "value": "DefenderForContainersAws"}, {"arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp", "value": "DefenderForContainersGcp"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws", "value": "DefenderForDatabasesAws"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp", "value": "DefenderForDatabasesGcp"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDevOpsAzureDevOps", "value": "DefenderForDevOpsAzureDevOps"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDevOpsGitLab", "value": "DefenderForDevOpsGitLab"}, {"arg": "$securityConnector.properties.offerings[].DefenderForDevOpsGithub", "value": "DefenderForDevOpsGithub"}, {"arg": "$securityConnector.properties.offerings[].DefenderForServersAws", "value": "DefenderForServersAws"}, {"arg": "$securityConnector.properties.offerings[].DefenderForServersGcp", "value": "DefenderForServersGcp"}, {"arg": "$securityConnector.properties.offerings[].InformationProtectionAws", "value": "InformationProtectionAws"}]}}], "discriminators": [{"property": "offeringType", "value": "CspmMonitorAws", "props": [{"type": "object", "name": "nativeCloudConnection", "arg": "$securityConnector.properties.offerings[].CspmMonitorAws.nativeCloudConnection", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].CspmMonitorAws.nativeCloudConnection.cloudRoleArn"}]}]}, {"property": "offeringType", "value": "CspmMonitorAzureDevOps"}, {"property": "offeringType", "value": "CspmMonitorGcp", "props": [{"type": "object", "name": "nativeCloudConnection", "arg": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].CspmMonitorGcp.nativeCloudConnection.workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "CspmMonitorGitLab"}, {"property": "offeringType", "value": "CspmMonitorGithub"}, {"property": "offeringType", "value": "DefenderCspmAws", "props": [{"type": "object", "name": "ciem", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem", "props": [{"type": "object", "name": "ciemDiscovery", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemDiscovery", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemDiscovery.cloudRoleArn"}]}, {"type": "object", "name": "ciemOidc", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc", "props": [{"type": "string", "name": "azureActiveDirectoryAppName", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc.azureActiveDirectoryAppName"}, {"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.ciem.ciemOidc.cloudRoleArn"}]}]}, {"type": "object", "name": "dataSensitivityDiscovery", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.dataSensitivityDiscovery.enabled"}]}, {"type": "object", "name": "databasesDspm", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.databasesDspm.enabled"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersAgentlessDiscoveryK8s.enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.mdcContainersImageAssessment.enabled"}]}, {"type": "object", "name": "vmScanners", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.configuration.scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmAws.vmScanners.enabled"}]}]}, {"property": "offeringType", "value": "DefenderCspmGcp", "props": [{"type": "object", "name": "ciemDiscovery", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery", "props": [{"type": "string", "name": "azureActiveDirectoryAppName", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.azureActiveDirectoryAppName"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.ciemDiscovery.workloadIdentityProviderId"}]}, {"type": "object", "name": "dataSensitivityDiscovery", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.dataSensitivityDiscovery.workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersAgentlessDiscoveryK8s.workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.mdcContainersImageAssessment.workloadIdentityProviderId"}]}, {"type": "object", "name": "vmScanners", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration", "props": [{"type": "object", "name": "exclusionTags", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration.exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.configuration.scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderCspmGcp.vmScanners.enabled"}]}]}, {"property": "offeringType", "value": "DefenderForContainersAws", "props": [{"type": "boolean", "name": "autoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.autoProvisioning"}, {"type": "object", "name": "cloudWatchToKinesis", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.cloudWatchToKinesis", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.cloudWatchToKinesis.cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessment", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessment", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessment.cloudRoleArn"}]}, {"type": "object", "name": "containerVulnerabilityAssessmentTask", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessmentTask", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.containerVulnerabilityAssessmentTask.cloudRoleArn"}]}, {"type": "boolean", "name": "enableContainerVulnerabilityAssessment", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.enableContainerVulnerabilityAssessment"}, {"type": "object", "name": "kinesisToS3", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kinesisToS3", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kinesisToS3.cloudRoleArn"}]}, {"type": "integer64", "name": "kubeAuditRetentionTime", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubeAuditRetentionTime"}, {"type": "object", "name": "kubernetesScubaReader", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesScubaReader", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesScubaReader.cloudRoleArn"}]}, {"type": "object", "name": "kubernetesService", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesService", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.kubernetesService.cloudRoleArn"}]}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersAgentlessDiscoveryK8s.enabled"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.mdcContainersImageAssessment.enabled"}]}, {"type": "string", "name": "scubaExternalId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersAws.scubaExternalId"}]}, {"property": "offeringType", "value": "DefenderForContainersGcp", "props": [{"type": "boolean", "name": "auditLogsAutoProvisioningFlag", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.auditLogsAutoProvisioningFlag"}, {"type": "object", "name": "dataPipelineNativeCloudConnection", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.dataPipelineNativeCloudConnection.workloadIdentityProviderId"}]}, {"type": "boolean", "name": "defenderAgentAutoProvisioningFlag", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.defenderAgentAutoProvisioningFlag"}, {"type": "object", "name": "mdcContainersAgentlessDiscoveryK8s", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersAgentlessDiscoveryK8s.workloadIdentityProviderId"}]}, {"type": "object", "name": "mdcContainersImageAssessment", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment", "props": [{"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.enabled"}, {"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.mdcContainersImageAssessment.workloadIdentityProviderId"}]}, {"type": "object", "name": "nativeCloudConnection", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.nativeCloudConnection.workloadIdentityProviderId"}]}, {"type": "boolean", "name": "policyAgentAutoProvisioningFlag", "arg": "$securityConnector.properties.offerings[].DefenderForContainersGcp.policyAgentAutoProvisioningFlag"}]}, {"property": "offeringType", "value": "DefenderForDatabasesAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.cloudRoleArn"}, {"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration", "props": [{"type": "string", "name": "privateLinkScope", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration.privateLinkScope"}, {"type": "string", "name": "proxy", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.configuration.proxy"}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.arcAutoProvisioning.enabled"}]}, {"type": "object", "name": "databasesDspm", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.databasesDspm.enabled"}]}, {"type": "object", "name": "rds", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds.cloudRoleArn"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesAws.rds.enabled"}]}]}, {"property": "offeringType", "value": "DefenderForDatabasesGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration", "props": [{"type": "string", "name": "privateLinkScope", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration.privateLinkScope"}, {"type": "string", "name": "proxy", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.configuration.proxy"}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.arcAutoProvisioning.enabled"}]}, {"type": "object", "name": "defenderForDatabasesArcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForDatabasesGcp.defenderForDatabasesArcAutoProvisioning.workloadIdentityProviderId"}]}]}, {"property": "offeringType", "value": "DefenderForDevOpsAzureDevOps"}, {"property": "offeringType", "value": "DefenderForDevOpsGitLab"}, {"property": "offeringType", "value": "DefenderForDevOpsGithub"}, {"property": "offeringType", "value": "DefenderForServersAws", "props": [{"type": "object", "name": "arcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.cloudRoleArn"}, {"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration", "props": [{"type": "string", "name": "privateLinkScope", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration.privateLinkScope"}, {"type": "string", "name": "proxy", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.configuration.proxy"}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.arcAutoProvisioning.enabled"}]}, {"type": "object", "name": "defenderForServers", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.defenderForServers", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.defenderForServers.cloudRoleArn"}]}, {"type": "object", "name": "mdeAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning.configuration"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.mdeAutoProvisioning.enabled"}]}, {"type": "object", "name": "subPlan", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.subPlan", "props": [{"type": "string", "name": "type", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.subPlan.type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.configuration", "props": [{"type": "string", "name": "type", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.configuration.type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vaAutoProvisioning.enabled"}]}, {"type": "object", "name": "vmScanners", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.cloudRoleArn"}, {"type": "object", "name": "exclusionTags", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.configuration.scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersAws.vmScanners.enabled"}]}]}, {"property": "offeringType", "value": "DefenderForServersGcp", "props": [{"type": "object", "name": "arcAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration", "props": [{"type": "string", "name": "privateLinkScope", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration.privateLinkScope"}, {"type": "string", "name": "proxy", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.configuration.proxy"}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.arcAutoProvisioning.enabled"}]}, {"type": "object", "name": "defenderForServers", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers", "props": [{"type": "string", "name": "serviceAccountEmailAddress", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers.serviceAccountEmailAddress"}, {"type": "string", "name": "workloadIdentityProviderId", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.defenderForServers.workloadIdentityProviderId"}]}, {"type": "object", "name": "mdeAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning.configuration"}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.mdeAutoProvisioning.enabled"}]}, {"type": "object", "name": "subPlan", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.subPlan", "props": [{"type": "string", "name": "type", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.subPlan.type", "enum": {"items": [{"value": "P1"}, {"value": "P2"}]}}]}, {"type": "object", "name": "vaAutoProvisioning", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.configuration", "props": [{"type": "string", "name": "type", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.configuration.type", "enum": {"items": [{"value": "Qualys"}, {"value": "TVM"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vaAutoProvisioning.enabled"}]}, {"type": "object", "name": "vmScanners", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners", "props": [{"type": "object", "name": "configuration", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration", "props": [{"type": "object", "name": "exclusionTags", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration.exclusionTags", "additionalProps": {"item": {"type": "string"}}}, {"type": "string", "name": "scanningMode", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.configuration.scanningMode", "enum": {"items": [{"value": "Default"}]}}]}, {"type": "boolean", "name": "enabled", "arg": "$securityConnector.properties.offerings[].DefenderForServersGcp.vmScanners.enabled"}]}]}, {"property": "offeringType", "value": "InformationProtectionAws", "props": [{"type": "object", "name": "informationProtection", "arg": "$securityConnector.properties.offerings[].InformationProtectionAws.informationProtection", "props": [{"type": "string", "name": "cloudRoleArn", "arg": "$securityConnector.properties.offerings[].InformationProtectionAws.informationProtection.cloudRoleArn"}]}]}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$securityConnector.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"operationId": "SecurityConnectors_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/securityConnectors/{securityConnectorName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"pattern": "^[-\\w\\._\\(\\)]+$", "maxLength": 90, "minLength": 1}}, {"type": "string", "name": "securityConnectorName", "arg": "$Path.securityConnectorName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@SecurityConnector_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}