<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/oracle.database/oraclesubscriptions/default" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvT3JhY2xlLkRhdGFiYXNlL29yYWNsZVN1YnNjcmlwdGlvbnMvZGVmYXVsdA==/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="oracle-database oracle-subscription default">
    <command name="show" version="2023-09-01">
      <resource id="/subscriptions/{}/providers/oracle.database/oraclesubscriptions/default" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvT3JhY2xlLkRhdGFiYXNlL29yYWNsZVN1YnNjcmlwdGlvbnMvZGVmYXVsdA==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="OracleSubscriptions_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Oracle.Database/oracleSubscriptions/default"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="cloudAccountId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="cloudAccountState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="saasSubscriptionId"/>
                    <prop type="string" name="termUnit"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/providers/oracle.database/oraclesubscriptions/default" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvT3JhY2xlLkRhdGFiYXNlL29yYWNsZVN1YnNjcmlwdGlvbnMvZGVmYXVsdA==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="OracleSubscriptions_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default">
          <request method="delete">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01">
      <resource id="/subscriptions/{}/providers/oracle.database/oraclesubscriptions/default" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvT3JhY2xlLkRhdGFiYXNlL29yYWNsZVN1YnNjcmlwdGlvbnMvZGVmYXVsdA==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.termUnit" options="term-unit" group="Properties">
          <help short="Term Unit. P1Y, P3Y, etc, see Durations https://en.wikipedia.org/wiki/ISO_8601"/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.plan" options="plan" group="Resource">
          <help short="Details of the resource plan."/>
          <arg type="string" var="$resource.plan.name" options="name" required="True">
            <help short="A user defined name of the 3rd Party Artifact that is being procured."/>
          </arg>
          <arg type="string" var="$resource.plan.product" options="product" required="True">
            <help short="The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "/>
          </arg>
          <arg type="string" var="$resource.plan.promotionCode" options="promotion-code">
            <help short="A publisher provided promotion code as provisioned in Data Market for the said product/artifact."/>
          </arg>
          <arg type="string" var="$resource.plan.publisher" options="publisher" required="True">
            <help short="The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"/>
          </arg>
          <arg type="string" var="$resource.plan.version" options="version">
            <help short="The version of the desired product/artifact."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="OracleSubscriptions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default">
          <request method="put">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="plan" arg="$resource.plan">
                    <prop type="string" name="name" arg="$resource.plan.name" required="True"/>
                    <prop type="string" name="product" arg="$resource.plan.product" required="True"/>
                    <prop type="string" name="promotionCode" arg="$resource.plan.promotionCode"/>
                    <prop type="string" name="publisher" arg="$resource.plan.publisher" required="True"/>
                    <prop type="string" name="version" arg="$resource.plan.version"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="termUnit" arg="$resource.properties.termUnit"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Oracle.Database/oracleSubscriptions/default"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="cloudAccountId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="cloudAccountState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="saasSubscriptionId"/>
                    <prop type="string" name="termUnit"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01">
      <resource id="/subscriptions/{}/providers/oracle.database/oraclesubscriptions/default" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvT3JhY2xlLkRhdGFiYXNlL29yYWNsZVN1YnNjcmlwdGlvbnMvZGVmYXVsdA==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$resource.properties.intent" options="intent" group="Properties">
          <help short="Intent for the update operation"/>
          <enum>
            <item name="Reset" value="&quot;Reset&quot;"/>
            <item name="Retain" value="&quot;Retain&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.productCode" options="product-code" group="Properties">
          <help short="Product code for the term unit"/>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.plan" options="plan" group="Resource">
          <help short="Details of the resource plan."/>
          <arg type="string" var="$resource.plan.name" options="name">
            <help short="A user defined name of the 3rd Party Artifact that is being procured."/>
          </arg>
          <arg type="string" var="$resource.plan.product" options="product">
            <help short="The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. "/>
          </arg>
          <arg nullable="True" type="string" var="$resource.plan.promotionCode" options="promotion-code">
            <help short="A publisher provided promotion code as provisioned in Data Market for the said product/artifact."/>
          </arg>
          <arg type="string" var="$resource.plan.publisher" options="publisher">
            <help short="The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.plan.version" options="version">
            <help short="The version of the desired product/artifact."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="OracleSubscriptions_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="OracleSubscription_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Oracle.Database/oracleSubscriptions/default"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="plan">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="product" required="True"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher" required="True"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="cloudAccountId">
                      <format maxLength="255" minLength="1"/>
                    </prop>
                    <prop type="string" name="cloudAccountState">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="saasSubscriptionId"/>
                    <prop type="string" name="termUnit"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="plan" arg="$resource.plan">
                <prop type="string" name="name" arg="$resource.plan.name" required="True"/>
                <prop type="string" name="product" arg="$resource.plan.product" required="True"/>
                <prop type="string" name="promotionCode" arg="$resource.plan.promotionCode"/>
                <prop type="string" name="publisher" arg="$resource.plan.publisher" required="True"/>
                <prop type="string" name="version" arg="$resource.plan.version"/>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="intent" arg="$resource.properties.intent">
                  <enum>
                    <item value="&quot;Reset&quot;"/>
                    <item value="&quot;Retain&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="productCode" arg="$resource.properties.productCode"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="OracleSubscriptions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default">
          <request method="put">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@OracleSubscription_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
