<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/purestorage.block/storagepools/{}/avsstoragecontainers/{}" version="2024-11-01-preview" swagger="mgmt-plane/purestorage/ResourceProviders/PureStorage.Block/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QdXJlU3RvcmFnZS5CbG9jay9zdG9yYWdlUG9vbHMve3N0b3JhZ2VQb29sTmFtZX0vYXZzU3RvcmFnZUNvbnRhaW5lcnMve3N0b3JhZ2VDb250YWluZXJOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
  <commandGroup name="purestorageblock storagepool avs-storage-container">
    <command name="show" version="2024-11-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/purestorage.block/storagepools/{}/avsstoragecontainers/{}" version="2024-11-01-preview" swagger="mgmt-plane/purestorage/ResourceProviders/PureStorage.Block/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QdXJlU3RvcmFnZS5CbG9jay9zdG9yYWdlUG9vbHMve3N0b3JhZ2VQb29sTmFtZX0vYXZzU3RvcmFnZUNvbnRhaW5lcnMve3N0b3JhZ2VDb250YWluZXJOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageContainerName" options="storage-container-name name n" required="True" idPart="child_name_1">
          <help short="Name of the storage container"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,62}[a-zA-Z0-9]$"/>
        </arg>
        <arg type="string" var="$Path.storagePoolName" options="storage-pool-name" required="True" idPart="name">
          <help short="Name of the storage pool"/>
          <format pattern="^[a-zA-Z0-9\-_]{1,127}$" maxLength="127" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AvsStorageContainers_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PureStorage.Block/storagePools/{storagePoolName}/avsStorageContainers/{storageContainerName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageContainerName" arg="$Path.storageContainerName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,62}[a-zA-Z0-9]$"/>
              </param>
              <param type="string" name="storagePoolName" arg="$Path.storagePoolName" required="True">
                <format pattern="^[a-zA-Z0-9\-_]{1,127}$" maxLength="127" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/PureStorage.Block/storagePools/{}/avsStorageContainers/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="datastore">
                      <format pattern="(^[a-zA-Z][a-zA-Z0-9\-]{0,62}[a-zA-Z0-9])?$"/>
                    </prop>
                    <prop readOnly="True" type="boolean" name="mounted"/>
                    <prop type="integer64" name="provisionedLimit"/>
                    <prop readOnly="True" type="string" name="resourceName">
                      <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,62}[a-zA-Z0-9]$"/>
                    </prop>
                    <prop readOnly="True" type="object" name="space">
                      <prop type="integer64" name="shared" required="True"/>
                      <prop type="integer64" name="snapshots" required="True"/>
                      <prop type="integer64" name="totalUsed" required="True"/>
                      <prop type="integer64" name="unique" required="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-11-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/purestorage.block/storagepools/{}/avsstoragecontainers/{}" version="2024-11-01-preview" swagger="mgmt-plane/purestorage/ResourceProviders/PureStorage.Block/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QdXJlU3RvcmFnZS5CbG9jay9zdG9yYWdlUG9vbHMve3N0b3JhZ2VQb29sTmFtZX0vYXZzU3RvcmFnZUNvbnRhaW5lcnMve3N0b3JhZ2VDb250YWluZXJOYW1lfQ==/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.storageContainerName" options="storage-container-name name n" required="True" idPart="child_name_1">
          <help short="Name of the storage container"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,62}[a-zA-Z0-9]$"/>
        </arg>
        <arg type="string" var="$Path.storagePoolName" options="storage-pool-name" required="True" idPart="name">
          <help short="Name of the storage pool"/>
          <format pattern="^[a-zA-Z0-9\-_]{1,127}$" maxLength="127" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AvsStorageContainers_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PureStorage.Block/storagePools/{storagePoolName}/avsStorageContainers/{storageContainerName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="storageContainerName" arg="$Path.storageContainerName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9\-]{0,62}[a-zA-Z0-9]$"/>
              </param>
              <param type="string" name="storagePoolName" arg="$Path.storagePoolName" required="True">
                <format pattern="^[a-zA-Z0-9\-_]{1,127}$" maxLength="127" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
  </commandGroup>
</CodeGen>
