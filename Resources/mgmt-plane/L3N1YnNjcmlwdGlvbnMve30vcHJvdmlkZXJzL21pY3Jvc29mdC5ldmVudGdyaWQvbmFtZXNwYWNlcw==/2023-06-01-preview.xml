<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.eventgrid/namespaces" version="2023-06-01-preview" swagger="mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkV2ZW50R3JpZC9uYW1lc3BhY2Vz/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces" version="2023-06-01-preview" swagger="mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXM=/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
  <commandGroup name="eventgrid namespace">
    <command name="list" version="2023-06-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.eventgrid/namespaces" version="2023-06-01-preview" swagger="mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkV2ZW50R3JpZC9uYW1lc3BhY2Vz/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventgrid/namespaces" version="2023-06-01-preview" swagger="mgmt-plane/eventgrid/ResourceProviders/Microsoft.EventGrid/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRHcmlkL25hbWVzcGFjZXM=/V/MjAyMy0wNi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.filter" options="filter">
          <help short="The query used to filter the search results using OData syntax. Filtering is permitted on the 'name' property only and with limited number of OData operations. These operations are: the 'contains' function as well as the following logical operations: not, and, or, eq (for equal), and ne (for not equal). No arithmetic operations are supported. The following is a valid filter example: $filter=contains(namE, 'PATTERN') and name ne 'PATTERN-1'. The following is not a valid filter example: $filter=location eq 'westus'."/>
        </arg>
        <arg type="integer32" var="$Query.top" options="top">
          <help short="The number of results to return per page for the list operation. Valid range for top parameter is 1 to 100. If not specified, the default number of results to be returned is 20 items per page."/>
        </arg>
      </argGroup>
      <condition var="$Condition_Namespaces_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Namespaces_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Namespaces_ListByResourceGroup" operationId="Namespaces_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/namespaces">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="integer32" name="$top" arg="$Query.top"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/namespaces/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop type="string" name="principalId"/>
                        <prop type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop type="string" name="clientId"/>
                              <prop type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="inboundIpRules">
                          <item type="object">
                            <prop type="string" name="action">
                              <enum>
                                <item value="&quot;Allow&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipMask"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="isZoneRedundant"/>
                        <prop type="string" name="minimumTlsVersionAllowed">
                          <enum>
                            <item value="&quot;1.0&quot;"/>
                            <item value="&quot;1.1&quot;"/>
                            <item value="&quot;1.2&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="privateEndpointConnections">
                          <item type="object">
                            <prop readOnly="True" type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/{}/{}/privateEndpointConnections/{}"/>
                            </prop>
                            <prop readOnly="True" type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<string>" name="groupIds">
                                <item type="string"/>
                              </prop>
                              <prop type="object" name="privateEndpoint">
                                <prop type="string" name="id"/>
                              </prop>
                              <prop type="object" name="privateLinkServiceConnectionState">
                                <prop type="string" name="actionsRequired"/>
                                <prop type="string" name="description"/>
                                <prop type="string" name="status">
                                  <enum>
                                    <item value="&quot;Approved&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                    <item value="&quot;Pending&quot;"/>
                                    <item value="&quot;Rejected&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Canceled&quot;"/>
                                  <item value="&quot;Creating&quot;"/>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;CreateFailed&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;DeleteFailed&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;UpdatedFailed&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="publicNetworkAccess">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="topicSpacesConfiguration">
                          <prop type="object" name="clientAuthentication">
                            <prop type="array<string>" name="alternativeAuthenticationNameSources">
                              <item type="string">
                                <enum>
                                  <item value="&quot;ClientCertificateDns&quot;"/>
                                  <item value="&quot;ClientCertificateEmail&quot;"/>
                                  <item value="&quot;ClientCertificateIp&quot;"/>
                                  <item value="&quot;ClientCertificateSubject&quot;"/>
                                  <item value="&quot;ClientCertificateUri&quot;"/>
                                </enum>
                              </item>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="hostname"/>
                          <prop type="integer32" name="maximumClientSessionsPerAuthenticationName"/>
                          <prop type="integer32" name="maximumSessionExpiryInHours"/>
                          <prop type="string" name="routeTopicResourceId"/>
                          <prop type="object" name="routingEnrichments">
                            <prop type="array<object>" name="dynamic">
                              <item type="object">
                                <prop type="string" name="key"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="array<object>" name="static">
                              <item type="object">
                                <prop type="string" name="key"/>
                                <prop type="string" name="valueType">
                                  <enum>
                                    <item value="&quot;String&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="routingIdentityInfo">
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;SystemAssigned&quot;"/>
                                <item value="&quot;UserAssigned&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="userAssignedIdentity"/>
                          </prop>
                          <prop type="string" name="state">
                            <default value="&quot;Disabled&quot;"/>
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="topicsConfiguration">
                          <prop readOnly="True" type="string" name="hostname"/>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Namespaces_ListBySubscription" operationId="Namespaces_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.EventGrid/namespaces">
          <request method="get">
            <path>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="integer32" name="$top" arg="$Query.top"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/namespaces/{}"/>
                      </prop>
                      <prop type="IdentityObject" name="identity">
                        <prop type="string" name="principalId"/>
                        <prop type="string" name="tenantId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="userAssignedIdentities">
                          <additionalProp>
                            <item type="object">
                              <prop type="string" name="clientId"/>
                              <prop type="string" name="principalId"/>
                            </item>
                          </additionalProp>
                        </prop>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="inboundIpRules">
                          <item type="object">
                            <prop type="string" name="action">
                              <enum>
                                <item value="&quot;Allow&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="ipMask"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="isZoneRedundant"/>
                        <prop type="string" name="minimumTlsVersionAllowed">
                          <enum>
                            <item value="&quot;1.0&quot;"/>
                            <item value="&quot;1.1&quot;"/>
                            <item value="&quot;1.2&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="privateEndpointConnections">
                          <item type="object">
                            <prop readOnly="True" type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventGrid/{}/{}/privateEndpointConnections/{}"/>
                            </prop>
                            <prop readOnly="True" type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<string>" name="groupIds">
                                <item type="string"/>
                              </prop>
                              <prop type="object" name="privateEndpoint">
                                <prop type="string" name="id"/>
                              </prop>
                              <prop type="object" name="privateLinkServiceConnectionState">
                                <prop type="string" name="actionsRequired"/>
                                <prop type="string" name="description"/>
                                <prop type="string" name="status">
                                  <enum>
                                    <item value="&quot;Approved&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                    <item value="&quot;Pending&quot;"/>
                                    <item value="&quot;Rejected&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Canceled&quot;"/>
                                  <item value="&quot;Creating&quot;"/>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;CreateFailed&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;DeleteFailed&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;UpdatedFailed&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="publicNetworkAccess">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="topicSpacesConfiguration">
                          <prop type="object" name="clientAuthentication">
                            <prop type="array<string>" name="alternativeAuthenticationNameSources">
                              <item type="string">
                                <enum>
                                  <item value="&quot;ClientCertificateDns&quot;"/>
                                  <item value="&quot;ClientCertificateEmail&quot;"/>
                                  <item value="&quot;ClientCertificateIp&quot;"/>
                                  <item value="&quot;ClientCertificateSubject&quot;"/>
                                  <item value="&quot;ClientCertificateUri&quot;"/>
                                </enum>
                              </item>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="hostname"/>
                          <prop type="integer32" name="maximumClientSessionsPerAuthenticationName"/>
                          <prop type="integer32" name="maximumSessionExpiryInHours"/>
                          <prop type="string" name="routeTopicResourceId"/>
                          <prop type="object" name="routingEnrichments">
                            <prop type="array<object>" name="dynamic">
                              <item type="object">
                                <prop type="string" name="key"/>
                                <prop type="string" name="value"/>
                              </item>
                            </prop>
                            <prop type="array<object>" name="static">
                              <item type="object">
                                <prop type="string" name="key"/>
                                <prop type="string" name="valueType">
                                  <enum>
                                    <item value="&quot;String&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="routingIdentityInfo">
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;SystemAssigned&quot;"/>
                                <item value="&quot;UserAssigned&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="userAssignedIdentity"/>
                          </prop>
                          <prop type="string" name="state">
                            <default value="&quot;Disabled&quot;"/>
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="topicsConfiguration">
                          <prop readOnly="True" type="string" name="hostname"/>
                        </prop>
                      </prop>
                      <prop type="object" name="sku">
                        <prop type="integer32" name="capacity"/>
                        <prop type="string" name="name">
                          <enum>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
