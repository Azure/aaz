<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}" version="2020-10-01" swagger="mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="/>
  <commandGroup name="attestation">
    <command name="show" version="2020-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}" version="2020-10-01" swagger="mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.providerName" options="provider-name" required="True" group="" idPart="name">
          <help short="Name of the attestation provider."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AttestationProviders_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}">
          <request method="get">
            <path>
              <param type="string" name="providerName" arg="$Path.providerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="attestUri"/>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Attestation/attestationProviders/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;NotReady&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="trustModel"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2020-10-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}" version="2020-10-01" swagger="mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.providerName" options="provider-name" required="True" group="" idPart="name">
          <help short="Name of the attestation service"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AttestationProviders_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}">
          <request method="delete">
            <path>
              <param type="string" name="providerName" arg="$Path.providerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-10-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2020-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}" version="2020-10-01" swagger="mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.providerName" options="provider-name" required="True" group="" idPart="name">
          <help short="Name of the attestation provider."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$creationParams.location" options="location l" required="True" group="">
          <help short="The supported Azure location where the attestation provider should be created."/>
        </arg>
        <arg type="array<object>" var="$creationParams.properties.policySigningCertificates.keys" options="certs" group="">
          <help short="The value of the &quot;keys&quot; parameter is an array of JWK values.  By default, the order of the JWK values within the array does not imply an order of preference among them, although applications of JWK Sets can choose to assign a meaning to the order for their purposes, if desired."/>
          <item type="object">
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].alg" options="alg">
              <help short="The &quot;alg&quot; (algorithm) parameter identifies the algorithm intended for use with the key.  The values used should either be registered in the IANA &quot;JSON Web Signature and Encryption Algorithms&quot; registry established by [JWA] or be a value that contains a Collision- Resistant Name."/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].crv" options="crv">
              <help short="The &quot;crv&quot; (curve) parameter identifies the curve type"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].d" options="d">
              <help short="RSA private exponent or ECC private key"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].dp" options="dp">
              <help short="RSA Private Key Parameter"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].dq" options="dq">
              <help short="RSA Private Key Parameter"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].e" options="e">
              <help short="RSA public exponent, in Base64"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].k" options="k">
              <help short="Symmetric key"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].kid" options="kid">
              <help short="The &quot;kid&quot; (key ID) parameter is used to match a specific key.  This is used, for instance, to choose among a set of keys within a JWK Set during key rollover.  The structure of the &quot;kid&quot; value is unspecified.  When &quot;kid&quot; values are used within a JWK Set, different keys within the JWK Set SHOULD use distinct &quot;kid&quot; values.  (One example in which different keys might use the same &quot;kid&quot; value is if they have different &quot;kty&quot; (key type) values but are considered to be equivalent alternatives by the application using them.)  The &quot;kid&quot; value is a case-sensitive string."/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].kty" options="kty" required="True">
              <help short="The &quot;kty&quot; (key type) parameter identifies the cryptographic algorithm family used with the key, such as &quot;RSA&quot; or &quot;EC&quot;. &quot;kty&quot; values should either be registered in the IANA &quot;JSON Web Key Types&quot; registry established by [JWA] or be a value that contains a Collision- Resistant Name.  The &quot;kty&quot; value is a case-sensitive string."/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].n" options="n">
              <help short="RSA modulus, in Base64"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].p" options="p">
              <help short="RSA secret prime"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].q" options="q">
              <help short="RSA secret prime, with p < q"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].qi" options="qi">
              <help short="RSA Private Key Parameter"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].use" options="use">
              <help short="Use (&quot;public key use&quot;) identifies the intended use of the public key. The &quot;use&quot; parameter is employed to indicate whether a public key is used for encrypting data or verifying the signature on data. Values are commonly &quot;sig&quot; (signature) or &quot;enc&quot; (encryption)."/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].x" options="x">
              <help short="X coordinate for the Elliptic Curve point"/>
            </arg>
            <arg type="array<string>" var="$creationParams.properties.policySigningCertificates.keys[].x5c" options="x5c">
              <help short="The &quot;x5c&quot; (X.509 certificate chain) parameter contains a chain of one or more PKIX certificates [RFC5280].  The certificate chain is represented as a JSON array of certificate value strings.  Each string in the array is a base64-encoded (Section 4 of [RFC4648] -- not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value. The PKIX certificate containing the key value MUST be the first certificate."/>
              <item type="string"/>
            </arg>
            <arg type="string" var="$creationParams.properties.policySigningCertificates.keys[].y" options="y">
              <help short="Y coordinate for the Elliptic Curve point"/>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$creationParams.tags" options="tags" group="">
          <help short="The tags that will be assigned to the attestation provider."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="AttestationProviders_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}">
          <request method="put">
            <path>
              <param type="string" name="providerName" arg="$Path.providerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-10-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="creationParams" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$creationParams.location" required="True"/>
                  <prop type="object" name="properties" required="True">
                    <prop type="object" name="policySigningCertificates">
                      <prop type="array<object>" name="keys" arg="$creationParams.properties.policySigningCertificates.keys">
                        <item type="object">
                          <prop type="string" name="alg" arg="$creationParams.properties.policySigningCertificates.keys[].alg"/>
                          <prop type="string" name="crv" arg="$creationParams.properties.policySigningCertificates.keys[].crv"/>
                          <prop type="string" name="d" arg="$creationParams.properties.policySigningCertificates.keys[].d"/>
                          <prop type="string" name="dp" arg="$creationParams.properties.policySigningCertificates.keys[].dp"/>
                          <prop type="string" name="dq" arg="$creationParams.properties.policySigningCertificates.keys[].dq"/>
                          <prop type="string" name="e" arg="$creationParams.properties.policySigningCertificates.keys[].e"/>
                          <prop type="string" name="k" arg="$creationParams.properties.policySigningCertificates.keys[].k"/>
                          <prop type="string" name="kid" arg="$creationParams.properties.policySigningCertificates.keys[].kid"/>
                          <prop type="string" name="kty" arg="$creationParams.properties.policySigningCertificates.keys[].kty" required="True"/>
                          <prop type="string" name="n" arg="$creationParams.properties.policySigningCertificates.keys[].n"/>
                          <prop type="string" name="p" arg="$creationParams.properties.policySigningCertificates.keys[].p"/>
                          <prop type="string" name="q" arg="$creationParams.properties.policySigningCertificates.keys[].q"/>
                          <prop type="string" name="qi" arg="$creationParams.properties.policySigningCertificates.keys[].qi"/>
                          <prop type="string" name="use" arg="$creationParams.properties.policySigningCertificates.keys[].use"/>
                          <prop type="string" name="x" arg="$creationParams.properties.policySigningCertificates.keys[].x"/>
                          <prop type="array<string>" name="x5c" arg="$creationParams.properties.policySigningCertificates.keys[].x5c">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="y" arg="$creationParams.properties.policySigningCertificates.keys[].y"/>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$creationParams.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="attestUri"/>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Attestation/attestationProviders/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;NotReady&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="trustModel"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2020-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}" version="2020-10-01" swagger="mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.providerName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the attestation provider."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="object" var="$updateParams.tags" options="tags" group="">
          <help short="The tags that will be assigned to the attestation provider."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="AttestationProviders_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}">
          <request method="patch">
            <path>
              <param type="string" name="providerName" arg="$Path.providerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2020-10-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="updateParams" required="True" clientFlatten="True">
                  <prop type="object" name="tags" arg="$updateParams.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="attestUri"/>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Attestation/attestationProviders/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="string" name="status">
                      <enum>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;NotReady&quot;"/>
                        <item value="&quot;Ready&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="trustModel"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
