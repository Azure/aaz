{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}", "version": "2020-10-01", "swagger": "mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="}], "commandGroups": [{"name": "attestation", "commands": [{"name": "show", "version": "2020-10-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}", "version": "2020-10-01", "swagger": "mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.providerName", "options": ["provider-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the attestation provider."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "AttestationProviders_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "providerName", "arg": "$Path.providerName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2020-10-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "attestUri"}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Attestation/attestationProviders/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"readOnly": true, "type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "required": true, "props": [{"type": "string", "name": "actionsRequired"}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Error"}, {"value": "NotReady"}, {"value": "Ready"}]}}, {"type": "string", "name": "trustModel"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2020-10-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}", "version": "2020-10-01", "swagger": "mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.providerName", "options": ["provider-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the attestation service"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "AttestationProviders_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "providerName", "arg": "$Path.providerName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2020-10-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2020-10-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}", "version": "2020-10-01", "swagger": "mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.providerName", "options": ["provider-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the attestation provider."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "ResourceLocation", "var": "$creationParams.location", "options": ["l", "location"], "required": true, "group": "", "help": {"short": "The supported Azure location where the attestation provider should be created."}}, {"type": "array<object>", "var": "$creationParams.properties.policySigningCertificates.keys", "options": ["certs"], "group": "", "help": {"short": "The value of the \"keys\" parameter is an array of JWK values.  By default, the order of the JWK values within the array does not imply an order of preference among them, although applications of JWK Sets can choose to assign a meaning to the order for their purposes, if desired."}, "item": {"type": "object", "args": [{"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].alg", "options": ["alg"], "help": {"short": "The \"alg\" (algorithm) parameter identifies the algorithm intended for use with the key.  The values used should either be registered in the IANA \"JSON Web Signature and Encryption Algorithms\" registry established by [JWA] or be a value that contains a Collision- Resistant Name."}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].crv", "options": ["crv"], "help": {"short": "The \"crv\" (curve) parameter identifies the curve type"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].d", "options": ["d"], "help": {"short": "RSA private exponent or ECC private key"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].dp", "options": ["dp"], "help": {"short": "RSA Private Key Parameter"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].dq", "options": ["dq"], "help": {"short": "RSA Private Key Parameter"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].e", "options": ["e"], "help": {"short": "RSA public exponent, in Base64"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].k", "options": ["k"], "help": {"short": "Symmetric key"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].kid", "options": ["kid"], "help": {"short": "The \"kid\" (key ID) parameter is used to match a specific key.  This is used, for instance, to choose among a set of keys within a JWK Set during key rollover.  The structure of the \"kid\" value is unspecified.  When \"kid\" values are used within a JWK Set, different keys within the JWK Set SHOULD use distinct \"kid\" values.  (One example in which different keys might use the same \"kid\" value is if they have different \"kty\" (key type) values but are considered to be equivalent alternatives by the application using them.)  The \"kid\" value is a case-sensitive string."}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].kty", "options": ["kty"], "required": true, "help": {"short": "The \"kty\" (key type) parameter identifies the cryptographic algorithm family used with the key, such as \"RSA\" or \"EC\". \"kty\" values should either be registered in the IANA \"JSON Web Key Types\" registry established by [JWA] or be a value that contains a Collision- Resistant Name.  The \"kty\" value is a case-sensitive string."}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].n", "options": ["n"], "help": {"short": "RSA modulus, in Base64"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].p", "options": ["p"], "help": {"short": "RSA secret prime"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].q", "options": ["q"], "help": {"short": "RSA secret prime, with p < q"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].qi", "options": ["qi"], "help": {"short": "RSA Private Key Parameter"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].use", "options": ["use"], "help": {"short": "Use (\"public key use\") identifies the intended use of the public key. The \"use\" parameter is employed to indicate whether a public key is used for encrypting data or verifying the signature on data. Values are commonly \"sig\" (signature) or \"enc\" (encryption)."}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].x", "options": ["x"], "help": {"short": "X coordinate for the Elliptic Curve point"}}, {"type": "array<string>", "var": "$creationParams.properties.policySigningCertificates.keys[].x5c", "options": ["x5c"], "help": {"short": "The \"x5c\" (X.509 certificate chain) parameter contains a chain of one or more PKIX certificates [RFC5280].  The certificate chain is represented as a JSON array of certificate value strings.  Each string in the array is a base64-encoded (Section 4 of [RFC4648] -- not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value. The PKIX certificate containing the key value MUST be the first certificate."}, "item": {"type": "string"}}, {"type": "string", "var": "$creationParams.properties.policySigningCertificates.keys[].y", "options": ["y"], "help": {"short": "Y coordinate for the Elliptic Curve point"}}]}}, {"type": "object", "var": "$creationParams.tags", "options": ["tags"], "group": "", "help": {"short": "The tags that will be assigned to the attestation provider."}, "additionalProps": {"item": {"type": "string"}}}]}], "operations": [{"operationId": "AttestationProviders_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "providerName", "arg": "$Path.providerName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2020-10-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "creationParams", "required": true, "props": [{"type": "ResourceLocation", "name": "location", "arg": "$creationParams.location", "required": true}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "policySigningCertificates", "props": [{"type": "array<object>", "name": "keys", "arg": "$creationParams.properties.policySigningCertificates.keys", "item": {"type": "object", "props": [{"type": "string", "name": "alg", "arg": "$creationParams.properties.policySigningCertificates.keys[].alg"}, {"type": "string", "name": "crv", "arg": "$creationParams.properties.policySigningCertificates.keys[].crv"}, {"type": "string", "name": "d", "arg": "$creationParams.properties.policySigningCertificates.keys[].d"}, {"type": "string", "name": "dp", "arg": "$creationParams.properties.policySigningCertificates.keys[].dp"}, {"type": "string", "name": "dq", "arg": "$creationParams.properties.policySigningCertificates.keys[].dq"}, {"type": "string", "name": "e", "arg": "$creationParams.properties.policySigningCertificates.keys[].e"}, {"type": "string", "name": "k", "arg": "$creationParams.properties.policySigningCertificates.keys[].k"}, {"type": "string", "name": "kid", "arg": "$creationParams.properties.policySigningCertificates.keys[].kid"}, {"type": "string", "name": "kty", "arg": "$creationParams.properties.policySigningCertificates.keys[].kty", "required": true}, {"type": "string", "name": "n", "arg": "$creationParams.properties.policySigningCertificates.keys[].n"}, {"type": "string", "name": "p", "arg": "$creationParams.properties.policySigningCertificates.keys[].p"}, {"type": "string", "name": "q", "arg": "$creationParams.properties.policySigningCertificates.keys[].q"}, {"type": "string", "name": "qi", "arg": "$creationParams.properties.policySigningCertificates.keys[].qi"}, {"type": "string", "name": "use", "arg": "$creationParams.properties.policySigningCertificates.keys[].use"}, {"type": "string", "name": "x", "arg": "$creationParams.properties.policySigningCertificates.keys[].x"}, {"type": "array<string>", "name": "x5c", "arg": "$creationParams.properties.policySigningCertificates.keys[].x5c", "item": {"type": "string"}}, {"type": "string", "name": "y", "arg": "$creationParams.properties.policySigningCertificates.keys[].y"}]}}]}]}, {"type": "object", "name": "tags", "arg": "$creationParams.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "attestUri"}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Attestation/attestationProviders/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"readOnly": true, "type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "required": true, "props": [{"type": "string", "name": "actionsRequired"}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Error"}, {"value": "NotReady"}, {"value": "Ready"}]}}, {"type": "string", "name": "trustModel"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2020-10-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.attestation/attestationproviders/{}", "version": "2020-10-01", "swagger": "mgmt-plane/attestation/ResourceProviders/Microsoft.Attestation/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXR0ZXN0YXRpb24vYXR0ZXN0YXRpb25Qcm92aWRlcnMve3Byb3ZpZGVyTmFtZX0=/V/MjAyMC0xMC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.providerName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the attestation provider."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "object", "var": "$updateParams.tags", "options": ["tags"], "group": "", "help": {"short": "The tags that will be assigned to the attestation provider."}, "additionalProps": {"item": {"type": "string"}}}]}], "operations": [{"operationId": "AttestationProviders_Update", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Attestation/attestationProviders/{providerName}", "request": {"method": "patch", "path": {"params": [{"type": "string", "name": "providerName", "arg": "$Path.providerName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2020-10-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "updateParams", "required": true, "props": [{"type": "object", "name": "tags", "arg": "$updateParams.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id"}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "attestUri"}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Attestation/attestationProviders/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"readOnly": true, "type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "required": true, "props": [{"type": "string", "name": "actionsRequired"}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Error"}, {"value": "NotReady"}, {"value": "Ready"}]}}, {"type": "string", "name": "trustModel"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}