<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/hostgroups/{}/hosts" version="2022-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9ob3N0R3JvdXBzL3tob3N0R3JvdXBOYW1lfS9ob3N0cw==/V/MjAyMi0xMS0wMQ=="/>
  <commandGroup name="vm host">
    <command name="list" version="2022-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/hostgroups/{}/hosts" version="2022-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9ob3N0R3JvdXBzL3tob3N0R3JvdXBOYW1lfS9ob3N0cw==/V/MjAyMi0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.hostGroupName" options="host-group-name host-group" required="True" group="" idPart="name">
          <help short="The name of the dedicated host group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
      </argGroup>
      <operation operationId="DedicatedHosts_ListByHostGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts">
          <request method="get">
            <path>
              <param type="string" name="hostGroupName" arg="$Path.hostGroupName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/hostGroups/{}/hosts/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="boolean" name="autoReplaceOnFailure"/>
                        <prop readOnly="True" type="string" name="hostId"/>
                        <prop type="object" name="instanceView">
                          <prop readOnly="True" type="string" name="assetId"/>
                          <prop type="object" name="availableCapacity">
                            <prop type="array<object>" name="allocatableVMs">
                              <item type="object">
                                <prop type="float64" name="count"/>
                                <prop type="string" name="vmSize"/>
                              </item>
                            </prop>
                          </prop>
                          <prop type="array<object>" name="statuses">
                            <item type="object">
                              <prop type="string" name="code"/>
                              <prop type="string" name="displayStatus"/>
                              <prop type="string" name="level">
                                <enum>
                                  <item value="&quot;Error&quot;"/>
                                  <item value="&quot;Info&quot;"/>
                                  <item value="&quot;Warning&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="message"/>
                              <prop type="dateTime" name="time"/>
                            </item>
                          </prop>
                        </prop>
                        <prop type="string" name="licenseType">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;Windows_Server_Hybrid&quot;"/>
                            <item value="&quot;Windows_Server_Perpetual&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer32" name="platformFaultDomain">
                          <format minimum="0"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop readOnly="True" type="dateTime" name="provisioningTime"/>
                        <prop readOnly="True" type="dateTime" name="timeCreated"/>
                        <prop readOnly="True" type="array<object>" name="virtualMachines">
                          <item type="object">
                            <prop readOnly="True" type="string" name="id"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="sku" required="True">
                        <prop type="integer64" name="capacity"/>
                        <prop type="string" name="name"/>
                        <prop type="string" name="tier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
