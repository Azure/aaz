<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMy0wNC0wMQ=="/>
  <commandGroup name="workloads monitor">
    <command name="show" version="2023-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Name of the SAP monitor resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="monitors_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Workloads/monitors/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="appLocation"/>
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="string" name="innerError"/>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="string" name="logAnalyticsWorkspaceArmId"/>
                    <prop type="object" name="managedResourceGroupConfiguration">
                      <prop type="string" name="name"/>
                    </prop>
                    <prop type="string" name="monitorSubnet"/>
                    <prop readOnly="True" type="string" name="msiArmId"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="routingPreference">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;RouteAll&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="storageAccountArmId"/>
                    <prop type="string" name="zoneRedundancyPreference"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-04-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Name of the SAP monitor resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="monitors_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}">
          <request method="delete">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="OperationStatusResult_read">
                  <prop type="dateTime" name="endTime"/>
                  <prop type="object" name="error" cls="ErrorDetail_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop readOnly="True" type="object" name="info"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                    <prop readOnly="True" type="string" name="target"/>
                  </prop>
                  <prop type="string" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="array<@OperationStatusResult_read>" name="operations">
                    <item type="@OperationStatusResult_read"/>
                  </prop>
                  <prop type="float" name="percentComplete">
                    <format maximum="100.0" minimum="0.0"/>
                  </prop>
                  <prop type="dateTime" name="startTime"/>
                  <prop type="string" name="status" required="True"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2023-04-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Name of the SAP monitor resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="ManagedResourceGroupConfiguration">
        <arg type="string" var="$MonitorParameter.properties.managedResourceGroupConfiguration.name" options="managed-rg-name" group="ManagedResourceGroupConfiguration">
          <help short="Managed resource group name"/>
        </arg>
      </argGroup>
      <argGroup name="MonitorParameter">
        <arg type="object" var="$MonitorParameter.identity" options="identity" group="MonitorParameter">
          <help short="[currently not in use] Managed service identity(user assigned identities)"/>
          <arg type="string" var="$MonitorParameter.identity.type" options="type" required="True">
            <help short="Type of manage identity"/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$MonitorParameter.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="User assigned identities dictionary"/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$MonitorParameter.location" options="location l" required="True" group="MonitorParameter">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$MonitorParameter.tags" options="tags" group="MonitorParameter">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$MonitorParameter.properties.appLocation" options="app-location" group="Properties">
          <help short="The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region."/>
        </arg>
        <arg type="string" var="$MonitorParameter.properties.logAnalyticsWorkspaceArmId" options="log-analytics-workspace-arm-id" group="Properties">
          <help short="The ARM ID of the Log Analytics Workspace that is used for SAP monitoring."/>
        </arg>
        <arg type="string" var="$MonitorParameter.properties.monitorSubnet" options="monitor-subnet" group="Properties">
          <help short="The subnet which the SAP monitor will be deployed in"/>
        </arg>
        <arg type="string" var="$MonitorParameter.properties.routingPreference" options="routing-preference" group="Properties">
          <help short="Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET."/>
          <enum>
            <item name="Default" value="&quot;Default&quot;"/>
            <item name="RouteAll" value="&quot;RouteAll&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$MonitorParameter.properties.zoneRedundancyPreference" options="zone-redundancy-preference" group="Properties">
          <help short="Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy."/>
        </arg>
      </argGroup>
      <operation operationId="monitors_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="MonitorParameter" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$MonitorParameter.identity">
                    <prop type="string" name="type" arg="$MonitorParameter.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$MonitorParameter.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$MonitorParameter.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="appLocation" arg="$MonitorParameter.properties.appLocation"/>
                    <prop type="string" name="logAnalyticsWorkspaceArmId" arg="$MonitorParameter.properties.logAnalyticsWorkspaceArmId"/>
                    <prop type="object" name="managedResourceGroupConfiguration">
                      <prop type="string" name="name" arg="$MonitorParameter.properties.managedResourceGroupConfiguration.name"/>
                    </prop>
                    <prop type="string" name="monitorSubnet" arg="$MonitorParameter.properties.monitorSubnet"/>
                    <prop type="string" name="routingPreference" arg="$MonitorParameter.properties.routingPreference">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;RouteAll&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="zoneRedundancyPreference" arg="$MonitorParameter.properties.zoneRedundancyPreference"/>
                  </prop>
                  <prop type="object" name="tags" arg="$MonitorParameter.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Workloads/monitors/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="appLocation"/>
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="string" name="innerError"/>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="string" name="logAnalyticsWorkspaceArmId"/>
                    <prop type="object" name="managedResourceGroupConfiguration">
                      <prop type="string" name="name"/>
                    </prop>
                    <prop type="string" name="monitorSubnet"/>
                    <prop readOnly="True" type="string" name="msiArmId"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="routingPreference">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;RouteAll&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="storageAccountArmId"/>
                    <prop type="string" name="zoneRedundancyPreference"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-04-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0=/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" idPart="name">
          <help short="Name of the SAP monitor resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="ManagedResourceGroupConfiguration">
        <arg nullable="True" type="string" var="$MonitorParameter.properties.managedResourceGroupConfiguration.name" options="managed-rg-name" hide="True" group="ManagedResourceGroupConfiguration">
          <help short="Managed resource group name"/>
        </arg>
      </argGroup>
      <argGroup name="MonitorParameter">
        <arg nullable="True" type="object" var="$MonitorParameter.identity" options="identity" group="MonitorParameter">
          <help short="[currently not in use] Managed service identity(user assigned identities)"/>
          <arg type="string" var="$MonitorParameter.identity.type" options="type">
            <help short="Type of manage identity"/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$MonitorParameter.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="User assigned identities dictionary"/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$MonitorParameter.tags" options="tags" group="MonitorParameter">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$MonitorParameter.properties.appLocation" options="app-location" hide="True" group="Properties">
          <help short="The SAP monitor resources will be deployed in the SAP monitoring region. The subnet region should be same as the SAP monitoring region."/>
        </arg>
        <arg nullable="True" type="string" var="$MonitorParameter.properties.logAnalyticsWorkspaceArmId" options="log-analytics-workspace-arm-id" hide="True" group="Properties">
          <help short="The ARM ID of the Log Analytics Workspace that is used for SAP monitoring."/>
        </arg>
        <arg nullable="True" type="string" var="$MonitorParameter.properties.monitorSubnet" options="monitor-subnet" hide="True" group="Properties">
          <help short="The subnet which the SAP monitor will be deployed in"/>
        </arg>
        <arg nullable="True" type="string" var="$MonitorParameter.properties.routingPreference" options="routing-preference" hide="True" group="Properties">
          <help short="Sets the routing preference of the SAP monitor. By default only RFC1918 traffic is routed to the customer VNET."/>
          <enum>
            <item name="Default" value="&quot;Default&quot;"/>
            <item name="RouteAll" value="&quot;RouteAll&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$MonitorParameter.properties.zoneRedundancyPreference" options="zone-redundancy-preference" hide="True" group="Properties">
          <help short="Sets the preference for zone redundancy on resources created for the SAP monitor. By default resources will be created which do not support zone redundancy."/>
        </arg>
      </argGroup>
      <operation operationId="monitors_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Monitor_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Workloads/monitors/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="appLocation"/>
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="string" name="innerError"/>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="string" name="logAnalyticsWorkspaceArmId"/>
                    <prop type="object" name="managedResourceGroupConfiguration">
                      <prop type="string" name="name"/>
                    </prop>
                    <prop type="string" name="monitorSubnet"/>
                    <prop readOnly="True" type="string" name="msiArmId"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="routingPreference">
                      <enum>
                        <item value="&quot;Default&quot;"/>
                        <item value="&quot;RouteAll&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="storageAccountArmId"/>
                    <prop type="string" name="zoneRedundancyPreference"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="MonitorParameter" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$MonitorParameter.identity">
                <prop type="string" name="type" arg="$MonitorParameter.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$MonitorParameter.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="appLocation" arg="$MonitorParameter.properties.appLocation"/>
                <prop type="string" name="logAnalyticsWorkspaceArmId" arg="$MonitorParameter.properties.logAnalyticsWorkspaceArmId"/>
                <prop type="object" name="managedResourceGroupConfiguration">
                  <prop type="string" name="name" arg="$MonitorParameter.properties.managedResourceGroupConfiguration.name"/>
                </prop>
                <prop type="string" name="monitorSubnet" arg="$MonitorParameter.properties.monitorSubnet"/>
                <prop type="string" name="routingPreference" arg="$MonitorParameter.properties.routingPreference">
                  <enum>
                    <item value="&quot;Default&quot;"/>
                    <item value="&quot;RouteAll&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="zoneRedundancyPreference" arg="$MonitorParameter.properties.zoneRedundancyPreference"/>
              </prop>
              <prop type="object" name="tags" arg="$MonitorParameter.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="monitors_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Monitor_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
