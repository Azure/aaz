<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{resourceuri}/providers/microsoft.insights/diagnosticsettings/{}" version="2021-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5JbnNpZ2h0cy9kaWFnbm9zdGljU2V0dGluZ3Mve25hbWV9/V/MjAyMS0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="monitor diagnostic-settings">
    <command name="show" version="2021-05-01-preview" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.insights/diagnosticsettings/{}" version="2021-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5JbnNpZ2h0cy9kaWFnbm9zdGljU2V0dGluZ3Mve25hbWV9/V/MjAyMS0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" group="">
          <help short="The name of the diagnostic setting. Required."/>
        </arg>
      </argGroup>
      <argGroup name="Target Resource">
        <arg type="string" var="$Path.resourceUri" options="resource" required="True" group="Target Resource">
          <help short="Name or ID of the target resource."/>
        </arg>
      </argGroup>
      <operation operationId="DiagnosticSettings_Get">
        <http path="/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}">
          <request method="get">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="eventHubAuthorizationRuleId"/>
                    <prop type="string" name="eventHubName"/>
                    <prop type="string" name="logAnalyticsDestinationType"/>
                    <prop type="array<object>" name="logs">
                      <item type="object">
                        <prop type="string" name="category"/>
                        <prop type="string" name="categoryGroup"/>
                        <prop type="boolean" name="enabled" required="True"/>
                        <prop type="@RetentionPolicy_read" name="retentionPolicy"/>
                      </item>
                    </prop>
                    <prop type="string" name="marketplacePartnerId"/>
                    <prop type="array<object>" name="metrics">
                      <item type="object">
                        <prop type="string" name="category"/>
                        <prop type="boolean" name="enabled" required="True"/>
                        <prop type="object" name="retentionPolicy" cls="RetentionPolicy_read">
                          <prop type="integer32" name="days" required="True">
                            <format minimum="0"/>
                          </prop>
                          <prop type="boolean" name="enabled" required="True"/>
                        </prop>
                        <prop type="duration" name="timeGrain"/>
                      </item>
                    </prop>
                    <prop type="string" name="serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId"/>
                    <prop type="string" name="workspaceId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2021-05-01-preview" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.insights/diagnosticsettings/{}" version="2021-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5JbnNpZ2h0cy9kaWFnbm9zdGljU2V0dGluZ3Mve25hbWV9/V/MjAyMS0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" group="">
          <help short="The name of the diagnostic setting. Required."/>
        </arg>
      </argGroup>
      <argGroup name="Target Resource">
        <arg type="string" var="$Path.resourceUri" options="resource" required="True" group="Target Resource">
          <help short="Name or ID of the target resource."/>
        </arg>
      </argGroup>
      <operation operationId="DiagnosticSettings_Delete">
        <http path="/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}">
          <request method="delete">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2021-05-01-preview" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.insights/diagnosticsettings/{}" version="2021-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5JbnNpZ2h0cy9kaWFnbm9zdGljU2V0dGluZ3Mve25hbWV9/V/MjAyMS0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" group="">
          <help short="The name of the diagnostic setting. Required."/>
        </arg>
        <arg type="string" var="$parameters.properties.eventHubAuthorizationRuleId" options="event-hub-rule" group="">
          <help short="Name or ID of the event hub authorization rule."/>
        </arg>
        <arg type="string" var="$parameters.properties.eventHubName" options="event-hub" group="">
          <help short="Name or ID an event hub. If none is specified, the default event hub will be selected."/>
        </arg>
        <arg type="string" var="$parameters.properties.logAnalyticsDestinationType" options="log-analytics-destination-type" group="">
          <help short="A string indicating whether the export to Log Analytics should use the default destination type, i.e. AzureDiagnostics, or use a destination type constructed as follows: <normalized service identity>_<normalized category name>. Possible values are: Dedicated and null (null is default.)"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.logs" options="logs" group="">
          <help short="JSON encoded list of logs settings. Use '@{file}' to load from a file.For more information, visit: https://docs.microsoft.com/rest/api/monitor/diagnosticsettings/createorupdate#logsettings."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.logs[].category" options="category">
              <help short="Name of a Diagnostic Log category for a resource type this setting is applied to. To obtain the list of Diagnostic Log categories for a resource, first perform a GET diagnostic settings operation."/>
            </arg>
            <arg type="string" var="$parameters.properties.logs[].categoryGroup" options="category-group">
              <help short="Name of a Diagnostic Log category group for a resource type this setting is applied to. To obtain the list of Diagnostic Log categories for a resource, first perform a GET diagnostic settings operation."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.logs[].enabled" options="enabled" required="True">
              <help short="a value indicating whether this log is enabled."/>
            </arg>
            <arg type="@RetentionPolicy_create" var="$parameters.properties.logs[].retentionPolicy" options="retention-policy">
              <help short="the retention policy for this log."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.marketplacePartnerId" options="marketplace-partner-id" group="">
          <help short="The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs."/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.metrics" options="metrics" group="">
          <help short="The list of metric settings."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.metrics[].category" options="category">
              <help short="Name of a Diagnostic Metric category for a resource type this setting is applied to. To obtain the list of Diagnostic metric categories for a resource, first perform a GET diagnostic settings operation."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.metrics[].enabled" options="enabled" required="True">
              <help short="a value indicating whether this category is enabled."/>
            </arg>
            <arg type="object" var="$parameters.properties.metrics[].retentionPolicy" options="retention-policy" cls="RetentionPolicy_create">
              <help short="the retention policy for this category."/>
              <arg type="integer32" var="@RetentionPolicy_create.days" options="days" required="True">
                <help short="the number of days for the retention in days. A value of 0 will retain the events indefinitely."/>
                <format minimum="0"/>
              </arg>
              <arg type="boolean" var="@RetentionPolicy_create.enabled" options="enabled" required="True">
                <help short="a value indicating whether the retention policy is enabled."/>
              </arg>
            </arg>
            <arg type="duration" var="$parameters.properties.metrics[].timeGrain" options="time-grain">
              <help short="the timegrain of the metric in ISO8601 format."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.serviceBusRuleId" options="service-bus-rule-id" group="">
          <help short="The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility."/>
        </arg>
        <arg type="string" var="$parameters.properties.storageAccountId" options="storage-account" group="">
          <help short="Name or ID of the storage account to send diagnostic logs to."/>
        </arg>
        <arg type="string" var="$parameters.properties.workspaceId" options="workspace" group="">
          <help short="Name or ID of the Log Analytics workspace to send diagnostic logs to."/>
        </arg>
      </argGroup>
      <argGroup name="Target Resource">
        <arg type="string" var="$Path.resourceUri" options="resource" required="True" group="Target Resource">
          <help short="Name or ID of the target resource."/>
        </arg>
      </argGroup>
      <operation operationId="DiagnosticSettings_CreateOrUpdate">
        <http path="/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}">
          <request method="put">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="eventHubAuthorizationRuleId" arg="$parameters.properties.eventHubAuthorizationRuleId"/>
                    <prop type="string" name="eventHubName" arg="$parameters.properties.eventHubName"/>
                    <prop type="string" name="logAnalyticsDestinationType" arg="$parameters.properties.logAnalyticsDestinationType"/>
                    <prop type="array<object>" name="logs" arg="$parameters.properties.logs">
                      <item type="object">
                        <prop type="string" name="category" arg="$parameters.properties.logs[].category"/>
                        <prop type="string" name="categoryGroup" arg="$parameters.properties.logs[].categoryGroup"/>
                        <prop type="boolean" name="enabled" arg="$parameters.properties.logs[].enabled" required="True"/>
                        <prop type="@RetentionPolicy_create" name="retentionPolicy" arg="$parameters.properties.logs[].retentionPolicy"/>
                      </item>
                    </prop>
                    <prop type="string" name="marketplacePartnerId" arg="$parameters.properties.marketplacePartnerId"/>
                    <prop type="array<object>" name="metrics" arg="$parameters.properties.metrics">
                      <item type="object">
                        <prop type="string" name="category" arg="$parameters.properties.metrics[].category"/>
                        <prop type="boolean" name="enabled" arg="$parameters.properties.metrics[].enabled" required="True"/>
                        <prop type="object" name="retentionPolicy" arg="$parameters.properties.metrics[].retentionPolicy" cls="RetentionPolicy_create">
                          <prop type="integer32" name="days" arg="@RetentionPolicy_create.days" required="True">
                            <format minimum="0"/>
                          </prop>
                          <prop type="boolean" name="enabled" arg="@RetentionPolicy_create.enabled" required="True"/>
                        </prop>
                        <prop type="duration" name="timeGrain" arg="$parameters.properties.metrics[].timeGrain"/>
                      </item>
                    </prop>
                    <prop type="string" name="serviceBusRuleId" arg="$parameters.properties.serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId" arg="$parameters.properties.storageAccountId"/>
                    <prop type="string" name="workspaceId" arg="$parameters.properties.workspaceId"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="eventHubAuthorizationRuleId"/>
                    <prop type="string" name="eventHubName"/>
                    <prop type="string" name="logAnalyticsDestinationType"/>
                    <prop type="array<object>" name="logs">
                      <item type="object">
                        <prop type="string" name="category"/>
                        <prop type="string" name="categoryGroup"/>
                        <prop type="boolean" name="enabled" required="True"/>
                        <prop type="@RetentionPolicy_read" name="retentionPolicy"/>
                      </item>
                    </prop>
                    <prop type="string" name="marketplacePartnerId"/>
                    <prop type="array<object>" name="metrics">
                      <item type="object">
                        <prop type="string" name="category"/>
                        <prop type="boolean" name="enabled" required="True"/>
                        <prop type="object" name="retentionPolicy" cls="RetentionPolicy_read">
                          <prop type="integer32" name="days" required="True">
                            <format minimum="0"/>
                          </prop>
                          <prop type="boolean" name="enabled" required="True"/>
                        </prop>
                        <prop type="duration" name="timeGrain"/>
                      </item>
                    </prop>
                    <prop type="string" name="serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId"/>
                    <prop type="string" name="workspaceId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2021-05-01-preview" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.insights/diagnosticsettings/{}" version="2021-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5JbnNpZ2h0cy9kaWFnbm9zdGljU2V0dGluZ3Mve25hbWV9/V/MjAyMS0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" group="">
          <help short="The name of the diagnostic setting. Required."/>
        </arg>
        <arg type="string" var="$Path.resourceUri" options="resource" required="True" group="">
          <help short="Name or ID of the target resource."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.eventHubAuthorizationRuleId" options="event-hub-rule" group="Properties">
          <help short="The resource Id for the event hub authorization rule."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.eventHubName" options="event-hub" group="Properties">
          <help short="The name of the event hub. If none is specified, the default event hub will be selected."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.logAnalyticsDestinationType" options="log-analytics-destination-type" group="Properties">
          <help short="A string indicating whether the export to Log Analytics should use the default destination type, i.e. AzureDiagnostics, or use a destination type constructed as follows: <normalized service identity>_<normalized category name>. Possible values are: Dedicated and null (null is default.)"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.logs" options="logs" group="Properties">
          <help short="The list of logs settings."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.logs[].category" options="category">
              <help short="Name of a Diagnostic Log category for a resource type this setting is applied to. To obtain the list of Diagnostic Log categories for a resource, first perform a GET diagnostic settings operation."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.logs[].categoryGroup" options="category-group">
              <help short="Name of a Diagnostic Log category group for a resource type this setting is applied to. To obtain the list of Diagnostic Log categories for a resource, first perform a GET diagnostic settings operation."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.logs[].enabled" options="enabled">
              <help short="a value indicating whether this log is enabled."/>
            </arg>
            <arg nullable="True" type="@RetentionPolicy_update" var="$parameters.properties.logs[].retentionPolicy" options="retention-policy">
              <help short="the retention policy for this log."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.marketplacePartnerId" options="marketplace-partner-id" group="Properties">
          <help short="The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic Logs."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$parameters.properties.metrics" options="metrics" group="Properties">
          <help short="The list of metric settings."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.metrics[].category" options="category">
              <help short="Name of a Diagnostic Metric category for a resource type this setting is applied to. To obtain the list of Diagnostic metric categories for a resource, first perform a GET diagnostic settings operation."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.metrics[].enabled" options="enabled">
              <help short="a value indicating whether this category is enabled."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.metrics[].retentionPolicy" options="retention-policy" cls="RetentionPolicy_update">
              <help short="the retention policy for this category."/>
              <arg type="integer32" var="@RetentionPolicy_update.days" options="days">
                <help short="the number of days for the retention in days. A value of 0 will retain the events indefinitely."/>
                <format minimum="0"/>
              </arg>
              <arg type="boolean" var="@RetentionPolicy_update.enabled" options="enabled">
                <help short="a value indicating whether the retention policy is enabled."/>
              </arg>
            </arg>
            <arg nullable="True" type="duration" var="$parameters.properties.metrics[].timeGrain" options="time-grain">
              <help short="the timegrain of the metric in ISO8601 format."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.serviceBusRuleId" options="service-bus-rule-id" group="Properties">
          <help short="The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.storageAccountId" options="storage-account-id" group="Properties">
          <help short="The resource ID of the storage account to which you would like to send Diagnostic Logs."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.workspaceId" options="workspace-id" group="Properties">
          <help short="The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs. Example: /subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2"/>
        </arg>
      </argGroup>
      <operation operationId="DiagnosticSettings_Get">
        <http path="/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}">
          <request method="get">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DiagnosticSettingsResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="eventHubAuthorizationRuleId"/>
                    <prop type="string" name="eventHubName"/>
                    <prop type="string" name="logAnalyticsDestinationType"/>
                    <prop type="array<object>" name="logs">
                      <item type="object">
                        <prop type="string" name="category"/>
                        <prop type="string" name="categoryGroup"/>
                        <prop type="boolean" name="enabled" required="True"/>
                        <prop type="@RetentionPolicy_read" name="retentionPolicy"/>
                      </item>
                    </prop>
                    <prop type="string" name="marketplacePartnerId"/>
                    <prop type="array<object>" name="metrics">
                      <item type="object">
                        <prop type="string" name="category"/>
                        <prop type="boolean" name="enabled" required="True"/>
                        <prop type="object" name="retentionPolicy" cls="RetentionPolicy_read">
                          <prop type="integer32" name="days" required="True">
                            <format minimum="0"/>
                          </prop>
                          <prop type="boolean" name="enabled" required="True"/>
                        </prop>
                        <prop type="duration" name="timeGrain"/>
                      </item>
                    </prop>
                    <prop type="string" name="serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId"/>
                    <prop type="string" name="workspaceId"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="eventHubAuthorizationRuleId" arg="$parameters.properties.eventHubAuthorizationRuleId"/>
                <prop type="string" name="eventHubName" arg="$parameters.properties.eventHubName"/>
                <prop type="string" name="logAnalyticsDestinationType" arg="$parameters.properties.logAnalyticsDestinationType"/>
                <prop type="array<object>" name="logs" arg="$parameters.properties.logs">
                  <item type="object">
                    <prop type="string" name="category" arg="$parameters.properties.logs[].category"/>
                    <prop type="string" name="categoryGroup" arg="$parameters.properties.logs[].categoryGroup"/>
                    <prop type="boolean" name="enabled" arg="$parameters.properties.logs[].enabled" required="True"/>
                    <prop type="@RetentionPolicy_update" name="retentionPolicy" arg="$parameters.properties.logs[].retentionPolicy"/>
                  </item>
                </prop>
                <prop type="string" name="marketplacePartnerId" arg="$parameters.properties.marketplacePartnerId"/>
                <prop type="array<object>" name="metrics" arg="$parameters.properties.metrics">
                  <item type="object">
                    <prop type="string" name="category" arg="$parameters.properties.metrics[].category"/>
                    <prop type="boolean" name="enabled" arg="$parameters.properties.metrics[].enabled" required="True"/>
                    <prop type="object" name="retentionPolicy" arg="$parameters.properties.metrics[].retentionPolicy" cls="RetentionPolicy_update">
                      <prop type="integer32" name="days" arg="@RetentionPolicy_update.days" required="True">
                        <format minimum="0"/>
                      </prop>
                      <prop type="boolean" name="enabled" arg="@RetentionPolicy_update.enabled" required="True"/>
                    </prop>
                    <prop type="duration" name="timeGrain" arg="$parameters.properties.metrics[].timeGrain"/>
                  </item>
                </prop>
                <prop type="string" name="serviceBusRuleId" arg="$parameters.properties.serviceBusRuleId"/>
                <prop type="string" name="storageAccountId" arg="$parameters.properties.storageAccountId"/>
                <prop type="string" name="workspaceId" arg="$parameters.properties.workspaceId"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="DiagnosticSettings_CreateOrUpdate">
        <http path="/{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}">
          <request method="put">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@DiagnosticSettingsResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
