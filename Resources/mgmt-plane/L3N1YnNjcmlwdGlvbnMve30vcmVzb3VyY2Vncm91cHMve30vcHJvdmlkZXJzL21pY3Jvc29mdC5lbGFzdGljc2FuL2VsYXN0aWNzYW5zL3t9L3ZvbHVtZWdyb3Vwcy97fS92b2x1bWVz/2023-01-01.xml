<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}/volumegroups/{}/volumes" version="2023-01-01" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9L3ZvbHVtZWdyb3Vwcy97dm9sdW1lR3JvdXBOYW1lfS92b2x1bWVz/V/MjAyMy0wMS0wMQ=="/>
  <commandGroup name="elastic-san volume">
    <command name="list" version="2023-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elasticsan/elasticsans/{}/volumegroups/{}/volumes" version="2023-01-01" swagger="mgmt-plane/elasticsan/ResourceProviders/Microsoft.ElasticSan/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpY1Nhbi9lbGFzdGljU2Fucy97ZWxhc3RpY1Nhbk5hbWV9L3ZvbHVtZWdyb3Vwcy97dm9sdW1lR3JvdXBOYW1lfS92b2x1bWVz/V/MjAyMy0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.elasticSanName" options="elastic-san-name elastic-san e" required="True" group="" idPart="name">
          <help short="The name of the ElasticSan."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.volumeGroupName" options="volume-group-name volume-group v" required="True" group="" idPart="child_name_1">
          <help short="The name of the VolumeGroup."/>
          <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
        </arg>
      </argGroup>
      <operation operationId="Volumes_ListByVolumeGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ElasticSan/elasticSans/{elasticSanName}/volumegroups/{volumeGroupName}/volumes">
          <request method="get">
            <path>
              <param type="string" name="elasticSanName" arg="$Path.elasticSanName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="24" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="volumeGroupName" arg="$Path.volumeGroupName" required="True">
                <format pattern="^[A-Za-z0-9]+((-|_)[a-z0-9A-Z]+)*$" maxLength="63" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-01-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ElasticSan/elasticSans/{}/volumegroups/{}/volumes/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="object" name="creationData">
                          <prop type="string" name="createSource">
                            <enum>
                              <item value="&quot;Disk&quot;"/>
                              <item value="&quot;DiskRestorePoint&quot;"/>
                              <item value="&quot;DiskSnapshot&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;VolumeSnapshot&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="sourceId"/>
                        </prop>
                        <prop type="object" name="managedBy">
                          <prop type="string" name="resourceId"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Invalid&quot;"/>
                            <item value="&quot;Pending&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer64" name="sizeGiB" required="True"/>
                        <prop readOnly="True" type="object" name="storageTarget">
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Invalid&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Healthy&quot;"/>
                              <item value="&quot;Invalid&quot;"/>
                              <item value="&quot;Running&quot;"/>
                              <item value="&quot;Stopped&quot;"/>
                              <item value="&quot;Stopped (deallocated)&quot;"/>
                              <item value="&quot;Unhealthy&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="string" name="targetIqn"/>
                          <prop readOnly="True" type="string" name="targetPortalHostname"/>
                          <prop readOnly="True" type="integer32" name="targetPortalPort"/>
                        </prop>
                        <prop readOnly="True" type="string" name="volumeId"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
