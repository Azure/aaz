<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/arcsettings/{}/extensions/{}" version="2023-03-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L2FyY1NldHRpbmdzL3thcmNTZXR0aW5nTmFtZX0vZXh0ZW5zaW9ucy97ZXh0ZW5zaW9uTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
  <commandGroup name="stack-hci extension">
    <command name="show" version="2023-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/arcsettings/{}/extensions/{}" version="2023-03-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L2FyY1NldHRpbmdzL3thcmNTZXR0aW5nTmFtZX0vZXh0ZW5zaW9ucy97ZXh0ZW5zaW9uTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.arcSettingName" options="arc-setting-name" required="True" idPart="child_name_1">
          <help short="The name of the proxy resource holding details of HCI ArcSetting information."/>
        </arg>
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
        </arg>
        <arg type="string" var="$Path.extensionName" options="extension-name name n" required="True" idPart="child_name_2">
          <help short="The name of the machine extension."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Extensions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}">
          <request method="get">
            <path>
              <param type="string" name="arcSettingName" arg="$Path.arcSettingName" required="True"/>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="extensionName" arg="$Path.extensionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureStackHCI/clusters/{}/arcSettings/{}/extensions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="aggregateState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;PartiallyConnected&quot;"/>
                        <item value="&quot;PartiallySucceeded&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                        <item value="&quot;UpgradeFailedRollbackSucceeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="extensionParameters">
                      <prop type="boolean" name="autoUpgradeMinorVersion"/>
                      <prop type="boolean" name="enableAutomaticUpgrade"/>
                      <prop type="string" name="forceUpdateTag"/>
                      <prop type="object" name="protectedSettings" secret="True">
                        <prop type="string" name="workspaceKey"/>
                      </prop>
                      <prop type="string" name="publisher"/>
                      <prop type="object" name="settings">
                        <prop type="string" name="workspaceId"/>
                      </prop>
                      <prop type="string" name="type"/>
                      <prop type="string" name="typeHandlerVersion"/>
                    </prop>
                    <prop readOnly="True" type="string" name="managedBy">
                      <enum>
                        <item value="&quot;Azure&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="perNodeExtensionDetails">
                      <item type="object">
                        <prop readOnly="True" type="string" name="extension"/>
                        <prop type="object" name="instanceView">
                          <prop type="string" name="name"/>
                          <prop type="object" name="status">
                            <prop type="string" name="code"/>
                            <prop type="string" name="displayStatus"/>
                            <prop type="string" name="level">
                              <enum>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Info&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="message"/>
                            <prop type="dateTime" name="time"/>
                          </prop>
                          <prop type="string" name="type"/>
                          <prop type="string" name="typeHandlerVersion"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop readOnly="True" type="string" name="state">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                            <item value="&quot;Error&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Moving&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;PartiallyConnected&quot;"/>
                            <item value="&quot;PartiallySucceeded&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="typeHandlerVersion"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;PartiallyConnected&quot;"/>
                        <item value="&quot;PartiallySucceeded&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-03-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/arcsettings/{}/extensions/{}" version="2023-03-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L2FyY1NldHRpbmdzL3thcmNTZXR0aW5nTmFtZX0vZXh0ZW5zaW9ucy97ZXh0ZW5zaW9uTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.arcSettingName" options="arc-setting-name" required="True" idPart="child_name_1">
          <help short="The name of the proxy resource holding details of HCI ArcSetting information."/>
        </arg>
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
        </arg>
        <arg type="string" var="$Path.extensionName" options="extension-name name n" required="True" idPart="child_name_2">
          <help short="The name of the machine extension."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Extensions_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}">
          <request method="delete">
            <path>
              <param type="string" name="arcSettingName" arg="$Path.arcSettingName" required="True"/>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="extensionName" arg="$Path.extensionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/arcsettings/{}/extensions/{}" version="2023-03-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L2FyY1NldHRpbmdzL3thcmNTZXR0aW5nTmFtZX0vZXh0ZW5zaW9ucy97ZXh0ZW5zaW9uTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.arcSettingName" options="arc-setting-name" required="True" idPart="child_name_1">
          <help short="The name of the proxy resource holding details of HCI ArcSetting information."/>
        </arg>
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
        </arg>
        <arg type="string" var="$Path.extensionName" options="extension-name name n" required="True" idPart="child_name_2">
          <help short="The name of the machine extension."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="ExtensionParameters">
        <arg type="boolean" var="$extension.properties.extensionParameters.autoUpgradeMinorVersion" options="auto-upgrade" group="ExtensionParameters">
          <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
        </arg>
        <arg type="boolean" var="$extension.properties.extensionParameters.enableAutomaticUpgrade" options="enable-automatic-upgrade" hide="True" group="ExtensionParameters">
          <help short="Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."/>
        </arg>
        <arg type="string" var="$extension.properties.extensionParameters.forceUpdateTag" options="force-update-tag" group="ExtensionParameters">
          <help short="How the extension handler should be forced to update even if the extension configuration has not changed."/>
        </arg>
        <arg type="object" var="$extension.properties.extensionParameters.protectedSettings" options="protected-settings" group="ExtensionParameters">
          <help short="Protected settings (may contain secrets)."/>
          <arg type="string" var="$extension.properties.extensionParameters.protectedSettings.workspaceKey" options="workspace-key">
            <help short="Workspace Key."/>
          </arg>
        </arg>
        <arg type="string" var="$extension.properties.extensionParameters.publisher" options="publisher" group="ExtensionParameters">
          <help short="The name of the extension handler publisher."/>
        </arg>
        <arg type="object" var="$extension.properties.extensionParameters.settings" options="settings" group="ExtensionParameters">
          <help short="Json formatted public settings for the extension."/>
          <arg type="string" var="$extension.properties.extensionParameters.settings.workspaceId" options="workspace-id">
            <help short="Workspace Id."/>
          </arg>
        </arg>
        <arg type="string" var="$extension.properties.extensionParameters.type" options="type" group="ExtensionParameters">
          <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
        </arg>
        <arg type="string" var="$extension.properties.extensionParameters.typeHandlerVersion" options="type-handler-version" group="ExtensionParameters">
          <help short="Specifies the version of the script handler. Latest version would be used if not specified."/>
        </arg>
      </argGroup>
      <operation operationId="Extensions_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}">
          <request method="put">
            <path>
              <param type="string" name="arcSettingName" arg="$Path.arcSettingName" required="True"/>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="extensionName" arg="$Path.extensionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="extension" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="extensionParameters">
                      <prop type="boolean" name="autoUpgradeMinorVersion" arg="$extension.properties.extensionParameters.autoUpgradeMinorVersion"/>
                      <prop type="boolean" name="enableAutomaticUpgrade" arg="$extension.properties.extensionParameters.enableAutomaticUpgrade"/>
                      <prop type="string" name="forceUpdateTag" arg="$extension.properties.extensionParameters.forceUpdateTag"/>
                      <prop type="object" name="protectedSettings" arg="$extension.properties.extensionParameters.protectedSettings" secret="True">
                        <prop type="string" name="workspaceKey" arg="$extension.properties.extensionParameters.protectedSettings.workspaceKey"/>
                      </prop>
                      <prop type="string" name="publisher" arg="$extension.properties.extensionParameters.publisher"/>
                      <prop type="object" name="settings" arg="$extension.properties.extensionParameters.settings">
                        <prop type="string" name="workspaceId" arg="$extension.properties.extensionParameters.settings.workspaceId"/>
                      </prop>
                      <prop type="string" name="type" arg="$extension.properties.extensionParameters.type"/>
                      <prop type="string" name="typeHandlerVersion" arg="$extension.properties.extensionParameters.typeHandlerVersion"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureStackHCI/clusters/{}/arcSettings/{}/extensions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="aggregateState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;PartiallyConnected&quot;"/>
                        <item value="&quot;PartiallySucceeded&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                        <item value="&quot;UpgradeFailedRollbackSucceeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="extensionParameters">
                      <prop type="boolean" name="autoUpgradeMinorVersion"/>
                      <prop type="boolean" name="enableAutomaticUpgrade"/>
                      <prop type="string" name="forceUpdateTag"/>
                      <prop type="object" name="protectedSettings" secret="True">
                        <prop type="string" name="workspaceKey"/>
                      </prop>
                      <prop type="string" name="publisher"/>
                      <prop type="object" name="settings">
                        <prop type="string" name="workspaceId"/>
                      </prop>
                      <prop type="string" name="type"/>
                      <prop type="string" name="typeHandlerVersion"/>
                    </prop>
                    <prop readOnly="True" type="string" name="managedBy">
                      <enum>
                        <item value="&quot;Azure&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="perNodeExtensionDetails">
                      <item type="object">
                        <prop readOnly="True" type="string" name="extension"/>
                        <prop type="object" name="instanceView">
                          <prop type="string" name="name"/>
                          <prop type="object" name="status">
                            <prop type="string" name="code"/>
                            <prop type="string" name="displayStatus"/>
                            <prop type="string" name="level">
                              <enum>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Info&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="message"/>
                            <prop type="dateTime" name="time"/>
                          </prop>
                          <prop type="string" name="type"/>
                          <prop type="string" name="typeHandlerVersion"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop readOnly="True" type="string" name="state">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                            <item value="&quot;Error&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Moving&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;PartiallyConnected&quot;"/>
                            <item value="&quot;PartiallySucceeded&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="typeHandlerVersion"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;PartiallyConnected&quot;"/>
                        <item value="&quot;PartiallySucceeded&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.azurestackhci/clusters/{}/arcsettings/{}/extensions/{}" version="2023-03-01" swagger="mgmt-plane/azurestackhci/ResourceProviders/Microsoft.AzureStackHCI/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXp1cmVTdGFja0hDSS9jbHVzdGVycy97Y2x1c3Rlck5hbWV9L2FyY1NldHRpbmdzL3thcmNTZXR0aW5nTmFtZX0vZXh0ZW5zaW9ucy97ZXh0ZW5zaW9uTmFtZX0=/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.arcSettingName" options="arc-setting-name" required="True" idPart="child_name_1">
          <help short="The name of the proxy resource holding details of HCI ArcSetting information."/>
        </arg>
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the cluster."/>
        </arg>
        <arg type="string" var="$Path.extensionName" options="extension-name name n" required="True" idPart="child_name_2">
          <help short="The name of the machine extension."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="ExtensionParameters">
        <arg nullable="True" type="boolean" var="$extension.properties.extensionParameters.autoUpgradeMinorVersion" options="auto-upgrade" group="ExtensionParameters">
          <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
        </arg>
        <arg nullable="True" type="boolean" var="$extension.properties.extensionParameters.enableAutomaticUpgrade" options="enable-automatic-upgrade" group="ExtensionParameters">
          <help short="Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."/>
        </arg>
        <arg nullable="True" type="string" var="$extension.properties.extensionParameters.forceUpdateTag" options="force-update-tag" group="ExtensionParameters">
          <help short="How the extension handler should be forced to update even if the extension configuration has not changed."/>
        </arg>
        <arg nullable="True" type="object" var="$extension.properties.extensionParameters.protectedSettings" options="protected-settings" group="ExtensionParameters">
          <help short="Protected settings (may contain secrets)."/>
          <arg nullable="True" type="string" var="$extension.properties.extensionParameters.protectedSettings.workspaceKey" options="workspace-key">
            <help short="Workspace Key."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$extension.properties.extensionParameters.publisher" options="publisher" group="ExtensionParameters">
          <help short="The name of the extension handler publisher."/>
        </arg>
        <arg nullable="True" type="object" var="$extension.properties.extensionParameters.settings" options="settings" group="ExtensionParameters">
          <help short="Json formatted public settings for the extension."/>
          <arg nullable="True" type="string" var="$extension.properties.extensionParameters.settings.workspaceId" options="workspace-id">
            <help short="Workspace Id."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$extension.properties.extensionParameters.type" options="type" group="ExtensionParameters">
          <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
        </arg>
        <arg nullable="True" type="string" var="$extension.properties.extensionParameters.typeHandlerVersion" options="type-handler-version" group="ExtensionParameters">
          <help short="Specifies the version of the script handler. Latest version would be used if not specified."/>
        </arg>
      </argGroup>
      <operation operationId="Extensions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}">
          <request method="get">
            <path>
              <param type="string" name="arcSettingName" arg="$Path.arcSettingName" required="True"/>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="extensionName" arg="$Path.extensionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Extension_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AzureStackHCI/clusters/{}/arcSettings/{}/extensions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="aggregateState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;PartiallyConnected&quot;"/>
                        <item value="&quot;PartiallySucceeded&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                        <item value="&quot;UpgradeFailedRollbackSucceeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="extensionParameters">
                      <prop type="boolean" name="autoUpgradeMinorVersion"/>
                      <prop type="boolean" name="enableAutomaticUpgrade"/>
                      <prop type="string" name="forceUpdateTag"/>
                      <prop type="object" name="protectedSettings" secret="True">
                        <prop type="string" name="workspaceKey"/>
                      </prop>
                      <prop type="string" name="publisher"/>
                      <prop type="object" name="settings">
                        <prop type="string" name="workspaceId"/>
                      </prop>
                      <prop type="string" name="type"/>
                      <prop type="string" name="typeHandlerVersion"/>
                    </prop>
                    <prop readOnly="True" type="string" name="managedBy">
                      <enum>
                        <item value="&quot;Azure&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="perNodeExtensionDetails">
                      <item type="object">
                        <prop readOnly="True" type="string" name="extension"/>
                        <prop type="object" name="instanceView">
                          <prop type="string" name="name"/>
                          <prop type="object" name="status">
                            <prop type="string" name="code"/>
                            <prop type="string" name="displayStatus"/>
                            <prop type="string" name="level">
                              <enum>
                                <item value="&quot;Error&quot;"/>
                                <item value="&quot;Info&quot;"/>
                                <item value="&quot;Warning&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="message"/>
                            <prop type="dateTime" name="time"/>
                          </prop>
                          <prop type="string" name="type"/>
                          <prop type="string" name="typeHandlerVersion"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop readOnly="True" type="string" name="state">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleted&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                            <item value="&quot;Error&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Moving&quot;"/>
                            <item value="&quot;NotSpecified&quot;"/>
                            <item value="&quot;PartiallyConnected&quot;"/>
                            <item value="&quot;PartiallySucceeded&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="typeHandlerVersion"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Connected&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Disconnected&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;PartiallyConnected&quot;"/>
                        <item value="&quot;PartiallySucceeded&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="extension" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="extensionParameters">
                  <prop type="boolean" name="autoUpgradeMinorVersion" arg="$extension.properties.extensionParameters.autoUpgradeMinorVersion"/>
                  <prop type="boolean" name="enableAutomaticUpgrade" arg="$extension.properties.extensionParameters.enableAutomaticUpgrade"/>
                  <prop type="string" name="forceUpdateTag" arg="$extension.properties.extensionParameters.forceUpdateTag"/>
                  <prop type="object" name="protectedSettings" arg="$extension.properties.extensionParameters.protectedSettings" secret="True">
                    <prop type="string" name="workspaceKey" arg="$extension.properties.extensionParameters.protectedSettings.workspaceKey"/>
                  </prop>
                  <prop type="string" name="publisher" arg="$extension.properties.extensionParameters.publisher"/>
                  <prop type="object" name="settings" arg="$extension.properties.extensionParameters.settings">
                    <prop type="string" name="workspaceId" arg="$extension.properties.extensionParameters.settings.workspaceId"/>
                  </prop>
                  <prop type="string" name="type" arg="$extension.properties.extensionParameters.type"/>
                  <prop type="string" name="typeHandlerVersion" arg="$extension.properties.extensionParameters.typeHandlerVersion"/>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Extensions_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}">
          <request method="put">
            <path>
              <param type="string" name="arcSettingName" arg="$Path.arcSettingName" required="True"/>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True"/>
              <param type="string" name="extensionName" arg="$Path.extensionName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Extension_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
