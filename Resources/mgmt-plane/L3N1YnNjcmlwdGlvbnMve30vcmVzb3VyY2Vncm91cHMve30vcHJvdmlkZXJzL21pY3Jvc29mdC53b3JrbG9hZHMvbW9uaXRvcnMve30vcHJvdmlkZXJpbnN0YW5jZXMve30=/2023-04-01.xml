<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}/providerinstances/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0vcHJvdmlkZXJJbnN0YW5jZXMve3Byb3ZpZGVySW5zdGFuY2VOYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
  <commandGroup name="workloads monitor provider-instance">
    <command name="show" version="2023-04-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}/providerinstances/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0vcHJvdmlkZXJJbnN0YW5jZXMve3Byb3ZpZGVySW5zdGFuY2VOYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Name of the SAP monitor resource."/>
        </arg>
        <arg type="string" var="$Path.providerInstanceName" options="provider-instance-name name n" required="True" idPart="child_name_1">
          <help short="Name of the provider instance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ProviderInstances_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}/providerInstances/{providerInstanceName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="providerInstanceName" arg="$Path.providerInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Workloads/monitors/{}/providerInstances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="string" name="innerError"/>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="object" name="providerSettings">
                      <prop type="string" name="providerType" required="True">
                        <enum>
                          <item value="&quot;Db2&quot;"/>
                          <item value="&quot;MsSqlServer&quot;"/>
                          <item value="&quot;PrometheusHaCluster&quot;"/>
                          <item value="&quot;PrometheusOS&quot;"/>
                          <item value="&quot;SapHana&quot;"/>
                          <item value="&quot;SapNetWeaver&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="providerType" value="Db2">
                        <prop type="string" name="dbName"/>
                        <prop type="string" name="dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri"/>
                        <prop type="string" name="dbPort"/>
                        <prop type="string" name="dbUsername"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="MsSqlServer">
                        <prop type="string" name="dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri"/>
                        <prop type="string" name="dbPort"/>
                        <prop type="string" name="dbUsername"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="PrometheusHaCluster">
                        <prop type="string" name="clusterName"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="prometheusUrl"/>
                        <prop type="string" name="sid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="PrometheusOS">
                        <prop type="string" name="prometheusUrl"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="SapHana">
                        <prop type="string" name="dbName"/>
                        <prop type="string" name="dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri"/>
                        <prop type="string" name="dbUsername"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="instanceNumber"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sqlPort"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslHostNameInCertificate"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="SapNetWeaver">
                        <prop type="string" name="sapClientId"/>
                        <prop type="array<string>" name="sapHostFileEntries">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="sapHostname"/>
                        <prop type="string" name="sapInstanceNr"/>
                        <prop type="string" name="sapPassword" secret="True"/>
                        <prop type="string" name="sapPasswordUri"/>
                        <prop type="string" name="sapPortNumber"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sapUsername"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-04-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}/providerinstances/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0vcHJvdmlkZXJJbnN0YW5jZXMve3Byb3ZpZGVySW5zdGFuY2VOYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Name of the SAP monitor resource."/>
        </arg>
        <arg type="string" var="$Path.providerInstanceName" options="provider-instance-name name n" required="True" idPart="child_name_1">
          <help short="Name of the provider instance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ProviderInstances_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}/providerInstances/{providerInstanceName}">
          <request method="delete">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="providerInstanceName" arg="$Path.providerInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="OperationStatusResult_read">
                  <prop type="dateTime" name="endTime"/>
                  <prop type="object" name="error" cls="ErrorDetail_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop readOnly="True" type="object" name="info"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                    <prop readOnly="True" type="string" name="target"/>
                  </prop>
                  <prop type="string" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="array<@OperationStatusResult_read>" name="operations">
                    <item type="@OperationStatusResult_read"/>
                  </prop>
                  <prop type="float" name="percentComplete">
                    <format maximum="100.0" minimum="0.0"/>
                  </prop>
                  <prop type="dateTime" name="startTime"/>
                  <prop type="string" name="status" required="True"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2023-04-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}/providerinstances/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0vcHJvdmlkZXJJbnN0YW5jZXMve3Byb3ZpZGVySW5zdGFuY2VOYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Name of the SAP monitor resource."/>
        </arg>
        <arg type="string" var="$Path.providerInstanceName" options="provider-instance-name name n" required="True" idPart="child_name_1">
          <help short="Name of the provider instance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$providerInstanceParameter.properties.providerSettings" options="provider-settings" group="Properties">
          <help short="Defines the provider specific properties."/>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.Db2" options="db2">
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbName" options="db-name">
              <help short="Gets or sets the db2 database name."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbPassword" options="db-password">
              <help short="Gets or sets the db2 database password."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbPasswordUri" options="db-password-uri">
              <help short="Gets or sets the key vault URI to secret with the database password."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbPort" options="db-port">
              <help short="Gets or sets the db2 database sql port."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbUsername" options="db-username">
              <help short="Gets or sets the db2 database user name."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.hostname" options="hostname">
              <help short="Gets or sets the target virtual machine name."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier"/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the DB2 Database."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer" options="ms-sql-server">
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPassword" options="db-password">
              <help short="Gets or sets the database password."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPasswordUri" options="db-password-uri">
              <help short="Gets or sets the key vault URI to secret with the database password."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPort" options="db-port">
              <help short="Gets or sets the database sql port."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbUsername" options="db-username">
              <help short="Gets or sets the database user name."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.hostname" options="hostname">
              <help short="Gets or sets the SQL server host name."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier"/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the SQL Database."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster" options="prometheus-ha-cluster">
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.clusterName" options="cluster-name">
              <help short="Gets or sets the clusterName."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.hostname" options="hostname">
              <help short="Gets or sets the target machine name."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.prometheusUrl" options="prometheus-url">
              <help short="URL of the Node Exporter endpoint."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sid" options="sid">
              <help short="Gets or sets the cluster sid."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the HA cluster exporter."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS" options="prometheus-os">
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS.prometheusUrl" options="prometheus-url">
              <help short="URL of the Node Exporter endpoint"/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier"/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the prometheus node exporter."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.SapHana" options="sap-hana">
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.dbName" options="db-name">
              <help short="Gets or sets the hana database name."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.dbPassword" options="db-password">
              <help short="Gets or sets the database password."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.dbPasswordUri" options="db-password-uri">
              <help short="Gets or sets the key vault URI to secret with the database password."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.dbUsername" options="db-username">
              <help short="Gets or sets the database user name."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.hostname" options="hostname">
              <help short="Gets or sets the target virtual machine size."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.instanceNumber" options="instance-number">
              <help short="Gets or sets the database instance number."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sqlPort" options="sql-port">
              <help short="Gets or sets the database sql port."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the DB."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sslHostNameInCertificate" options="ssl-host-name-in-certificate">
              <help short="Gets or sets the hostname(s) in the SSL certificate."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver" options="sap-net-weaver">
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapClientId" options="sap-client-id">
              <help short="Gets or sets the SAP Client ID."/>
            </arg>
            <arg type="array<string>" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapHostFileEntries" options="sap-host-file-entries">
              <help short="Gets or sets the list of HostFile Entries"/>
              <item type="string"/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapHostname" options="sap-hostname">
              <help short="Gets or sets the target virtual machine IP Address/FQDN."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapInstanceNr" options="sap-instance-nr">
              <help short="Gets or sets the instance number of SAP NetWeaver."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPassword" options="sap-password">
              <help short="Sets the SAP password."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPasswordUri" options="sap-password-uri">
              <help short="Gets or sets the key vault URI to secret with the SAP password."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPortNumber" options="sap-port-number">
              <help short="Gets or sets the SAP HTTP port number."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier"/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapUsername" options="sap-username">
              <help short="Gets or sets the SAP user name."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the SAP system."/>
            </arg>
            <arg type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="ProviderInstanceParameter">
        <arg type="object" var="$providerInstanceParameter.identity" options="identity" group="ProviderInstanceParameter">
          <help short="[currently not in use] Managed service identity(user assigned identities)"/>
          <arg type="string" var="$providerInstanceParameter.identity.type" options="type" required="True">
            <help short="Type of manage identity"/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$providerInstanceParameter.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="User assigned identities dictionary"/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ProviderInstances_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}/providerInstances/{providerInstanceName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="providerInstanceName" arg="$Path.providerInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="providerInstanceParameter" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$providerInstanceParameter.identity">
                    <prop type="string" name="type" arg="$providerInstanceParameter.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$providerInstanceParameter.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="providerSettings" arg="$providerInstanceParameter.properties.providerSettings">
                      <prop type="string" name="providerType" required="True">
                        <enum>
                          <item arg="$providerInstanceParameter.properties.providerSettings.Db2" value="&quot;Db2&quot;"/>
                          <item arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer" value="&quot;MsSqlServer&quot;"/>
                          <item arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster" value="&quot;PrometheusHaCluster&quot;"/>
                          <item arg="$providerInstanceParameter.properties.providerSettings.PrometheusOS" value="&quot;PrometheusOS&quot;"/>
                          <item arg="$providerInstanceParameter.properties.providerSettings.SapHana" value="&quot;SapHana&quot;"/>
                          <item arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver" value="&quot;SapNetWeaver&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="providerType" value="Db2">
                        <prop type="string" name="dbName" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbName"/>
                        <prop type="string" name="dbPassword" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbPasswordUri"/>
                        <prop type="string" name="dbPort" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbPort"/>
                        <prop type="string" name="dbUsername" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbUsername"/>
                        <prop type="string" name="hostname" arg="$providerInstanceParameter.properties.providerSettings.Db2.hostname"/>
                        <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.Db2.sapSid"/>
                        <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.Db2.sslCertificateUri"/>
                        <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.Db2.sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="MsSqlServer">
                        <prop type="string" name="dbPassword" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPasswordUri"/>
                        <prop type="string" name="dbPort" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPort"/>
                        <prop type="string" name="dbUsername" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbUsername"/>
                        <prop type="string" name="hostname" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.hostname"/>
                        <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sapSid"/>
                        <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sslCertificateUri"/>
                        <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="PrometheusHaCluster">
                        <prop type="string" name="clusterName" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.clusterName"/>
                        <prop type="string" name="hostname" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.hostname"/>
                        <prop type="string" name="prometheusUrl" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.prometheusUrl"/>
                        <prop type="string" name="sid" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sid"/>
                        <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sslCertificateUri"/>
                        <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="PrometheusOS">
                        <prop type="string" name="prometheusUrl" arg="$providerInstanceParameter.properties.providerSettings.PrometheusOS.prometheusUrl"/>
                        <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sapSid"/>
                        <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sslCertificateUri"/>
                        <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="SapHana">
                        <prop type="string" name="dbName" arg="$providerInstanceParameter.properties.providerSettings.SapHana.dbName"/>
                        <prop type="string" name="dbPassword" arg="$providerInstanceParameter.properties.providerSettings.SapHana.dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri" arg="$providerInstanceParameter.properties.providerSettings.SapHana.dbPasswordUri"/>
                        <prop type="string" name="dbUsername" arg="$providerInstanceParameter.properties.providerSettings.SapHana.dbUsername"/>
                        <prop type="string" name="hostname" arg="$providerInstanceParameter.properties.providerSettings.SapHana.hostname"/>
                        <prop type="string" name="instanceNumber" arg="$providerInstanceParameter.properties.providerSettings.SapHana.instanceNumber"/>
                        <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sapSid"/>
                        <prop type="string" name="sqlPort" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sqlPort"/>
                        <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sslCertificateUri"/>
                        <prop type="string" name="sslHostNameInCertificate" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sslHostNameInCertificate"/>
                        <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="SapNetWeaver">
                        <prop type="string" name="sapClientId" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapClientId"/>
                        <prop type="array<string>" name="sapHostFileEntries" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapHostFileEntries">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="sapHostname" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapHostname"/>
                        <prop type="string" name="sapInstanceNr" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapInstanceNr"/>
                        <prop type="string" name="sapPassword" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPassword" secret="True"/>
                        <prop type="string" name="sapPasswordUri" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPasswordUri"/>
                        <prop type="string" name="sapPortNumber" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPortNumber"/>
                        <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapSid"/>
                        <prop type="string" name="sapUsername" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapUsername"/>
                        <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sslCertificateUri"/>
                        <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Workloads/monitors/{}/providerInstances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="string" name="innerError"/>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="object" name="providerSettings">
                      <prop type="string" name="providerType" required="True">
                        <enum>
                          <item value="&quot;Db2&quot;"/>
                          <item value="&quot;MsSqlServer&quot;"/>
                          <item value="&quot;PrometheusHaCluster&quot;"/>
                          <item value="&quot;PrometheusOS&quot;"/>
                          <item value="&quot;SapHana&quot;"/>
                          <item value="&quot;SapNetWeaver&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="providerType" value="Db2">
                        <prop type="string" name="dbName"/>
                        <prop type="string" name="dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri"/>
                        <prop type="string" name="dbPort"/>
                        <prop type="string" name="dbUsername"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="MsSqlServer">
                        <prop type="string" name="dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri"/>
                        <prop type="string" name="dbPort"/>
                        <prop type="string" name="dbUsername"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="PrometheusHaCluster">
                        <prop type="string" name="clusterName"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="prometheusUrl"/>
                        <prop type="string" name="sid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="PrometheusOS">
                        <prop type="string" name="prometheusUrl"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="SapHana">
                        <prop type="string" name="dbName"/>
                        <prop type="string" name="dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri"/>
                        <prop type="string" name="dbUsername"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="instanceNumber"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sqlPort"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslHostNameInCertificate"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="SapNetWeaver">
                        <prop type="string" name="sapClientId"/>
                        <prop type="array<string>" name="sapHostFileEntries">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="sapHostname"/>
                        <prop type="string" name="sapInstanceNr"/>
                        <prop type="string" name="sapPassword" secret="True"/>
                        <prop type="string" name="sapPasswordUri"/>
                        <prop type="string" name="sapPortNumber"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sapUsername"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-04-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/monitors/{}/providerinstances/{}" version="2023-04-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL21vbml0b3JzL3ttb25pdG9yTmFtZX0vcHJvdmlkZXJJbnN0YW5jZXMve3Byb3ZpZGVySW5zdGFuY2VOYW1lfQ==/V/MjAyMy0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Name of the SAP monitor resource."/>
        </arg>
        <arg type="string" var="$Path.providerInstanceName" options="provider-instance-name name n" required="True" idPart="child_name_1">
          <help short="Name of the provider instance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$providerInstanceParameter.properties.providerSettings" options="provider-settings" group="Properties">
          <help short="Defines the provider specific properties."/>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.Db2" options="db2">
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbName" options="db-name">
              <help short="Gets or sets the db2 database name."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbPassword" options="db-password">
              <help short="Gets or sets the db2 database password."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbPasswordUri" options="db-password-uri">
              <help short="Gets or sets the key vault URI to secret with the database password."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbPort" options="db-port">
              <help short="Gets or sets the db2 database sql port."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.dbUsername" options="db-username">
              <help short="Gets or sets the db2 database user name."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.hostname" options="hostname">
              <help short="Gets or sets the target virtual machine name."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier"/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the DB2 Database."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.Db2.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer" options="ms-sql-server">
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPassword" options="db-password">
              <help short="Gets or sets the database password."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPasswordUri" options="db-password-uri">
              <help short="Gets or sets the key vault URI to secret with the database password."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPort" options="db-port">
              <help short="Gets or sets the database sql port."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbUsername" options="db-username">
              <help short="Gets or sets the database user name."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.hostname" options="hostname">
              <help short="Gets or sets the SQL server host name."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier"/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the SQL Database."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster" options="prometheus-ha-cluster">
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.clusterName" options="cluster-name">
              <help short="Gets or sets the clusterName."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.hostname" options="hostname">
              <help short="Gets or sets the target machine name."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.prometheusUrl" options="prometheus-url">
              <help short="URL of the Node Exporter endpoint."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sid" options="sid">
              <help short="Gets or sets the cluster sid."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the HA cluster exporter."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS" options="prometheus-os">
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS.prometheusUrl" options="prometheus-url">
              <help short="URL of the Node Exporter endpoint"/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier"/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the prometheus node exporter."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.SapHana" options="sap-hana">
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.dbName" options="db-name">
              <help short="Gets or sets the hana database name."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.dbPassword" options="db-password">
              <help short="Gets or sets the database password."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.dbPasswordUri" options="db-password-uri">
              <help short="Gets or sets the key vault URI to secret with the database password."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.dbUsername" options="db-username">
              <help short="Gets or sets the database user name."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.hostname" options="hostname">
              <help short="Gets or sets the target virtual machine size."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.instanceNumber" options="instance-number">
              <help short="Gets or sets the database instance number."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sqlPort" options="sql-port">
              <help short="Gets or sets the database sql port."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the DB."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sslHostNameInCertificate" options="ssl-host-name-in-certificate">
              <help short="Gets or sets the hostname(s) in the SSL certificate."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapHana.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver" options="sap-net-weaver">
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapClientId" options="sap-client-id">
              <help short="Gets or sets the SAP Client ID."/>
            </arg>
            <arg nullable="True" type="array<string>" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapHostFileEntries" options="sap-host-file-entries">
              <help short="Gets or sets the list of HostFile Entries"/>
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapHostname" options="sap-hostname">
              <help short="Gets or sets the target virtual machine IP Address/FQDN."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapInstanceNr" options="sap-instance-nr">
              <help short="Gets or sets the instance number of SAP NetWeaver."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPassword" options="sap-password">
              <help short="Sets the SAP password."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPasswordUri" options="sap-password-uri">
              <help short="Gets or sets the key vault URI to secret with the SAP password."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPortNumber" options="sap-port-number">
              <help short="Gets or sets the SAP HTTP port number."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapSid" options="sap-sid">
              <help short="Gets or sets the SAP System Identifier"/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapUsername" options="sap-username">
              <help short="Gets or sets the SAP user name."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sslCertificateUri" options="ssl-certificate-uri">
              <help short="Gets or sets the blob URI to SSL certificate for the SAP system."/>
            </arg>
            <arg nullable="True" type="string" var="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sslPreference" options="ssl-preference">
              <help short="Gets or sets certificate preference if secure communication is enabled."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="RootCertificate" value="&quot;RootCertificate&quot;"/>
                <item name="ServerCertificate" value="&quot;ServerCertificate&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="ProviderInstanceParameter">
        <arg nullable="True" type="object" var="$providerInstanceParameter.identity" options="identity" group="ProviderInstanceParameter">
          <help short="[currently not in use] Managed service identity(user assigned identities)"/>
          <arg type="string" var="$providerInstanceParameter.identity.type" options="type">
            <help short="Type of manage identity"/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$providerInstanceParameter.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="User assigned identities dictionary"/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ProviderInstances_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}/providerInstances/{providerInstanceName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="providerInstanceName" arg="$Path.providerInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ProviderInstance_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Workloads/monitors/{}/providerInstances/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="string" name="innerError"/>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="object" name="providerSettings">
                      <prop type="string" name="providerType" required="True">
                        <enum>
                          <item value="&quot;Db2&quot;"/>
                          <item value="&quot;MsSqlServer&quot;"/>
                          <item value="&quot;PrometheusHaCluster&quot;"/>
                          <item value="&quot;PrometheusOS&quot;"/>
                          <item value="&quot;SapHana&quot;"/>
                          <item value="&quot;SapNetWeaver&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="providerType" value="Db2">
                        <prop type="string" name="dbName"/>
                        <prop type="string" name="dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri"/>
                        <prop type="string" name="dbPort"/>
                        <prop type="string" name="dbUsername"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="MsSqlServer">
                        <prop type="string" name="dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri"/>
                        <prop type="string" name="dbPort"/>
                        <prop type="string" name="dbUsername"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="PrometheusHaCluster">
                        <prop type="string" name="clusterName"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="prometheusUrl"/>
                        <prop type="string" name="sid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="PrometheusOS">
                        <prop type="string" name="prometheusUrl"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="SapHana">
                        <prop type="string" name="dbName"/>
                        <prop type="string" name="dbPassword" secret="True"/>
                        <prop type="string" name="dbPasswordUri"/>
                        <prop type="string" name="dbUsername"/>
                        <prop type="string" name="hostname"/>
                        <prop type="string" name="instanceNumber"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sqlPort"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslHostNameInCertificate"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                      <discriminator property="providerType" value="SapNetWeaver">
                        <prop type="string" name="sapClientId"/>
                        <prop type="array<string>" name="sapHostFileEntries">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="sapHostname"/>
                        <prop type="string" name="sapInstanceNr"/>
                        <prop type="string" name="sapPassword" secret="True"/>
                        <prop type="string" name="sapPasswordUri"/>
                        <prop type="string" name="sapPortNumber"/>
                        <prop type="string" name="sapSid"/>
                        <prop type="string" name="sapUsername"/>
                        <prop type="string" name="sslCertificateUri"/>
                        <prop type="string" name="sslPreference">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;RootCertificate&quot;"/>
                            <item value="&quot;ServerCertificate&quot;"/>
                          </enum>
                        </prop>
                      </discriminator>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="providerInstanceParameter" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$providerInstanceParameter.identity">
                <prop type="string" name="type" arg="$providerInstanceParameter.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$providerInstanceParameter.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="providerSettings" arg="$providerInstanceParameter.properties.providerSettings">
                  <discriminator property="providerType" value="Db2">
                    <prop type="string" name="dbName" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbName"/>
                    <prop type="string" name="dbPassword" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbPassword" secret="True"/>
                    <prop type="string" name="dbPasswordUri" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbPasswordUri"/>
                    <prop type="string" name="dbPort" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbPort"/>
                    <prop type="string" name="dbUsername" arg="$providerInstanceParameter.properties.providerSettings.Db2.dbUsername"/>
                    <prop type="string" name="hostname" arg="$providerInstanceParameter.properties.providerSettings.Db2.hostname"/>
                    <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.Db2.sapSid"/>
                    <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.Db2.sslCertificateUri"/>
                    <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.Db2.sslPreference">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;RootCertificate&quot;"/>
                        <item value="&quot;ServerCertificate&quot;"/>
                      </enum>
                    </prop>
                  </discriminator>
                  <discriminator property="providerType" value="MsSqlServer">
                    <prop type="string" name="dbPassword" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPassword" secret="True"/>
                    <prop type="string" name="dbPasswordUri" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPasswordUri"/>
                    <prop type="string" name="dbPort" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbPort"/>
                    <prop type="string" name="dbUsername" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.dbUsername"/>
                    <prop type="string" name="hostname" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.hostname"/>
                    <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sapSid"/>
                    <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sslCertificateUri"/>
                    <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.MsSqlServer.sslPreference">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;RootCertificate&quot;"/>
                        <item value="&quot;ServerCertificate&quot;"/>
                      </enum>
                    </prop>
                  </discriminator>
                  <discriminator property="providerType" value="PrometheusHaCluster">
                    <prop type="string" name="clusterName" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.clusterName"/>
                    <prop type="string" name="hostname" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.hostname"/>
                    <prop type="string" name="prometheusUrl" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.prometheusUrl"/>
                    <prop type="string" name="sid" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sid"/>
                    <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sslCertificateUri"/>
                    <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.PrometheusHaCluster.sslPreference">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;RootCertificate&quot;"/>
                        <item value="&quot;ServerCertificate&quot;"/>
                      </enum>
                    </prop>
                  </discriminator>
                  <discriminator property="providerType" value="PrometheusOS">
                    <prop type="string" name="prometheusUrl" arg="$providerInstanceParameter.properties.providerSettings.PrometheusOS.prometheusUrl"/>
                    <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sapSid"/>
                    <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sslCertificateUri"/>
                    <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.PrometheusOS.sslPreference">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;RootCertificate&quot;"/>
                        <item value="&quot;ServerCertificate&quot;"/>
                      </enum>
                    </prop>
                  </discriminator>
                  <discriminator property="providerType" value="SapHana">
                    <prop type="string" name="dbName" arg="$providerInstanceParameter.properties.providerSettings.SapHana.dbName"/>
                    <prop type="string" name="dbPassword" arg="$providerInstanceParameter.properties.providerSettings.SapHana.dbPassword" secret="True"/>
                    <prop type="string" name="dbPasswordUri" arg="$providerInstanceParameter.properties.providerSettings.SapHana.dbPasswordUri"/>
                    <prop type="string" name="dbUsername" arg="$providerInstanceParameter.properties.providerSettings.SapHana.dbUsername"/>
                    <prop type="string" name="hostname" arg="$providerInstanceParameter.properties.providerSettings.SapHana.hostname"/>
                    <prop type="string" name="instanceNumber" arg="$providerInstanceParameter.properties.providerSettings.SapHana.instanceNumber"/>
                    <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sapSid"/>
                    <prop type="string" name="sqlPort" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sqlPort"/>
                    <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sslCertificateUri"/>
                    <prop type="string" name="sslHostNameInCertificate" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sslHostNameInCertificate"/>
                    <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.SapHana.sslPreference">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;RootCertificate&quot;"/>
                        <item value="&quot;ServerCertificate&quot;"/>
                      </enum>
                    </prop>
                  </discriminator>
                  <discriminator property="providerType" value="SapNetWeaver">
                    <prop type="string" name="sapClientId" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapClientId"/>
                    <prop type="array<string>" name="sapHostFileEntries" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapHostFileEntries">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="sapHostname" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapHostname"/>
                    <prop type="string" name="sapInstanceNr" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapInstanceNr"/>
                    <prop type="string" name="sapPassword" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPassword" secret="True"/>
                    <prop type="string" name="sapPasswordUri" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPasswordUri"/>
                    <prop type="string" name="sapPortNumber" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapPortNumber"/>
                    <prop type="string" name="sapSid" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapSid"/>
                    <prop type="string" name="sapUsername" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sapUsername"/>
                    <prop type="string" name="sslCertificateUri" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sslCertificateUri"/>
                    <prop type="string" name="sslPreference" arg="$providerInstanceParameter.properties.providerSettings.SapNetWeaver.sslPreference">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;RootCertificate&quot;"/>
                        <item value="&quot;ServerCertificate&quot;"/>
                      </enum>
                    </prop>
                  </discriminator>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ProviderInstances_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/monitors/{monitorName}/providerInstances/{providerInstanceName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="providerInstanceName" arg="$Path.providerInstanceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ProviderInstance_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
