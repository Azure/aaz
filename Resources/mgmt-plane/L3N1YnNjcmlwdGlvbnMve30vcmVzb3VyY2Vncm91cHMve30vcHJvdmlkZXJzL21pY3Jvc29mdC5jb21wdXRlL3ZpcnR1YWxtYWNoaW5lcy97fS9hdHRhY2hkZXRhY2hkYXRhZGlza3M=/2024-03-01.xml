<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}/attachdetachdatadisks" version="2024-03-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0vYXR0YWNoRGV0YWNoRGF0YURpc2tz/V/MjAyNC0wMy0wMQ=="/>
  <commandGroup name="vm disk">
    <command name="attach-detach-data-disk" version="2024-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}/attachdetachdatadisks" version="2024-03-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0vYXR0YWNoRGV0YWNoRGF0YURpc2tz/V/MjAyNC0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmName" options="vm-name" required="True" idPart="name">
          <help short="The name of the virtual machine."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="array<object>" var="$parameters.dataDisksToAttach" options="data-disks-to-attach" group="Parameters">
          <help short="The list of managed data disks to be attached."/>
          <item type="object">
            <arg type="string" var="$parameters.dataDisksToAttach[].caching" options="caching" group="">
              <help short="Specify the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**"/>
              <enum>
                <item name="None" value="&quot;None&quot;"/>
                <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.dataDisksToAttach[].deleteOption" options="delete-option" group="">
              <help short="Specify whether data disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the data disk is deleted when VM is deleted. **Detach.** If this value is used, the data disk is retained after VM is deleted. The default value is set to **Detach**."/>
              <enum>
                <item name="Delete" value="&quot;Delete&quot;"/>
                <item name="Detach" value="&quot;Detach&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$parameters.dataDisksToAttach[].diskEncryptionSet" options="disk-encryption-set" group="">
              <help short="Specify the customer managed disk encryption set resource id for the managed disk."/>
              <arg type="string" var="$parameters.dataDisksToAttach[].diskEncryptionSet.id" options="id">
                <help short="Resource Id"/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.dataDisksToAttach[].diskId" options="disk-id" required="True">
              <help short="ID of the managed data disk."/>
            </arg>
            <arg type="integer32" var="$parameters.dataDisksToAttach[].lun" options="lun">
              <help short="The logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM. If not specified, lun would be auto assigned."/>
            </arg>
            <arg type="boolean" var="$parameters.dataDisksToAttach[].writeAcceleratorEnabled" options="write-accelerator-enabled" group="">
              <help short="Specify whether writeAccelerator should be enabled or disabled on the disk."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.dataDisksToDetach" options="data-disks-to-detach" group="Parameters">
          <help short="The list of managed data disks to be detached."/>
          <item type="object">
            <arg type="string" var="$parameters.dataDisksToDetach[].detachOption" options="detach-option">
              <help short="Supported options available for Detach of a disk from a VM. Refer to DetachOption object reference for more details."/>
              <enum>
                <item name="ForceDetach" value="&quot;ForceDetach&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.dataDisksToDetach[].diskId" options="disk-id" required="True">
              <help short="ID of the managed data disk."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_AttachDetachDataDisks">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/attachDetachDataDisks">
          <request method="post">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="array<object>" name="dataDisksToAttach" arg="$parameters.dataDisksToAttach" identifiers="diskId">
                    <item type="object">
                      <prop type="string" name="caching" arg="$parameters.dataDisksToAttach[].caching">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;ReadOnly&quot;"/>
                          <item value="&quot;ReadWrite&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="deleteOption" arg="$parameters.dataDisksToAttach[].deleteOption">
                        <enum>
                          <item value="&quot;Delete&quot;"/>
                          <item value="&quot;Detach&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="diskEncryptionSet" arg="$parameters.dataDisksToAttach[].diskEncryptionSet">
                        <prop type="string" name="id" arg="$parameters.dataDisksToAttach[].diskEncryptionSet.id"/>
                      </prop>
                      <prop type="string" name="diskId" arg="$parameters.dataDisksToAttach[].diskId" required="True"/>
                      <prop type="integer32" name="lun" arg="$parameters.dataDisksToAttach[].lun"/>
                      <prop type="boolean" name="writeAcceleratorEnabled" arg="$parameters.dataDisksToAttach[].writeAcceleratorEnabled"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="dataDisksToDetach" arg="$parameters.dataDisksToDetach" identifiers="diskId">
                    <item type="object">
                      <prop type="string" name="detachOption" arg="$parameters.dataDisksToDetach[].detachOption">
                        <enum>
                          <item value="&quot;ForceDetach&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="diskId" arg="$parameters.dataDisksToDetach[].diskId" required="True"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="dataDisks" identifiers="lun">
                    <item type="object">
                      <prop type="string" name="caching">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;ReadOnly&quot;"/>
                          <item value="&quot;ReadWrite&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="createOption" required="True">
                        <enum>
                          <item value="&quot;Attach&quot;"/>
                          <item value="&quot;Copy&quot;"/>
                          <item value="&quot;Empty&quot;"/>
                          <item value="&quot;FromImage&quot;"/>
                          <item value="&quot;Restore&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="deleteOption">
                        <enum>
                          <item value="&quot;Delete&quot;"/>
                          <item value="&quot;Detach&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="detachOption">
                        <enum>
                          <item value="&quot;ForceDetach&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="integer64" name="diskIOPSReadWrite"/>
                      <prop readOnly="True" type="integer64" name="diskMBpsReadWrite"/>
                      <prop type="integer32" name="diskSizeGB"/>
                      <prop type="@VirtualHardDisk_read" name="image"/>
                      <prop type="integer32" name="lun" required="True"/>
                      <prop type="@ManagedDiskParameters_read" name="managedDisk"/>
                      <prop type="string" name="name"/>
                      <prop type="object" name="sourceResource">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="boolean" name="toBeDetached"/>
                      <prop type="@VirtualHardDisk_read" name="vhd"/>
                      <prop type="boolean" name="writeAcceleratorEnabled"/>
                    </item>
                  </prop>
                  <prop type="string" name="diskControllerType">
                    <enum>
                      <item value="&quot;NVMe&quot;"/>
                      <item value="&quot;SCSI&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="imageReference">
                    <prop type="string" name="communityGalleryImageId"/>
                    <prop readOnly="True" type="string" name="exactVersion"/>
                    <prop type="string" name="id"/>
                    <prop type="string" name="offer"/>
                    <prop type="string" name="publisher"/>
                    <prop type="string" name="sharedGalleryImageId"/>
                    <prop type="string" name="sku"/>
                    <prop type="string" name="version"/>
                  </prop>
                  <prop type="object" name="osDisk">
                    <prop type="string" name="caching">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;ReadOnly&quot;"/>
                        <item value="&quot;ReadWrite&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="createOption" required="True">
                      <enum>
                        <item value="&quot;Attach&quot;"/>
                        <item value="&quot;Copy&quot;"/>
                        <item value="&quot;Empty&quot;"/>
                        <item value="&quot;FromImage&quot;"/>
                        <item value="&quot;Restore&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deleteOption">
                      <enum>
                        <item value="&quot;Delete&quot;"/>
                        <item value="&quot;Detach&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="diffDiskSettings">
                      <prop type="string" name="option">
                        <enum>
                          <item value="&quot;Local&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="placement">
                        <enum>
                          <item value="&quot;CacheDisk&quot;"/>
                          <item value="&quot;NvmeDisk&quot;"/>
                          <item value="&quot;ResourceDisk&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="diskSizeGB"/>
                    <prop type="object" name="encryptionSettings">
                      <prop type="object" name="diskEncryptionKey">
                        <prop type="string" name="secretUrl" required="True"/>
                        <prop type="object" name="sourceVault" required="True" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop type="boolean" name="enabled"/>
                      <prop type="object" name="keyEncryptionKey">
                        <prop type="string" name="keyUrl" required="True"/>
                        <prop type="@SubResource_read" name="sourceVault" required="True"/>
                      </prop>
                    </prop>
                    <prop type="@VirtualHardDisk_read" name="image"/>
                    <prop type="object" name="managedDisk" cls="ManagedDiskParameters_read">
                      <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="string" name="id"/>
                      <prop type="object" name="securityProfile">
                        <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                        <prop type="string" name="securityEncryptionType">
                          <enum>
                            <item value="&quot;DiskWithVMGuestState&quot;"/>
                            <item value="&quot;NonPersistedTPM&quot;"/>
                            <item value="&quot;VMGuestStateOnly&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="storageAccountType">
                        <enum>
                          <item value="&quot;PremiumV2_LRS&quot;"/>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Premium_ZRS&quot;"/>
                          <item value="&quot;StandardSSD_LRS&quot;"/>
                          <item value="&quot;StandardSSD_ZRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;UltraSSD_LRS&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="string" name="osType">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="vhd" cls="VirtualHardDisk_read">
                      <prop type="string" name="uri"/>
                    </prop>
                    <prop type="boolean" name="writeAcceleratorEnabled"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
