<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.consumption/budgets/{}" version="2018-01-31" swagger="mgmt-plane/consumption/ResourceProviders/Microsoft.Consumption/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uc3VtcHRpb24vYnVkZ2V0cy97YnVkZ2V0TmFtZX0=/V/MjAxOC0wMS0zMQ=="/>
  <commandGroup name="consumption budget">
    <command name="create-with-rg" version="2018-01-31" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.consumption/budgets/{}" version="2018-01-31" swagger="mgmt-plane/consumption/ResourceProviders/Microsoft.Consumption/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uc3VtcHRpb24vYnVkZ2V0cy97YnVkZ2V0TmFtZX0=/V/MjAxOC0wMS0zMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.budgetName" options="budget-name name n" required="True" idPart="name">
          <help short="Budget Name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="string" var="$parameters.eTag" options="e-tag" group="Parameters">
          <help short="eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="float64" var="$parameters.properties.amount" options="amount" group="Properties">
          <help short="The total amount of cost to track with the budget"/>
        </arg>
        <arg type="string" var="$parameters.properties.category" options="category" group="Properties">
          <help short="The category of the budget, whether the budget tracks cost or usage."/>
          <enum>
            <item name="Cost" value="&quot;Cost&quot;"/>
            <item name="Usage" value="&quot;Usage&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.properties.filters" options="filters" group="Properties">
          <help short="May be used to filter budgets by resource group, resource, or meter."/>
          <arg type="array<string>" var="$parameters.properties.filters.meters" options="meters">
            <help short="The list of filters on meters, mandatory for budgets of usage category. "/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$parameters.properties.filters.resourceGroups" options="resource-groups">
            <help short="The list of filters on resource groups, allowed at subscription level only."/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$parameters.properties.filters.resources" options="resources">
            <help short="The list of filters on resources."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.notifications" options="notifications" group="Properties">
          <help short="Dictionary of notifications associated with the budget. Budget can have up to five notifications."/>
          <additionalProp>
            <item type="object">
              <arg type="array<string>" var="$parameters.properties.notifications{}.contactEmails" options="contact-emails" required="True">
                <help short="Email addresses to send the budget notification to when the threshold is exceeded."/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="$parameters.properties.notifications{}.contactGroups" options="contact-groups">
                <help short="Action groups to send the budget notification to when the threshold is exceeded."/>
                <item type="string"/>
              </arg>
              <arg type="array<string>" var="$parameters.properties.notifications{}.contactRoles" options="contact-roles">
                <help short="Contact roles to send the budget notification to when the threshold is exceeded."/>
                <item type="string"/>
              </arg>
              <arg type="boolean" var="$parameters.properties.notifications{}.enabled" options="enabled" required="True">
                <help short="The notification is enabled or not."/>
              </arg>
              <arg type="string" var="$parameters.properties.notifications{}.operator" options="operator" required="True">
                <help short="The comparison operator."/>
                <enum>
                  <item name="EqualTo" value="&quot;EqualTo&quot;"/>
                  <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                  <item name="GreaterThanOrEqualTo" value="&quot;GreaterThanOrEqualTo&quot;"/>
                </enum>
              </arg>
              <arg type="float64" var="$parameters.properties.notifications{}.threshold" options="threshold" required="True">
                <help short="Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."/>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$parameters.properties.timeGrain" options="time-grain" group="Properties">
          <help short="The time covered by a budget. Tracking of the amount will be reset based on the time grain."/>
          <enum>
            <item name="Annually" value="&quot;Annually&quot;"/>
            <item name="Monthly" value="&quot;Monthly&quot;"/>
            <item name="Quarterly" value="&quot;Quarterly&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.properties.timePeriod" options="time-period" group="Properties">
          <help short="Has start and end date of the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than three months. Past start date should  be selected within the timegrain period. There are no restrictions on the end date."/>
          <arg type="dateTime" var="$parameters.properties.timePeriod.endDate" options="end-date">
            <help short="The end date for the budget. If not provided, we default this to 10 years from the start date."/>
          </arg>
          <arg type="dateTime" var="$parameters.properties.timePeriod.startDate" options="start-date" required="True">
            <help short="The start date for the budget."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Budgets_CreateOrUpdateByResourceGroupName">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets/{budgetName}">
          <request method="put">
            <path>
              <param type="string" name="budgetName" arg="$Path.budgetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-01-31&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="string" name="eTag" arg="$parameters.eTag"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="float64" name="amount" arg="$parameters.properties.amount" required="True"/>
                    <prop type="string" name="category" arg="$parameters.properties.category" required="True">
                      <enum>
                        <item value="&quot;Cost&quot;"/>
                        <item value="&quot;Usage&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="filters" arg="$parameters.properties.filters">
                      <prop type="array<string>" name="meters" arg="$parameters.properties.filters.meters">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceGroups" arg="$parameters.properties.filters.resourceGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resources" arg="$parameters.properties.filters.resources">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="notifications" arg="$parameters.properties.notifications">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="contactEmails" arg="$parameters.properties.notifications{}.contactEmails" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="contactGroups" arg="$parameters.properties.notifications{}.contactGroups">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="contactRoles" arg="$parameters.properties.notifications{}.contactRoles">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="enabled" arg="$parameters.properties.notifications{}.enabled" required="True"/>
                          <prop type="string" name="operator" arg="$parameters.properties.notifications{}.operator" required="True">
                            <enum>
                              <item value="&quot;EqualTo&quot;"/>
                              <item value="&quot;GreaterThan&quot;"/>
                              <item value="&quot;GreaterThanOrEqualTo&quot;"/>
                            </enum>
                          </prop>
                          <prop type="float64" name="threshold" arg="$parameters.properties.notifications{}.threshold" required="True"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="timeGrain" arg="$parameters.properties.timeGrain" required="True">
                      <enum>
                        <item value="&quot;Annually&quot;"/>
                        <item value="&quot;Monthly&quot;"/>
                        <item value="&quot;Quarterly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="timePeriod" arg="$parameters.properties.timePeriod" required="True">
                      <prop type="dateTime" name="endDate" arg="$parameters.properties.timePeriod.endDate"/>
                      <prop type="dateTime" name="startDate" arg="$parameters.properties.timePeriod.startDate" required="True"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="float64" name="amount" required="True"/>
                    <prop type="string" name="category" required="True">
                      <enum>
                        <item value="&quot;Cost&quot;"/>
                        <item value="&quot;Usage&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="currentSpend">
                      <prop readOnly="True" type="float64" name="amount"/>
                      <prop readOnly="True" type="string" name="unit"/>
                    </prop>
                    <prop type="object" name="filters">
                      <prop type="array<string>" name="meters">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resources">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="notifications">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="contactEmails" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="contactGroups">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="contactRoles">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="enabled" required="True"/>
                          <prop type="string" name="operator" required="True">
                            <enum>
                              <item value="&quot;EqualTo&quot;"/>
                              <item value="&quot;GreaterThan&quot;"/>
                              <item value="&quot;GreaterThanOrEqualTo&quot;"/>
                            </enum>
                          </prop>
                          <prop type="float64" name="threshold" required="True"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="timeGrain" required="True">
                      <enum>
                        <item value="&quot;Annually&quot;"/>
                        <item value="&quot;Monthly&quot;"/>
                        <item value="&quot;Quarterly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="timePeriod" required="True">
                      <prop type="dateTime" name="endDate"/>
                      <prop type="dateTime" name="startDate" required="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete-with-rg" version="2018-01-31" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.consumption/budgets/{}" version="2018-01-31" swagger="mgmt-plane/consumption/ResourceProviders/Microsoft.Consumption/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uc3VtcHRpb24vYnVkZ2V0cy97YnVkZ2V0TmFtZX0=/V/MjAxOC0wMS0zMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.budgetName" options="budget-name name n" required="True" idPart="name">
          <help short="Budget Name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Budgets_DeleteByResourceGroupName">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets/{budgetName}">
          <request method="delete">
            <path>
              <param type="string" name="budgetName" arg="$Path.budgetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-01-31&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="show-with-rg" version="2018-01-31" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.consumption/budgets/{}" version="2018-01-31" swagger="mgmt-plane/consumption/ResourceProviders/Microsoft.Consumption/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uc3VtcHRpb24vYnVkZ2V0cy97YnVkZ2V0TmFtZX0=/V/MjAxOC0wMS0zMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.budgetName" options="budget-name name n" required="True" idPart="name">
          <help short="Budget Name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Budgets_GetByResourceGroupName">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets/{budgetName}">
          <request method="get">
            <path>
              <param type="string" name="budgetName" arg="$Path.budgetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-01-31&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="float64" name="amount" required="True"/>
                    <prop type="string" name="category" required="True">
                      <enum>
                        <item value="&quot;Cost&quot;"/>
                        <item value="&quot;Usage&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="currentSpend">
                      <prop readOnly="True" type="float64" name="amount"/>
                      <prop readOnly="True" type="string" name="unit"/>
                    </prop>
                    <prop type="object" name="filters">
                      <prop type="array<string>" name="meters">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resources">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="notifications">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="contactEmails" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="contactGroups">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="contactRoles">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="enabled" required="True"/>
                          <prop type="string" name="operator" required="True">
                            <enum>
                              <item value="&quot;EqualTo&quot;"/>
                              <item value="&quot;GreaterThan&quot;"/>
                              <item value="&quot;GreaterThanOrEqualTo&quot;"/>
                            </enum>
                          </prop>
                          <prop type="float64" name="threshold" required="True"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="timeGrain" required="True">
                      <enum>
                        <item value="&quot;Annually&quot;"/>
                        <item value="&quot;Monthly&quot;"/>
                        <item value="&quot;Quarterly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="timePeriod" required="True">
                      <prop type="dateTime" name="endDate"/>
                      <prop type="dateTime" name="startDate" required="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update-with-rg" version="2018-01-31" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.consumption/budgets/{}" version="2018-01-31" swagger="mgmt-plane/consumption/ResourceProviders/Microsoft.Consumption/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29uc3VtcHRpb24vYnVkZ2V0cy97YnVkZ2V0TmFtZX0=/V/MjAxOC0wMS0zMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.budgetName" options="budget-name name n" required="True" idPart="name">
          <help short="Budget Name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="string" var="$parameters.eTag" options="e-tag" group="Parameters">
          <help short="eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="float64" var="$parameters.properties.amount" options="amount" group="Properties">
          <help short="The total amount of cost to track with the budget"/>
        </arg>
        <arg type="string" var="$parameters.properties.category" options="category" group="Properties">
          <help short="The category of the budget, whether the budget tracks cost or usage."/>
          <enum>
            <item name="Cost" value="&quot;Cost&quot;"/>
            <item name="Usage" value="&quot;Usage&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.filters" options="filters" group="Properties">
          <help short="May be used to filter budgets by resource group, resource, or meter."/>
          <arg nullable="True" type="array<string>" var="$parameters.properties.filters.meters" options="meters">
            <help short="The list of filters on meters, mandatory for budgets of usage category. "/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.filters.resourceGroups" options="resource-groups">
            <help short="The list of filters on resource groups, allowed at subscription level only."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.filters.resources" options="resources">
            <help short="The list of filters on resources."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.notifications" options="notifications" group="Properties">
          <help short="Dictionary of notifications associated with the budget. Budget can have up to five notifications."/>
          <additionalProp>
            <item nullable="True" type="object">
              <arg type="array<string>" var="$parameters.properties.notifications{}.contactEmails" options="contact-emails">
                <help short="Email addresses to send the budget notification to when the threshold is exceeded."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="array<string>" var="$parameters.properties.notifications{}.contactGroups" options="contact-groups">
                <help short="Action groups to send the budget notification to when the threshold is exceeded."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="array<string>" var="$parameters.properties.notifications{}.contactRoles" options="contact-roles">
                <help short="Contact roles to send the budget notification to when the threshold is exceeded."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg type="boolean" var="$parameters.properties.notifications{}.enabled" options="enabled">
                <help short="The notification is enabled or not."/>
              </arg>
              <arg type="string" var="$parameters.properties.notifications{}.operator" options="operator">
                <help short="The comparison operator."/>
                <enum>
                  <item name="EqualTo" value="&quot;EqualTo&quot;"/>
                  <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                  <item name="GreaterThanOrEqualTo" value="&quot;GreaterThanOrEqualTo&quot;"/>
                </enum>
              </arg>
              <arg type="float64" var="$parameters.properties.notifications{}.threshold" options="threshold">
                <help short="Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."/>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$parameters.properties.timeGrain" options="time-grain" group="Properties">
          <help short="The time covered by a budget. Tracking of the amount will be reset based on the time grain."/>
          <enum>
            <item name="Annually" value="&quot;Annually&quot;"/>
            <item name="Monthly" value="&quot;Monthly&quot;"/>
            <item name="Quarterly" value="&quot;Quarterly&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.properties.timePeriod" options="time-period" group="Properties">
          <help short="Has start and end date of the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than three months. Past start date should  be selected within the timegrain period. There are no restrictions on the end date."/>
          <arg nullable="True" type="dateTime" var="$parameters.properties.timePeriod.endDate" options="end-date">
            <help short="The end date for the budget. If not provided, we default this to 10 years from the start date."/>
          </arg>
          <arg type="dateTime" var="$parameters.properties.timePeriod.startDate" options="start-date">
            <help short="The start date for the budget."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Budgets_GetByResourceGroupName">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets/{budgetName}">
          <request method="get">
            <path>
              <param type="string" name="budgetName" arg="$Path.budgetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-01-31&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Budget_read">
                  <prop type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="float64" name="amount" required="True"/>
                    <prop type="string" name="category" required="True">
                      <enum>
                        <item value="&quot;Cost&quot;"/>
                        <item value="&quot;Usage&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="currentSpend">
                      <prop readOnly="True" type="float64" name="amount"/>
                      <prop readOnly="True" type="string" name="unit"/>
                    </prop>
                    <prop type="object" name="filters">
                      <prop type="array<string>" name="meters">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resourceGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="resources">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="notifications">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="contactEmails" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="contactGroups">
                            <item type="string"/>
                          </prop>
                          <prop type="array<string>" name="contactRoles">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="enabled" required="True"/>
                          <prop type="string" name="operator" required="True">
                            <enum>
                              <item value="&quot;EqualTo&quot;"/>
                              <item value="&quot;GreaterThan&quot;"/>
                              <item value="&quot;GreaterThanOrEqualTo&quot;"/>
                            </enum>
                          </prop>
                          <prop type="float64" name="threshold" required="True"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="timeGrain" required="True">
                      <enum>
                        <item value="&quot;Annually&quot;"/>
                        <item value="&quot;Monthly&quot;"/>
                        <item value="&quot;Quarterly&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="timePeriod" required="True">
                      <prop type="dateTime" name="endDate"/>
                      <prop type="dateTime" name="startDate" required="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="string" name="eTag" arg="$parameters.eTag"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="float64" name="amount" arg="$parameters.properties.amount" required="True"/>
                <prop type="string" name="category" arg="$parameters.properties.category" required="True">
                  <enum>
                    <item value="&quot;Cost&quot;"/>
                    <item value="&quot;Usage&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="filters" arg="$parameters.properties.filters">
                  <prop type="array<string>" name="meters" arg="$parameters.properties.filters.meters">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="resourceGroups" arg="$parameters.properties.filters.resourceGroups">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="resources" arg="$parameters.properties.filters.resources">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="object" name="notifications" arg="$parameters.properties.notifications">
                  <additionalProp>
                    <item type="object">
                      <prop type="array<string>" name="contactEmails" arg="$parameters.properties.notifications{}.contactEmails" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="contactGroups" arg="$parameters.properties.notifications{}.contactGroups">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="contactRoles" arg="$parameters.properties.notifications{}.contactRoles">
                        <item type="string"/>
                      </prop>
                      <prop type="boolean" name="enabled" arg="$parameters.properties.notifications{}.enabled" required="True"/>
                      <prop type="string" name="operator" arg="$parameters.properties.notifications{}.operator" required="True">
                        <enum>
                          <item value="&quot;EqualTo&quot;"/>
                          <item value="&quot;GreaterThan&quot;"/>
                          <item value="&quot;GreaterThanOrEqualTo&quot;"/>
                        </enum>
                      </prop>
                      <prop type="float64" name="threshold" arg="$parameters.properties.notifications{}.threshold" required="True"/>
                    </item>
                  </additionalProp>
                </prop>
                <prop type="string" name="timeGrain" arg="$parameters.properties.timeGrain" required="True">
                  <enum>
                    <item value="&quot;Annually&quot;"/>
                    <item value="&quot;Monthly&quot;"/>
                    <item value="&quot;Quarterly&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="timePeriod" arg="$parameters.properties.timePeriod" required="True">
                  <prop type="dateTime" name="endDate" arg="$parameters.properties.timePeriod.endDate"/>
                  <prop type="dateTime" name="startDate" arg="$parameters.properties.timePeriod.startDate" required="True"/>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Budgets_CreateOrUpdateByResourceGroupName">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets/{budgetName}">
          <request method="put">
            <path>
              <param type="string" name="budgetName" arg="$Path.budgetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-01-31&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Budget_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
