<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2025-05-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyNS0wNS0wMQ=="/>
  <commandGroup name="search service">
    <command name="show" version="2025-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2025-05-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyNS0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.searchServiceName" options="search-service-name name n" required="True" idPart="name">
          <help short="The name of the Azure AI Search service associated with the specified resource group."/>
          <format pattern="^(?=.{2,60}$)[a-z0-9][a-z0-9]+(-[a-z0-9]+)*$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Services_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="searchServiceName" arg="$Path.searchServiceName" required="True">
                <format pattern="^(?=.{2,60}$)[a-z0-9][a-z0-9]+(-[a-z0-9]+)*$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01&quot;"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id"/>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="authOptions">
                      <prop type="object" name="aadOrApiKey">
                        <prop type="string" name="aadAuthFailureMode">
                          <enum>
                            <item value="&quot;http401WithBearerChallenge&quot;"/>
                            <item value="&quot;http403&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="apiKeyOnly"/>
                    </prop>
                    <prop type="string" name="computeType">
                      <enum>
                        <item value="&quot;confidential&quot;"/>
                        <item value="&quot;default&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="dataExfiltrationProtections">
                      <item type="string">
                        <enum>
                          <item value="&quot;BlockAll&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop nullable="True" type="boolean" name="disableLocalAuth"/>
                    <prop readOnly="True" type="string" name="eTag"/>
                    <prop type="object" name="encryptionWithCmk">
                      <prop readOnly="True" type="string" name="encryptionComplianceStatus">
                        <enum>
                          <item value="&quot;Compliant&quot;"/>
                          <item value="&quot;NonCompliant&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enforcement">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Unspecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="endpoint"/>
                    <prop type="string" name="hostingMode">
                      <default value="&quot;default&quot;"/>
                      <enum>
                        <item value="&quot;default&quot;"/>
                        <item value="&quot;highDensity&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="string" name="bypass">
                        <enum>
                          <item value="&quot;AzureServices&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules">
                        <item type="object">
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer32" name="partitionCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired">
                              <default value="&quot;None&quot;"/>
                            </prop>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                        <item value="&quot;securedByPerimeter&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="replicaCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop nullable="True" type="string" name="semanticSearch">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="serviceUpgradedAt"/>
                    <prop readOnly="True" type="array<object>" name="sharedPrivateLinkResources">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/sharedPrivateLinkResources/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="string" name="privateLinkResourceId"/>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="requestMessage"/>
                          <prop type="string" name="resourceRegion"/>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Approved&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Rejected&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;degraded&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;error&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;running&quot;"/>
                        <item value="&quot;stopped&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="statusDetails"/>
                    <prop type="string" name="upgradeAvailable">
                      <enum>
                        <item value="&quot;available&quot;"/>
                        <item value="&quot;notAvailable&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                        <item value="&quot;standard2&quot;"/>
                        <item value="&quot;standard3&quot;"/>
                        <item value="&quot;storage_optimized_l1&quot;"/>
                        <item value="&quot;storage_optimized_l2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-05-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2025-05-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyNS0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.searchServiceName" options="search-service-name name n" required="True" idPart="name">
          <help short="The name of the Azure AI Search service associated with the specified resource group."/>
          <format pattern="^(?=.{2,60}$)[a-z0-9][a-z0-9]+(-[a-z0-9]+)*$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Services_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="searchServiceName" arg="$Path.searchServiceName" required="True">
                <format pattern="^(?=.{2,60}$)[a-z0-9][a-z0-9]+(-[a-z0-9]+)*$"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01&quot;"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id"/>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="update" version="2025-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2025-05-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyNS0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.searchServiceName" options="search-service-name name n" required="True" idPart="name">
          <help short="The name of the Azure AI Search service to update."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$service.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$service.identity.type" options="type" hide="True" group="Identity">
          <help short="The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$service.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$service.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$service.properties.authOptions" options="auth-options" group="Properties">
          <help short="Defines the options for how the data plane API of a search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true."/>
          <arg type="object" var="$service.properties.authOptions.aadOrApiKey" options="aad-or-api-key">
            <help short="Indicates that either the API key or an access token from a Microsoft Entra ID tenant can be used for authentication."/>
            <arg type="string" var="$service.properties.authOptions.aadOrApiKey.aadAuthFailureMode" options="aad-auth-failure-mode">
              <help short="Describes what response the data plane API of a search service would send for requests that failed authentication."/>
              <enum>
                <item name="http401WithBearerChallenge" value="&quot;http401WithBearerChallenge&quot;"/>
                <item name="http403" value="&quot;http403&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$service.properties.authOptions.apiKeyOnly" options="api-key-only">
            <blank value="{}"/>
            <help short="Indicates that only the API key can be used for authentication."/>
          </arg>
        </arg>
        <arg type="string" var="$service.properties.computeType" options="compute-type" group="Properties">
          <help short="Configure this property to support the search service using either the Default Compute or Azure Confidential Compute."/>
          <enum>
            <item name="confidential" value="&quot;confidential&quot;"/>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$service.properties.dataExfiltrationProtections" options="data-exfiltration-protections" group="Properties">
          <help short="A list of data exfiltration scenarios that are explicitly disallowed for the search service. Currently, the only supported value is 'All' to disable all possible data export scenarios with more fine grained controls planned for the future."/>
          <item type="string">
            <enum>
              <item name="BlockAll" value="&quot;BlockAll&quot;"/>
            </enum>
          </item>
        </arg>
        <arg nullable="True" type="boolean" var="$service.properties.disableLocalAuth" options="disable-local-auth" group="Properties">
          <help short="When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot be set to true if 'dataPlaneAuthOptions' are defined."/>
        </arg>
        <arg type="object" var="$service.properties.encryptionWithCmk" options="encryption-with-cmk" group="Properties">
          <help short="Specifies any policy regarding encryption of resources (such as indexes) using customer manager keys within a search service."/>
          <arg type="string" var="$service.properties.encryptionWithCmk.enforcement" options="enforcement">
            <help short="Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed key."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
              <item name="Unspecified" value="&quot;Unspecified&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$service.properties.endpoint" options="endpoint" group="Properties">
          <help short="The endpoint of the Azure AI Search service."/>
        </arg>
        <arg type="string" var="$service.properties.hostingMode" options="hosting-mode" group="Properties">
          <help short="Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'."/>
          <default value="&quot;default&quot;"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
            <item name="highDensity" value="&quot;highDensity&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$service.properties.networkRuleSet" options="network-rule-set" group="Properties">
          <help short="Network specific rules that determine how the Azure AI Search service may be reached."/>
          <arg type="string" var="$service.properties.networkRuleSet.bypass" options="bypass">
            <help short="Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section."/>
            <enum>
              <item name="AzureServices" value="&quot;AzureServices&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
          <arg type="array<object>" var="$service.properties.networkRuleSet.ipRules" options="ip-rules">
            <help short="A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method."/>
            <item type="object">
              <arg type="string" var="$service.properties.networkRuleSet.ipRules[].value" options="value">
                <help short="Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="integer32" var="$service.properties.partitionCount" options="partition-count" group="Properties">
          <help short="The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3."/>
          <default value="1"/>
          <format maximum="12" minimum="1"/>
        </arg>
        <arg type="string" var="$service.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method."/>
          <default value="&quot;enabled&quot;"/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="enabled" value="&quot;enabled&quot;"/>
            <item name="securedByPerimeter" value="&quot;securedByPerimeter&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$service.properties.replicaCount" options="replica-count" group="Properties">
          <help short="The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU."/>
          <default value="1"/>
          <format maximum="12" minimum="1"/>
        </arg>
        <arg nullable="True" type="string" var="$service.properties.semanticSearch" options="semantic-search" group="Properties">
          <help short="Sets options that control the availability of semantic search. This configuration is only possible for certain Azure AI Search SKUs in certain locations."/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="free" value="&quot;free&quot;"/>
            <item name="standard" value="&quot;standard&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$service.properties.upgradeAvailable" options="upgrade-available" group="Properties">
          <help short="Indicates if the search service has an upgrade available."/>
          <enum>
            <item name="available" value="&quot;available&quot;"/>
            <item name="notAvailable" value="&quot;notAvailable&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Service">
        <arg type="object" var="$service.sku" options="sku" group="Service">
          <help short="The SKU of the search service, which determines price tier and capacity limits. This property is required when creating a new search service."/>
          <arg type="string" var="$service.sku.name" options="name">
            <help short="The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'"/>
            <enum>
              <item name="basic" value="&quot;basic&quot;"/>
              <item name="free" value="&quot;free&quot;"/>
              <item name="standard" value="&quot;standard&quot;"/>
              <item name="standard2" value="&quot;standard2&quot;"/>
              <item name="standard3" value="&quot;standard3&quot;"/>
              <item name="storage_optimized_l1" value="&quot;storage_optimized_l1&quot;"/>
              <item name="storage_optimized_l2" value="&quot;storage_optimized_l2&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$service.tags" options="tags" group="Service">
          <help short="Tags to help categorize the resource in the Azure portal."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Services_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}">
          <request method="patch">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="searchServiceName" arg="$Path.searchServiceName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01&quot;"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id"/>
            <body>
              <json>
                <schema type="object" name="service" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$service.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$service.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$service.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$service.identity.systemAssigned"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="authOptions" arg="$service.properties.authOptions">
                      <prop type="object" name="aadOrApiKey" arg="$service.properties.authOptions.aadOrApiKey">
                        <prop type="string" name="aadAuthFailureMode" arg="$service.properties.authOptions.aadOrApiKey.aadAuthFailureMode">
                          <enum>
                            <item value="&quot;http401WithBearerChallenge&quot;"/>
                            <item value="&quot;http403&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="apiKeyOnly" arg="$service.properties.authOptions.apiKeyOnly"/>
                    </prop>
                    <prop type="string" name="computeType" arg="$service.properties.computeType">
                      <enum>
                        <item value="&quot;confidential&quot;"/>
                        <item value="&quot;default&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="dataExfiltrationProtections" arg="$service.properties.dataExfiltrationProtections">
                      <item type="string">
                        <enum>
                          <item value="&quot;BlockAll&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop nullable="True" type="boolean" name="disableLocalAuth" arg="$service.properties.disableLocalAuth"/>
                    <prop type="object" name="encryptionWithCmk" arg="$service.properties.encryptionWithCmk">
                      <prop type="string" name="enforcement" arg="$service.properties.encryptionWithCmk.enforcement">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Unspecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="endpoint" arg="$service.properties.endpoint"/>
                    <prop type="string" name="hostingMode" arg="$service.properties.hostingMode">
                      <default value="&quot;default&quot;"/>
                      <enum>
                        <item value="&quot;default&quot;"/>
                        <item value="&quot;highDensity&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet" arg="$service.properties.networkRuleSet">
                      <prop type="string" name="bypass" arg="$service.properties.networkRuleSet.bypass">
                        <enum>
                          <item value="&quot;AzureServices&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules" arg="$service.properties.networkRuleSet.ipRules">
                        <item type="object">
                          <prop type="string" name="value" arg="$service.properties.networkRuleSet.ipRules[].value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer32" name="partitionCount" arg="$service.properties.partitionCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$service.properties.publicNetworkAccess">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                        <item value="&quot;securedByPerimeter&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="replicaCount" arg="$service.properties.replicaCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop nullable="True" type="string" name="semanticSearch" arg="$service.properties.semanticSearch">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="upgradeAvailable" arg="$service.properties.upgradeAvailable">
                      <enum>
                        <item value="&quot;available&quot;"/>
                        <item value="&quot;notAvailable&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" arg="$service.sku">
                    <prop type="string" name="name" arg="$service.sku.name">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                        <item value="&quot;standard2&quot;"/>
                        <item value="&quot;standard3&quot;"/>
                        <item value="&quot;storage_optimized_l1&quot;"/>
                        <item value="&quot;storage_optimized_l2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$service.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="authOptions">
                      <prop type="object" name="aadOrApiKey">
                        <prop type="string" name="aadAuthFailureMode">
                          <enum>
                            <item value="&quot;http401WithBearerChallenge&quot;"/>
                            <item value="&quot;http403&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="apiKeyOnly"/>
                    </prop>
                    <prop type="string" name="computeType">
                      <enum>
                        <item value="&quot;confidential&quot;"/>
                        <item value="&quot;default&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="dataExfiltrationProtections">
                      <item type="string">
                        <enum>
                          <item value="&quot;BlockAll&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop nullable="True" type="boolean" name="disableLocalAuth"/>
                    <prop readOnly="True" type="string" name="eTag"/>
                    <prop type="object" name="encryptionWithCmk">
                      <prop readOnly="True" type="string" name="encryptionComplianceStatus">
                        <enum>
                          <item value="&quot;Compliant&quot;"/>
                          <item value="&quot;NonCompliant&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enforcement">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Unspecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="endpoint"/>
                    <prop type="string" name="hostingMode">
                      <default value="&quot;default&quot;"/>
                      <enum>
                        <item value="&quot;default&quot;"/>
                        <item value="&quot;highDensity&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="string" name="bypass">
                        <enum>
                          <item value="&quot;AzureServices&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules">
                        <item type="object">
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer32" name="partitionCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired">
                              <default value="&quot;None&quot;"/>
                            </prop>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                        <item value="&quot;securedByPerimeter&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="replicaCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop nullable="True" type="string" name="semanticSearch">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="serviceUpgradedAt"/>
                    <prop readOnly="True" type="array<object>" name="sharedPrivateLinkResources">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/sharedPrivateLinkResources/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="string" name="privateLinkResourceId"/>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="requestMessage"/>
                          <prop type="string" name="resourceRegion"/>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Approved&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Rejected&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;degraded&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;error&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;running&quot;"/>
                        <item value="&quot;stopped&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="statusDetails"/>
                    <prop type="string" name="upgradeAvailable">
                      <enum>
                        <item value="&quot;available&quot;"/>
                        <item value="&quot;notAvailable&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                        <item value="&quot;standard2&quot;"/>
                        <item value="&quot;standard3&quot;"/>
                        <item value="&quot;storage_optimized_l1&quot;"/>
                        <item value="&quot;storage_optimized_l2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2025-05-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.search/searchservices/{}" version="2025-05-01" swagger="mgmt-plane/search/ResourceProviders/Microsoft.Search/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VhcmNoL3NlYXJjaFNlcnZpY2VzL3tzZWFyY2hTZXJ2aWNlTmFtZX0=/V/MjAyNS0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.searchServiceName" options="search-service-name name n" required="True" idPart="name">
          <help short="The name of the Azure AI Search service to create or update. Search service names must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and must be between 2 and 60 characters in length. Search service names must be unique since they are part of the service URI (https://<name>.search.windows.net). You cannot change the service name after the service is created."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$service.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$service.identity.type" options="type" hide="True" group="Identity">
          <help short="The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an identity created by the system and a set of user assigned identities. The type 'None' will remove all identities from the service."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$service.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$service.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$service.properties.authOptions" options="auth-options" group="Properties">
          <help short="Defines the options for how the data plane API of a search service authenticates requests. This cannot be set if 'disableLocalAuth' is set to true."/>
          <arg type="object" var="$service.properties.authOptions.aadOrApiKey" options="aad-or-api-key">
            <help short="Indicates that either the API key or an access token from a Microsoft Entra ID tenant can be used for authentication."/>
            <arg type="string" var="$service.properties.authOptions.aadOrApiKey.aadAuthFailureMode" options="aad-auth-failure-mode">
              <help short="Describes what response the data plane API of a search service would send for requests that failed authentication."/>
              <enum>
                <item name="http401WithBearerChallenge" value="&quot;http401WithBearerChallenge&quot;"/>
                <item name="http403" value="&quot;http403&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="$service.properties.authOptions.apiKeyOnly" options="api-key-only">
            <blank value="{}"/>
            <help short="Indicates that only the API key can be used for authentication."/>
          </arg>
        </arg>
        <arg type="string" var="$service.properties.computeType" options="compute-type" group="Properties">
          <help short="Configure this property to support the search service using either the Default Compute or Azure Confidential Compute."/>
          <enum>
            <item name="confidential" value="&quot;confidential&quot;"/>
            <item name="default" value="&quot;default&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$service.properties.dataExfiltrationProtections" options="data-exfiltration-protections" group="Properties">
          <help short="A list of data exfiltration scenarios that are explicitly disallowed for the search service. Currently, the only supported value is 'All' to disable all possible data export scenarios with more fine grained controls planned for the future."/>
          <item type="string">
            <enum>
              <item name="BlockAll" value="&quot;BlockAll&quot;"/>
            </enum>
          </item>
        </arg>
        <arg nullable="True" type="boolean" var="$service.properties.disableLocalAuth" options="disable-local-auth" group="Properties">
          <help short="When set to true, calls to the search service will not be permitted to utilize API keys for authentication. This cannot be set to true if 'dataPlaneAuthOptions' are defined."/>
        </arg>
        <arg type="object" var="$service.properties.encryptionWithCmk" options="encryption-with-cmk" group="Properties">
          <help short="Specifies any policy regarding encryption of resources (such as indexes) using customer manager keys within a search service."/>
          <arg type="string" var="$service.properties.encryptionWithCmk.enforcement" options="enforcement">
            <help short="Describes how a search service should enforce compliance if it finds objects that aren't encrypted with the customer-managed key."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
              <item name="Unspecified" value="&quot;Unspecified&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="string" var="$service.properties.endpoint" options="endpoint" group="Properties">
          <help short="The endpoint of the Azure AI Search service."/>
        </arg>
        <arg type="string" var="$service.properties.hostingMode" options="hosting-mode" group="Properties">
          <help short="Applicable only for the standard3 SKU. You can set this property to enable up to 3 high density partitions that allow up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. For the standard3 SKU, the value is either 'default' or 'highDensity'. For all other SKUs, this value must be 'default'."/>
          <default value="&quot;default&quot;"/>
          <enum>
            <item name="default" value="&quot;default&quot;"/>
            <item name="highDensity" value="&quot;highDensity&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$service.properties.networkRuleSet" options="network-rule-set" group="Properties">
          <help short="Network specific rules that determine how the Azure AI Search service may be reached."/>
          <arg type="string" var="$service.properties.networkRuleSet.bypass" options="bypass">
            <help short="Possible origins of inbound traffic that can bypass the rules defined in the 'ipRules' section."/>
            <enum>
              <item name="AzureServices" value="&quot;AzureServices&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
          <arg type="array<object>" var="$service.properties.networkRuleSet.ipRules" options="ip-rules">
            <help short="A list of IP restriction rules that defines the inbound network(s) with allowing access to the search service endpoint. At the meantime, all other public IP networks are blocked by the firewall. These restriction rules are applied only when the 'publicNetworkAccess' of the search service is 'enabled'; otherwise, traffic over public interface is not allowed even with any public IP rules, and private endpoint connections would be the exclusive access method."/>
            <item type="object">
              <arg type="string" var="$service.properties.networkRuleSet.ipRules[].value" options="value">
                <help short="Value corresponding to a single IPv4 address (eg., 123.1.2.3) or an IP range in CIDR format (eg., 123.1.2.3/24) to be allowed."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="integer32" var="$service.properties.partitionCount" options="partition-count" group="Properties">
          <help short="The number of partitions in the search service; if specified, it can be 1, 2, 3, 4, 6, or 12. Values greater than 1 are only valid for standard SKUs. For 'standard3' services with hostingMode set to 'highDensity', the allowed values are between 1 and 3."/>
          <default value="1"/>
          <format maximum="12" minimum="1"/>
        </arg>
        <arg type="string" var="$service.properties.publicNetworkAccess" options="public-network-access" group="Properties">
          <help short="This value can be set to 'enabled' to avoid breaking changes on existing customer resources and templates. If set to 'disabled', traffic over public interface is not allowed, and private endpoint connections would be the exclusive access method."/>
          <default value="&quot;enabled&quot;"/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="enabled" value="&quot;enabled&quot;"/>
            <item name="securedByPerimeter" value="&quot;securedByPerimeter&quot;"/>
          </enum>
        </arg>
        <arg type="integer32" var="$service.properties.replicaCount" options="replica-count" group="Properties">
          <help short="The number of replicas in the search service. If specified, it must be a value between 1 and 12 inclusive for standard SKUs or between 1 and 3 inclusive for basic SKU."/>
          <default value="1"/>
          <format maximum="12" minimum="1"/>
        </arg>
        <arg nullable="True" type="string" var="$service.properties.semanticSearch" options="semantic-search" group="Properties">
          <help short="Sets options that control the availability of semantic search. This configuration is only possible for certain Azure AI Search SKUs in certain locations."/>
          <enum>
            <item name="disabled" value="&quot;disabled&quot;"/>
            <item name="free" value="&quot;free&quot;"/>
            <item name="standard" value="&quot;standard&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$service.properties.upgradeAvailable" options="upgrade-available" group="Properties">
          <help short="Indicates if the search service has an upgrade available."/>
          <enum>
            <item name="available" value="&quot;available&quot;"/>
            <item name="notAvailable" value="&quot;notAvailable&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Service">
        <arg type="ResourceLocation" var="$service.location" options="location l" required="True" group="Service">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$service.sku" options="sku" group="Service">
          <help short="The SKU of the search service, which determines price tier and capacity limits. This property is required when creating a new search service."/>
          <arg type="string" var="$service.sku.name" options="name">
            <help short="The SKU of the search service. Valid values include: 'free': Shared service. 'basic': Dedicated service with up to 3 replicas. 'standard': Dedicated service with up to 12 partitions and 12 replicas. 'standard2': Similar to standard, but with more capacity per search unit. 'standard3': The largest Standard offering with up to 12 partitions and 12 replicas (or up to 3 partitions with more indexes if you also set the hostingMode property to 'highDensity'). 'storage_optimized_l1': Supports 1TB per partition, up to 12 partitions. 'storage_optimized_l2': Supports 2TB per partition, up to 12 partitions.'"/>
            <enum>
              <item name="basic" value="&quot;basic&quot;"/>
              <item name="free" value="&quot;free&quot;"/>
              <item name="standard" value="&quot;standard&quot;"/>
              <item name="standard2" value="&quot;standard2&quot;"/>
              <item name="standard3" value="&quot;standard3&quot;"/>
              <item name="storage_optimized_l1" value="&quot;storage_optimized_l1&quot;"/>
              <item name="storage_optimized_l2" value="&quot;storage_optimized_l2&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$service.tags" options="tags" group="Service">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="Services_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Search/searchServices/{searchServiceName}">
          <request method="post">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="searchServiceName" arg="$Path.searchServiceName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01&quot;"/>
              </const>
            </query>
            <header clientRequestId="x-ms-client-request-id"/>
            <body>
              <json>
                <schema type="object" name="service" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$service.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$service.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$service.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$service.identity.systemAssigned"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$service.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="authOptions" arg="$service.properties.authOptions">
                      <prop type="object" name="aadOrApiKey" arg="$service.properties.authOptions.aadOrApiKey">
                        <prop type="string" name="aadAuthFailureMode" arg="$service.properties.authOptions.aadOrApiKey.aadAuthFailureMode">
                          <enum>
                            <item value="&quot;http401WithBearerChallenge&quot;"/>
                            <item value="&quot;http403&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="apiKeyOnly" arg="$service.properties.authOptions.apiKeyOnly"/>
                    </prop>
                    <prop type="string" name="computeType" arg="$service.properties.computeType">
                      <enum>
                        <item value="&quot;confidential&quot;"/>
                        <item value="&quot;default&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="dataExfiltrationProtections" arg="$service.properties.dataExfiltrationProtections">
                      <item type="string">
                        <enum>
                          <item value="&quot;BlockAll&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop nullable="True" type="boolean" name="disableLocalAuth" arg="$service.properties.disableLocalAuth"/>
                    <prop type="object" name="encryptionWithCmk" arg="$service.properties.encryptionWithCmk">
                      <prop type="string" name="enforcement" arg="$service.properties.encryptionWithCmk.enforcement">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Unspecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="endpoint" arg="$service.properties.endpoint"/>
                    <prop type="string" name="hostingMode" arg="$service.properties.hostingMode">
                      <default value="&quot;default&quot;"/>
                      <enum>
                        <item value="&quot;default&quot;"/>
                        <item value="&quot;highDensity&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet" arg="$service.properties.networkRuleSet">
                      <prop type="string" name="bypass" arg="$service.properties.networkRuleSet.bypass">
                        <enum>
                          <item value="&quot;AzureServices&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules" arg="$service.properties.networkRuleSet.ipRules">
                        <item type="object">
                          <prop type="string" name="value" arg="$service.properties.networkRuleSet.ipRules[].value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer32" name="partitionCount" arg="$service.properties.partitionCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$service.properties.publicNetworkAccess">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                        <item value="&quot;securedByPerimeter&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="replicaCount" arg="$service.properties.replicaCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop nullable="True" type="string" name="semanticSearch" arg="$service.properties.semanticSearch">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="upgradeAvailable" arg="$service.properties.upgradeAvailable">
                      <enum>
                        <item value="&quot;available&quot;"/>
                        <item value="&quot;notAvailable&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku" arg="$service.sku">
                    <prop type="string" name="name" arg="$service.sku.name">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                        <item value="&quot;standard2&quot;"/>
                        <item value="&quot;standard3&quot;"/>
                        <item value="&quot;storage_optimized_l1&quot;"/>
                        <item value="&quot;storage_optimized_l2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$service.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="authOptions">
                      <prop type="object" name="aadOrApiKey">
                        <prop type="string" name="aadAuthFailureMode">
                          <enum>
                            <item value="&quot;http401WithBearerChallenge&quot;"/>
                            <item value="&quot;http403&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="apiKeyOnly"/>
                    </prop>
                    <prop type="string" name="computeType">
                      <enum>
                        <item value="&quot;confidential&quot;"/>
                        <item value="&quot;default&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="dataExfiltrationProtections">
                      <item type="string">
                        <enum>
                          <item value="&quot;BlockAll&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop nullable="True" type="boolean" name="disableLocalAuth"/>
                    <prop readOnly="True" type="string" name="eTag"/>
                    <prop type="object" name="encryptionWithCmk">
                      <prop readOnly="True" type="string" name="encryptionComplianceStatus">
                        <enum>
                          <item value="&quot;Compliant&quot;"/>
                          <item value="&quot;NonCompliant&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="enforcement">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;Unspecified&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="endpoint"/>
                    <prop type="string" name="hostingMode">
                      <default value="&quot;default&quot;"/>
                      <enum>
                        <item value="&quot;default&quot;"/>
                        <item value="&quot;highDensity&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="networkRuleSet">
                      <prop type="string" name="bypass">
                        <enum>
                          <item value="&quot;AzureServices&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="ipRules">
                        <item type="object">
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="integer32" name="partitionCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="object" name="privateEndpoint">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState">
                            <prop type="string" name="actionsRequired">
                              <default value="&quot;None&quot;"/>
                            </prop>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Disconnected&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;enabled&quot;"/>
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;enabled&quot;"/>
                        <item value="&quot;securedByPerimeter&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer32" name="replicaCount">
                      <default value="1"/>
                      <format maximum="12" minimum="1"/>
                    </prop>
                    <prop nullable="True" type="string" name="semanticSearch">
                      <enum>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="serviceUpgradedAt"/>
                    <prop readOnly="True" type="array<object>" name="sharedPrivateLinkResources">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Search/searchServices/{}/sharedPrivateLinkResources/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties">
                          <prop type="string" name="groupId"/>
                          <prop type="string" name="privateLinkResourceId"/>
                          <prop type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Incomplete&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="requestMessage"/>
                          <prop type="string" name="resourceRegion"/>
                          <prop type="string" name="status">
                            <enum>
                              <item value="&quot;Approved&quot;"/>
                              <item value="&quot;Disconnected&quot;"/>
                              <item value="&quot;Pending&quot;"/>
                              <item value="&quot;Rejected&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;degraded&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;disabled&quot;"/>
                        <item value="&quot;error&quot;"/>
                        <item value="&quot;provisioning&quot;"/>
                        <item value="&quot;running&quot;"/>
                        <item value="&quot;stopped&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="statusDetails"/>
                    <prop type="string" name="upgradeAvailable">
                      <enum>
                        <item value="&quot;available&quot;"/>
                        <item value="&quot;notAvailable&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name">
                      <enum>
                        <item value="&quot;basic&quot;"/>
                        <item value="&quot;free&quot;"/>
                        <item value="&quot;standard&quot;"/>
                        <item value="&quot;standard2&quot;"/>
                        <item value="&quot;standard3&quot;"/>
                        <item value="&quot;storage_optimized_l1&quot;"/>
                        <item value="&quot;storage_optimized_l2&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
