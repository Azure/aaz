<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}/assesspatches" version="2022-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0vYXNzZXNzUGF0Y2hlcw==/V/MjAyMi0xMS0wMQ=="/>
  <commandGroup name="vm">
    <command name="assess-patches" version="2022-11-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}/assesspatches" version="2022-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0vYXNzZXNzUGF0Y2hlcw==/V/MjAyMi0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmName" options="vm-name name n" required="True" group="" idPart="name" configurationKey="vm">
          <help short="The name of the Virtual Machine. You can configure the default using `az configure --defaults vm=<name>`"/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_AssessPatches">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/assessPatches">
          <request method="post">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="assessmentActivityId"/>
                  <prop readOnly="True" type="array<object>" name="availablePatches" identifiers="patchId">
                    <item type="object">
                      <prop readOnly="True" type="string" name="activityId"/>
                      <prop readOnly="True" type="string" name="assessmentState">
                        <enum>
                          <item value="&quot;Available&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<string>" name="classifications">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="kbId"/>
                      <prop readOnly="True" type="dateTime" name="lastModifiedDateTime"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop readOnly="True" type="string" name="patchId"/>
                      <prop readOnly="True" type="dateTime" name="publishedDate"/>
                      <prop readOnly="True" type="string" name="rebootBehavior">
                        <enum>
                          <item value="&quot;AlwaysRequiresReboot&quot;"/>
                          <item value="&quot;CanRequestReboot&quot;"/>
                          <item value="&quot;NeverReboots&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="version"/>
                    </item>
                  </prop>
                  <prop readOnly="True" type="integer32" name="criticalAndSecurityPatchCount"/>
                  <prop type="object" name="error" cls="ApiError_read">
                    <prop type="string" name="code"/>
                    <prop type="array<object>" name="details" identifiers="message target">
                      <item type="object">
                        <prop type="string" name="code"/>
                        <prop type="string" name="message"/>
                        <prop type="string" name="target"/>
                      </item>
                    </prop>
                    <prop type="object" name="innererror">
                      <prop type="string" name="errordetail"/>
                      <prop type="string" name="exceptiontype"/>
                    </prop>
                    <prop type="string" name="message"/>
                    <prop type="string" name="target"/>
                  </prop>
                  <prop readOnly="True" type="integer32" name="otherPatchCount"/>
                  <prop readOnly="True" type="boolean" name="rebootPending"/>
                  <prop readOnly="True" type="dateTime" name="startDateTime"/>
                  <prop readOnly="True" type="string" name="status">
                    <enum>
                      <item value="&quot;CompletedWithWarnings&quot;"/>
                      <item value="&quot;Failed&quot;"/>
                      <item value="&quot;InProgress&quot;"/>
                      <item value="&quot;Succeeded&quot;"/>
                      <item value="&quot;Unknown&quot;"/>
                    </enum>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
