<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2024-06-19" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyNC0wNi0xOQ=="/>
  <commandGroup name="qumulo storage file-system">
    <command name="show" version="2024-06-19">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2024-06-19" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyNC0wNi0xOQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
          <help short="Name of the File System resource"/>
          <format pattern="^[a-zA-Z0-9_-]*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FileSystems_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
          <request method="get">
            <path>
              <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                <format pattern="^[a-zA-Z0-9_-]*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-19&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Qumulo.Storage/fileSystems/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="adminPassword" required="True" secret="True"/>
                    <prop type="string" name="availabilityZone"/>
                    <prop type="string" name="clusterLoginUrl"/>
                    <prop type="string" name="delegatedSubnetId" required="True"/>
                    <prop type="object" name="marketplaceDetails" required="True">
                      <prop type="string" name="marketplaceSubscriptionId"/>
                      <prop readOnly="True" type="string" name="marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" required="True"/>
                      <prop type="string" name="planId" required="True"/>
                      <prop type="string" name="publisherId"/>
                      <prop type="string" name="termUnit"/>
                    </prop>
                    <prop type="array<string>" name="privateIPs">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageSku" required="True"/>
                    <prop type="object" name="userDetails" required="True">
                      <prop type="string" name="email" required="True" secret="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-06-19" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2024-06-19" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyNC0wNi0xOQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
          <help short="Name of the File System resource"/>
          <format pattern="^[a-zA-Z0-9_-]*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FileSystems_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
          <request method="delete">
            <path>
              <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                <format pattern="^[a-zA-Z0-9_-]*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-19&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-06-19">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2024-06-19" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyNC0wNi0xOQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
          <help short="Name of the File System resource"/>
          <format pattern="^[a-zA-Z0-9_-]*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$resource.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$resource.identity.type" options="type" hide="True" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$resource.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.adminPassword" options="admin-password" group="Properties">
          <help short="Initial administrator password of the resource"/>
        </arg>
        <arg type="string" var="$resource.properties.availabilityZone" options="availability-zone" group="Properties">
          <help short="Availability zone"/>
        </arg>
        <arg type="string" var="$resource.properties.clusterLoginUrl" options="cluster-login-url" group="Properties">
          <help short="File system Id of the resource"/>
        </arg>
        <arg type="string" var="$resource.properties.delegatedSubnetId" options="delegated-subnet-id" group="Properties">
          <help short="Delegated subnet id for Vnet injection"/>
        </arg>
        <arg type="object" var="$resource.properties.marketplaceDetails" options="marketplace-details" group="Properties">
          <help short="Marketplace details"/>
          <arg type="string" var="$resource.properties.marketplaceDetails.marketplaceSubscriptionId" options="marketplace-subscription-id">
            <help short="Marketplace Subscription Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.offerId" options="offer-id" required="True">
            <help short="Offer Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.planId" options="plan-id" required="True">
            <help short="Plan Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.publisherId" options="publisher-id">
            <help short="Publisher Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.termUnit" options="term-unit">
            <help short="Term Unit"/>
          </arg>
        </arg>
        <arg type="array<string>" var="$resource.properties.privateIPs" options="private-i-ps" group="Properties">
          <help short="Private IPs of the resource"/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$resource.properties.storageSku" options="storage-sku" group="Properties">
          <help short="Storage Sku"/>
        </arg>
        <arg type="object" var="$resource.properties.userDetails" options="user-details" group="Properties">
          <help short="User Details"/>
          <arg type="string" var="$resource.properties.userDetails.email" options="email" required="True">
            <help short="User Email"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="FileSystems_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
          <request method="put">
            <path>
              <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                <format pattern="^[a-zA-Z0-9_-]*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-19&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$resource.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$resource.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$resource.identity.systemAssigned"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="adminPassword" arg="$resource.properties.adminPassword" required="True" secret="True"/>
                    <prop type="string" name="availabilityZone" arg="$resource.properties.availabilityZone"/>
                    <prop type="string" name="clusterLoginUrl" arg="$resource.properties.clusterLoginUrl"/>
                    <prop type="string" name="delegatedSubnetId" arg="$resource.properties.delegatedSubnetId" required="True"/>
                    <prop type="object" name="marketplaceDetails" arg="$resource.properties.marketplaceDetails" required="True">
                      <prop type="string" name="marketplaceSubscriptionId" arg="$resource.properties.marketplaceDetails.marketplaceSubscriptionId"/>
                      <prop type="string" name="offerId" arg="$resource.properties.marketplaceDetails.offerId" required="True"/>
                      <prop type="string" name="planId" arg="$resource.properties.marketplaceDetails.planId" required="True"/>
                      <prop type="string" name="publisherId" arg="$resource.properties.marketplaceDetails.publisherId"/>
                      <prop type="string" name="termUnit" arg="$resource.properties.marketplaceDetails.termUnit"/>
                    </prop>
                    <prop type="array<string>" name="privateIPs" arg="$resource.properties.privateIPs">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="storageSku" arg="$resource.properties.storageSku" required="True"/>
                    <prop type="object" name="userDetails" arg="$resource.properties.userDetails" required="True">
                      <prop type="string" name="email" arg="$resource.properties.userDetails.email" required="True" secret="True"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Qumulo.Storage/fileSystems/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="adminPassword" required="True" secret="True"/>
                    <prop type="string" name="availabilityZone"/>
                    <prop type="string" name="clusterLoginUrl"/>
                    <prop type="string" name="delegatedSubnetId" required="True"/>
                    <prop type="object" name="marketplaceDetails" required="True">
                      <prop type="string" name="marketplaceSubscriptionId"/>
                      <prop readOnly="True" type="string" name="marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" required="True"/>
                      <prop type="string" name="planId" required="True"/>
                      <prop type="string" name="publisherId"/>
                      <prop type="string" name="termUnit"/>
                    </prop>
                    <prop type="array<string>" name="privateIPs">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageSku" required="True"/>
                    <prop type="object" name="userDetails" required="True">
                      <prop type="string" name="email" required="True" secret="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-06-19">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2024-06-19" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyNC0wNi0xOQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
          <help short="Name of the File System resource"/>
          <format pattern="^[a-zA-Z0-9_-]*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$resource.identity.type" options="type" hide="True" group="Identity">
          <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.adminPassword" options="admin-password" group="Properties">
          <help short="Initial administrator password of the resource"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.availabilityZone" options="availability-zone" group="Properties">
          <help short="Availability zone"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.clusterLoginUrl" options="cluster-login-url" group="Properties">
          <help short="File system Id of the resource"/>
        </arg>
        <arg type="string" var="$resource.properties.delegatedSubnetId" options="delegated-subnet-id" group="Properties">
          <help short="Delegated subnet id for Vnet injection"/>
        </arg>
        <arg type="object" var="$resource.properties.marketplaceDetails" options="marketplace-details" group="Properties">
          <help short="Marketplace details"/>
          <arg nullable="True" type="string" var="$resource.properties.marketplaceDetails.marketplaceSubscriptionId" options="marketplace-subscription-id">
            <help short="Marketplace Subscription Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.offerId" options="offer-id">
            <help short="Offer Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.planId" options="plan-id">
            <help short="Plan Id"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.marketplaceDetails.publisherId" options="publisher-id">
            <help short="Publisher Id"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.marketplaceDetails.termUnit" options="term-unit">
            <help short="Term Unit"/>
          </arg>
        </arg>
        <arg nullable="True" type="array<string>" var="$resource.properties.privateIPs" options="private-i-ps" group="Properties">
          <help short="Private IPs of the resource"/>
          <item nullable="True" type="string"/>
        </arg>
        <arg type="string" var="$resource.properties.storageSku" options="storage-sku" group="Properties">
          <help short="Storage Sku"/>
        </arg>
        <arg type="object" var="$resource.properties.userDetails" options="user-details" group="Properties">
          <help short="User Details"/>
          <arg type="string" var="$resource.properties.userDetails.email" options="email">
            <help short="User Email"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg nullable="True" type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="FileSystems_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
          <request method="get">
            <path>
              <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                <format pattern="^[a-zA-Z0-9_-]*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-19&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="LiftrBase.Storage.FileSystemResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Qumulo.Storage/fileSystems/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="adminPassword" required="True" secret="True"/>
                    <prop type="string" name="availabilityZone"/>
                    <prop type="string" name="clusterLoginUrl"/>
                    <prop type="string" name="delegatedSubnetId" required="True"/>
                    <prop type="object" name="marketplaceDetails" required="True">
                      <prop type="string" name="marketplaceSubscriptionId"/>
                      <prop readOnly="True" type="string" name="marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" required="True"/>
                      <prop type="string" name="planId" required="True"/>
                      <prop type="string" name="publisherId"/>
                      <prop type="string" name="termUnit"/>
                    </prop>
                    <prop type="array<string>" name="privateIPs">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageSku" required="True"/>
                    <prop type="object" name="userDetails" required="True">
                      <prop type="string" name="email" required="True" secret="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity">
                <prop type="string" name="type" arg="$resource.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="adminPassword" arg="$resource.properties.adminPassword" required="True" secret="True"/>
                <prop type="string" name="availabilityZone" arg="$resource.properties.availabilityZone"/>
                <prop type="string" name="clusterLoginUrl" arg="$resource.properties.clusterLoginUrl"/>
                <prop type="string" name="delegatedSubnetId" arg="$resource.properties.delegatedSubnetId" required="True"/>
                <prop type="object" name="marketplaceDetails" arg="$resource.properties.marketplaceDetails" required="True">
                  <prop type="string" name="marketplaceSubscriptionId" arg="$resource.properties.marketplaceDetails.marketplaceSubscriptionId"/>
                  <prop type="string" name="offerId" arg="$resource.properties.marketplaceDetails.offerId" required="True"/>
                  <prop type="string" name="planId" arg="$resource.properties.marketplaceDetails.planId" required="True"/>
                  <prop type="string" name="publisherId" arg="$resource.properties.marketplaceDetails.publisherId"/>
                  <prop type="string" name="termUnit" arg="$resource.properties.marketplaceDetails.termUnit"/>
                </prop>
                <prop type="array<string>" name="privateIPs" arg="$resource.properties.privateIPs">
                  <item type="string"/>
                </prop>
                <prop type="string" name="storageSku" arg="$resource.properties.storageSku" required="True"/>
                <prop type="object" name="userDetails" arg="$resource.properties.userDetails" required="True">
                  <prop type="string" name="email" arg="$resource.properties.userDetails.email" required="True" secret="True"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$resource.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="FileSystems_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
          <request method="put">
            <path>
              <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                <format pattern="^[a-zA-Z0-9_-]*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-06-19&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@LiftrBase.Storage.FileSystemResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="identity">
      <command name="assign" version="2024-06-19">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2024-06-19" subresource="identity" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyNC0wNi0xOQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
            <help short="Name of the File System resource"/>
            <format pattern="^[a-zA-Z0-9_-]*$"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Resource.identity">
          <arg type="string" var="$resource.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Resource.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$resource.identity.userAssigned" options="mi-user-assigned user-assigned" group="Resource.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="resource">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="FileSystems_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
            <request method="get">
              <path>
                <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                  <format pattern="^[a-zA-Z0-9_-]*$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                  <format minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-06-19&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="LiftrBase.Storage.FileSystemResource_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Qumulo.Storage/fileSystems/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="adminPassword" required="True" secret="True"/>
                      <prop type="string" name="availabilityZone"/>
                      <prop type="string" name="clusterLoginUrl"/>
                      <prop type="string" name="delegatedSubnetId" required="True"/>
                      <prop type="object" name="marketplaceDetails" required="True">
                        <prop type="string" name="marketplaceSubscriptionId"/>
                        <prop readOnly="True" type="string" name="marketplaceSubscriptionStatus">
                          <enum>
                            <item value="&quot;PendingFulfillmentStart&quot;"/>
                            <item value="&quot;Subscribed&quot;"/>
                            <item value="&quot;Suspended&quot;"/>
                            <item value="&quot;Unsubscribed&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="offerId" required="True"/>
                        <prop type="string" name="planId" required="True"/>
                        <prop type="string" name="publisherId"/>
                        <prop type="string" name="termUnit"/>
                      </prop>
                      <prop type="array<string>" name="privateIPs">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleted&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageSku" required="True"/>
                      <prop type="object" name="userDetails" required="True">
                        <prop type="string" name="email" required="True" secret="True"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="assign" type="IdentityObject" name="resource.identity" required="True">
                <userAssigned action="assign" type="array<string>" name="userAssigned" arg="$resource.identity.userAssigned">
                  <item action="assign" type="string"/>
                </userAssigned>
                <systemAssigned action="assign" type="string" name="systemAssigned" arg="$resource.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="FileSystems_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
            <request method="put">
              <path>
                <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                  <format pattern="^[a-zA-Z0-9_-]*$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                  <format minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-06-19&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@LiftrBase.Storage.FileSystemResource_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2024-06-19">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2024-06-19" subresource="identity" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyNC0wNi0xOQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
            <help short="Name of the File System resource"/>
            <format pattern="^[a-zA-Z0-9_-]*$"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="Resource.identity">
          <arg type="string" var="$resource.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Resource.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$resource.identity.userAssigned" options="mi-user-assigned user-assigned" group="Resource.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="resource">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="FileSystems_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
            <request method="get">
              <path>
                <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                  <format pattern="^[a-zA-Z0-9_-]*$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                  <format minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-06-19&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="LiftrBase.Storage.FileSystemResource_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Qumulo.Storage/fileSystems/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="adminPassword" required="True" secret="True"/>
                      <prop type="string" name="availabilityZone"/>
                      <prop type="string" name="clusterLoginUrl"/>
                      <prop type="string" name="delegatedSubnetId" required="True"/>
                      <prop type="object" name="marketplaceDetails" required="True">
                        <prop type="string" name="marketplaceSubscriptionId"/>
                        <prop readOnly="True" type="string" name="marketplaceSubscriptionStatus">
                          <enum>
                            <item value="&quot;PendingFulfillmentStart&quot;"/>
                            <item value="&quot;Subscribed&quot;"/>
                            <item value="&quot;Suspended&quot;"/>
                            <item value="&quot;Unsubscribed&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="offerId" required="True"/>
                        <prop type="string" name="planId" required="True"/>
                        <prop type="string" name="publisherId"/>
                        <prop type="string" name="termUnit"/>
                      </prop>
                      <prop type="array<string>" name="privateIPs">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleted&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageSku" required="True"/>
                      <prop type="object" name="userDetails" required="True">
                        <prop type="string" name="email" required="True" secret="True"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="remove" type="IdentityObject" name="resource.identity" required="True">
                <userAssigned action="remove" type="array<string>" name="userAssigned" arg="$resource.identity.userAssigned">
                  <item action="remove" type="string"/>
                </userAssigned>
                <systemAssigned action="remove" type="string" name="systemAssigned" arg="$resource.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="FileSystems_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
            <request method="put">
              <path>
                <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                  <format pattern="^[a-zA-Z0-9_-]*$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                  <format minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-06-19&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@LiftrBase.Storage.FileSystemResource_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="show" version="2024-06-19">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2024-06-19" subresource="identity" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyNC0wNi0xOQ=="/>
        <argGroup name="">
          <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
            <help short="Name of the File System resource"/>
            <format pattern="^[a-zA-Z0-9_-]*$"/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="resource">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="FileSystems_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
            <request method="get">
              <path>
                <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True">
                  <format pattern="^[a-zA-Z0-9_-]*$"/>
                </param>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                  <format maxLength="90" minLength="1"/>
                </param>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                  <format minLength="1"/>
                </param>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-06-19&quot;"/>
                  <format minLength="1"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="LiftrBase.Storage.FileSystemResource_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Qumulo.Storage/fileSystems/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="uuid" name="principalId"/>
                      <prop readOnly="True" type="uuid" name="tenantId"/>
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="uuid" name="clientId"/>
                            <prop readOnly="True" type="uuid" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="adminPassword" required="True" secret="True"/>
                      <prop type="string" name="availabilityZone"/>
                      <prop type="string" name="clusterLoginUrl"/>
                      <prop type="string" name="delegatedSubnetId" required="True"/>
                      <prop type="object" name="marketplaceDetails" required="True">
                        <prop type="string" name="marketplaceSubscriptionId"/>
                        <prop readOnly="True" type="string" name="marketplaceSubscriptionStatus">
                          <enum>
                            <item value="&quot;PendingFulfillmentStart&quot;"/>
                            <item value="&quot;Subscribed&quot;"/>
                            <item value="&quot;Suspended&quot;"/>
                            <item value="&quot;Unsubscribed&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="offerId" required="True"/>
                        <prop type="string" name="planId" required="True"/>
                        <prop type="string" name="publisherId"/>
                        <prop type="string" name="termUnit"/>
                      </prop>
                      <prop type="array<string>" name="privateIPs">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState">
                        <enum>
                          <item value="&quot;Accepted&quot;"/>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Creating&quot;"/>
                          <item value="&quot;Deleted&quot;"/>
                          <item value="&quot;Deleting&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;Updating&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageSku" required="True"/>
                      <prop type="object" name="userDetails" required="True">
                        <prop type="string" name="email" required="True" secret="True"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="systemData">
                      <prop type="dateTime" name="createdAt"/>
                      <prop type="string" name="createdBy"/>
                      <prop type="string" name="createdByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="lastModifiedAt"/>
                      <prop type="string" name="lastModifiedBy"/>
                      <prop type="string" name="lastModifiedByType">
                        <enum>
                          <item value="&quot;Application&quot;"/>
                          <item value="&quot;Key&quot;"/>
                          <item value="&quot;ManagedIdentity&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
