<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2022-10-12" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyMi0xMC0xMg=="/>
  <commandGroup name="qumulo storage file-system">
    <command name="update" version="2022-10-12">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2022-10-12" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyMi0xMC0xMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
          <help short="Name of the File System resource"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$properties.identity" options="identity" hide="True" group="Properties">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$properties.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$properties.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="string" var="$properties.properties.clusterLoginUrl" options="cluster-login-url" hide="True" group="Properties">
          <help short="File system Id of the resource"/>
        </arg>
        <arg type="string" var="$properties.properties.delegatedSubnetId" options="delegated-subnet-id" hide="True" group="Properties">
          <help short="Delegated subnet id for Vnet injection"/>
        </arg>
        <arg type="object" var="$properties.properties.marketplaceDetails" options="marketplace-details" hide="True" group="Properties">
          <help short="Marketplace details"/>
          <arg type="string" var="$properties.properties.marketplaceDetails.marketplaceSubscriptionId" options="marketplace-subscription-id">
            <help short="Marketplace Subscription Id"/>
          </arg>
          <arg type="string" var="$properties.properties.marketplaceDetails.offerId" options="offer-id" required="True">
            <help short="Offer Id"/>
          </arg>
          <arg type="string" var="$properties.properties.marketplaceDetails.planId" options="plan-id" required="True">
            <help short="Plan Id"/>
          </arg>
          <arg type="string" var="$properties.properties.marketplaceDetails.publisherId" options="publisher-id" required="True">
            <help short="Publisher Id"/>
          </arg>
        </arg>
        <arg type="array<string>" var="$properties.properties.privateIPs" options="private-ips" hide="True" group="Properties">
          <help short="Private IPs of the resource"/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$properties.properties.userDetails" options="user-details" hide="True" group="Properties">
          <help short="User Details"/>
          <arg type="string" var="$properties.properties.userDetails.email" options="email" required="True">
            <help short="User Email"/>
          </arg>
        </arg>
        <arg type="object" var="$properties.tags" options="tags" group="Properties">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="FileSystems_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
          <request method="patch">
            <path>
              <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$properties.identity">
                    <prop type="string" name="type" arg="$properties.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$properties.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="string" name="clusterLoginUrl" arg="$properties.properties.clusterLoginUrl"/>
                    <prop type="string" name="delegatedSubnetId" arg="$properties.properties.delegatedSubnetId"/>
                    <prop type="object" name="marketplaceDetails" arg="$properties.properties.marketplaceDetails">
                      <prop type="string" name="marketplaceSubscriptionId" arg="$properties.properties.marketplaceDetails.marketplaceSubscriptionId"/>
                      <prop type="string" name="offerId" arg="$properties.properties.marketplaceDetails.offerId" required="True"/>
                      <prop type="string" name="planId" arg="$properties.properties.marketplaceDetails.planId" required="True"/>
                      <prop type="string" name="publisherId" arg="$properties.properties.marketplaceDetails.publisherId" required="True"/>
                    </prop>
                    <prop type="array<string>" name="privateIPs" arg="$properties.properties.privateIPs">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="userDetails" arg="$properties.properties.userDetails">
                      <prop type="string" name="email" arg="$properties.properties.userDetails.email" required="True" secret="True"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$properties.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Qumulo.Storage/fileSystems/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="adminPassword" required="True" secret="True"/>
                    <prop type="string" name="availabilityZone"/>
                    <prop type="string" name="clusterLoginUrl"/>
                    <prop type="string" name="delegatedSubnetId" required="True"/>
                    <prop type="integer32" name="initialCapacity" required="True"/>
                    <prop type="object" name="marketplaceDetails" required="True">
                      <prop type="string" name="marketplaceSubscriptionId"/>
                      <prop type="string" name="marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" required="True"/>
                      <prop type="string" name="planId" required="True"/>
                      <prop type="string" name="publisherId" required="True"/>
                    </prop>
                    <prop type="array<string>" name="privateIPs">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageSku" required="True">
                      <enum>
                        <item value="&quot;Performance&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userDetails" required="True">
                      <prop type="string" name="email" required="True" secret="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="show" version="2022-10-12" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2022-10-12" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyMi0xMC0xMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
          <help short="Name of the File System resource"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FileSystems_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
          <request method="get">
            <path>
              <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Qumulo.Storage/fileSystems/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="adminPassword" required="True" secret="True"/>
                    <prop type="string" name="availabilityZone"/>
                    <prop type="string" name="clusterLoginUrl"/>
                    <prop type="string" name="delegatedSubnetId" required="True"/>
                    <prop type="integer32" name="initialCapacity" required="True"/>
                    <prop type="object" name="marketplaceDetails" required="True">
                      <prop type="string" name="marketplaceSubscriptionId"/>
                      <prop type="string" name="marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" required="True"/>
                      <prop type="string" name="planId" required="True"/>
                      <prop type="string" name="publisherId" required="True"/>
                    </prop>
                    <prop type="array<string>" name="privateIPs">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageSku" required="True">
                      <enum>
                        <item value="&quot;Performance&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userDetails" required="True">
                      <prop type="string" name="email" required="True" secret="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-10-12" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2022-10-12" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyMi0xMC0xMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
          <help short="Name of the File System resource"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FileSystems_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
          <request method="delete">
            <path>
              <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-10-12" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/qumulo.storage/filesystems/{}" version="2022-10-12" swagger="mgmt-plane/liftrqumulo/ResourceProviders/Qumulo.Storage/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9RdW11bG8uU3RvcmFnZS9maWxlU3lzdGVtcy97ZmlsZVN5c3RlbU5hbWV9/V/MjAyMi0xMC0xMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.fileSystemName" options="file-system-name name n" required="True" idPart="name">
          <help short="Name of the File System resource"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.adminPassword" options="admin-password" required="True" group="Properties">
          <help short="Initial administrator password of the resource"/>
        </arg>
        <arg type="string" var="$resource.properties.availabilityZone" options="availability-zone" group="Properties">
          <help short="Availability zone"/>
        </arg>
        <arg type="string" var="$resource.properties.clusterLoginUrl" options="cluster-login-url" group="Properties">
          <help short="File system Id of the resource"/>
        </arg>
        <arg type="string" var="$resource.properties.delegatedSubnetId" options="delegated-subnet-id" required="True" group="Properties">
          <help short="Delegated subnet id for Vnet injection"/>
        </arg>
        <arg type="integer32" var="$resource.properties.initialCapacity" options="initial-capacity" required="True" group="Properties">
          <help short="Storage capacity in TB"/>
        </arg>
        <arg type="object" var="$resource.properties.marketplaceDetails" options="marketplace-details" required="True" group="Properties">
          <help short="Marketplace details"/>
          <arg type="string" var="$resource.properties.marketplaceDetails.marketplaceSubscriptionId" options="marketplace-subscription-id">
            <help short="Marketplace Subscription Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.offerId" options="offer-id" required="True">
            <help short="Offer Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.planId" options="plan-id" required="True">
            <help short="Plan Id"/>
          </arg>
          <arg type="string" var="$resource.properties.marketplaceDetails.publisherId" options="publisher-id" required="True">
            <help short="Publisher Id"/>
          </arg>
        </arg>
        <arg type="array<string>" var="$resource.properties.privateIPs" options="private-ips" group="Properties">
          <help short="Private IPs of the resource"/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$resource.properties.storageSku" options="storage-sku" required="True" group="Properties">
          <help short="Storage Sku"/>
          <enum>
            <item name="Performance" value="&quot;Performance&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$resource.properties.userDetails" options="user-details" required="True" group="Properties">
          <help short="User Details"/>
          <arg type="string" var="$resource.properties.userDetails.email" options="email" required="True">
            <help short="User Email"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Resource">
        <arg type="object" var="$resource.identity" options="identity" hide="True" group="Resource">
          <help short="The managed service identities assigned to this resource."/>
          <arg type="string" var="$resource.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$resource.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="FileSystems_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Qumulo.Storage/fileSystems/{fileSystemName}">
          <request method="put">
            <path>
              <param type="string" name="fileSystemName" arg="$Path.fileSystemName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-12&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$resource.identity">
                    <prop type="string" name="type" arg="$resource.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$resource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="adminPassword" arg="$resource.properties.adminPassword" required="True" secret="True"/>
                    <prop type="string" name="availabilityZone" arg="$resource.properties.availabilityZone"/>
                    <prop type="string" name="clusterLoginUrl" arg="$resource.properties.clusterLoginUrl"/>
                    <prop type="string" name="delegatedSubnetId" arg="$resource.properties.delegatedSubnetId" required="True"/>
                    <prop type="integer32" name="initialCapacity" arg="$resource.properties.initialCapacity" required="True"/>
                    <prop type="object" name="marketplaceDetails" arg="$resource.properties.marketplaceDetails" required="True">
                      <prop type="string" name="marketplaceSubscriptionId" arg="$resource.properties.marketplaceDetails.marketplaceSubscriptionId"/>
                      <prop type="string" name="offerId" arg="$resource.properties.marketplaceDetails.offerId" required="True"/>
                      <prop type="string" name="planId" arg="$resource.properties.marketplaceDetails.planId" required="True"/>
                      <prop type="string" name="publisherId" arg="$resource.properties.marketplaceDetails.publisherId" required="True"/>
                    </prop>
                    <prop type="array<string>" name="privateIPs" arg="$resource.properties.privateIPs">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="storageSku" arg="$resource.properties.storageSku" required="True">
                      <enum>
                        <item value="&quot;Performance&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userDetails" arg="$resource.properties.userDetails" required="True">
                      <prop type="string" name="email" arg="$resource.properties.userDetails.email" required="True" secret="True"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Qumulo.Storage/fileSystems/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="adminPassword" required="True" secret="True"/>
                    <prop type="string" name="availabilityZone"/>
                    <prop type="string" name="clusterLoginUrl"/>
                    <prop type="string" name="delegatedSubnetId" required="True"/>
                    <prop type="integer32" name="initialCapacity" required="True"/>
                    <prop type="object" name="marketplaceDetails" required="True">
                      <prop type="string" name="marketplaceSubscriptionId"/>
                      <prop type="string" name="marketplaceSubscriptionStatus">
                        <enum>
                          <item value="&quot;PendingFulfillmentStart&quot;"/>
                          <item value="&quot;Subscribed&quot;"/>
                          <item value="&quot;Suspended&quot;"/>
                          <item value="&quot;Unsubscribed&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="offerId" required="True"/>
                      <prop type="string" name="planId" required="True"/>
                      <prop type="string" name="publisherId" required="True"/>
                    </prop>
                    <prop type="array<string>" name="privateIPs">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="storageSku" required="True">
                      <enum>
                        <item value="&quot;Performance&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userDetails" required="True">
                      <prop type="string" name="email" required="True" secret="True"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
