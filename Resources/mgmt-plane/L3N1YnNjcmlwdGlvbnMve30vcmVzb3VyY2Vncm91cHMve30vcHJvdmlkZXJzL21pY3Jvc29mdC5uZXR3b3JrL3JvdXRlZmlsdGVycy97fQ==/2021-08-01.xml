<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/routefilters/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9yb3V0ZUZpbHRlcnMve3JvdXRlRmlsdGVyTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
  <commandGroup name="network route-filter">
    <command name="show" version="2021-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/routefilters/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9yb3V0ZUZpbHRlcnMve3JvdXRlRmlsdGVyTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeFilterName" options="name n" required="True" idPart="name">
          <help short="Name of the route filter."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="Expands referenced express route bgp peering resources."/>
        </arg>
      </argGroup>
      <operation operationId="RouteFilters_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeFilterName" arg="$Path.routeFilterName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="array<@ExpressRouteCircuitPeering_read>" name="ipv6Peerings">
                      <item type="@ExpressRouteCircuitPeering_read"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="peerings">
                      <item type="object" cls="ExpressRouteCircuitPeering_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="integer32" name="azureASN"/>
                          <prop type="array<object>" name="connections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authorizationKey"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="object" name="ipv6CircuitConnectionConfig">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                    <enum>
                                      <item value="&quot;Connected&quot;"/>
                                      <item value="&quot;Connecting&quot;"/>
                                      <item value="&quot;Disconnected&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="object" name="expressRouteConnection">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="string" name="gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig">
                            <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix"/>
                            <prop type="@SubResource_read" name="routeFilter"/>
                            <prop type="string" name="secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                            <prop type="array<string>" name="advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN"/>
                            <prop type="integer32" name="legacyMode"/>
                            <prop type="string" name="routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="peeredConnections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authResourceGuid"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="connectionName"/>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="string" name="peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="routeFilter" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="string" name="secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey"/>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="stats">
                            <prop type="integer64" name="primarybytesIn"/>
                            <prop type="integer64" name="primarybytesOut"/>
                            <prop type="integer64" name="secondarybytesIn"/>
                            <prop type="integer64" name="secondarybytesOut"/>
                          </prop>
                          <prop type="integer32" name="vlanId"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="rules">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="access" required="True">
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                              <item value="&quot;Deny&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="communities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="routeFilterRuleType" required="True">
                            <enum>
                              <item value="&quot;Community&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2021-08-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/routefilters/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9yb3V0ZUZpbHRlcnMve3JvdXRlRmlsdGVyTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeFilterName" options="name n" required="True" idPart="name">
          <help short="Name of the route filter."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="RouteFilters_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeFilterName" arg="$Path.routeFilterName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2021-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/routefilters/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9yb3V0ZUZpbHRlcnMve3JvdXRlRmlsdGVyTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeFilterName" options="name n" required="True" idPart="name">
          <help short="Name of the route filter."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$routeFilterParameters.location" options="location l" required="True" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="object" var="$routeFilterParameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$routeFilterParameters.properties.rules" options="rules" hide="True" group="Properties">
          <help short="Collection of RouteFilterRules contained within a route filter."/>
          <item type="object">
            <arg type="ResourceId" var="$routeFilterParameters.properties.rules[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
            </arg>
            <arg type="ResourceLocation" var="$routeFilterParameters.properties.rules[].location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg type="string" var="$routeFilterParameters.properties.rules[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$routeFilterParameters.properties.rules[].properties.access" options="access" group="Properties">
              <help short="The access type of the rule."/>
              <enum>
                <item name="Allow" value="&quot;Allow&quot;"/>
                <item name="Deny" value="&quot;Deny&quot;"/>
              </enum>
            </arg>
            <arg type="array<string>" var="$routeFilterParameters.properties.rules[].properties.communities" options="communities" group="Properties">
              <help short="The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']."/>
              <item type="string"/>
            </arg>
            <arg type="string" var="$routeFilterParameters.properties.rules[].properties.routeFilterRuleType" options="route-filter-rule-type" group="Properties">
              <help short="The rule type of the rule."/>
              <enum>
                <item name="Community" value="&quot;Community&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="RouteFilterParameters">
        <arg type="ResourceId" var="$routeFilterParameters.id" options="id" hide="True" group="RouteFilterParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
        </arg>
      </argGroup>
      <operation operationId="RouteFilters_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeFilterName" arg="$Path.routeFilterName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="routeFilterParameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$routeFilterParameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$routeFilterParameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="rules" arg="$routeFilterParameters.properties.rules">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$routeFilterParameters.properties.rules[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" arg="$routeFilterParameters.properties.rules[].location"/>
                        <prop type="string" name="name" arg="$routeFilterParameters.properties.rules[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="access" arg="$routeFilterParameters.properties.rules[].properties.access" required="True">
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                              <item value="&quot;Deny&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="communities" arg="$routeFilterParameters.properties.rules[].properties.communities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="routeFilterRuleType" arg="$routeFilterParameters.properties.rules[].properties.routeFilterRuleType" required="True">
                            <enum>
                              <item value="&quot;Community&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$routeFilterParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="array<@ExpressRouteCircuitPeering_read>" name="ipv6Peerings">
                      <item type="@ExpressRouteCircuitPeering_read"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="peerings">
                      <item type="object" cls="ExpressRouteCircuitPeering_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="integer32" name="azureASN"/>
                          <prop type="array<object>" name="connections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authorizationKey"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="object" name="ipv6CircuitConnectionConfig">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                    <enum>
                                      <item value="&quot;Connected&quot;"/>
                                      <item value="&quot;Connecting&quot;"/>
                                      <item value="&quot;Disconnected&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="object" name="expressRouteConnection">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="string" name="gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig">
                            <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix"/>
                            <prop type="@SubResource_read" name="routeFilter"/>
                            <prop type="string" name="secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                            <prop type="array<string>" name="advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN"/>
                            <prop type="integer32" name="legacyMode"/>
                            <prop type="string" name="routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="peeredConnections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authResourceGuid"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="connectionName"/>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="string" name="peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="routeFilter" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="string" name="secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey"/>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="stats">
                            <prop type="integer64" name="primarybytesIn"/>
                            <prop type="integer64" name="primarybytesOut"/>
                            <prop type="integer64" name="secondarybytesIn"/>
                            <prop type="integer64" name="secondarybytesOut"/>
                          </prop>
                          <prop type="integer32" name="vlanId"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="rules">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="access" required="True">
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                              <item value="&quot;Deny&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="communities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="routeFilterRuleType" required="True">
                            <enum>
                              <item value="&quot;Community&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2021-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/routefilters/{}" version="2021-08-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9yb3V0ZUZpbHRlcnMve3JvdXRlRmlsdGVyTmFtZX0=/V/MjAyMS0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.routeFilterName" options="name n" required="True" idPart="name">
          <help short="Name of the route filter."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$routeFilterParameters.location" options="location l" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="object" var="$routeFilterParameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$routeFilterParameters.properties.rules" options="rules" hide="True" group="Properties">
          <help short="Collection of RouteFilterRules contained within a route filter."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="ResourceId" var="$routeFilterParameters.properties.rules[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
            </arg>
            <arg nullable="True" type="ResourceLocation" var="$routeFilterParameters.properties.rules[].location" options="location l">
              <help short="Resource location."/>
            </arg>
            <arg nullable="True" type="string" var="$routeFilterParameters.properties.rules[].name" options="name">
              <help short="The name of the resource that is unique within a resource group. This name can be used to access the resource."/>
            </arg>
            <arg type="string" var="$routeFilterParameters.properties.rules[].properties.access" options="access" group="Properties">
              <help short="The access type of the rule."/>
              <enum>
                <item name="Allow" value="&quot;Allow&quot;"/>
                <item name="Deny" value="&quot;Deny&quot;"/>
              </enum>
            </arg>
            <arg type="array<string>" var="$routeFilterParameters.properties.rules[].properties.communities" options="communities" group="Properties">
              <help short="The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']."/>
              <item nullable="True" type="string"/>
            </arg>
            <arg type="string" var="$routeFilterParameters.properties.rules[].properties.routeFilterRuleType" options="route-filter-rule-type" group="Properties">
              <help short="The rule type of the rule."/>
              <enum>
                <item name="Community" value="&quot;Community&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="RouteFilterParameters">
        <arg nullable="True" type="ResourceId" var="$routeFilterParameters.id" options="id" hide="True" group="RouteFilterParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
        </arg>
      </argGroup>
      <operation operationId="RouteFilters_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeFilterName" arg="$Path.routeFilterName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="RouteFilter_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="array<@ExpressRouteCircuitPeering_read>" name="ipv6Peerings">
                      <item type="@ExpressRouteCircuitPeering_read"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="peerings">
                      <item type="object" cls="ExpressRouteCircuitPeering_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="integer32" name="azureASN"/>
                          <prop type="array<object>" name="connections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/connections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authorizationKey"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="object" name="ipv6CircuitConnectionConfig">
                                  <prop type="string" name="addressPrefix"/>
                                  <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                    <enum>
                                      <item value="&quot;Connected&quot;"/>
                                      <item value="&quot;Connecting&quot;"/>
                                      <item value="&quot;Disconnected&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="object" name="expressRouteConnection">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="string" name="gatewayManagerEtag"/>
                          <prop type="object" name="ipv6PeeringConfig">
                            <prop type="@ExpressRouteCircuitPeeringConfig_read" name="microsoftPeeringConfig"/>
                            <prop type="string" name="primaryPeerAddressPrefix"/>
                            <prop type="@SubResource_read" name="routeFilter"/>
                            <prop type="string" name="secondaryPeerAddressPrefix"/>
                            <prop type="string" name="state">
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="lastModifiedBy"/>
                          <prop type="object" name="microsoftPeeringConfig" cls="ExpressRouteCircuitPeeringConfig_read">
                            <prop type="array<string>" name="advertisedCommunities">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="advertisedPublicPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop readOnly="True" type="string" name="advertisedPublicPrefixesState">
                              <enum>
                                <item value="&quot;Configured&quot;"/>
                                <item value="&quot;Configuring&quot;"/>
                                <item value="&quot;NotConfigured&quot;"/>
                                <item value="&quot;ValidationNeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop type="integer32" name="customerASN"/>
                            <prop type="integer32" name="legacyMode"/>
                            <prop type="string" name="routingRegistryName"/>
                          </prop>
                          <prop type="integer64" name="peerASN">
                            <format maximum="4294967295" minimum="1"/>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="peeredConnections">
                            <item type="object">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteCircuits/{}/peerings/{}/peerConnections/{}"/>
                              </prop>
                              <prop type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="addressPrefix"/>
                                <prop type="string" name="authResourceGuid"/>
                                <prop readOnly="True" type="string" name="circuitConnectionStatus">
                                  <enum>
                                    <item value="&quot;Connected&quot;"/>
                                    <item value="&quot;Connecting&quot;"/>
                                    <item value="&quot;Disconnected&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="connectionName"/>
                                <prop type="@SubResource_read" name="expressRouteCircuitPeering"/>
                                <prop type="@SubResource_read" name="peerExpressRouteCircuitPeering"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop type="string" name="peeringType">
                            <enum>
                              <item value="&quot;AzurePrivatePeering&quot;"/>
                              <item value="&quot;AzurePublicPeering&quot;"/>
                              <item value="&quot;MicrosoftPeering&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="primaryAzurePort"/>
                          <prop type="string" name="primaryPeerAddressPrefix"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="routeFilter" cls="SubResource_read">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="string" name="secondaryAzurePort"/>
                          <prop type="string" name="secondaryPeerAddressPrefix"/>
                          <prop type="string" name="sharedKey"/>
                          <prop type="string" name="state">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="stats">
                            <prop type="integer64" name="primarybytesIn"/>
                            <prop type="integer64" name="primarybytesOut"/>
                            <prop type="integer64" name="secondarybytesIn"/>
                            <prop type="integer64" name="secondarybytesOut"/>
                          </prop>
                          <prop type="integer32" name="vlanId"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="rules">
                      <item type="object">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="access" required="True">
                            <enum>
                              <item value="&quot;Allow&quot;"/>
                              <item value="&quot;Deny&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<string>" name="communities" required="True">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="routeFilterRuleType" required="True">
                            <enum>
                              <item value="&quot;Community&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="routeFilterParameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$routeFilterParameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$routeFilterParameters.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="array<object>" name="rules" arg="$routeFilterParameters.properties.rules">
                  <item type="object">
                    <prop type="ResourceId" name="id" arg="$routeFilterParameters.properties.rules[].id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeFilters/{}/routeFilterRules/{}"/>
                    </prop>
                    <prop type="ResourceLocation" name="location" arg="$routeFilterParameters.properties.rules[].location"/>
                    <prop type="string" name="name" arg="$routeFilterParameters.properties.rules[].name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="access" arg="$routeFilterParameters.properties.rules[].properties.access" required="True">
                        <enum>
                          <item value="&quot;Allow&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="communities" arg="$routeFilterParameters.properties.rules[].properties.communities" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="routeFilterRuleType" arg="$routeFilterParameters.properties.rules[].properties.routeFilterRuleType" required="True">
                        <enum>
                          <item value="&quot;Community&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </item>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$routeFilterParameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="RouteFilters_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="routeFilterName" arg="$Path.routeFilterName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-08-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@RouteFilter_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
