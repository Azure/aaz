<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionendpoints/{}" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25FbmRwb2ludHMve2RhdGFDb2xsZWN0aW9uRW5kcG9pbnROYW1lfQ==/V/MjAyMi0wNi0wMQ=="/>
  <commandGroup name="monitor data-collection endpoint">
    <command name="show" version="2022-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionendpoints/{}" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25FbmRwb2ludHMve2RhdGFDb2xsZWN0aW9uRW5kcG9pbnROYW1lfQ==/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataCollectionEndpointName" options="data-collection-endpoint-name name n" required="True" idPart="name">
          <help short="The name of the data collection endpoint. The name is case insensitive."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DataCollectionEndpoints_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}">
          <request method="get">
            <path>
              <param type="string" name="dataCollectionEndpointName" arg="$Path.dataCollectionEndpointName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/dataCollectionEndpoints/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="string" name="kind">
                    <enum>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="configurationAccess">
                      <prop readOnly="True" type="string" name="endpoint"/>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop readOnly="True" type="object" name="failoverConfiguration">
                      <prop type="string" name="activeLocation"/>
                      <prop type="array<object>" name="locations" identifiers="location">
                        <item type="object">
                          <prop type="string" name="location"/>
                          <prop type="string" name="provisioningStatus">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="immutableId"/>
                    <prop type="object" name="logsIngestion">
                      <prop readOnly="True" type="string" name="endpoint"/>
                    </prop>
                    <prop readOnly="True" type="object" name="metadata">
                      <prop readOnly="True" type="string" name="provisionedBy"/>
                      <prop readOnly="True" type="string" name="provisionedByResourceId"/>
                    </prop>
                    <prop type="object" name="metricsIngestion">
                      <prop readOnly="True" type="string" name="endpoint"/>
                    </prop>
                    <prop type="object" name="networkAcls">
                      <prop type="string" name="publicNetworkAccess">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;SecuredByPerimeter&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateLinkScopedResources">
                      <item type="object">
                        <prop type="string" name="resourceId"/>
                        <prop type="string" name="scopeId"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-06-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionendpoints/{}" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25FbmRwb2ludHMve2RhdGFDb2xsZWN0aW9uRW5kcG9pbnROYW1lfQ==/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataCollectionEndpointName" options="data-collection-endpoint-name name n" required="True" idPart="name">
          <help short="The name of the data collection endpoint. The name is case insensitive."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DataCollectionEndpoints_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}">
          <request method="delete">
            <path>
              <param type="string" name="dataCollectionEndpointName" arg="$Path.dataCollectionEndpointName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionendpoints/{}" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25FbmRwb2ludHMve2RhdGFDb2xsZWN0aW9uRW5kcG9pbnROYW1lfQ==/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataCollectionEndpointName" options="data-collection-endpoint-name name n" required="True" idPart="name">
          <help short="The name of the data collection endpoint. The name is case insensitive."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="object" var="$body.identity" options="identity" group="">
          <help short="Managed service identity of the resource."/>
          <arg type="string" var="$body.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="string" var="$body.kind" options="kind" group="">
          <help short="The kind of the resource."/>
          <enum>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg type="ResourceLocation" var="$body.location" options="location l" group="">
          <help short="The geo-location where the resource lives."/>
        </arg>
        <arg type="string" var="$body.properties.description" options="description" group="">
          <help short="Description of the association."/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Network Acls">
        <arg type="string" var="$body.properties.networkAcls.publicNetworkAccess" options="public-network-access" group="Network Acls">
          <help short="The configuration to set whether network access from public internet to the endpoints are allowed."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="SecuredByPerimeter" value="&quot;SecuredByPerimeter&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.immutableId" options="immutable-id" hide="True" group="Properties">
          <help short="The immutable ID of this data collection endpoint resource. This property is READ-ONLY."/>
        </arg>
      </argGroup>
      <operation operationId="DataCollectionEndpoints_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}">
          <request method="put">
            <path>
              <param type="string" name="dataCollectionEndpointName" arg="$Path.dataCollectionEndpointName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$body.identity">
                    <prop type="string" name="type" arg="$body.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="string" name="kind" arg="$body.kind">
                    <enum>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description" arg="$body.properties.description"/>
                    <prop type="string" name="immutableId" arg="$body.properties.immutableId"/>
                    <prop type="object" name="networkAcls">
                      <prop type="string" name="publicNetworkAccess" arg="$body.properties.networkAcls.publicNetworkAccess">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;SecuredByPerimeter&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/dataCollectionEndpoints/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="string" name="kind">
                    <enum>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="configurationAccess">
                      <prop readOnly="True" type="string" name="endpoint"/>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop readOnly="True" type="object" name="failoverConfiguration">
                      <prop type="string" name="activeLocation"/>
                      <prop type="array<object>" name="locations" identifiers="location">
                        <item type="object">
                          <prop type="string" name="location"/>
                          <prop type="string" name="provisioningStatus">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="immutableId"/>
                    <prop type="object" name="logsIngestion">
                      <prop readOnly="True" type="string" name="endpoint"/>
                    </prop>
                    <prop readOnly="True" type="object" name="metadata">
                      <prop readOnly="True" type="string" name="provisionedBy"/>
                      <prop readOnly="True" type="string" name="provisionedByResourceId"/>
                    </prop>
                    <prop type="object" name="metricsIngestion">
                      <prop readOnly="True" type="string" name="endpoint"/>
                    </prop>
                    <prop type="object" name="networkAcls">
                      <prop type="string" name="publicNetworkAccess">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;SecuredByPerimeter&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateLinkScopedResources">
                      <item type="object">
                        <prop type="string" name="resourceId"/>
                        <prop type="string" name="scopeId"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/datacollectionendpoints/{}" version="2022-06-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvZGF0YUNvbGxlY3Rpb25FbmRwb2ludHMve2RhdGFDb2xsZWN0aW9uRW5kcG9pbnROYW1lfQ==/V/MjAyMi0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dataCollectionEndpointName" options="data-collection-endpoint-name name n" required="True" idPart="name">
          <help short="The name of the data collection endpoint. The name is case insensitive."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="object" var="$body.identity" options="identity" group="">
          <help short="Managed service identity of the resource."/>
          <arg type="string" var="$body.identity.type" options="type">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$body.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.kind" options="kind" group="">
          <help short="The kind of the resource."/>
          <enum>
            <item name="Linux" value="&quot;Linux&quot;"/>
            <item name="Windows" value="&quot;Windows&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.description" options="description" group="">
          <help short="Description of the association."/>
        </arg>
        <arg nullable="True" type="object" var="$body.tags" options="tags" group="">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Network Acls">
        <arg nullable="True" type="string" var="$body.properties.networkAcls.publicNetworkAccess" options="public-network-access" group="Network Acls">
          <help short="The configuration to set whether network access from public internet to the endpoints are allowed."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="SecuredByPerimeter" value="&quot;SecuredByPerimeter&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$body.properties.immutableId" options="immutable-id" hide="True" group="Properties">
          <help short="The immutable ID of this data collection endpoint resource. This property is READ-ONLY."/>
        </arg>
      </argGroup>
      <operation operationId="DataCollectionEndpoints_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}">
          <request method="get">
            <path>
              <param type="string" name="dataCollectionEndpointName" arg="$Path.dataCollectionEndpointName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DataCollectionEndpointResource_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/dataCollectionEndpoints/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="string" name="kind">
                    <enum>
                      <item value="&quot;Linux&quot;"/>
                      <item value="&quot;Windows&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="configurationAccess">
                      <prop readOnly="True" type="string" name="endpoint"/>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop readOnly="True" type="object" name="failoverConfiguration">
                      <prop type="string" name="activeLocation"/>
                      <prop type="array<object>" name="locations" identifiers="location">
                        <item type="object">
                          <prop type="string" name="location"/>
                          <prop type="string" name="provisioningStatus">
                            <enum>
                              <item value="&quot;Canceled&quot;"/>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="immutableId"/>
                    <prop type="object" name="logsIngestion">
                      <prop readOnly="True" type="string" name="endpoint"/>
                    </prop>
                    <prop readOnly="True" type="object" name="metadata">
                      <prop readOnly="True" type="string" name="provisionedBy"/>
                      <prop readOnly="True" type="string" name="provisionedByResourceId"/>
                    </prop>
                    <prop type="object" name="metricsIngestion">
                      <prop readOnly="True" type="string" name="endpoint"/>
                    </prop>
                    <prop type="object" name="networkAcls">
                      <prop type="string" name="publicNetworkAccess">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;SecuredByPerimeter&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateLinkScopedResources">
                      <item type="object">
                        <prop type="string" name="resourceId"/>
                        <prop type="string" name="scopeId"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$body.identity">
                <prop type="string" name="type" arg="$body.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$body.identity.userAssignedIdentities">
                  <additionalProp>
                    <item nullable="True" type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="string" name="kind" arg="$body.kind">
                <enum>
                  <item value="&quot;Linux&quot;"/>
                  <item value="&quot;Windows&quot;"/>
                </enum>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="description" arg="$body.properties.description"/>
                <prop type="string" name="immutableId" arg="$body.properties.immutableId"/>
                <prop type="object" name="networkAcls">
                  <prop type="string" name="publicNetworkAccess" arg="$body.properties.networkAcls.publicNetworkAccess">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                      <item value="&quot;SecuredByPerimeter&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$body.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="DataCollectionEndpoints_Create">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/dataCollectionEndpoints/{dataCollectionEndpointName}">
          <request method="put">
            <path>
              <param type="string" name="dataCollectionEndpointName" arg="$Path.dataCollectionEndpointName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-06-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@DataCollectionEndpointResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
