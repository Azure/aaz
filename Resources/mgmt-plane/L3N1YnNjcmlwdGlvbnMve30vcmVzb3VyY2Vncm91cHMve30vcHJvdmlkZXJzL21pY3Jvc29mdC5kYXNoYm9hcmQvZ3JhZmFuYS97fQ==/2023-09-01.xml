<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dashboard/grafana/{}" version="2023-09-01" swagger="mgmt-plane/dashboard/ResourceProviders/Microsoft.Dashboard/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGFzaGJvYXJkL2dyYWZhbmEve3dvcmtzcGFjZU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="grafana">
    <command name="show" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dashboard/grafana/{}" version="2023-09-01" swagger="mgmt-plane/dashboard/ResourceProviders/Microsoft.Dashboard/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGFzaGJvYXJkL2dyYWZhbmEve3dvcmtzcGFjZU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name name n" required="True" idPart="name">
          <help short="The workspace name of Azure Managed Grafana."/>
        </arg>
      </argGroup>
      <operation operationId="Grafana_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Dashboard/grafana/{workspaceName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Dashboard/grafana/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="apiKey">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="autoGeneratedDomainNameLabelScope">
                      <enum>
                        <item value="&quot;TenantReuse&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deterministicOutboundIP">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="endpoint"/>
                    <prop type="object" name="enterpriseConfigurations">
                      <prop type="string" name="marketplaceAutoRenew">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="marketplacePlanId"/>
                    </prop>
                    <prop type="object" name="grafanaConfigurations">
                      <prop type="object" name="smtp">
                        <prop type="boolean" name="enabled">
                          <default value="false"/>
                        </prop>
                        <prop type="string" name="fromAddress"/>
                        <prop type="string" name="fromName"/>
                        <prop type="string" name="host"/>
                        <prop type="string" name="password" secret="True"/>
                        <prop type="boolean" name="skipVerify"/>
                        <prop type="string" name="startTLSPolicy">
                          <enum>
                            <item value="&quot;MandatoryStartTLS&quot;"/>
                            <item value="&quot;NoStartTLS&quot;"/>
                            <item value="&quot;OpportunisticStartTLS&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="user"/>
                      </prop>
                    </prop>
                    <prop type="object" name="grafanaIntegrations">
                      <prop type="array<object>" name="azureMonitorWorkspaceIntegrations">
                        <item type="object">
                          <prop type="string" name="azureMonitorWorkspaceResourceId"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="grafanaMajorVersion"/>
                    <prop type="object" name="grafanaPlugins">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="pluginId"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="grafanaVersion"/>
                    <prop readOnly="True" type="array<string>" name="outboundIPs">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Dashboard/grafana/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                          <prop type="dateTime" name="createdAt"/>
                          <prop type="string" name="createdBy"/>
                          <prop type="string" name="createdByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="lastModifiedAt"/>
                          <prop type="string" name="lastModifiedBy"/>
                          <prop type="string" name="lastModifiedByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="zoneRedundancy">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                  </prop>
                  <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dashboard/grafana/{}" version="2023-09-01" swagger="mgmt-plane/dashboard/ResourceProviders/Microsoft.Dashboard/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGFzaGJvYXJkL2dyYWZhbmEve3dvcmtzcGFjZU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name name n" required="True" idPart="name">
          <help short="The workspace name of Azure Managed Grafana."/>
        </arg>
      </argGroup>
      <operation operationId="Grafana_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Dashboard/grafana/{workspaceName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dashboard/grafana/{}" version="2023-09-01" swagger="mgmt-plane/dashboard/ResourceProviders/Microsoft.Dashboard/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGFzaGJvYXJkL2dyYWZhbmEve3dvcmtzcGFjZU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name name n" required="True" idPart="name">
          <help short="The workspace name of Azure Managed Grafana."/>
        </arg>
        <arg type="object" var="$requestBodyParameters.identity" options="identity" group="">
          <help short="The managed identity of the grafana resource."/>
          <arg type="string" var="$requestBodyParameters.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$requestBodyParameters.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$requestBodyParameters.location" options="location l" group="">
          <help short="The geo-location where the grafana resource lives"/>
        </arg>
        <arg type="object" var="$requestBodyParameters.tags" options="tags" group="">
          <help short="The tags for grafana resource."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$requestBodyParameters.properties.apiKey" options="service-account api-key" group="Properties">
          <help short="The api key setting of the Grafana instance."/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.autoGeneratedDomainNameLabelScope" options="auto-generated-domain-name-label-scope" hide="True" group="Properties">
          <help short="Scope for dns deterministic name hash calculation."/>
          <enum>
            <item name="TenantReuse" value="&quot;TenantReuse&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.deterministicOutboundIP" options="deterministic-outbound-ip i" group="Properties">
          <help short="Whether a Grafana instance uses deterministic outbound IPs."/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$requestBodyParameters.properties.enterpriseConfigurations" options="enterprise-configurations" hide="True" group="Properties">
          <help short="Enterprise settings of a Grafana instance"/>
          <arg type="string" var="$requestBodyParameters.properties.enterpriseConfigurations.marketplaceAutoRenew" options="marketplace-auto-renew">
            <help short="The AutoRenew setting of the Enterprise subscription"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$requestBodyParameters.properties.enterpriseConfigurations.marketplacePlanId" options="marketplace-plan-id">
            <help short="The Plan Id of the Azure Marketplace subscription for the Enterprise plugins"/>
          </arg>
        </arg>
        <arg type="object" var="$requestBodyParameters.properties.grafanaConfigurations" options="grafana-configurations" hide="True" group="Properties">
          <help short="Server configurations of a Grafana instance"/>
          <arg type="object" var="$requestBodyParameters.properties.grafanaConfigurations.smtp" options="smtp">
            <help short="Email server settings.&#13; https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-grafana/#smtp"/>
            <arg type="boolean" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.enabled" options="enabled">
              <help short="Enable this to allow Grafana to send email. Default is false"/>
              <default value="false"/>
            </arg>
            <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.fromAddress" options="from-address">
              <help short="Address used when sending out emails&#13; https://pkg.go.dev/net/mail#Address"/>
            </arg>
            <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.fromName" options="from-name">
              <help short="Name to be used when sending out emails. Default is &quot;Azure Managed Grafana Notification&quot;&#13; https://pkg.go.dev/net/mail#Address"/>
            </arg>
            <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.host" options="host">
              <help short="SMTP server hostname with port, e.g. test.email.net:587"/>
            </arg>
            <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.password" options="password">
              <help short="Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes"/>
            </arg>
            <arg type="boolean" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.skipVerify" options="skip-verify">
              <help short="Verify SSL for SMTP server. Default is false&#13; https://pkg.go.dev/crypto/tls#Config"/>
            </arg>
            <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.startTLSPolicy" options="start-tls-policy">
              <help short="The StartTLSPolicy setting of the SMTP configuration&#13; https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy"/>
              <enum>
                <item name="MandatoryStartTLS" value="&quot;MandatoryStartTLS&quot;"/>
                <item name="NoStartTLS" value="&quot;NoStartTLS&quot;"/>
                <item name="OpportunisticStartTLS" value="&quot;OpportunisticStartTLS&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.user" options="user">
              <help short="User of SMTP auth"/>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$requestBodyParameters.properties.grafanaIntegrations" options="grafana-integrations" hide="True" group="Properties">
          <help short="GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios."/>
          <arg type="array<object>" var="$requestBodyParameters.properties.grafanaIntegrations.azureMonitorWorkspaceIntegrations" options="azure-monitor-workspace-integrations">
            <item type="object">
              <arg type="string" var="$requestBodyParameters.properties.grafanaIntegrations.azureMonitorWorkspaceIntegrations[].azureMonitorWorkspaceResourceId" options="azure-monitor-workspace-resource-id">
                <help short="The resource Id of the connected Azure Monitor Workspace."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.grafanaMajorVersion" options="grafana-major-version v" group="Properties">
          <help short="The major Grafana software version to target."/>
        </arg>
        <arg type="object" var="$requestBodyParameters.properties.grafanaPlugins" options="grafana-plugins" hide="True" group="Properties">
          <help short="Installed plugin list of the Grafana instance. Key is plugin id, value is plugin definition."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.publicNetworkAccess" options="public-network-access p" group="Properties">
          <help short="Indicate the state for enable or disable traffic over the public interface."/>
          <default value="&quot;Enabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.zoneRedundancy" options="zone-redundancy" group="Properties">
          <help short="The zone redundancy setting of the Grafana instance."/>
          <default value="&quot;Disabled&quot;"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$requestBodyParameters.sku.name" options="sku-tier" group="Properties">
          <help short="The Sku of the grafana resource."/>
          <default value="&quot;Standard&quot;"/>
        </arg>
      </argGroup>
      <operation operationId="Grafana_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Dashboard/grafana/{workspaceName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="requestBodyParameters" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$requestBodyParameters.identity">
                    <prop type="string" name="type" arg="$requestBodyParameters.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$requestBodyParameters.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$requestBodyParameters.location"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="apiKey" arg="$requestBodyParameters.properties.apiKey">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="autoGeneratedDomainNameLabelScope" arg="$requestBodyParameters.properties.autoGeneratedDomainNameLabelScope">
                      <enum>
                        <item value="&quot;TenantReuse&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deterministicOutboundIP" arg="$requestBodyParameters.properties.deterministicOutboundIP">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="enterpriseConfigurations" arg="$requestBodyParameters.properties.enterpriseConfigurations">
                      <prop type="string" name="marketplaceAutoRenew" arg="$requestBodyParameters.properties.enterpriseConfigurations.marketplaceAutoRenew">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="marketplacePlanId" arg="$requestBodyParameters.properties.enterpriseConfigurations.marketplacePlanId"/>
                    </prop>
                    <prop type="object" name="grafanaConfigurations" arg="$requestBodyParameters.properties.grafanaConfigurations">
                      <prop type="object" name="smtp" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp">
                        <prop type="boolean" name="enabled" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.enabled">
                          <default value="false"/>
                        </prop>
                        <prop type="string" name="fromAddress" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.fromAddress"/>
                        <prop type="string" name="fromName" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.fromName"/>
                        <prop type="string" name="host" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.host"/>
                        <prop type="string" name="password" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.password" secret="True"/>
                        <prop type="boolean" name="skipVerify" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.skipVerify"/>
                        <prop type="string" name="startTLSPolicy" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.startTLSPolicy">
                          <enum>
                            <item value="&quot;MandatoryStartTLS&quot;"/>
                            <item value="&quot;NoStartTLS&quot;"/>
                            <item value="&quot;OpportunisticStartTLS&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="user" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.user"/>
                      </prop>
                    </prop>
                    <prop type="object" name="grafanaIntegrations" arg="$requestBodyParameters.properties.grafanaIntegrations">
                      <prop type="array<object>" name="azureMonitorWorkspaceIntegrations" arg="$requestBodyParameters.properties.grafanaIntegrations.azureMonitorWorkspaceIntegrations">
                        <item type="object">
                          <prop type="string" name="azureMonitorWorkspaceResourceId" arg="$requestBodyParameters.properties.grafanaIntegrations.azureMonitorWorkspaceIntegrations[].azureMonitorWorkspaceResourceId"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="grafanaMajorVersion" arg="$requestBodyParameters.properties.grafanaMajorVersion"/>
                    <prop type="object" name="grafanaPlugins" arg="$requestBodyParameters.properties.grafanaPlugins">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$requestBodyParameters.properties.publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="zoneRedundancy" arg="$requestBodyParameters.properties.zoneRedundancy">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" arg="$requestBodyParameters.sku.name" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$requestBodyParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Dashboard/grafana/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="apiKey">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="autoGeneratedDomainNameLabelScope">
                      <enum>
                        <item value="&quot;TenantReuse&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deterministicOutboundIP">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="endpoint"/>
                    <prop type="object" name="enterpriseConfigurations">
                      <prop type="string" name="marketplaceAutoRenew">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="marketplacePlanId"/>
                    </prop>
                    <prop type="object" name="grafanaConfigurations">
                      <prop type="object" name="smtp">
                        <prop type="boolean" name="enabled">
                          <default value="false"/>
                        </prop>
                        <prop type="string" name="fromAddress"/>
                        <prop type="string" name="fromName"/>
                        <prop type="string" name="host"/>
                        <prop type="string" name="password" secret="True"/>
                        <prop type="boolean" name="skipVerify"/>
                        <prop type="string" name="startTLSPolicy">
                          <enum>
                            <item value="&quot;MandatoryStartTLS&quot;"/>
                            <item value="&quot;NoStartTLS&quot;"/>
                            <item value="&quot;OpportunisticStartTLS&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="user"/>
                      </prop>
                    </prop>
                    <prop type="object" name="grafanaIntegrations">
                      <prop type="array<object>" name="azureMonitorWorkspaceIntegrations">
                        <item type="object">
                          <prop type="string" name="azureMonitorWorkspaceResourceId"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="grafanaMajorVersion"/>
                    <prop type="object" name="grafanaPlugins">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="pluginId"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="grafanaVersion"/>
                    <prop readOnly="True" type="array<string>" name="outboundIPs">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Dashboard/grafana/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                          <prop type="dateTime" name="createdAt"/>
                          <prop type="string" name="createdBy"/>
                          <prop type="string" name="createdByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="lastModifiedAt"/>
                          <prop type="string" name="lastModifiedBy"/>
                          <prop type="string" name="lastModifiedByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="zoneRedundancy">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                  </prop>
                  <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dashboard/grafana/{}" version="2023-09-01" swagger="mgmt-plane/dashboard/ResourceProviders/Microsoft.Dashboard/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGFzaGJvYXJkL2dyYWZhbmEve3dvcmtzcGFjZU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name name n" required="True" idPart="name">
          <help short="The workspace name of Azure Managed Grafana."/>
        </arg>
        <arg type="object" var="$requestBodyParameters.identity" options="identity" hide="True" group="">
          <help short="The managed identity of the grafana resource."/>
          <arg type="string" var="$requestBodyParameters.identity.type" options="type" required="True">
            <help short="Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$requestBodyParameters.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="string" var="$requestBodyParameters.sku.name" options="sku-tier" group="">
          <help short="The Sku of the grafana resource."/>
        </arg>
        <arg type="object" var="$requestBodyParameters.tags" options="tags" group="">
          <help short="The tags for grafana resource."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$requestBodyParameters.properties.apiKey" options="service-account api-key" group="Properties">
          <help short="The api key setting of the Grafana instance."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.deterministicOutboundIP" options="deterministic-outbound-ip i" group="Properties">
          <help short="Whether a Grafana instance uses deterministic outbound IPs."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$requestBodyParameters.properties.enterpriseConfigurations" options="enterprise-configurations" hide="True" group="Properties">
          <help short="Enterprise settings of a Grafana instance"/>
          <arg type="string" var="$requestBodyParameters.properties.enterpriseConfigurations.marketplaceAutoRenew" options="marketplace-auto-renew">
            <help short="The AutoRenew setting of the Enterprise subscription"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$requestBodyParameters.properties.enterpriseConfigurations.marketplacePlanId" options="marketplace-plan-id">
            <help short="The Plan Id of the Azure Marketplace subscription for the Enterprise plugins"/>
          </arg>
        </arg>
        <arg type="object" var="$requestBodyParameters.properties.grafanaIntegrations" options="grafana-integrations" hide="True" group="Properties">
          <help short="GrafanaIntegrations is a bundled observability experience (e.g. pre-configured data source, tailored Grafana dashboards, alerting defaults) for common monitoring scenarios."/>
          <arg type="array<object>" var="$requestBodyParameters.properties.grafanaIntegrations.azureMonitorWorkspaceIntegrations" options="azure-monitor-workspace-integrations">
            <item type="object">
              <arg type="string" var="$requestBodyParameters.properties.grafanaIntegrations.azureMonitorWorkspaceIntegrations[].azureMonitorWorkspaceResourceId" options="azure-monitor-workspace-resource-id">
                <help short="The resource Id of the connected Azure Monitor Workspace."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.grafanaMajorVersion" options="grafana-major-version major-version v" group="Properties">
          <help short="The major Grafana software version to target."/>
        </arg>
        <arg type="object" var="$requestBodyParameters.properties.grafanaPlugins" options="grafana-plugins" hide="True" group="Properties">
          <help short="Update of Grafana plugin. Key is plugin id, value is plugin definition. If plugin definition is null, plugin with given plugin id will be removed. Otherwise, given plugin will be installed."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.publicNetworkAccess" options="public-network-access p" group="Properties">
          <help short="Indicate the state for enable or disable traffic over the public interface."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.zoneRedundancy" options="zone-redundancy" group="Properties">
          <help short="The zone redundancy setting of the Grafana instance."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Smtp">
        <arg type="boolean" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.enabled" options="smtp-enabled smtp" group="Smtp">
          <help short="Enable this to allow Grafana to send email."/>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.fromAddress" options="from-address" group="Smtp">
          <help short="Address used when sending out emails&#13; https://pkg.go.dev/net/mail#Address"/>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.fromName" options="from-name" group="Smtp">
          <help short="Name to be used when sending out emails. Default is &quot;Azure Managed Grafana Notification&quot;&#13; https://pkg.go.dev/net/mail#Address"/>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.host" options="host" group="Smtp">
          <help short="SMTP server hostname with port, e.g. test.email.net:587"/>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.password" options="password" group="Smtp">
          <help short="Password of SMTP auth. If the password contains # or ;, then you have to wrap it with triple quotes"/>
        </arg>
        <arg type="boolean" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.skipVerify" options="skip-verify" group="Smtp">
          <help short="Verify SSL for SMTP server. Default is false&#13; https://pkg.go.dev/crypto/tls#Config"/>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.startTLSPolicy" options="start-tls-policy" group="Smtp">
          <help short="The StartTLSPolicy setting of the SMTP configuration&#13; https://pkg.go.dev/github.com/go-mail/mail#StartTLSPolicy"/>
          <enum>
            <item name="MandatoryStartTLS" value="&quot;MandatoryStartTLS&quot;"/>
            <item name="NoStartTLS" value="&quot;NoStartTLS&quot;"/>
            <item name="OpportunisticStartTLS" value="&quot;OpportunisticStartTLS&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$requestBodyParameters.properties.grafanaConfigurations.smtp.user" options="user" group="Smtp">
          <help short="User of SMTP auth"/>
        </arg>
      </argGroup>
      <operation operationId="Grafana_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Dashboard/grafana/{workspaceName}">
          <request method="patch">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="requestBodyParameters" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$requestBodyParameters.identity">
                    <prop type="string" name="type" arg="$requestBodyParameters.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$requestBodyParameters.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="string" name="apiKey" arg="$requestBodyParameters.properties.apiKey">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deterministicOutboundIP" arg="$requestBodyParameters.properties.deterministicOutboundIP">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="enterpriseConfigurations" arg="$requestBodyParameters.properties.enterpriseConfigurations">
                      <prop type="string" name="marketplaceAutoRenew" arg="$requestBodyParameters.properties.enterpriseConfigurations.marketplaceAutoRenew">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="marketplacePlanId" arg="$requestBodyParameters.properties.enterpriseConfigurations.marketplacePlanId"/>
                    </prop>
                    <prop type="object" name="grafanaConfigurations">
                      <prop type="object" name="smtp">
                        <prop type="boolean" name="enabled" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.enabled">
                          <default value="false"/>
                        </prop>
                        <prop type="string" name="fromAddress" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.fromAddress"/>
                        <prop type="string" name="fromName" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.fromName"/>
                        <prop type="string" name="host" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.host"/>
                        <prop type="string" name="password" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.password" secret="True"/>
                        <prop type="boolean" name="skipVerify" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.skipVerify"/>
                        <prop type="string" name="startTLSPolicy" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.startTLSPolicy">
                          <enum>
                            <item value="&quot;MandatoryStartTLS&quot;"/>
                            <item value="&quot;NoStartTLS&quot;"/>
                            <item value="&quot;OpportunisticStartTLS&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="user" arg="$requestBodyParameters.properties.grafanaConfigurations.smtp.user"/>
                      </prop>
                    </prop>
                    <prop type="object" name="grafanaIntegrations" arg="$requestBodyParameters.properties.grafanaIntegrations">
                      <prop type="array<object>" name="azureMonitorWorkspaceIntegrations" arg="$requestBodyParameters.properties.grafanaIntegrations.azureMonitorWorkspaceIntegrations">
                        <item type="object">
                          <prop type="string" name="azureMonitorWorkspaceResourceId" arg="$requestBodyParameters.properties.grafanaIntegrations.azureMonitorWorkspaceIntegrations[].azureMonitorWorkspaceResourceId"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="grafanaMajorVersion" arg="$requestBodyParameters.properties.grafanaMajorVersion"/>
                    <prop type="object" name="grafanaPlugins" arg="$requestBodyParameters.properties.grafanaPlugins">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="publicNetworkAccess" arg="$requestBodyParameters.properties.publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="zoneRedundancy" arg="$requestBodyParameters.properties.zoneRedundancy">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" arg="$requestBodyParameters.sku.name" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$requestBodyParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ManagedGrafana_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Dashboard/grafana/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="apiKey">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="autoGeneratedDomainNameLabelScope">
                      <enum>
                        <item value="&quot;TenantReuse&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deterministicOutboundIP">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="endpoint"/>
                    <prop type="object" name="enterpriseConfigurations">
                      <prop type="string" name="marketplaceAutoRenew">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="marketplacePlanId"/>
                    </prop>
                    <prop type="object" name="grafanaConfigurations">
                      <prop type="object" name="smtp">
                        <prop type="boolean" name="enabled">
                          <default value="false"/>
                        </prop>
                        <prop type="string" name="fromAddress"/>
                        <prop type="string" name="fromName"/>
                        <prop type="string" name="host"/>
                        <prop type="string" name="password" secret="True"/>
                        <prop type="boolean" name="skipVerify"/>
                        <prop type="string" name="startTLSPolicy">
                          <enum>
                            <item value="&quot;MandatoryStartTLS&quot;"/>
                            <item value="&quot;NoStartTLS&quot;"/>
                            <item value="&quot;OpportunisticStartTLS&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="user"/>
                      </prop>
                    </prop>
                    <prop type="object" name="grafanaIntegrations">
                      <prop type="array<object>" name="azureMonitorWorkspaceIntegrations">
                        <item type="object">
                          <prop type="string" name="azureMonitorWorkspaceResourceId"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="string" name="grafanaMajorVersion"/>
                    <prop type="object" name="grafanaPlugins">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="pluginId"/>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="grafanaVersion"/>
                    <prop readOnly="True" type="array<string>" name="outboundIPs">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Dashboard/grafana/{}/privateEndpointConnections/{}"/>
                        </prop>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<string>" name="groupIds">
                            <item type="string"/>
                          </prop>
                          <prop type="object" name="privateEndpoint">
                            <prop readOnly="True" type="string" name="id"/>
                          </prop>
                          <prop type="object" name="privateLinkServiceConnectionState" required="True">
                            <prop type="string" name="actionsRequired"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="status">
                              <enum>
                                <item value="&quot;Approved&quot;"/>
                                <item value="&quot;Pending&quot;"/>
                                <item value="&quot;Rejected&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Creating&quot;"/>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                          <prop type="dateTime" name="createdAt"/>
                          <prop type="string" name="createdBy"/>
                          <prop type="string" name="createdByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="lastModifiedAt"/>
                          <prop type="string" name="lastModifiedBy"/>
                          <prop type="string" name="lastModifiedByType">
                            <enum>
                              <item value="&quot;Application&quot;"/>
                              <item value="&quot;Key&quot;"/>
                              <item value="&quot;ManagedIdentity&quot;"/>
                              <item value="&quot;User&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="publicNetworkAccess">
                      <default value="&quot;Enabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="zoneRedundancy">
                      <default value="&quot;Disabled&quot;"/>
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="sku">
                    <prop type="string" name="name" required="True"/>
                  </prop>
                  <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@ManagedGrafana_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
