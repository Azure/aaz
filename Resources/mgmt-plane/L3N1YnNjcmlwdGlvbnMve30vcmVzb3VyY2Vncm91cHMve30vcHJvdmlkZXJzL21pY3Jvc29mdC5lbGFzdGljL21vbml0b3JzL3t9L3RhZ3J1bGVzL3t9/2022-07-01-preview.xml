<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/tagrules/{}" version="2022-07-01-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L3RhZ1J1bGVzL3tydWxlU2V0TmFtZX0=/V/MjAyMi0wNy0wMS1wcmV2aWV3"/>
  <commandGroup name="elastic monitor tag-rule">
    <command name="show" version="2022-07-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/tagrules/{}" version="2022-07-01-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L3RhZ1J1bGVzL3tydWxlU2V0TmFtZX0=/V/MjAyMi0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Monitor resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleSetName" options="rule-set-name name n" required="True" idPart="child_name_1">
          <help short="Tag Rule Set resource name"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="TagRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/tagRules/{ruleSetName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="ruleSetName" arg="$Path.ruleSetName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01-preview&quot;"/>
                <enum>
                  <item value="&quot;2020-07-01&quot;"/>
                  <item value="&quot;2020-07-01-preview&quot;"/>
                  <item value="&quot;2021-09-01-preview&quot;"/>
                  <item value="&quot;2021-10-01-preview&quot;"/>
                  <item value="&quot;2022-05-05-preview&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}/tagRules/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="logRules">
                      <prop type="array<object>" name="filteringTags">
                        <item type="object">
                          <prop type="string" name="action">
                            <enum>
                              <item value="&quot;Exclude&quot;"/>
                              <item value="&quot;Include&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop type="boolean" name="sendAadLogs"/>
                      <prop type="boolean" name="sendActivityLogs"/>
                      <prop type="boolean" name="sendSubscriptionLogs"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-07-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/tagrules/{}" version="2022-07-01-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L3RhZ1J1bGVzL3tydWxlU2V0TmFtZX0=/V/MjAyMi0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Monitor resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleSetName" options="rule-set-name name n" required="True" idPart="child_name_1">
          <help short="Tag Rule Set resource name"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="TagRules_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/tagRules/{ruleSetName}">
          <request method="delete">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="ruleSetName" arg="$Path.ruleSetName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01-preview&quot;"/>
                <enum>
                  <item value="&quot;2020-07-01&quot;"/>
                  <item value="&quot;2020-07-01-preview&quot;"/>
                  <item value="&quot;2021-09-01-preview&quot;"/>
                  <item value="&quot;2021-10-01-preview&quot;"/>
                  <item value="&quot;2022-05-05-preview&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-07-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/tagrules/{}" version="2022-07-01-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L3RhZ1J1bGVzL3tydWxlU2V0TmFtZX0=/V/MjAyMi0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Monitor resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleSetName" options="rule-set-name name n" required="True" idPart="child_name_1">
          <help short="Tag Rule Set resource name"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$body.properties.logRules" options="log-rules" group="Properties">
          <help short="Rules for sending logs."/>
          <arg type="array<object>" var="$body.properties.logRules.filteringTags" options="filtering-tags">
            <help short="List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
            <item type="object">
              <arg type="string" var="$body.properties.logRules.filteringTags[].action" options="action">
                <help short="Valid actions for a filtering tag."/>
                <enum>
                  <item name="Exclude" value="&quot;Exclude&quot;"/>
                  <item name="Include" value="&quot;Include&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$body.properties.logRules.filteringTags[].name" options="name">
                <help short="The name (also known as the key) of the tag."/>
              </arg>
              <arg type="string" var="$body.properties.logRules.filteringTags[].value" options="value">
                <help short="The value of the tag."/>
              </arg>
            </item>
          </arg>
          <arg type="boolean" var="$body.properties.logRules.sendAadLogs" options="send-aad-logs">
            <help short="Flag specifying if AAD logs should be sent for the Monitor resource."/>
          </arg>
          <arg type="boolean" var="$body.properties.logRules.sendActivityLogs" options="send-activity-logs">
            <help short="Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."/>
          </arg>
          <arg type="boolean" var="$body.properties.logRules.sendSubscriptionLogs" options="send-subscription-logs">
            <help short="Flag specifying if subscription logs should be sent for the Monitor resource."/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="Provisioning state of the monitor resource."/>
          <enum>
            <item name="Accepted" value="&quot;Accepted&quot;"/>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="Creating" value="&quot;Creating&quot;"/>
            <item name="Deleted" value="&quot;Deleted&quot;"/>
            <item name="Deleting" value="&quot;Deleting&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
            <item name="Updating" value="&quot;Updating&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="TagRules_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/tagRules/{ruleSetName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="ruleSetName" arg="$Path.ruleSetName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01-preview&quot;"/>
                <enum>
                  <item value="&quot;2020-07-01&quot;"/>
                  <item value="&quot;2020-07-01-preview&quot;"/>
                  <item value="&quot;2021-09-01-preview&quot;"/>
                  <item value="&quot;2021-10-01-preview&quot;"/>
                  <item value="&quot;2022-05-05-preview&quot;"/>
                </enum>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="object" name="logRules" arg="$body.properties.logRules">
                      <prop type="array<object>" name="filteringTags" arg="$body.properties.logRules.filteringTags">
                        <item type="object">
                          <prop type="string" name="action" arg="$body.properties.logRules.filteringTags[].action">
                            <enum>
                              <item value="&quot;Exclude&quot;"/>
                              <item value="&quot;Include&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name" arg="$body.properties.logRules.filteringTags[].name"/>
                          <prop type="string" name="value" arg="$body.properties.logRules.filteringTags[].value"/>
                        </item>
                      </prop>
                      <prop type="boolean" name="sendAadLogs" arg="$body.properties.logRules.sendAadLogs"/>
                      <prop type="boolean" name="sendActivityLogs" arg="$body.properties.logRules.sendActivityLogs"/>
                      <prop type="boolean" name="sendSubscriptionLogs" arg="$body.properties.logRules.sendSubscriptionLogs"/>
                    </prop>
                    <prop type="string" name="provisioningState" arg="$body.properties.provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}/tagRules/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="logRules">
                      <prop type="array<object>" name="filteringTags">
                        <item type="object">
                          <prop type="string" name="action">
                            <enum>
                              <item value="&quot;Exclude&quot;"/>
                              <item value="&quot;Include&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop type="boolean" name="sendAadLogs"/>
                      <prop type="boolean" name="sendActivityLogs"/>
                      <prop type="boolean" name="sendSubscriptionLogs"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-07-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.elastic/monitors/{}/tagrules/{}" version="2022-07-01-preview" swagger="mgmt-plane/elastic/ResourceProviders/Microsoft.Elastic/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRWxhc3RpYy9tb25pdG9ycy97bW9uaXRvck5hbWV9L3RhZ1J1bGVzL3tydWxlU2V0TmFtZX0=/V/MjAyMi0wNy0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name" required="True" idPart="name">
          <help short="Monitor resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleSetName" options="rule-set-name name n" required="True" idPart="child_name_1">
          <help short="Tag Rule Set resource name"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$body.properties.logRules" options="log-rules" group="Properties">
          <help short="Rules for sending logs."/>
          <arg nullable="True" type="array<object>" var="$body.properties.logRules.filteringTags" options="filtering-tags">
            <help short="List of filtering tags to be used for capturing logs. This only takes effect if SendActivityLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$body.properties.logRules.filteringTags[].action" options="action">
                <help short="Valid actions for a filtering tag."/>
                <enum>
                  <item name="Exclude" value="&quot;Exclude&quot;"/>
                  <item name="Include" value="&quot;Include&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.logRules.filteringTags[].name" options="name">
                <help short="The name (also known as the key) of the tag."/>
              </arg>
              <arg nullable="True" type="string" var="$body.properties.logRules.filteringTags[].value" options="value">
                <help short="The value of the tag."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.logRules.sendAadLogs" options="send-aad-logs">
            <help short="Flag specifying if AAD logs should be sent for the Monitor resource."/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.logRules.sendActivityLogs" options="send-activity-logs">
            <help short="Flag specifying if activity logs from Azure resources should be sent for the Monitor resource."/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.logRules.sendSubscriptionLogs" options="send-subscription-logs">
            <help short="Flag specifying if subscription logs should be sent for the Monitor resource."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.provisioningState" options="provisioning-state" hide="True" group="Properties">
          <help short="Provisioning state of the monitor resource."/>
          <enum>
            <item name="Accepted" value="&quot;Accepted&quot;"/>
            <item name="Canceled" value="&quot;Canceled&quot;"/>
            <item name="Creating" value="&quot;Creating&quot;"/>
            <item name="Deleted" value="&quot;Deleted&quot;"/>
            <item name="Deleting" value="&quot;Deleting&quot;"/>
            <item name="Failed" value="&quot;Failed&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="Succeeded" value="&quot;Succeeded&quot;"/>
            <item name="Updating" value="&quot;Updating&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="TagRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/tagRules/{ruleSetName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="ruleSetName" arg="$Path.ruleSetName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01-preview&quot;"/>
                <enum>
                  <item value="&quot;2020-07-01&quot;"/>
                  <item value="&quot;2020-07-01-preview&quot;"/>
                  <item value="&quot;2021-09-01-preview&quot;"/>
                  <item value="&quot;2021-10-01-preview&quot;"/>
                  <item value="&quot;2022-05-05-preview&quot;"/>
                </enum>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="MonitoringTagRules_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Elastic/monitors/{}/tagRules/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="logRules">
                      <prop type="array<object>" name="filteringTags">
                        <item type="object">
                          <prop type="string" name="action">
                            <enum>
                              <item value="&quot;Exclude&quot;"/>
                              <item value="&quot;Include&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop type="boolean" name="sendAadLogs"/>
                      <prop type="boolean" name="sendActivityLogs"/>
                      <prop type="boolean" name="sendSubscriptionLogs"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="object" name="logRules" arg="$body.properties.logRules">
                  <prop type="array<object>" name="filteringTags" arg="$body.properties.logRules.filteringTags">
                    <item type="object">
                      <prop type="string" name="action" arg="$body.properties.logRules.filteringTags[].action">
                        <enum>
                          <item value="&quot;Exclude&quot;"/>
                          <item value="&quot;Include&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="name" arg="$body.properties.logRules.filteringTags[].name"/>
                      <prop type="string" name="value" arg="$body.properties.logRules.filteringTags[].value"/>
                    </item>
                  </prop>
                  <prop type="boolean" name="sendAadLogs" arg="$body.properties.logRules.sendAadLogs"/>
                  <prop type="boolean" name="sendActivityLogs" arg="$body.properties.logRules.sendActivityLogs"/>
                  <prop type="boolean" name="sendSubscriptionLogs" arg="$body.properties.logRules.sendSubscriptionLogs"/>
                </prop>
                <prop type="string" name="provisioningState" arg="$body.properties.provisioningState">
                  <enum>
                    <item value="&quot;Accepted&quot;"/>
                    <item value="&quot;Canceled&quot;"/>
                    <item value="&quot;Creating&quot;"/>
                    <item value="&quot;Deleted&quot;"/>
                    <item value="&quot;Deleting&quot;"/>
                    <item value="&quot;Failed&quot;"/>
                    <item value="&quot;NotSpecified&quot;"/>
                    <item value="&quot;Succeeded&quot;"/>
                    <item value="&quot;Updating&quot;"/>
                  </enum>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="TagRules_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Elastic/monitors/{monitorName}/tagRules/{ruleSetName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="ruleSetName" arg="$Path.ruleSetName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-07-01-preview&quot;"/>
                <enum>
                  <item value="&quot;2020-07-01&quot;"/>
                  <item value="&quot;2020-07-01-preview&quot;"/>
                  <item value="&quot;2021-09-01-preview&quot;"/>
                  <item value="&quot;2021-10-01-preview&quot;"/>
                  <item value="&quot;2022-05-05-preview&quot;"/>
                </enum>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@MonitoringTagRules_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
