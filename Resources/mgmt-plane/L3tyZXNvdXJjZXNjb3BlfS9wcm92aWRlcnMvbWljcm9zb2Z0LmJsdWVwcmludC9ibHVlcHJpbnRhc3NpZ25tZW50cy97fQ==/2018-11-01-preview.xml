<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprintassignments/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRBc3NpZ25tZW50cy97YXNzaWdubWVudE5hbWV9/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
  <commandGroup name="blueprint assignment">
    <command name="show" version="2018-11-01-preview">
      <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprintassignments/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRBc3NpZ25tZW50cy97YXNzaWdubWVudE5hbWV9/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.assignmentName" options="name n" required="True" group="">
          <help short="Name of the blueprint assignment."/>
        </arg>
        <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
          <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
        </arg>
      </argGroup>
      <operation operationId="Assignments_Get">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}">
          <request method="get">
            <path>
              <param type="string" name="assignmentName" arg="$Path.assignmentName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity" required="True">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="blueprintId"/>
                    <prop type="string" name="description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="locks">
                      <prop type="array<string>" name="excludedActions">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="excludedPrincipals">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;AllResourcesDoNotDelete&quot;"/>
                          <item value="&quot;AllResourcesReadOnly&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="parameters" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="object" name="reference">
                            <prop type="object" name="keyVault" required="True">
                              <prop type="string" name="id" required="True"/>
                            </prop>
                            <prop type="string" name="secretName" required="True"/>
                            <prop type="string" name="secretVersion"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;canceled&quot;"/>
                        <item value="&quot;cancelling&quot;"/>
                        <item value="&quot;creating&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;deploying&quot;"/>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;locking&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                        <item value="&quot;validating&quot;"/>
                        <item value="&quot;waiting&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="resourceGroups" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="location"/>
                          <prop type="string" name="name">
                            <format maxLength="90" minLength="1"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="scope"/>
                    <prop type="object" name="status">
                      <prop readOnly="True" type="dateTime" name="lastModified"/>
                      <prop readOnly="True" type="array<string>" name="managedResources">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2018-11-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprintassignments/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRBc3NpZ25tZW50cy97YXNzaWdubWVudE5hbWV9/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.assignmentName" options="name n" required="True" group="">
          <help short="Name of the blueprint assignment."/>
        </arg>
        <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
          <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
        </arg>
        <arg type="string" var="$Query.deleteBehavior" options="delete-behavior">
          <help short="When deleteBehavior=all, the resources that were created by the blueprint assignment will be deleted."/>
          <enum>
            <item name="all" value="&quot;all&quot;"/>
            <item name="none" value="&quot;none&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Assignments_Delete">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}">
          <request method="delete">
            <path>
              <param type="string" name="assignmentName" arg="$Path.assignmentName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <param type="string" name="deleteBehavior" arg="$Query.deleteBehavior">
                <enum>
                  <item value="&quot;all&quot;"/>
                  <item value="&quot;none&quot;"/>
                </enum>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity" required="True">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="blueprintId"/>
                    <prop type="string" name="description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="locks">
                      <prop type="array<string>" name="excludedActions">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="excludedPrincipals">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;AllResourcesDoNotDelete&quot;"/>
                          <item value="&quot;AllResourcesReadOnly&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="parameters" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="object" name="reference">
                            <prop type="object" name="keyVault" required="True">
                              <prop type="string" name="id" required="True"/>
                            </prop>
                            <prop type="string" name="secretName" required="True"/>
                            <prop type="string" name="secretVersion"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;canceled&quot;"/>
                        <item value="&quot;cancelling&quot;"/>
                        <item value="&quot;creating&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;deploying&quot;"/>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;locking&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                        <item value="&quot;validating&quot;"/>
                        <item value="&quot;waiting&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="resourceGroups" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="location"/>
                          <prop type="string" name="name">
                            <format maxLength="90" minLength="1"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="scope"/>
                    <prop type="object" name="status">
                      <prop readOnly="True" type="dateTime" name="lastModified"/>
                      <prop readOnly="True" type="array<string>" name="managedResources">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2018-11-01-preview">
      <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprintassignments/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRBc3NpZ25tZW50cy97YXNzaWdubWVudE5hbWV9/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.assignmentName" options="name n" required="True" group="">
          <help short="Name of the blueprint assignment."/>
        </arg>
        <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
          <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
        </arg>
      </argGroup>
      <argGroup name="Assignment">
        <arg type="object" var="$assignment.identity" options="identity" required="True" group="Assignment">
          <help short="Managed identity for this blueprint assignment."/>
          <arg type="string" var="$assignment.identity.principalId" options="principal-id">
            <help short="Azure Active Directory principal ID associated with this Identity."/>
          </arg>
          <arg type="string" var="$assignment.identity.tenantId" options="tenant-id">
            <help short="ID of the Azure Active Directory."/>
          </arg>
          <arg type="string" var="$assignment.identity.type" options="type" required="True">
            <help short="Type of the managed identity."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$assignment.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user-assigned managed identities associated with the resource. Key is the Azure resource Id of the managed identity."/>
            <additionalProp>
              <item type="object">
                <arg type="string" var="$assignment.identity.userAssignedIdentities{}.clientId" options="client-id">
                  <help short="Client App Id associated with this identity."/>
                </arg>
                <arg type="string" var="$assignment.identity.userAssignedIdentities{}.principalId" options="principal-id">
                  <help short="Azure Active Directory principal ID associated with this Identity."/>
                </arg>
              </item>
            </additionalProp>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$assignment.location" options="location l" required="True" group="Assignment">
          <help short="The location of this blueprint assignment."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$assignment.properties.blueprintId" options="blueprint-id" group="Properties">
          <help short="ID of the published version of a blueprint definition."/>
        </arg>
        <arg type="string" var="$assignment.properties.description" options="description" group="Properties">
          <help short="Multi-line explain this resource."/>
          <format maxLength="500"/>
        </arg>
        <arg type="string" var="$assignment.properties.displayName" options="display-name" group="Properties">
          <help short="One-liner string explain this resource."/>
          <format maxLength="256"/>
        </arg>
        <arg type="object" var="$assignment.properties.locks" options="locks" group="Properties">
          <help short="Defines how resources deployed by a blueprint assignment are locked."/>
          <arg type="array<string>" var="$assignment.properties.locks.excludedActions" options="excluded-actions">
            <help short="List of management operations that are excluded from blueprint locks. Up to 200 actions are permitted. If the lock mode is set to 'AllResourcesReadOnly', then the following actions are automatically appended to 'excludedActions': '*/read', 'Microsoft.Network/virtualNetworks/subnets/join/action' and 'Microsoft.Authorization/locks/delete'. If the lock mode is set to 'AllResourcesDoNotDelete', then the following actions are automatically appended to 'excludedActions': 'Microsoft.Authorization/locks/delete'. Duplicate actions will get removed."/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$assignment.properties.locks.excludedPrincipals" options="excluded-principals">
            <help short="List of AAD principals excluded from blueprint locks. Up to 5 principals are permitted."/>
            <item type="string"/>
          </arg>
          <arg type="string" var="$assignment.properties.locks.mode" options="mode">
            <help short="Lock mode."/>
            <enum>
              <item name="AllResourcesDoNotDelete" value="&quot;AllResourcesDoNotDelete&quot;"/>
              <item name="AllResourcesReadOnly" value="&quot;AllResourcesReadOnly&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$assignment.properties.parameters" options="parameters" required="True" group="Properties">
          <help short="Blueprint assignment parameter values."/>
          <additionalProp>
            <item type="object">
              <arg type="object" var="$assignment.properties.parameters{}.reference" options="reference">
                <help short="Parameter value as reference type."/>
                <arg type="object" var="$assignment.properties.parameters{}.reference.keyVault" options="key-vault" required="True">
                  <help short="Specifies the reference to a given Azure Key Vault."/>
                  <arg type="string" var="$assignment.properties.parameters{}.reference.keyVault.id" options="id" required="True">
                    <help short="Azure resource ID of the Key Vault."/>
                  </arg>
                </arg>
                <arg type="string" var="$assignment.properties.parameters{}.reference.secretName" options="secret-name" required="True">
                  <help short="Name of the secret."/>
                </arg>
                <arg type="string" var="$assignment.properties.parameters{}.reference.secretVersion" options="secret-version">
                  <help short="The version of the secret to use. If left blank, the latest version of the secret is used."/>
                </arg>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="object" var="$assignment.properties.resourceGroups" options="resource-groups" required="True" group="Properties">
          <help short="Names and locations of resource group placeholders."/>
          <additionalProp>
            <item type="object">
              <arg type="string" var="$assignment.properties.resourceGroups{}.location" options="location">
                <help short="Location of the resource group."/>
              </arg>
              <arg type="string" var="$assignment.properties.resourceGroups{}.name" options="name">
                <help short="Name of the resource group."/>
                <format maxLength="90" minLength="1"/>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$assignment.properties.scope" options="scope" group="Properties">
          <help short="The target subscription scope of the blueprint assignment (format: '/subscriptions/{subscriptionId}'). For management group level assignments, the property is required."/>
        </arg>
      </argGroup>
      <operation operationId="Assignments_CreateOrUpdate">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}">
          <request method="put">
            <path>
              <param type="string" name="assignmentName" arg="$Path.assignmentName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="assignment" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$assignment.identity" required="True">
                    <prop type="string" name="principalId" arg="$assignment.identity.principalId"/>
                    <prop type="string" name="tenantId" arg="$assignment.identity.tenantId"/>
                    <prop type="string" name="type" arg="$assignment.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$assignment.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId" arg="$assignment.identity.userAssignedIdentities{}.clientId"/>
                          <prop type="string" name="principalId" arg="$assignment.identity.userAssignedIdentities{}.principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$assignment.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="blueprintId" arg="$assignment.properties.blueprintId"/>
                    <prop type="string" name="description" arg="$assignment.properties.description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName" arg="$assignment.properties.displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="locks" arg="$assignment.properties.locks">
                      <prop type="array<string>" name="excludedActions" arg="$assignment.properties.locks.excludedActions">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="excludedPrincipals" arg="$assignment.properties.locks.excludedPrincipals">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="mode" arg="$assignment.properties.locks.mode">
                        <enum>
                          <item value="&quot;AllResourcesDoNotDelete&quot;"/>
                          <item value="&quot;AllResourcesReadOnly&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="parameters" arg="$assignment.properties.parameters" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="object" name="reference" arg="$assignment.properties.parameters{}.reference">
                            <prop type="object" name="keyVault" arg="$assignment.properties.parameters{}.reference.keyVault" required="True">
                              <prop type="string" name="id" arg="$assignment.properties.parameters{}.reference.keyVault.id" required="True"/>
                            </prop>
                            <prop type="string" name="secretName" arg="$assignment.properties.parameters{}.reference.secretName" required="True"/>
                            <prop type="string" name="secretVersion" arg="$assignment.properties.parameters{}.reference.secretVersion"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="resourceGroups" arg="$assignment.properties.resourceGroups" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="location" arg="$assignment.properties.resourceGroups{}.location"/>
                          <prop type="string" name="name" arg="$assignment.properties.resourceGroups{}.name">
                            <format maxLength="90" minLength="1"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="scope" arg="$assignment.properties.scope"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity" required="True">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="blueprintId"/>
                    <prop type="string" name="description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="locks">
                      <prop type="array<string>" name="excludedActions">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="excludedPrincipals">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;AllResourcesDoNotDelete&quot;"/>
                          <item value="&quot;AllResourcesReadOnly&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="parameters" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="object" name="reference">
                            <prop type="object" name="keyVault" required="True">
                              <prop type="string" name="id" required="True"/>
                            </prop>
                            <prop type="string" name="secretName" required="True"/>
                            <prop type="string" name="secretVersion"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;canceled&quot;"/>
                        <item value="&quot;cancelling&quot;"/>
                        <item value="&quot;creating&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;deploying&quot;"/>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;locking&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                        <item value="&quot;validating&quot;"/>
                        <item value="&quot;waiting&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="resourceGroups" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="location"/>
                          <prop type="string" name="name">
                            <format maxLength="90" minLength="1"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="scope"/>
                    <prop type="object" name="status">
                      <prop readOnly="True" type="dateTime" name="lastModified"/>
                      <prop readOnly="True" type="array<string>" name="managedResources">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2018-11-01-preview">
      <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprintassignments/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRBc3NpZ25tZW50cy97YXNzaWdubWVudE5hbWV9/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.assignmentName" options="name n" required="True" group="">
          <help short="Name of the blueprint assignment."/>
        </arg>
        <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
          <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
        </arg>
      </argGroup>
      <argGroup name="Assignment">
        <arg type="object" var="$assignment.identity" options="identity" group="Assignment">
          <help short="Managed identity for this blueprint assignment."/>
          <arg nullable="True" type="string" var="$assignment.identity.principalId" options="principal-id">
            <help short="Azure Active Directory principal ID associated with this Identity."/>
          </arg>
          <arg nullable="True" type="string" var="$assignment.identity.tenantId" options="tenant-id">
            <help short="ID of the Azure Active Directory."/>
          </arg>
          <arg type="string" var="$assignment.identity.type" options="type">
            <help short="Type of the managed identity."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$assignment.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user-assigned managed identities associated with the resource. Key is the Azure resource Id of the managed identity."/>
            <additionalProp>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$assignment.identity.userAssignedIdentities{}.clientId" options="client-id">
                  <help short="Client App Id associated with this identity."/>
                </arg>
                <arg nullable="True" type="string" var="$assignment.identity.userAssignedIdentities{}.principalId" options="principal-id">
                  <help short="Azure Active Directory principal ID associated with this Identity."/>
                </arg>
              </item>
            </additionalProp>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$assignment.properties.blueprintId" options="blueprint-id" group="Properties">
          <help short="ID of the published version of a blueprint definition."/>
        </arg>
        <arg nullable="True" type="string" var="$assignment.properties.description" options="description" group="Properties">
          <help short="Multi-line explain this resource."/>
          <format maxLength="500"/>
        </arg>
        <arg nullable="True" type="string" var="$assignment.properties.displayName" options="display-name" group="Properties">
          <help short="One-liner string explain this resource."/>
          <format maxLength="256"/>
        </arg>
        <arg nullable="True" type="object" var="$assignment.properties.locks" options="locks" group="Properties">
          <help short="Defines how resources deployed by a blueprint assignment are locked."/>
          <arg nullable="True" type="array<string>" var="$assignment.properties.locks.excludedActions" options="excluded-actions">
            <help short="List of management operations that are excluded from blueprint locks. Up to 200 actions are permitted. If the lock mode is set to 'AllResourcesReadOnly', then the following actions are automatically appended to 'excludedActions': '*/read', 'Microsoft.Network/virtualNetworks/subnets/join/action' and 'Microsoft.Authorization/locks/delete'. If the lock mode is set to 'AllResourcesDoNotDelete', then the following actions are automatically appended to 'excludedActions': 'Microsoft.Authorization/locks/delete'. Duplicate actions will get removed."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$assignment.properties.locks.excludedPrincipals" options="excluded-principals">
            <help short="List of AAD principals excluded from blueprint locks. Up to 5 principals are permitted."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="string" var="$assignment.properties.locks.mode" options="mode">
            <help short="Lock mode."/>
            <enum>
              <item name="AllResourcesDoNotDelete" value="&quot;AllResourcesDoNotDelete&quot;"/>
              <item name="AllResourcesReadOnly" value="&quot;AllResourcesReadOnly&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$assignment.properties.parameters" options="parameters" group="Properties">
          <help short="Blueprint assignment parameter values."/>
          <additionalProp>
            <item nullable="True" type="object">
              <arg nullable="True" type="object" var="$assignment.properties.parameters{}.reference" options="reference">
                <help short="Parameter value as reference type."/>
                <arg type="object" var="$assignment.properties.parameters{}.reference.keyVault" options="key-vault">
                  <help short="Specifies the reference to a given Azure Key Vault."/>
                  <arg type="string" var="$assignment.properties.parameters{}.reference.keyVault.id" options="id">
                    <help short="Azure resource ID of the Key Vault."/>
                  </arg>
                </arg>
                <arg type="string" var="$assignment.properties.parameters{}.reference.secretName" options="secret-name">
                  <help short="Name of the secret."/>
                </arg>
                <arg nullable="True" type="string" var="$assignment.properties.parameters{}.reference.secretVersion" options="secret-version">
                  <help short="The version of the secret to use. If left blank, the latest version of the secret is used."/>
                </arg>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="object" var="$assignment.properties.resourceGroups" options="resource-groups" group="Properties">
          <help short="Names and locations of resource group placeholders."/>
          <additionalProp>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$assignment.properties.resourceGroups{}.location" options="location">
                <help short="Location of the resource group."/>
              </arg>
              <arg nullable="True" type="string" var="$assignment.properties.resourceGroups{}.name" options="name">
                <help short="Name of the resource group."/>
                <format maxLength="90" minLength="1"/>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg nullable="True" type="string" var="$assignment.properties.scope" options="scope" group="Properties">
          <help short="The target subscription scope of the blueprint assignment (format: '/subscriptions/{subscriptionId}'). For management group level assignments, the property is required."/>
        </arg>
      </argGroup>
      <operation operationId="Assignments_Get">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}">
          <request method="get">
            <path>
              <param type="string" name="assignmentName" arg="$Path.assignmentName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Assignment_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity" required="True">
                    <prop type="string" name="principalId"/>
                    <prop type="string" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="clientId"/>
                          <prop type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="blueprintId"/>
                    <prop type="string" name="description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="locks">
                      <prop type="array<string>" name="excludedActions">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="excludedPrincipals">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;AllResourcesDoNotDelete&quot;"/>
                          <item value="&quot;AllResourcesReadOnly&quot;"/>
                          <item value="&quot;None&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="parameters" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="object" name="reference">
                            <prop type="object" name="keyVault" required="True">
                              <prop type="string" name="id" required="True"/>
                            </prop>
                            <prop type="string" name="secretName" required="True"/>
                            <prop type="string" name="secretVersion"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;canceled&quot;"/>
                        <item value="&quot;cancelling&quot;"/>
                        <item value="&quot;creating&quot;"/>
                        <item value="&quot;deleting&quot;"/>
                        <item value="&quot;deploying&quot;"/>
                        <item value="&quot;failed&quot;"/>
                        <item value="&quot;locking&quot;"/>
                        <item value="&quot;succeeded&quot;"/>
                        <item value="&quot;validating&quot;"/>
                        <item value="&quot;waiting&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="resourceGroups" required="True">
                      <additionalProp>
                        <item type="object">
                          <prop type="string" name="location"/>
                          <prop type="string" name="name">
                            <format maxLength="90" minLength="1"/>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="scope"/>
                    <prop type="object" name="status">
                      <prop readOnly="True" type="dateTime" name="lastModified"/>
                      <prop readOnly="True" type="array<string>" name="managedResources">
                        <item type="string"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="assignment" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$assignment.identity" required="True">
                <prop type="string" name="principalId" arg="$assignment.identity.principalId"/>
                <prop type="string" name="tenantId" arg="$assignment.identity.tenantId"/>
                <prop type="string" name="type" arg="$assignment.identity.type" required="True">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$assignment.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object">
                      <prop type="string" name="clientId" arg="$assignment.identity.userAssignedIdentities{}.clientId"/>
                      <prop type="string" name="principalId" arg="$assignment.identity.userAssignedIdentities{}.principalId"/>
                    </item>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="string" name="blueprintId" arg="$assignment.properties.blueprintId"/>
                <prop type="string" name="description" arg="$assignment.properties.description">
                  <format maxLength="500"/>
                </prop>
                <prop type="string" name="displayName" arg="$assignment.properties.displayName">
                  <format maxLength="256"/>
                </prop>
                <prop type="object" name="locks" arg="$assignment.properties.locks">
                  <prop type="array<string>" name="excludedActions" arg="$assignment.properties.locks.excludedActions">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="excludedPrincipals" arg="$assignment.properties.locks.excludedPrincipals">
                    <item type="string"/>
                  </prop>
                  <prop type="string" name="mode" arg="$assignment.properties.locks.mode">
                    <enum>
                      <item value="&quot;AllResourcesDoNotDelete&quot;"/>
                      <item value="&quot;AllResourcesReadOnly&quot;"/>
                      <item value="&quot;None&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="parameters" arg="$assignment.properties.parameters" required="True">
                  <additionalProp>
                    <item type="object">
                      <prop type="object" name="reference" arg="$assignment.properties.parameters{}.reference">
                        <prop type="object" name="keyVault" arg="$assignment.properties.parameters{}.reference.keyVault" required="True">
                          <prop type="string" name="id" arg="$assignment.properties.parameters{}.reference.keyVault.id" required="True"/>
                        </prop>
                        <prop type="string" name="secretName" arg="$assignment.properties.parameters{}.reference.secretName" required="True"/>
                        <prop type="string" name="secretVersion" arg="$assignment.properties.parameters{}.reference.secretVersion"/>
                      </prop>
                    </item>
                  </additionalProp>
                </prop>
                <prop type="object" name="resourceGroups" arg="$assignment.properties.resourceGroups" required="True">
                  <additionalProp>
                    <item type="object">
                      <prop type="string" name="location" arg="$assignment.properties.resourceGroups{}.location"/>
                      <prop type="string" name="name" arg="$assignment.properties.resourceGroups{}.name">
                        <format maxLength="90" minLength="1"/>
                      </prop>
                    </item>
                  </additionalProp>
                </prop>
                <prop type="string" name="scope" arg="$assignment.properties.scope"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Assignments_CreateOrUpdate">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprintAssignments/{assignmentName}">
          <request method="put">
            <path>
              <param type="string" name="assignmentName" arg="$Path.assignmentName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="@Assignment_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
