{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects", "version": "2025-03-01", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3Rz/V/MjAyNS0wMy0wMQ=="}], "commandGroups": [{"name": "neon postgres project", "commands": [{"name": "list", "version": "2025-03-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/neon.postgres/organizations/{}/projects", "version": "2025-03-01", "swagger": "mgmt-plane/liftrneon/ResourceProviders/Neon.Postgres/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZW9uLlBvc3RncmVzL29yZ2FuaXphdGlvbnMve29yZ2FuaXphdGlvbk5hbWV9L3Byb2plY3Rz/V/MjAyNS0wMy0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.organizationName", "options": ["organization-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "Name of the Neon organization."}, "prompt": {"msg": "Please provide Neon Organization name:"}, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "group": "", "idPart": "resource_group", "help": {"short": "Name of the Azure resource group."}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "group": "", "idPart": "subscription", "help": {"short": "Id of the Azure Subscription"}}]}], "operations": [{"operationId": "Projects_List", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Neon.Postgres/organizations/{organizationName}/projects", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "organizationName", "arg": "$Path.organizationName", "required": true, "format": {"pattern": "^[a-zA-Z0-9][a-zA-Z0-9_\\-.: ]*$", "maxLength": 50, "minLength": 1}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2025-03-01"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "string", "name": "nextLink"}, {"type": "array<object>", "name": "value", "required": true, "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Neon.Postgres/organizations/{}/projects/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "array<object>", "name": "attributes", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}], "cls": "Attributes_read"}}, {"type": "object", "name": "branch", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "databaseName"}, {"type": "array<object>", "name": "databases", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "ownerName"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "NeonDatabaseProperties_read"}}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "string", "name": "endpointType", "enum": {"items": [{"value": "read_only"}, {"value": "read_write"}]}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "EndpointProperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "string", "name": "parentId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "projectId"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "roleName"}, {"type": "array<object>", "name": "roles", "item": {"type": "object", "props": [{"type": "array<@Attributes_read>", "name": "attributes", "item": {"type": "@Attributes_read"}}, {"type": "string", "name": "branchId"}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "boolean", "name": "isSuperUser"}, {"type": "array<string>", "name": "permissions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "cls": "NeonRoleProperties_read"}}]}, {"readOnly": true, "type": "string", "name": "createdAt"}, {"type": "array<@NeonDatabaseProperties_read>", "name": "databases", "item": {"type": "@NeonDatabaseProperties_read"}}, {"type": "object", "name": "defaultEndpointSettings", "props": [{"type": "float32", "name": "autoscalingLimitMaxCu", "required": true}, {"type": "float32", "name": "autoscalingLimitMinCu", "required": true}]}, {"type": "array<@EndpointProperties_read>", "name": "endpoints", "item": {"type": "@EndpointProperties_read"}}, {"readOnly": true, "type": "string", "name": "entityId", "format": {"pattern": "^[a-z0-9-]{1,60}$"}}, {"type": "string", "name": "entityName", "format": {"pattern": "^\\S.{0,62}\\S$|^\\S$"}}, {"type": "integer32", "name": "historyRetention"}, {"type": "integer32", "name": "pgVersion"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Failed"}, {"value": "Succeeded"}]}}, {"type": "string", "name": "regionId"}, {"type": "array<@NeonRoleProperties_read>", "name": "roles", "item": {"type": "@NeonRoleProperties_read"}}, {"type": "integer64", "name": "storage"}]}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "array", "ref": "$Instance.value", "clientFlatten": true, "nextLink": "$Instance.nextLink"}], "confirmation": ""}]}]}