<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/labs/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9sYWJzL3tuYW1lfQ==/V/MjAxOC0wOS0xNQ=="/>
  <commandGroup name="lab">
    <command name="delete" version="2018-09-15" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/labs/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9sYWJzL3tuYW1lfQ==/V/MjAxOC0wOS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name" required="True" group="" idPart="name">
          <help short="The name of the lab."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Labs_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}">
          <request method="delete">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2018-09-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/labs/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9sYWJzL3tuYW1lfQ==/V/MjAxOC0wOS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the lab."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Lab">
        <arg type="ResourceLocation" var="$lab.location" options="location l" group="Lab">
          <help short="The location of the resource."/>
        </arg>
        <arg type="object" var="$lab.tags" options="tags" group="Lab">
          <help short="The tags of the resource."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$lab.properties.announcement" options="announcement" group="Properties">
          <help short="The properties of any lab announcement associated with this lab"/>
          <arg type="string" var="$lab.properties.announcement.enabled" options="enabled">
            <help short="Is the lab announcement active/enabled at this time?"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="dateTime" var="$lab.properties.announcement.expirationDate" options="expiration-date">
            <help short="The time at which the announcement expires (null for never)"/>
          </arg>
          <arg type="boolean" var="$lab.properties.announcement.expired" options="expired">
            <help short="Has this announcement expired?"/>
          </arg>
          <arg type="string" var="$lab.properties.announcement.markdown" options="markdown">
            <help short="The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."/>
          </arg>
          <arg type="string" var="$lab.properties.announcement.title" options="title">
            <help short="The plain text title for the lab announcement"/>
          </arg>
        </arg>
        <arg type="string" var="$lab.properties.environmentPermission" options="environment-permission" group="Properties">
          <help short="The access rights to be granted to the user when provisioning an environment"/>
          <enum>
            <item name="Contributor" value="&quot;Contributor&quot;"/>
            <item name="Reader" value="&quot;Reader&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$lab.properties.extendedProperties" options="extended-properties" group="Properties">
          <help short="Extended properties of the lab used for experimental features"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="string" var="$lab.properties.labStorageType" options="lab-storage-type" group="Properties">
          <help short="Type of storage used by the lab. It can be either Premium or Standard. Default is Premium."/>
          <default value="&quot;Premium&quot;"/>
          <enum>
            <item name="Premium" value="&quot;Premium&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="StandardSSD" value="&quot;StandardSSD&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$lab.properties.mandatoryArtifactsResourceIdsLinux" options="mandatory-artifacts-resource-ids-linux" group="Properties">
          <help short="The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user."/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$lab.properties.mandatoryArtifactsResourceIdsWindows" options="mandatory-artifacts-resource-ids-windows" group="Properties">
          <help short="The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$lab.properties.premiumDataDisks" options="premium-data-disks" group="Properties">
          <help short="The setting to enable usage of premium data disks.&#13; When its value is 'Enabled', creation of standard or premium data disks is allowed.&#13; When its value is 'Disabled', only creation of standard data disks is allowed."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$lab.properties.support" options="support" group="Properties">
          <help short="The properties of any lab support message associated with this lab"/>
          <arg type="string" var="$lab.properties.support.enabled" options="enabled">
            <help short="Is the lab support banner active/enabled at this time?"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$lab.properties.support.markdown" options="markdown">
            <help short="The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Labs_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}">
          <request method="put">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="lab" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$lab.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="announcement" arg="$lab.properties.announcement">
                      <prop type="string" name="enabled" arg="$lab.properties.announcement.enabled">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="expirationDate" arg="$lab.properties.announcement.expirationDate"/>
                      <prop type="boolean" name="expired" arg="$lab.properties.announcement.expired"/>
                      <prop type="string" name="markdown" arg="$lab.properties.announcement.markdown"/>
                      <prop type="string" name="title" arg="$lab.properties.announcement.title"/>
                    </prop>
                    <prop type="string" name="environmentPermission" arg="$lab.properties.environmentPermission">
                      <enum>
                        <item value="&quot;Contributor&quot;"/>
                        <item value="&quot;Reader&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="extendedProperties" arg="$lab.properties.extendedProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="labStorageType" arg="$lab.properties.labStorageType">
                      <default value="&quot;Premium&quot;"/>
                      <enum>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StandardSSD&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="mandatoryArtifactsResourceIdsLinux" arg="$lab.properties.mandatoryArtifactsResourceIdsLinux">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="mandatoryArtifactsResourceIdsWindows" arg="$lab.properties.mandatoryArtifactsResourceIdsWindows">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="premiumDataDisks" arg="$lab.properties.premiumDataDisks">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="support" arg="$lab.properties.support">
                      <prop type="string" name="enabled" arg="$lab.properties.support.enabled">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="markdown" arg="$lab.properties.support.markdown"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$lab.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevTestLab/labs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="announcement">
                      <prop type="string" name="enabled">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="expirationDate"/>
                      <prop type="boolean" name="expired"/>
                      <prop type="string" name="markdown"/>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="string" name="title"/>
                      <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                    </prop>
                    <prop readOnly="True" type="string" name="artifactsStorageAccount"/>
                    <prop readOnly="True" type="dateTime" name="createdDate"/>
                    <prop readOnly="True" type="string" name="defaultPremiumStorageAccount"/>
                    <prop readOnly="True" type="string" name="defaultStorageAccount"/>
                    <prop type="string" name="environmentPermission">
                      <enum>
                        <item value="&quot;Contributor&quot;"/>
                        <item value="&quot;Reader&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="extendedProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="labStorageType">
                      <default value="&quot;Premium&quot;"/>
                      <enum>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StandardSSD&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="loadBalancerId"/>
                    <prop type="array<string>" name="mandatoryArtifactsResourceIdsLinux">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="mandatoryArtifactsResourceIdsWindows">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="networkSecurityGroupId"/>
                    <prop readOnly="True" type="string" name="premiumDataDiskStorageAccount"/>
                    <prop type="string" name="premiumDataDisks">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="string" name="publicIpId"/>
                    <prop type="object" name="support">
                      <prop type="string" name="enabled">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="markdown"/>
                    </prop>
                    <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                    <prop readOnly="True" type="string" name="vaultName"/>
                    <prop readOnly="True" type="string" name="vmCreationResourceGroup"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2018-09-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/labs/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9sYWJzL3tuYW1lfQ==/V/MjAxOC0wOS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="name">
          <help short="The name of the lab."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Lab">
        <arg nullable="True" type="ResourceLocation" var="$lab.location" options="location l" group="Lab">
          <help short="The location of the resource."/>
        </arg>
        <arg nullable="True" type="object" var="$lab.tags" options="tags" group="Lab">
          <help short="The tags of the resource."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$lab.properties.announcement" options="announcement" group="Properties">
          <help short="The properties of any lab announcement associated with this lab"/>
          <arg nullable="True" type="string" var="$lab.properties.announcement.enabled" options="enabled">
            <help short="Is the lab announcement active/enabled at this time?"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="dateTime" var="$lab.properties.announcement.expirationDate" options="expiration-date">
            <help short="The time at which the announcement expires (null for never)"/>
          </arg>
          <arg nullable="True" type="boolean" var="$lab.properties.announcement.expired" options="expired">
            <help short="Has this announcement expired?"/>
          </arg>
          <arg nullable="True" type="string" var="$lab.properties.announcement.markdown" options="markdown">
            <help short="The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."/>
          </arg>
          <arg nullable="True" type="string" var="$lab.properties.announcement.title" options="title">
            <help short="The plain text title for the lab announcement"/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$lab.properties.environmentPermission" options="environment-permission" group="Properties">
          <help short="The access rights to be granted to the user when provisioning an environment"/>
          <enum>
            <item name="Contributor" value="&quot;Contributor&quot;"/>
            <item name="Reader" value="&quot;Reader&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$lab.properties.extendedProperties" options="extended-properties" group="Properties">
          <help short="Extended properties of the lab used for experimental features"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="string" var="$lab.properties.labStorageType" options="lab-storage-type" group="Properties">
          <help short="Type of storage used by the lab. It can be either Premium or Standard. Default is Premium."/>
          <enum>
            <item name="Premium" value="&quot;Premium&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="StandardSSD" value="&quot;StandardSSD&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<string>" var="$lab.properties.mandatoryArtifactsResourceIdsLinux" options="mandatory-artifacts-resource-ids-linux" group="Properties">
          <help short="The ordered list of artifact resource IDs that should be applied on all Linux VM creations by default, prior to the artifacts specified by the user."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$lab.properties.mandatoryArtifactsResourceIdsWindows" options="mandatory-artifacts-resource-ids-windows" group="Properties">
          <help short="The ordered list of artifact resource IDs that should be applied on all Windows VM creations by default, prior to the artifacts specified by the user."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$lab.properties.premiumDataDisks" options="premium-data-disks" group="Properties">
          <help short="The setting to enable usage of premium data disks.&#13; When its value is 'Enabled', creation of standard or premium data disks is allowed.&#13; When its value is 'Disabled', only creation of standard data disks is allowed."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$lab.properties.support" options="support" group="Properties">
          <help short="The properties of any lab support message associated with this lab"/>
          <arg nullable="True" type="string" var="$lab.properties.support.enabled" options="enabled">
            <help short="Is the lab support banner active/enabled at this time?"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$lab.properties.support.markdown" options="markdown">
            <help short="The markdown text (if any) that this lab displays in the UI. If left empty/null, nothing will be shown."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Labs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}">
          <request method="get">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Lab_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevTestLab/labs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="announcement">
                      <prop type="string" name="enabled">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="expirationDate"/>
                      <prop type="boolean" name="expired"/>
                      <prop type="string" name="markdown"/>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="string" name="title"/>
                      <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                    </prop>
                    <prop readOnly="True" type="string" name="artifactsStorageAccount"/>
                    <prop readOnly="True" type="dateTime" name="createdDate"/>
                    <prop readOnly="True" type="string" name="defaultPremiumStorageAccount"/>
                    <prop readOnly="True" type="string" name="defaultStorageAccount"/>
                    <prop type="string" name="environmentPermission">
                      <enum>
                        <item value="&quot;Contributor&quot;"/>
                        <item value="&quot;Reader&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="extendedProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="labStorageType">
                      <default value="&quot;Premium&quot;"/>
                      <enum>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StandardSSD&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="loadBalancerId"/>
                    <prop type="array<string>" name="mandatoryArtifactsResourceIdsLinux">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="mandatoryArtifactsResourceIdsWindows">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="networkSecurityGroupId"/>
                    <prop readOnly="True" type="string" name="premiumDataDiskStorageAccount"/>
                    <prop type="string" name="premiumDataDisks">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="string" name="publicIpId"/>
                    <prop type="object" name="support">
                      <prop type="string" name="enabled">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="markdown"/>
                    </prop>
                    <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                    <prop readOnly="True" type="string" name="vaultName"/>
                    <prop readOnly="True" type="string" name="vmCreationResourceGroup"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="lab" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$lab.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="announcement" arg="$lab.properties.announcement">
                  <prop type="string" name="enabled" arg="$lab.properties.announcement.enabled">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                  <prop type="dateTime" name="expirationDate" arg="$lab.properties.announcement.expirationDate"/>
                  <prop type="boolean" name="expired" arg="$lab.properties.announcement.expired"/>
                  <prop type="string" name="markdown" arg="$lab.properties.announcement.markdown"/>
                  <prop type="string" name="title" arg="$lab.properties.announcement.title"/>
                </prop>
                <prop type="string" name="environmentPermission" arg="$lab.properties.environmentPermission">
                  <enum>
                    <item value="&quot;Contributor&quot;"/>
                    <item value="&quot;Reader&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="extendedProperties" arg="$lab.properties.extendedProperties">
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </prop>
                <prop type="string" name="labStorageType" arg="$lab.properties.labStorageType">
                  <default value="&quot;Premium&quot;"/>
                  <enum>
                    <item value="&quot;Premium&quot;"/>
                    <item value="&quot;Standard&quot;"/>
                    <item value="&quot;StandardSSD&quot;"/>
                  </enum>
                </prop>
                <prop type="array<string>" name="mandatoryArtifactsResourceIdsLinux" arg="$lab.properties.mandatoryArtifactsResourceIdsLinux">
                  <item type="string"/>
                </prop>
                <prop type="array<string>" name="mandatoryArtifactsResourceIdsWindows" arg="$lab.properties.mandatoryArtifactsResourceIdsWindows">
                  <item type="string"/>
                </prop>
                <prop type="string" name="premiumDataDisks" arg="$lab.properties.premiumDataDisks">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="support" arg="$lab.properties.support">
                  <prop type="string" name="enabled" arg="$lab.properties.support.enabled">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="markdown" arg="$lab.properties.support.markdown"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$lab.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Labs_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}">
          <request method="put">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Lab_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="get" version="2018-09-15" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/labs/{}" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9sYWJzL3tuYW1lfQ==/V/MjAxOC0wOS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.name" options="name" required="True" group="" idPart="name">
          <help short="The name of the lab."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`."/>
        </arg>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'"/>
        </arg>
      </argGroup>
      <operation operationId="Labs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}">
          <request method="get">
            <path>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevTestLab/labs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="announcement">
                      <prop type="string" name="enabled">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="expirationDate"/>
                      <prop type="boolean" name="expired"/>
                      <prop type="string" name="markdown"/>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="string" name="title"/>
                      <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                    </prop>
                    <prop readOnly="True" type="string" name="artifactsStorageAccount"/>
                    <prop readOnly="True" type="dateTime" name="createdDate"/>
                    <prop readOnly="True" type="string" name="defaultPremiumStorageAccount"/>
                    <prop readOnly="True" type="string" name="defaultStorageAccount"/>
                    <prop type="string" name="environmentPermission">
                      <enum>
                        <item value="&quot;Contributor&quot;"/>
                        <item value="&quot;Reader&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="extendedProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="labStorageType">
                      <default value="&quot;Premium&quot;"/>
                      <enum>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;StandardSSD&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="loadBalancerId"/>
                    <prop type="array<string>" name="mandatoryArtifactsResourceIdsLinux">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="mandatoryArtifactsResourceIdsWindows">
                      <item type="string"/>
                    </prop>
                    <prop readOnly="True" type="string" name="networkSecurityGroupId"/>
                    <prop readOnly="True" type="string" name="premiumDataDiskStorageAccount"/>
                    <prop type="string" name="premiumDataDisks">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop readOnly="True" type="string" name="publicIpId"/>
                    <prop type="object" name="support">
                      <prop type="string" name="enabled">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="markdown"/>
                    </prop>
                    <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                    <prop readOnly="True" type="string" name="vaultName"/>
                    <prop readOnly="True" type="string" name="vmCreationResourceGroup"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
