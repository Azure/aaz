<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/labs/{}/virtualnetworks" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9sYWJzL3tsYWJOYW1lfS92aXJ0dWFsbmV0d29ya3M=/V/MjAxOC0wOS0xNQ=="/>
  <commandGroup name="lab vnet">
    <command name="list" version="2018-09-15">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devtestlab/labs/{}/virtualnetworks" version="2018-09-15" swagger="mgmt-plane/devtestlabs/ResourceProviders/Microsoft.DevTestLab/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2VGVzdExhYi9sYWJzL3tsYWJOYW1lfS92aXJ0dWFsbmV0d29ya3M=/V/MjAxOC0wOS0xNQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.labName" options="lab-name" required="True" idPart="name">
          <help short="The name of the lab."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="Specify the $expand query. Example: 'properties($expand=externalSubnets)'"/>
        </arg>
        <arg type="string" var="$Query.filter" options="filter">
          <help short="The filter to apply to the operation. Example: '$filter=contains(name,'myName')"/>
        </arg>
        <arg type="string" var="$Query.orderby" options="orderby">
          <help short="The ordering expression for the results, using OData notation. Example: '$orderby=name desc'"/>
        </arg>
        <arg type="integer32" var="$Query.top" options="top">
          <help short="The maximum number of resources to return from the operation. Example: '$top=10'"/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworks_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks">
          <request method="get">
            <path>
              <param type="string" name="labName" arg="$Path.labName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand"/>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="string" name="$orderby" arg="$Query.orderby"/>
              <param type="integer32" name="$top" arg="$Query.top"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-09-15&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevTestLab/labs/{}/virtualnetworks/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="allowedSubnets">
                          <item type="object">
                            <prop type="string" name="allowPublicIp">
                              <enum>
                                <item value="&quot;Allow&quot;"/>
                                <item value="&quot;Default&quot;"/>
                                <item value="&quot;Deny&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="labSubnetName"/>
                            <prop type="string" name="resourceId"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="createdDate"/>
                        <prop type="string" name="description"/>
                        <prop type="string" name="externalProviderResourceId"/>
                        <prop readOnly="True" type="array<object>" name="externalSubnets">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop type="array<object>" name="subnetOverrides">
                          <item type="object">
                            <prop type="string" name="labSubnetName"/>
                            <prop type="string" name="resourceId"/>
                            <prop type="object" name="sharedPublicIpAddressConfiguration">
                              <prop type="array<object>" name="allowedPorts">
                                <item type="object">
                                  <prop type="integer32" name="backendPort"/>
                                  <prop type="string" name="transportProtocol">
                                    <enum>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                            </prop>
                            <prop type="string" name="useInVmCreationPermission">
                              <enum>
                                <item value="&quot;Allow&quot;"/>
                                <item value="&quot;Default&quot;"/>
                                <item value="&quot;Deny&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="usePublicIpAddressPermission">
                              <enum>
                                <item value="&quot;Allow&quot;"/>
                                <item value="&quot;Default&quot;"/>
                                <item value="&quot;Deny&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="virtualNetworkPoolName"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="uniqueIdentifier"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
