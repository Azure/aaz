<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.insights/logprofiles/{}" version="2016-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkluc2lnaHRzL2xvZ3Byb2ZpbGVzL3tsb2dQcm9maWxlTmFtZX0=/V/MjAxNi0wMy0wMQ=="/>
  <commandGroup name="monitor log-profiles">
    <command name="show" version="2016-03-01">
      <resource id="/subscriptions/{}/providers/microsoft.insights/logprofiles/{}" version="2016-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkluc2lnaHRzL2xvZ3Byb2ZpbGVzL3tsb2dQcm9maWxlTmFtZX0=/V/MjAxNi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.logProfileName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the log profile."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="LogProfiles_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}">
          <request method="get">
            <path>
              <param type="string" name="logProfileName" arg="$Path.logProfileName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2016-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.Insights/logprofiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="categories" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="locations" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="retentionPolicy" required="True">
                      <prop type="integer32" name="days" required="True">
                        <format minimum="0"/>
                      </prop>
                      <prop type="boolean" name="enabled" required="True"/>
                    </prop>
                    <prop type="string" name="serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2016-03-01" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.insights/logprofiles/{}" version="2016-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkluc2lnaHRzL2xvZ3Byb2ZpbGVzL3tsb2dQcm9maWxlTmFtZX0=/V/MjAxNi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.logProfileName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the log profile."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="LogProfiles_Delete">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}">
          <request method="delete">
            <path>
              <param type="string" name="logProfileName" arg="$Path.logProfileName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2016-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2016-03-01">
      <resource id="/subscriptions/{}/providers/microsoft.insights/logprofiles/{}" version="2016-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkluc2lnaHRzL2xvZ3Byb2ZpbGVzL3tsb2dQcm9maWxlTmFtZX0=/V/MjAxNi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.logProfileName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the log profile."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.categories" options="categories" required="True" group="">
          <help short="Space-separated categories of the logs. These categories are created as is convenient to the user. Some values are: 'Write', 'Delete', and/or 'Action.'"/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.locations" options="locations" required="True" group="">
          <help short="Space-separated list of regions for which Activity Log events should be stored."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$parameters.properties.serviceBusRuleId" options="service-bus-rule-id" group="">
          <help short="The service bus rule ID of the service bus namespace in which you would like to have Event Hubs created for streaming the Activity Log. The rule ID is of the format: '{service bus resource ID}/authorizationrules/{key name}'."/>
        </arg>
        <arg type="string" var="$parameters.properties.storageAccountId" options="storage-account-id" group="">
          <help short="the resource id of the storage account to which you would like to send the Activity Log."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use '' to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Retention Policy">
        <arg type="integer32" var="$parameters.properties.retentionPolicy.days" options="days" required="True" group="Retention Policy">
          <help short="the number of days for the retention in days. A value of 0 will retain the events indefinitely."/>
          <format minimum="0"/>
        </arg>
        <arg type="boolean" var="$parameters.properties.retentionPolicy.enabled" options="enabled" required="True" group="Retention Policy">
          <help short="Whether the retention policy is enabled.  Allowed values: false, true."/>
        </arg>
      </argGroup>
      <operation operationId="LogProfiles_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}">
          <request method="put">
            <path>
              <param type="string" name="logProfileName" arg="$Path.logProfileName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2016-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="categories" arg="$parameters.properties.categories" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="locations" arg="$parameters.properties.locations" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="retentionPolicy" required="True">
                      <prop type="integer32" name="days" arg="$parameters.properties.retentionPolicy.days" required="True">
                        <format minimum="0"/>
                      </prop>
                      <prop type="boolean" name="enabled" arg="$parameters.properties.retentionPolicy.enabled" required="True"/>
                    </prop>
                    <prop type="string" name="serviceBusRuleId" arg="$parameters.properties.serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId" arg="$parameters.properties.storageAccountId"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.Insights/logprofiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="categories" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="locations" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="retentionPolicy" required="True">
                      <prop type="integer32" name="days" required="True">
                        <format minimum="0"/>
                      </prop>
                      <prop type="boolean" name="enabled" required="True"/>
                    </prop>
                    <prop type="string" name="serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2016-03-01">
      <resource id="/subscriptions/{}/providers/microsoft.insights/logprofiles/{}" version="2016-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lkluc2lnaHRzL2xvZ3Byb2ZpbGVzL3tsb2dQcm9maWxlTmFtZX0=/V/MjAxNi0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.logProfileName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the log profile."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="array<string>" var="$parameters.properties.categories" options="categories" group="">
          <help short="Space-separated categories of the logs. These categories are created as is convenient to the user. Some values are: 'Write', 'Delete', and/or 'Action.'"/>
          <item nullable="True" type="string"/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.locations" options="locations" group="">
          <help short="Space-separated list of regions for which Activity Log events should be stored."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.serviceBusRuleId" options="service-bus-rule-id" group="">
          <help short="The service bus rule ID of the service bus namespace in which you would like to have Event Hubs created for streaming the Activity Log. The rule ID is of the format: '{service bus resource ID}/authorizationrules/{key name}'."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.storageAccountId" options="storage-account-id" group="">
          <help short="the resource id of the storage account to which you would like to send the Activity Log."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use '' to clear existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Retention Policy">
        <arg type="integer32" var="$parameters.properties.retentionPolicy.days" options="days" group="Retention Policy">
          <help short="the number of days for the retention in days. A value of 0 will retain the events indefinitely."/>
          <format minimum="0"/>
        </arg>
        <arg type="boolean" var="$parameters.properties.retentionPolicy.enabled" options="enabled" group="Retention Policy">
          <help short="Whether the retention policy is enabled.  Allowed values: false, true."/>
        </arg>
      </argGroup>
      <operation operationId="LogProfiles_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}">
          <request method="get">
            <path>
              <param type="string" name="logProfileName" arg="$Path.logProfileName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2016-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="LogProfileResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/providers/Microsoft.Insights/logprofiles/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<string>" name="categories" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="locations" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="object" name="retentionPolicy" required="True">
                      <prop type="integer32" name="days" required="True">
                        <format minimum="0"/>
                      </prop>
                      <prop type="boolean" name="enabled" required="True"/>
                    </prop>
                    <prop type="string" name="serviceBusRuleId"/>
                    <prop type="string" name="storageAccountId"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="array<string>" name="categories" arg="$parameters.properties.categories" required="True">
                  <item type="string"/>
                </prop>
                <prop type="array<string>" name="locations" arg="$parameters.properties.locations" required="True">
                  <item type="string"/>
                </prop>
                <prop type="object" name="retentionPolicy" required="True">
                  <prop type="integer32" name="days" arg="$parameters.properties.retentionPolicy.days" required="True">
                    <format minimum="0"/>
                  </prop>
                  <prop type="boolean" name="enabled" arg="$parameters.properties.retentionPolicy.enabled" required="True"/>
                </prop>
                <prop type="string" name="serviceBusRuleId" arg="$parameters.properties.serviceBusRuleId"/>
                <prop type="string" name="storageAccountId" arg="$parameters.properties.storageAccountId"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="LogProfiles_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Insights/logprofiles/{logProfileName}">
          <request method="put">
            <path>
              <param type="string" name="logProfileName" arg="$Path.logProfileName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2016-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@LogProfileResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
