<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.loadtestservice/loadtests/{}" version="2022-12-01" swagger="mgmt-plane/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTG9hZFRlc3RTZXJ2aWNlL2xvYWRUZXN0cy97bG9hZFRlc3ROYW1lfQ==/V/MjAyMi0xMi0wMQ=="/>
  <commandGroup name="load">
    <command name="show" version="2022-12-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.loadtestservice/loadtests/{}" version="2022-12-01" swagger="mgmt-plane/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTG9hZFRlc3RTZXJ2aWNlL2xvYWRUZXN0cy97bG9hZFRlc3ROYW1lfQ==/V/MjAyMi0xMi0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s SubscriptionId."/>
        </arg>
      </argGroup>
      <argGroup name="Optional Parameters">
        <arg type="string" var="$Path.loadTestName" options="name n" required="True" group="Optional Parameters" idPart="name">
          <help short="Name of the Azure Load Testing resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="Optional Parameters" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
      </argGroup>
      <operation operationId="LoadTests_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}">
          <request method="get">
            <path>
              <param type="string" name="loadTestName" arg="$Path.loadTestName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.LoadTestService/loadTests/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="dataPlaneURI">
                      <format maxLength="2083"/>
                    </prop>
                    <prop type="string" name="description">
                      <format maxLength="512"/>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="identity">
                        <prop nullable="True" type="string" name="resourceId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="keyUrl"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-12-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.loadtestservice/loadtests/{}" version="2022-12-01" swagger="mgmt-plane/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTG9hZFRlc3RTZXJ2aWNlL2xvYWRUZXN0cy97bG9hZFRlc3ROYW1lfQ==/V/MjAyMi0xMi0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s SubscriptionId."/>
        </arg>
      </argGroup>
      <argGroup name="Optional Parameters">
        <arg type="string" var="$Path.loadTestName" options="name n" required="True" group="Optional Parameters" idPart="name">
          <help short="Name of the Azure Load Testing resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="Optional Parameters" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
      </argGroup>
      <operation operationId="LoadTests_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}">
          <request method="delete">
            <path>
              <param type="string" name="loadTestName" arg="$Path.loadTestName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-12-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.loadtestservice/loadtests/{}" version="2022-12-01" swagger="mgmt-plane/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTG9hZFRlc3RTZXJ2aWNlL2xvYWRUZXN0cy97bG9hZFRlc3ROYW1lfQ==/V/MjAyMi0xMi0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s SubscriptionId."/>
        </arg>
      </argGroup>
      <argGroup name="Optional Parameters">
        <arg type="string" var="$LoadTestResource.identity.type" options="identity-type" group="Optional Parameters">
          <help short="Type of managed service identity."/>
          <default value="&quot;None&quot;"/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$LoadTestResource.identity.userAssignedIdentities" options="user-assigned" group="Optional Parameters">
          <help short="The list of user-assigned identities associated with the resource. The user-assigned identity will be ARM resource id. For example, a list of user-assigned identities would look like &quot;{'/subscriptions/ abcdef01-2345-6789-0abc-def012345678 /resourcegroups/sample-rg/providers/microsoft.managedidentity/userassignedidentities/identity1','/subscriptions/ abcdef01-2345-6789-0abc-def012345678 /resourcegroups/test-rg/providers/microsoft.managedidentity/userassignedidentities/identity2'}&quot;"/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$LoadTestResource.properties.description" options="description" hide="True" group="Optional Parameters">
          <help short="Description of the resource."/>
          <format maxLength="512"/>
        </arg>
        <arg nullable="True" type="string" var="$LoadTestResource.properties.encryption.identity.resourceId" options="encryption-identity" group="Optional Parameters">
          <help short="The managed identity for Customer-managed key settings defining which identity should be used to authenticate to Key Vault."/>
        </arg>
        <arg type="string" var="$LoadTestResource.properties.encryption.identity.type" options="encryption-identity-type" group="Optional Parameters">
          <help short="Type of the managed identity to use for accessing encryption key url."/>
          <enum>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$LoadTestResource.properties.encryption.keyUrl" options="encryption-key" group="Optional Parameters">
          <help short="Encryption key URL, versioned. For example, https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"/>
        </arg>
        <arg type="object" var="$LoadTestResource.tags" options="tags" group="Optional Parameters">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Required Parameters">
        <arg type="ResourceLocation" var="$LoadTestResource.location" options="location l" required="True" group="Required Parameters">
          <help short="Location. Values from: az account list-locations. You can configure the default location using az configure --defaults location=<location>."/>
        </arg>
        <arg type="string" var="$Path.loadTestName" options="name n" required="True" group="Required Parameters" idPart="name">
          <help short="Name of the new Azure Load Testing resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="Required Parameters" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
      </argGroup>
      <operation operationId="LoadTests_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}">
          <request method="put">
            <path>
              <param type="string" name="loadTestName" arg="$Path.loadTestName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="LoadTestResource" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$LoadTestResource.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$LoadTestResource.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$LoadTestResource.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description" arg="$LoadTestResource.properties.description">
                      <format maxLength="512"/>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="identity">
                        <prop nullable="True" type="string" name="resourceId" arg="$LoadTestResource.properties.encryption.identity.resourceId"/>
                        <prop type="string" name="type" arg="$LoadTestResource.properties.encryption.identity.type">
                          <enum>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="keyUrl" arg="$LoadTestResource.properties.encryption.keyUrl"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$LoadTestResource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.LoadTestService/loadTests/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="dataPlaneURI">
                      <format maxLength="2083"/>
                    </prop>
                    <prop type="string" name="description">
                      <format maxLength="512"/>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="identity">
                        <prop nullable="True" type="string" name="resourceId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="keyUrl"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-12-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.loadtestservice/loadtests/{}" version="2022-12-01" swagger="mgmt-plane/loadtestservice/ResourceProviders/Microsoft.LoadTestService/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTG9hZFRlc3RTZXJ2aWNlL2xvYWRUZXN0cy97bG9hZFRlc3ROYW1lfQ==/V/MjAyMi0xMi0wMQ=="/>
      <argGroup name="">
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="Name or ID of subscription. You can configure the default subscription using az account set -s SubscriptionId."/>
        </arg>
      </argGroup>
      <argGroup name="Optional Parameters">
        <arg type="string" var="$LoadTestResourcePatchRequestBody.identity.type" options="identity-type" group="Optional Parameters">
          <help short="Type of managed service identity."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned,UserAssigned" value="&quot;SystemAssigned,UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$LoadTestResourcePatchRequestBody.identity.userAssignedIdentities" options="user-assigned" group="Optional Parameters">
          <help short="The list of user-assigned identities associated with the resource." lines="To remove an identity from the resource, provide null as the value. For example, &quot;{'/subscriptions/ abcdef01-2345-6789-0abc-def012345678 /resourcegroups/sample-rg/providers/microsoft.managedidentity/userassignedidentities/identity1':null}&quot;"/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$LoadTestResourcePatchRequestBody.properties.description" options="description" hide="True" group="Optional Parameters">
          <help short="Description of the resource."/>
          <format maxLength="512"/>
        </arg>
        <arg nullable="True" type="string" var="$LoadTestResourcePatchRequestBody.properties.encryption.identity.resourceId" options="encryption-identity" group="Optional Parameters">
          <help short="The managed identity for Customer-managed key settings defining which identity should be used to authenticate to Key Vault." lines="The value &quot;SystemAssigned&quot; uses the system-assigned managed identity, while &quot;<identity-resource-id>&quot; uses the given user-assigned managed identity."/>
        </arg>
        <arg type="string" var="$LoadTestResourcePatchRequestBody.properties.encryption.identity.type" options="encryption-identity-type" group="Optional Parameters">
          <help short="Type of the managed identity to use for accessing encryption key url."/>
          <enum>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$LoadTestResourcePatchRequestBody.properties.encryption.keyUrl" options="encryption-key" group="Optional Parameters">
          <help short="Encryption key URL, versioned. For example, https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78"/>
        </arg>
        <arg nullable="True" type="object" var="$LoadTestResourcePatchRequestBody.tags" options="tags" group="Optional Parameters">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="string" var="$Path.loadTestName" options="name n" required="True" group="Optional Parameters" idPart="name">
          <help short="Name of the Azure Load Testing resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="Optional Parameters" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using az configure --defaults group=<name>."/>
        </arg>
      </argGroup>
      <operation operationId="LoadTests_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}">
          <request method="patch">
            <path>
              <param type="string" name="loadTestName" arg="$Path.loadTestName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-12-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="LoadTestResourcePatchRequestBody" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$LoadTestResourcePatchRequestBody.identity.type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$LoadTestResourcePatchRequestBody.identity.userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object"/>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description" arg="$LoadTestResourcePatchRequestBody.properties.description">
                      <format maxLength="512"/>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="identity">
                        <prop nullable="True" type="string" name="resourceId" arg="$LoadTestResourcePatchRequestBody.properties.encryption.identity.resourceId"/>
                        <prop type="string" name="type" arg="$LoadTestResourcePatchRequestBody.properties.encryption.identity.type">
                          <enum>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="keyUrl" arg="$LoadTestResourcePatchRequestBody.properties.encryption.keyUrl"/>
                    </prop>
                  </prop>
                  <prop nullable="True" type="object" name="tags" arg="$LoadTestResourcePatchRequestBody.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.LoadTestService/loadTests/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="uuid" name="principalId"/>
                    <prop readOnly="True" type="uuid" name="tenantId"/>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned,UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item nullable="True" type="object">
                          <prop readOnly="True" type="uuid" name="clientId"/>
                          <prop readOnly="True" type="uuid" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="dataPlaneURI">
                      <format maxLength="2083"/>
                    </prop>
                    <prop type="string" name="description">
                      <format maxLength="512"/>
                    </prop>
                    <prop type="object" name="encryption">
                      <prop type="object" name="identity">
                        <prop nullable="True" type="string" name="resourceId"/>
                        <prop type="string" name="type">
                          <enum>
                            <item value="&quot;SystemAssigned&quot;"/>
                            <item value="&quot;UserAssigned&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="keyUrl"/>
                    </prop>
                    <prop type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
