{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}", "version": "2022-10-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9/V/MjAyMi0xMC0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "eventhubs eventhub", "commands": [{"name": "show", "version": "2022-10-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}", "version": "2022-10-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9/V/MjAyMi0xMC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.eventHubName", "options": ["n", "name", "event-hub-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The Event Hub name"}, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "The Namespace name"}, "format": {"maxLength": 50, "minLength": 6}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "EventHubs_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/eventhubs/{}"}}, {"readOnly": true, "type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "captureDescription", "props": [{"type": "object", "name": "destination", "props": [{"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "archiveNameFormat"}, {"type": "string", "name": "blobContainer"}, {"type": "string", "name": "dataLakeAccountName"}, {"type": "string", "name": "dataLakeFolderPath"}, {"type": "uuid", "name": "dataLakeSubscriptionId"}, {"type": "string", "name": "storageAccountResourceId"}], "clientFlatten": true}]}, {"type": "boolean", "name": "enabled"}, {"type": "string", "name": "encoding", "enum": {"items": [{"value": "Avro"}, {"value": "AvroDeflate"}]}}, {"type": "integer32", "name": "intervalInSeconds"}, {"type": "integer32", "name": "sizeLimitInBytes"}, {"type": "boolean", "name": "skipEmptyArchives"}]}, {"readOnly": true, "type": "dateTime", "name": "createdAt"}, {"type": "integer64", "name": "messageRetentionInDays", "format": {"minimum": 1}}, {"type": "integer64", "name": "partitionCount", "format": {"minimum": 1}}, {"readOnly": true, "type": "array<string>", "name": "partitionIds", "item": {"type": "string"}}, {"type": "object", "name": "retentionDescription", "props": [{"type": "string", "name": "cleanupPolicy", "enum": {"items": [{"value": "Compaction"}, {"value": "Delete"}]}}, {"type": "integer64", "name": "retentionTimeInHours"}, {"type": "integer32", "name": "tombstoneRetentionTimeInHours"}]}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Active"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Disabled"}, {"value": "ReceiveDisabled"}, {"value": "Renaming"}, {"value": "Restoring"}, {"value": "SendDisabled"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "dateTime", "name": "updatedAt"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2022-10-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}", "version": "2022-10-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9/V/MjAyMi0xMC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.eventHubName", "options": ["n", "name", "event-hub-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The Event Hub name"}, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "The Namespace name"}, "format": {"maxLength": 50, "minLength": 6}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "EventHubs_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2022-10-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}", "version": "2022-10-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9/V/MjAyMi0xMC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.eventHubName", "options": ["n", "name", "event-hub-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The Event Hub name"}, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "The Namespace name"}, "format": {"maxLength": 50, "minLength": 6}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "CaptureDescription", "args": [{"type": "string", "var": "$parameters.properties.captureDescription.destination.name", "options": ["destination-name"], "group": "CaptureDescription", "help": {"short": "Name for capture destination"}}, {"type": "string", "var": "$parameters.properties.captureDescription.destination.properties.archiveNameFormat", "options": ["archive-name-format"], "group": "CaptureDescription", "help": {"short": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"}}, {"type": "string", "var": "$parameters.properties.captureDescription.destination.properties.blobContainer", "options": ["blob-container"], "group": "CaptureDescription", "help": {"short": "Blob container Name"}}, {"type": "string", "var": "$parameters.properties.captureDescription.destination.properties.dataLakeAccountName", "options": ["data-lake-account-name"], "hide": true, "group": "CaptureDescription", "help": {"short": "The Azure Data Lake Store name for the captured events"}}, {"type": "string", "var": "$parameters.properties.captureDescription.destination.properties.dataLakeFolderPath", "options": ["data-lake-folder-path"], "hide": true, "group": "CaptureDescription", "help": {"short": "The destination folder path for the captured events"}}, {"type": "uuid", "var": "$parameters.properties.captureDescription.destination.properties.dataLakeSubscriptionId", "options": ["data-lake-subscription-id"], "hide": true, "group": "CaptureDescription", "help": {"short": "Subscription Id of Azure Data Lake Store"}}, {"type": "string", "var": "$parameters.properties.captureDescription.destination.properties.storageAccountResourceId", "options": ["storage-account"], "group": "CaptureDescription", "help": {"short": "Resource id of the storage account to be used to create the blobs"}}, {"type": "boolean", "var": "$parameters.properties.captureDescription.enabled", "options": ["enable-capture"], "group": "CaptureDescription", "help": {"short": "A value that indicates whether capture description is enabled."}}, {"type": "string", "var": "$parameters.properties.captureDescription.encoding", "options": ["encoding"], "group": "CaptureDescription", "help": {"short": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version"}, "enum": {"items": [{"name": "Avro", "value": "Avro"}, {"name": "AvroDeflate", "value": "AvroDeflate"}]}}, {"type": "integer32", "var": "$parameters.properties.captureDescription.intervalInSeconds", "options": ["capture-interval"], "group": "CaptureDescription", "help": {"short": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"}}, {"type": "integer32", "var": "$parameters.properties.captureDescription.sizeLimitInBytes", "options": ["capture-size-limit"], "group": "CaptureDescription", "help": {"short": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"}}, {"type": "boolean", "var": "$parameters.properties.captureDescription.skipEmptyArchives", "options": ["skip-empty-archives"], "group": "CaptureDescription", "help": {"short": "A value that indicates whether to Skip Empty Archives"}}]}, {"name": "Properties", "args": [{"type": "integer64", "var": "$parameters.properties.messageRetentionInDays", "options": ["message-retention-in-days"], "group": "Properties", "help": {"short": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"}, "format": {"minimum": 1}}, {"type": "integer64", "var": "$parameters.properties.partitionCount", "options": ["partition-count"], "group": "Properties", "help": {"short": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."}, "format": {"minimum": 1}}, {"type": "string", "var": "$parameters.properties.status", "options": ["status"], "group": "Properties", "help": {"short": "Enumerates the possible values for the status of the Event Hub."}, "enum": {"items": [{"name": "Active", "value": "Active"}, {"name": "Creating", "value": "Creating"}, {"name": "Deleting", "value": "Deleting"}, {"name": "Disabled", "value": "Disabled"}, {"name": "ReceiveDisabled", "value": "ReceiveDisabled"}, {"name": "Renaming", "value": "Renaming"}, {"name": "Restoring", "value": "Restoring"}, {"name": "SendDisabled", "value": "SendDisabled"}, {"name": "Unknown", "value": "Unknown"}]}}]}, {"name": "RetentionDescription", "args": [{"type": "string", "var": "$parameters.properties.retentionDescription.cleanupPolicy", "options": ["cleanup-policy"], "group": "RetentionDescription", "help": {"short": "Enumerates the possible values for cleanup policy"}, "enum": {"items": [{"name": "Compaction", "value": "Compaction"}, {"name": "Delete", "value": "Delete"}]}}, {"type": "integer64", "var": "$parameters.properties.retentionDescription.retentionTimeInHours", "options": ["retention-time", "retention-time-in-hours"], "group": "RetentionDescription", "help": {"short": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compaction the returned value of this property is Long.MaxValue"}}, {"type": "integer32", "var": "$parameters.properties.retentionDescription.tombstoneRetentionTimeInHours", "options": ["t", "tombstone-retention-time-in-hours"], "group": "RetentionDescription", "help": {"short": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compaction. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"}}]}], "operations": [{"operationId": "EventHubs_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "captureDescription", "props": [{"type": "object", "name": "destination", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.captureDescription.destination.name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "archiveNameFormat", "arg": "$parameters.properties.captureDescription.destination.properties.archiveNameFormat"}, {"type": "string", "name": "blobContainer", "arg": "$parameters.properties.captureDescription.destination.properties.blobContainer"}, {"type": "string", "name": "dataLakeAccountName", "arg": "$parameters.properties.captureDescription.destination.properties.dataLakeAccountName"}, {"type": "string", "name": "dataLakeFolderPath", "arg": "$parameters.properties.captureDescription.destination.properties.dataLakeFolderPath"}, {"type": "uuid", "name": "dataLakeSubscriptionId", "arg": "$parameters.properties.captureDescription.destination.properties.dataLakeSubscriptionId"}, {"type": "string", "name": "storageAccountResourceId", "arg": "$parameters.properties.captureDescription.destination.properties.storageAccountResourceId"}], "clientFlatten": true}]}, {"type": "boolean", "name": "enabled", "arg": "$parameters.properties.captureDescription.enabled"}, {"type": "string", "name": "encoding", "arg": "$parameters.properties.captureDescription.encoding", "enum": {"items": [{"value": "Avro"}, {"value": "AvroDeflate"}]}}, {"type": "integer32", "name": "intervalInSeconds", "arg": "$parameters.properties.captureDescription.intervalInSeconds"}, {"type": "integer32", "name": "sizeLimitInBytes", "arg": "$parameters.properties.captureDescription.sizeLimitInBytes"}, {"type": "boolean", "name": "skipEmptyArchives", "arg": "$parameters.properties.captureDescription.skipEmptyArchives"}]}, {"type": "integer64", "name": "messageRetentionInDays", "arg": "$parameters.properties.messageRetentionInDays", "format": {"minimum": 1}}, {"type": "integer64", "name": "partitionCount", "arg": "$parameters.properties.partitionCount", "format": {"minimum": 1}}, {"type": "object", "name": "retentionDescription", "props": [{"type": "string", "name": "cleanupPolicy", "arg": "$parameters.properties.retentionDescription.cleanupPolicy", "enum": {"items": [{"value": "Compaction"}, {"value": "Delete"}]}}, {"type": "integer64", "name": "retentionTimeInHours", "arg": "$parameters.properties.retentionDescription.retentionTimeInHours"}, {"type": "integer32", "name": "tombstoneRetentionTimeInHours", "arg": "$parameters.properties.retentionDescription.tombstoneRetentionTimeInHours"}]}, {"type": "string", "name": "status", "arg": "$parameters.properties.status", "enum": {"items": [{"value": "Active"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Disabled"}, {"value": "ReceiveDisabled"}, {"value": "Renaming"}, {"value": "Restoring"}, {"value": "SendDisabled"}, {"value": "Unknown"}]}}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/eventhubs/{}"}}, {"readOnly": true, "type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "captureDescription", "props": [{"type": "object", "name": "destination", "props": [{"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "archiveNameFormat"}, {"type": "string", "name": "blobContainer"}, {"type": "string", "name": "dataLakeAccountName"}, {"type": "string", "name": "dataLakeFolderPath"}, {"type": "uuid", "name": "dataLakeSubscriptionId"}, {"type": "string", "name": "storageAccountResourceId"}], "clientFlatten": true}]}, {"type": "boolean", "name": "enabled"}, {"type": "string", "name": "encoding", "enum": {"items": [{"value": "Avro"}, {"value": "AvroDeflate"}]}}, {"type": "integer32", "name": "intervalInSeconds"}, {"type": "integer32", "name": "sizeLimitInBytes"}, {"type": "boolean", "name": "skipEmptyArchives"}]}, {"readOnly": true, "type": "dateTime", "name": "createdAt"}, {"type": "integer64", "name": "messageRetentionInDays", "format": {"minimum": 1}}, {"type": "integer64", "name": "partitionCount", "format": {"minimum": 1}}, {"readOnly": true, "type": "array<string>", "name": "partitionIds", "item": {"type": "string"}}, {"type": "object", "name": "retentionDescription", "props": [{"type": "string", "name": "cleanupPolicy", "enum": {"items": [{"value": "Compaction"}, {"value": "Delete"}]}}, {"type": "integer64", "name": "retentionTimeInHours"}, {"type": "integer32", "name": "tombstoneRetentionTimeInHours"}]}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Active"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Disabled"}, {"value": "ReceiveDisabled"}, {"value": "Renaming"}, {"value": "Restoring"}, {"value": "SendDisabled"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "dateTime", "name": "updatedAt"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2022-10-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}", "version": "2022-10-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9/V/MjAyMi0xMC0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.eventHubName", "options": ["n", "name", "event-hub-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The Event Hub name"}, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "The Namespace name"}, "format": {"maxLength": 50, "minLength": 6}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "CaptureDescription", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.captureDescription.destination.name", "options": ["destination-name"], "group": "CaptureDescription", "help": {"short": "Name for capture destination"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.captureDescription.destination.properties.archiveNameFormat", "options": ["archive-name-format"], "group": "CaptureDescription", "help": {"short": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.captureDescription.destination.properties.blobContainer", "options": ["blob-container"], "group": "CaptureDescription", "help": {"short": "Blob container Name"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.captureDescription.destination.properties.dataLakeAccountName", "options": ["data-lake-account-name"], "hide": true, "group": "CaptureDescription", "help": {"short": "The Azure Data Lake Store name for the captured events"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.captureDescription.destination.properties.dataLakeFolderPath", "options": ["data-lake-folder-path"], "hide": true, "group": "CaptureDescription", "help": {"short": "The destination folder path for the captured events"}}, {"nullable": true, "type": "uuid", "var": "$parameters.properties.captureDescription.destination.properties.dataLakeSubscriptionId", "options": ["data-lake-subscription-id"], "hide": true, "group": "CaptureDescription", "help": {"short": "Subscription Id of Azure Data Lake Store"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.captureDescription.destination.properties.storageAccountResourceId", "options": ["storage-account"], "group": "CaptureDescription", "help": {"short": "Resource id of the storage account to be used to create the blobs"}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.captureDescription.enabled", "options": ["enable-capture"], "group": "CaptureDescription", "help": {"short": "A value that indicates whether capture description is enabled."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.captureDescription.encoding", "options": ["encoding"], "group": "CaptureDescription", "help": {"short": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version"}, "enum": {"items": [{"name": "Avro", "value": "Avro"}, {"name": "AvroDeflate", "value": "AvroDeflate"}]}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.captureDescription.intervalInSeconds", "options": ["capture-interval"], "group": "CaptureDescription", "help": {"short": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds"}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.captureDescription.sizeLimitInBytes", "options": ["capture-size-limit"], "group": "CaptureDescription", "help": {"short": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes"}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.captureDescription.skipEmptyArchives", "options": ["skip-empty-archives"], "group": "CaptureDescription", "help": {"short": "A value that indicates whether to Skip Empty Archives"}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "integer64", "var": "$parameters.properties.messageRetentionInDays", "options": ["message-retention-in-days"], "hide": true, "group": "Properties", "help": {"short": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days"}, "format": {"minimum": 1}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.partitionCount", "options": ["partition-count"], "group": "Properties", "help": {"short": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions."}, "format": {"minimum": 1}}, {"nullable": true, "type": "string", "var": "$parameters.properties.status", "options": ["status"], "group": "Properties", "help": {"short": "Enumerates the possible values for the status of the Event Hub."}, "enum": {"items": [{"name": "Active", "value": "Active"}, {"name": "Creating", "value": "Creating"}, {"name": "Deleting", "value": "Deleting"}, {"name": "Disabled", "value": "Disabled"}, {"name": "ReceiveDisabled", "value": "ReceiveDisabled"}, {"name": "Renaming", "value": "Renaming"}, {"name": "Restoring", "value": "Restoring"}, {"name": "SendDisabled", "value": "SendDisabled"}, {"name": "Unknown", "value": "Unknown"}]}}]}, {"name": "RetentionDescription", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.retentionDescription.cleanupPolicy", "options": ["cleanup-policy"], "group": "RetentionDescription", "help": {"short": "Enumerates the possible values for cleanup policy"}, "enum": {"items": [{"name": "Compaction", "value": "Compaction"}, {"name": "Delete", "value": "Delete"}]}}, {"nullable": true, "type": "integer64", "var": "$parameters.properties.retentionDescription.retentionTimeInHours", "options": ["retention-time", "retention-time-in-hours"], "group": "RetentionDescription", "help": {"short": "Number of hours to retain the events for this Event Hub. This value is only used when cleanupPolicy is Delete. If cleanupPolicy is Compaction the returned value of this property is Long.MaxValue"}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.retentionDescription.tombstoneRetentionTimeInHours", "options": ["t", "tombstone-retention-time-in-hours"], "group": "RetentionDescription", "help": {"short": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is only used when cleanupPolicy is Compaction. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub"}}]}], "operations": [{"operationId": "EventHubs_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/eventhubs/{}"}}, {"readOnly": true, "type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "captureDescription", "props": [{"type": "object", "name": "destination", "props": [{"type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "archiveNameFormat"}, {"type": "string", "name": "blobContainer"}, {"type": "string", "name": "dataLakeAccountName"}, {"type": "string", "name": "dataLakeFolderPath"}, {"type": "uuid", "name": "dataLakeSubscriptionId"}, {"type": "string", "name": "storageAccountResourceId"}], "clientFlatten": true}]}, {"type": "boolean", "name": "enabled"}, {"type": "string", "name": "encoding", "enum": {"items": [{"value": "Avro"}, {"value": "AvroDeflate"}]}}, {"type": "integer32", "name": "intervalInSeconds"}, {"type": "integer32", "name": "sizeLimitInBytes"}, {"type": "boolean", "name": "skipEmptyArchives"}]}, {"readOnly": true, "type": "dateTime", "name": "createdAt"}, {"type": "integer64", "name": "messageRetentionInDays", "format": {"minimum": 1}}, {"type": "integer64", "name": "partitionCount", "format": {"minimum": 1}}, {"readOnly": true, "type": "array<string>", "name": "partitionIds", "item": {"type": "string"}}, {"type": "object", "name": "retentionDescription", "props": [{"type": "string", "name": "cleanupPolicy", "enum": {"items": [{"value": "Compaction"}, {"value": "Delete"}]}}, {"type": "integer64", "name": "retentionTimeInHours"}, {"type": "integer32", "name": "tombstoneRetentionTimeInHours"}]}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Active"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Disabled"}, {"value": "ReceiveDisabled"}, {"value": "Renaming"}, {"value": "Restoring"}, {"value": "SendDisabled"}, {"value": "Unknown"}]}}, {"readOnly": true, "type": "dateTime", "name": "updatedAt"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Eventhub_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "object", "name": "captureDescription", "props": [{"type": "object", "name": "destination", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.captureDescription.destination.name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "archiveNameFormat", "arg": "$parameters.properties.captureDescription.destination.properties.archiveNameFormat"}, {"type": "string", "name": "blobContainer", "arg": "$parameters.properties.captureDescription.destination.properties.blobContainer"}, {"type": "string", "name": "dataLakeAccountName", "arg": "$parameters.properties.captureDescription.destination.properties.dataLakeAccountName"}, {"type": "string", "name": "dataLakeFolderPath", "arg": "$parameters.properties.captureDescription.destination.properties.dataLakeFolderPath"}, {"type": "uuid", "name": "dataLakeSubscriptionId", "arg": "$parameters.properties.captureDescription.destination.properties.dataLakeSubscriptionId"}, {"type": "string", "name": "storageAccountResourceId", "arg": "$parameters.properties.captureDescription.destination.properties.storageAccountResourceId"}], "clientFlatten": true}]}, {"type": "boolean", "name": "enabled", "arg": "$parameters.properties.captureDescription.enabled"}, {"type": "string", "name": "encoding", "arg": "$parameters.properties.captureDescription.encoding", "enum": {"items": [{"value": "Avro"}, {"value": "AvroDeflate"}]}}, {"type": "integer32", "name": "intervalInSeconds", "arg": "$parameters.properties.captureDescription.intervalInSeconds"}, {"type": "integer32", "name": "sizeLimitInBytes", "arg": "$parameters.properties.captureDescription.sizeLimitInBytes"}, {"type": "boolean", "name": "skipEmptyArchives", "arg": "$parameters.properties.captureDescription.skipEmptyArchives"}]}, {"type": "integer64", "name": "messageRetentionInDays", "arg": "$parameters.properties.messageRetentionInDays", "format": {"minimum": 1}}, {"type": "integer64", "name": "partitionCount", "arg": "$parameters.properties.partitionCount", "format": {"minimum": 1}}, {"type": "object", "name": "retentionDescription", "props": [{"type": "string", "name": "cleanupPolicy", "arg": "$parameters.properties.retentionDescription.cleanupPolicy", "enum": {"items": [{"value": "Compaction"}, {"value": "Delete"}]}}, {"type": "integer64", "name": "retentionTimeInHours", "arg": "$parameters.properties.retentionDescription.retentionTimeInHours"}, {"type": "integer32", "name": "tombstoneRetentionTimeInHours", "arg": "$parameters.properties.retentionDescription.tombstoneRetentionTimeInHours"}]}, {"type": "string", "name": "status", "arg": "$parameters.properties.status", "enum": {"items": [{"value": "Active"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Disabled"}, {"value": "ReceiveDisabled"}, {"value": "Renaming"}, {"value": "Restoring"}, {"value": "SendDisabled"}, {"value": "Unknown"}]}}], "clientFlatten": true}], "clientFlatten": true}}}}, {"operationId": "EventHubs_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-10-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "@Eventhub_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}