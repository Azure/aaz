<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnsforwardingrulesets/{}/forwardingrules/{}" version="2025-05-01" swagger="mgmt-plane/dnsresolver/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNGb3J3YXJkaW5nUnVsZXNldHMve2Ruc0ZvcndhcmRpbmdSdWxlc2V0TmFtZX0vZm9yd2FyZGluZ1J1bGVzL3tmb3J3YXJkaW5nUnVsZU5hbWV9/V/MjAyNS0wNS0wMQ=="/>
  <commandGroup name="dns-resolver forwarding-rule">
    <command name="show" version="2025-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnsforwardingrulesets/{}/forwardingrules/{}" version="2025-05-01" swagger="mgmt-plane/dnsresolver/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNGb3J3YXJkaW5nUnVsZXNldHMve2Ruc0ZvcndhcmRpbmdSdWxlc2V0TmFtZX0vZm9yd2FyZGluZ1J1bGVzL3tmb3J3YXJkaW5nUnVsZU5hbWV9/V/MjAyNS0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.dnsForwardingRulesetName" options="ruleset-name" required="True" idPart="name">
          <help short="The name of the DNS forwarding ruleset."/>
        </arg>
        <arg type="string" var="$Path.forwardingRuleName" options="forwarding-rule-name name n" required="True" idPart="child_name_1">
          <help short="The name of the forwarding rule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ForwardingRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules/{forwardingRuleName}">
          <request method="get">
            <path>
              <param type="string" name="dnsForwardingRulesetName" arg="$Path.dnsForwardingRulesetName" required="True"/>
              <param type="string" name="forwardingRuleName" arg="$Path.forwardingRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/dnsForwardingRulesets/{}/forwardingRules/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="domainName" required="True"/>
                    <prop type="string" name="forwardingRuleState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="targetDnsServers" required="True">
                      <item type="object">
                        <prop type="string" name="ipAddress" required="True"/>
                        <prop type="integer32" name="port">
                          <default value="53"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-05-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnsforwardingrulesets/{}/forwardingrules/{}" version="2025-05-01" swagger="mgmt-plane/dnsresolver/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNGb3J3YXJkaW5nUnVsZXNldHMve2Ruc0ZvcndhcmRpbmdSdWxlc2V0TmFtZX0vZm9yd2FyZGluZ1J1bGVzL3tmb3J3YXJkaW5nUnVsZU5hbWV9/V/MjAyNS0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match">
          <help short="ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes."/>
        </arg>
        <arg type="string" var="$Path.dnsForwardingRulesetName" options="ruleset-name" required="True" idPart="name">
          <help short="The name of the DNS forwarding ruleset."/>
        </arg>
        <arg type="string" var="$Path.forwardingRuleName" options="forwarding-rule-name name n" required="True" idPart="child_name_1">
          <help short="The name of the forwarding rule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ForwardingRules_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules/{forwardingRuleName}">
          <request method="delete">
            <path>
              <param type="string" name="dnsForwardingRulesetName" arg="$Path.dnsForwardingRulesetName" required="True"/>
              <param type="string" name="forwardingRuleName" arg="$Path.forwardingRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
            </header>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnsforwardingrulesets/{}/forwardingrules/{}" version="2025-05-01" swagger="mgmt-plane/dnsresolver/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNGb3J3YXJkaW5nUnVsZXNldHMve2Ruc0ZvcndhcmRpbmdSdWxlc2V0TmFtZX0vZm9yd2FyZGluZ1J1bGVzL3tmb3J3YXJkaW5nUnVsZU5hbWV9/V/MjAyNS0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match">
          <help short="ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes."/>
        </arg>
        <arg type="string" var="$Header.If-None-Match" options="if-none-match">
          <help short="Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored."/>
        </arg>
        <arg type="string" var="$Path.dnsForwardingRulesetName" options="ruleset-name" required="True" idPart="name">
          <help short="The name of the DNS forwarding ruleset."/>
        </arg>
        <arg type="string" var="$Path.forwardingRuleName" options="forwarding-rule-name name n" required="True" idPart="child_name_1">
          <help short="The name of the forwarding rule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.domainName" options="domain-name" required="True" group="Properties">
          <help short="The domain name for the forwarding rule."/>
        </arg>
        <arg type="string" var="$parameters.properties.forwardingRuleState" options="forwarding-rule-state" group="Properties">
          <help short="The state of forwarding rule."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.properties.metadata" options="metadata" group="Properties">
          <help short="Metadata attached to the forwarding rule. Expect value: KEY1=VALUE1 KEY2=VALUE2 ..."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<object>" var="$parameters.properties.targetDnsServers" options="target-dns-servers" required="True" group="Properties">
          <help short="DNS servers to forward the DNS query to." lines="[{ip-address:XX,port:XX}] --target-dns-servers --target-dns-servers ip-address: specified argument. address. Multiple actions Usage: server server port: port. using more than DNS DNS can one IP be by"/>
          <item type="object">
            <arg type="string" var="$parameters.properties.targetDnsServers[].ipAddress" options="ip-address" required="True">
              <help short="DNS server IP address."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.targetDnsServers[].port" options="port">
              <help short="DNS server port."/>
              <default value="53"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ForwardingRules_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules/{forwardingRuleName}">
          <request method="put">
            <path>
              <param type="string" name="dnsForwardingRulesetName" arg="$Path.dnsForwardingRulesetName" required="True"/>
              <param type="string" name="forwardingRuleName" arg="$Path.forwardingRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
              <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
            </header>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="domainName" arg="$parameters.properties.domainName" required="True"/>
                    <prop type="string" name="forwardingRuleState" arg="$parameters.properties.forwardingRuleState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="metadata" arg="$parameters.properties.metadata">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop type="array<object>" name="targetDnsServers" arg="$parameters.properties.targetDnsServers" required="True">
                      <item type="object">
                        <prop type="string" name="ipAddress" arg="$parameters.properties.targetDnsServers[].ipAddress" required="True"/>
                        <prop type="integer32" name="port" arg="$parameters.properties.targetDnsServers[].port">
                          <default value="53"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/dnsForwardingRulesets/{}/forwardingRules/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="domainName" required="True"/>
                    <prop type="string" name="forwardingRuleState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="targetDnsServers" required="True">
                      <item type="object">
                        <prop type="string" name="ipAddress" required="True"/>
                        <prop type="integer32" name="port">
                          <default value="53"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-05-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/dnsforwardingrulesets/{}/forwardingrules/{}" version="2025-05-01" swagger="mgmt-plane/dnsresolver/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9kbnNGb3J3YXJkaW5nUnVsZXNldHMve2Ruc0ZvcndhcmRpbmdSdWxlc2V0TmFtZX0vZm9yd2FyZGluZ1J1bGVzL3tmb3J3YXJkaW5nUnVsZU5hbWV9/V/MjAyNS0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match">
          <help short="ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes."/>
        </arg>
        <arg type="string" var="$Header.If-None-Match" options="if-none-match" hide="True">
          <help short="Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored."/>
        </arg>
        <arg type="string" var="$Path.dnsForwardingRulesetName" options="ruleset-name" required="True" idPart="name">
          <help short="The name of the DNS forwarding ruleset."/>
        </arg>
        <arg type="string" var="$Path.forwardingRuleName" options="forwarding-rule-name name n" required="True" idPart="child_name_1">
          <help short="The name of the forwarding rule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.domainName" options="domain-name" hide="True" group="Properties">
          <help short="The domain name for the forwarding rule."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.forwardingRuleState" options="forwarding-rule-state" group="Properties">
          <help short="The state of forwarding rule."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.metadata" options="metadata" group="Properties">
          <help short="Metadata attached to the forwarding rule. Expect value: KEY1=VALUE1 KEY2=VALUE2 ..."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<object>" var="$parameters.properties.targetDnsServers" options="target-dns-servers" group="Properties">
          <help short="DNS servers to forward the DNS query to." lines="[{ip-address:XX,port:XX}] --target-dns-servers --target-dns-servers ip-address: specified argument. address. Multiple actions Usage: server server port: port. using more than DNS DNS can one IP be by"/>
          <item nullable="True" type="object">
            <arg type="string" var="$parameters.properties.targetDnsServers[].ipAddress" options="ip-address">
              <help short="DNS server IP address."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.targetDnsServers[].port" options="port">
              <help short="DNS server port."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="ForwardingRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules/{forwardingRuleName}">
          <request method="get">
            <path>
              <param type="string" name="dnsForwardingRulesetName" arg="$Path.dnsForwardingRulesetName" required="True"/>
              <param type="string" name="forwardingRuleName" arg="$Path.forwardingRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ForwardingRule_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/dnsForwardingRulesets/{}/forwardingRules/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="domainName" required="True"/>
                    <prop type="string" name="forwardingRuleState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="targetDnsServers" required="True">
                      <item type="object">
                        <prop type="string" name="ipAddress" required="True"/>
                        <prop type="integer32" name="port">
                          <default value="53"/>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="string" name="domainName" arg="$parameters.properties.domainName" required="True"/>
                <prop type="string" name="forwardingRuleState" arg="$parameters.properties.forwardingRuleState">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="metadata" arg="$parameters.properties.metadata">
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </prop>
                <prop type="array<object>" name="targetDnsServers" arg="$parameters.properties.targetDnsServers" required="True">
                  <item type="object">
                    <prop type="string" name="ipAddress" arg="$parameters.properties.targetDnsServers[].ipAddress" required="True"/>
                    <prop type="integer32" name="port" arg="$parameters.properties.targetDnsServers[].port">
                      <default value="53"/>
                    </prop>
                  </item>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ForwardingRules_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{dnsForwardingRulesetName}/forwardingRules/{forwardingRuleName}">
          <request method="put">
            <path>
              <param type="string" name="dnsForwardingRulesetName" arg="$Path.dnsForwardingRulesetName" required="True"/>
              <param type="string" name="forwardingRuleName" arg="$Path.forwardingRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
              <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
            </header>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ForwardingRule_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
