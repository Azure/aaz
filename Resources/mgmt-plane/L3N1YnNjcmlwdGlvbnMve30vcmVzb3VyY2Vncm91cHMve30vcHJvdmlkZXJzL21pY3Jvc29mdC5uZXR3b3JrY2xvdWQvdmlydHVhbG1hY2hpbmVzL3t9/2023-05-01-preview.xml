<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/virtualmachines/{}" version="2023-05-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3ZpcnR1YWxNYWNoaW5lcy97dmlydHVhbE1hY2hpbmVOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="networkcloud virtualmachine">
    <command name="show" version="2023-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/virtualmachines/{}" version="2023-05-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3ZpcnR1YWxNYWNoaW5lcy97dmlydHVhbE1hY2hpbmVOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualMachineName" options="virtual-machine-name name n" required="True" idPart="name">
          <help short="The name of the virtual machine."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualMachineName" arg="$Path.virtualMachineName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/virtualMachines/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="adminUsername" required="True">
                      <format pattern="^[a-z_][a-z0-9_]{0,31}$" maxLength="32" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="availabilityZone"/>
                    <prop readOnly="True" type="string" name="bareMetalMachineId"/>
                    <prop type="string" name="bootMethod">
                      <default value="&quot;UEFI&quot;"/>
                      <enum>
                        <item value="&quot;BIOS&quot;"/>
                        <item value="&quot;UEFI&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="cloudServicesNetworkAttachment" required="True">
                      <prop type="string" name="attachedNetworkId" required="True"/>
                      <prop type="string" name="defaultGateway">
                        <enum>
                          <item value="&quot;False&quot;"/>
                          <item value="&quot;True&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipAllocationMethod" required="True">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipv4Address"/>
                      <prop type="string" name="ipv6Address"/>
                      <prop readOnly="True" type="string" name="macAddress"/>
                      <prop type="string" name="networkAttachmentName">
                        <format maxLength="15"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop type="integer64" name="cpuCores" required="True">
                      <format minimum="2"/>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Scheduling&quot;"/>
                        <item value="&quot;Stopped&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="string" name="isolateEmulatorThread">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="memorySizeGB" required="True">
                      <format minimum="1"/>
                    </prop>
                    <prop type="array<object>" name="networkAttachments">
                      <item type="object">
                        <prop type="string" name="attachedNetworkId" required="True"/>
                        <prop type="string" name="defaultGateway">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipAllocationMethod" required="True">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipv4Address"/>
                        <prop type="string" name="ipv6Address"/>
                        <prop readOnly="True" type="string" name="macAddress"/>
                        <prop type="string" name="networkAttachmentName">
                          <format maxLength="15"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="networkData"/>
                    <prop type="array<object>" name="placementHints">
                      <item type="object">
                        <prop type="string" name="hintType" required="True">
                          <enum>
                            <item value="&quot;Affinity&quot;"/>
                            <item value="&quot;AntiAffinity&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="resourceId" required="True">
                          <format minLength="1"/>
                        </prop>
                        <prop type="string" name="schedulingExecution" required="True">
                          <enum>
                            <item value="&quot;Hard&quot;"/>
                            <item value="&quot;Soft&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="scope" required="True">
                          <enum>
                            <item value="&quot;Machine&quot;"/>
                            <item value="&quot;Rack&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="powerState">
                      <enum>
                        <item value="&quot;Off&quot;"/>
                        <item value="&quot;On&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="sshPublicKeys">
                      <item type="object">
                        <prop type="string" name="keyData" required="True">
                          <format minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="storageProfile" required="True">
                      <prop type="object" name="osDisk" required="True">
                        <prop type="string" name="createOption">
                          <default value="&quot;Ephemeral&quot;"/>
                          <enum>
                            <item value="&quot;Ephemeral&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption">
                          <default value="&quot;Delete&quot;"/>
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer64" name="diskSizeGB" required="True"/>
                      </prop>
                      <prop type="array<string>" name="volumeAttachments">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="userData"/>
                    <prop type="string" name="virtioInterface">
                      <default value="&quot;Modern&quot;"/>
                      <enum>
                        <item value="&quot;Modern&quot;"/>
                        <item value="&quot;Transitional&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vmDeviceModel">
                      <default value="&quot;T2&quot;"/>
                      <enum>
                        <item value="&quot;T1&quot;"/>
                        <item value="&quot;T2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vmImage" required="True"/>
                    <prop type="object" name="vmImageRepositoryCredentials">
                      <prop type="string" name="password" required="True" secret="True">
                        <format minLength="1"/>
                      </prop>
                      <prop type="string" name="registryUrl" required="True"/>
                      <prop type="string" name="username" required="True">
                        <format minLength="1"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="volumes">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-05-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/virtualmachines/{}" version="2023-05-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3ZpcnR1YWxNYWNoaW5lcy97dmlydHVhbE1hY2hpbmVOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualMachineName" options="virtual-machine-name name n" required="True" idPart="name">
          <help short="The name of the virtual machine."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualMachineName" arg="$Path.virtualMachineName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/virtualmachines/{}" version="2023-05-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3ZpcnR1YWxNYWNoaW5lcy97dmlydHVhbE1hY2hpbmVOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualMachineName" options="virtual-machine-name name n" required="True" idPart="name">
          <help short="The name of the virtual machine."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
        </arg>
      </argGroup>
      <argGroup name="Authentication">
        <arg type="string" var="$virtualMachineParameters.properties.adminUsername" options="admin-username" required="True" group="Authentication">
          <help short="The name of the administrator to which the ssh public keys will be added into the authorized keys."/>
          <format pattern="^[a-z_][a-z0-9_]{0,31}$" maxLength="32" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$virtualMachineParameters.properties.bootMethod" options="boot-method" group="Properties">
          <help short="Selects the boot method for the virtual machine."/>
          <default value="&quot;UEFI&quot;"/>
          <enum>
            <item name="BIOS" value="&quot;BIOS&quot;"/>
            <item name="UEFI" value="&quot;UEFI&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$virtualMachineParameters.properties.cloudServicesNetworkAttachment" options="cloud-services-network-attachment csn" required="True" group="Properties">
          <help short="The cloud service network that provides platform-level services for the virtual machine."/>
          <arg type="string" var="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.attachedNetworkId" options="attached-network-id" required="True">
            <help short="The resource ID of the associated network attached to the virtual machine. It can be one of cloudServicesNetwork, l3Network, l2Network or trunkedNetwork resources."/>
          </arg>
          <arg type="string" var="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.defaultGateway" options="default-gateway">
            <help short="The indicator of whether this is the default gateway. Only one of the attached networks (including the CloudServicesNetwork attachment) for a single machine may be specified as True."/>
            <enum>
              <item name="False" value="&quot;False&quot;"/>
              <item name="True" value="&quot;True&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.ipAllocationMethod" options="ip-allocation-method" required="True">
            <help short="The IP allocation mechanism for the virtual machine. Dynamic and Static are only valid for l3Network which may also specify Disabled. Otherwise, Disabled is the only permitted value."/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.ipv4Address" options="ipv4-address">
            <help short="The IPv4 address of the virtual machine.  This field is used only if the attached network has IPAllocationType of IPV4 or DualStack.  If IPAllocationMethod is: Static - this field must contain a user specified IPv4 address from within the subnet specified in the attached network. Dynamic - this field is read-only, but will be populated with an address from within the subnet specified in the attached network. Disabled - this field will be empty."/>
          </arg>
          <arg type="string" var="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.ipv6Address" options="ipv6-address">
            <help short="The IPv6 address of the virtual machine.  This field is used only if the attached network has IPAllocationType of IPV6 or DualStack.  If IPAllocationMethod is: Static - this field must contain an IPv6 address range from within the range specified in the attached network. Dynamic - this field is read-only, but will be populated with an range from within the subnet specified in the attached network. Disabled - this field will be empty."/>
          </arg>
          <arg type="string" var="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.networkAttachmentName" options="network-attachment-name">
            <help short="The associated network's interface name. If specified, the network attachment name has a maximum length of 15 characters and must be unique to this virtual machine. If the user doesn’t specify this value, the default interface name of the network resource will be used. For a CloudServicesNetwork resource, this name will be ignored."/>
            <format maxLength="15"/>
          </arg>
        </arg>
        <arg type="integer64" var="$virtualMachineParameters.properties.cpuCores" options="cpu-cores" required="True" group="Properties">
          <help short="The number of CPU cores in the virtual machine."/>
          <format minimum="2"/>
        </arg>
        <arg type="string" var="$virtualMachineParameters.properties.isolateEmulatorThread" options="isolate-emulator-thread" hide="True" group="Properties">
          <help short="Field Deprecated, the value will be ignored if provided. The indicator of whether one of the specified CPU cores is isolated to run the emulator thread for this virtual machine."/>
          <default value="&quot;True&quot;"/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
        <arg type="integer64" var="$virtualMachineParameters.properties.memorySizeGB" options="memory-size-gb memory-size" required="True" group="Properties">
          <help short="The memory size of the virtual machine in GB."/>
          <format minimum="1"/>
        </arg>
        <arg type="array<object>" var="$virtualMachineParameters.properties.networkAttachments" options="network-attachments na" group="Properties">
          <help short="The list of network attachments to the virtual machine."/>
          <item type="object">
            <arg type="string" var="$virtualMachineParameters.properties.networkAttachments[].attachedNetworkId" options="attached-network-id" required="True">
              <help short="The resource ID of the associated network attached to the virtual machine. It can be one of cloudServicesNetwork, l3Network, l2Network or trunkedNetwork resources."/>
            </arg>
            <arg type="string" var="$virtualMachineParameters.properties.networkAttachments[].defaultGateway" options="default-gateway">
              <help short="The indicator of whether this is the default gateway. Only one of the attached networks (including the CloudServicesNetwork attachment) for a single machine may be specified as True."/>
              <enum>
                <item name="False" value="&quot;False&quot;"/>
                <item name="True" value="&quot;True&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$virtualMachineParameters.properties.networkAttachments[].ipAllocationMethod" options="ip-allocation-method" required="True">
              <help short="The IP allocation mechanism for the virtual machine. Dynamic and Static are only valid for l3Network which may also specify Disabled. Otherwise, Disabled is the only permitted value."/>
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$virtualMachineParameters.properties.networkAttachments[].ipv4Address" options="ipv4-address">
              <help short="The IPv4 address of the virtual machine.  This field is used only if the attached network has IPAllocationType of IPV4 or DualStack.  If IPAllocationMethod is: Static - this field must contain a user specified IPv4 address from within the subnet specified in the attached network. Dynamic - this field is read-only, but will be populated with an address from within the subnet specified in the attached network. Disabled - this field will be empty."/>
            </arg>
            <arg type="string" var="$virtualMachineParameters.properties.networkAttachments[].ipv6Address" options="ipv6-address">
              <help short="The IPv6 address of the virtual machine.  This field is used only if the attached network has IPAllocationType of IPV6 or DualStack.  If IPAllocationMethod is: Static - this field must contain an IPv6 address range from within the range specified in the attached network. Dynamic - this field is read-only, but will be populated with an range from within the subnet specified in the attached network. Disabled - this field will be empty."/>
            </arg>
            <arg type="string" var="$virtualMachineParameters.properties.networkAttachments[].networkAttachmentName" options="network-attachment-name">
              <help short="The associated network's interface name. If specified, the network attachment name has a maximum length of 15 characters and must be unique to this virtual machine. If the user doesn’t specify this value, the default interface name of the network resource will be used. For a CloudServicesNetwork resource, this name will be ignored."/>
              <format maxLength="15"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$virtualMachineParameters.properties.networkData" options="network-data nd" group="Properties">
          <help short="The Base64 encoded cloud-init network data."/>
        </arg>
        <arg type="array<object>" var="$virtualMachineParameters.properties.placementHints" options="placement-hints ph" group="Properties">
          <help short="The scheduling hints for the virtual machine."/>
          <item type="object">
            <arg type="string" var="$virtualMachineParameters.properties.placementHints[].hintType" options="hint-type" required="True">
              <help short="The specification of whether this hint supports affinity or anti-affinity with the referenced resources."/>
              <enum>
                <item name="Affinity" value="&quot;Affinity&quot;"/>
                <item name="AntiAffinity" value="&quot;AntiAffinity&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$virtualMachineParameters.properties.placementHints[].resourceId" options="resource-id" required="True">
              <help short="The resource ID of the target object that the placement hints will be checked against, e.g., the bare metal node to host the virtual machine."/>
              <format minLength="1"/>
            </arg>
            <arg type="string" var="$virtualMachineParameters.properties.placementHints[].schedulingExecution" options="scheduling-execution" required="True">
              <help short="The indicator of whether the hint is a hard or soft requirement during scheduling."/>
              <enum>
                <item name="Hard" value="&quot;Hard&quot;"/>
                <item name="Soft" value="&quot;Soft&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$virtualMachineParameters.properties.placementHints[].scope" options="scope" required="True">
              <help short="The scope for the virtual machine affinity or anti-affinity placement hint. It should always be &quot;Machine&quot; in the case of node affinity."/>
              <enum>
                <item name="Machine" value="&quot;Machine&quot;"/>
                <item name="Rack" value="&quot;Rack&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$virtualMachineParameters.properties.sshPublicKeys" options="ssh-public-keys" group="Properties">
          <help short="The list of ssh public keys. Each key will be added to the virtual machine using the cloud-init ssh_authorized_keys mechanism for the adminUsername."/>
          <item type="object">
            <arg type="string" var="$virtualMachineParameters.properties.sshPublicKeys[].keyData" options="key-data" required="True">
              <help short="The public ssh key of the user."/>
              <format minLength="1"/>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$virtualMachineParameters.properties.storageProfile" options="storage-profile" required="True" group="Properties">
          <help short="The storage profile that specifies size and other parameters about the disks related to the virtual machine."/>
          <arg type="string" var="$virtualMachineParameters.properties.storageProfile.osDisk.createOption" options="create-option" group="OsDisk">
            <help short="The strategy for creating the OS disk."/>
            <default value="&quot;Ephemeral&quot;"/>
            <enum>
              <item name="Ephemeral" value="&quot;Ephemeral&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$virtualMachineParameters.properties.storageProfile.osDisk.deleteOption" options="delete-option" group="OsDisk">
            <help short="The strategy for deleting the OS disk."/>
            <default value="&quot;Delete&quot;"/>
            <enum>
              <item name="Delete" value="&quot;Delete&quot;"/>
            </enum>
          </arg>
          <arg type="integer64" var="$virtualMachineParameters.properties.storageProfile.osDisk.diskSizeGB" options="disk-size-gb disk-size" required="True" group="OsDisk">
            <help short="The size of the disk in gigabytes. Required if the createOption is Ephemeral."/>
          </arg>
          <arg type="array<string>" var="$virtualMachineParameters.properties.storageProfile.volumeAttachments" options="volume-attachments">
            <help short="The resource IDs of volumes that are requested to be attached to the virtual machine."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="string" var="$virtualMachineParameters.properties.userData" options="user-data ud" group="Properties">
          <help short="The Base64 encoded cloud-init user data."/>
        </arg>
        <arg type="string" var="$virtualMachineParameters.properties.virtioInterface" options="virtio-interface vi" hide="True" group="Properties">
          <help short="Field Deprecated, use virtualizationModel instead. The type of the virtio interface."/>
          <default value="&quot;Modern&quot;"/>
          <enum>
            <item name="Modern" value="&quot;Modern&quot;"/>
            <item name="Transitional" value="&quot;Transitional&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$virtualMachineParameters.properties.vmDeviceModel" options="vm-device-model" group="Properties">
          <help short="The type of the device model to use."/>
          <default value="&quot;T2&quot;"/>
          <enum>
            <item name="T1" value="&quot;T1&quot;"/>
            <item name="T2" value="&quot;T2&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$virtualMachineParameters.properties.vmImage" options="vm-image" required="True" group="Properties">
          <help short="The virtual machine image that is currently provisioned to the OS disk, using the full url and tag notation used to pull the image."/>
        </arg>
        <arg type="object" var="$virtualMachineParameters.properties.vmImageRepositoryCredentials" options="vm-image-repository-credentials vmi-creds" group="Properties">
          <help short="The credentials used to login to the image repository that has access to the specified image."/>
          <arg type="string" var="$virtualMachineParameters.properties.vmImageRepositoryCredentials.password" options="password" required="True">
            <help short="The password or token used to access an image in the target repository."/>
            <format minLength="1"/>
          </arg>
          <arg type="string" var="$virtualMachineParameters.properties.vmImageRepositoryCredentials.registryUrl" options="registry-url" required="True">
            <help short="The URL of the authentication server used to validate the repository credentials."/>
          </arg>
          <arg type="string" var="$virtualMachineParameters.properties.vmImageRepositoryCredentials.username" options="username" required="True">
            <help short="The username used to access an image in the target repository."/>
            <format minLength="1"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="VirtualMachineParameters">
        <arg type="object" var="$virtualMachineParameters.extendedLocation" options="extended-location" required="True" group="VirtualMachineParameters">
          <help short="The extended location of the cluster associated with the resource."/>
          <arg type="string" var="$virtualMachineParameters.extendedLocation.name" options="name" required="True">
            <help short="The resource ID of the extended location on which the resource will be created."/>
          </arg>
          <arg type="string" var="$virtualMachineParameters.extendedLocation.type" options="type" required="True">
            <help short="The extended location type, for example, CustomLocation."/>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$virtualMachineParameters.location" options="location l" required="True" group="VirtualMachineParameters">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$virtualMachineParameters.tags" options="tags" group="VirtualMachineParameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualMachineName" arg="$Path.virtualMachineName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="virtualMachineParameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$virtualMachineParameters.extendedLocation" required="True">
                    <prop type="string" name="name" arg="$virtualMachineParameters.extendedLocation.name" required="True"/>
                    <prop type="string" name="type" arg="$virtualMachineParameters.extendedLocation.type" required="True"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$virtualMachineParameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="adminUsername" arg="$virtualMachineParameters.properties.adminUsername" required="True">
                      <format pattern="^[a-z_][a-z0-9_]{0,31}$" maxLength="32" minLength="1"/>
                    </prop>
                    <prop type="string" name="bootMethod" arg="$virtualMachineParameters.properties.bootMethod">
                      <default value="&quot;UEFI&quot;"/>
                      <enum>
                        <item value="&quot;BIOS&quot;"/>
                        <item value="&quot;UEFI&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="cloudServicesNetworkAttachment" arg="$virtualMachineParameters.properties.cloudServicesNetworkAttachment" required="True">
                      <prop type="string" name="attachedNetworkId" arg="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.attachedNetworkId" required="True"/>
                      <prop type="string" name="defaultGateway" arg="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.defaultGateway">
                        <enum>
                          <item value="&quot;False&quot;"/>
                          <item value="&quot;True&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipAllocationMethod" arg="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.ipAllocationMethod" required="True">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipv4Address" arg="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.ipv4Address"/>
                      <prop type="string" name="ipv6Address" arg="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.ipv6Address"/>
                      <prop type="string" name="networkAttachmentName" arg="$virtualMachineParameters.properties.cloudServicesNetworkAttachment.networkAttachmentName">
                        <format maxLength="15"/>
                      </prop>
                    </prop>
                    <prop type="integer64" name="cpuCores" arg="$virtualMachineParameters.properties.cpuCores" required="True">
                      <format minimum="2"/>
                    </prop>
                    <prop type="string" name="isolateEmulatorThread" arg="$virtualMachineParameters.properties.isolateEmulatorThread">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="memorySizeGB" arg="$virtualMachineParameters.properties.memorySizeGB" required="True">
                      <format minimum="1"/>
                    </prop>
                    <prop type="array<object>" name="networkAttachments" arg="$virtualMachineParameters.properties.networkAttachments">
                      <item type="object">
                        <prop type="string" name="attachedNetworkId" arg="$virtualMachineParameters.properties.networkAttachments[].attachedNetworkId" required="True"/>
                        <prop type="string" name="defaultGateway" arg="$virtualMachineParameters.properties.networkAttachments[].defaultGateway">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipAllocationMethod" arg="$virtualMachineParameters.properties.networkAttachments[].ipAllocationMethod" required="True">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipv4Address" arg="$virtualMachineParameters.properties.networkAttachments[].ipv4Address"/>
                        <prop type="string" name="ipv6Address" arg="$virtualMachineParameters.properties.networkAttachments[].ipv6Address"/>
                        <prop type="string" name="networkAttachmentName" arg="$virtualMachineParameters.properties.networkAttachments[].networkAttachmentName">
                          <format maxLength="15"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="networkData" arg="$virtualMachineParameters.properties.networkData"/>
                    <prop type="array<object>" name="placementHints" arg="$virtualMachineParameters.properties.placementHints">
                      <item type="object">
                        <prop type="string" name="hintType" arg="$virtualMachineParameters.properties.placementHints[].hintType" required="True">
                          <enum>
                            <item value="&quot;Affinity&quot;"/>
                            <item value="&quot;AntiAffinity&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="resourceId" arg="$virtualMachineParameters.properties.placementHints[].resourceId" required="True">
                          <format minLength="1"/>
                        </prop>
                        <prop type="string" name="schedulingExecution" arg="$virtualMachineParameters.properties.placementHints[].schedulingExecution" required="True">
                          <enum>
                            <item value="&quot;Hard&quot;"/>
                            <item value="&quot;Soft&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="scope" arg="$virtualMachineParameters.properties.placementHints[].scope" required="True">
                          <enum>
                            <item value="&quot;Machine&quot;"/>
                            <item value="&quot;Rack&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="sshPublicKeys" arg="$virtualMachineParameters.properties.sshPublicKeys">
                      <item type="object">
                        <prop type="string" name="keyData" arg="$virtualMachineParameters.properties.sshPublicKeys[].keyData" required="True">
                          <format minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="storageProfile" arg="$virtualMachineParameters.properties.storageProfile" required="True">
                      <prop type="object" name="osDisk" required="True">
                        <prop type="string" name="createOption" arg="$virtualMachineParameters.properties.storageProfile.osDisk.createOption">
                          <default value="&quot;Ephemeral&quot;"/>
                          <enum>
                            <item value="&quot;Ephemeral&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption" arg="$virtualMachineParameters.properties.storageProfile.osDisk.deleteOption">
                          <default value="&quot;Delete&quot;"/>
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer64" name="diskSizeGB" arg="$virtualMachineParameters.properties.storageProfile.osDisk.diskSizeGB" required="True"/>
                      </prop>
                      <prop type="array<string>" name="volumeAttachments" arg="$virtualMachineParameters.properties.storageProfile.volumeAttachments">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="userData" arg="$virtualMachineParameters.properties.userData"/>
                    <prop type="string" name="virtioInterface" arg="$virtualMachineParameters.properties.virtioInterface">
                      <default value="&quot;Modern&quot;"/>
                      <enum>
                        <item value="&quot;Modern&quot;"/>
                        <item value="&quot;Transitional&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vmDeviceModel" arg="$virtualMachineParameters.properties.vmDeviceModel">
                      <default value="&quot;T2&quot;"/>
                      <enum>
                        <item value="&quot;T1&quot;"/>
                        <item value="&quot;T2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vmImage" arg="$virtualMachineParameters.properties.vmImage" required="True"/>
                    <prop type="object" name="vmImageRepositoryCredentials" arg="$virtualMachineParameters.properties.vmImageRepositoryCredentials">
                      <prop type="string" name="password" arg="$virtualMachineParameters.properties.vmImageRepositoryCredentials.password" required="True" secret="True">
                        <format minLength="1"/>
                      </prop>
                      <prop type="string" name="registryUrl" arg="$virtualMachineParameters.properties.vmImageRepositoryCredentials.registryUrl" required="True"/>
                      <prop type="string" name="username" arg="$virtualMachineParameters.properties.vmImageRepositoryCredentials.username" required="True">
                        <format minLength="1"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$virtualMachineParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/virtualMachines/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="adminUsername" required="True">
                      <format pattern="^[a-z_][a-z0-9_]{0,31}$" maxLength="32" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="availabilityZone"/>
                    <prop readOnly="True" type="string" name="bareMetalMachineId"/>
                    <prop type="string" name="bootMethod">
                      <default value="&quot;UEFI&quot;"/>
                      <enum>
                        <item value="&quot;BIOS&quot;"/>
                        <item value="&quot;UEFI&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="cloudServicesNetworkAttachment" required="True">
                      <prop type="string" name="attachedNetworkId" required="True"/>
                      <prop type="string" name="defaultGateway">
                        <enum>
                          <item value="&quot;False&quot;"/>
                          <item value="&quot;True&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipAllocationMethod" required="True">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipv4Address"/>
                      <prop type="string" name="ipv6Address"/>
                      <prop readOnly="True" type="string" name="macAddress"/>
                      <prop type="string" name="networkAttachmentName">
                        <format maxLength="15"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop type="integer64" name="cpuCores" required="True">
                      <format minimum="2"/>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Scheduling&quot;"/>
                        <item value="&quot;Stopped&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="string" name="isolateEmulatorThread">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="memorySizeGB" required="True">
                      <format minimum="1"/>
                    </prop>
                    <prop type="array<object>" name="networkAttachments">
                      <item type="object">
                        <prop type="string" name="attachedNetworkId" required="True"/>
                        <prop type="string" name="defaultGateway">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipAllocationMethod" required="True">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipv4Address"/>
                        <prop type="string" name="ipv6Address"/>
                        <prop readOnly="True" type="string" name="macAddress"/>
                        <prop type="string" name="networkAttachmentName">
                          <format maxLength="15"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="networkData"/>
                    <prop type="array<object>" name="placementHints">
                      <item type="object">
                        <prop type="string" name="hintType" required="True">
                          <enum>
                            <item value="&quot;Affinity&quot;"/>
                            <item value="&quot;AntiAffinity&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="resourceId" required="True">
                          <format minLength="1"/>
                        </prop>
                        <prop type="string" name="schedulingExecution" required="True">
                          <enum>
                            <item value="&quot;Hard&quot;"/>
                            <item value="&quot;Soft&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="scope" required="True">
                          <enum>
                            <item value="&quot;Machine&quot;"/>
                            <item value="&quot;Rack&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="powerState">
                      <enum>
                        <item value="&quot;Off&quot;"/>
                        <item value="&quot;On&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="sshPublicKeys">
                      <item type="object">
                        <prop type="string" name="keyData" required="True">
                          <format minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="storageProfile" required="True">
                      <prop type="object" name="osDisk" required="True">
                        <prop type="string" name="createOption">
                          <default value="&quot;Ephemeral&quot;"/>
                          <enum>
                            <item value="&quot;Ephemeral&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption">
                          <default value="&quot;Delete&quot;"/>
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer64" name="diskSizeGB" required="True"/>
                      </prop>
                      <prop type="array<string>" name="volumeAttachments">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="userData"/>
                    <prop type="string" name="virtioInterface">
                      <default value="&quot;Modern&quot;"/>
                      <enum>
                        <item value="&quot;Modern&quot;"/>
                        <item value="&quot;Transitional&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vmDeviceModel">
                      <default value="&quot;T2&quot;"/>
                      <enum>
                        <item value="&quot;T1&quot;"/>
                        <item value="&quot;T2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vmImage" required="True"/>
                    <prop type="object" name="vmImageRepositoryCredentials">
                      <prop type="string" name="password" required="True" secret="True">
                        <format minLength="1"/>
                      </prop>
                      <prop type="string" name="registryUrl" required="True"/>
                      <prop type="string" name="username" required="True">
                        <format minLength="1"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="volumes">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-05-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/virtualmachines/{}" version="2023-05-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL3ZpcnR1YWxNYWNoaW5lcy97dmlydHVhbE1hY2hpbmVOYW1lfQ==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.virtualMachineName" options="virtual-machine-name name n" required="True" idPart="name">
          <help short="The name of the virtual machine."/>
          <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$virtualMachineUpdateParameters.properties.vmImageRepositoryCredentials" options="vm-image-repository-credentials vmi-creds" group="Properties">
          <help short="The credentials used to login to the image repository that has access to the specified image."/>
          <arg type="string" var="$virtualMachineUpdateParameters.properties.vmImageRepositoryCredentials.password" options="password" required="True">
            <help short="The password or token used to access an image in the target repository."/>
            <format minLength="1"/>
          </arg>
          <arg type="string" var="$virtualMachineUpdateParameters.properties.vmImageRepositoryCredentials.registryUrl" options="registry-url" required="True">
            <help short="The URL of the authentication server used to validate the repository credentials."/>
          </arg>
          <arg type="string" var="$virtualMachineUpdateParameters.properties.vmImageRepositoryCredentials.username" options="username" required="True">
            <help short="The username used to access an image in the target repository."/>
            <format minLength="1"/>
          </arg>
        </arg>
      </argGroup>
      <argGroup name="VirtualMachineUpdateParameters">
        <arg type="object" var="$virtualMachineUpdateParameters.tags" options="tags" group="VirtualMachineUpdateParameters">
          <help short="The Azure resource tags that will replace the existing ones."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}">
          <request method="patch">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="virtualMachineName" arg="$Path.virtualMachineName" required="True">
                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="virtualMachineUpdateParameters" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="vmImageRepositoryCredentials" arg="$virtualMachineUpdateParameters.properties.vmImageRepositoryCredentials">
                      <prop type="string" name="password" arg="$virtualMachineUpdateParameters.properties.vmImageRepositoryCredentials.password" required="True" secret="True">
                        <format minLength="1"/>
                      </prop>
                      <prop type="string" name="registryUrl" arg="$virtualMachineUpdateParameters.properties.vmImageRepositoryCredentials.registryUrl" required="True"/>
                      <prop type="string" name="username" arg="$virtualMachineUpdateParameters.properties.vmImageRepositoryCredentials.username" required="True">
                        <format minLength="1"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$virtualMachineUpdateParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualMachine_read">
                  <prop type="object" name="extendedLocation" required="True">
                    <prop type="string" name="name" required="True"/>
                    <prop type="string" name="type" required="True"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/virtualMachines/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="adminUsername" required="True">
                      <format pattern="^[a-z_][a-z0-9_]{0,31}$" maxLength="32" minLength="1"/>
                    </prop>
                    <prop readOnly="True" type="string" name="availabilityZone"/>
                    <prop readOnly="True" type="string" name="bareMetalMachineId"/>
                    <prop type="string" name="bootMethod">
                      <default value="&quot;UEFI&quot;"/>
                      <enum>
                        <item value="&quot;BIOS&quot;"/>
                        <item value="&quot;UEFI&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="cloudServicesNetworkAttachment" required="True">
                      <prop type="string" name="attachedNetworkId" required="True"/>
                      <prop type="string" name="defaultGateway">
                        <enum>
                          <item value="&quot;False&quot;"/>
                          <item value="&quot;True&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipAllocationMethod" required="True">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Dynamic&quot;"/>
                          <item value="&quot;Static&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="ipv4Address"/>
                      <prop type="string" name="ipv6Address"/>
                      <prop readOnly="True" type="string" name="macAddress"/>
                      <prop type="string" name="networkAttachmentName">
                        <format maxLength="15"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="clusterId"/>
                    <prop type="integer64" name="cpuCores" required="True">
                      <format minimum="2"/>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatus">
                      <enum>
                        <item value="&quot;Available&quot;"/>
                        <item value="&quot;Error&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Scheduling&quot;"/>
                        <item value="&quot;Stopped&quot;"/>
                        <item value="&quot;Terminating&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                    <prop type="string" name="isolateEmulatorThread">
                      <default value="&quot;True&quot;"/>
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="memorySizeGB" required="True">
                      <format minimum="1"/>
                    </prop>
                    <prop type="array<object>" name="networkAttachments">
                      <item type="object">
                        <prop type="string" name="attachedNetworkId" required="True"/>
                        <prop type="string" name="defaultGateway">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipAllocationMethod" required="True">
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="ipv4Address"/>
                        <prop type="string" name="ipv6Address"/>
                        <prop readOnly="True" type="string" name="macAddress"/>
                        <prop type="string" name="networkAttachmentName">
                          <format maxLength="15"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="networkData"/>
                    <prop type="array<object>" name="placementHints">
                      <item type="object">
                        <prop type="string" name="hintType" required="True">
                          <enum>
                            <item value="&quot;Affinity&quot;"/>
                            <item value="&quot;AntiAffinity&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="resourceId" required="True">
                          <format minLength="1"/>
                        </prop>
                        <prop type="string" name="schedulingExecution" required="True">
                          <enum>
                            <item value="&quot;Hard&quot;"/>
                            <item value="&quot;Soft&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="scope" required="True">
                          <enum>
                            <item value="&quot;Machine&quot;"/>
                            <item value="&quot;Rack&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="powerState">
                      <enum>
                        <item value="&quot;Off&quot;"/>
                        <item value="&quot;On&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="sshPublicKeys">
                      <item type="object">
                        <prop type="string" name="keyData" required="True">
                          <format minLength="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="storageProfile" required="True">
                      <prop type="object" name="osDisk" required="True">
                        <prop type="string" name="createOption">
                          <default value="&quot;Ephemeral&quot;"/>
                          <enum>
                            <item value="&quot;Ephemeral&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption">
                          <default value="&quot;Delete&quot;"/>
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer64" name="diskSizeGB" required="True"/>
                      </prop>
                      <prop type="array<string>" name="volumeAttachments">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="string" name="userData"/>
                    <prop type="string" name="virtioInterface">
                      <default value="&quot;Modern&quot;"/>
                      <enum>
                        <item value="&quot;Modern&quot;"/>
                        <item value="&quot;Transitional&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vmDeviceModel">
                      <default value="&quot;T2&quot;"/>
                      <enum>
                        <item value="&quot;T1&quot;"/>
                        <item value="&quot;T2&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="vmImage" required="True"/>
                    <prop type="object" name="vmImageRepositoryCredentials">
                      <prop type="string" name="password" required="True" secret="True">
                        <format minLength="1"/>
                      </prop>
                      <prop type="string" name="registryUrl" required="True"/>
                      <prop type="string" name="username" required="True">
                        <format minLength="1"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="volumes">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@VirtualMachine_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
