<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/oracle.database/autonomousdatabases" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvT3JhY2xlLkRhdGFiYXNlL2F1dG9ub21vdXNEYXRhYmFzZXM=/V/MjAyMy0wOS0wMQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/autonomousdatabases" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvYXV0b25vbW91c0RhdGFiYXNlcw==/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="oracle-database autonomous-database">
    <command name="list" version="2023-09-01">
      <resource id="/subscriptions/{}/providers/oracle.database/autonomousdatabases" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvT3JhY2xlLkRhdGFiYXNlL2F1dG9ub21vdXNEYXRhYmFzZXM=/V/MjAyMy0wOS0wMQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/oracle.database/autonomousdatabases" version="2023-09-01" swagger="mgmt-plane/oracle/ResourceProviders/Oracle.Database/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9PcmFjbGUuRGF0YWJhc2UvYXV0b25vbW91c0RhdGFiYXNlcw==/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_AutonomousDatabases_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_AutonomousDatabases_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_AutonomousDatabases_ListByResourceGroup" operationId="AutonomousDatabases_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/autonomousDatabases">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/autonomousDatabases/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="float64" name="actualUsedDataStorageSizeInTbs"/>
                        <prop readOnly="True" type="float64" name="allocatedStorageSizeInTbs"/>
                        <prop type="object" name="apexDetails">
                          <prop type="string" name="apexVersion"/>
                          <prop type="string" name="ordsVersion"/>
                        </prop>
                        <prop type="ResourceId" name="autonomousDatabaseId"/>
                        <prop type="string" name="autonomousMaintenanceScheduleType">
                          <enum>
                            <item value="&quot;Early&quot;"/>
                            <item value="&quot;Regular&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="availableUpgradeVersions">
                          <item type="string"/>
                        </prop>
                        <prop type="integer32" name="backupRetentionPeriodInDays"/>
                        <prop type="string" name="characterSet">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop type="float32" name="computeCount">
                          <format maximum="512.0" minimum="0.0"/>
                        </prop>
                        <prop type="string" name="computeModel">
                          <enum>
                            <item value="&quot;ECPU&quot;"/>
                            <item value="&quot;OCPU&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="connectionStrings">
                          <prop type="object" name="allConnectionStrings">
                            <prop type="string" name="high">
                              <format maxLength="255" minLength="10"/>
                            </prop>
                            <prop type="string" name="low">
                              <format maxLength="255" minLength="10"/>
                            </prop>
                            <prop type="string" name="medium">
                              <format maxLength="255" minLength="10"/>
                            </prop>
                          </prop>
                          <prop type="string" name="dedicated">
                            <format maxLength="255" minLength="10"/>
                          </prop>
                          <prop type="string" name="high">
                            <format maxLength="255" minLength="10"/>
                          </prop>
                          <prop type="string" name="low">
                            <format maxLength="255" minLength="10"/>
                          </prop>
                          <prop type="string" name="medium">
                            <format maxLength="255" minLength="10"/>
                          </prop>
                          <prop type="array<object>" name="profiles">
                            <item type="object">
                              <prop type="string" name="consumerGroup">
                                <enum>
                                  <item value="&quot;High&quot;"/>
                                  <item value="&quot;Low&quot;"/>
                                  <item value="&quot;Medium&quot;"/>
                                  <item value="&quot;Tp&quot;"/>
                                  <item value="&quot;Tpurgent&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="displayName" required="True">
                                <format maxLength="255" minLength="1"/>
                              </prop>
                              <prop type="string" name="hostFormat" required="True">
                                <enum>
                                  <item value="&quot;Fqdn&quot;"/>
                                  <item value="&quot;Ip&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="isRegional"/>
                              <prop type="string" name="protocol" required="True">
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;TCPS&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="sessionMode" required="True">
                                <enum>
                                  <item value="&quot;Direct&quot;"/>
                                  <item value="&quot;Redirect&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="syntaxFormat" required="True">
                                <enum>
                                  <item value="&quot;Ezconnect&quot;"/>
                                  <item value="&quot;Ezconnectplus&quot;"/>
                                  <item value="&quot;Long&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="tlsAuthentication">
                                <enum>
                                  <item value="&quot;Mutual&quot;"/>
                                  <item value="&quot;Server&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="value" required="True"/>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="connectionUrls">
                          <prop type="string" name="apexUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="databaseTransformsUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="graphStudioUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="machineLearningNotebookUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="mongoDbUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="ordsUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="sqlDevWebUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                        </prop>
                        <prop type="integer32" name="cpuCoreCount">
                          <format maximum="128" minimum="1"/>
                        </prop>
                        <prop type="array<object>" name="customerContacts">
                          <item type="object">
                            <prop type="string" name="email" required="True">
                              <format maxLength="320" minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="dataSafeStatus">
                          <enum>
                            <item value="&quot;Deregistering&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotRegistered&quot;"/>
                            <item value="&quot;Registered&quot;"/>
                            <item value="&quot;Registering&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer32" name="dataStorageSizeInGbs">
                          <format maximum="393216" minimum="20"/>
                        </prop>
                        <prop type="integer32" name="dataStorageSizeInTbs">
                          <format maximum="384" minimum="1"/>
                        </prop>
                        <prop type="string" name="databaseEdition">
                          <enum>
                            <item value="&quot;EnterpriseEdition&quot;"/>
                            <item value="&quot;StandardEdition&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="dbVersion">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop type="string" name="dbWorkload">
                          <enum>
                            <item value="&quot;AJD&quot;"/>
                            <item value="&quot;APEX&quot;"/>
                            <item value="&quot;DW&quot;"/>
                            <item value="&quot;OLTP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="displayName">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="integer32" name="failedDataRecoveryInSeconds"/>
                        <prop readOnly="True" type="integer32" name="inMemoryAreaInGbs"/>
                        <prop type="boolean" name="isAutoScalingEnabled"/>
                        <prop type="boolean" name="isAutoScalingForStorageEnabled"/>
                        <prop type="boolean" name="isLocalDataGuardEnabled"/>
                        <prop type="boolean" name="isMtlsConnectionRequired"/>
                        <prop readOnly="True" type="boolean" name="isPreview"/>
                        <prop readOnly="True" type="boolean" name="isRemoteDataGuardEnabled"/>
                        <prop type="string" name="licenseModel">
                          <enum>
                            <item value="&quot;BringYourOwnLicense&quot;"/>
                            <item value="&quot;LicenseIncluded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="lifecycleDetails"/>
                        <prop type="string" name="lifecycleState">
                          <enum>
                            <item value="&quot;Available&quot;"/>
                            <item value="&quot;AvailableNeedsAttention&quot;"/>
                            <item value="&quot;BackupInProgress&quot;"/>
                            <item value="&quot;Inaccessible&quot;"/>
                            <item value="&quot;MaintenanceInProgress&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Recreating&quot;"/>
                            <item value="&quot;Restarting&quot;"/>
                            <item value="&quot;RestoreFailed&quot;"/>
                            <item value="&quot;RestoreInProgress&quot;"/>
                            <item value="&quot;RoleChangeInProgress&quot;"/>
                            <item value="&quot;ScaleInProgress&quot;"/>
                            <item value="&quot;Standby&quot;"/>
                            <item value="&quot;Starting&quot;"/>
                            <item value="&quot;Stopped&quot;"/>
                            <item value="&quot;Stopping&quot;"/>
                            <item value="&quot;Terminated&quot;"/>
                            <item value="&quot;Terminating&quot;"/>
                            <item value="&quot;Unavailable&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                            <item value="&quot;Upgrading&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer32" name="localAdgAutoFailoverMaxDataLossLimit">
                          <format maximum="3600" minimum="0"/>
                        </prop>
                        <prop type="string" name="localDisasterRecoveryType">
                          <enum>
                            <item value="&quot;Adg&quot;"/>
                            <item value="&quot;BackupBased&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="localStandbyDb">
                          <prop type="integer32" name="lagTimeInSeconds"/>
                          <prop type="string" name="lifecycleDetails"/>
                          <prop type="string" name="lifecycleState">
                            <enum>
                              <item value="&quot;Available&quot;"/>
                              <item value="&quot;AvailableNeedsAttention&quot;"/>
                              <item value="&quot;BackupInProgress&quot;"/>
                              <item value="&quot;Inaccessible&quot;"/>
                              <item value="&quot;MaintenanceInProgress&quot;"/>
                              <item value="&quot;Provisioning&quot;"/>
                              <item value="&quot;Recreating&quot;"/>
                              <item value="&quot;Restarting&quot;"/>
                              <item value="&quot;RestoreFailed&quot;"/>
                              <item value="&quot;RestoreInProgress&quot;"/>
                              <item value="&quot;RoleChangeInProgress&quot;"/>
                              <item value="&quot;ScaleInProgress&quot;"/>
                              <item value="&quot;Standby&quot;"/>
                              <item value="&quot;Starting&quot;"/>
                              <item value="&quot;Stopped&quot;"/>
                              <item value="&quot;Stopping&quot;"/>
                              <item value="&quot;Terminated&quot;"/>
                              <item value="&quot;Terminating&quot;"/>
                              <item value="&quot;Unavailable&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                              <item value="&quot;Upgrading&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="timeDataGuardRoleChanged"/>
                          <prop type="string" name="timeDisasterRecoveryRoleChanged"/>
                        </prop>
                        <prop type="object" name="longTermBackupSchedule">
                          <prop type="boolean" name="isDisabled"/>
                          <prop type="string" name="repeatCadence">
                            <enum>
                              <item value="&quot;Monthly&quot;"/>
                              <item value="&quot;OneTime&quot;"/>
                              <item value="&quot;Weekly&quot;"/>
                              <item value="&quot;Yearly&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="retentionPeriodInDays">
                            <format maximum="2558" minimum="90"/>
                          </prop>
                          <prop type="dateTime" name="timeOfBackup"/>
                        </prop>
                        <prop readOnly="True" type="integer32" name="memoryPerOracleComputeUnitInGbs"/>
                        <prop type="string" name="ncharacterSet">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="nextLongTermBackupTimeStamp"/>
                        <prop readOnly="True" type="string" name="ociUrl"/>
                        <prop type="string" name="ocid">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop type="string" name="openMode">
                          <enum>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="operationsInsightsStatus">
                          <enum>
                            <item value="&quot;Disabling&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Enabling&quot;"/>
                            <item value="&quot;FailedDisabling&quot;"/>
                            <item value="&quot;FailedEnabling&quot;"/>
                            <item value="&quot;NotEnabled&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="peerDbIds">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="permissionLevel">
                          <enum>
                            <item value="&quot;Restricted&quot;"/>
                            <item value="&quot;Unrestricted&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="privateEndpoint"/>
                        <prop type="string" name="privateEndpointIp"/>
                        <prop type="string" name="privateEndpointLabel"/>
                        <prop readOnly="True" type="array<integer32>" name="provisionableCpus">
                          <item type="integer32"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="role">
                          <enum>
                            <item value="&quot;BackupCopy&quot;"/>
                            <item value="&quot;DisabledStandby&quot;"/>
                            <item value="&quot;Primary&quot;"/>
                            <item value="&quot;SnapshotStandby&quot;"/>
                            <item value="&quot;Standby&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="scheduledOperations">
                          <prop type="object" name="dayOfWeek" required="True">
                            <prop type="string" name="name" required="True">
                              <enum>
                                <item value="&quot;Friday&quot;"/>
                                <item value="&quot;Monday&quot;"/>
                                <item value="&quot;Saturday&quot;"/>
                                <item value="&quot;Sunday&quot;"/>
                                <item value="&quot;Thursday&quot;"/>
                                <item value="&quot;Tuesday&quot;"/>
                                <item value="&quot;Wednesday&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="scheduledStartTime">
                            <format maxLength="50" minLength="1"/>
                          </prop>
                          <prop type="string" name="scheduledStopTime">
                            <format maxLength="50" minLength="1"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="serviceConsoleUrl">
                          <format maxLength="255" minLength="10"/>
                        </prop>
                        <prop readOnly="True" type="string" name="sqlWebDeveloperUrl">
                          <format maxLength="2048" minLength="10"/>
                        </prop>
                        <prop type="ResourceId" name="subnetId"/>
                        <prop readOnly="True" type="array<string>" name="supportedRegionsToCloneTo">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="timeCreated"/>
                        <prop readOnly="True" type="string" name="timeDataGuardRoleChanged"/>
                        <prop readOnly="True" type="string" name="timeDeletionOfFreeAutonomousDatabase"/>
                        <prop readOnly="True" type="string" name="timeLocalDataGuardEnabled"/>
                        <prop readOnly="True" type="dateTime" name="timeMaintenanceBegin"/>
                        <prop readOnly="True" type="dateTime" name="timeMaintenanceEnd"/>
                        <prop readOnly="True" type="string" name="timeOfLastFailover"/>
                        <prop readOnly="True" type="string" name="timeOfLastRefresh"/>
                        <prop readOnly="True" type="string" name="timeOfLastRefreshPoint"/>
                        <prop readOnly="True" type="string" name="timeOfLastSwitchover"/>
                        <prop readOnly="True" type="string" name="timeReclamationOfFreeAutonomousDatabase"/>
                        <prop readOnly="True" type="integer32" name="usedDataStorageSizeInGbs"/>
                        <prop readOnly="True" type="integer32" name="usedDataStorageSizeInTbs"/>
                        <prop type="ResourceId" name="vnetId"/>
                        <prop type="array<string>" name="whitelistedIps">
                          <item type="string">
                            <format maxLength="1024" minLength="1"/>
                          </item>
                        </prop>
                        <discriminator property="dataBaseType" value="Clone">
                          <prop readOnly="True" type="boolean" name="isReconnectCloneEnabled"/>
                          <prop readOnly="True" type="boolean" name="isRefreshableClone"/>
                          <prop type="string" name="refreshableStatus">
                            <enum>
                              <item value="&quot;NotRefreshing&quot;"/>
                              <item value="&quot;Refreshing&quot;"/>
                            </enum>
                          </prop>
                          <prop type="ResourceId" name="sourceId" required="True"/>
                          <prop type="string" name="timeUntilReconnectCloneEnabled"/>
                        </discriminator>
                        <discriminator property="dataBaseType" value="Regular"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_AutonomousDatabases_ListBySubscription" operationId="AutonomousDatabases_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Oracle.Database/autonomousDatabases">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Oracle.Database/autonomousDatabases/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="float64" name="actualUsedDataStorageSizeInTbs"/>
                        <prop readOnly="True" type="float64" name="allocatedStorageSizeInTbs"/>
                        <prop type="object" name="apexDetails">
                          <prop type="string" name="apexVersion"/>
                          <prop type="string" name="ordsVersion"/>
                        </prop>
                        <prop type="ResourceId" name="autonomousDatabaseId"/>
                        <prop type="string" name="autonomousMaintenanceScheduleType">
                          <enum>
                            <item value="&quot;Early&quot;"/>
                            <item value="&quot;Regular&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="availableUpgradeVersions">
                          <item type="string"/>
                        </prop>
                        <prop type="integer32" name="backupRetentionPeriodInDays"/>
                        <prop type="string" name="characterSet">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop type="float32" name="computeCount">
                          <format maximum="512.0" minimum="0.0"/>
                        </prop>
                        <prop type="string" name="computeModel">
                          <enum>
                            <item value="&quot;ECPU&quot;"/>
                            <item value="&quot;OCPU&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="connectionStrings">
                          <prop type="object" name="allConnectionStrings">
                            <prop type="string" name="high">
                              <format maxLength="255" minLength="10"/>
                            </prop>
                            <prop type="string" name="low">
                              <format maxLength="255" minLength="10"/>
                            </prop>
                            <prop type="string" name="medium">
                              <format maxLength="255" minLength="10"/>
                            </prop>
                          </prop>
                          <prop type="string" name="dedicated">
                            <format maxLength="255" minLength="10"/>
                          </prop>
                          <prop type="string" name="high">
                            <format maxLength="255" minLength="10"/>
                          </prop>
                          <prop type="string" name="low">
                            <format maxLength="255" minLength="10"/>
                          </prop>
                          <prop type="string" name="medium">
                            <format maxLength="255" minLength="10"/>
                          </prop>
                          <prop type="array<object>" name="profiles">
                            <item type="object">
                              <prop type="string" name="consumerGroup">
                                <enum>
                                  <item value="&quot;High&quot;"/>
                                  <item value="&quot;Low&quot;"/>
                                  <item value="&quot;Medium&quot;"/>
                                  <item value="&quot;Tp&quot;"/>
                                  <item value="&quot;Tpurgent&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="displayName" required="True">
                                <format maxLength="255" minLength="1"/>
                              </prop>
                              <prop type="string" name="hostFormat" required="True">
                                <enum>
                                  <item value="&quot;Fqdn&quot;"/>
                                  <item value="&quot;Ip&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="isRegional"/>
                              <prop type="string" name="protocol" required="True">
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;TCPS&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="sessionMode" required="True">
                                <enum>
                                  <item value="&quot;Direct&quot;"/>
                                  <item value="&quot;Redirect&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="syntaxFormat" required="True">
                                <enum>
                                  <item value="&quot;Ezconnect&quot;"/>
                                  <item value="&quot;Ezconnectplus&quot;"/>
                                  <item value="&quot;Long&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="tlsAuthentication">
                                <enum>
                                  <item value="&quot;Mutual&quot;"/>
                                  <item value="&quot;Server&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="value" required="True"/>
                            </item>
                          </prop>
                        </prop>
                        <prop type="object" name="connectionUrls">
                          <prop type="string" name="apexUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="databaseTransformsUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="graphStudioUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="machineLearningNotebookUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="mongoDbUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="ordsUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                          <prop type="string" name="sqlDevWebUrl">
                            <format maxLength="512" minLength="10"/>
                          </prop>
                        </prop>
                        <prop type="integer32" name="cpuCoreCount">
                          <format maximum="128" minimum="1"/>
                        </prop>
                        <prop type="array<object>" name="customerContacts">
                          <item type="object">
                            <prop type="string" name="email" required="True">
                              <format maxLength="320" minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="dataSafeStatus">
                          <enum>
                            <item value="&quot;Deregistering&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;NotRegistered&quot;"/>
                            <item value="&quot;Registered&quot;"/>
                            <item value="&quot;Registering&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer32" name="dataStorageSizeInGbs">
                          <format maximum="393216" minimum="20"/>
                        </prop>
                        <prop type="integer32" name="dataStorageSizeInTbs">
                          <format maximum="384" minimum="1"/>
                        </prop>
                        <prop type="string" name="databaseEdition">
                          <enum>
                            <item value="&quot;EnterpriseEdition&quot;"/>
                            <item value="&quot;StandardEdition&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="dbVersion">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop type="string" name="dbWorkload">
                          <enum>
                            <item value="&quot;AJD&quot;"/>
                            <item value="&quot;APEX&quot;"/>
                            <item value="&quot;DW&quot;"/>
                            <item value="&quot;OLTP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="displayName">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="integer32" name="failedDataRecoveryInSeconds"/>
                        <prop readOnly="True" type="integer32" name="inMemoryAreaInGbs"/>
                        <prop type="boolean" name="isAutoScalingEnabled"/>
                        <prop type="boolean" name="isAutoScalingForStorageEnabled"/>
                        <prop type="boolean" name="isLocalDataGuardEnabled"/>
                        <prop type="boolean" name="isMtlsConnectionRequired"/>
                        <prop readOnly="True" type="boolean" name="isPreview"/>
                        <prop readOnly="True" type="boolean" name="isRemoteDataGuardEnabled"/>
                        <prop type="string" name="licenseModel">
                          <enum>
                            <item value="&quot;BringYourOwnLicense&quot;"/>
                            <item value="&quot;LicenseIncluded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="lifecycleDetails"/>
                        <prop type="string" name="lifecycleState">
                          <enum>
                            <item value="&quot;Available&quot;"/>
                            <item value="&quot;AvailableNeedsAttention&quot;"/>
                            <item value="&quot;BackupInProgress&quot;"/>
                            <item value="&quot;Inaccessible&quot;"/>
                            <item value="&quot;MaintenanceInProgress&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Recreating&quot;"/>
                            <item value="&quot;Restarting&quot;"/>
                            <item value="&quot;RestoreFailed&quot;"/>
                            <item value="&quot;RestoreInProgress&quot;"/>
                            <item value="&quot;RoleChangeInProgress&quot;"/>
                            <item value="&quot;ScaleInProgress&quot;"/>
                            <item value="&quot;Standby&quot;"/>
                            <item value="&quot;Starting&quot;"/>
                            <item value="&quot;Stopped&quot;"/>
                            <item value="&quot;Stopping&quot;"/>
                            <item value="&quot;Terminated&quot;"/>
                            <item value="&quot;Terminating&quot;"/>
                            <item value="&quot;Unavailable&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                            <item value="&quot;Upgrading&quot;"/>
                          </enum>
                        </prop>
                        <prop type="integer32" name="localAdgAutoFailoverMaxDataLossLimit">
                          <format maximum="3600" minimum="0"/>
                        </prop>
                        <prop type="string" name="localDisasterRecoveryType">
                          <enum>
                            <item value="&quot;Adg&quot;"/>
                            <item value="&quot;BackupBased&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="localStandbyDb">
                          <prop type="integer32" name="lagTimeInSeconds"/>
                          <prop type="string" name="lifecycleDetails"/>
                          <prop type="string" name="lifecycleState">
                            <enum>
                              <item value="&quot;Available&quot;"/>
                              <item value="&quot;AvailableNeedsAttention&quot;"/>
                              <item value="&quot;BackupInProgress&quot;"/>
                              <item value="&quot;Inaccessible&quot;"/>
                              <item value="&quot;MaintenanceInProgress&quot;"/>
                              <item value="&quot;Provisioning&quot;"/>
                              <item value="&quot;Recreating&quot;"/>
                              <item value="&quot;Restarting&quot;"/>
                              <item value="&quot;RestoreFailed&quot;"/>
                              <item value="&quot;RestoreInProgress&quot;"/>
                              <item value="&quot;RoleChangeInProgress&quot;"/>
                              <item value="&quot;ScaleInProgress&quot;"/>
                              <item value="&quot;Standby&quot;"/>
                              <item value="&quot;Starting&quot;"/>
                              <item value="&quot;Stopped&quot;"/>
                              <item value="&quot;Stopping&quot;"/>
                              <item value="&quot;Terminated&quot;"/>
                              <item value="&quot;Terminating&quot;"/>
                              <item value="&quot;Unavailable&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                              <item value="&quot;Upgrading&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="timeDataGuardRoleChanged"/>
                          <prop type="string" name="timeDisasterRecoveryRoleChanged"/>
                        </prop>
                        <prop type="object" name="longTermBackupSchedule">
                          <prop type="boolean" name="isDisabled"/>
                          <prop type="string" name="repeatCadence">
                            <enum>
                              <item value="&quot;Monthly&quot;"/>
                              <item value="&quot;OneTime&quot;"/>
                              <item value="&quot;Weekly&quot;"/>
                              <item value="&quot;Yearly&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="retentionPeriodInDays">
                            <format maximum="2558" minimum="90"/>
                          </prop>
                          <prop type="dateTime" name="timeOfBackup"/>
                        </prop>
                        <prop readOnly="True" type="integer32" name="memoryPerOracleComputeUnitInGbs"/>
                        <prop type="string" name="ncharacterSet">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="nextLongTermBackupTimeStamp"/>
                        <prop readOnly="True" type="string" name="ociUrl"/>
                        <prop type="string" name="ocid">
                          <format maxLength="255" minLength="1"/>
                        </prop>
                        <prop type="string" name="openMode">
                          <enum>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="operationsInsightsStatus">
                          <enum>
                            <item value="&quot;Disabling&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;Enabling&quot;"/>
                            <item value="&quot;FailedDisabling&quot;"/>
                            <item value="&quot;FailedEnabling&quot;"/>
                            <item value="&quot;NotEnabled&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="peerDbIds">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="permissionLevel">
                          <enum>
                            <item value="&quot;Restricted&quot;"/>
                            <item value="&quot;Unrestricted&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="privateEndpoint"/>
                        <prop type="string" name="privateEndpointIp"/>
                        <prop type="string" name="privateEndpointLabel"/>
                        <prop readOnly="True" type="array<integer32>" name="provisionableCpus">
                          <item type="integer32"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Provisioning&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="role">
                          <enum>
                            <item value="&quot;BackupCopy&quot;"/>
                            <item value="&quot;DisabledStandby&quot;"/>
                            <item value="&quot;Primary&quot;"/>
                            <item value="&quot;SnapshotStandby&quot;"/>
                            <item value="&quot;Standby&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="scheduledOperations">
                          <prop type="object" name="dayOfWeek" required="True">
                            <prop type="string" name="name" required="True">
                              <enum>
                                <item value="&quot;Friday&quot;"/>
                                <item value="&quot;Monday&quot;"/>
                                <item value="&quot;Saturday&quot;"/>
                                <item value="&quot;Sunday&quot;"/>
                                <item value="&quot;Thursday&quot;"/>
                                <item value="&quot;Tuesday&quot;"/>
                                <item value="&quot;Wednesday&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="scheduledStartTime">
                            <format maxLength="50" minLength="1"/>
                          </prop>
                          <prop type="string" name="scheduledStopTime">
                            <format maxLength="50" minLength="1"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="serviceConsoleUrl">
                          <format maxLength="255" minLength="10"/>
                        </prop>
                        <prop readOnly="True" type="string" name="sqlWebDeveloperUrl">
                          <format maxLength="2048" minLength="10"/>
                        </prop>
                        <prop type="ResourceId" name="subnetId"/>
                        <prop readOnly="True" type="array<string>" name="supportedRegionsToCloneTo">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="timeCreated"/>
                        <prop readOnly="True" type="string" name="timeDataGuardRoleChanged"/>
                        <prop readOnly="True" type="string" name="timeDeletionOfFreeAutonomousDatabase"/>
                        <prop readOnly="True" type="string" name="timeLocalDataGuardEnabled"/>
                        <prop readOnly="True" type="dateTime" name="timeMaintenanceBegin"/>
                        <prop readOnly="True" type="dateTime" name="timeMaintenanceEnd"/>
                        <prop readOnly="True" type="string" name="timeOfLastFailover"/>
                        <prop readOnly="True" type="string" name="timeOfLastRefresh"/>
                        <prop readOnly="True" type="string" name="timeOfLastRefreshPoint"/>
                        <prop readOnly="True" type="string" name="timeOfLastSwitchover"/>
                        <prop readOnly="True" type="string" name="timeReclamationOfFreeAutonomousDatabase"/>
                        <prop readOnly="True" type="integer32" name="usedDataStorageSizeInGbs"/>
                        <prop readOnly="True" type="integer32" name="usedDataStorageSizeInTbs"/>
                        <prop type="ResourceId" name="vnetId"/>
                        <prop type="array<string>" name="whitelistedIps">
                          <item type="string">
                            <format maxLength="1024" minLength="1"/>
                          </item>
                        </prop>
                        <discriminator property="dataBaseType" value="Clone">
                          <prop readOnly="True" type="boolean" name="isReconnectCloneEnabled"/>
                          <prop readOnly="True" type="boolean" name="isRefreshableClone"/>
                          <prop type="string" name="refreshableStatus">
                            <enum>
                              <item value="&quot;NotRefreshing&quot;"/>
                              <item value="&quot;Refreshing&quot;"/>
                            </enum>
                          </prop>
                          <prop type="ResourceId" name="sourceId" required="True"/>
                          <prop type="string" name="timeUntilReconnectCloneEnabled"/>
                        </discriminator>
                        <discriminator property="dataBaseType" value="Regular"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
