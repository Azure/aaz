{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redis/{}", "version": "2023-04-01", "swagger": "mgmt-plane/redis/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXMve25hbWV9/V/MjAyMy0wNC0wMQ=="}], "commandGroups": [{"name": "cache redis", "commands": [{"name": "show", "version": "2023-04-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redis/{}", "version": "2023-04-01", "swagger": "mgmt-plane/redis/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXMve25hbWV9/V/MjAyMy0wNC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.name", "options": ["n", "name"], "required": true, "idPart": "name", "help": {"short": "The name of the Redis cache."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Redis_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "name", "arg": "$Path.name", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-04-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redis/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "uuid", "name": "principalId"}, {"readOnly": true, "type": "uuid", "name": "tenantId"}, {"type": "string", "name": "type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "accessKeys", "props": [{"readOnly": true, "type": "string", "name": "primaryKey"}, {"readOnly": true, "type": "string", "name": "secondaryKey"}]}, {"default": {"value": false}, "type": "boolean", "name": "enableNonSslPort"}, {"readOnly": true, "type": "string", "name": "hostName"}, {"readOnly": true, "type": "array<object>", "name": "instances", "item": {"type": "object", "props": [{"readOnly": true, "type": "boolean", "name": "isMaster"}, {"readOnly": true, "type": "boolean", "name": "isPrimary"}, {"readOnly": true, "type": "integer32", "name": "nonSslPort"}, {"readOnly": true, "type": "integer32", "name": "shardId"}, {"readOnly": true, "type": "integer32", "name": "sslPort"}, {"readOnly": true, "type": "string", "name": "zone"}]}, "identifiers": ["shardId"]}, {"readOnly": true, "type": "array<object>", "name": "linkedServers", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}]}}, {"type": "string", "name": "minimumTlsVersion", "enum": {"items": [{"value": "1.0"}, {"value": "1.1"}, {"value": "1.2"}]}}, {"readOnly": true, "type": "integer32", "name": "port"}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redis/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"readOnly": true, "type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "required": true, "props": [{"type": "string", "name": "actionsRequired"}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Disabled"}, {"value": "Failed"}, {"value": "Linking"}, {"value": "Provisioning"}, {"value": "RecoveringScaleFailure"}, {"value": "Scaling"}, {"value": "Succeeded"}, {"value": "Unlinking"}, {"value": "Unprovisioning"}, {"value": "Updating"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "redisConfiguration", "props": [{"type": "string", "name": "aof-backup-enabled"}, {"type": "string", "name": "aof-storage-connection-string-0"}, {"type": "string", "name": "aof-storage-connection-string-1"}, {"type": "string", "name": "authnotrequired"}, {"readOnly": true, "type": "string", "name": "maxclients"}, {"type": "string", "name": "maxfragmentationmemory-reserved"}, {"type": "string", "name": "maxmemory-delta"}, {"type": "string", "name": "maxmemory-policy"}, {"type": "string", "name": "maxmemory-reserved"}, {"readOnly": true, "type": "string", "name": "preferred-data-archive-auth-method"}, {"type": "string", "name": "preferred-data-persistence-auth-method"}, {"type": "string", "name": "rdb-backup-enabled"}, {"type": "string", "name": "rdb-backup-frequency"}, {"type": "string", "name": "rdb-backup-max-snapshot-count"}, {"type": "string", "name": "rdb-storage-connection-string"}, {"type": "string", "name": "storage-subscription-id"}, {"readOnly": true, "type": "string", "name": "zonal-configuration"}], "additionalProps": {"anyType": true}}, {"type": "string", "name": "redisVersion"}, {"type": "integer32", "name": "replicasPerMaster"}, {"type": "integer32", "name": "replicasPerPrimary"}, {"type": "integer32", "name": "shardCount"}, {"type": "object", "name": "sku", "required": true, "props": [{"type": "integer32", "name": "capacity", "required": true}, {"type": "string", "name": "family", "required": true, "enum": {"items": [{"value": "C"}, {"value": "P"}]}}, {"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"readOnly": true, "type": "integer32", "name": "sslPort"}, {"type": "string", "name": "staticIP", "format": {"pattern": "^\\d+\\.\\d+\\.\\d+\\.\\d+$"}}, {"type": "string", "name": "subnetId", "format": {"pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$"}}, {"type": "object", "name": "tenantSettings", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2023-04-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redis/{}", "version": "2023-04-01", "swagger": "mgmt-plane/redis/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXMve25hbWV9/V/MjAyMy0wNC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.name", "options": ["n", "name"], "required": true, "idPart": "name", "help": {"short": "The name of the Redis cache."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Redis_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "name", "arg": "$Path.name", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-04-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2023-04-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redis/{}", "version": "2023-04-01", "swagger": "mgmt-plane/redis/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXMve25hbWV9/V/MjAyMy0wNC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.name", "options": ["n", "name"], "required": true, "idPart": "name", "help": {"short": "The name of the Redis cache."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Parameters", "args": [{"type": "object", "var": "$parameters.identity", "options": ["identity"], "group": "Parameters", "help": {"short": "The identity of the resource."}, "args": [{"type": "string", "var": "$parameters.identity.type", "options": ["type"], "required": true, "help": {"short": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "help": {"short": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."}, "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"type": "string", "var": "$parameters.location", "options": ["location"], "required": true, "group": "Parameters", "help": {"short": "The geo-location where the resource lives"}}, {"type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "var": "$parameters.zones", "options": ["zones"], "group": "Parameters", "help": {"short": "A list of availability zones denoting where the resource needs to come from."}, "item": {"type": "string"}}]}, {"name": "Properties", "args": [{"type": "boolean", "var": "$parameters.properties.enableNonSslPort", "options": ["enable-non-ssl-port"], "group": "Properties", "help": {"short": "Specifies whether the non-ssl Redis server port (6379) is enabled."}, "default": {"value": false}}, {"type": "string", "var": "$parameters.properties.minimumTlsVersion", "options": ["minimum-tls-version"], "group": "Properties", "help": {"short": "Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')"}, "enum": {"items": [{"name": "1.0", "value": "1.0"}, {"name": "1.1", "value": "1.1"}, {"name": "1.2", "value": "1.2"}]}}, {"type": "string", "var": "$parameters.properties.publicNetworkAccess", "options": ["public-network-access"], "group": "Properties", "help": {"short": "Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'"}, "default": {"value": "Enabled"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "object", "var": "$parameters.properties.redisConfiguration", "options": ["redis-configuration"], "group": "Properties", "help": {"short": "All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc."}, "args": [{"type": "string", "var": "$parameters.properties.redisConfiguration.aof-backup-enabled", "options": ["aof-backup-enabled"], "help": {"short": "Specifies whether the aof backup is enabled"}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.aof-storage-connection-string-0", "options": ["aof-storage-connection-string-0"], "help": {"short": "First storage account connection string"}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.aof-storage-connection-string-1", "options": ["aof-storage-connection-string-1"], "help": {"short": "Second storage account connection string"}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.authnotrequired", "options": ["authnotrequired"], "help": {"short": "Specifies whether the authentication is disabled. Setting this property is highly discouraged from security point of view."}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.maxfragmentationmemory-reserved", "options": ["maxfragmentationmemory-reserved"], "help": {"short": "Value in megabytes reserved for fragmentation per shard"}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.maxmemory-delta", "options": ["maxmemory-delta"], "help": {"short": "Value in megabytes reserved for non-cache usage per shard e.g. failover."}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.maxmemory-policy", "options": ["maxmemory-policy"], "help": {"short": "The eviction strategy used when your data won't fit within its memory limit."}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.maxmemory-reserved", "options": ["maxmemory-reserved"], "help": {"short": "Value in megabytes reserved for non-cache usage per shard e.g. failover."}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.preferred-data-persistence-auth-method", "options": ["preferred-data-persistence-auth-method"], "help": {"short": "Preferred auth method to communicate to storage account used for data persistence, specify SAS or ManagedIdentity, default value is SAS"}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.rdb-backup-enabled", "options": ["rdb-backup-enabled"], "help": {"short": "Specifies whether the rdb backup is enabled"}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.rdb-backup-frequency", "options": ["rdb-backup-frequency"], "help": {"short": "Specifies the frequency for creating rdb backup in minutes. Valid values: (15, 30, 60, 360, 720, 1440)"}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.rdb-backup-max-snapshot-count", "options": ["rdb-backup-max-snapshot-count"], "help": {"short": "Specifies the maximum number of snapshots for rdb backup"}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.rdb-storage-connection-string", "options": ["rdb-storage-connection-string"], "help": {"short": "The storage account connection string for storing rdb file"}}, {"type": "string", "var": "$parameters.properties.redisConfiguration.storage-subscription-id", "options": ["storage-subscription-id"], "help": {"short": "SubscriptionId of the storage account for persistence (aof/rdb) using ManagedIdentity."}}], "additionalProps": {"anyType": true}}, {"type": "string", "var": "$parameters.properties.redisVersion", "options": ["redis-version"], "group": "Properties", "help": {"short": "Redis version. This should be in the form 'major[.minor]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'."}}, {"type": "integer32", "var": "$parameters.properties.replicasPerMaster", "options": ["replicas-per-master"], "group": "Properties", "help": {"short": "The number of replicas to be created per primary."}}, {"type": "integer32", "var": "$parameters.properties.replicasPerPrimary", "options": ["replicas-per-primary"], "group": "Properties", "help": {"short": "The number of replicas to be created per primary."}}, {"type": "integer32", "var": "$parameters.properties.shardCount", "options": ["shard-count"], "group": "Properties", "help": {"short": "The number of shards to be created on a Premium Cluster Cache."}}, {"type": "object", "var": "$parameters.properties.sku", "options": ["sku"], "required": true, "group": "Properties", "help": {"short": "The SKU of the Redis cache to deploy."}, "args": [{"type": "integer32", "var": "$parameters.properties.sku.capacity", "options": ["capacity"], "required": true, "help": {"short": "The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)."}}, {"type": "string", "var": "$parameters.properties.sku.family", "options": ["family"], "required": true, "help": {"short": "The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium)."}, "enum": {"items": [{"name": "C", "value": "C"}, {"name": "P", "value": "P"}]}}, {"type": "string", "var": "$parameters.properties.sku.name", "options": ["name"], "required": true, "help": {"short": "The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)"}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Premium", "value": "Premium"}, {"name": "Standard", "value": "Standard"}]}}]}, {"type": "string", "var": "$parameters.properties.staticIP", "options": ["static-ip"], "group": "Properties", "help": {"short": "Static IP address. Optionally, may be specified when deploying a Redis cache inside an existing Azure Virtual Network; auto assigned by default."}, "format": {"pattern": "^\\d+\\.\\d+\\.\\d+\\.\\d+$"}}, {"type": "string", "var": "$parameters.properties.subnetId", "options": ["subnet-id"], "group": "Properties", "help": {"short": "The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1"}, "format": {"pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$"}}, {"type": "object", "var": "$parameters.properties.tenantSettings", "options": ["tenant-settings"], "group": "Properties", "help": {"short": "A dictionary of tenant settings"}, "additionalProps": {"item": {"type": "string"}}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Redis_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "name", "arg": "$Path.name", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-04-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "arg": "$parameters.identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "string", "name": "location", "arg": "$parameters.location", "required": true}, {"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": false}, "type": "boolean", "name": "enableNonSslPort", "arg": "$parameters.properties.enableNonSslPort"}, {"type": "string", "name": "minimumTlsVersion", "arg": "$parameters.properties.minimumTlsVersion", "enum": {"items": [{"value": "1.0"}, {"value": "1.1"}, {"value": "1.2"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "arg": "$parameters.properties.publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "redisConfiguration", "arg": "$parameters.properties.redisConfiguration", "props": [{"type": "string", "name": "aof-backup-enabled", "arg": "$parameters.properties.redisConfiguration.aof-backup-enabled"}, {"type": "string", "name": "aof-storage-connection-string-0", "arg": "$parameters.properties.redisConfiguration.aof-storage-connection-string-0"}, {"type": "string", "name": "aof-storage-connection-string-1", "arg": "$parameters.properties.redisConfiguration.aof-storage-connection-string-1"}, {"type": "string", "name": "authnotrequired", "arg": "$parameters.properties.redisConfiguration.authnotrequired"}, {"type": "string", "name": "maxfragmentationmemory-reserved", "arg": "$parameters.properties.redisConfiguration.maxfragmentationmemory-reserved"}, {"type": "string", "name": "maxmemory-delta", "arg": "$parameters.properties.redisConfiguration.maxmemory-delta"}, {"type": "string", "name": "maxmemory-policy", "arg": "$parameters.properties.redisConfiguration.maxmemory-policy"}, {"type": "string", "name": "maxmemory-reserved", "arg": "$parameters.properties.redisConfiguration.maxmemory-reserved"}, {"type": "string", "name": "preferred-data-persistence-auth-method", "arg": "$parameters.properties.redisConfiguration.preferred-data-persistence-auth-method"}, {"type": "string", "name": "rdb-backup-enabled", "arg": "$parameters.properties.redisConfiguration.rdb-backup-enabled"}, {"type": "string", "name": "rdb-backup-frequency", "arg": "$parameters.properties.redisConfiguration.rdb-backup-frequency"}, {"type": "string", "name": "rdb-backup-max-snapshot-count", "arg": "$parameters.properties.redisConfiguration.rdb-backup-max-snapshot-count"}, {"type": "string", "name": "rdb-storage-connection-string", "arg": "$parameters.properties.redisConfiguration.rdb-storage-connection-string"}, {"type": "string", "name": "storage-subscription-id", "arg": "$parameters.properties.redisConfiguration.storage-subscription-id"}], "additionalProps": {"anyType": true}}, {"type": "string", "name": "redisVersion", "arg": "$parameters.properties.redisVersion"}, {"type": "integer32", "name": "replicasPerMaster", "arg": "$parameters.properties.replicasPerMaster"}, {"type": "integer32", "name": "replicasPerPrimary", "arg": "$parameters.properties.replicasPerPrimary"}, {"type": "integer32", "name": "shardCount", "arg": "$parameters.properties.shardCount"}, {"type": "object", "name": "sku", "arg": "$parameters.properties.sku", "required": true, "props": [{"type": "integer32", "name": "capacity", "arg": "$parameters.properties.sku.capacity", "required": true}, {"type": "string", "name": "family", "arg": "$parameters.properties.sku.family", "required": true, "enum": {"items": [{"value": "C"}, {"value": "P"}]}}, {"type": "string", "name": "name", "arg": "$parameters.properties.sku.name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"type": "string", "name": "staticIP", "arg": "$parameters.properties.staticIP", "format": {"pattern": "^\\d+\\.\\d+\\.\\d+\\.\\d+$"}}, {"type": "string", "name": "subnetId", "arg": "$parameters.properties.subnetId", "format": {"pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$"}}, {"type": "object", "name": "tenantSettings", "arg": "$parameters.properties.tenantSettings", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "zones", "arg": "$parameters.zones", "item": {"type": "string"}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redis/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "uuid", "name": "principalId"}, {"readOnly": true, "type": "uuid", "name": "tenantId"}, {"type": "string", "name": "type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "accessKeys", "props": [{"readOnly": true, "type": "string", "name": "primaryKey"}, {"readOnly": true, "type": "string", "name": "secondaryKey"}]}, {"default": {"value": false}, "type": "boolean", "name": "enableNonSslPort"}, {"readOnly": true, "type": "string", "name": "hostName"}, {"readOnly": true, "type": "array<object>", "name": "instances", "item": {"type": "object", "props": [{"readOnly": true, "type": "boolean", "name": "isMaster"}, {"readOnly": true, "type": "boolean", "name": "isPrimary"}, {"readOnly": true, "type": "integer32", "name": "nonSslPort"}, {"readOnly": true, "type": "integer32", "name": "shardId"}, {"readOnly": true, "type": "integer32", "name": "sslPort"}, {"readOnly": true, "type": "string", "name": "zone"}]}, "identifiers": ["shardId"]}, {"readOnly": true, "type": "array<object>", "name": "linkedServers", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}]}}, {"type": "string", "name": "minimumTlsVersion", "enum": {"items": [{"value": "1.0"}, {"value": "1.1"}, {"value": "1.2"}]}}, {"readOnly": true, "type": "integer32", "name": "port"}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redis/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"readOnly": true, "type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "required": true, "props": [{"type": "string", "name": "actionsRequired"}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Disabled"}, {"value": "Failed"}, {"value": "Linking"}, {"value": "Provisioning"}, {"value": "RecoveringScaleFailure"}, {"value": "Scaling"}, {"value": "Succeeded"}, {"value": "Unlinking"}, {"value": "Unprovisioning"}, {"value": "Updating"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "redisConfiguration", "props": [{"type": "string", "name": "aof-backup-enabled"}, {"type": "string", "name": "aof-storage-connection-string-0"}, {"type": "string", "name": "aof-storage-connection-string-1"}, {"type": "string", "name": "authnotrequired"}, {"readOnly": true, "type": "string", "name": "maxclients"}, {"type": "string", "name": "maxfragmentationmemory-reserved"}, {"type": "string", "name": "maxmemory-delta"}, {"type": "string", "name": "maxmemory-policy"}, {"type": "string", "name": "maxmemory-reserved"}, {"readOnly": true, "type": "string", "name": "preferred-data-archive-auth-method"}, {"type": "string", "name": "preferred-data-persistence-auth-method"}, {"type": "string", "name": "rdb-backup-enabled"}, {"type": "string", "name": "rdb-backup-frequency"}, {"type": "string", "name": "rdb-backup-max-snapshot-count"}, {"type": "string", "name": "rdb-storage-connection-string"}, {"type": "string", "name": "storage-subscription-id"}, {"readOnly": true, "type": "string", "name": "zonal-configuration"}], "additionalProps": {"anyType": true}}, {"type": "string", "name": "redisVersion"}, {"type": "integer32", "name": "replicasPerMaster"}, {"type": "integer32", "name": "replicasPerPrimary"}, {"type": "integer32", "name": "shardCount"}, {"type": "object", "name": "sku", "required": true, "props": [{"type": "integer32", "name": "capacity", "required": true}, {"type": "string", "name": "family", "required": true, "enum": {"items": [{"value": "C"}, {"value": "P"}]}}, {"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"readOnly": true, "type": "integer32", "name": "sslPort"}, {"type": "string", "name": "staticIP", "format": {"pattern": "^\\d+\\.\\d+\\.\\d+\\.\\d+$"}}, {"type": "string", "name": "subnetId", "format": {"pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$"}}, {"type": "object", "name": "tenantSettings", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2023-04-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redis/{}", "version": "2023-04-01", "swagger": "mgmt-plane/redis/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXMve25hbWV9/V/MjAyMy0wNC0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.name", "options": ["n", "name"], "required": true, "idPart": "name", "help": {"short": "The name of the Redis cache."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Parameters", "args": [{"nullable": true, "type": "object", "var": "$parameters.identity", "options": ["identity"], "group": "Parameters", "help": {"short": "The identity of the resource."}, "args": [{"type": "string", "var": "$parameters.identity.type", "options": ["type"], "help": {"short": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed)."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"nullable": true, "type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "help": {"short": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests."}, "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"nullable": true, "type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "array<string>", "var": "$parameters.zones", "options": ["zones"], "group": "Parameters", "help": {"short": "A list of availability zones denoting where the resource needs to come from."}, "item": {"nullable": true, "type": "string"}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.enableNonSslPort", "options": ["enable-non-ssl-port"], "group": "Properties", "help": {"short": "Specifies whether the non-ssl Redis server port (6379) is enabled."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.minimumTlsVersion", "options": ["minimum-tls-version"], "group": "Properties", "help": {"short": "Optional: requires clients to use a specified TLS version (or higher) to connect (e,g, '1.0', '1.1', '1.2')"}, "enum": {"items": [{"name": "1.0", "value": "1.0"}, {"name": "1.1", "value": "1.1"}, {"name": "1.2", "value": "1.2"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.publicNetworkAccess", "options": ["public-network-access"], "group": "Properties", "help": {"short": "Whether or not public endpoint access is allowed for this cache.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'. If 'Disabled', private endpoints are the exclusive access method. Default value is 'Enabled'"}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.redisConfiguration", "options": ["redis-configuration"], "group": "Properties", "help": {"short": "All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.aof-backup-enabled", "options": ["aof-backup-enabled"], "help": {"short": "Specifies whether the aof backup is enabled"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.aof-storage-connection-string-0", "options": ["aof-storage-connection-string-0"], "help": {"short": "First storage account connection string"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.aof-storage-connection-string-1", "options": ["aof-storage-connection-string-1"], "help": {"short": "Second storage account connection string"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.authnotrequired", "options": ["authnotrequired"], "help": {"short": "Specifies whether the authentication is disabled. Setting this property is highly discouraged from security point of view."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.maxfragmentationmemory-reserved", "options": ["maxfragmentationmemory-reserved"], "help": {"short": "Value in megabytes reserved for fragmentation per shard"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.maxmemory-delta", "options": ["maxmemory-delta"], "help": {"short": "Value in megabytes reserved for non-cache usage per shard e.g. failover."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.maxmemory-policy", "options": ["maxmemory-policy"], "help": {"short": "The eviction strategy used when your data won't fit within its memory limit."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.maxmemory-reserved", "options": ["maxmemory-reserved"], "help": {"short": "Value in megabytes reserved for non-cache usage per shard e.g. failover."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.preferred-data-persistence-auth-method", "options": ["preferred-data-persistence-auth-method"], "help": {"short": "Preferred auth method to communicate to storage account used for data persistence, specify SAS or ManagedIdentity, default value is SAS"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.rdb-backup-enabled", "options": ["rdb-backup-enabled"], "help": {"short": "Specifies whether the rdb backup is enabled"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.rdb-backup-frequency", "options": ["rdb-backup-frequency"], "help": {"short": "Specifies the frequency for creating rdb backup in minutes. Valid values: (15, 30, 60, 360, 720, 1440)"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.rdb-backup-max-snapshot-count", "options": ["rdb-backup-max-snapshot-count"], "help": {"short": "Specifies the maximum number of snapshots for rdb backup"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.rdb-storage-connection-string", "options": ["rdb-storage-connection-string"], "help": {"short": "The storage account connection string for storing rdb file"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisConfiguration.storage-subscription-id", "options": ["storage-subscription-id"], "help": {"short": "SubscriptionId of the storage account for persistence (aof/rdb) using ManagedIdentity."}}], "additionalProps": {"anyType": true}}, {"nullable": true, "type": "string", "var": "$parameters.properties.redisVersion", "options": ["redis-version"], "group": "Properties", "help": {"short": "Redis version. This should be in the form 'major[.minor]' (only 'major' is required) or the value 'latest' which refers to the latest stable Redis version that is available. Supported versions: 4.0, 6.0 (latest). Default value is 'latest'."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.replicasPerMaster", "options": ["replicas-per-master"], "group": "Properties", "help": {"short": "The number of replicas to be created per primary."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.replicasPerPrimary", "options": ["replicas-per-primary"], "group": "Properties", "help": {"short": "The number of replicas to be created per primary."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.shardCount", "options": ["shard-count"], "group": "Properties", "help": {"short": "The number of shards to be created on a Premium Cluster Cache."}}, {"type": "object", "var": "$parameters.properties.sku", "options": ["sku"], "group": "Properties", "help": {"short": "The SKU of the Redis cache to deploy."}, "args": [{"type": "integer32", "var": "$parameters.properties.sku.capacity", "options": ["capacity"], "help": {"short": "The size of the Redis cache to deploy. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)."}}, {"type": "string", "var": "$parameters.properties.sku.family", "options": ["family"], "help": {"short": "The SKU family to use. Valid values: (C, P). (C = Basic/Standard, P = Premium)."}, "enum": {"items": [{"name": "C", "value": "C"}, {"name": "P", "value": "P"}]}}, {"type": "string", "var": "$parameters.properties.sku.name", "options": ["name"], "help": {"short": "The type of Redis cache to deploy. Valid values: (Basic, Standard, Premium)"}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Premium", "value": "Premium"}, {"name": "Standard", "value": "Standard"}]}}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.subnetId", "options": ["subnet-id"], "group": "Properties", "help": {"short": "The full resource ID of a subnet in a virtual network to deploy the Redis cache in. Example format: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/vnet1/subnets/subnet1"}, "format": {"pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$"}}, {"nullable": true, "type": "object", "var": "$parameters.properties.tenantSettings", "options": ["tenant-settings"], "group": "Properties", "help": {"short": "A dictionary of tenant settings"}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}], "operations": [{"operationId": "Redis_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "name", "arg": "$Path.name", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-04-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redis/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "uuid", "name": "principalId"}, {"readOnly": true, "type": "uuid", "name": "tenantId"}, {"type": "string", "name": "type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "uuid", "name": "clientId"}, {"readOnly": true, "type": "uuid", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "object", "name": "accessKeys", "props": [{"readOnly": true, "type": "string", "name": "primaryKey"}, {"readOnly": true, "type": "string", "name": "secondaryKey"}]}, {"default": {"value": false}, "type": "boolean", "name": "enableNonSslPort"}, {"readOnly": true, "type": "string", "name": "hostName"}, {"readOnly": true, "type": "array<object>", "name": "instances", "item": {"type": "object", "props": [{"readOnly": true, "type": "boolean", "name": "isMaster"}, {"readOnly": true, "type": "boolean", "name": "isPrimary"}, {"readOnly": true, "type": "integer32", "name": "nonSslPort"}, {"readOnly": true, "type": "integer32", "name": "shardId"}, {"readOnly": true, "type": "integer32", "name": "sslPort"}, {"readOnly": true, "type": "string", "name": "zone"}]}, "identifiers": ["shardId"]}, {"readOnly": true, "type": "array<object>", "name": "linkedServers", "item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "id"}]}}, {"type": "string", "name": "minimumTlsVersion", "enum": {"items": [{"value": "1.0"}, {"value": "1.1"}, {"value": "1.2"}]}}, {"readOnly": true, "type": "integer32", "name": "port"}, {"readOnly": true, "type": "array<object>", "name": "privateEndpointConnections", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redis/{}/privateEndpointConnections/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "privateEndpoint", "props": [{"readOnly": true, "type": "string", "name": "id"}]}, {"type": "object", "name": "privateLinkServiceConnectionState", "required": true, "props": [{"type": "string", "name": "actionsRequired"}, {"type": "string", "name": "description"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Approved"}, {"value": "Pending"}, {"value": "Rejected"}]}}]}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Disabled"}, {"value": "Failed"}, {"value": "Linking"}, {"value": "Provisioning"}, {"value": "RecoveringScaleFailure"}, {"value": "Scaling"}, {"value": "Succeeded"}, {"value": "Unlinking"}, {"value": "Unprovisioning"}, {"value": "Updating"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "redisConfiguration", "props": [{"type": "string", "name": "aof-backup-enabled"}, {"type": "string", "name": "aof-storage-connection-string-0"}, {"type": "string", "name": "aof-storage-connection-string-1"}, {"type": "string", "name": "authnotrequired"}, {"readOnly": true, "type": "string", "name": "maxclients"}, {"type": "string", "name": "maxfragmentationmemory-reserved"}, {"type": "string", "name": "maxmemory-delta"}, {"type": "string", "name": "maxmemory-policy"}, {"type": "string", "name": "maxmemory-reserved"}, {"readOnly": true, "type": "string", "name": "preferred-data-archive-auth-method"}, {"type": "string", "name": "preferred-data-persistence-auth-method"}, {"type": "string", "name": "rdb-backup-enabled"}, {"type": "string", "name": "rdb-backup-frequency"}, {"type": "string", "name": "rdb-backup-max-snapshot-count"}, {"type": "string", "name": "rdb-storage-connection-string"}, {"type": "string", "name": "storage-subscription-id"}, {"readOnly": true, "type": "string", "name": "zonal-configuration"}], "additionalProps": {"anyType": true}}, {"type": "string", "name": "redisVersion"}, {"type": "integer32", "name": "replicasPerMaster"}, {"type": "integer32", "name": "replicasPerPrimary"}, {"type": "integer32", "name": "shardCount"}, {"type": "object", "name": "sku", "required": true, "props": [{"type": "integer32", "name": "capacity", "required": true}, {"type": "string", "name": "family", "required": true, "enum": {"items": [{"value": "C"}, {"value": "P"}]}}, {"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"readOnly": true, "type": "integer32", "name": "sslPort"}, {"type": "string", "name": "staticIP", "format": {"pattern": "^\\d+\\.\\d+\\.\\d+\\.\\d+$"}}, {"type": "string", "name": "subnetId", "format": {"pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$"}}, {"type": "object", "name": "tenantSettings", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}], "cls": "RedisResource_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "IdentityObject", "name": "identity", "arg": "$parameters.identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "required": true, "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "object", "name": "properties", "required": true, "props": [{"default": {"value": false}, "type": "boolean", "name": "enableNonSslPort", "arg": "$parameters.properties.enableNonSslPort"}, {"type": "string", "name": "minimumTlsVersion", "arg": "$parameters.properties.minimumTlsVersion", "enum": {"items": [{"value": "1.0"}, {"value": "1.1"}, {"value": "1.2"}]}}, {"default": {"value": "Enabled"}, "type": "string", "name": "publicNetworkAccess", "arg": "$parameters.properties.publicNetworkAccess", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "object", "name": "redisConfiguration", "arg": "$parameters.properties.redisConfiguration", "props": [{"type": "string", "name": "aof-backup-enabled", "arg": "$parameters.properties.redisConfiguration.aof-backup-enabled"}, {"type": "string", "name": "aof-storage-connection-string-0", "arg": "$parameters.properties.redisConfiguration.aof-storage-connection-string-0"}, {"type": "string", "name": "aof-storage-connection-string-1", "arg": "$parameters.properties.redisConfiguration.aof-storage-connection-string-1"}, {"type": "string", "name": "authnotrequired", "arg": "$parameters.properties.redisConfiguration.authnotrequired"}, {"type": "string", "name": "maxfragmentationmemory-reserved", "arg": "$parameters.properties.redisConfiguration.maxfragmentationmemory-reserved"}, {"type": "string", "name": "maxmemory-delta", "arg": "$parameters.properties.redisConfiguration.maxmemory-delta"}, {"type": "string", "name": "maxmemory-policy", "arg": "$parameters.properties.redisConfiguration.maxmemory-policy"}, {"type": "string", "name": "maxmemory-reserved", "arg": "$parameters.properties.redisConfiguration.maxmemory-reserved"}, {"type": "string", "name": "preferred-data-persistence-auth-method", "arg": "$parameters.properties.redisConfiguration.preferred-data-persistence-auth-method"}, {"type": "string", "name": "rdb-backup-enabled", "arg": "$parameters.properties.redisConfiguration.rdb-backup-enabled"}, {"type": "string", "name": "rdb-backup-frequency", "arg": "$parameters.properties.redisConfiguration.rdb-backup-frequency"}, {"type": "string", "name": "rdb-backup-max-snapshot-count", "arg": "$parameters.properties.redisConfiguration.rdb-backup-max-snapshot-count"}, {"type": "string", "name": "rdb-storage-connection-string", "arg": "$parameters.properties.redisConfiguration.rdb-storage-connection-string"}, {"type": "string", "name": "storage-subscription-id", "arg": "$parameters.properties.redisConfiguration.storage-subscription-id"}], "additionalProps": {"anyType": true}}, {"type": "string", "name": "redisVersion", "arg": "$parameters.properties.redisVersion"}, {"type": "integer32", "name": "replicasPerMaster", "arg": "$parameters.properties.replicasPerMaster"}, {"type": "integer32", "name": "replicasPerPrimary", "arg": "$parameters.properties.replicasPerPrimary"}, {"type": "integer32", "name": "shardCount", "arg": "$parameters.properties.shardCount"}, {"type": "object", "name": "sku", "arg": "$parameters.properties.sku", "required": true, "props": [{"type": "integer32", "name": "capacity", "arg": "$parameters.properties.sku.capacity", "required": true}, {"type": "string", "name": "family", "arg": "$parameters.properties.sku.family", "required": true, "enum": {"items": [{"value": "C"}, {"value": "P"}]}}, {"type": "string", "name": "name", "arg": "$parameters.properties.sku.name", "required": true, "enum": {"items": [{"value": "Basic"}, {"value": "Premium"}, {"value": "Standard"}]}}]}, {"type": "string", "name": "subnetId", "arg": "$parameters.properties.subnetId", "format": {"pattern": "^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.(ClassicNetwork|Network)/virtualNetworks/[^/]*/subnets/[^/]*$"}}, {"type": "object", "name": "tenantSettings", "arg": "$parameters.properties.tenantSettings", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "zones", "arg": "$parameters.zones", "item": {"type": "string"}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Redis_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redis/{name}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "name", "arg": "$Path.name", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-04-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@RedisResource_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}