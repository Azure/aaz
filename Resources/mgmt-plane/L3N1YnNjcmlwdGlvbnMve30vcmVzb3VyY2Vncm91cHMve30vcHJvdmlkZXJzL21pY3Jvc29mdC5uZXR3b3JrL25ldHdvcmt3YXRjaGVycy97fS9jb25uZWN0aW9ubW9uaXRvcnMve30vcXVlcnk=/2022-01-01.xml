<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectionmonitors/{}/query" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGlvbk1vbml0b3JzL3tjb25uZWN0aW9uTW9uaXRvck5hbWV9L3F1ZXJ5/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network watcher connection-monitor">
    <command name="query" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkwatchers/{}/connectionmonitors/{}/query" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrV2F0Y2hlcnMve25ldHdvcmtXYXRjaGVyTmFtZX0vY29ubmVjdGlvbk1vbml0b3JzL3tjb25uZWN0aW9uTW9uaXRvck5hbWV9L3F1ZXJ5/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionMonitorName" options="connection-monitor-name name n" required="True" group="" idPart="child_name_1">
          <help short="Connection monitor name."/>
        </arg>
        <arg type="string" var="$Path.networkWatcherName" options="network-watcher-name" required="True" idPart="name">
          <help short="The name of the Network Watcher resource."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group-name g" required="True" group="" idPart="resource_group">
          <help short="Name of resource group. You can configure the default group using `az configure --defaults group=<name>`."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ConnectionMonitors_Query">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/query">
          <request method="post">
            <path>
              <param type="string" name="connectionMonitorName" arg="$Path.connectionMonitorName" required="True"/>
              <param type="string" name="networkWatcherName" arg="$Path.networkWatcherName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ConnectionMonitorQueryResult_read">
                  <prop type="string" name="sourceStatus">
                    <enum>
                      <item value="&quot;Active&quot;"/>
                      <item value="&quot;Inactive&quot;"/>
                      <item value="&quot;Unknown&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<object>" name="states">
                    <item type="object">
                      <prop type="integer64" name="avgLatencyInMs">
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="string" name="connectionState">
                        <enum>
                          <item value="&quot;Reachable&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                          <item value="&quot;Unreachable&quot;"/>
                        </enum>
                      </prop>
                      <prop type="dateTime" name="endTime"/>
                      <prop type="string" name="evaluationState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;NotStarted&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="hops">
                        <item type="object">
                          <prop readOnly="True" type="string" name="address"/>
                          <prop readOnly="True" type="string" name="id"/>
                          <prop readOnly="True" type="array<@ConnectivityIssue_read>" name="issues">
                            <item type="@ConnectivityIssue_read"/>
                          </prop>
                          <prop readOnly="True" type="array<object>" name="links">
                            <item type="object" cls="HopLink_read">
                              <prop readOnly="True" type="object" name="context">
                                <additionalProp readOnly="True">
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="array<object>" name="issues">
                                <item type="object" cls="ConnectivityIssue_read">
                                  <prop readOnly="True" type="array<object>" name="context">
                                    <item type="object">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </item>
                                  </prop>
                                  <prop readOnly="True" type="string" name="origin">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Local&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop readOnly="True" type="string" name="severity">
                                    <enum>
                                      <item value="&quot;Error&quot;"/>
                                      <item value="&quot;Warning&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop readOnly="True" type="string" name="type">
                                    <enum>
                                      <item value="&quot;AgentStopped&quot;"/>
                                      <item value="&quot;DnsResolution&quot;"/>
                                      <item value="&quot;GuestFirewall&quot;"/>
                                      <item value="&quot;NetworkSecurityRule&quot;"/>
                                      <item value="&quot;Platform&quot;"/>
                                      <item value="&quot;PortThrottled&quot;"/>
                                      <item value="&quot;SocketBind&quot;"/>
                                      <item value="&quot;Unknown&quot;"/>
                                      <item value="&quot;UserDefinedRoute&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop readOnly="True" type="string" name="linkType"/>
                              <prop readOnly="True" type="string" name="nextHopId"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="integer64" name="roundTripTimeAvg">
                                  <format maximum="4294967295" minimum="0"/>
                                </prop>
                                <prop readOnly="True" type="integer64" name="roundTripTimeMax">
                                  <format maximum="4294967295" minimum="0"/>
                                </prop>
                                <prop readOnly="True" type="integer64" name="roundTripTimeMin">
                                  <format maximum="4294967295" minimum="0"/>
                                </prop>
                              </prop>
                              <prop readOnly="True" type="string" name="resourceId"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="nextHopIds">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<string>" name="previousHopIds">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="array<@HopLink_read>" name="previousLinks">
                            <item type="@HopLink_read"/>
                          </prop>
                          <prop readOnly="True" type="string" name="resourceId"/>
                          <prop readOnly="True" type="string" name="type"/>
                        </item>
                      </prop>
                      <prop type="integer64" name="maxLatencyInMs">
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="integer64" name="minLatencyInMs">
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="integer64" name="probesFailed">
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="integer64" name="probesSent">
                        <format maximum="4294967295" minimum="0"/>
                      </prop>
                      <prop type="dateTime" name="startTime"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@ConnectionMonitorQueryResult_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
