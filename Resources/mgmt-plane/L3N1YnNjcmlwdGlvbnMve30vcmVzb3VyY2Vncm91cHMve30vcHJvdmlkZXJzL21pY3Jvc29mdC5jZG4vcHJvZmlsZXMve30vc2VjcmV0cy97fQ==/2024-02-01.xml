<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/secrets/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vc2VjcmV0cy97c2VjcmV0TmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
  <commandGroup name="afd secret">
    <command name="show" version="2024-02-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/secrets/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vc2VjcmV0cy97c2VjcmV0TmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.secretName" options="secret-name name n" required="True" idPart="child_name_1">
          <help short="Name of the Secret under the profile."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Secrets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}">
          <request method="get">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="secretName" arg="$Path.secretName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/secrets/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="deploymentStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;NotStarted&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="parameters">
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;AzureFirstPartyManagedCertificate&quot;"/>
                          <item value="&quot;CustomerCertificate&quot;"/>
                          <item value="&quot;ManagedCertificate&quot;"/>
                          <item value="&quot;UrlSigningKey&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="type" value="AzureFirstPartyManagedCertificate">
                        <prop readOnly="True" type="string" name="certificateAuthority"/>
                        <prop readOnly="True" type="string" name="expirationDate"/>
                        <prop readOnly="True" type="@ResourceReference_read" name="secretSource"/>
                        <prop readOnly="True" type="string" name="subject"/>
                        <prop type="array<string>" name="subjectAlternativeNames">
                          <item readOnly="True" type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="thumbprint"/>
                      </discriminator>
                      <discriminator property="type" value="CustomerCertificate">
                        <prop readOnly="True" type="string" name="certificateAuthority"/>
                        <prop readOnly="True" type="string" name="expirationDate"/>
                        <prop type="@ResourceReference_read" name="secretSource" required="True"/>
                        <prop type="string" name="secretVersion"/>
                        <prop readOnly="True" type="string" name="subject"/>
                        <prop type="array<string>" name="subjectAlternativeNames">
                          <item readOnly="True" type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="thumbprint"/>
                        <prop type="boolean" name="useLatestVersion"/>
                      </discriminator>
                      <discriminator property="type" value="ManagedCertificate">
                        <prop readOnly="True" type="string" name="expirationDate"/>
                        <prop readOnly="True" type="string" name="subject"/>
                      </discriminator>
                      <discriminator property="type" value="UrlSigningKey">
                        <prop type="string" name="keyId" required="True"/>
                        <prop type="object" name="secretSource" required="True" cls="ResourceReference_read">
                          <prop type="string" name="id"/>
                        </prop>
                        <prop type="string" name="secretVersion"/>
                      </discriminator>
                    </prop>
                    <prop readOnly="True" type="string" name="profileName"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-02-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/secrets/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vc2VjcmV0cy97c2VjcmV0TmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.secretName" options="secret-name name n" required="True" idPart="child_name_1">
          <help short="Name of the Secret under the profile."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Secrets_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}">
          <request method="delete">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="secretName" arg="$Path.secretName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-02-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/secrets/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vc2VjcmV0cy97c2VjcmV0TmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.secretName" options="secret-name name n" required="True" idPart="child_name_1">
          <help short="Name of the Secret under the profile."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$secret.properties.parameters" options="parameters" group="Properties">
          <help short="object which contains secret parameters"/>
          <arg type="object" var="$secret.properties.parameters.AzureFirstPartyManagedCertificate" options="azure-first-party-managed-certificate">
            <blank value="{}"/>
          </arg>
          <arg type="object" var="$secret.properties.parameters.CustomerCertificate" options="customer-certificate">
            <arg type="@ResourceReference_create" var="$secret.properties.parameters.CustomerCertificate.secretSource" options="secret-source" required="True">
              <help short="Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹subscriptionId}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/resourceGroups/{â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹resourceGroupName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/providers/Microsoft.KeyVault/vaults/{vaultName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/secrets/{certificateName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹"/>
            </arg>
            <arg type="string" var="$secret.properties.parameters.CustomerCertificate.secretVersion" options="secret-version">
              <help short="Version of the secret to be used"/>
            </arg>
            <arg type="boolean" var="$secret.properties.parameters.CustomerCertificate.useLatestVersion" options="use-latest-version">
              <help short="Whether to use the latest version for the certificate"/>
            </arg>
          </arg>
          <arg type="object" var="$secret.properties.parameters.ManagedCertificate" options="managed-certificate">
            <blank value="{}"/>
          </arg>
          <arg type="object" var="$secret.properties.parameters.UrlSigningKey" options="url-signing-key">
            <arg type="string" var="$secret.properties.parameters.UrlSigningKey.keyId" options="key-id" required="True">
              <help short="Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash."/>
            </arg>
            <arg type="object" var="$secret.properties.parameters.UrlSigningKey.secretSource" options="secret-source" required="True" cls="ResourceReference_create">
              <help short="Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹subscriptionId}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/resourceGroups/{â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹resourceGroupName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/providers/Microsoft.KeyVault/vaults/{vaultName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/secrets/{secretName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹"/>
              <arg type="string" var="@ResourceReference_create.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg type="string" var="$secret.properties.parameters.UrlSigningKey.secretVersion" options="secret-version">
              <help short="Version of the secret to be used"/>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Secrets_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}">
          <request method="put">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="secretName" arg="$Path.secretName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="secret" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="parameters" arg="$secret.properties.parameters">
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item arg="$secret.properties.parameters.AzureFirstPartyManagedCertificate" value="&quot;AzureFirstPartyManagedCertificate&quot;"/>
                          <item arg="$secret.properties.parameters.CustomerCertificate" value="&quot;CustomerCertificate&quot;"/>
                          <item arg="$secret.properties.parameters.ManagedCertificate" value="&quot;ManagedCertificate&quot;"/>
                          <item arg="$secret.properties.parameters.UrlSigningKey" value="&quot;UrlSigningKey&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="type" value="AzureFirstPartyManagedCertificate"/>
                      <discriminator property="type" value="CustomerCertificate">
                        <prop type="@ResourceReference_create" name="secretSource" arg="$secret.properties.parameters.CustomerCertificate.secretSource" required="True"/>
                        <prop type="string" name="secretVersion" arg="$secret.properties.parameters.CustomerCertificate.secretVersion"/>
                        <prop type="boolean" name="useLatestVersion" arg="$secret.properties.parameters.CustomerCertificate.useLatestVersion"/>
                      </discriminator>
                      <discriminator property="type" value="ManagedCertificate"/>
                      <discriminator property="type" value="UrlSigningKey">
                        <prop type="string" name="keyId" arg="$secret.properties.parameters.UrlSigningKey.keyId" required="True"/>
                        <prop type="object" name="secretSource" arg="$secret.properties.parameters.UrlSigningKey.secretSource" required="True" cls="ResourceReference_create">
                          <prop type="string" name="id" arg="@ResourceReference_create.id"/>
                        </prop>
                        <prop type="string" name="secretVersion" arg="$secret.properties.parameters.UrlSigningKey.secretVersion"/>
                      </discriminator>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Secret_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/secrets/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="deploymentStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;NotStarted&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="parameters">
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;AzureFirstPartyManagedCertificate&quot;"/>
                          <item value="&quot;CustomerCertificate&quot;"/>
                          <item value="&quot;ManagedCertificate&quot;"/>
                          <item value="&quot;UrlSigningKey&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="type" value="AzureFirstPartyManagedCertificate">
                        <prop readOnly="True" type="string" name="certificateAuthority"/>
                        <prop readOnly="True" type="string" name="expirationDate"/>
                        <prop readOnly="True" type="@ResourceReference_read" name="secretSource"/>
                        <prop readOnly="True" type="string" name="subject"/>
                        <prop type="array<string>" name="subjectAlternativeNames">
                          <item readOnly="True" type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="thumbprint"/>
                      </discriminator>
                      <discriminator property="type" value="CustomerCertificate">
                        <prop readOnly="True" type="string" name="certificateAuthority"/>
                        <prop readOnly="True" type="string" name="expirationDate"/>
                        <prop type="@ResourceReference_read" name="secretSource" required="True"/>
                        <prop type="string" name="secretVersion"/>
                        <prop readOnly="True" type="string" name="subject"/>
                        <prop type="array<string>" name="subjectAlternativeNames">
                          <item readOnly="True" type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="thumbprint"/>
                        <prop type="boolean" name="useLatestVersion"/>
                      </discriminator>
                      <discriminator property="type" value="ManagedCertificate">
                        <prop readOnly="True" type="string" name="expirationDate"/>
                        <prop readOnly="True" type="string" name="subject"/>
                      </discriminator>
                      <discriminator property="type" value="UrlSigningKey">
                        <prop type="string" name="keyId" required="True"/>
                        <prop type="object" name="secretSource" required="True" cls="ResourceReference_read">
                          <prop type="string" name="id"/>
                        </prop>
                        <prop type="string" name="secretVersion"/>
                      </discriminator>
                    </prop>
                    <prop readOnly="True" type="string" name="profileName"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@Secret_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-02-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/secrets/{}" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vc2VjcmV0cy97c2VjcmV0TmFtZX0=/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the Azure Front Door Standard or Azure Front Door Premium profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.secretName" options="secret-name name n" required="True" idPart="child_name_1">
          <help short="Name of the Secret under the profile."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$secret.properties.parameters" options="parameters" group="Properties">
          <help short="object which contains secret parameters"/>
          <arg type="object" var="$secret.properties.parameters.AzureFirstPartyManagedCertificate" options="azure-first-party-managed-certificate">
            <blank value="{}"/>
          </arg>
          <arg type="object" var="$secret.properties.parameters.CustomerCertificate" options="customer-certificate">
            <arg type="@ResourceReference_update" var="$secret.properties.parameters.CustomerCertificate.secretSource" options="secret-source">
              <help short="Resource reference to the Azure Key Vault certificate. Expected to be in format of /subscriptions/{â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹subscriptionId}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/resourceGroups/{â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹resourceGroupName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/providers/Microsoft.KeyVault/vaults/{vaultName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/secrets/{certificateName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹"/>
            </arg>
            <arg nullable="True" type="string" var="$secret.properties.parameters.CustomerCertificate.secretVersion" options="secret-version">
              <help short="Version of the secret to be used"/>
            </arg>
            <arg nullable="True" type="boolean" var="$secret.properties.parameters.CustomerCertificate.useLatestVersion" options="use-latest-version">
              <help short="Whether to use the latest version for the certificate"/>
            </arg>
          </arg>
          <arg type="object" var="$secret.properties.parameters.ManagedCertificate" options="managed-certificate">
            <blank value="{}"/>
          </arg>
          <arg type="object" var="$secret.properties.parameters.UrlSigningKey" options="url-signing-key">
            <arg type="string" var="$secret.properties.parameters.UrlSigningKey.keyId" options="key-id">
              <help short="Defines the customer defined key Id. This id will exist in the incoming request to indicate the key used to form the hash."/>
            </arg>
            <arg type="object" var="$secret.properties.parameters.UrlSigningKey.secretSource" options="secret-source" cls="ResourceReference_update">
              <help short="Resource reference to the Azure Key Vault secret. Expected to be in format of /subscriptions/{â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹subscriptionId}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/resourceGroups/{â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹resourceGroupName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/providers/Microsoft.KeyVault/vaults/{vaultName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹/secrets/{secretName}â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹"/>
              <arg nullable="True" type="string" var="@ResourceReference_update.id" options="id">
                <help short="Resource ID."/>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="$secret.properties.parameters.UrlSigningKey.secretVersion" options="secret-version">
              <help short="Version of the secret to be used"/>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Secrets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}">
          <request method="get">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="secretName" arg="$Path.secretName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Secret_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/secrets/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="deploymentStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;InProgress&quot;"/>
                        <item value="&quot;NotStarted&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="parameters">
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;AzureFirstPartyManagedCertificate&quot;"/>
                          <item value="&quot;CustomerCertificate&quot;"/>
                          <item value="&quot;ManagedCertificate&quot;"/>
                          <item value="&quot;UrlSigningKey&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="type" value="AzureFirstPartyManagedCertificate">
                        <prop readOnly="True" type="string" name="certificateAuthority"/>
                        <prop readOnly="True" type="string" name="expirationDate"/>
                        <prop readOnly="True" type="@ResourceReference_read" name="secretSource"/>
                        <prop readOnly="True" type="string" name="subject"/>
                        <prop type="array<string>" name="subjectAlternativeNames">
                          <item readOnly="True" type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="thumbprint"/>
                      </discriminator>
                      <discriminator property="type" value="CustomerCertificate">
                        <prop readOnly="True" type="string" name="certificateAuthority"/>
                        <prop readOnly="True" type="string" name="expirationDate"/>
                        <prop type="@ResourceReference_read" name="secretSource" required="True"/>
                        <prop type="string" name="secretVersion"/>
                        <prop readOnly="True" type="string" name="subject"/>
                        <prop type="array<string>" name="subjectAlternativeNames">
                          <item readOnly="True" type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="thumbprint"/>
                        <prop type="boolean" name="useLatestVersion"/>
                      </discriminator>
                      <discriminator property="type" value="ManagedCertificate">
                        <prop readOnly="True" type="string" name="expirationDate"/>
                        <prop readOnly="True" type="string" name="subject"/>
                      </discriminator>
                      <discriminator property="type" value="UrlSigningKey">
                        <prop type="string" name="keyId" required="True"/>
                        <prop type="object" name="secretSource" required="True" cls="ResourceReference_read">
                          <prop type="string" name="id"/>
                        </prop>
                        <prop type="string" name="secretVersion"/>
                      </discriminator>
                    </prop>
                    <prop readOnly="True" type="string" name="profileName"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="secret" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="parameters" arg="$secret.properties.parameters">
                  <prop type="string" name="type" required="True">
                    <enum>
                      <item arg="$secret.properties.parameters.AzureFirstPartyManagedCertificate" value="&quot;AzureFirstPartyManagedCertificate&quot;"/>
                      <item arg="$secret.properties.parameters.CustomerCertificate" value="&quot;CustomerCertificate&quot;"/>
                      <item arg="$secret.properties.parameters.ManagedCertificate" value="&quot;ManagedCertificate&quot;"/>
                      <item arg="$secret.properties.parameters.UrlSigningKey" value="&quot;UrlSigningKey&quot;"/>
                    </enum>
                  </prop>
                  <discriminator property="type" value="AzureFirstPartyManagedCertificate"/>
                  <discriminator property="type" value="CustomerCertificate">
                    <prop type="@ResourceReference_update" name="secretSource" arg="$secret.properties.parameters.CustomerCertificate.secretSource" required="True"/>
                    <prop type="string" name="secretVersion" arg="$secret.properties.parameters.CustomerCertificate.secretVersion"/>
                    <prop type="boolean" name="useLatestVersion" arg="$secret.properties.parameters.CustomerCertificate.useLatestVersion"/>
                  </discriminator>
                  <discriminator property="type" value="ManagedCertificate"/>
                  <discriminator property="type" value="UrlSigningKey">
                    <prop type="string" name="keyId" arg="$secret.properties.parameters.UrlSigningKey.keyId" required="True"/>
                    <prop type="object" name="secretSource" arg="$secret.properties.parameters.UrlSigningKey.secretSource" required="True" cls="ResourceReference_update">
                      <prop type="string" name="id" arg="@ResourceReference_update.id"/>
                    </prop>
                    <prop type="string" name="secretVersion" arg="$secret.properties.parameters.UrlSigningKey.secretVersion"/>
                  </discriminator>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Secrets_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}">
          <request method="put">
            <path>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="secretName" arg="$Path.secretName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Secret_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@Secret_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
