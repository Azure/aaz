<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/runcommands/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L3J1bkNvbW1hbmRzL3tydW5Db21tYW5kTmFtZX0=/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
  <commandGroup name="connectedmachine run-command">
    <command name="show" version="2024-05-20-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/runcommands/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L3J1bkNvbW1hbmRzL3tydW5Db21tYW5kTmFtZX0=/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.machineName" options="machine-name" required="True" idPart="name">
          <help short="The name of the hybrid machine."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.runCommandName" options="run-command-name name n" required="True" idPart="child_name_1">
          <help short="The name of the run command."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="MachineRunCommands_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/runCommands/{runCommandName}">
          <request method="get">
            <path>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="runCommandName" arg="$Path.runCommandName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridCompute/machines/{}/runCommands/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="asyncExecution">
                      <default value="false"/>
                    </prop>
                    <prop type="@RunCommandManagedIdentity_read" name="errorBlobManagedIdentity"/>
                    <prop type="string" name="errorBlobUri"/>
                    <prop readOnly="True" type="object" name="instanceView">
                      <prop type="dateTime" name="endTime"/>
                      <prop type="string" name="error"/>
                      <prop type="string" name="executionMessage"/>
                      <prop type="string" name="executionState">
                        <enum>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Pending&quot;"/>
                          <item value="&quot;Running&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;TimedOut&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="exitCode"/>
                      <prop type="string" name="output"/>
                      <prop type="dateTime" name="startTime"/>
                      <prop type="array<object>" name="statuses">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="displayStatus"/>
                          <prop type="string" name="level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message"/>
                          <prop type="dateTime" name="time"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="@RunCommandManagedIdentity_read" name="outputBlobManagedIdentity"/>
                    <prop type="string" name="outputBlobUri"/>
                    <prop type="array<object>" name="parameters" identifiers="name">
                      <item type="object" cls="RunCommandInputParameter_read">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="array<@RunCommandInputParameter_read>" name="protectedParameters" identifiers="name">
                      <item type="@RunCommandInputParameter_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="runAsPassword" secret="True"/>
                    <prop type="string" name="runAsUser"/>
                    <prop type="object" name="source">
                      <prop type="string" name="commandId"/>
                      <prop type="string" name="script"/>
                      <prop type="string" name="scriptUri"/>
                      <prop type="object" name="scriptUriManagedIdentity" cls="RunCommandManagedIdentity_read">
                        <prop type="string" name="clientId"/>
                        <prop type="string" name="objectId"/>
                      </prop>
                    </prop>
                    <prop type="integer32" name="timeoutInSeconds"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-05-20-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/runcommands/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L3J1bkNvbW1hbmRzL3tydW5Db21tYW5kTmFtZX0=/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.machineName" options="machine-name" required="True" idPart="name">
          <help short="The name of the hybrid machine."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.runCommandName" options="run-command-name name n" required="True" idPart="child_name_1">
          <help short="The name of the run command."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="MachineRunCommands_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/runCommands/{runCommandName}">
          <request method="delete">
            <path>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="runCommandName" arg="$Path.runCommandName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-05-20-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/runcommands/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L3J1bkNvbW1hbmRzL3tydW5Db21tYW5kTmFtZX0=/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.machineName" options="machine-name" required="True" idPart="name">
          <help short="The name of the hybrid machine."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.runCommandName" options="run-command-name name n" required="True" idPart="child_name_1">
          <help short="The name of the run command."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$runCommandProperties.properties.asyncExecution" options="async-execution" group="Properties">
          <help short="Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."/>
          <default value="false"/>
        </arg>
        <arg type="@RunCommandManagedIdentity_create" var="$runCommandProperties.properties.errorBlobManagedIdentity" options="error-blob-managed-identity" group="Properties">
          <help short="User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged "/>
        </arg>
        <arg type="string" var="$runCommandProperties.properties.errorBlobUri" options="error-blob-uri" group="Properties">
          <help short="Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."/>
        </arg>
        <arg type="@RunCommandManagedIdentity_create" var="$runCommandProperties.properties.outputBlobManagedIdentity" options="output-blob-managed-identity" group="Properties">
          <help short="User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged "/>
        </arg>
        <arg type="string" var="$runCommandProperties.properties.outputBlobUri" options="output-blob-uri" group="Properties">
          <help short="Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "/>
        </arg>
        <arg type="array<object>" var="$runCommandProperties.properties.parameters" options="parameters" group="Properties">
          <help short="The parameters used by the script."/>
          <item type="object" cls="RunCommandInputParameter_create">
            <arg type="string" var="@RunCommandInputParameter_create.name" options="name" required="True">
              <help short="The run command parameter name."/>
            </arg>
            <arg type="string" var="@RunCommandInputParameter_create.value" options="value" required="True">
              <help short="The run command parameter value."/>
            </arg>
          </item>
        </arg>
        <arg type="array<@RunCommandInputParameter_create>" var="$runCommandProperties.properties.protectedParameters" options="protected-parameters" group="Properties">
          <help short="The parameters used by the script."/>
          <item type="@RunCommandInputParameter_create"/>
        </arg>
        <arg type="string" var="$runCommandProperties.properties.runAsPassword" options="run-as-password" group="Properties">
          <help short="Specifies the user account password on the machine when executing the run command."/>
        </arg>
        <arg type="string" var="$runCommandProperties.properties.runAsUser" options="run-as-user" group="Properties">
          <help short="Specifies the user account on the machine when executing the run command."/>
        </arg>
        <arg type="integer32" var="$runCommandProperties.properties.timeoutInSeconds" options="timeout-in-seconds" group="Properties">
          <help short="The timeout in seconds to execute the run command."/>
        </arg>
      </argGroup>
      <argGroup name="RunCommandProperties">
        <arg type="ResourceLocation" var="$runCommandProperties.location" options="location l" required="True" group="RunCommandProperties">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$runCommandProperties.tags" options="tags" group="RunCommandProperties">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Source">
        <arg type="string" var="$runCommandProperties.properties.source.commandId" options="command-id" group="Source">
          <help short="Specifies the commandId of predefined built-in script."/>
        </arg>
        <arg type="string" var="$runCommandProperties.properties.source.script" options="script" group="Source">
          <help short="Specifies the script content to be executed on the machine."/>
        </arg>
        <arg type="string" var="$runCommandProperties.properties.source.scriptUri" options="script-uri" group="Source">
          <help short="Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."/>
        </arg>
        <arg type="object" var="$runCommandProperties.properties.source.scriptUriManagedIdentity" options="script-uri-managed-identity" group="Source" cls="RunCommandManagedIdentity_create">
          <help short="User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged."/>
          <arg type="string" var="@RunCommandManagedIdentity_create.clientId" options="client-id">
            <help short="Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."/>
          </arg>
          <arg type="string" var="@RunCommandManagedIdentity_create.objectId" options="object-id">
            <help short="Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="MachineRunCommands_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/runCommands/{runCommandName}">
          <request method="put">
            <path>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="runCommandName" arg="$Path.runCommandName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="runCommandProperties" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$runCommandProperties.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="asyncExecution" arg="$runCommandProperties.properties.asyncExecution">
                      <default value="false"/>
                    </prop>
                    <prop type="@RunCommandManagedIdentity_create" name="errorBlobManagedIdentity" arg="$runCommandProperties.properties.errorBlobManagedIdentity"/>
                    <prop type="string" name="errorBlobUri" arg="$runCommandProperties.properties.errorBlobUri"/>
                    <prop type="@RunCommandManagedIdentity_create" name="outputBlobManagedIdentity" arg="$runCommandProperties.properties.outputBlobManagedIdentity"/>
                    <prop type="string" name="outputBlobUri" arg="$runCommandProperties.properties.outputBlobUri"/>
                    <prop type="array<object>" name="parameters" arg="$runCommandProperties.properties.parameters" identifiers="name">
                      <item type="object" cls="RunCommandInputParameter_create">
                        <prop type="string" name="name" arg="@RunCommandInputParameter_create.name" required="True"/>
                        <prop type="string" name="value" arg="@RunCommandInputParameter_create.value" required="True"/>
                      </item>
                    </prop>
                    <prop type="array<@RunCommandInputParameter_create>" name="protectedParameters" arg="$runCommandProperties.properties.protectedParameters" identifiers="name">
                      <item type="@RunCommandInputParameter_create"/>
                    </prop>
                    <prop type="string" name="runAsPassword" arg="$runCommandProperties.properties.runAsPassword" secret="True"/>
                    <prop type="string" name="runAsUser" arg="$runCommandProperties.properties.runAsUser"/>
                    <prop type="object" name="source">
                      <prop type="string" name="commandId" arg="$runCommandProperties.properties.source.commandId"/>
                      <prop type="string" name="script" arg="$runCommandProperties.properties.source.script"/>
                      <prop type="string" name="scriptUri" arg="$runCommandProperties.properties.source.scriptUri"/>
                      <prop type="object" name="scriptUriManagedIdentity" arg="$runCommandProperties.properties.source.scriptUriManagedIdentity" cls="RunCommandManagedIdentity_create">
                        <prop type="string" name="clientId" arg="@RunCommandManagedIdentity_create.clientId"/>
                        <prop type="string" name="objectId" arg="@RunCommandManagedIdentity_create.objectId"/>
                      </prop>
                    </prop>
                    <prop type="integer32" name="timeoutInSeconds" arg="$runCommandProperties.properties.timeoutInSeconds"/>
                  </prop>
                  <prop type="object" name="tags" arg="$runCommandProperties.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridCompute/machines/{}/runCommands/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="asyncExecution">
                      <default value="false"/>
                    </prop>
                    <prop type="@RunCommandManagedIdentity_read" name="errorBlobManagedIdentity"/>
                    <prop type="string" name="errorBlobUri"/>
                    <prop readOnly="True" type="object" name="instanceView">
                      <prop type="dateTime" name="endTime"/>
                      <prop type="string" name="error"/>
                      <prop type="string" name="executionMessage"/>
                      <prop type="string" name="executionState">
                        <enum>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Pending&quot;"/>
                          <item value="&quot;Running&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;TimedOut&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="exitCode"/>
                      <prop type="string" name="output"/>
                      <prop type="dateTime" name="startTime"/>
                      <prop type="array<object>" name="statuses">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="displayStatus"/>
                          <prop type="string" name="level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message"/>
                          <prop type="dateTime" name="time"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="@RunCommandManagedIdentity_read" name="outputBlobManagedIdentity"/>
                    <prop type="string" name="outputBlobUri"/>
                    <prop type="array<object>" name="parameters" identifiers="name">
                      <item type="object" cls="RunCommandInputParameter_read">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="array<@RunCommandInputParameter_read>" name="protectedParameters" identifiers="name">
                      <item type="@RunCommandInputParameter_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="runAsPassword" secret="True"/>
                    <prop type="string" name="runAsUser"/>
                    <prop type="object" name="source">
                      <prop type="string" name="commandId"/>
                      <prop type="string" name="script"/>
                      <prop type="string" name="scriptUri"/>
                      <prop type="object" name="scriptUriManagedIdentity" cls="RunCommandManagedIdentity_read">
                        <prop type="string" name="clientId"/>
                        <prop type="string" name="objectId"/>
                      </prop>
                    </prop>
                    <prop type="integer32" name="timeoutInSeconds"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-05-20-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.hybridcompute/machines/{}/runcommands/{}" version="2024-05-20-preview" swagger="mgmt-plane/hybridcompute/ResourceProviders/Microsoft.HybridCompute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSHlicmlkQ29tcHV0ZS9tYWNoaW5lcy97bWFjaGluZU5hbWV9L3J1bkNvbW1hbmRzL3tydW5Db21tYW5kTmFtZX0=/V/MjAyNC0wNS0yMC1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.machineName" options="machine-name" required="True" idPart="name">
          <help short="The name of the hybrid machine."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.runCommandName" options="run-command-name name n" required="True" idPart="child_name_1">
          <help short="The name of the run command."/>
          <format pattern="[a-zA-Z0-9-_\.]+"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$runCommandProperties.properties.asyncExecution" options="async-execution" group="Properties">
          <help short="Optional. If set to true, provisioning will complete as soon as script starts and will not wait for script to complete."/>
        </arg>
        <arg nullable="True" type="@RunCommandManagedIdentity_update" var="$runCommandProperties.properties.errorBlobManagedIdentity" options="error-blob-managed-identity" group="Properties">
          <help short="User-assigned managed identity that has access to errorBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged "/>
        </arg>
        <arg nullable="True" type="string" var="$runCommandProperties.properties.errorBlobUri" options="error-blob-uri" group="Properties">
          <help short="Specifies the Azure storage blob where script error stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer errorBlobManagedIdentity parameter."/>
        </arg>
        <arg nullable="True" type="@RunCommandManagedIdentity_update" var="$runCommandProperties.properties.outputBlobManagedIdentity" options="output-blob-managed-identity" group="Properties">
          <help short="User-assigned managed identity that has access to outputBlobUri storage blob. Use an empty object in case of system-assigned identity. Make sure managed identity has been given access to blob's container with 'Storage Blob Data Contributor' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged "/>
        </arg>
        <arg nullable="True" type="string" var="$runCommandProperties.properties.outputBlobUri" options="output-blob-uri" group="Properties">
          <help short="Specifies the Azure storage blob where script output stream will be uploaded. Use a SAS URI with read, append, create, write access OR use managed identity to provide the VM access to the blob. Refer outputBlobManagedIdentity parameter. "/>
        </arg>
        <arg nullable="True" type="array<object>" var="$runCommandProperties.properties.parameters" options="parameters" group="Properties">
          <help short="The parameters used by the script."/>
          <item nullable="True" type="object" cls="RunCommandInputParameter_update">
            <arg type="string" var="@RunCommandInputParameter_update.name" options="name">
              <help short="The run command parameter name."/>
            </arg>
            <arg type="string" var="@RunCommandInputParameter_update.value" options="value">
              <help short="The run command parameter value."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="array<@RunCommandInputParameter_update>" var="$runCommandProperties.properties.protectedParameters" options="protected-parameters" group="Properties">
          <help short="The parameters used by the script."/>
          <item nullable="True" type="@RunCommandInputParameter_update"/>
        </arg>
        <arg nullable="True" type="string" var="$runCommandProperties.properties.runAsPassword" options="run-as-password" group="Properties">
          <help short="Specifies the user account password on the machine when executing the run command."/>
        </arg>
        <arg nullable="True" type="string" var="$runCommandProperties.properties.runAsUser" options="run-as-user" group="Properties">
          <help short="Specifies the user account on the machine when executing the run command."/>
        </arg>
        <arg nullable="True" type="integer32" var="$runCommandProperties.properties.timeoutInSeconds" options="timeout-in-seconds" group="Properties">
          <help short="The timeout in seconds to execute the run command."/>
        </arg>
      </argGroup>
      <argGroup name="RunCommandProperties">
        <arg nullable="True" type="object" var="$runCommandProperties.tags" options="tags" group="RunCommandProperties">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Source">
        <arg nullable="True" type="string" var="$runCommandProperties.properties.source.commandId" options="command-id" group="Source">
          <help short="Specifies the commandId of predefined built-in script."/>
        </arg>
        <arg nullable="True" type="string" var="$runCommandProperties.properties.source.script" options="script" group="Source">
          <help short="Specifies the script content to be executed on the machine."/>
        </arg>
        <arg nullable="True" type="string" var="$runCommandProperties.properties.source.scriptUri" options="script-uri" group="Source">
          <help short="Specifies the script download location. It can be either SAS URI of an Azure storage blob with read access or public URI."/>
        </arg>
        <arg nullable="True" type="object" var="$runCommandProperties.properties.source.scriptUriManagedIdentity" options="script-uri-managed-identity" group="Source" cls="RunCommandManagedIdentity_update">
          <help short="User-assigned managed identity that has access to scriptUri in case of Azure storage blob. Use an empty object in case of system-assigned identity. Make sure the Azure storage blob exists, and managed identity has been given access to blob's container with 'Storage Blob Data Reader' role assignment. In case of user-assigned identity, make sure you add it under VM's identity. For more info on managed identity and Run Command, refer https://aka.ms/ManagedIdentity and https://aka.ms/RunCommandManaged."/>
          <arg nullable="True" type="string" var="@RunCommandManagedIdentity_update.clientId" options="client-id">
            <help short="Client Id (GUID value) of the user-assigned managed identity. ObjectId should not be used if this is provided."/>
          </arg>
          <arg nullable="True" type="string" var="@RunCommandManagedIdentity_update.objectId" options="object-id">
            <help short="Object Id (GUID value) of the user-assigned managed identity. ClientId should not be used if this is provided."/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="MachineRunCommands_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/runCommands/{runCommandName}">
          <request method="get">
            <path>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="runCommandName" arg="$Path.runCommandName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="MachineRunCommand_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.HybridCompute/machines/{}/runCommands/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="asyncExecution">
                      <default value="false"/>
                    </prop>
                    <prop type="@RunCommandManagedIdentity_read" name="errorBlobManagedIdentity"/>
                    <prop type="string" name="errorBlobUri"/>
                    <prop readOnly="True" type="object" name="instanceView">
                      <prop type="dateTime" name="endTime"/>
                      <prop type="string" name="error"/>
                      <prop type="string" name="executionMessage"/>
                      <prop type="string" name="executionState">
                        <enum>
                          <item value="&quot;Canceled&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Pending&quot;"/>
                          <item value="&quot;Running&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;TimedOut&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="exitCode"/>
                      <prop type="string" name="output"/>
                      <prop type="dateTime" name="startTime"/>
                      <prop type="array<object>" name="statuses">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="displayStatus"/>
                          <prop type="string" name="level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message"/>
                          <prop type="dateTime" name="time"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="@RunCommandManagedIdentity_read" name="outputBlobManagedIdentity"/>
                    <prop type="string" name="outputBlobUri"/>
                    <prop type="array<object>" name="parameters" identifiers="name">
                      <item type="object" cls="RunCommandInputParameter_read">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="array<@RunCommandInputParameter_read>" name="protectedParameters" identifiers="name">
                      <item type="@RunCommandInputParameter_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="runAsPassword" secret="True"/>
                    <prop type="string" name="runAsUser"/>
                    <prop type="object" name="source">
                      <prop type="string" name="commandId"/>
                      <prop type="string" name="script"/>
                      <prop type="string" name="scriptUri"/>
                      <prop type="object" name="scriptUriManagedIdentity" cls="RunCommandManagedIdentity_read">
                        <prop type="string" name="clientId"/>
                        <prop type="string" name="objectId"/>
                      </prop>
                    </prop>
                    <prop type="integer32" name="timeoutInSeconds"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="runCommandProperties" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="asyncExecution" arg="$runCommandProperties.properties.asyncExecution">
                  <default value="false"/>
                </prop>
                <prop type="@RunCommandManagedIdentity_update" name="errorBlobManagedIdentity" arg="$runCommandProperties.properties.errorBlobManagedIdentity"/>
                <prop type="string" name="errorBlobUri" arg="$runCommandProperties.properties.errorBlobUri"/>
                <prop type="@RunCommandManagedIdentity_update" name="outputBlobManagedIdentity" arg="$runCommandProperties.properties.outputBlobManagedIdentity"/>
                <prop type="string" name="outputBlobUri" arg="$runCommandProperties.properties.outputBlobUri"/>
                <prop type="array<object>" name="parameters" arg="$runCommandProperties.properties.parameters" identifiers="name">
                  <item type="object" cls="RunCommandInputParameter_update">
                    <prop type="string" name="name" arg="@RunCommandInputParameter_update.name" required="True"/>
                    <prop type="string" name="value" arg="@RunCommandInputParameter_update.value" required="True"/>
                  </item>
                </prop>
                <prop type="array<@RunCommandInputParameter_update>" name="protectedParameters" arg="$runCommandProperties.properties.protectedParameters" identifiers="name">
                  <item type="@RunCommandInputParameter_update"/>
                </prop>
                <prop type="string" name="runAsPassword" arg="$runCommandProperties.properties.runAsPassword" secret="True"/>
                <prop type="string" name="runAsUser" arg="$runCommandProperties.properties.runAsUser"/>
                <prop type="object" name="source">
                  <prop type="string" name="commandId" arg="$runCommandProperties.properties.source.commandId"/>
                  <prop type="string" name="script" arg="$runCommandProperties.properties.source.script"/>
                  <prop type="string" name="scriptUri" arg="$runCommandProperties.properties.source.scriptUri"/>
                  <prop type="object" name="scriptUriManagedIdentity" arg="$runCommandProperties.properties.source.scriptUriManagedIdentity" cls="RunCommandManagedIdentity_update">
                    <prop type="string" name="clientId" arg="@RunCommandManagedIdentity_update.clientId"/>
                    <prop type="string" name="objectId" arg="@RunCommandManagedIdentity_update.objectId"/>
                  </prop>
                </prop>
                <prop type="integer32" name="timeoutInSeconds" arg="$runCommandProperties.properties.timeoutInSeconds"/>
              </prop>
              <prop type="object" name="tags" arg="$runCommandProperties.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="MachineRunCommands_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCompute/machines/{machineName}/runCommands/{runCommandName}">
          <request method="put">
            <path>
              <param type="string" name="machineName" arg="$Path.machineName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="runCommandName" arg="$Path.runCommandName" required="True">
                <format pattern="[a-zA-Z0-9-_\.]+"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-20-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@MachineRunCommand_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
