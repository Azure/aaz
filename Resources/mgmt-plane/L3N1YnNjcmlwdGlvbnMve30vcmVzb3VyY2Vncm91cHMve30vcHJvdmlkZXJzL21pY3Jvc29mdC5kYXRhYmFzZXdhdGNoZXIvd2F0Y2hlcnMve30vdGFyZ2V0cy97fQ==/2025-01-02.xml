<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databasewatcher/watchers/{}/targets/{}" version="2025-01-02" swagger="mgmt-plane/databasewatcher/ResourceProviders/Microsoft.DatabaseWatcher/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJhc2VXYXRjaGVyL3dhdGNoZXJzL3t3YXRjaGVyTmFtZX0vdGFyZ2V0cy97dGFyZ2V0TmFtZX0=/V/MjAyNS0wMS0wMg=="/>
  <commandGroup name="databasewatcher target">
    <command name="show" version="2025-01-02">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databasewatcher/watchers/{}/targets/{}" version="2025-01-02" swagger="mgmt-plane/databasewatcher/ResourceProviders/Microsoft.DatabaseWatcher/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJhc2VXYXRjaGVyL3dhdGNoZXJzL3t3YXRjaGVyTmFtZX0vdGFyZ2V0cy97dGFyZ2V0TmFtZX0=/V/MjAyNS0wMS0wMg=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.targetName" options="target-name name n" required="True" idPart="child_name_1">
          <help short="The target resource name."/>
          <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
        </arg>
        <arg type="string" var="$Path.watcherName" options="watcher-name" required="True" idPart="name">
          <help short="The database watcher name."/>
          <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
        </arg>
      </argGroup>
      <operation operationId="Targets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets/{targetName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="targetName" arg="$Path.targetName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
              <param type="string" name="watcherName" arg="$Path.watcherName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-01-02&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DatabaseWatcher/watchers/{}/targets/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="connectionServerName" required="True">
                      <format maxLength="200"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetAuthenticationType" required="True">
                      <enum>
                        <item value="&quot;Aad&quot;"/>
                        <item value="&quot;Sql&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetType" required="True">
                      <enum>
                        <item value="&quot;SqlDb&quot;"/>
                        <item value="&quot;SqlEp&quot;"/>
                        <item value="&quot;SqlMi&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="targetVault">
                      <prop type="ResourceId" name="akvResourceId"/>
                      <prop type="string" name="akvTargetPassword">
                        <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                      </prop>
                      <prop type="string" name="akvTargetUser">
                        <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                      </prop>
                    </prop>
                    <discriminator property="targetType" value="SqlDb">
                      <prop type="boolean" name="readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlDbResourceId" required="True"/>
                    </discriminator>
                    <discriminator property="targetType" value="SqlEp">
                      <prop type="ResourceId" name="anchorDatabaseResourceId" required="True"/>
                      <prop type="boolean" name="readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlEpResourceId" required="True"/>
                    </discriminator>
                    <discriminator property="targetType" value="SqlMi">
                      <prop type="integer32" name="connectionTcpPort">
                        <default value="1433"/>
                      </prop>
                      <prop type="boolean" name="readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlMiResourceId" required="True"/>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-01-02" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databasewatcher/watchers/{}/targets/{}" version="2025-01-02" swagger="mgmt-plane/databasewatcher/ResourceProviders/Microsoft.DatabaseWatcher/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJhc2VXYXRjaGVyL3dhdGNoZXJzL3t3YXRjaGVyTmFtZX0vdGFyZ2V0cy97dGFyZ2V0TmFtZX0=/V/MjAyNS0wMS0wMg=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.targetName" options="target-name name n" required="True" idPart="child_name_1">
          <help short="The target resource name."/>
          <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
        </arg>
        <arg type="string" var="$Path.watcherName" options="watcher-name" required="True" idPart="name">
          <help short="The database watcher name."/>
          <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
        </arg>
      </argGroup>
      <operation operationId="Targets_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets/{targetName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="targetName" arg="$Path.targetName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
              <param type="string" name="watcherName" arg="$Path.watcherName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-01-02&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-01-02">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databasewatcher/watchers/{}/targets/{}" version="2025-01-02" swagger="mgmt-plane/databasewatcher/ResourceProviders/Microsoft.DatabaseWatcher/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJhc2VXYXRjaGVyL3dhdGNoZXJzL3t3YXRjaGVyTmFtZX0vdGFyZ2V0cy97dGFyZ2V0TmFtZX0=/V/MjAyNS0wMS0wMg=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.targetName" options="target-name name n" required="True" idPart="child_name_1">
          <help short="The target resource name."/>
          <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
        </arg>
        <arg type="string" var="$Path.watcherName" options="watcher-name" required="True" idPart="name">
          <help short="The database watcher name."/>
          <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$resource.properties.SqlDb" options="sql-db" group="Properties">
          <arg type="boolean" var="$resource.properties.SqlDb.readIntent" options="read-intent">
            <help short="Set to true to monitor a high availability replica of specified target, if any."/>
            <default value="false"/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.SqlDb.sqlDbResourceId" options="sql-db-resource-id" required="True">
            <help short="The Azure resource ID of an Azure SQL DB database target."/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.SqlEp" options="sql-ep" group="Properties">
          <arg type="ResourceId" var="$resource.properties.SqlEp.anchorDatabaseResourceId" options="anchor-database-resource-id" required="True">
            <help short="The Azure resource ID of the anchor database used to connect to an elastic pool."/>
          </arg>
          <arg type="boolean" var="$resource.properties.SqlEp.readIntent" options="read-intent">
            <help short="Set to true to monitor a high availability replica of specified target, if any."/>
            <default value="false"/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.SqlEp.sqlEpResourceId" options="sql-ep-resource-id" required="True">
            <help short="The Azure resource ID of an Azure SQL DB elastic pool target."/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.SqlMi" options="sql-mi" group="Properties">
          <arg type="integer32" var="$resource.properties.SqlMi.connectionTcpPort" options="connection-tcp-port">
            <help short="The TCP port number to optionally use in the connection string when connecting to an Azure SQL Managed Instance target."/>
            <default value="1433"/>
          </arg>
          <arg type="boolean" var="$resource.properties.SqlMi.readIntent" options="read-intent">
            <help short="Set to true to monitor a high availability replica of specified target, if any."/>
            <default value="false"/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.SqlMi.sqlMiResourceId" options="sql-mi-resource-id" required="True">
            <help short="The Azure resource ID of an Azure SQL Managed Instance target."/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.connectionServerName" options="connection-server-name" group="Properties">
          <help short="The FQDN host name of the server to use in the connection string when connecting to a target. For example, for an Azure SQL logical server in the Azure commercial cloud, the value might be 'sql-logical-server-22092780.database.windows.net'; for an Azure SQL managed instance in the Azure commercial cloud, the value might be 'sql-mi-39441134.767d5869f605.database.windows.net'. Port number and instance name must be specified separately."/>
          <format maxLength="200"/>
        </arg>
        <arg type="string" var="$resource.properties.targetAuthenticationType" options="target-authentication-type" group="Properties">
          <help short="The type of authentication to use when connecting to a target."/>
          <enum>
            <item name="Aad" value="&quot;Aad&quot;"/>
            <item name="Sql" value="&quot;Sql&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$resource.properties.targetVault" options="target-vault" group="Properties">
          <help short="To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored."/>
          <arg type="ResourceId" var="$resource.properties.targetVault.akvResourceId" options="akv-resource-id">
            <help short="The Azure resource ID of the Key Vault instance storing database authentication secrets."/>
          </arg>
          <arg type="string" var="$resource.properties.targetVault.akvTargetPassword" options="akv-target-password">
            <help short="The path to the Key Vault secret storing the password for authentication to a target."/>
            <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
          </arg>
          <arg type="string" var="$resource.properties.targetVault.akvTargetUser" options="akv-target-user">
            <help short="The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target."/>
            <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Targets_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets/{targetName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="targetName" arg="$Path.targetName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
              <param type="string" name="watcherName" arg="$Path.watcherName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-01-02&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="connectionServerName" arg="$resource.properties.connectionServerName" required="True">
                      <format maxLength="200"/>
                    </prop>
                    <prop type="string" name="targetAuthenticationType" arg="$resource.properties.targetAuthenticationType" required="True">
                      <enum>
                        <item value="&quot;Aad&quot;"/>
                        <item value="&quot;Sql&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetType" required="True">
                      <enum>
                        <item arg="$resource.properties.SqlDb" value="&quot;SqlDb&quot;"/>
                        <item arg="$resource.properties.SqlEp" value="&quot;SqlEp&quot;"/>
                        <item arg="$resource.properties.SqlMi" value="&quot;SqlMi&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="targetVault" arg="$resource.properties.targetVault">
                      <prop type="ResourceId" name="akvResourceId" arg="$resource.properties.targetVault.akvResourceId"/>
                      <prop type="string" name="akvTargetPassword" arg="$resource.properties.targetVault.akvTargetPassword">
                        <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                      </prop>
                      <prop type="string" name="akvTargetUser" arg="$resource.properties.targetVault.akvTargetUser">
                        <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                      </prop>
                    </prop>
                    <discriminator property="targetType" value="SqlDb">
                      <prop type="boolean" name="readIntent" arg="$resource.properties.SqlDb.readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlDbResourceId" arg="$resource.properties.SqlDb.sqlDbResourceId" required="True"/>
                    </discriminator>
                    <discriminator property="targetType" value="SqlEp">
                      <prop type="ResourceId" name="anchorDatabaseResourceId" arg="$resource.properties.SqlEp.anchorDatabaseResourceId" required="True"/>
                      <prop type="boolean" name="readIntent" arg="$resource.properties.SqlEp.readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlEpResourceId" arg="$resource.properties.SqlEp.sqlEpResourceId" required="True"/>
                    </discriminator>
                    <discriminator property="targetType" value="SqlMi">
                      <prop type="integer32" name="connectionTcpPort" arg="$resource.properties.SqlMi.connectionTcpPort">
                        <default value="1433"/>
                      </prop>
                      <prop type="boolean" name="readIntent" arg="$resource.properties.SqlMi.readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlMiResourceId" arg="$resource.properties.SqlMi.sqlMiResourceId" required="True"/>
                    </discriminator>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DatabaseWatcher/watchers/{}/targets/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="connectionServerName" required="True">
                      <format maxLength="200"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetAuthenticationType" required="True">
                      <enum>
                        <item value="&quot;Aad&quot;"/>
                        <item value="&quot;Sql&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetType" required="True">
                      <enum>
                        <item value="&quot;SqlDb&quot;"/>
                        <item value="&quot;SqlEp&quot;"/>
                        <item value="&quot;SqlMi&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="targetVault">
                      <prop type="ResourceId" name="akvResourceId"/>
                      <prop type="string" name="akvTargetPassword">
                        <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                      </prop>
                      <prop type="string" name="akvTargetUser">
                        <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                      </prop>
                    </prop>
                    <discriminator property="targetType" value="SqlDb">
                      <prop type="boolean" name="readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlDbResourceId" required="True"/>
                    </discriminator>
                    <discriminator property="targetType" value="SqlEp">
                      <prop type="ResourceId" name="anchorDatabaseResourceId" required="True"/>
                      <prop type="boolean" name="readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlEpResourceId" required="True"/>
                    </discriminator>
                    <discriminator property="targetType" value="SqlMi">
                      <prop type="integer32" name="connectionTcpPort">
                        <default value="1433"/>
                      </prop>
                      <prop type="boolean" name="readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlMiResourceId" required="True"/>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-01-02">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databasewatcher/watchers/{}/targets/{}" version="2025-01-02" swagger="mgmt-plane/databasewatcher/ResourceProviders/Microsoft.DatabaseWatcher/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWJhc2VXYXRjaGVyL3dhdGNoZXJzL3t3YXRjaGVyTmFtZX0vdGFyZ2V0cy97dGFyZ2V0TmFtZX0=/V/MjAyNS0wMS0wMg=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.targetName" options="target-name name n" required="True" idPart="child_name_1">
          <help short="The target resource name."/>
          <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
        </arg>
        <arg type="string" var="$Path.watcherName" options="watcher-name" required="True" idPart="name">
          <help short="The database watcher name."/>
          <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$resource.properties.SqlDb" options="sql-db" group="Properties">
          <arg nullable="True" type="boolean" var="$resource.properties.SqlDb.readIntent" options="read-intent">
            <help short="Set to true to monitor a high availability replica of specified target, if any."/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.SqlDb.sqlDbResourceId" options="sql-db-resource-id">
            <help short="The Azure resource ID of an Azure SQL DB database target."/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.SqlEp" options="sql-ep" group="Properties">
          <arg type="ResourceId" var="$resource.properties.SqlEp.anchorDatabaseResourceId" options="anchor-database-resource-id">
            <help short="The Azure resource ID of the anchor database used to connect to an elastic pool."/>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.SqlEp.readIntent" options="read-intent">
            <help short="Set to true to monitor a high availability replica of specified target, if any."/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.SqlEp.sqlEpResourceId" options="sql-ep-resource-id">
            <help short="The Azure resource ID of an Azure SQL DB elastic pool target."/>
          </arg>
        </arg>
        <arg type="object" var="$resource.properties.SqlMi" options="sql-mi" group="Properties">
          <arg nullable="True" type="integer32" var="$resource.properties.SqlMi.connectionTcpPort" options="connection-tcp-port">
            <help short="The TCP port number to optionally use in the connection string when connecting to an Azure SQL Managed Instance target."/>
          </arg>
          <arg nullable="True" type="boolean" var="$resource.properties.SqlMi.readIntent" options="read-intent">
            <help short="Set to true to monitor a high availability replica of specified target, if any."/>
          </arg>
          <arg type="ResourceId" var="$resource.properties.SqlMi.sqlMiResourceId" options="sql-mi-resource-id">
            <help short="The Azure resource ID of an Azure SQL Managed Instance target."/>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.connectionServerName" options="connection-server-name" group="Properties">
          <help short="The FQDN host name of the server to use in the connection string when connecting to a target. For example, for an Azure SQL logical server in the Azure commercial cloud, the value might be 'sql-logical-server-22092780.database.windows.net'; for an Azure SQL managed instance in the Azure commercial cloud, the value might be 'sql-mi-39441134.767d5869f605.database.windows.net'. Port number and instance name must be specified separately."/>
          <format maxLength="200"/>
        </arg>
        <arg type="string" var="$resource.properties.targetAuthenticationType" options="target-authentication-type" group="Properties">
          <help short="The type of authentication to use when connecting to a target."/>
          <enum>
            <item name="Aad" value="&quot;Aad&quot;"/>
            <item name="Sql" value="&quot;Sql&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$resource.properties.targetVault" options="target-vault" group="Properties">
          <help short="To use SQL authentication when connecting to targets, specify the vault where the login name and password secrets are stored."/>
          <arg nullable="True" type="ResourceId" var="$resource.properties.targetVault.akvResourceId" options="akv-resource-id">
            <help short="The Azure resource ID of the Key Vault instance storing database authentication secrets."/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.targetVault.akvTargetPassword" options="akv-target-password">
            <help short="The path to the Key Vault secret storing the password for authentication to a target."/>
            <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
          </arg>
          <arg nullable="True" type="string" var="$resource.properties.targetVault.akvTargetUser" options="akv-target-user">
            <help short="The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a target."/>
            <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Targets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets/{targetName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="targetName" arg="$Path.targetName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
              <param type="string" name="watcherName" arg="$Path.watcherName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-01-02&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Target_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DatabaseWatcher/watchers/{}/targets/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="connectionServerName" required="True">
                      <format maxLength="200"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetAuthenticationType" required="True">
                      <enum>
                        <item value="&quot;Aad&quot;"/>
                        <item value="&quot;Sql&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="targetType" required="True">
                      <enum>
                        <item value="&quot;SqlDb&quot;"/>
                        <item value="&quot;SqlEp&quot;"/>
                        <item value="&quot;SqlMi&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="targetVault">
                      <prop type="ResourceId" name="akvResourceId"/>
                      <prop type="string" name="akvTargetPassword">
                        <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                      </prop>
                      <prop type="string" name="akvTargetUser">
                        <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                      </prop>
                    </prop>
                    <discriminator property="targetType" value="SqlDb">
                      <prop type="boolean" name="readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlDbResourceId" required="True"/>
                    </discriminator>
                    <discriminator property="targetType" value="SqlEp">
                      <prop type="ResourceId" name="anchorDatabaseResourceId" required="True"/>
                      <prop type="boolean" name="readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlEpResourceId" required="True"/>
                    </discriminator>
                    <discriminator property="targetType" value="SqlMi">
                      <prop type="integer32" name="connectionTcpPort">
                        <default value="1433"/>
                      </prop>
                      <prop type="boolean" name="readIntent">
                        <default value="false"/>
                      </prop>
                      <prop type="ResourceId" name="sqlMiResourceId" required="True"/>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="connectionServerName" arg="$resource.properties.connectionServerName" required="True">
                  <format maxLength="200"/>
                </prop>
                <prop type="string" name="targetAuthenticationType" arg="$resource.properties.targetAuthenticationType" required="True">
                  <enum>
                    <item value="&quot;Aad&quot;"/>
                    <item value="&quot;Sql&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="targetType" required="True">
                  <enum>
                    <item arg="$resource.properties.SqlDb" value="&quot;SqlDb&quot;"/>
                    <item arg="$resource.properties.SqlEp" value="&quot;SqlEp&quot;"/>
                    <item arg="$resource.properties.SqlMi" value="&quot;SqlMi&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="targetVault" arg="$resource.properties.targetVault">
                  <prop type="ResourceId" name="akvResourceId" arg="$resource.properties.targetVault.akvResourceId"/>
                  <prop type="string" name="akvTargetPassword" arg="$resource.properties.targetVault.akvTargetPassword">
                    <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                  </prop>
                  <prop type="string" name="akvTargetUser" arg="$resource.properties.targetVault.akvTargetUser">
                    <format pattern="^[a-zA-Z0-9-]{1,127}$"/>
                  </prop>
                </prop>
                <discriminator property="targetType" value="SqlDb">
                  <prop type="boolean" name="readIntent" arg="$resource.properties.SqlDb.readIntent">
                    <default value="false"/>
                  </prop>
                  <prop type="ResourceId" name="sqlDbResourceId" arg="$resource.properties.SqlDb.sqlDbResourceId" required="True"/>
                </discriminator>
                <discriminator property="targetType" value="SqlEp">
                  <prop type="ResourceId" name="anchorDatabaseResourceId" arg="$resource.properties.SqlEp.anchorDatabaseResourceId" required="True"/>
                  <prop type="boolean" name="readIntent" arg="$resource.properties.SqlEp.readIntent">
                    <default value="false"/>
                  </prop>
                  <prop type="ResourceId" name="sqlEpResourceId" arg="$resource.properties.SqlEp.sqlEpResourceId" required="True"/>
                </discriminator>
                <discriminator property="targetType" value="SqlMi">
                  <prop type="integer32" name="connectionTcpPort" arg="$resource.properties.SqlMi.connectionTcpPort">
                    <default value="1433"/>
                  </prop>
                  <prop type="boolean" name="readIntent" arg="$resource.properties.SqlMi.readIntent">
                    <default value="false"/>
                  </prop>
                  <prop type="ResourceId" name="sqlMiResourceId" arg="$resource.properties.SqlMi.sqlMiResourceId" required="True"/>
                </discriminator>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Targets_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DatabaseWatcher/watchers/{watcherName}/targets/{targetName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="targetName" arg="$Path.targetName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
              <param type="string" name="watcherName" arg="$Path.watcherName" required="True">
                <format pattern="^[a-zA-Z0-9]{1}[a-zA-Z0-9-_]{3,60}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-01-02&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Target_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
