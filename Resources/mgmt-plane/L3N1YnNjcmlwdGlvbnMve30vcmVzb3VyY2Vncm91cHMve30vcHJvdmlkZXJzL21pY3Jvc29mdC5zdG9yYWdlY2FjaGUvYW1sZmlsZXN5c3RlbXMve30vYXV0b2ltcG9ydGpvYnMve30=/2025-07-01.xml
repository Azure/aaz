<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}/autoimportjobs/{}" version="2025-07-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0vYXV0b0ltcG9ydEpvYnMve2F1dG9JbXBvcnRKb2JOYW1lfQ==/V/MjAyNS0wNy0wMQ=="/>
  <commandGroup name="amlfs auto-import">
    <command name="show" version="2025-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}/autoimportjobs/{}" version="2025-07-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0vYXV0b0ltcG9ydEpvYnMve2F1dG9JbXBvcnRKb2JOYW1lfQ==/V/MjAyNS0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.amlFilesystemName" options="aml-filesystem-name" required="True" idPart="name">
          <help short="Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="string" var="$Path.autoImportJobName" options="auto-import-job-name name n" required="True" idPart="child_name_1">
          <help short="Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="autoImportJobs_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/autoImportJobs/{autoImportJobName}">
          <request method="get">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="autoImportJobName" arg="$Path.autoImportJobName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageCache/amlFilesystems/{}/autoImportJobs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="adminStatus">
                      <default value="&quot;Enable&quot;"/>
                      <enum>
                        <item value="&quot;Disable&quot;"/>
                        <item value="&quot;Enable&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="autoImportPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="conflictResolutionMode">
                      <default value="&quot;Skip&quot;"/>
                      <enum>
                        <item value="&quot;Fail&quot;"/>
                        <item value="&quot;OverwriteAlways&quot;"/>
                        <item value="&quot;OverwriteIfDirty&quot;"/>
                        <item value="&quot;Skip&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="enableDeletions">
                      <default value="false"/>
                    </prop>
                    <prop type="integer64" name="maximumErrors"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="status" clientFlatten="True">
                      <prop readOnly="True" type="object" name="blobSyncEvents">
                        <prop readOnly="True" type="integer64" name="deletions"/>
                        <prop readOnly="True" type="integer64" name="importedDirectories"/>
                        <prop readOnly="True" type="integer64" name="importedFiles"/>
                        <prop readOnly="True" type="integer64" name="importedSymlinks"/>
                        <prop readOnly="True" type="dateTime" name="lastChangeFeedEventConsumedTime">
                          <format protocol="iso"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastTimeFullySynchronized">
                          <format protocol="iso"/>
                        </prop>
                        <prop readOnly="True" type="integer64" name="preexistingDirectories"/>
                        <prop readOnly="True" type="integer64" name="preexistingFiles"/>
                        <prop readOnly="True" type="integer64" name="preexistingSymlinks"/>
                        <prop readOnly="True" type="integer64" name="rateOfBlobImport"/>
                        <prop readOnly="True" type="integer64" name="totalBlobsImported"/>
                        <prop readOnly="True" type="integer64" name="totalConflicts"/>
                        <prop readOnly="True" type="integer64" name="totalErrors"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="importedDirectories"/>
                      <prop readOnly="True" type="integer64" name="importedFiles"/>
                      <prop readOnly="True" type="integer64" name="importedSymlinks"/>
                      <prop readOnly="True" type="dateTime" name="lastCompletionTimeUTC">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="lastStartedTimeUTC">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="preexistingDirectories"/>
                      <prop readOnly="True" type="integer64" name="preexistingFiles"/>
                      <prop readOnly="True" type="integer64" name="preexistingSymlinks"/>
                      <prop readOnly="True" type="integer64" name="rateOfBlobImport"/>
                      <prop readOnly="True" type="integer64" name="rateOfBlobWalk"/>
                      <prop readOnly="True" type="dateTime" name="scanEndTime">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="scanStartTime">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Disabling&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="statusCode"/>
                      <prop readOnly="True" type="string" name="statusMessage"/>
                      <prop readOnly="True" type="integer64" name="totalBlobsImported"/>
                      <prop readOnly="True" type="integer64" name="totalBlobsWalked"/>
                      <prop readOnly="True" type="integer64" name="totalConflicts"/>
                      <prop readOnly="True" type="integer64" name="totalErrors"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-07-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}/autoimportjobs/{}" version="2025-07-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0vYXV0b0ltcG9ydEpvYnMve2F1dG9JbXBvcnRKb2JOYW1lfQ==/V/MjAyNS0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.amlFilesystemName" options="aml-filesystem-name" required="True" idPart="name">
          <help short="Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="string" var="$Path.autoImportJobName" options="auto-import-job-name name n" required="True" idPart="child_name_1">
          <help short="Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="autoImportJobs_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/autoImportJobs/{autoImportJobName}">
          <request method="delete">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="autoImportJobName" arg="$Path.autoImportJobName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}/autoimportjobs/{}" version="2025-07-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0vYXV0b0ltcG9ydEpvYnMve2F1dG9JbXBvcnRKb2JOYW1lfQ==/V/MjAyNS0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.amlFilesystemName" options="aml-filesystem-name" required="True" idPart="name">
          <help short="Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="string" var="$Path.autoImportJobName" options="auto-import-job-name name n" required="True" idPart="child_name_1">
          <help short="Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AutoImportJob">
        <arg type="ResourceLocation" var="$autoImportJob.location" options="location l" required="True" group="AutoImportJob">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$autoImportJob.tags" options="tags" group="AutoImportJob">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$autoImportJob.properties.adminStatus" options="admin-status" group="Properties">
          <help short="The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'."/>
          <default value="&quot;Enable&quot;"/>
          <enum>
            <item name="Disable" value="&quot;Disable&quot;"/>
            <item name="Enable" value="&quot;Enable&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$autoImportJob.properties.autoImportPrefixes" options="auto-import-prefixes" group="Properties">
          <help short="An array of blob paths/prefixes that get auto imported to the cluster namespace. It has '/' as the default value. Number of maximum allowed paths is 100."/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$autoImportJob.properties.conflictResolutionMode" options="conflict-resolution-mode conflict-mode" group="Properties">
          <help short="How the auto import job will handle conflicts. For example, if the auto import job is trying to bring in a directory, but a file is at that path, how it handles it. Fail indicates that the auto import job should stop immediately and not do anything with the conflict. Skip indicates that it should pass over the conflict. OverwriteIfDirty causes the auto import job to delete and re-import the file or directory if it is a conflicting type, is dirty, or is currently released. OverwriteAlways extends OverwriteIfDirty to include releasing files that had been restored but were not dirty. Please reference https://learn.microsoft.com/en-us/azure/azure-managed-lustre/blob-integration#conflict-resolution-mode for a thorough explanation of these resolution modes."/>
          <default value="&quot;Skip&quot;"/>
          <enum>
            <item name="Fail" value="&quot;Fail&quot;"/>
            <item name="OverwriteAlways" value="&quot;OverwriteAlways&quot;"/>
            <item name="OverwriteIfDirty" value="&quot;OverwriteIfDirty&quot;"/>
            <item name="Skip" value="&quot;Skip&quot;"/>
          </enum>
        </arg>
        <arg type="boolean" var="$autoImportJob.properties.enableDeletions" options="enable-deletions" group="Properties">
          <help short="Whether or not to enable deletions during auto import. This only affects overwrite-dirty."/>
          <default value="false"/>
        </arg>
        <arg type="integer64" var="$autoImportJob.properties.maximumErrors" options="maximum-errors" group="Properties">
          <help short="Total non-conflict-oriented errors (e.g., OS errors) Import will tolerate before exiting with failure. -1 means infinite. 0 means exit immediately on any error."/>
        </arg>
      </argGroup>
      <operation operationId="autoImportJobs_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/autoImportJobs/{autoImportJobName}">
          <request method="put">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="autoImportJobName" arg="$Path.autoImportJobName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="autoImportJob" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$autoImportJob.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="adminStatus" arg="$autoImportJob.properties.adminStatus">
                      <default value="&quot;Enable&quot;"/>
                      <enum>
                        <item value="&quot;Disable&quot;"/>
                        <item value="&quot;Enable&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="autoImportPrefixes" arg="$autoImportJob.properties.autoImportPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="conflictResolutionMode" arg="$autoImportJob.properties.conflictResolutionMode">
                      <default value="&quot;Skip&quot;"/>
                      <enum>
                        <item value="&quot;Fail&quot;"/>
                        <item value="&quot;OverwriteAlways&quot;"/>
                        <item value="&quot;OverwriteIfDirty&quot;"/>
                        <item value="&quot;Skip&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="enableDeletions" arg="$autoImportJob.properties.enableDeletions">
                      <default value="false"/>
                    </prop>
                    <prop type="integer64" name="maximumErrors" arg="$autoImportJob.properties.maximumErrors"/>
                  </prop>
                  <prop type="object" name="tags" arg="$autoImportJob.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageCache/amlFilesystems/{}/autoImportJobs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="adminStatus">
                      <default value="&quot;Enable&quot;"/>
                      <enum>
                        <item value="&quot;Disable&quot;"/>
                        <item value="&quot;Enable&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="autoImportPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="conflictResolutionMode">
                      <default value="&quot;Skip&quot;"/>
                      <enum>
                        <item value="&quot;Fail&quot;"/>
                        <item value="&quot;OverwriteAlways&quot;"/>
                        <item value="&quot;OverwriteIfDirty&quot;"/>
                        <item value="&quot;Skip&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="enableDeletions">
                      <default value="false"/>
                    </prop>
                    <prop type="integer64" name="maximumErrors"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="status" clientFlatten="True">
                      <prop readOnly="True" type="object" name="blobSyncEvents">
                        <prop readOnly="True" type="integer64" name="deletions"/>
                        <prop readOnly="True" type="integer64" name="importedDirectories"/>
                        <prop readOnly="True" type="integer64" name="importedFiles"/>
                        <prop readOnly="True" type="integer64" name="importedSymlinks"/>
                        <prop readOnly="True" type="dateTime" name="lastChangeFeedEventConsumedTime">
                          <format protocol="iso"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastTimeFullySynchronized">
                          <format protocol="iso"/>
                        </prop>
                        <prop readOnly="True" type="integer64" name="preexistingDirectories"/>
                        <prop readOnly="True" type="integer64" name="preexistingFiles"/>
                        <prop readOnly="True" type="integer64" name="preexistingSymlinks"/>
                        <prop readOnly="True" type="integer64" name="rateOfBlobImport"/>
                        <prop readOnly="True" type="integer64" name="totalBlobsImported"/>
                        <prop readOnly="True" type="integer64" name="totalConflicts"/>
                        <prop readOnly="True" type="integer64" name="totalErrors"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="importedDirectories"/>
                      <prop readOnly="True" type="integer64" name="importedFiles"/>
                      <prop readOnly="True" type="integer64" name="importedSymlinks"/>
                      <prop readOnly="True" type="dateTime" name="lastCompletionTimeUTC">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="lastStartedTimeUTC">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="preexistingDirectories"/>
                      <prop readOnly="True" type="integer64" name="preexistingFiles"/>
                      <prop readOnly="True" type="integer64" name="preexistingSymlinks"/>
                      <prop readOnly="True" type="integer64" name="rateOfBlobImport"/>
                      <prop readOnly="True" type="integer64" name="rateOfBlobWalk"/>
                      <prop readOnly="True" type="dateTime" name="scanEndTime">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="scanStartTime">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Disabling&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="statusCode"/>
                      <prop readOnly="True" type="string" name="statusMessage"/>
                      <prop readOnly="True" type="integer64" name="totalBlobsImported"/>
                      <prop readOnly="True" type="integer64" name="totalBlobsWalked"/>
                      <prop readOnly="True" type="integer64" name="totalConflicts"/>
                      <prop readOnly="True" type="integer64" name="totalErrors"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.storagecache/amlfilesystems/{}/autoimportjobs/{}" version="2025-07-01" swagger="mgmt-plane/storagecache/ResourceProviders/Microsoft.StorageCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU3RvcmFnZUNhY2hlL2FtbEZpbGVzeXN0ZW1zL3thbWxGaWxlc3lzdGVtTmFtZX0vYXV0b0ltcG9ydEpvYnMve2F1dG9JbXBvcnRKb2JOYW1lfQ==/V/MjAyNS0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.amlFilesystemName" options="aml-filesystem-name" required="True" idPart="name">
          <help short="Name for the AML file system. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="string" var="$Path.autoImportJobName" options="auto-import-job-name name n" required="True" idPart="child_name_1">
          <help short="Name for the auto import job. Allows alphanumerics, underscores, and hyphens. Start and end with alphanumeric."/>
          <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="AutoImportJob">
        <arg type="object" var="$autoImportJob.tags" options="tags" group="AutoImportJob">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$autoImportJob.properties.adminStatus" options="admin-status" group="Properties">
          <help short="The administrative status of the auto import job. Possible values: 'Enable', 'Disable'. Passing in a value of 'Disable' will disable the current active auto import job. By default it is set to 'Enable'."/>
          <enum>
            <item name="Disable" value="&quot;Disable&quot;"/>
            <item name="Enable" value="&quot;Enable&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="autoImportJobs_Update">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorageCache/amlFilesystems/{amlFilesystemName}/autoImportJobs/{autoImportJobName}">
          <request method="patch">
            <path>
              <param type="string" name="amlFilesystemName" arg="$Path.amlFilesystemName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="autoImportJobName" arg="$Path.autoImportJobName" required="True">
                <format pattern="^[0-9a-zA-Z][-0-9a-zA-Z_]{0,78}[0-9a-zA-Z]$" maxLength="80" minLength="2"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-07-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="autoImportJob" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="adminStatus" arg="$autoImportJob.properties.adminStatus">
                      <enum>
                        <item value="&quot;Disable&quot;"/>
                        <item value="&quot;Enable&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$autoImportJob.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.StorageCache/amlFilesystems/{}/autoImportJobs/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="adminStatus">
                      <default value="&quot;Enable&quot;"/>
                      <enum>
                        <item value="&quot;Disable&quot;"/>
                        <item value="&quot;Enable&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="autoImportPrefixes">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="conflictResolutionMode">
                      <default value="&quot;Skip&quot;"/>
                      <enum>
                        <item value="&quot;Fail&quot;"/>
                        <item value="&quot;OverwriteAlways&quot;"/>
                        <item value="&quot;OverwriteIfDirty&quot;"/>
                        <item value="&quot;Skip&quot;"/>
                      </enum>
                    </prop>
                    <prop type="boolean" name="enableDeletions">
                      <default value="false"/>
                    </prop>
                    <prop type="integer64" name="maximumErrors"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="object" name="status" clientFlatten="True">
                      <prop readOnly="True" type="object" name="blobSyncEvents">
                        <prop readOnly="True" type="integer64" name="deletions"/>
                        <prop readOnly="True" type="integer64" name="importedDirectories"/>
                        <prop readOnly="True" type="integer64" name="importedFiles"/>
                        <prop readOnly="True" type="integer64" name="importedSymlinks"/>
                        <prop readOnly="True" type="dateTime" name="lastChangeFeedEventConsumedTime">
                          <format protocol="iso"/>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="lastTimeFullySynchronized">
                          <format protocol="iso"/>
                        </prop>
                        <prop readOnly="True" type="integer64" name="preexistingDirectories"/>
                        <prop readOnly="True" type="integer64" name="preexistingFiles"/>
                        <prop readOnly="True" type="integer64" name="preexistingSymlinks"/>
                        <prop readOnly="True" type="integer64" name="rateOfBlobImport"/>
                        <prop readOnly="True" type="integer64" name="totalBlobsImported"/>
                        <prop readOnly="True" type="integer64" name="totalConflicts"/>
                        <prop readOnly="True" type="integer64" name="totalErrors"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="importedDirectories"/>
                      <prop readOnly="True" type="integer64" name="importedFiles"/>
                      <prop readOnly="True" type="integer64" name="importedSymlinks"/>
                      <prop readOnly="True" type="dateTime" name="lastCompletionTimeUTC">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="lastStartedTimeUTC">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="integer64" name="preexistingDirectories"/>
                      <prop readOnly="True" type="integer64" name="preexistingFiles"/>
                      <prop readOnly="True" type="integer64" name="preexistingSymlinks"/>
                      <prop readOnly="True" type="integer64" name="rateOfBlobImport"/>
                      <prop readOnly="True" type="integer64" name="rateOfBlobWalk"/>
                      <prop readOnly="True" type="dateTime" name="scanEndTime">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="scanStartTime">
                        <format protocol="iso"/>
                      </prop>
                      <prop readOnly="True" type="string" name="state">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Disabling&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="statusCode"/>
                      <prop readOnly="True" type="string" name="statusMessage"/>
                      <prop readOnly="True" type="integer64" name="totalBlobsImported"/>
                      <prop readOnly="True" type="integer64" name="totalBlobsWalked"/>
                      <prop readOnly="True" type="integer64" name="totalConflicts"/>
                      <prop readOnly="True" type="integer64" name="totalErrors"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt">
                      <format protocol="iso"/>
                    </prop>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="azure-async-operation"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
