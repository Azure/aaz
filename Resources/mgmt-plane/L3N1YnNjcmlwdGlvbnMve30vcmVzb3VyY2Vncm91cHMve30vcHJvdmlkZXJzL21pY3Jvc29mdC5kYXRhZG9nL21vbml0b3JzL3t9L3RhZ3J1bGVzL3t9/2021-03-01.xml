<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.datadog/monitors/{}/tagrules/{}" version="2021-03-01" swagger="mgmt-plane/datadog/ResourceProviders/Microsoft.Datadog/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWRvZy9tb25pdG9ycy97bW9uaXRvck5hbWV9L3RhZ1J1bGVzL3tydWxlU2V0TmFtZX0=/V/MjAyMS0wMy0wMQ=="/>
  <commandGroup name="datadog tag-rule">
    <command name="show" version="2021-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.datadog/monitors/{}/tagrules/{}" version="2021-03-01" swagger="mgmt-plane/datadog/ResourceProviders/Microsoft.Datadog/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWRvZy9tb25pdG9ycy97bW9uaXRvck5hbWV9L3RhZ1J1bGVzL3tydWxlU2V0TmFtZX0=/V/MjAyMS0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" group="" idPart="name">
          <help short="Monitor resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleSetName" options="rule-set-name" required="True" group="" idPart="child_name_1">
          <help short="Rule set name"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="TagRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Datadog/monitors/{monitorName}/tagRules/{ruleSetName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleSetName" arg="$Path.ruleSetName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Datadog/monitors/{}/tagRules/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="logRules">
                      <prop type="array<object>" name="filteringTags" identifiers="name">
                        <item type="object" cls="FilteringTag_read">
                          <prop type="string" name="action">
                            <enum>
                              <item value="&quot;Exclude&quot;"/>
                              <item value="&quot;Include&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop type="boolean" name="sendAadLogs"/>
                      <prop type="boolean" name="sendResourceLogs"/>
                      <prop type="boolean" name="sendSubscriptionLogs"/>
                    </prop>
                    <prop type="object" name="metricRules">
                      <prop type="array<@FilteringTag_read>" name="filteringTags" identifiers="name">
                        <item type="@FilteringTag_read"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2021-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.datadog/monitors/{}/tagrules/{}" version="2021-03-01" swagger="mgmt-plane/datadog/ResourceProviders/Microsoft.Datadog/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWRvZy9tb25pdG9ycy97bW9uaXRvck5hbWV9L3RhZ1J1bGVzL3tydWxlU2V0TmFtZX0=/V/MjAyMS0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" group="" idPart="name">
          <help short="Monitor resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleSetName" options="rule-set-name" required="True" group="" idPart="child_name_1">
          <help short="Rule set name"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$body.properties.logRules" options="log-rules" group="Properties">
          <help short="Set of rules for sending logs for the Monitor resource."/>
          <arg type="array<object>" var="$body.properties.logRules.filteringTags" options="filtering-tags">
            <help short="List of filtering tags to be used for capturing logs. This only takes effect if SendResourceLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
            <item type="object" cls="FilteringTag_create">
              <arg type="string" var="@FilteringTag_create.action" options="action">
                <help short="Valid actions for a filtering tag. Exclusion takes priority over inclusion."/>
                <enum>
                  <item name="Exclude" value="&quot;Exclude&quot;"/>
                  <item name="Include" value="&quot;Include&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="@FilteringTag_create.name" options="name">
                <help short="The name (also known as the key) of the tag."/>
              </arg>
              <arg type="string" var="@FilteringTag_create.value" options="value">
                <help short="The value of the tag."/>
              </arg>
            </item>
          </arg>
          <arg type="boolean" var="$body.properties.logRules.sendAadLogs" options="send-aad-logs">
            <help short="Flag specifying if AAD logs should be sent for the Monitor resource."/>
          </arg>
          <arg type="boolean" var="$body.properties.logRules.sendResourceLogs" options="send-resource-logs">
            <help short="Flag specifying if Azure resource logs should be sent for the Monitor resource."/>
          </arg>
          <arg type="boolean" var="$body.properties.logRules.sendSubscriptionLogs" options="send-subscription-logs">
            <help short="Flag specifying if Azure subscription logs should be sent for the Monitor resource."/>
          </arg>
        </arg>
        <arg type="object" var="$body.properties.metricRules" options="metric-rules" group="Properties">
          <help short="Set of rules for sending metrics for the Monitor resource."/>
          <arg type="array<@FilteringTag_create>" var="$body.properties.metricRules.filteringTags" options="filtering-tags">
            <help short="List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
            <item type="@FilteringTag_create"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="TagRules_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Datadog/monitors/{monitorName}/tagRules/{ruleSetName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleSetName" arg="$Path.ruleSetName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="object" name="logRules" arg="$body.properties.logRules">
                      <prop type="array<object>" name="filteringTags" arg="$body.properties.logRules.filteringTags" identifiers="name">
                        <item type="object" cls="FilteringTag_create">
                          <prop type="string" name="action" arg="@FilteringTag_create.action">
                            <enum>
                              <item value="&quot;Exclude&quot;"/>
                              <item value="&quot;Include&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name" arg="@FilteringTag_create.name"/>
                          <prop type="string" name="value" arg="@FilteringTag_create.value"/>
                        </item>
                      </prop>
                      <prop type="boolean" name="sendAadLogs" arg="$body.properties.logRules.sendAadLogs"/>
                      <prop type="boolean" name="sendResourceLogs" arg="$body.properties.logRules.sendResourceLogs"/>
                      <prop type="boolean" name="sendSubscriptionLogs" arg="$body.properties.logRules.sendSubscriptionLogs"/>
                    </prop>
                    <prop type="object" name="metricRules" arg="$body.properties.metricRules">
                      <prop type="array<@FilteringTag_create>" name="filteringTags" arg="$body.properties.metricRules.filteringTags" identifiers="name">
                        <item type="@FilteringTag_create"/>
                      </prop>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Datadog/monitors/{}/tagRules/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="logRules">
                      <prop type="array<object>" name="filteringTags" identifiers="name">
                        <item type="object" cls="FilteringTag_read">
                          <prop type="string" name="action">
                            <enum>
                              <item value="&quot;Exclude&quot;"/>
                              <item value="&quot;Include&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop type="boolean" name="sendAadLogs"/>
                      <prop type="boolean" name="sendResourceLogs"/>
                      <prop type="boolean" name="sendSubscriptionLogs"/>
                    </prop>
                    <prop type="object" name="metricRules">
                      <prop type="array<@FilteringTag_read>" name="filteringTags" identifiers="name">
                        <item type="@FilteringTag_read"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2021-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.datadog/monitors/{}/tagrules/{}" version="2021-03-01" swagger="mgmt-plane/datadog/ResourceProviders/Microsoft.Datadog/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YWRvZy9tb25pdG9ycy97bW9uaXRvck5hbWV9L3RhZ1J1bGVzL3tydWxlU2V0TmFtZX0=/V/MjAyMS0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.monitorName" options="monitor-name name n" required="True" group="" idPart="name">
          <help short="Monitor resource name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleSetName" options="rule-set-name" required="True" group="" idPart="child_name_1">
          <help short="Rule set name"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$body.properties.logRules" options="log-rules" group="Properties">
          <help short="Set of rules for sending logs for the Monitor resource."/>
          <arg nullable="True" type="array<object>" var="$body.properties.logRules.filteringTags" options="filtering-tags">
            <help short="List of filtering tags to be used for capturing logs. This only takes effect if SendResourceLogs flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
            <item nullable="True" type="object" cls="FilteringTag_update">
              <arg nullable="True" type="string" var="@FilteringTag_update.action" options="action">
                <help short="Valid actions for a filtering tag. Exclusion takes priority over inclusion."/>
                <enum>
                  <item name="Exclude" value="&quot;Exclude&quot;"/>
                  <item name="Include" value="&quot;Include&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="@FilteringTag_update.name" options="name">
                <help short="The name (also known as the key) of the tag."/>
              </arg>
              <arg nullable="True" type="string" var="@FilteringTag_update.value" options="value">
                <help short="The value of the tag."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.logRules.sendAadLogs" options="send-aad-logs">
            <help short="Flag specifying if AAD logs should be sent for the Monitor resource."/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.logRules.sendResourceLogs" options="send-resource-logs">
            <help short="Flag specifying if Azure resource logs should be sent for the Monitor resource."/>
          </arg>
          <arg nullable="True" type="boolean" var="$body.properties.logRules.sendSubscriptionLogs" options="send-subscription-logs">
            <help short="Flag specifying if Azure subscription logs should be sent for the Monitor resource."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.metricRules" options="metric-rules" group="Properties">
          <help short="Set of rules for sending metrics for the Monitor resource."/>
          <arg nullable="True" type="array<@FilteringTag_update>" var="$body.properties.metricRules.filteringTags" options="filtering-tags">
            <help short="List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags."/>
            <item nullable="True" type="@FilteringTag_update"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="TagRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Datadog/monitors/{monitorName}/tagRules/{ruleSetName}">
          <request method="get">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleSetName" arg="$Path.ruleSetName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="MonitoringTagRules_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Datadog/monitors/{}/tagRules/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="object" name="logRules">
                      <prop type="array<object>" name="filteringTags" identifiers="name">
                        <item type="object" cls="FilteringTag_read">
                          <prop type="string" name="action">
                            <enum>
                              <item value="&quot;Exclude&quot;"/>
                              <item value="&quot;Include&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="value"/>
                        </item>
                      </prop>
                      <prop type="boolean" name="sendAadLogs"/>
                      <prop type="boolean" name="sendResourceLogs"/>
                      <prop type="boolean" name="sendSubscriptionLogs"/>
                    </prop>
                    <prop type="object" name="metricRules">
                      <prop type="array<@FilteringTag_read>" name="filteringTags" identifiers="name">
                        <item type="@FilteringTag_read"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleted&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="object" name="logRules" arg="$body.properties.logRules">
                  <prop type="array<object>" name="filteringTags" arg="$body.properties.logRules.filteringTags" identifiers="name">
                    <item type="object" cls="FilteringTag_update">
                      <prop type="string" name="action" arg="@FilteringTag_update.action">
                        <enum>
                          <item value="&quot;Exclude&quot;"/>
                          <item value="&quot;Include&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="name" arg="@FilteringTag_update.name"/>
                      <prop type="string" name="value" arg="@FilteringTag_update.value"/>
                    </item>
                  </prop>
                  <prop type="boolean" name="sendAadLogs" arg="$body.properties.logRules.sendAadLogs"/>
                  <prop type="boolean" name="sendResourceLogs" arg="$body.properties.logRules.sendResourceLogs"/>
                  <prop type="boolean" name="sendSubscriptionLogs" arg="$body.properties.logRules.sendSubscriptionLogs"/>
                </prop>
                <prop type="object" name="metricRules" arg="$body.properties.metricRules">
                  <prop type="array<@FilteringTag_update>" name="filteringTags" arg="$body.properties.metricRules.filteringTags" identifiers="name">
                    <item type="@FilteringTag_update"/>
                  </prop>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="TagRules_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Datadog/monitors/{monitorName}/tagRules/{ruleSetName}">
          <request method="put">
            <path>
              <param type="string" name="monitorName" arg="$Path.monitorName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleSetName" arg="$Path.ruleSetName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2021-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@MonitoringTagRules_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
