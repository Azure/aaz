<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworktaps/{}" version="2024-03-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya1RhcHMve3RhcE5hbWV9/V/MjAyNC0wMy0wMQ=="/>
  <commandGroup name="network vnet tap">
    <command name="show" version="2024-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworktaps/{}" version="2024-03-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya1RhcHMve3RhcE5hbWV9/V/MjAyNC0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.tapName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet tap."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkTaps_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="tapName" arg="$Path.tapName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualNetworkTap_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="@FrontendIPConfiguration_read" name="destinationLoadBalancerFrontEndIPConfiguration"/>
                    <prop type="object" name="destinationNetworkInterfaceIPConfiguration" cls="NetworkInterfaceIPConfiguration_read">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
                      </prop>
                      <prop type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="applicationGatewayBackendAddressPools">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="backendAddresses">
                                <item type="object">
                                  <prop type="string" name="fqdn"/>
                                  <prop type="string" name="ipAddress"/>
                                </item>
                              </prop>
                              <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                <item type="@NetworkInterfaceIPConfiguration_read"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="array<@ApplicationSecurityGroup_read>" name="applicationSecurityGroups">
                          <item type="@ApplicationSecurityGroup_read"/>
                        </prop>
                        <prop type="object" name="gatewayLoadBalancer" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                        <prop type="array<object>" name="loadBalancerBackendAddressPools">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                <item type="@NetworkInterfaceIPConfiguration_read"/>
                              </prop>
                              <prop type="integer32" name="drainPeriodInSeconds"/>
                              <prop readOnly="True" type="array<@SubResource_read>" name="inboundNatRules">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="array<object>" name="loadBalancerBackendAddresses">
                                <item type="object">
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="adminState">
                                      <enum>
                                        <item value="&quot;Down&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                        <item value="&quot;Up&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop readOnly="True" type="array<object>" name="inboundNatRulesPortMapping">
                                      <item type="object">
                                        <prop type="integer32" name="backendPort"/>
                                        <prop type="integer32" name="frontendPort"/>
                                        <prop type="string" name="inboundNatRuleName"/>
                                      </item>
                                    </prop>
                                    <prop type="string" name="ipAddress"/>
                                    <prop type="@SubResource_read" name="loadBalancerFrontendIPConfiguration"/>
                                    <prop readOnly="True" type="@SubResource_read" name="networkInterfaceIPConfiguration"/>
                                    <prop type="@SubResource_read" name="subnet"/>
                                    <prop type="@SubResource_read" name="virtualNetwork"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="string" name="location"/>
                              <prop readOnly="True" type="@SubResource_read" name="outboundRule"/>
                              <prop readOnly="True" type="array<@SubResource_read>" name="outboundRules">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="syncMode">
                                <enum>
                                  <item value="&quot;Automatic&quot;"/>
                                  <item value="&quot;Manual&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="tunnelInterfaces">
                                <item type="object">
                                  <prop type="integer32" name="identifier"/>
                                  <prop type="integer32" name="port"/>
                                  <prop type="string" name="protocol">
                                    <enum>
                                      <item value="&quot;Native&quot;"/>
                                      <item value="&quot;None&quot;"/>
                                      <item value="&quot;VXLAN&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="type">
                                    <enum>
                                      <item value="&quot;External&quot;"/>
                                      <item value="&quot;Internal&quot;"/>
                                      <item value="&quot;None&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_read" name="virtualNetwork"/>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="loadBalancerInboundNatRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="@SubResource_read" name="backendAddressPool"/>
                              <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                              <prop type="integer32" name="backendPort"/>
                              <prop type="boolean" name="enableFloatingIP"/>
                              <prop type="boolean" name="enableTcpReset"/>
                              <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                              <prop type="integer32" name="frontendPort"/>
                              <prop type="integer32" name="frontendPortRangeEnd"/>
                              <prop type="integer32" name="frontendPortRangeStart"/>
                              <prop type="integer32" name="idleTimeoutInMinutes"/>
                              <prop type="string" name="protocol">
                                <enum>
                                  <item value="&quot;All&quot;"/>
                                  <item value="&quot;Tcp&quot;"/>
                                  <item value="&quot;Udp&quot;"/>
                                </enum>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="privateIPAddress"/>
                        <prop nullable="True" type="integer32" name="privateIPAddressPrefixLength">
                          <format maximum="128" minimum="1"/>
                        </prop>
                        <prop type="string" name="privateIPAddressVersion">
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="privateIPAllocationMethod">
                          <enum>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="object" name="privateLinkConnectionProperties">
                          <prop readOnly="True" type="array<string>" name="fqdns">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="groupId"/>
                          <prop readOnly="True" type="string" name="requiredMemberName"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                        <prop type="object" name="subnet" cls="Subnet_read">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="addressPrefix"/>
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="array<object>" name="applicationGatewayIPConfigurations">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@SubResource_read" name="subnet"/>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="boolean" name="defaultOutboundAccess"/>
                            <prop type="array<object>" name="delegations">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="array<string>" name="actions">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="serviceName"/>
                                </prop>
                                <prop type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="array<@SubResource_read>" name="ipAllocations">
                              <item type="@SubResource_read"/>
                            </prop>
                            <prop readOnly="True" type="array<object>" name="ipConfigurationProfiles">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@Subnet_read" name="subnet"/>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop readOnly="True" type="array<@IPConfiguration_read>" name="ipConfigurations">
                              <item type="@IPConfiguration_read"/>
                            </prop>
                            <prop type="@SubResource_read" name="natGateway"/>
                            <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location"/>
                              <prop readOnly="True" type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="array<@SecurityRule_read>" name="defaultSecurityRules">
                                  <item type="@SecurityRule_read"/>
                                </prop>
                                <prop readOnly="True" type="array<object>" name="flowLogs">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
                                    </prop>
                                    <prop type="IdentityObject" name="identity">
                                      <prop readOnly="True" type="string" name="principalId"/>
                                      <prop readOnly="True" type="string" name="tenantId"/>
                                      <prop type="string" name="type">
                                        <enum>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;SystemAssigned&quot;"/>
                                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                                          <item value="&quot;UserAssigned&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="userAssignedIdentities">
                                        <additionalProp>
                                          <item type="object">
                                            <prop readOnly="True" type="string" name="clientId"/>
                                            <prop readOnly="True" type="string" name="principalId"/>
                                          </item>
                                        </additionalProp>
                                      </prop>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="boolean" name="enabled"/>
                                      <prop type="string" name="enabledFilteringCriteria"/>
                                      <prop type="object" name="flowAnalyticsConfiguration">
                                        <prop type="object" name="networkWatcherFlowAnalyticsConfiguration">
                                          <prop type="boolean" name="enabled"/>
                                          <prop type="integer32" name="trafficAnalyticsInterval"/>
                                          <prop type="string" name="workspaceId"/>
                                          <prop type="string" name="workspaceRegion"/>
                                          <prop type="string" name="workspaceResourceId"/>
                                        </prop>
                                      </prop>
                                      <prop type="object" name="format">
                                        <prop type="string" name="type">
                                          <enum>
                                            <item value="&quot;JSON&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="integer32" name="version">
                                          <default value="0"/>
                                        </prop>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="retentionPolicy">
                                        <prop type="integer32" name="days">
                                          <default value="0"/>
                                        </prop>
                                        <prop type="boolean" name="enabled">
                                          <default value="false"/>
                                        </prop>
                                      </prop>
                                      <prop type="string" name="storageId" required="True"/>
                                      <prop readOnly="True" type="string" name="targetResourceGuid"/>
                                      <prop type="string" name="targetResourceId" required="True"/>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop type="boolean" name="flushConnection"/>
                                <prop readOnly="True" type="array<object>" name="networkInterfaces">
                                  <item type="object" cls="NetworkInterface_read">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="object" name="extendedLocation" cls="ExtendedLocation_read">
                                      <prop type="string" name="name"/>
                                      <prop type="string" name="type">
                                        <enum>
                                          <item value="&quot;EdgeZone&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="auxiliaryMode">
                                        <enum>
                                          <item value="&quot;AcceleratedConnections&quot;"/>
                                          <item value="&quot;Floating&quot;"/>
                                          <item value="&quot;MaxConnections&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="auxiliarySku">
                                        <enum>
                                          <item value="&quot;A1&quot;"/>
                                          <item value="&quot;A2&quot;"/>
                                          <item value="&quot;A4&quot;"/>
                                          <item value="&quot;A8&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="boolean" name="disableTcpStateTracking"/>
                                      <prop type="object" name="dnsSettings">
                                        <prop readOnly="True" type="array<string>" name="appliedDnsServers">
                                          <item type="string"/>
                                        </prop>
                                        <prop type="array<string>" name="dnsServers">
                                          <item type="string"/>
                                        </prop>
                                        <prop type="string" name="internalDnsNameLabel"/>
                                        <prop readOnly="True" type="string" name="internalDomainNameSuffix"/>
                                        <prop readOnly="True" type="string" name="internalFqdn"/>
                                      </prop>
                                      <prop readOnly="True" type="@SubResource_read" name="dscpConfiguration"/>
                                      <prop type="boolean" name="enableAcceleratedNetworking"/>
                                      <prop type="boolean" name="enableIPForwarding"/>
                                      <prop readOnly="True" type="array<string>" name="hostedWorkloads">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<@NetworkInterfaceIPConfiguration_read>" name="ipConfigurations">
                                        <item type="@NetworkInterfaceIPConfiguration_read"/>
                                      </prop>
                                      <prop readOnly="True" type="string" name="macAddress"/>
                                      <prop type="string" name="migrationPhase">
                                        <enum>
                                          <item value="&quot;Abort&quot;"/>
                                          <item value="&quot;Commit&quot;"/>
                                          <item value="&quot;Committed&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;Prepare&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                      <prop type="string" name="nicType">
                                        <enum>
                                          <item value="&quot;Elastic&quot;"/>
                                          <item value="&quot;Standard&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="boolean" name="primary"/>
                                      <prop readOnly="True" type="object" name="privateEndpoint" cls="PrivateEndpoint_read">
                                        <prop readOnly="True" type="string" name="etag"/>
                                        <prop type="@ExtendedLocation_read" name="extendedLocation"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateEndpoints/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="array<@ApplicationSecurityGroup_read>" name="applicationSecurityGroups">
                                            <item type="@ApplicationSecurityGroup_read"/>
                                          </prop>
                                          <prop type="array<object>" name="customDnsConfigs">
                                            <item type="object">
                                              <prop type="string" name="fqdn"/>
                                              <prop type="array<string>" name="ipAddresses">
                                                <item type="string"/>
                                              </prop>
                                            </item>
                                          </prop>
                                          <prop type="string" name="customNetworkInterfaceName"/>
                                          <prop type="array<object>" name="ipConfigurations">
                                            <item type="object">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="string" name="groupId"/>
                                                <prop type="string" name="memberName"/>
                                                <prop type="string" name="privateIPAddress"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop type="array<@PrivateLinkServiceConnection_read>" name="manualPrivateLinkServiceConnections">
                                            <item type="@PrivateLinkServiceConnection_read"/>
                                          </prop>
                                          <prop readOnly="True" type="array<@NetworkInterface_read>" name="networkInterfaces">
                                            <item type="@NetworkInterface_read"/>
                                          </prop>
                                          <prop type="array<object>" name="privateLinkServiceConnections">
                                            <item type="object" cls="PrivateLinkServiceConnection_read">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="string" name="id"/>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="array<string>" name="groupIds">
                                                  <item type="string"/>
                                                </prop>
                                                <prop type="object" name="privateLinkServiceConnectionState" cls="PrivateLinkServiceConnectionState_read">
                                                  <prop type="string" name="actionsRequired"/>
                                                  <prop type="string" name="description"/>
                                                  <prop type="string" name="status"/>
                                                </prop>
                                                <prop type="string" name="privateLinkServiceId"/>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="requestMessage"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop readOnly="True" type="string" name="provisioningState">
                                            <enum>
                                              <item value="&quot;Deleting&quot;"/>
                                              <item value="&quot;Failed&quot;"/>
                                              <item value="&quot;Succeeded&quot;"/>
                                              <item value="&quot;Updating&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="@Subnet_read" name="subnet"/>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop type="object" name="privateLinkService">
                                        <prop readOnly="True" type="string" name="etag"/>
                                        <prop type="@ExtendedLocation_read" name="extendedLocation"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateLinkServices/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop readOnly="True" type="string" name="alias"/>
                                          <prop type="object" name="autoApproval">
                                            <prop type="array<string>" name="subscriptions">
                                              <item type="string"/>
                                            </prop>
                                          </prop>
                                          <prop type="string" name="destinationIPAddress"/>
                                          <prop type="boolean" name="enableProxyProtocol"/>
                                          <prop type="array<string>" name="fqdns">
                                            <item type="string"/>
                                          </prop>
                                          <prop type="array<object>" name="ipConfigurations">
                                            <item type="object">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="string" name="id"/>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="boolean" name="primary"/>
                                                <prop type="string" name="privateIPAddress"/>
                                                <prop type="string" name="privateIPAddressVersion">
                                                  <enum>
                                                    <item value="&quot;IPv4&quot;"/>
                                                    <item value="&quot;IPv6&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="privateIPAllocationMethod">
                                                  <enum>
                                                    <item value="&quot;Dynamic&quot;"/>
                                                    <item value="&quot;Static&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="@Subnet_read" name="subnet"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop type="array<object>" name="loadBalancerFrontendIpConfigurations">
                                            <item type="object" cls="FrontendIPConfiguration_read">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="ResourceId" name="id">
                                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
                                              </prop>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="@SubResource_read" name="gatewayLoadBalancer"/>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="inboundNatPools">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="inboundNatRules">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="outboundRules">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop type="string" name="privateIPAddress"/>
                                                <prop type="string" name="privateIPAddressVersion">
                                                  <enum>
                                                    <item value="&quot;IPv4&quot;"/>
                                                    <item value="&quot;IPv6&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="privateIPAllocationMethod">
                                                  <enum>
                                                    <item value="&quot;Dynamic&quot;"/>
                                                    <item value="&quot;Static&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                                  <prop readOnly="True" type="string" name="etag"/>
                                                  <prop type="@ExtendedLocation_read" name="extendedLocation"/>
                                                  <prop type="ResourceId" name="id">
                                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                                  </prop>
                                                  <prop type="ResourceLocation" name="location"/>
                                                  <prop readOnly="True" type="string" name="name"/>
                                                  <prop type="object" name="properties" clientFlatten="True">
                                                    <prop type="object" name="ddosSettings">
                                                      <prop type="@SubResource_read" name="ddosProtectionPlan"/>
                                                      <prop type="string" name="protectionMode">
                                                        <enum>
                                                          <item value="&quot;Disabled&quot;"/>
                                                          <item value="&quot;Enabled&quot;"/>
                                                          <item value="&quot;VirtualNetworkInherited&quot;"/>
                                                        </enum>
                                                      </prop>
                                                    </prop>
                                                    <prop type="string" name="deleteOption">
                                                      <enum>
                                                        <item value="&quot;Delete&quot;"/>
                                                        <item value="&quot;Detach&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="object" name="dnsSettings">
                                                      <prop type="string" name="domainNameLabel"/>
                                                      <prop type="string" name="domainNameLabelScope">
                                                        <enum>
                                                          <item value="&quot;NoReuse&quot;"/>
                                                          <item value="&quot;ResourceGroupReuse&quot;"/>
                                                          <item value="&quot;SubscriptionReuse&quot;"/>
                                                          <item value="&quot;TenantReuse&quot;"/>
                                                        </enum>
                                                      </prop>
                                                      <prop type="string" name="fqdn"/>
                                                      <prop type="string" name="reverseFqdn"/>
                                                    </prop>
                                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                                    <prop type="string" name="ipAddress"/>
                                                    <prop readOnly="True" type="object" name="ipConfiguration" cls="IPConfiguration_read">
                                                      <prop readOnly="True" type="string" name="etag"/>
                                                      <prop type="string" name="id"/>
                                                      <prop type="string" name="name"/>
                                                      <prop type="object" name="properties" clientFlatten="True">
                                                        <prop type="string" name="privateIPAddress"/>
                                                        <prop type="string" name="privateIPAllocationMethod">
                                                          <default value="&quot;Dynamic&quot;"/>
                                                          <enum>
                                                            <item value="&quot;Dynamic&quot;"/>
                                                            <item value="&quot;Static&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop readOnly="True" type="string" name="provisioningState">
                                                          <enum>
                                                            <item value="&quot;Deleting&quot;"/>
                                                            <item value="&quot;Failed&quot;"/>
                                                            <item value="&quot;Succeeded&quot;"/>
                                                            <item value="&quot;Updating&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                                                        <prop type="@Subnet_read" name="subnet"/>
                                                      </prop>
                                                    </prop>
                                                    <prop type="array<object>" name="ipTags">
                                                      <item type="object">
                                                        <prop type="string" name="ipTagType"/>
                                                        <prop type="string" name="tag"/>
                                                      </item>
                                                    </prop>
                                                    <prop type="@PublicIPAddress_read" name="linkedPublicIPAddress"/>
                                                    <prop type="string" name="migrationPhase">
                                                      <enum>
                                                        <item value="&quot;Abort&quot;"/>
                                                        <item value="&quot;Commit&quot;"/>
                                                        <item value="&quot;Committed&quot;"/>
                                                        <item value="&quot;None&quot;"/>
                                                        <item value="&quot;Prepare&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="object" name="natGateway">
                                                      <prop readOnly="True" type="string" name="etag"/>
                                                      <prop type="ResourceId" name="id">
                                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/natGateways/{}"/>
                                                      </prop>
                                                      <prop type="ResourceLocation" name="location"/>
                                                      <prop readOnly="True" type="string" name="name"/>
                                                      <prop type="object" name="properties" clientFlatten="True">
                                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                                        <prop readOnly="True" type="string" name="provisioningState">
                                                          <enum>
                                                            <item value="&quot;Deleting&quot;"/>
                                                            <item value="&quot;Failed&quot;"/>
                                                            <item value="&quot;Succeeded&quot;"/>
                                                            <item value="&quot;Updating&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop type="array<@SubResource_read>" name="publicIpAddresses">
                                                          <item type="@SubResource_read"/>
                                                        </prop>
                                                        <prop type="array<@SubResource_read>" name="publicIpPrefixes">
                                                          <item type="@SubResource_read"/>
                                                        </prop>
                                                        <prop readOnly="True" type="string" name="resourceGuid"/>
                                                        <prop readOnly="True" type="array<@SubResource_read>" name="subnets">
                                                          <item type="@SubResource_read"/>
                                                        </prop>
                                                      </prop>
                                                      <prop type="object" name="sku">
                                                        <prop type="string" name="name">
                                                          <enum>
                                                            <item value="&quot;Standard&quot;"/>
                                                          </enum>
                                                        </prop>
                                                      </prop>
                                                      <prop type="object" name="tags">
                                                        <additionalProp>
                                                          <item type="string"/>
                                                        </additionalProp>
                                                      </prop>
                                                      <prop readOnly="True" type="string" name="type"/>
                                                      <prop type="array<string>" name="zones">
                                                        <item type="string"/>
                                                      </prop>
                                                    </prop>
                                                    <prop readOnly="True" type="string" name="provisioningState">
                                                      <enum>
                                                        <item value="&quot;Deleting&quot;"/>
                                                        <item value="&quot;Failed&quot;"/>
                                                        <item value="&quot;Succeeded&quot;"/>
                                                        <item value="&quot;Updating&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="publicIPAddressVersion">
                                                      <enum>
                                                        <item value="&quot;IPv4&quot;"/>
                                                        <item value="&quot;IPv6&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="publicIPAllocationMethod">
                                                      <enum>
                                                        <item value="&quot;Dynamic&quot;"/>
                                                        <item value="&quot;Static&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="@SubResource_read" name="publicIPPrefix"/>
                                                    <prop readOnly="True" type="string" name="resourceGuid"/>
                                                    <prop type="@PublicIPAddress_read" name="servicePublicIPAddress"/>
                                                  </prop>
                                                  <prop type="object" name="sku">
                                                    <prop type="string" name="name">
                                                      <enum>
                                                        <item value="&quot;Basic&quot;"/>
                                                        <item value="&quot;Standard&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="tier">
                                                      <enum>
                                                        <item value="&quot;Global&quot;"/>
                                                        <item value="&quot;Regional&quot;"/>
                                                      </enum>
                                                    </prop>
                                                  </prop>
                                                  <prop type="object" name="tags">
                                                    <additionalProp>
                                                      <item type="string"/>
                                                    </additionalProp>
                                                  </prop>
                                                  <prop readOnly="True" type="string" name="type"/>
                                                  <prop type="array<string>" name="zones">
                                                    <item type="string"/>
                                                  </prop>
                                                </prop>
                                                <prop type="@SubResource_read" name="publicIPPrefix"/>
                                                <prop type="@Subnet_read" name="subnet"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                              <prop type="array<string>" name="zones">
                                                <item type="string"/>
                                              </prop>
                                            </item>
                                          </prop>
                                          <prop readOnly="True" type="array<@NetworkInterface_read>" name="networkInterfaces">
                                            <item type="@NetworkInterface_read"/>
                                          </prop>
                                          <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                                            <item type="object">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="ResourceId" name="id">
                                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateLinkServices/{}/privateEndpointConnections/{}"/>
                                              </prop>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop readOnly="True" type="string" name="linkIdentifier"/>
                                                <prop readOnly="True" type="@PrivateEndpoint_read" name="privateEndpoint"/>
                                                <prop readOnly="True" type="string" name="privateEndpointLocation"/>
                                                <prop type="@PrivateLinkServiceConnectionState_read" name="privateLinkServiceConnectionState"/>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop readOnly="True" type="string" name="provisioningState">
                                            <enum>
                                              <item value="&quot;Deleting&quot;"/>
                                              <item value="&quot;Failed&quot;"/>
                                              <item value="&quot;Succeeded&quot;"/>
                                              <item value="&quot;Updating&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="object" name="visibility">
                                            <prop type="array<string>" name="subscriptions">
                                              <item type="string"/>
                                            </prop>
                                          </prop>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="string" name="resourceGuid"/>
                                      <prop readOnly="True" type="array<@NetworkInterfaceTapConfiguration_read>" name="tapConfigurations">
                                        <item type="@NetworkInterfaceTapConfiguration_read"/>
                                      </prop>
                                      <prop readOnly="True" type="@SubResource_read" name="virtualMachine"/>
                                      <prop readOnly="True" type="boolean" name="vnetEncryptionSupported"/>
                                      <prop type="string" name="workloadType"/>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                                <prop readOnly="True" type="string" name="resourceGuid"/>
                                <prop type="array<object>" name="securityRules">
                                  <item type="object" cls="SecurityRule_read">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="access" required="True">
                                        <enum>
                                          <item value="&quot;Allow&quot;"/>
                                          <item value="&quot;Deny&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="description"/>
                                      <prop type="string" name="destinationAddressPrefix"/>
                                      <prop type="array<string>" name="destinationAddressPrefixes">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<@ApplicationSecurityGroup_read>" name="destinationApplicationSecurityGroups">
                                        <item type="@ApplicationSecurityGroup_read"/>
                                      </prop>
                                      <prop type="string" name="destinationPortRange"/>
                                      <prop type="array<string>" name="destinationPortRanges">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="string" name="direction" required="True">
                                        <enum>
                                          <item value="&quot;Inbound&quot;"/>
                                          <item value="&quot;Outbound&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="integer32" name="priority" required="True"/>
                                      <prop type="string" name="protocol" required="True">
                                        <enum>
                                          <item value="&quot;*&quot;"/>
                                          <item value="&quot;Ah&quot;"/>
                                          <item value="&quot;Esp&quot;"/>
                                          <item value="&quot;Icmp&quot;"/>
                                          <item value="&quot;Tcp&quot;"/>
                                          <item value="&quot;Udp&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="sourceAddressPrefix"/>
                                      <prop type="array<string>" name="sourceAddressPrefixes">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<object>" name="sourceApplicationSecurityGroups">
                                        <item type="object" cls="ApplicationSecurityGroup_read">
                                          <prop readOnly="True" type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop readOnly="True" type="string" name="provisioningState">
                                              <enum>
                                                <item value="&quot;Deleting&quot;"/>
                                                <item value="&quot;Failed&quot;"/>
                                                <item value="&quot;Succeeded&quot;"/>
                                                <item value="&quot;Updating&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop readOnly="True" type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </item>
                                      </prop>
                                      <prop type="string" name="sourcePortRange"/>
                                      <prop type="array<string>" name="sourcePortRanges">
                                        <item type="string"/>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="array<@Subnet_read>" name="subnets">
                                  <item type="@Subnet_read"/>
                                </prop>
                              </prop>
                              <prop type="object" name="tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </prop>
                            <prop type="string" name="privateEndpointNetworkPolicies">
                              <default value="&quot;Disabled&quot;"/>
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                                <item value="&quot;NetworkSecurityGroupEnabled&quot;"/>
                                <item value="&quot;RouteTableEnabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@PrivateEndpoint_read>" name="privateEndpoints">
                              <item type="@PrivateEndpoint_read"/>
                            </prop>
                            <prop type="string" name="privateLinkServiceNetworkPolicies">
                              <default value="&quot;Enabled&quot;"/>
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="purpose"/>
                            <prop readOnly="True" type="array<object>" name="resourceNavigationLinks">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop readOnly="True" type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="link"/>
                                  <prop type="string" name="linkedResourceType"/>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="object" name="routeTable">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location"/>
                              <prop readOnly="True" type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="boolean" name="disableBgpRoutePropagation"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                                <prop readOnly="True" type="string" name="resourceGuid"/>
                                <prop type="array<object>" name="routes">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                    </prop>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="addressPrefix"/>
                                      <prop readOnly="True" type="boolean" name="hasBgpOverride"/>
                                      <prop type="string" name="nextHopIpAddress"/>
                                      <prop type="string" name="nextHopType" required="True">
                                        <enum>
                                          <item value="&quot;Internet&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;VirtualAppliance&quot;"/>
                                          <item value="&quot;VirtualNetworkGateway&quot;"/>
                                          <item value="&quot;VnetLocal&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="array<@Subnet_read>" name="subnets">
                                  <item type="@Subnet_read"/>
                                </prop>
                              </prop>
                              <prop type="object" name="tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </prop>
                            <prop readOnly="True" type="array<object>" name="serviceAssociationLinks">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="boolean" name="allowDelete"/>
                                  <prop type="string" name="link"/>
                                  <prop type="string" name="linkedResourceType"/>
                                  <prop type="array<string>" name="locations">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="array<object>" name="serviceEndpointPolicies">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"/>
                                </prop>
                                <prop readOnly="True" type="string" name="kind"/>
                                <prop type="ResourceLocation" name="location"/>
                                <prop readOnly="True" type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<string>" name="contextualServiceEndpointPolicies">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop readOnly="True" type="string" name="resourceGuid"/>
                                  <prop type="string" name="serviceAlias"/>
                                  <prop type="array<object>" name="serviceEndpointPolicyDefinitions">
                                    <item type="object">
                                      <prop readOnly="True" type="string" name="etag"/>
                                      <prop type="ResourceId" name="id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"/>
                                      </prop>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="description"/>
                                        <prop readOnly="True" type="string" name="provisioningState">
                                          <enum>
                                            <item value="&quot;Deleting&quot;"/>
                                            <item value="&quot;Failed&quot;"/>
                                            <item value="&quot;Succeeded&quot;"/>
                                            <item value="&quot;Updating&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="service"/>
                                        <prop type="array<string>" name="serviceResources">
                                          <item type="string"/>
                                        </prop>
                                      </prop>
                                      <prop type="string" name="type"/>
                                    </item>
                                  </prop>
                                  <prop readOnly="True" type="array<@Subnet_read>" name="subnets">
                                    <item type="@Subnet_read"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="tags">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="array<object>" name="serviceEndpoints">
                              <item type="object">
                                <prop type="array<string>" name="locations">
                                  <item type="string"/>
                                </prop>
                                <prop type="@SubResource_read" name="networkIdentifier"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="service"/>
                              </item>
                            </prop>
                            <prop type="string" name="sharingScope">
                              <enum>
                                <item value="&quot;DelegatedServices&quot;"/>
                                <item value="&quot;Tenant&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="type"/>
                        </prop>
                        <prop type="array<@VirtualNetworkTap_read>" name="virtualNetworkTaps">
                          <item type="@VirtualNetworkTap_read"/>
                        </prop>
                      </prop>
                      <prop type="string" name="type"/>
                    </prop>
                    <prop type="integer" name="destinationPort"/>
                    <prop readOnly="True" type="array<object>" name="networkInterfaceTapConfigurations">
                      <item type="object" cls="NetworkInterfaceTapConfiguration_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/tapConfigurations/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="@VirtualNetworkTap_read" name="virtualNetworkTap"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-03-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworktaps/{}" version="2024-03-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya1RhcHMve3RhcE5hbWV9/V/MjAyNC0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.tapName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet tap."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkTaps_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="tapName" arg="$Path.tapName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworktaps/{}" version="2024-03-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya1RhcHMve3RhcE5hbWV9/V/MjAyNC0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.tapName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet tap."/>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Destination">
        <arg type="ResourceId" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.id" options="lb-id" group="Destination">
          <help short="ID of the ILB IP configuration to receive the tap."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
        </arg>
        <arg type="ResourceId" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.id" options="nic-id" group="Destination">
          <help short="ID of the NIC IP configuration to receive the tap."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
        </arg>
        <arg type="integer" var="$parameters.properties.destinationPort" options="port" group="Destination">
          <help short="The VXLAN port that will receive the tapped traffic."/>
        </arg>
      </argGroup>
      <argGroup name="LbIpConfiguration">
        <arg type="string" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.name" options="lb-name" hide="True" group="LbIpConfiguration"/>
        <arg type="@SubResource_create" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer" options="lb-gateway-load-balancer" hide="True" group="LbIpConfiguration"/>
        <arg type="string" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress" options="lb-private-ip-address" hide="True" group="LbIpConfiguration"/>
        <arg type="string" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion" options="lb-private-ip-address-version" hide="True" group="LbIpConfiguration">
          <enum>
            <item name="IPv4" value="&quot;IPv4&quot;"/>
            <item name="IPv6" value="&quot;IPv6&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod" options="lb-private-ip-allocation-method" hide="True" group="LbIpConfiguration">
          <enum>
            <item name="Dynamic" value="&quot;Dynamic&quot;"/>
            <item name="Static" value="&quot;Static&quot;"/>
          </enum>
        </arg>
        <arg type="@PublicIPAddress_create" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress" options="lb-public-ip-address" hide="True" group="LbIpConfiguration"/>
        <arg type="@SubResource_create" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix" options="lb-public-ip-prefix" hide="True" group="LbIpConfiguration"/>
        <arg type="@Subnet_create" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet" options="lb-subnet" hide="True" group="LbIpConfiguration"/>
        <arg type="array<string>" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.zones" options="lb-zones" hide="True" group="LbIpConfiguration">
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="NicIpConfiguration">
        <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.name" options="nic-name" hide="True" group="NicIpConfiguration"/>
        <arg type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools" options="nic-application-gateway-backend-address-pools" hide="True" group="NicIpConfiguration">
          <item type="object">
            <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].id" options="id"/>
            <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].name" options="name"/>
            <arg type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses" options="backend-addresses" group="Properties">
              <item type="object">
                <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn" options="fqdn"/>
                <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress" options="ip-address"/>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="array<@ApplicationSecurityGroup_create>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups" options="nic-application-security-groups" hide="True" group="NicIpConfiguration">
          <item type="@ApplicationSecurityGroup_create"/>
        </arg>
        <arg type="object" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer" options="nic-gateway-load-balancer" hide="True" group="NicIpConfiguration" cls="SubResource_create">
          <arg type="string" var="@SubResource_create.id" options="id"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools" options="nic-load-balancer-backend-address-pools" hide="True" group="NicIpConfiguration">
          <item type="object">
            <arg type="ResourceId" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].id" options="id">
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
            </arg>
            <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].name" options="name"/>
            <arg type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds" options="drain-period-in-seconds" group="Properties"/>
            <arg type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses" options="load-balancer-backend-addresses" group="Properties">
              <item type="object">
                <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name" options="name"/>
                <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.adminState" options="admin-state" group="Properties">
                  <enum>
                    <item name="Down" value="&quot;Down&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                    <item name="Up" value="&quot;Up&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress" options="ip-address" group="Properties"/>
                <arg type="@SubResource_create" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.loadBalancerFrontendIPConfiguration" options="load-balancer-frontend-ip-configuration" group="Properties"/>
                <arg type="@SubResource_create" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.subnet" options="subnet" group="Properties"/>
                <arg type="@SubResource_create" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.virtualNetwork" options="virtual-network" group="Properties"/>
              </item>
            </arg>
            <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.location" options="location" group="Properties"/>
            <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.syncMode" options="sync-mode" group="Properties">
              <enum>
                <item name="Automatic" value="&quot;Automatic&quot;"/>
                <item name="Manual" value="&quot;Manual&quot;"/>
              </enum>
            </arg>
            <arg type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces" options="tunnel-interfaces" group="Properties">
              <item type="object">
                <arg type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier" options="identifier"/>
                <arg type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port" options="port"/>
                <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol" options="protocol">
                  <enum>
                    <item name="Native" value="&quot;Native&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                    <item name="VXLAN" value="&quot;VXLAN&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type" options="type">
                  <enum>
                    <item name="External" value="&quot;External&quot;"/>
                    <item name="Internal" value="&quot;Internal&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg type="@SubResource_create" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.virtualNetwork" options="virtual-network" group="Properties"/>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules" options="nic-load-balancer-inbound-nat-rules" hide="True" group="NicIpConfiguration">
          <item type="object">
            <arg type="ResourceId" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].id" options="id">
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
            </arg>
            <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].name" options="name"/>
            <arg type="@SubResource_create" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendAddressPool" options="backend-address-pool" group="Properties"/>
            <arg type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties"/>
            <arg type="boolean" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties"/>
            <arg type="boolean" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableTcpReset" options="enable-tcp-reset" group="Properties"/>
            <arg type="@SubResource_create" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties"/>
            <arg type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties"/>
            <arg type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd" options="frontend-port-range-end" group="Properties"/>
            <arg type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart" options="frontend-port-range-start" group="Properties"/>
            <arg type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties"/>
            <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
              <enum>
                <item name="All" value="&quot;All&quot;"/>
                <item name="Tcp" value="&quot;Tcp&quot;"/>
                <item name="Udp" value="&quot;Udp&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="boolean" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.primary" options="nic-primary" hide="True" group="NicIpConfiguration"/>
        <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress" options="nic-private-ip-address" hide="True" group="NicIpConfiguration"/>
        <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressPrefixLength" options="nic-private-ip-address-prefix-length" hide="True" group="NicIpConfiguration">
          <format maximum="128" minimum="1"/>
        </arg>
        <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion" options="nic-private-ip-address-version" hide="True" group="NicIpConfiguration">
          <enum>
            <item name="IPv4" value="&quot;IPv4&quot;"/>
            <item name="IPv6" value="&quot;IPv6&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod" options="nic-private-ip-allocation-method" hide="True" group="NicIpConfiguration">
          <enum>
            <item name="Dynamic" value="&quot;Dynamic&quot;"/>
            <item name="Static" value="&quot;Static&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress" options="nic-public-ip-address" hide="True" group="NicIpConfiguration" cls="PublicIPAddress_create">
          <arg type="object" var="@PublicIPAddress_create.extendedLocation" options="extended-location">
            <arg type="string" var="@PublicIPAddress_create.extendedLocation.name" options="name"/>
            <arg type="string" var="@PublicIPAddress_create.extendedLocation.type" options="type">
              <enum>
                <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="ResourceId" var="@PublicIPAddress_create.id" options="id">
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
          </arg>
          <arg type="ResourceLocation" var="@PublicIPAddress_create.location" options="location l"/>
          <arg type="object" var="@PublicIPAddress_create.properties.ddosSettings" options="ddos-settings" group="Properties">
            <arg type="@SubResource_create" var="@PublicIPAddress_create.properties.ddosSettings.ddosProtectionPlan" options="ddos-protection-plan"/>
            <arg type="string" var="@PublicIPAddress_create.properties.ddosSettings.protectionMode" options="protection-mode">
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
                <item name="VirtualNetworkInherited" value="&quot;VirtualNetworkInherited&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="string" var="@PublicIPAddress_create.properties.deleteOption" options="delete-option" group="Properties">
            <enum>
              <item name="Delete" value="&quot;Delete&quot;"/>
              <item name="Detach" value="&quot;Detach&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="@PublicIPAddress_create.properties.dnsSettings" options="dns-settings" group="Properties">
            <arg type="string" var="@PublicIPAddress_create.properties.dnsSettings.domainNameLabel" options="domain-name-label"/>
            <arg type="string" var="@PublicIPAddress_create.properties.dnsSettings.domainNameLabelScope" options="domain-name-label-scope">
              <enum>
                <item name="NoReuse" value="&quot;NoReuse&quot;"/>
                <item name="ResourceGroupReuse" value="&quot;ResourceGroupReuse&quot;"/>
                <item name="SubscriptionReuse" value="&quot;SubscriptionReuse&quot;"/>
                <item name="TenantReuse" value="&quot;TenantReuse&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="@PublicIPAddress_create.properties.dnsSettings.fqdn" options="fqdn"/>
            <arg type="string" var="@PublicIPAddress_create.properties.dnsSettings.reverseFqdn" options="reverse-fqdn"/>
          </arg>
          <arg type="integer32" var="@PublicIPAddress_create.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties"/>
          <arg type="string" var="@PublicIPAddress_create.properties.ipAddress" options="ip-address" group="Properties"/>
          <arg type="array<object>" var="@PublicIPAddress_create.properties.ipTags" options="ip-tags" group="Properties">
            <item type="object">
              <arg type="string" var="@PublicIPAddress_create.properties.ipTags[].ipTagType" options="ip-tag-type"/>
              <arg type="string" var="@PublicIPAddress_create.properties.ipTags[].tag" options="tag"/>
            </item>
          </arg>
          <arg type="@PublicIPAddress_create" var="@PublicIPAddress_create.properties.linkedPublicIPAddress" options="linked-public-ip-address" group="Properties"/>
          <arg type="string" var="@PublicIPAddress_create.properties.migrationPhase" options="migration-phase" group="Properties">
            <enum>
              <item name="Abort" value="&quot;Abort&quot;"/>
              <item name="Commit" value="&quot;Commit&quot;"/>
              <item name="Committed" value="&quot;Committed&quot;"/>
              <item name="None" value="&quot;None&quot;"/>
              <item name="Prepare" value="&quot;Prepare&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="@PublicIPAddress_create.properties.natGateway" options="nat-gateway" group="Properties">
            <arg type="ResourceId" var="@PublicIPAddress_create.properties.natGateway.id" options="id">
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/natGateways/{}"/>
            </arg>
            <arg type="ResourceLocation" var="@PublicIPAddress_create.properties.natGateway.location" options="location l"/>
            <arg type="integer32" var="@PublicIPAddress_create.properties.natGateway.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties"/>
            <arg type="array<@SubResource_create>" var="@PublicIPAddress_create.properties.natGateway.properties.publicIpAddresses" options="public-ip-addresses" group="Properties">
              <item type="@SubResource_create"/>
            </arg>
            <arg type="array<@SubResource_create>" var="@PublicIPAddress_create.properties.natGateway.properties.publicIpPrefixes" options="public-ip-prefixes" group="Properties">
              <item type="@SubResource_create"/>
            </arg>
            <arg type="object" var="@PublicIPAddress_create.properties.natGateway.sku" options="sku">
              <arg type="string" var="@PublicIPAddress_create.properties.natGateway.sku.name" options="name">
                <enum>
                  <item name="Standard" value="&quot;Standard&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="object" var="@PublicIPAddress_create.properties.natGateway.tags" options="tags">
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
            <arg type="array<string>" var="@PublicIPAddress_create.properties.natGateway.zones" options="zones">
              <item type="string"/>
            </arg>
          </arg>
          <arg type="string" var="@PublicIPAddress_create.properties.publicIPAddressVersion" options="public-ip-address-version" group="Properties">
            <enum>
              <item name="IPv4" value="&quot;IPv4&quot;"/>
              <item name="IPv6" value="&quot;IPv6&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="@PublicIPAddress_create.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
            <enum>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
          <arg type="@SubResource_create" var="@PublicIPAddress_create.properties.publicIPPrefix" options="public-ip-prefix" group="Properties"/>
          <arg type="@PublicIPAddress_create" var="@PublicIPAddress_create.properties.servicePublicIPAddress" options="service-public-ip-address" group="Properties"/>
          <arg type="object" var="@PublicIPAddress_create.sku" options="sku">
            <arg type="string" var="@PublicIPAddress_create.sku.name" options="name">
              <enum>
                <item name="Basic" value="&quot;Basic&quot;"/>
                <item name="Standard" value="&quot;Standard&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="@PublicIPAddress_create.sku.tier" options="tier">
              <enum>
                <item name="Global" value="&quot;Global&quot;"/>
                <item name="Regional" value="&quot;Regional&quot;"/>
              </enum>
            </arg>
          </arg>
          <arg type="object" var="@PublicIPAddress_create.tags" options="tags">
            <additionalProp>
              <item type="string"/>
            </additionalProp>
          </arg>
          <arg type="array<string>" var="@PublicIPAddress_create.zones" options="zones">
            <item type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet" options="nic-subnet" hide="True" group="NicIpConfiguration" cls="Subnet_create">
          <arg type="ResourceId" var="@Subnet_create.id" options="id" hide="True">
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"/>
          </arg>
          <arg type="string" var="@Subnet_create.name" options="name"/>
          <arg type="string" var="@Subnet_create.properties.addressPrefix" options="address-prefix" group="Properties"/>
          <arg type="array<string>" var="@Subnet_create.properties.addressPrefixes" options="address-prefixes" group="Properties">
            <item type="string"/>
          </arg>
          <arg type="array<object>" var="@Subnet_create.properties.applicationGatewayIPConfigurations" options="application-gateway-ip-configurations" group="Properties">
            <item type="object">
              <arg type="string" var="@Subnet_create.properties.applicationGatewayIPConfigurations[].id" options="id"/>
              <arg type="string" var="@Subnet_create.properties.applicationGatewayIPConfigurations[].name" options="name"/>
              <arg type="@SubResource_create" var="@Subnet_create.properties.applicationGatewayIPConfigurations[].properties.subnet" options="subnet" group="Properties"/>
            </item>
          </arg>
          <arg type="boolean" var="@Subnet_create.properties.defaultOutboundAccess" options="default-outbound-access" group="Properties"/>
          <arg type="array<object>" var="@Subnet_create.properties.delegations" options="delegations" group="Properties">
            <item type="object">
              <arg type="string" var="@Subnet_create.properties.delegations[].id" options="id"/>
              <arg type="string" var="@Subnet_create.properties.delegations[].name" options="name"/>
              <arg type="string" var="@Subnet_create.properties.delegations[].properties.serviceName" options="service-name" group="Properties"/>
              <arg type="string" var="@Subnet_create.properties.delegations[].type" options="type"/>
            </item>
          </arg>
          <arg type="array<@SubResource_create>" var="@Subnet_create.properties.ipAllocations" options="ip-allocations" group="Properties">
            <item type="@SubResource_create"/>
          </arg>
          <arg type="@SubResource_create" var="@Subnet_create.properties.natGateway" options="nat-gateway" group="Properties"/>
          <arg type="object" var="@Subnet_create.properties.networkSecurityGroup" options="network-security-group" group="Properties">
            <arg type="ResourceId" var="@Subnet_create.properties.networkSecurityGroup.id" options="id">
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
            </arg>
            <arg type="ResourceLocation" var="@Subnet_create.properties.networkSecurityGroup.location" options="location l"/>
            <arg type="boolean" var="@Subnet_create.properties.networkSecurityGroup.properties.flushConnection" options="flush-connection" group="Properties"/>
            <arg type="array<object>" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules" options="security-rules" group="Properties">
              <item type="object">
                <arg type="ResourceId" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].id" options="id"/>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].name" options="name"/>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.access" options="access" group="Properties">
                  <enum>
                    <item name="Allow" value="&quot;Allow&quot;"/>
                    <item name="Deny" value="&quot;Deny&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.description" options="description" group="Properties"/>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties"/>
                <arg type="array<string>" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefixes" options="destination-address-prefixes" group="Properties">
                  <item type="string"/>
                </arg>
                <arg type="array<@ApplicationSecurityGroup_create>" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationApplicationSecurityGroups" options="destination-application-security-groups" group="Properties">
                  <item type="@ApplicationSecurityGroup_create"/>
                </arg>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRange" options="destination-port-range" group="Properties"/>
                <arg type="array<string>" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRanges" options="destination-port-ranges" group="Properties">
                  <item type="string"/>
                </arg>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.direction" options="direction" group="Properties">
                  <enum>
                    <item name="Inbound" value="&quot;Inbound&quot;"/>
                    <item name="Outbound" value="&quot;Outbound&quot;"/>
                  </enum>
                </arg>
                <arg type="integer32" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.priority" options="priority" group="Properties"/>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.protocol" options="protocol" group="Properties">
                  <enum>
                    <item name="*" value="&quot;*&quot;"/>
                    <item name="Ah" value="&quot;Ah&quot;"/>
                    <item name="Esp" value="&quot;Esp&quot;"/>
                    <item name="Icmp" value="&quot;Icmp&quot;"/>
                    <item name="Tcp" value="&quot;Tcp&quot;"/>
                    <item name="Udp" value="&quot;Udp&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefix" options="source-address-prefix" group="Properties"/>
                <arg type="array<string>" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefixes" options="source-address-prefixes" group="Properties">
                  <item type="string"/>
                </arg>
                <arg type="array<object>" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourceApplicationSecurityGroups" options="source-application-security-groups" group="Properties">
                  <item type="object" cls="ApplicationSecurityGroup_create">
                    <arg type="ResourceId" var="@ApplicationSecurityGroup_create.id" options="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                    </arg>
                    <arg type="ResourceLocation" var="@ApplicationSecurityGroup_create.location" options="location l"/>
                    <arg type="object" var="@ApplicationSecurityGroup_create.tags" options="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </arg>
                  </item>
                </arg>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRange" options="source-port-range" group="Properties"/>
                <arg type="array<string>" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRanges" options="source-port-ranges" group="Properties">
                  <item type="string"/>
                </arg>
                <arg type="string" var="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].type" options="type"/>
              </item>
            </arg>
            <arg type="object" var="@Subnet_create.properties.networkSecurityGroup.tags" options="tags">
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </arg>
          <arg type="string" var="@Subnet_create.properties.privateEndpointNetworkPolicies" options="private-endpoint-network-policies" group="Properties">
            <default value="&quot;Disabled&quot;"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
              <item name="NetworkSecurityGroupEnabled" value="&quot;NetworkSecurityGroupEnabled&quot;"/>
              <item name="RouteTableEnabled" value="&quot;RouteTableEnabled&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="@Subnet_create.properties.privateLinkServiceNetworkPolicies" options="private-link-service-network-policies" group="Properties">
            <default value="&quot;Enabled&quot;"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="@Subnet_create.properties.routeTable" options="route-table" group="Properties">
            <arg type="ResourceId" var="@Subnet_create.properties.routeTable.id" options="id">
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
            </arg>
            <arg type="ResourceLocation" var="@Subnet_create.properties.routeTable.location" options="location l"/>
            <arg type="boolean" var="@Subnet_create.properties.routeTable.properties.disableBgpRoutePropagation" options="disable-bgp-route-propagation" group="Properties"/>
            <arg type="array<object>" var="@Subnet_create.properties.routeTable.properties.routes" options="routes" group="Properties">
              <item type="object">
                <arg type="ResourceId" var="@Subnet_create.properties.routeTable.properties.routes[].id" options="id">
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                </arg>
                <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].name" options="name"/>
                <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties"/>
                <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties"/>
                <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                  <enum>
                    <item name="Internet" value="&quot;Internet&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                    <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                    <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                    <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="@Subnet_create.properties.routeTable.properties.routes[].type" options="type"/>
              </item>
            </arg>
            <arg type="object" var="@Subnet_create.properties.routeTable.tags" options="tags">
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </arg>
          <arg type="array<object>" var="@Subnet_create.properties.serviceEndpointPolicies" options="service-endpoint-policies" group="Properties">
            <item type="object">
              <arg type="ResourceId" var="@Subnet_create.properties.serviceEndpointPolicies[].id" options="id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"/>
              </arg>
              <arg type="ResourceLocation" var="@Subnet_create.properties.serviceEndpointPolicies[].location" options="location l"/>
              <arg type="array<string>" var="@Subnet_create.properties.serviceEndpointPolicies[].properties.contextualServiceEndpointPolicies" options="contextual-service-endpoint-policies" group="Properties">
                <item type="string"/>
              </arg>
              <arg type="string" var="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceAlias" options="service-alias" group="Properties"/>
              <arg type="array<object>" var="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions" options="service-endpoint-policy-definitions" group="Properties">
                <item type="object">
                  <arg type="ResourceId" var="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].id" options="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"/>
                  </arg>
                  <arg type="string" var="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name" options="name"/>
                  <arg type="string" var="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description" options="description" group="Properties"/>
                  <arg type="string" var="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service" options="service" group="Properties"/>
                  <arg type="array<string>" var="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.serviceResources" options="service-resources" group="Properties">
                    <item type="string"/>
                  </arg>
                  <arg type="string" var="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].type" options="type"/>
                </item>
              </arg>
              <arg type="object" var="@Subnet_create.properties.serviceEndpointPolicies[].tags" options="tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="@Subnet_create.properties.serviceEndpoints" options="service-endpoints" group="Properties">
            <item type="object">
              <arg type="array<string>" var="@Subnet_create.properties.serviceEndpoints[].locations" options="locations">
                <item type="string"/>
              </arg>
              <arg type="@SubResource_create" var="@Subnet_create.properties.serviceEndpoints[].networkIdentifier" options="network-identifier"/>
              <arg type="string" var="@Subnet_create.properties.serviceEndpoints[].service" options="service"/>
            </item>
          </arg>
          <arg type="string" var="@Subnet_create.properties.sharingScope" options="sharing-scope" group="Properties">
            <enum>
              <item name="DelegatedServices" value="&quot;DelegatedServices&quot;"/>
              <item name="Tenant" value="&quot;Tenant&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="@Subnet_create.type" options="type"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps" options="nic-virtual-network-taps" hide="True" group="NicIpConfiguration">
          <item type="object" cls="VirtualNetworkTap_create">
            <arg type="ResourceId" var="@VirtualNetworkTap_create.id" options="id">
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
            </arg>
            <arg type="ResourceLocation" var="@VirtualNetworkTap_create.location" options="location l"/>
            <arg type="object" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration" options="destination-load-balancer-front-end-ip-configuration" group="Properties">
              <arg type="ResourceId" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.id" options="id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
              </arg>
              <arg type="string" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.name" options="name"/>
              <arg type="@SubResource_create" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer" options="gateway-load-balancer" group="Properties"/>
              <arg type="string" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress" options="private-ip-address" group="Properties"/>
              <arg type="string" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                <enum>
                  <item name="IPv4" value="&quot;IPv4&quot;"/>
                  <item name="IPv6" value="&quot;IPv6&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
                <enum>
                  <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                  <item name="Static" value="&quot;Static&quot;"/>
                </enum>
              </arg>
              <arg type="@PublicIPAddress_create" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress" options="public-ip-address" group="Properties"/>
              <arg type="@SubResource_create" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix" options="public-ip-prefix" group="Properties"/>
              <arg type="@Subnet_create" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet" options="subnet" group="Properties"/>
              <arg type="array<string>" var="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.zones" options="zones">
                <item type="string"/>
              </arg>
            </arg>
            <arg type="object" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration" options="destination-network-interface-ip-configuration" group="Properties">
              <arg type="ResourceId" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.id" options="id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
              </arg>
              <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.name" options="name"/>
              <arg type="array<object>" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools" options="application-gateway-backend-address-pools" group="Properties">
                <item type="object">
                  <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].id" options="id"/>
                  <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].name" options="name"/>
                  <arg type="array<object>" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses" options="backend-addresses" group="Properties">
                    <item type="object">
                      <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn" options="fqdn"/>
                      <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress" options="ip-address"/>
                    </item>
                  </arg>
                </item>
              </arg>
              <arg type="array<@ApplicationSecurityGroup_create>" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups" options="application-security-groups" group="Properties">
                <item type="@ApplicationSecurityGroup_create"/>
              </arg>
              <arg type="@SubResource_create" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer" options="gateway-load-balancer" group="Properties"/>
              <arg type="array<object>" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                <item type="object">
                  <arg type="ResourceId" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].id" options="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
                  </arg>
                  <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].name" options="name"/>
                  <arg type="integer32" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds" options="drain-period-in-seconds" group="Properties"/>
                  <arg type="array<object>" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses" options="load-balancer-backend-addresses" group="Properties">
                    <item type="object">
                      <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name" options="name"/>
                      <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.adminState" options="admin-state" group="Properties">
                        <enum>
                          <item name="Down" value="&quot;Down&quot;"/>
                          <item name="None" value="&quot;None&quot;"/>
                          <item name="Up" value="&quot;Up&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress" options="ip-address" group="Properties"/>
                      <arg type="@SubResource_create" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.loadBalancerFrontendIPConfiguration" options="load-balancer-frontend-ip-configuration" group="Properties"/>
                      <arg type="@SubResource_create" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.subnet" options="subnet" group="Properties"/>
                      <arg type="@SubResource_create" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.virtualNetwork" options="virtual-network" group="Properties"/>
                    </item>
                  </arg>
                  <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.location" options="location" group="Properties"/>
                  <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.syncMode" options="sync-mode" group="Properties">
                    <enum>
                      <item name="Automatic" value="&quot;Automatic&quot;"/>
                      <item name="Manual" value="&quot;Manual&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<object>" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces" options="tunnel-interfaces" group="Properties">
                    <item type="object">
                      <arg type="integer32" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier" options="identifier"/>
                      <arg type="integer32" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port" options="port"/>
                      <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol" options="protocol">
                        <enum>
                          <item name="Native" value="&quot;Native&quot;"/>
                          <item name="None" value="&quot;None&quot;"/>
                          <item name="VXLAN" value="&quot;VXLAN&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type" options="type">
                        <enum>
                          <item name="External" value="&quot;External&quot;"/>
                          <item name="Internal" value="&quot;Internal&quot;"/>
                          <item name="None" value="&quot;None&quot;"/>
                        </enum>
                      </arg>
                    </item>
                  </arg>
                  <arg type="@SubResource_create" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.virtualNetwork" options="virtual-network" group="Properties"/>
                </item>
              </arg>
              <arg type="array<object>" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
                <item type="object">
                  <arg type="ResourceId" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].id" options="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
                  </arg>
                  <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].name" options="name"/>
                  <arg type="@SubResource_create" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendAddressPool" options="backend-address-pool" group="Properties"/>
                  <arg type="integer32" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties"/>
                  <arg type="boolean" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties"/>
                  <arg type="boolean" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableTcpReset" options="enable-tcp-reset" group="Properties"/>
                  <arg type="@SubResource_create" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties"/>
                  <arg type="integer32" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties"/>
                  <arg type="integer32" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd" options="frontend-port-range-end" group="Properties"/>
                  <arg type="integer32" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart" options="frontend-port-range-start" group="Properties"/>
                  <arg type="integer32" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties"/>
                  <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
                    <enum>
                      <item name="All" value="&quot;All&quot;"/>
                      <item name="Tcp" value="&quot;Tcp&quot;"/>
                      <item name="Udp" value="&quot;Udp&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
              <arg type="boolean" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.primary" options="primary" group="Properties"/>
              <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress" options="private-ip-address" group="Properties"/>
              <arg nullable="True" type="integer32" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressPrefixLength" options="private-ip-address-prefix-length" group="Properties">
                <format maximum="128" minimum="1"/>
              </arg>
              <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                <enum>
                  <item name="IPv4" value="&quot;IPv4&quot;"/>
                  <item name="IPv6" value="&quot;IPv6&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
                <enum>
                  <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                  <item name="Static" value="&quot;Static&quot;"/>
                </enum>
              </arg>
              <arg type="@PublicIPAddress_create" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress" options="public-ip-address" group="Properties"/>
              <arg type="@Subnet_create" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet" options="subnet" group="Properties"/>
              <arg type="array<@VirtualNetworkTap_create>" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps" options="virtual-network-taps" group="Properties">
                <item type="@VirtualNetworkTap_create"/>
              </arg>
              <arg type="string" var="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.type" options="type"/>
            </arg>
            <arg type="integer" var="@VirtualNetworkTap_create.properties.destinationPort" options="destination-port" group="Properties"/>
            <arg type="object" var="@VirtualNetworkTap_create.tags" options="tags">
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.type" options="nic-type" hide="True" group="NicIpConfiguration"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="GUID of the resource."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkTaps_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="tapName" arg="$Path.tapName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="destinationLoadBalancerFrontEndIPConfiguration">
                      <prop type="ResourceId" name="id" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
                      </prop>
                      <prop type="string" name="name" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="@SubResource_create" name="gatewayLoadBalancer" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer"/>
                        <prop type="string" name="privateIPAddress" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress"/>
                        <prop type="string" name="privateIPAddressVersion" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion">
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod">
                          <enum>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop type="@PublicIPAddress_create" name="publicIPAddress" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress"/>
                        <prop type="@SubResource_create" name="publicIPPrefix" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix"/>
                        <prop type="@Subnet_create" name="subnet" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet"/>
                      </prop>
                      <prop type="array<string>" name="zones" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.zones">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="destinationNetworkInterfaceIPConfiguration">
                      <prop type="ResourceId" name="id" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
                      </prop>
                      <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="applicationGatewayBackendAddressPools" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools">
                          <item type="object">
                            <prop type="string" name="id" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].id"/>
                            <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="backendAddresses" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses">
                                <item type="object">
                                  <prop type="string" name="fqdn" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn"/>
                                  <prop type="string" name="ipAddress" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<@ApplicationSecurityGroup_create>" name="applicationSecurityGroups" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups">
                          <item type="@ApplicationSecurityGroup_create"/>
                        </prop>
                        <prop type="object" name="gatewayLoadBalancer" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer" cls="SubResource_create">
                          <prop type="string" name="id" arg="@SubResource_create.id"/>
                        </prop>
                        <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools">
                          <item type="object">
                            <prop type="ResourceId" name="id" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
                            </prop>
                            <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="integer32" name="drainPeriodInSeconds" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds"/>
                              <prop type="array<object>" name="loadBalancerBackendAddresses" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses">
                                <item type="object">
                                  <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="adminState" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.adminState">
                                      <enum>
                                        <item value="&quot;Down&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                        <item value="&quot;Up&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="string" name="ipAddress" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress"/>
                                    <prop type="@SubResource_create" name="loadBalancerFrontendIPConfiguration" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.loadBalancerFrontendIPConfiguration"/>
                                    <prop type="@SubResource_create" name="subnet" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.subnet"/>
                                    <prop type="@SubResource_create" name="virtualNetwork" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.virtualNetwork"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="string" name="location" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.location"/>
                              <prop type="string" name="syncMode" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.syncMode">
                                <enum>
                                  <item value="&quot;Automatic&quot;"/>
                                  <item value="&quot;Manual&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="tunnelInterfaces" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces">
                                <item type="object">
                                  <prop type="integer32" name="identifier" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier"/>
                                  <prop type="integer32" name="port" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port"/>
                                  <prop type="string" name="protocol" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol">
                                    <enum>
                                      <item value="&quot;Native&quot;"/>
                                      <item value="&quot;None&quot;"/>
                                      <item value="&quot;VXLAN&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="type" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type">
                                    <enum>
                                      <item value="&quot;External&quot;"/>
                                      <item value="&quot;Internal&quot;"/>
                                      <item value="&quot;None&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_create" name="virtualNetwork" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.virtualNetwork"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="loadBalancerInboundNatRules" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules">
                          <item type="object">
                            <prop type="ResourceId" name="id" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
                            </prop>
                            <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="@SubResource_create" name="backendAddressPool" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendAddressPool"/>
                              <prop type="integer32" name="backendPort" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                              <prop type="boolean" name="enableFloatingIP" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                              <prop type="boolean" name="enableTcpReset" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableTcpReset"/>
                              <prop type="@SubResource_create" name="frontendIPConfiguration" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                              <prop type="integer32" name="frontendPort" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                              <prop type="integer32" name="frontendPortRangeEnd" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd"/>
                              <prop type="integer32" name="frontendPortRangeStart" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart"/>
                              <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                              <prop type="string" name="protocol" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.protocol">
                                <enum>
                                  <item value="&quot;All&quot;"/>
                                  <item value="&quot;Tcp&quot;"/>
                                  <item value="&quot;Udp&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="boolean" name="primary" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.primary"/>
                        <prop type="string" name="privateIPAddress" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress"/>
                        <prop nullable="True" type="integer32" name="privateIPAddressPrefixLength" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressPrefixLength">
                          <format maximum="128" minimum="1"/>
                        </prop>
                        <prop type="string" name="privateIPAddressVersion" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion">
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod">
                          <enum>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="publicIPAddress" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress" cls="PublicIPAddress_create">
                          <prop type="object" name="extendedLocation" arg="@PublicIPAddress_create.extendedLocation">
                            <prop type="string" name="name" arg="@PublicIPAddress_create.extendedLocation.name"/>
                            <prop type="string" name="type" arg="@PublicIPAddress_create.extendedLocation.type">
                              <enum>
                                <item value="&quot;EdgeZone&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="ResourceId" name="id" arg="@PublicIPAddress_create.id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location" arg="@PublicIPAddress_create.location"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="object" name="ddosSettings" arg="@PublicIPAddress_create.properties.ddosSettings">
                              <prop type="@SubResource_create" name="ddosProtectionPlan" arg="@PublicIPAddress_create.properties.ddosSettings.ddosProtectionPlan"/>
                              <prop type="string" name="protectionMode" arg="@PublicIPAddress_create.properties.ddosSettings.protectionMode">
                                <enum>
                                  <item value="&quot;Disabled&quot;"/>
                                  <item value="&quot;Enabled&quot;"/>
                                  <item value="&quot;VirtualNetworkInherited&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="deleteOption" arg="@PublicIPAddress_create.properties.deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="dnsSettings" arg="@PublicIPAddress_create.properties.dnsSettings">
                              <prop type="string" name="domainNameLabel" arg="@PublicIPAddress_create.properties.dnsSettings.domainNameLabel"/>
                              <prop type="string" name="domainNameLabelScope" arg="@PublicIPAddress_create.properties.dnsSettings.domainNameLabelScope">
                                <enum>
                                  <item value="&quot;NoReuse&quot;"/>
                                  <item value="&quot;ResourceGroupReuse&quot;"/>
                                  <item value="&quot;SubscriptionReuse&quot;"/>
                                  <item value="&quot;TenantReuse&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="fqdn" arg="@PublicIPAddress_create.properties.dnsSettings.fqdn"/>
                              <prop type="string" name="reverseFqdn" arg="@PublicIPAddress_create.properties.dnsSettings.reverseFqdn"/>
                            </prop>
                            <prop type="integer32" name="idleTimeoutInMinutes" arg="@PublicIPAddress_create.properties.idleTimeoutInMinutes"/>
                            <prop type="string" name="ipAddress" arg="@PublicIPAddress_create.properties.ipAddress"/>
                            <prop type="array<object>" name="ipTags" arg="@PublicIPAddress_create.properties.ipTags">
                              <item type="object">
                                <prop type="string" name="ipTagType" arg="@PublicIPAddress_create.properties.ipTags[].ipTagType"/>
                                <prop type="string" name="tag" arg="@PublicIPAddress_create.properties.ipTags[].tag"/>
                              </item>
                            </prop>
                            <prop type="@PublicIPAddress_create" name="linkedPublicIPAddress" arg="@PublicIPAddress_create.properties.linkedPublicIPAddress"/>
                            <prop type="string" name="migrationPhase" arg="@PublicIPAddress_create.properties.migrationPhase">
                              <enum>
                                <item value="&quot;Abort&quot;"/>
                                <item value="&quot;Commit&quot;"/>
                                <item value="&quot;Committed&quot;"/>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;Prepare&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="natGateway" arg="@PublicIPAddress_create.properties.natGateway">
                              <prop type="ResourceId" name="id" arg="@PublicIPAddress_create.properties.natGateway.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/natGateways/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location" arg="@PublicIPAddress_create.properties.natGateway.location"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="integer32" name="idleTimeoutInMinutes" arg="@PublicIPAddress_create.properties.natGateway.properties.idleTimeoutInMinutes"/>
                                <prop type="array<@SubResource_create>" name="publicIpAddresses" arg="@PublicIPAddress_create.properties.natGateway.properties.publicIpAddresses">
                                  <item type="@SubResource_create"/>
                                </prop>
                                <prop type="array<@SubResource_create>" name="publicIpPrefixes" arg="@PublicIPAddress_create.properties.natGateway.properties.publicIpPrefixes">
                                  <item type="@SubResource_create"/>
                                </prop>
                              </prop>
                              <prop type="object" name="sku" arg="@PublicIPAddress_create.properties.natGateway.sku">
                                <prop type="string" name="name" arg="@PublicIPAddress_create.properties.natGateway.sku.name">
                                  <enum>
                                    <item value="&quot;Standard&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                              <prop type="object" name="tags" arg="@PublicIPAddress_create.properties.natGateway.tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop type="array<string>" name="zones" arg="@PublicIPAddress_create.properties.natGateway.zones">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="string" name="publicIPAddressVersion" arg="@PublicIPAddress_create.properties.publicIPAddressVersion">
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="publicIPAllocationMethod" arg="@PublicIPAddress_create.properties.publicIPAllocationMethod">
                              <enum>
                                <item value="&quot;Dynamic&quot;"/>
                                <item value="&quot;Static&quot;"/>
                              </enum>
                            </prop>
                            <prop type="@SubResource_create" name="publicIPPrefix" arg="@PublicIPAddress_create.properties.publicIPPrefix"/>
                            <prop type="@PublicIPAddress_create" name="servicePublicIPAddress" arg="@PublicIPAddress_create.properties.servicePublicIPAddress"/>
                          </prop>
                          <prop type="object" name="sku" arg="@PublicIPAddress_create.sku">
                            <prop type="string" name="name" arg="@PublicIPAddress_create.sku.name">
                              <enum>
                                <item value="&quot;Basic&quot;"/>
                                <item value="&quot;Standard&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="tier" arg="@PublicIPAddress_create.sku.tier">
                              <enum>
                                <item value="&quot;Global&quot;"/>
                                <item value="&quot;Regional&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="object" name="tags" arg="@PublicIPAddress_create.tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop type="array<string>" name="zones" arg="@PublicIPAddress_create.zones">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="object" name="subnet" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet" cls="Subnet_create">
                          <prop type="ResourceId" name="id" arg="@Subnet_create.id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"/>
                          </prop>
                          <prop type="string" name="name" arg="@Subnet_create.name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="addressPrefix" arg="@Subnet_create.properties.addressPrefix"/>
                            <prop type="array<string>" name="addressPrefixes" arg="@Subnet_create.properties.addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="array<object>" name="applicationGatewayIPConfigurations" arg="@Subnet_create.properties.applicationGatewayIPConfigurations">
                              <item type="object">
                                <prop type="string" name="id" arg="@Subnet_create.properties.applicationGatewayIPConfigurations[].id"/>
                                <prop type="string" name="name" arg="@Subnet_create.properties.applicationGatewayIPConfigurations[].name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="@SubResource_create" name="subnet" arg="@Subnet_create.properties.applicationGatewayIPConfigurations[].properties.subnet"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="boolean" name="defaultOutboundAccess" arg="@Subnet_create.properties.defaultOutboundAccess"/>
                            <prop type="array<object>" name="delegations" arg="@Subnet_create.properties.delegations">
                              <item type="object">
                                <prop type="string" name="id" arg="@Subnet_create.properties.delegations[].id"/>
                                <prop type="string" name="name" arg="@Subnet_create.properties.delegations[].name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="serviceName" arg="@Subnet_create.properties.delegations[].properties.serviceName"/>
                                </prop>
                                <prop type="string" name="type" arg="@Subnet_create.properties.delegations[].type"/>
                              </item>
                            </prop>
                            <prop type="array<@SubResource_create>" name="ipAllocations" arg="@Subnet_create.properties.ipAllocations">
                              <item type="@SubResource_create"/>
                            </prop>
                            <prop type="@SubResource_create" name="natGateway" arg="@Subnet_create.properties.natGateway"/>
                            <prop type="object" name="networkSecurityGroup" arg="@Subnet_create.properties.networkSecurityGroup">
                              <prop type="ResourceId" name="id" arg="@Subnet_create.properties.networkSecurityGroup.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location" arg="@Subnet_create.properties.networkSecurityGroup.location"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="boolean" name="flushConnection" arg="@Subnet_create.properties.networkSecurityGroup.properties.flushConnection"/>
                                <prop type="array<object>" name="securityRules" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules">
                                  <item type="object">
                                    <prop type="ResourceId" name="id" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].id"/>
                                    <prop type="string" name="name" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="access" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.access" required="True">
                                        <enum>
                                          <item value="&quot;Allow&quot;"/>
                                          <item value="&quot;Deny&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="description" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.description"/>
                                      <prop type="string" name="destinationAddressPrefix" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefix"/>
                                      <prop type="array<string>" name="destinationAddressPrefixes" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefixes">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<@ApplicationSecurityGroup_create>" name="destinationApplicationSecurityGroups" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationApplicationSecurityGroups">
                                        <item type="@ApplicationSecurityGroup_create"/>
                                      </prop>
                                      <prop type="string" name="destinationPortRange" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRange"/>
                                      <prop type="array<string>" name="destinationPortRanges" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRanges">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="string" name="direction" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.direction" required="True">
                                        <enum>
                                          <item value="&quot;Inbound&quot;"/>
                                          <item value="&quot;Outbound&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="integer32" name="priority" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.priority" required="True"/>
                                      <prop type="string" name="protocol" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.protocol" required="True">
                                        <enum>
                                          <item value="&quot;*&quot;"/>
                                          <item value="&quot;Ah&quot;"/>
                                          <item value="&quot;Esp&quot;"/>
                                          <item value="&quot;Icmp&quot;"/>
                                          <item value="&quot;Tcp&quot;"/>
                                          <item value="&quot;Udp&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="sourceAddressPrefix" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefix"/>
                                      <prop type="array<string>" name="sourceAddressPrefixes" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefixes">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<object>" name="sourceApplicationSecurityGroups" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourceApplicationSecurityGroups">
                                        <item type="object" cls="ApplicationSecurityGroup_create">
                                          <prop type="ResourceId" name="id" arg="@ApplicationSecurityGroup_create.id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location" arg="@ApplicationSecurityGroup_create.location"/>
                                          <prop type="object" name="tags" arg="@ApplicationSecurityGroup_create.tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                        </item>
                                      </prop>
                                      <prop type="string" name="sourcePortRange" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRange"/>
                                      <prop type="array<string>" name="sourcePortRanges" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRanges">
                                        <item type="string"/>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="type" arg="@Subnet_create.properties.networkSecurityGroup.properties.securityRules[].type"/>
                                  </item>
                                </prop>
                              </prop>
                              <prop type="object" name="tags" arg="@Subnet_create.properties.networkSecurityGroup.tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                            </prop>
                            <prop type="string" name="privateEndpointNetworkPolicies" arg="@Subnet_create.properties.privateEndpointNetworkPolicies">
                              <default value="&quot;Disabled&quot;"/>
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                                <item value="&quot;NetworkSecurityGroupEnabled&quot;"/>
                                <item value="&quot;RouteTableEnabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="privateLinkServiceNetworkPolicies" arg="@Subnet_create.properties.privateLinkServiceNetworkPolicies">
                              <default value="&quot;Enabled&quot;"/>
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="routeTable" arg="@Subnet_create.properties.routeTable">
                              <prop type="ResourceId" name="id" arg="@Subnet_create.properties.routeTable.id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location" arg="@Subnet_create.properties.routeTable.location"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="boolean" name="disableBgpRoutePropagation" arg="@Subnet_create.properties.routeTable.properties.disableBgpRoutePropagation"/>
                                <prop type="array<object>" name="routes" arg="@Subnet_create.properties.routeTable.properties.routes">
                                  <item type="object">
                                    <prop type="ResourceId" name="id" arg="@Subnet_create.properties.routeTable.properties.routes[].id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                    </prop>
                                    <prop type="string" name="name" arg="@Subnet_create.properties.routeTable.properties.routes[].name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="addressPrefix" arg="@Subnet_create.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                      <prop type="string" name="nextHopIpAddress" arg="@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                      <prop type="string" name="nextHopType" arg="@Subnet_create.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                        <enum>
                                          <item value="&quot;Internet&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;VirtualAppliance&quot;"/>
                                          <item value="&quot;VirtualNetworkGateway&quot;"/>
                                          <item value="&quot;VnetLocal&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="type" arg="@Subnet_create.properties.routeTable.properties.routes[].type"/>
                                  </item>
                                </prop>
                              </prop>
                              <prop type="object" name="tags" arg="@Subnet_create.properties.routeTable.tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                            </prop>
                            <prop type="array<object>" name="serviceEndpointPolicies" arg="@Subnet_create.properties.serviceEndpointPolicies">
                              <item type="object">
                                <prop type="ResourceId" name="id" arg="@Subnet_create.properties.serviceEndpointPolicies[].id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"/>
                                </prop>
                                <prop type="ResourceLocation" name="location" arg="@Subnet_create.properties.serviceEndpointPolicies[].location"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<string>" name="contextualServiceEndpointPolicies" arg="@Subnet_create.properties.serviceEndpointPolicies[].properties.contextualServiceEndpointPolicies">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="string" name="serviceAlias" arg="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceAlias"/>
                                  <prop type="array<object>" name="serviceEndpointPolicyDefinitions" arg="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions">
                                    <item type="object">
                                      <prop type="ResourceId" name="id" arg="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"/>
                                      </prop>
                                      <prop type="string" name="name" arg="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="description" arg="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description"/>
                                        <prop type="string" name="service" arg="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service"/>
                                        <prop type="array<string>" name="serviceResources" arg="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.serviceResources">
                                          <item type="string"/>
                                        </prop>
                                      </prop>
                                      <prop type="string" name="type" arg="@Subnet_create.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].type"/>
                                    </item>
                                  </prop>
                                </prop>
                                <prop type="object" name="tags" arg="@Subnet_create.properties.serviceEndpointPolicies[].tags">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                              </item>
                            </prop>
                            <prop type="array<object>" name="serviceEndpoints" arg="@Subnet_create.properties.serviceEndpoints">
                              <item type="object">
                                <prop type="array<string>" name="locations" arg="@Subnet_create.properties.serviceEndpoints[].locations">
                                  <item type="string"/>
                                </prop>
                                <prop type="@SubResource_create" name="networkIdentifier" arg="@Subnet_create.properties.serviceEndpoints[].networkIdentifier"/>
                                <prop type="string" name="service" arg="@Subnet_create.properties.serviceEndpoints[].service"/>
                              </item>
                            </prop>
                            <prop type="string" name="sharingScope" arg="@Subnet_create.properties.sharingScope">
                              <enum>
                                <item value="&quot;DelegatedServices&quot;"/>
                                <item value="&quot;Tenant&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="type" arg="@Subnet_create.type"/>
                        </prop>
                        <prop type="array<object>" name="virtualNetworkTaps" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps">
                          <item type="object" cls="VirtualNetworkTap_create">
                            <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_create.id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location" arg="@VirtualNetworkTap_create.location"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="object" name="destinationLoadBalancerFrontEndIPConfiguration" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration">
                                <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
                                </prop>
                                <prop type="string" name="name" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="@SubResource_create" name="gatewayLoadBalancer" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer"/>
                                  <prop type="string" name="privateIPAddress" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress"/>
                                  <prop type="string" name="privateIPAddressVersion" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion">
                                    <enum>
                                      <item value="&quot;IPv4&quot;"/>
                                      <item value="&quot;IPv6&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="privateIPAllocationMethod" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod">
                                    <enum>
                                      <item value="&quot;Dynamic&quot;"/>
                                      <item value="&quot;Static&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@PublicIPAddress_create" name="publicIPAddress" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress"/>
                                  <prop type="@SubResource_create" name="publicIPPrefix" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix"/>
                                  <prop type="@Subnet_create" name="subnet" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet"/>
                                </prop>
                                <prop type="array<string>" name="zones" arg="@VirtualNetworkTap_create.properties.destinationLoadBalancerFrontEndIPConfiguration.zones">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="object" name="destinationNetworkInterfaceIPConfiguration" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration">
                                <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
                                </prop>
                                <prop type="string" name="name" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<object>" name="applicationGatewayBackendAddressPools" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools">
                                    <item type="object">
                                      <prop type="string" name="id" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].id"/>
                                      <prop type="string" name="name" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="array<object>" name="backendAddresses" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses">
                                          <item type="object">
                                            <prop type="string" name="fqdn" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn"/>
                                            <prop type="string" name="ipAddress" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress"/>
                                          </item>
                                        </prop>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="array<@ApplicationSecurityGroup_create>" name="applicationSecurityGroups" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups">
                                    <item type="@ApplicationSecurityGroup_create"/>
                                  </prop>
                                  <prop type="@SubResource_create" name="gatewayLoadBalancer" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer"/>
                                  <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools">
                                    <item type="object">
                                      <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
                                      </prop>
                                      <prop type="string" name="name" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="integer32" name="drainPeriodInSeconds" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds"/>
                                        <prop type="array<object>" name="loadBalancerBackendAddresses" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses">
                                          <item type="object">
                                            <prop type="string" name="name" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name"/>
                                            <prop type="object" name="properties" clientFlatten="True">
                                              <prop type="string" name="adminState" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.adminState">
                                                <enum>
                                                  <item value="&quot;Down&quot;"/>
                                                  <item value="&quot;None&quot;"/>
                                                  <item value="&quot;Up&quot;"/>
                                                </enum>
                                              </prop>
                                              <prop type="string" name="ipAddress" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress"/>
                                              <prop type="@SubResource_create" name="loadBalancerFrontendIPConfiguration" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.loadBalancerFrontendIPConfiguration"/>
                                              <prop type="@SubResource_create" name="subnet" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.subnet"/>
                                              <prop type="@SubResource_create" name="virtualNetwork" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.virtualNetwork"/>
                                            </prop>
                                          </item>
                                        </prop>
                                        <prop type="string" name="location" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.location"/>
                                        <prop type="string" name="syncMode" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.syncMode">
                                          <enum>
                                            <item value="&quot;Automatic&quot;"/>
                                            <item value="&quot;Manual&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="array<object>" name="tunnelInterfaces" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces">
                                          <item type="object">
                                            <prop type="integer32" name="identifier" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier"/>
                                            <prop type="integer32" name="port" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port"/>
                                            <prop type="string" name="protocol" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol">
                                              <enum>
                                                <item value="&quot;Native&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                                <item value="&quot;VXLAN&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop type="string" name="type" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type">
                                              <enum>
                                                <item value="&quot;External&quot;"/>
                                                <item value="&quot;Internal&quot;"/>
                                                <item value="&quot;None&quot;"/>
                                              </enum>
                                            </prop>
                                          </item>
                                        </prop>
                                        <prop type="@SubResource_create" name="virtualNetwork" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.virtualNetwork"/>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="array<object>" name="loadBalancerInboundNatRules" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules">
                                    <item type="object">
                                      <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
                                      </prop>
                                      <prop type="string" name="name" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="@SubResource_create" name="backendAddressPool" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendAddressPool"/>
                                        <prop type="integer32" name="backendPort" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                                        <prop type="boolean" name="enableFloatingIP" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                                        <prop type="boolean" name="enableTcpReset" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableTcpReset"/>
                                        <prop type="@SubResource_create" name="frontendIPConfiguration" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                                        <prop type="integer32" name="frontendPort" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                                        <prop type="integer32" name="frontendPortRangeEnd" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd"/>
                                        <prop type="integer32" name="frontendPortRangeStart" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart"/>
                                        <prop type="integer32" name="idleTimeoutInMinutes" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                                        <prop type="string" name="protocol" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.protocol">
                                          <enum>
                                            <item value="&quot;All&quot;"/>
                                            <item value="&quot;Tcp&quot;"/>
                                            <item value="&quot;Udp&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="boolean" name="primary" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.primary"/>
                                  <prop type="string" name="privateIPAddress" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress"/>
                                  <prop nullable="True" type="integer32" name="privateIPAddressPrefixLength" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressPrefixLength">
                                    <format maximum="128" minimum="1"/>
                                  </prop>
                                  <prop type="string" name="privateIPAddressVersion" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion">
                                    <enum>
                                      <item value="&quot;IPv4&quot;"/>
                                      <item value="&quot;IPv6&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="privateIPAllocationMethod" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod">
                                    <enum>
                                      <item value="&quot;Dynamic&quot;"/>
                                      <item value="&quot;Static&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@PublicIPAddress_create" name="publicIPAddress" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress"/>
                                  <prop type="@Subnet_create" name="subnet" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet"/>
                                  <prop type="array<@VirtualNetworkTap_create>" name="virtualNetworkTaps" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps">
                                    <item type="@VirtualNetworkTap_create"/>
                                  </prop>
                                </prop>
                                <prop type="string" name="type" arg="@VirtualNetworkTap_create.properties.destinationNetworkInterfaceIPConfiguration.type"/>
                              </prop>
                              <prop type="integer" name="destinationPort" arg="@VirtualNetworkTap_create.properties.destinationPort"/>
                            </prop>
                            <prop type="object" name="tags" arg="@VirtualNetworkTap_create.tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="type" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.type"/>
                    </prop>
                    <prop type="integer" name="destinationPort" arg="$parameters.properties.destinationPort"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualNetworkTap_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="@FrontendIPConfiguration_read" name="destinationLoadBalancerFrontEndIPConfiguration"/>
                    <prop type="object" name="destinationNetworkInterfaceIPConfiguration" cls="NetworkInterfaceIPConfiguration_read">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
                      </prop>
                      <prop type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="applicationGatewayBackendAddressPools">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="backendAddresses">
                                <item type="object">
                                  <prop type="string" name="fqdn"/>
                                  <prop type="string" name="ipAddress"/>
                                </item>
                              </prop>
                              <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                <item type="@NetworkInterfaceIPConfiguration_read"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="array<@ApplicationSecurityGroup_read>" name="applicationSecurityGroups">
                          <item type="@ApplicationSecurityGroup_read"/>
                        </prop>
                        <prop type="object" name="gatewayLoadBalancer" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                        <prop type="array<object>" name="loadBalancerBackendAddressPools">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                <item type="@NetworkInterfaceIPConfiguration_read"/>
                              </prop>
                              <prop type="integer32" name="drainPeriodInSeconds"/>
                              <prop readOnly="True" type="array<@SubResource_read>" name="inboundNatRules">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="array<object>" name="loadBalancerBackendAddresses">
                                <item type="object">
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="adminState">
                                      <enum>
                                        <item value="&quot;Down&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                        <item value="&quot;Up&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop readOnly="True" type="array<object>" name="inboundNatRulesPortMapping">
                                      <item type="object">
                                        <prop type="integer32" name="backendPort"/>
                                        <prop type="integer32" name="frontendPort"/>
                                        <prop type="string" name="inboundNatRuleName"/>
                                      </item>
                                    </prop>
                                    <prop type="string" name="ipAddress"/>
                                    <prop type="@SubResource_read" name="loadBalancerFrontendIPConfiguration"/>
                                    <prop readOnly="True" type="@SubResource_read" name="networkInterfaceIPConfiguration"/>
                                    <prop type="@SubResource_read" name="subnet"/>
                                    <prop type="@SubResource_read" name="virtualNetwork"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="string" name="location"/>
                              <prop readOnly="True" type="@SubResource_read" name="outboundRule"/>
                              <prop readOnly="True" type="array<@SubResource_read>" name="outboundRules">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="syncMode">
                                <enum>
                                  <item value="&quot;Automatic&quot;"/>
                                  <item value="&quot;Manual&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="tunnelInterfaces">
                                <item type="object">
                                  <prop type="integer32" name="identifier"/>
                                  <prop type="integer32" name="port"/>
                                  <prop type="string" name="protocol">
                                    <enum>
                                      <item value="&quot;Native&quot;"/>
                                      <item value="&quot;None&quot;"/>
                                      <item value="&quot;VXLAN&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="type">
                                    <enum>
                                      <item value="&quot;External&quot;"/>
                                      <item value="&quot;Internal&quot;"/>
                                      <item value="&quot;None&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_read" name="virtualNetwork"/>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="loadBalancerInboundNatRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="@SubResource_read" name="backendAddressPool"/>
                              <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                              <prop type="integer32" name="backendPort"/>
                              <prop type="boolean" name="enableFloatingIP"/>
                              <prop type="boolean" name="enableTcpReset"/>
                              <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                              <prop type="integer32" name="frontendPort"/>
                              <prop type="integer32" name="frontendPortRangeEnd"/>
                              <prop type="integer32" name="frontendPortRangeStart"/>
                              <prop type="integer32" name="idleTimeoutInMinutes"/>
                              <prop type="string" name="protocol">
                                <enum>
                                  <item value="&quot;All&quot;"/>
                                  <item value="&quot;Tcp&quot;"/>
                                  <item value="&quot;Udp&quot;"/>
                                </enum>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="privateIPAddress"/>
                        <prop nullable="True" type="integer32" name="privateIPAddressPrefixLength">
                          <format maximum="128" minimum="1"/>
                        </prop>
                        <prop type="string" name="privateIPAddressVersion">
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="privateIPAllocationMethod">
                          <enum>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="object" name="privateLinkConnectionProperties">
                          <prop readOnly="True" type="array<string>" name="fqdns">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="groupId"/>
                          <prop readOnly="True" type="string" name="requiredMemberName"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                        <prop type="object" name="subnet" cls="Subnet_read">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="addressPrefix"/>
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="array<object>" name="applicationGatewayIPConfigurations">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@SubResource_read" name="subnet"/>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="boolean" name="defaultOutboundAccess"/>
                            <prop type="array<object>" name="delegations">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="array<string>" name="actions">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="serviceName"/>
                                </prop>
                                <prop type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="array<@SubResource_read>" name="ipAllocations">
                              <item type="@SubResource_read"/>
                            </prop>
                            <prop readOnly="True" type="array<object>" name="ipConfigurationProfiles">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@Subnet_read" name="subnet"/>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop readOnly="True" type="array<@IPConfiguration_read>" name="ipConfigurations">
                              <item type="@IPConfiguration_read"/>
                            </prop>
                            <prop type="@SubResource_read" name="natGateway"/>
                            <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location"/>
                              <prop readOnly="True" type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="array<@SecurityRule_read>" name="defaultSecurityRules">
                                  <item type="@SecurityRule_read"/>
                                </prop>
                                <prop readOnly="True" type="array<object>" name="flowLogs">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
                                    </prop>
                                    <prop type="IdentityObject" name="identity">
                                      <prop readOnly="True" type="string" name="principalId"/>
                                      <prop readOnly="True" type="string" name="tenantId"/>
                                      <prop type="string" name="type">
                                        <enum>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;SystemAssigned&quot;"/>
                                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                                          <item value="&quot;UserAssigned&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="userAssignedIdentities">
                                        <additionalProp>
                                          <item type="object">
                                            <prop readOnly="True" type="string" name="clientId"/>
                                            <prop readOnly="True" type="string" name="principalId"/>
                                          </item>
                                        </additionalProp>
                                      </prop>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="boolean" name="enabled"/>
                                      <prop type="string" name="enabledFilteringCriteria"/>
                                      <prop type="object" name="flowAnalyticsConfiguration">
                                        <prop type="object" name="networkWatcherFlowAnalyticsConfiguration">
                                          <prop type="boolean" name="enabled"/>
                                          <prop type="integer32" name="trafficAnalyticsInterval"/>
                                          <prop type="string" name="workspaceId"/>
                                          <prop type="string" name="workspaceRegion"/>
                                          <prop type="string" name="workspaceResourceId"/>
                                        </prop>
                                      </prop>
                                      <prop type="object" name="format">
                                        <prop type="string" name="type">
                                          <enum>
                                            <item value="&quot;JSON&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="integer32" name="version">
                                          <default value="0"/>
                                        </prop>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="retentionPolicy">
                                        <prop type="integer32" name="days">
                                          <default value="0"/>
                                        </prop>
                                        <prop type="boolean" name="enabled">
                                          <default value="false"/>
                                        </prop>
                                      </prop>
                                      <prop type="string" name="storageId" required="True"/>
                                      <prop readOnly="True" type="string" name="targetResourceGuid"/>
                                      <prop type="string" name="targetResourceId" required="True"/>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop type="boolean" name="flushConnection"/>
                                <prop readOnly="True" type="array<object>" name="networkInterfaces">
                                  <item type="object" cls="NetworkInterface_read">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="object" name="extendedLocation" cls="ExtendedLocation_read">
                                      <prop type="string" name="name"/>
                                      <prop type="string" name="type">
                                        <enum>
                                          <item value="&quot;EdgeZone&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="auxiliaryMode">
                                        <enum>
                                          <item value="&quot;AcceleratedConnections&quot;"/>
                                          <item value="&quot;Floating&quot;"/>
                                          <item value="&quot;MaxConnections&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="auxiliarySku">
                                        <enum>
                                          <item value="&quot;A1&quot;"/>
                                          <item value="&quot;A2&quot;"/>
                                          <item value="&quot;A4&quot;"/>
                                          <item value="&quot;A8&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="boolean" name="disableTcpStateTracking"/>
                                      <prop type="object" name="dnsSettings">
                                        <prop readOnly="True" type="array<string>" name="appliedDnsServers">
                                          <item type="string"/>
                                        </prop>
                                        <prop type="array<string>" name="dnsServers">
                                          <item type="string"/>
                                        </prop>
                                        <prop type="string" name="internalDnsNameLabel"/>
                                        <prop readOnly="True" type="string" name="internalDomainNameSuffix"/>
                                        <prop readOnly="True" type="string" name="internalFqdn"/>
                                      </prop>
                                      <prop readOnly="True" type="@SubResource_read" name="dscpConfiguration"/>
                                      <prop type="boolean" name="enableAcceleratedNetworking"/>
                                      <prop type="boolean" name="enableIPForwarding"/>
                                      <prop readOnly="True" type="array<string>" name="hostedWorkloads">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<@NetworkInterfaceIPConfiguration_read>" name="ipConfigurations">
                                        <item type="@NetworkInterfaceIPConfiguration_read"/>
                                      </prop>
                                      <prop readOnly="True" type="string" name="macAddress"/>
                                      <prop type="string" name="migrationPhase">
                                        <enum>
                                          <item value="&quot;Abort&quot;"/>
                                          <item value="&quot;Commit&quot;"/>
                                          <item value="&quot;Committed&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;Prepare&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                      <prop type="string" name="nicType">
                                        <enum>
                                          <item value="&quot;Elastic&quot;"/>
                                          <item value="&quot;Standard&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="boolean" name="primary"/>
                                      <prop readOnly="True" type="object" name="privateEndpoint" cls="PrivateEndpoint_read">
                                        <prop readOnly="True" type="string" name="etag"/>
                                        <prop type="@ExtendedLocation_read" name="extendedLocation"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateEndpoints/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="array<@ApplicationSecurityGroup_read>" name="applicationSecurityGroups">
                                            <item type="@ApplicationSecurityGroup_read"/>
                                          </prop>
                                          <prop type="array<object>" name="customDnsConfigs">
                                            <item type="object">
                                              <prop type="string" name="fqdn"/>
                                              <prop type="array<string>" name="ipAddresses">
                                                <item type="string"/>
                                              </prop>
                                            </item>
                                          </prop>
                                          <prop type="string" name="customNetworkInterfaceName"/>
                                          <prop type="array<object>" name="ipConfigurations">
                                            <item type="object">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="string" name="groupId"/>
                                                <prop type="string" name="memberName"/>
                                                <prop type="string" name="privateIPAddress"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop type="array<@PrivateLinkServiceConnection_read>" name="manualPrivateLinkServiceConnections">
                                            <item type="@PrivateLinkServiceConnection_read"/>
                                          </prop>
                                          <prop readOnly="True" type="array<@NetworkInterface_read>" name="networkInterfaces">
                                            <item type="@NetworkInterface_read"/>
                                          </prop>
                                          <prop type="array<object>" name="privateLinkServiceConnections">
                                            <item type="object" cls="PrivateLinkServiceConnection_read">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="string" name="id"/>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="array<string>" name="groupIds">
                                                  <item type="string"/>
                                                </prop>
                                                <prop type="object" name="privateLinkServiceConnectionState" cls="PrivateLinkServiceConnectionState_read">
                                                  <prop type="string" name="actionsRequired"/>
                                                  <prop type="string" name="description"/>
                                                  <prop type="string" name="status"/>
                                                </prop>
                                                <prop type="string" name="privateLinkServiceId"/>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="requestMessage"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop readOnly="True" type="string" name="provisioningState">
                                            <enum>
                                              <item value="&quot;Deleting&quot;"/>
                                              <item value="&quot;Failed&quot;"/>
                                              <item value="&quot;Succeeded&quot;"/>
                                              <item value="&quot;Updating&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="@Subnet_read" name="subnet"/>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop type="object" name="privateLinkService">
                                        <prop readOnly="True" type="string" name="etag"/>
                                        <prop type="@ExtendedLocation_read" name="extendedLocation"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateLinkServices/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop readOnly="True" type="string" name="alias"/>
                                          <prop type="object" name="autoApproval">
                                            <prop type="array<string>" name="subscriptions">
                                              <item type="string"/>
                                            </prop>
                                          </prop>
                                          <prop type="string" name="destinationIPAddress"/>
                                          <prop type="boolean" name="enableProxyProtocol"/>
                                          <prop type="array<string>" name="fqdns">
                                            <item type="string"/>
                                          </prop>
                                          <prop type="array<object>" name="ipConfigurations">
                                            <item type="object">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="string" name="id"/>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="boolean" name="primary"/>
                                                <prop type="string" name="privateIPAddress"/>
                                                <prop type="string" name="privateIPAddressVersion">
                                                  <enum>
                                                    <item value="&quot;IPv4&quot;"/>
                                                    <item value="&quot;IPv6&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="privateIPAllocationMethod">
                                                  <enum>
                                                    <item value="&quot;Dynamic&quot;"/>
                                                    <item value="&quot;Static&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="@Subnet_read" name="subnet"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop type="array<object>" name="loadBalancerFrontendIpConfigurations">
                                            <item type="object" cls="FrontendIPConfiguration_read">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="ResourceId" name="id">
                                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
                                              </prop>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="@SubResource_read" name="gatewayLoadBalancer"/>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="inboundNatPools">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="inboundNatRules">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="outboundRules">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop type="string" name="privateIPAddress"/>
                                                <prop type="string" name="privateIPAddressVersion">
                                                  <enum>
                                                    <item value="&quot;IPv4&quot;"/>
                                                    <item value="&quot;IPv6&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="privateIPAllocationMethod">
                                                  <enum>
                                                    <item value="&quot;Dynamic&quot;"/>
                                                    <item value="&quot;Static&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                                  <prop readOnly="True" type="string" name="etag"/>
                                                  <prop type="@ExtendedLocation_read" name="extendedLocation"/>
                                                  <prop type="ResourceId" name="id">
                                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                                  </prop>
                                                  <prop type="ResourceLocation" name="location"/>
                                                  <prop readOnly="True" type="string" name="name"/>
                                                  <prop type="object" name="properties" clientFlatten="True">
                                                    <prop type="object" name="ddosSettings">
                                                      <prop type="@SubResource_read" name="ddosProtectionPlan"/>
                                                      <prop type="string" name="protectionMode">
                                                        <enum>
                                                          <item value="&quot;Disabled&quot;"/>
                                                          <item value="&quot;Enabled&quot;"/>
                                                          <item value="&quot;VirtualNetworkInherited&quot;"/>
                                                        </enum>
                                                      </prop>
                                                    </prop>
                                                    <prop type="string" name="deleteOption">
                                                      <enum>
                                                        <item value="&quot;Delete&quot;"/>
                                                        <item value="&quot;Detach&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="object" name="dnsSettings">
                                                      <prop type="string" name="domainNameLabel"/>
                                                      <prop type="string" name="domainNameLabelScope">
                                                        <enum>
                                                          <item value="&quot;NoReuse&quot;"/>
                                                          <item value="&quot;ResourceGroupReuse&quot;"/>
                                                          <item value="&quot;SubscriptionReuse&quot;"/>
                                                          <item value="&quot;TenantReuse&quot;"/>
                                                        </enum>
                                                      </prop>
                                                      <prop type="string" name="fqdn"/>
                                                      <prop type="string" name="reverseFqdn"/>
                                                    </prop>
                                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                                    <prop type="string" name="ipAddress"/>
                                                    <prop readOnly="True" type="object" name="ipConfiguration" cls="IPConfiguration_read">
                                                      <prop readOnly="True" type="string" name="etag"/>
                                                      <prop type="string" name="id"/>
                                                      <prop type="string" name="name"/>
                                                      <prop type="object" name="properties" clientFlatten="True">
                                                        <prop type="string" name="privateIPAddress"/>
                                                        <prop type="string" name="privateIPAllocationMethod">
                                                          <default value="&quot;Dynamic&quot;"/>
                                                          <enum>
                                                            <item value="&quot;Dynamic&quot;"/>
                                                            <item value="&quot;Static&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop readOnly="True" type="string" name="provisioningState">
                                                          <enum>
                                                            <item value="&quot;Deleting&quot;"/>
                                                            <item value="&quot;Failed&quot;"/>
                                                            <item value="&quot;Succeeded&quot;"/>
                                                            <item value="&quot;Updating&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                                                        <prop type="@Subnet_read" name="subnet"/>
                                                      </prop>
                                                    </prop>
                                                    <prop type="array<object>" name="ipTags">
                                                      <item type="object">
                                                        <prop type="string" name="ipTagType"/>
                                                        <prop type="string" name="tag"/>
                                                      </item>
                                                    </prop>
                                                    <prop type="@PublicIPAddress_read" name="linkedPublicIPAddress"/>
                                                    <prop type="string" name="migrationPhase">
                                                      <enum>
                                                        <item value="&quot;Abort&quot;"/>
                                                        <item value="&quot;Commit&quot;"/>
                                                        <item value="&quot;Committed&quot;"/>
                                                        <item value="&quot;None&quot;"/>
                                                        <item value="&quot;Prepare&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="object" name="natGateway">
                                                      <prop readOnly="True" type="string" name="etag"/>
                                                      <prop type="ResourceId" name="id">
                                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/natGateways/{}"/>
                                                      </prop>
                                                      <prop type="ResourceLocation" name="location"/>
                                                      <prop readOnly="True" type="string" name="name"/>
                                                      <prop type="object" name="properties" clientFlatten="True">
                                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                                        <prop readOnly="True" type="string" name="provisioningState">
                                                          <enum>
                                                            <item value="&quot;Deleting&quot;"/>
                                                            <item value="&quot;Failed&quot;"/>
                                                            <item value="&quot;Succeeded&quot;"/>
                                                            <item value="&quot;Updating&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop type="array<@SubResource_read>" name="publicIpAddresses">
                                                          <item type="@SubResource_read"/>
                                                        </prop>
                                                        <prop type="array<@SubResource_read>" name="publicIpPrefixes">
                                                          <item type="@SubResource_read"/>
                                                        </prop>
                                                        <prop readOnly="True" type="string" name="resourceGuid"/>
                                                        <prop readOnly="True" type="array<@SubResource_read>" name="subnets">
                                                          <item type="@SubResource_read"/>
                                                        </prop>
                                                      </prop>
                                                      <prop type="object" name="sku">
                                                        <prop type="string" name="name">
                                                          <enum>
                                                            <item value="&quot;Standard&quot;"/>
                                                          </enum>
                                                        </prop>
                                                      </prop>
                                                      <prop type="object" name="tags">
                                                        <additionalProp>
                                                          <item type="string"/>
                                                        </additionalProp>
                                                      </prop>
                                                      <prop readOnly="True" type="string" name="type"/>
                                                      <prop type="array<string>" name="zones">
                                                        <item type="string"/>
                                                      </prop>
                                                    </prop>
                                                    <prop readOnly="True" type="string" name="provisioningState">
                                                      <enum>
                                                        <item value="&quot;Deleting&quot;"/>
                                                        <item value="&quot;Failed&quot;"/>
                                                        <item value="&quot;Succeeded&quot;"/>
                                                        <item value="&quot;Updating&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="publicIPAddressVersion">
                                                      <enum>
                                                        <item value="&quot;IPv4&quot;"/>
                                                        <item value="&quot;IPv6&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="publicIPAllocationMethod">
                                                      <enum>
                                                        <item value="&quot;Dynamic&quot;"/>
                                                        <item value="&quot;Static&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="@SubResource_read" name="publicIPPrefix"/>
                                                    <prop readOnly="True" type="string" name="resourceGuid"/>
                                                    <prop type="@PublicIPAddress_read" name="servicePublicIPAddress"/>
                                                  </prop>
                                                  <prop type="object" name="sku">
                                                    <prop type="string" name="name">
                                                      <enum>
                                                        <item value="&quot;Basic&quot;"/>
                                                        <item value="&quot;Standard&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="tier">
                                                      <enum>
                                                        <item value="&quot;Global&quot;"/>
                                                        <item value="&quot;Regional&quot;"/>
                                                      </enum>
                                                    </prop>
                                                  </prop>
                                                  <prop type="object" name="tags">
                                                    <additionalProp>
                                                      <item type="string"/>
                                                    </additionalProp>
                                                  </prop>
                                                  <prop readOnly="True" type="string" name="type"/>
                                                  <prop type="array<string>" name="zones">
                                                    <item type="string"/>
                                                  </prop>
                                                </prop>
                                                <prop type="@SubResource_read" name="publicIPPrefix"/>
                                                <prop type="@Subnet_read" name="subnet"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                              <prop type="array<string>" name="zones">
                                                <item type="string"/>
                                              </prop>
                                            </item>
                                          </prop>
                                          <prop readOnly="True" type="array<@NetworkInterface_read>" name="networkInterfaces">
                                            <item type="@NetworkInterface_read"/>
                                          </prop>
                                          <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                                            <item type="object">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="ResourceId" name="id">
                                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateLinkServices/{}/privateEndpointConnections/{}"/>
                                              </prop>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop readOnly="True" type="string" name="linkIdentifier"/>
                                                <prop readOnly="True" type="@PrivateEndpoint_read" name="privateEndpoint"/>
                                                <prop readOnly="True" type="string" name="privateEndpointLocation"/>
                                                <prop type="@PrivateLinkServiceConnectionState_read" name="privateLinkServiceConnectionState"/>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop readOnly="True" type="string" name="provisioningState">
                                            <enum>
                                              <item value="&quot;Deleting&quot;"/>
                                              <item value="&quot;Failed&quot;"/>
                                              <item value="&quot;Succeeded&quot;"/>
                                              <item value="&quot;Updating&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="object" name="visibility">
                                            <prop type="array<string>" name="subscriptions">
                                              <item type="string"/>
                                            </prop>
                                          </prop>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="string" name="resourceGuid"/>
                                      <prop readOnly="True" type="array<@NetworkInterfaceTapConfiguration_read>" name="tapConfigurations">
                                        <item type="@NetworkInterfaceTapConfiguration_read"/>
                                      </prop>
                                      <prop readOnly="True" type="@SubResource_read" name="virtualMachine"/>
                                      <prop readOnly="True" type="boolean" name="vnetEncryptionSupported"/>
                                      <prop type="string" name="workloadType"/>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                                <prop readOnly="True" type="string" name="resourceGuid"/>
                                <prop type="array<object>" name="securityRules">
                                  <item type="object" cls="SecurityRule_read">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="access" required="True">
                                        <enum>
                                          <item value="&quot;Allow&quot;"/>
                                          <item value="&quot;Deny&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="description"/>
                                      <prop type="string" name="destinationAddressPrefix"/>
                                      <prop type="array<string>" name="destinationAddressPrefixes">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<@ApplicationSecurityGroup_read>" name="destinationApplicationSecurityGroups">
                                        <item type="@ApplicationSecurityGroup_read"/>
                                      </prop>
                                      <prop type="string" name="destinationPortRange"/>
                                      <prop type="array<string>" name="destinationPortRanges">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="string" name="direction" required="True">
                                        <enum>
                                          <item value="&quot;Inbound&quot;"/>
                                          <item value="&quot;Outbound&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="integer32" name="priority" required="True"/>
                                      <prop type="string" name="protocol" required="True">
                                        <enum>
                                          <item value="&quot;*&quot;"/>
                                          <item value="&quot;Ah&quot;"/>
                                          <item value="&quot;Esp&quot;"/>
                                          <item value="&quot;Icmp&quot;"/>
                                          <item value="&quot;Tcp&quot;"/>
                                          <item value="&quot;Udp&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="sourceAddressPrefix"/>
                                      <prop type="array<string>" name="sourceAddressPrefixes">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<object>" name="sourceApplicationSecurityGroups">
                                        <item type="object" cls="ApplicationSecurityGroup_read">
                                          <prop readOnly="True" type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop readOnly="True" type="string" name="provisioningState">
                                              <enum>
                                                <item value="&quot;Deleting&quot;"/>
                                                <item value="&quot;Failed&quot;"/>
                                                <item value="&quot;Succeeded&quot;"/>
                                                <item value="&quot;Updating&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop readOnly="True" type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </item>
                                      </prop>
                                      <prop type="string" name="sourcePortRange"/>
                                      <prop type="array<string>" name="sourcePortRanges">
                                        <item type="string"/>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="array<@Subnet_read>" name="subnets">
                                  <item type="@Subnet_read"/>
                                </prop>
                              </prop>
                              <prop type="object" name="tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </prop>
                            <prop type="string" name="privateEndpointNetworkPolicies">
                              <default value="&quot;Disabled&quot;"/>
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                                <item value="&quot;NetworkSecurityGroupEnabled&quot;"/>
                                <item value="&quot;RouteTableEnabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@PrivateEndpoint_read>" name="privateEndpoints">
                              <item type="@PrivateEndpoint_read"/>
                            </prop>
                            <prop type="string" name="privateLinkServiceNetworkPolicies">
                              <default value="&quot;Enabled&quot;"/>
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="purpose"/>
                            <prop readOnly="True" type="array<object>" name="resourceNavigationLinks">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop readOnly="True" type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="link"/>
                                  <prop type="string" name="linkedResourceType"/>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="object" name="routeTable">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location"/>
                              <prop readOnly="True" type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="boolean" name="disableBgpRoutePropagation"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                                <prop readOnly="True" type="string" name="resourceGuid"/>
                                <prop type="array<object>" name="routes">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                    </prop>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="addressPrefix"/>
                                      <prop readOnly="True" type="boolean" name="hasBgpOverride"/>
                                      <prop type="string" name="nextHopIpAddress"/>
                                      <prop type="string" name="nextHopType" required="True">
                                        <enum>
                                          <item value="&quot;Internet&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;VirtualAppliance&quot;"/>
                                          <item value="&quot;VirtualNetworkGateway&quot;"/>
                                          <item value="&quot;VnetLocal&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="array<@Subnet_read>" name="subnets">
                                  <item type="@Subnet_read"/>
                                </prop>
                              </prop>
                              <prop type="object" name="tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </prop>
                            <prop readOnly="True" type="array<object>" name="serviceAssociationLinks">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="boolean" name="allowDelete"/>
                                  <prop type="string" name="link"/>
                                  <prop type="string" name="linkedResourceType"/>
                                  <prop type="array<string>" name="locations">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="array<object>" name="serviceEndpointPolicies">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"/>
                                </prop>
                                <prop readOnly="True" type="string" name="kind"/>
                                <prop type="ResourceLocation" name="location"/>
                                <prop readOnly="True" type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<string>" name="contextualServiceEndpointPolicies">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop readOnly="True" type="string" name="resourceGuid"/>
                                  <prop type="string" name="serviceAlias"/>
                                  <prop type="array<object>" name="serviceEndpointPolicyDefinitions">
                                    <item type="object">
                                      <prop readOnly="True" type="string" name="etag"/>
                                      <prop type="ResourceId" name="id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"/>
                                      </prop>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="description"/>
                                        <prop readOnly="True" type="string" name="provisioningState">
                                          <enum>
                                            <item value="&quot;Deleting&quot;"/>
                                            <item value="&quot;Failed&quot;"/>
                                            <item value="&quot;Succeeded&quot;"/>
                                            <item value="&quot;Updating&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="service"/>
                                        <prop type="array<string>" name="serviceResources">
                                          <item type="string"/>
                                        </prop>
                                      </prop>
                                      <prop type="string" name="type"/>
                                    </item>
                                  </prop>
                                  <prop readOnly="True" type="array<@Subnet_read>" name="subnets">
                                    <item type="@Subnet_read"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="tags">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="array<object>" name="serviceEndpoints">
                              <item type="object">
                                <prop type="array<string>" name="locations">
                                  <item type="string"/>
                                </prop>
                                <prop type="@SubResource_read" name="networkIdentifier"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="service"/>
                              </item>
                            </prop>
                            <prop type="string" name="sharingScope">
                              <enum>
                                <item value="&quot;DelegatedServices&quot;"/>
                                <item value="&quot;Tenant&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="type"/>
                        </prop>
                        <prop type="array<@VirtualNetworkTap_read>" name="virtualNetworkTaps">
                          <item type="@VirtualNetworkTap_read"/>
                        </prop>
                      </prop>
                      <prop type="string" name="type"/>
                    </prop>
                    <prop type="integer" name="destinationPort"/>
                    <prop readOnly="True" type="array<object>" name="networkInterfaceTapConfigurations">
                      <item type="object" cls="NetworkInterfaceTapConfiguration_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/tapConfigurations/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="@VirtualNetworkTap_read" name="virtualNetworkTap"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/virtualnetworktaps/{}" version="2024-03-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay92aXJ0dWFsTmV0d29ya1RhcHMve3RhcE5hbWV9/V/MjAyNC0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.tapName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the VNet tap."/>
        </arg>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" hide="True" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Destination">
        <arg nullable="True" type="integer" var="$parameters.properties.destinationPort" options="port" hide="True" group="Destination">
          <help short="The VXLAN port that will receive the tapped traffic."/>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="GUID of the resource."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration" options="lb-ip-configuration" hide="True" group="Parameters">
          <help short="The reference to the private IP address on the internal Load Balancer that will receive the tap."/>
          <arg nullable="True" type="ResourceId" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.id" options="id">
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.name" options="name"/>
          <arg nullable="True" type="@SubResource_update" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer" options="gateway-load-balancer" group="Properties"/>
          <arg nullable="True" type="string" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress" options="private-ip-address" group="Properties"/>
          <arg nullable="True" type="string" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
            <enum>
              <item name="IPv4" value="&quot;IPv4&quot;"/>
              <item name="IPv6" value="&quot;IPv6&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
            <enum>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="@PublicIPAddress_update" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress" options="public-ip-address" group="Properties"/>
          <arg nullable="True" type="@SubResource_update" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix" options="public-ip-prefix" group="Properties"/>
          <arg nullable="True" type="@Subnet_update" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet" options="subnet" group="Properties"/>
          <arg nullable="True" type="array<string>" var="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.zones" options="zones">
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration" options="nic-ip-configuration" hide="True" group="Parameters">
          <help short="The reference to the private IP Address of the collector nic that will receive the tap."/>
          <arg nullable="True" type="ResourceId" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.id" options="id">
            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.name" options="name"/>
          <arg nullable="True" type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools" options="application-gateway-backend-address-pools" group="Properties">
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].id" options="id"/>
              <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].name" options="name"/>
              <arg nullable="True" type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses" options="backend-addresses" group="Properties">
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn" options="fqdn"/>
                  <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress" options="ip-address"/>
                </item>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<@ApplicationSecurityGroup_update>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups" options="application-security-groups" group="Properties">
            <item nullable="True" type="@ApplicationSecurityGroup_update"/>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer" options="gateway-load-balancer" group="Properties" cls="SubResource_update">
            <arg nullable="True" type="string" var="@SubResource_update.id" options="id"/>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
            <item nullable="True" type="object">
              <arg nullable="True" type="ResourceId" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].id" options="id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].name" options="name"/>
              <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds" options="drain-period-in-seconds" group="Properties"/>
              <arg nullable="True" type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses" options="load-balancer-backend-addresses" group="Properties">
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name" options="name"/>
                  <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.adminState" options="admin-state" group="Properties">
                    <enum>
                      <item name="Down" value="&quot;Down&quot;"/>
                      <item name="None" value="&quot;None&quot;"/>
                      <item name="Up" value="&quot;Up&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress" options="ip-address" group="Properties"/>
                  <arg nullable="True" type="@SubResource_update" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.loadBalancerFrontendIPConfiguration" options="load-balancer-frontend-ip-configuration" group="Properties"/>
                  <arg nullable="True" type="@SubResource_update" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.subnet" options="subnet" group="Properties"/>
                  <arg nullable="True" type="@SubResource_update" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.virtualNetwork" options="virtual-network" group="Properties"/>
                </item>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.location" options="location" group="Properties"/>
              <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.syncMode" options="sync-mode" group="Properties">
                <enum>
                  <item name="Automatic" value="&quot;Automatic&quot;"/>
                  <item name="Manual" value="&quot;Manual&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces" options="tunnel-interfaces" group="Properties">
                <item nullable="True" type="object">
                  <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier" options="identifier"/>
                  <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port" options="port"/>
                  <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol" options="protocol">
                    <enum>
                      <item name="Native" value="&quot;Native&quot;"/>
                      <item name="None" value="&quot;None&quot;"/>
                      <item name="VXLAN" value="&quot;VXLAN&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type" options="type">
                    <enum>
                      <item name="External" value="&quot;External&quot;"/>
                      <item name="Internal" value="&quot;Internal&quot;"/>
                      <item name="None" value="&quot;None&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
              <arg nullable="True" type="@SubResource_update" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.virtualNetwork" options="virtual-network" group="Properties"/>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
            <item nullable="True" type="object">
              <arg nullable="True" type="ResourceId" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].id" options="id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].name" options="name"/>
              <arg nullable="True" type="@SubResource_update" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendAddressPool" options="backend-address-pool" group="Properties"/>
              <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties"/>
              <arg nullable="True" type="boolean" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties"/>
              <arg nullable="True" type="boolean" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableTcpReset" options="enable-tcp-reset" group="Properties"/>
              <arg nullable="True" type="@SubResource_update" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties"/>
              <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties"/>
              <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd" options="frontend-port-range-end" group="Properties"/>
              <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart" options="frontend-port-range-start" group="Properties"/>
              <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties"/>
              <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
                <enum>
                  <item name="All" value="&quot;All&quot;"/>
                  <item name="Tcp" value="&quot;Tcp&quot;"/>
                  <item name="Udp" value="&quot;Udp&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.primary" options="primary" group="Properties"/>
          <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress" options="private-ip-address" group="Properties"/>
          <arg nullable="True" type="integer32" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressPrefixLength" options="private-ip-address-prefix-length" group="Properties">
            <format maximum="128" minimum="1"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
            <enum>
              <item name="IPv4" value="&quot;IPv4&quot;"/>
              <item name="IPv6" value="&quot;IPv6&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
            <enum>
              <item name="Dynamic" value="&quot;Dynamic&quot;"/>
              <item name="Static" value="&quot;Static&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress" options="public-ip-address" group="Properties" cls="PublicIPAddress_update">
            <arg nullable="True" type="object" var="@PublicIPAddress_update.extendedLocation" options="extended-location">
              <arg nullable="True" type="string" var="@PublicIPAddress_update.extendedLocation.name" options="name"/>
              <arg nullable="True" type="string" var="@PublicIPAddress_update.extendedLocation.type" options="type">
                <enum>
                  <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="ResourceId" var="@PublicIPAddress_update.id" options="id">
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
            </arg>
            <arg nullable="True" type="ResourceLocation" var="@PublicIPAddress_update.location" options="location l"/>
            <arg nullable="True" type="object" var="@PublicIPAddress_update.properties.ddosSettings" options="ddos-settings" group="Properties">
              <arg nullable="True" type="@SubResource_update" var="@PublicIPAddress_update.properties.ddosSettings.ddosProtectionPlan" options="ddos-protection-plan"/>
              <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.ddosSettings.protectionMode" options="protection-mode">
                <enum>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enabled" value="&quot;Enabled&quot;"/>
                  <item name="VirtualNetworkInherited" value="&quot;VirtualNetworkInherited&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.deleteOption" options="delete-option" group="Properties">
              <enum>
                <item name="Delete" value="&quot;Delete&quot;"/>
                <item name="Detach" value="&quot;Detach&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="@PublicIPAddress_update.properties.dnsSettings" options="dns-settings" group="Properties">
              <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.dnsSettings.domainNameLabel" options="domain-name-label"/>
              <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.dnsSettings.domainNameLabelScope" options="domain-name-label-scope">
                <enum>
                  <item name="NoReuse" value="&quot;NoReuse&quot;"/>
                  <item name="ResourceGroupReuse" value="&quot;ResourceGroupReuse&quot;"/>
                  <item name="SubscriptionReuse" value="&quot;SubscriptionReuse&quot;"/>
                  <item name="TenantReuse" value="&quot;TenantReuse&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.dnsSettings.fqdn" options="fqdn"/>
              <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.dnsSettings.reverseFqdn" options="reverse-fqdn"/>
            </arg>
            <arg nullable="True" type="integer32" var="@PublicIPAddress_update.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties"/>
            <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.ipAddress" options="ip-address" group="Properties"/>
            <arg nullable="True" type="array<object>" var="@PublicIPAddress_update.properties.ipTags" options="ip-tags" group="Properties">
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.ipTags[].ipTagType" options="ip-tag-type"/>
                <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.ipTags[].tag" options="tag"/>
              </item>
            </arg>
            <arg nullable="True" type="@PublicIPAddress_update" var="@PublicIPAddress_update.properties.linkedPublicIPAddress" options="linked-public-ip-address" group="Properties"/>
            <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.migrationPhase" options="migration-phase" group="Properties">
              <enum>
                <item name="Abort" value="&quot;Abort&quot;"/>
                <item name="Commit" value="&quot;Commit&quot;"/>
                <item name="Committed" value="&quot;Committed&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
                <item name="Prepare" value="&quot;Prepare&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="@PublicIPAddress_update.properties.natGateway" options="nat-gateway" group="Properties">
              <arg nullable="True" type="ResourceId" var="@PublicIPAddress_update.properties.natGateway.id" options="id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/natGateways/{}"/>
              </arg>
              <arg nullable="True" type="ResourceLocation" var="@PublicIPAddress_update.properties.natGateway.location" options="location l"/>
              <arg nullable="True" type="integer32" var="@PublicIPAddress_update.properties.natGateway.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties"/>
              <arg nullable="True" type="array<@SubResource_update>" var="@PublicIPAddress_update.properties.natGateway.properties.publicIpAddresses" options="public-ip-addresses" group="Properties">
                <item nullable="True" type="@SubResource_update"/>
              </arg>
              <arg nullable="True" type="array<@SubResource_update>" var="@PublicIPAddress_update.properties.natGateway.properties.publicIpPrefixes" options="public-ip-prefixes" group="Properties">
                <item nullable="True" type="@SubResource_update"/>
              </arg>
              <arg nullable="True" type="object" var="@PublicIPAddress_update.properties.natGateway.sku" options="sku">
                <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.natGateway.sku.name" options="name">
                  <enum>
                    <item name="Standard" value="&quot;Standard&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="object" var="@PublicIPAddress_update.properties.natGateway.tags" options="tags">
                <additionalProp>
                  <item nullable="True" type="string"/>
                </additionalProp>
              </arg>
              <arg nullable="True" type="array<string>" var="@PublicIPAddress_update.properties.natGateway.zones" options="zones">
                <item nullable="True" type="string"/>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.publicIPAddressVersion" options="public-ip-address-version" group="Properties">
              <enum>
                <item name="IPv4" value="&quot;IPv4&quot;"/>
                <item name="IPv6" value="&quot;IPv6&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="@PublicIPAddress_update.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
              <enum>
                <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                <item name="Static" value="&quot;Static&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="@SubResource_update" var="@PublicIPAddress_update.properties.publicIPPrefix" options="public-ip-prefix" group="Properties"/>
            <arg nullable="True" type="@PublicIPAddress_update" var="@PublicIPAddress_update.properties.servicePublicIPAddress" options="service-public-ip-address" group="Properties"/>
            <arg nullable="True" type="object" var="@PublicIPAddress_update.sku" options="sku">
              <arg nullable="True" type="string" var="@PublicIPAddress_update.sku.name" options="name">
                <enum>
                  <item name="Basic" value="&quot;Basic&quot;"/>
                  <item name="Standard" value="&quot;Standard&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="@PublicIPAddress_update.sku.tier" options="tier">
                <enum>
                  <item name="Global" value="&quot;Global&quot;"/>
                  <item name="Regional" value="&quot;Regional&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="@PublicIPAddress_update.tags" options="tags">
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
            <arg nullable="True" type="array<string>" var="@PublicIPAddress_update.zones" options="zones">
              <item nullable="True" type="string"/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet" options="subnet" group="Properties" cls="Subnet_update">
            <arg nullable="True" type="ResourceId" var="@Subnet_update.id" options="id" hide="True">
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"/>
            </arg>
            <arg nullable="True" type="string" var="@Subnet_update.name" options="name"/>
            <arg nullable="True" type="string" var="@Subnet_update.properties.addressPrefix" options="address-prefix" group="Properties"/>
            <arg nullable="True" type="array<string>" var="@Subnet_update.properties.addressPrefixes" options="address-prefixes" group="Properties">
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="array<object>" var="@Subnet_update.properties.applicationGatewayIPConfigurations" options="application-gateway-ip-configurations" group="Properties">
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="@Subnet_update.properties.applicationGatewayIPConfigurations[].id" options="id"/>
                <arg nullable="True" type="string" var="@Subnet_update.properties.applicationGatewayIPConfigurations[].name" options="name"/>
                <arg nullable="True" type="@SubResource_update" var="@Subnet_update.properties.applicationGatewayIPConfigurations[].properties.subnet" options="subnet" group="Properties"/>
              </item>
            </arg>
            <arg nullable="True" type="boolean" var="@Subnet_update.properties.defaultOutboundAccess" options="default-outbound-access" group="Properties"/>
            <arg nullable="True" type="array<object>" var="@Subnet_update.properties.delegations" options="delegations" group="Properties">
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="@Subnet_update.properties.delegations[].id" options="id"/>
                <arg nullable="True" type="string" var="@Subnet_update.properties.delegations[].name" options="name"/>
                <arg nullable="True" type="string" var="@Subnet_update.properties.delegations[].properties.serviceName" options="service-name" group="Properties"/>
                <arg nullable="True" type="string" var="@Subnet_update.properties.delegations[].type" options="type"/>
              </item>
            </arg>
            <arg nullable="True" type="array<@SubResource_update>" var="@Subnet_update.properties.ipAllocations" options="ip-allocations" group="Properties">
              <item nullable="True" type="@SubResource_update"/>
            </arg>
            <arg nullable="True" type="@SubResource_update" var="@Subnet_update.properties.natGateway" options="nat-gateway" group="Properties"/>
            <arg nullable="True" type="object" var="@Subnet_update.properties.networkSecurityGroup" options="network-security-group" group="Properties">
              <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.networkSecurityGroup.id" options="id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
              </arg>
              <arg nullable="True" type="ResourceLocation" var="@Subnet_update.properties.networkSecurityGroup.location" options="location l"/>
              <arg nullable="True" type="boolean" var="@Subnet_update.properties.networkSecurityGroup.properties.flushConnection" options="flush-connection" group="Properties"/>
              <arg nullable="True" type="array<object>" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules" options="security-rules" group="Properties">
                <item nullable="True" type="object">
                  <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].id" options="id"/>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].name" options="name"/>
                  <arg type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.access" options="access" group="Properties">
                    <enum>
                      <item name="Allow" value="&quot;Allow&quot;"/>
                      <item name="Deny" value="&quot;Deny&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.description" options="description" group="Properties"/>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefix" options="destination-address-prefix" group="Properties"/>
                  <arg nullable="True" type="array<string>" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefixes" options="destination-address-prefixes" group="Properties">
                    <item nullable="True" type="string"/>
                  </arg>
                  <arg nullable="True" type="array<@ApplicationSecurityGroup_update>" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationApplicationSecurityGroups" options="destination-application-security-groups" group="Properties">
                    <item nullable="True" type="@ApplicationSecurityGroup_update"/>
                  </arg>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRange" options="destination-port-range" group="Properties"/>
                  <arg nullable="True" type="array<string>" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRanges" options="destination-port-ranges" group="Properties">
                    <item nullable="True" type="string"/>
                  </arg>
                  <arg type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.direction" options="direction" group="Properties">
                    <enum>
                      <item name="Inbound" value="&quot;Inbound&quot;"/>
                      <item name="Outbound" value="&quot;Outbound&quot;"/>
                    </enum>
                  </arg>
                  <arg type="integer32" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.priority" options="priority" group="Properties"/>
                  <arg type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.protocol" options="protocol" group="Properties">
                    <enum>
                      <item name="*" value="&quot;*&quot;"/>
                      <item name="Ah" value="&quot;Ah&quot;"/>
                      <item name="Esp" value="&quot;Esp&quot;"/>
                      <item name="Icmp" value="&quot;Icmp&quot;"/>
                      <item name="Tcp" value="&quot;Tcp&quot;"/>
                      <item name="Udp" value="&quot;Udp&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefix" options="source-address-prefix" group="Properties"/>
                  <arg nullable="True" type="array<string>" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefixes" options="source-address-prefixes" group="Properties">
                    <item nullable="True" type="string"/>
                  </arg>
                  <arg nullable="True" type="array<object>" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourceApplicationSecurityGroups" options="source-application-security-groups" group="Properties">
                    <item nullable="True" type="object" cls="ApplicationSecurityGroup_update">
                      <arg nullable="True" type="ResourceId" var="@ApplicationSecurityGroup_update.id" options="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                      </arg>
                      <arg nullable="True" type="ResourceLocation" var="@ApplicationSecurityGroup_update.location" options="location l"/>
                      <arg nullable="True" type="object" var="@ApplicationSecurityGroup_update.tags" options="tags">
                        <additionalProp>
                          <item nullable="True" type="string"/>
                        </additionalProp>
                      </arg>
                    </item>
                  </arg>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRange" options="source-port-range" group="Properties"/>
                  <arg nullable="True" type="array<string>" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRanges" options="source-port-ranges" group="Properties">
                    <item nullable="True" type="string"/>
                  </arg>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].type" options="type"/>
                </item>
              </arg>
              <arg nullable="True" type="object" var="@Subnet_update.properties.networkSecurityGroup.tags" options="tags">
                <additionalProp>
                  <item nullable="True" type="string"/>
                </additionalProp>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="@Subnet_update.properties.privateEndpointNetworkPolicies" options="private-endpoint-network-policies" group="Properties">
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
                <item name="NetworkSecurityGroupEnabled" value="&quot;NetworkSecurityGroupEnabled&quot;"/>
                <item name="RouteTableEnabled" value="&quot;RouteTableEnabled&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="@Subnet_update.properties.privateLinkServiceNetworkPolicies" options="private-link-service-network-policies" group="Properties">
              <enum>
                <item name="Disabled" value="&quot;Disabled&quot;"/>
                <item name="Enabled" value="&quot;Enabled&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="@Subnet_update.properties.routeTable" options="route-table" group="Properties">
              <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.routeTable.id" options="id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
              </arg>
              <arg nullable="True" type="ResourceLocation" var="@Subnet_update.properties.routeTable.location" options="location l"/>
              <arg nullable="True" type="boolean" var="@Subnet_update.properties.routeTable.properties.disableBgpRoutePropagation" options="disable-bgp-route-propagation" group="Properties"/>
              <arg nullable="True" type="array<object>" var="@Subnet_update.properties.routeTable.properties.routes" options="routes" group="Properties">
                <item nullable="True" type="object">
                  <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.routeTable.properties.routes[].id" options="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                  </arg>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].name" options="name"/>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix" options="address-prefix" group="Properties"/>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress" options="next-hop-ip-address" group="Properties"/>
                  <arg type="string" var="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType" options="next-hop-type" group="Properties">
                    <enum>
                      <item name="Internet" value="&quot;Internet&quot;"/>
                      <item name="None" value="&quot;None&quot;"/>
                      <item name="VirtualAppliance" value="&quot;VirtualAppliance&quot;"/>
                      <item name="VirtualNetworkGateway" value="&quot;VirtualNetworkGateway&quot;"/>
                      <item name="VnetLocal" value="&quot;VnetLocal&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="string" var="@Subnet_update.properties.routeTable.properties.routes[].type" options="type"/>
                </item>
              </arg>
              <arg nullable="True" type="object" var="@Subnet_update.properties.routeTable.tags" options="tags">
                <additionalProp>
                  <item nullable="True" type="string"/>
                </additionalProp>
              </arg>
            </arg>
            <arg nullable="True" type="array<object>" var="@Subnet_update.properties.serviceEndpointPolicies" options="service-endpoint-policies" group="Properties">
              <item nullable="True" type="object">
                <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.serviceEndpointPolicies[].id" options="id">
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"/>
                </arg>
                <arg nullable="True" type="ResourceLocation" var="@Subnet_update.properties.serviceEndpointPolicies[].location" options="location l"/>
                <arg nullable="True" type="array<string>" var="@Subnet_update.properties.serviceEndpointPolicies[].properties.contextualServiceEndpointPolicies" options="contextual-service-endpoint-policies" group="Properties">
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="string" var="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceAlias" options="service-alias" group="Properties"/>
                <arg nullable="True" type="array<object>" var="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions" options="service-endpoint-policy-definitions" group="Properties">
                  <item nullable="True" type="object">
                    <arg nullable="True" type="ResourceId" var="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].id" options="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"/>
                    </arg>
                    <arg nullable="True" type="string" var="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name" options="name"/>
                    <arg nullable="True" type="string" var="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description" options="description" group="Properties"/>
                    <arg nullable="True" type="string" var="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service" options="service" group="Properties"/>
                    <arg nullable="True" type="array<string>" var="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.serviceResources" options="service-resources" group="Properties">
                      <item nullable="True" type="string"/>
                    </arg>
                    <arg nullable="True" type="string" var="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].type" options="type"/>
                  </item>
                </arg>
                <arg nullable="True" type="object" var="@Subnet_update.properties.serviceEndpointPolicies[].tags" options="tags">
                  <additionalProp>
                    <item nullable="True" type="string"/>
                  </additionalProp>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="array<object>" var="@Subnet_update.properties.serviceEndpoints" options="service-endpoints" group="Properties">
              <item nullable="True" type="object">
                <arg nullable="True" type="array<string>" var="@Subnet_update.properties.serviceEndpoints[].locations" options="locations">
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="@SubResource_update" var="@Subnet_update.properties.serviceEndpoints[].networkIdentifier" options="network-identifier"/>
                <arg nullable="True" type="string" var="@Subnet_update.properties.serviceEndpoints[].service" options="service"/>
              </item>
            </arg>
            <arg nullable="True" type="string" var="@Subnet_update.properties.sharingScope" options="sharing-scope" group="Properties">
              <enum>
                <item name="DelegatedServices" value="&quot;DelegatedServices&quot;"/>
                <item name="Tenant" value="&quot;Tenant&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="@Subnet_update.type" options="type"/>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps" options="virtual-network-taps" group="Properties">
            <item nullable="True" type="object" cls="VirtualNetworkTap_update">
              <arg nullable="True" type="ResourceId" var="@VirtualNetworkTap_update.id" options="id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
              </arg>
              <arg nullable="True" type="ResourceLocation" var="@VirtualNetworkTap_update.location" options="location l"/>
              <arg nullable="True" type="object" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration" options="destination-load-balancer-front-end-ip-configuration" group="Properties">
                <arg nullable="True" type="ResourceId" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.id" options="id">
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
                </arg>
                <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.name" options="name"/>
                <arg nullable="True" type="@SubResource_update" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer" options="gateway-load-balancer" group="Properties"/>
                <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress" options="private-ip-address" group="Properties"/>
                <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                  <enum>
                    <item name="IPv4" value="&quot;IPv4&quot;"/>
                    <item name="IPv6" value="&quot;IPv6&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
                  <enum>
                    <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                    <item name="Static" value="&quot;Static&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="@PublicIPAddress_update" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress" options="public-ip-address" group="Properties"/>
                <arg nullable="True" type="@SubResource_update" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix" options="public-ip-prefix" group="Properties"/>
                <arg nullable="True" type="@Subnet_update" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet" options="subnet" group="Properties"/>
                <arg nullable="True" type="array<string>" var="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.zones" options="zones">
                  <item nullable="True" type="string"/>
                </arg>
              </arg>
              <arg nullable="True" type="object" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration" options="destination-network-interface-ip-configuration" group="Properties">
                <arg nullable="True" type="ResourceId" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.id" options="id">
                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
                </arg>
                <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.name" options="name"/>
                <arg nullable="True" type="array<object>" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools" options="application-gateway-backend-address-pools" group="Properties">
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].id" options="id"/>
                    <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].name" options="name"/>
                    <arg nullable="True" type="array<object>" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses" options="backend-addresses" group="Properties">
                      <item nullable="True" type="object">
                        <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn" options="fqdn"/>
                        <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress" options="ip-address"/>
                      </item>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="array<@ApplicationSecurityGroup_update>" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups" options="application-security-groups" group="Properties">
                  <item nullable="True" type="@ApplicationSecurityGroup_update"/>
                </arg>
                <arg nullable="True" type="@SubResource_update" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer" options="gateway-load-balancer" group="Properties"/>
                <arg nullable="True" type="array<object>" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                  <item nullable="True" type="object">
                    <arg nullable="True" type="ResourceId" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].id" options="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
                    </arg>
                    <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].name" options="name"/>
                    <arg nullable="True" type="integer32" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds" options="drain-period-in-seconds" group="Properties"/>
                    <arg nullable="True" type="array<object>" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses" options="load-balancer-backend-addresses" group="Properties">
                      <item nullable="True" type="object">
                        <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name" options="name"/>
                        <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.adminState" options="admin-state" group="Properties">
                          <enum>
                            <item name="Down" value="&quot;Down&quot;"/>
                            <item name="None" value="&quot;None&quot;"/>
                            <item name="Up" value="&quot;Up&quot;"/>
                          </enum>
                        </arg>
                        <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress" options="ip-address" group="Properties"/>
                        <arg nullable="True" type="@SubResource_update" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.loadBalancerFrontendIPConfiguration" options="load-balancer-frontend-ip-configuration" group="Properties"/>
                        <arg nullable="True" type="@SubResource_update" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.subnet" options="subnet" group="Properties"/>
                        <arg nullable="True" type="@SubResource_update" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.virtualNetwork" options="virtual-network" group="Properties"/>
                      </item>
                    </arg>
                    <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.location" options="location" group="Properties"/>
                    <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.syncMode" options="sync-mode" group="Properties">
                      <enum>
                        <item name="Automatic" value="&quot;Automatic&quot;"/>
                        <item name="Manual" value="&quot;Manual&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="array<object>" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces" options="tunnel-interfaces" group="Properties">
                      <item nullable="True" type="object">
                        <arg nullable="True" type="integer32" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier" options="identifier"/>
                        <arg nullable="True" type="integer32" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port" options="port"/>
                        <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol" options="protocol">
                          <enum>
                            <item name="Native" value="&quot;Native&quot;"/>
                            <item name="None" value="&quot;None&quot;"/>
                            <item name="VXLAN" value="&quot;VXLAN&quot;"/>
                          </enum>
                        </arg>
                        <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type" options="type">
                          <enum>
                            <item name="External" value="&quot;External&quot;"/>
                            <item name="Internal" value="&quot;Internal&quot;"/>
                            <item name="None" value="&quot;None&quot;"/>
                          </enum>
                        </arg>
                      </item>
                    </arg>
                    <arg nullable="True" type="@SubResource_update" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.virtualNetwork" options="virtual-network" group="Properties"/>
                  </item>
                </arg>
                <arg nullable="True" type="array<object>" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules" options="load-balancer-inbound-nat-rules" group="Properties">
                  <item nullable="True" type="object">
                    <arg nullable="True" type="ResourceId" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].id" options="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
                    </arg>
                    <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].name" options="name"/>
                    <arg nullable="True" type="@SubResource_update" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendAddressPool" options="backend-address-pool" group="Properties"/>
                    <arg nullable="True" type="integer32" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendPort" options="backend-port" group="Properties"/>
                    <arg nullable="True" type="boolean" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP" options="enable-floating-ip" group="Properties"/>
                    <arg nullable="True" type="boolean" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableTcpReset" options="enable-tcp-reset" group="Properties"/>
                    <arg nullable="True" type="@SubResource_update" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration" options="frontend-ip-configuration" group="Properties"/>
                    <arg nullable="True" type="integer32" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPort" options="frontend-port" group="Properties"/>
                    <arg nullable="True" type="integer32" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd" options="frontend-port-range-end" group="Properties"/>
                    <arg nullable="True" type="integer32" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart" options="frontend-port-range-start" group="Properties"/>
                    <arg nullable="True" type="integer32" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties"/>
                    <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.protocol" options="protocol" group="Properties">
                      <enum>
                        <item name="All" value="&quot;All&quot;"/>
                        <item name="Tcp" value="&quot;Tcp&quot;"/>
                        <item name="Udp" value="&quot;Udp&quot;"/>
                      </enum>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="boolean" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.primary" options="primary" group="Properties"/>
                <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress" options="private-ip-address" group="Properties"/>
                <arg nullable="True" type="integer32" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressPrefixLength" options="private-ip-address-prefix-length" group="Properties">
                  <format maximum="128" minimum="1"/>
                </arg>
                <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                  <enum>
                    <item name="IPv4" value="&quot;IPv4&quot;"/>
                    <item name="IPv6" value="&quot;IPv6&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod" options="private-ip-allocation-method" group="Properties">
                  <enum>
                    <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                    <item name="Static" value="&quot;Static&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="@PublicIPAddress_update" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress" options="public-ip-address" group="Properties"/>
                <arg nullable="True" type="@Subnet_update" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet" options="subnet" group="Properties"/>
                <arg nullable="True" type="array<@VirtualNetworkTap_update>" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps" options="virtual-network-taps" group="Properties">
                  <item nullable="True" type="@VirtualNetworkTap_update"/>
                </arg>
                <arg nullable="True" type="string" var="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.type" options="type"/>
              </arg>
              <arg nullable="True" type="integer" var="@VirtualNetworkTap_update.properties.destinationPort" options="destination-port" group="Properties"/>
              <arg nullable="True" type="object" var="@VirtualNetworkTap_update.tags" options="tags">
                <additionalProp>
                  <item nullable="True" type="string"/>
                </additionalProp>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.destinationNetworkInterfaceIPConfiguration.type" options="type"/>
        </arg>
      </argGroup>
      <operation operationId="VirtualNetworkTaps_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="tapName" arg="$Path.tapName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualNetworkTap_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="@FrontendIPConfiguration_read" name="destinationLoadBalancerFrontEndIPConfiguration"/>
                    <prop type="object" name="destinationNetworkInterfaceIPConfiguration" cls="NetworkInterfaceIPConfiguration_read">
                      <prop readOnly="True" type="string" name="etag"/>
                      <prop type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
                      </prop>
                      <prop type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="applicationGatewayBackendAddressPools">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="string" name="id"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="backendAddresses">
                                <item type="object">
                                  <prop type="string" name="fqdn"/>
                                  <prop type="string" name="ipAddress"/>
                                </item>
                              </prop>
                              <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                <item type="@NetworkInterfaceIPConfiguration_read"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="array<@ApplicationSecurityGroup_read>" name="applicationSecurityGroups">
                          <item type="@ApplicationSecurityGroup_read"/>
                        </prop>
                        <prop type="object" name="gatewayLoadBalancer" cls="SubResource_read">
                          <prop type="string" name="id"/>
                        </prop>
                        <prop type="array<object>" name="loadBalancerBackendAddressPools">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop readOnly="True" type="array<@NetworkInterfaceIPConfiguration_read>" name="backendIPConfigurations">
                                <item type="@NetworkInterfaceIPConfiguration_read"/>
                              </prop>
                              <prop type="integer32" name="drainPeriodInSeconds"/>
                              <prop readOnly="True" type="array<@SubResource_read>" name="inboundNatRules">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="array<object>" name="loadBalancerBackendAddresses">
                                <item type="object">
                                  <prop type="string" name="name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="adminState">
                                      <enum>
                                        <item value="&quot;Down&quot;"/>
                                        <item value="&quot;None&quot;"/>
                                        <item value="&quot;Up&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop readOnly="True" type="array<object>" name="inboundNatRulesPortMapping">
                                      <item type="object">
                                        <prop type="integer32" name="backendPort"/>
                                        <prop type="integer32" name="frontendPort"/>
                                        <prop type="string" name="inboundNatRuleName"/>
                                      </item>
                                    </prop>
                                    <prop type="string" name="ipAddress"/>
                                    <prop type="@SubResource_read" name="loadBalancerFrontendIPConfiguration"/>
                                    <prop readOnly="True" type="@SubResource_read" name="networkInterfaceIPConfiguration"/>
                                    <prop type="@SubResource_read" name="subnet"/>
                                    <prop type="@SubResource_read" name="virtualNetwork"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="string" name="location"/>
                              <prop readOnly="True" type="@SubResource_read" name="outboundRule"/>
                              <prop readOnly="True" type="array<@SubResource_read>" name="outboundRules">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="syncMode">
                                <enum>
                                  <item value="&quot;Automatic&quot;"/>
                                  <item value="&quot;Manual&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<object>" name="tunnelInterfaces">
                                <item type="object">
                                  <prop type="integer32" name="identifier"/>
                                  <prop type="integer32" name="port"/>
                                  <prop type="string" name="protocol">
                                    <enum>
                                      <item value="&quot;Native&quot;"/>
                                      <item value="&quot;None&quot;"/>
                                      <item value="&quot;VXLAN&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="type">
                                    <enum>
                                      <item value="&quot;External&quot;"/>
                                      <item value="&quot;Internal&quot;"/>
                                      <item value="&quot;None&quot;"/>
                                    </enum>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_read" name="virtualNetwork"/>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="array<object>" name="loadBalancerInboundNatRules">
                          <item type="object">
                            <prop readOnly="True" type="string" name="etag"/>
                            <prop type="ResourceId" name="id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="@SubResource_read" name="backendAddressPool"/>
                              <prop readOnly="True" type="@NetworkInterfaceIPConfiguration_read" name="backendIPConfiguration"/>
                              <prop type="integer32" name="backendPort"/>
                              <prop type="boolean" name="enableFloatingIP"/>
                              <prop type="boolean" name="enableTcpReset"/>
                              <prop type="@SubResource_read" name="frontendIPConfiguration"/>
                              <prop type="integer32" name="frontendPort"/>
                              <prop type="integer32" name="frontendPortRangeEnd"/>
                              <prop type="integer32" name="frontendPortRangeStart"/>
                              <prop type="integer32" name="idleTimeoutInMinutes"/>
                              <prop type="string" name="protocol">
                                <enum>
                                  <item value="&quot;All&quot;"/>
                                  <item value="&quot;Tcp&quot;"/>
                                  <item value="&quot;Udp&quot;"/>
                                </enum>
                              </prop>
                              <prop readOnly="True" type="string" name="provisioningState">
                                <enum>
                                  <item value="&quot;Deleting&quot;"/>
                                  <item value="&quot;Failed&quot;"/>
                                  <item value="&quot;Succeeded&quot;"/>
                                  <item value="&quot;Updating&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop type="boolean" name="primary"/>
                        <prop type="string" name="privateIPAddress"/>
                        <prop nullable="True" type="integer32" name="privateIPAddressPrefixLength">
                          <format maximum="128" minimum="1"/>
                        </prop>
                        <prop type="string" name="privateIPAddressVersion">
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="privateIPAllocationMethod">
                          <enum>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="object" name="privateLinkConnectionProperties">
                          <prop readOnly="True" type="array<string>" name="fqdns">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="groupId"/>
                          <prop readOnly="True" type="string" name="requiredMemberName"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                        <prop type="object" name="subnet" cls="Subnet_read">
                          <prop readOnly="True" type="string" name="etag"/>
                          <prop type="ResourceId" name="id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="addressPrefix"/>
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="array<object>" name="applicationGatewayIPConfigurations">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@SubResource_read" name="subnet"/>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="boolean" name="defaultOutboundAccess"/>
                            <prop type="array<object>" name="delegations">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="array<string>" name="actions">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="serviceName"/>
                                </prop>
                                <prop type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="array<@SubResource_read>" name="ipAllocations">
                              <item type="@SubResource_read"/>
                            </prop>
                            <prop readOnly="True" type="array<object>" name="ipConfigurationProfiles">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@Subnet_read" name="subnet"/>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop readOnly="True" type="array<@IPConfiguration_read>" name="ipConfigurations">
                              <item type="@IPConfiguration_read"/>
                            </prop>
                            <prop type="@SubResource_read" name="natGateway"/>
                            <prop type="object" name="networkSecurityGroup" cls="NetworkSecurityGroup_read">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location"/>
                              <prop readOnly="True" type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop readOnly="True" type="array<@SecurityRule_read>" name="defaultSecurityRules">
                                  <item type="@SecurityRule_read"/>
                                </prop>
                                <prop readOnly="True" type="array<object>" name="flowLogs">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkWatchers/{}/flowLogs/{}"/>
                                    </prop>
                                    <prop type="IdentityObject" name="identity">
                                      <prop readOnly="True" type="string" name="principalId"/>
                                      <prop readOnly="True" type="string" name="tenantId"/>
                                      <prop type="string" name="type">
                                        <enum>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;SystemAssigned&quot;"/>
                                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                                          <item value="&quot;UserAssigned&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="userAssignedIdentities">
                                        <additionalProp>
                                          <item type="object">
                                            <prop readOnly="True" type="string" name="clientId"/>
                                            <prop readOnly="True" type="string" name="principalId"/>
                                          </item>
                                        </additionalProp>
                                      </prop>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="boolean" name="enabled"/>
                                      <prop type="string" name="enabledFilteringCriteria"/>
                                      <prop type="object" name="flowAnalyticsConfiguration">
                                        <prop type="object" name="networkWatcherFlowAnalyticsConfiguration">
                                          <prop type="boolean" name="enabled"/>
                                          <prop type="integer32" name="trafficAnalyticsInterval"/>
                                          <prop type="string" name="workspaceId"/>
                                          <prop type="string" name="workspaceRegion"/>
                                          <prop type="string" name="workspaceResourceId"/>
                                        </prop>
                                      </prop>
                                      <prop type="object" name="format">
                                        <prop type="string" name="type">
                                          <enum>
                                            <item value="&quot;JSON&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="integer32" name="version">
                                          <default value="0"/>
                                        </prop>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="retentionPolicy">
                                        <prop type="integer32" name="days">
                                          <default value="0"/>
                                        </prop>
                                        <prop type="boolean" name="enabled">
                                          <default value="false"/>
                                        </prop>
                                      </prop>
                                      <prop type="string" name="storageId" required="True"/>
                                      <prop readOnly="True" type="string" name="targetResourceGuid"/>
                                      <prop type="string" name="targetResourceId" required="True"/>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop type="boolean" name="flushConnection"/>
                                <prop readOnly="True" type="array<object>" name="networkInterfaces">
                                  <item type="object" cls="NetworkInterface_read">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="object" name="extendedLocation" cls="ExtendedLocation_read">
                                      <prop type="string" name="name"/>
                                      <prop type="string" name="type">
                                        <enum>
                                          <item value="&quot;EdgeZone&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}"/>
                                    </prop>
                                    <prop type="ResourceLocation" name="location"/>
                                    <prop readOnly="True" type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="auxiliaryMode">
                                        <enum>
                                          <item value="&quot;AcceleratedConnections&quot;"/>
                                          <item value="&quot;Floating&quot;"/>
                                          <item value="&quot;MaxConnections&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="auxiliarySku">
                                        <enum>
                                          <item value="&quot;A1&quot;"/>
                                          <item value="&quot;A2&quot;"/>
                                          <item value="&quot;A4&quot;"/>
                                          <item value="&quot;A8&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="boolean" name="disableTcpStateTracking"/>
                                      <prop type="object" name="dnsSettings">
                                        <prop readOnly="True" type="array<string>" name="appliedDnsServers">
                                          <item type="string"/>
                                        </prop>
                                        <prop type="array<string>" name="dnsServers">
                                          <item type="string"/>
                                        </prop>
                                        <prop type="string" name="internalDnsNameLabel"/>
                                        <prop readOnly="True" type="string" name="internalDomainNameSuffix"/>
                                        <prop readOnly="True" type="string" name="internalFqdn"/>
                                      </prop>
                                      <prop readOnly="True" type="@SubResource_read" name="dscpConfiguration"/>
                                      <prop type="boolean" name="enableAcceleratedNetworking"/>
                                      <prop type="boolean" name="enableIPForwarding"/>
                                      <prop readOnly="True" type="array<string>" name="hostedWorkloads">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<@NetworkInterfaceIPConfiguration_read>" name="ipConfigurations">
                                        <item type="@NetworkInterfaceIPConfiguration_read"/>
                                      </prop>
                                      <prop readOnly="True" type="string" name="macAddress"/>
                                      <prop type="string" name="migrationPhase">
                                        <enum>
                                          <item value="&quot;Abort&quot;"/>
                                          <item value="&quot;Commit&quot;"/>
                                          <item value="&quot;Committed&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;Prepare&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="@NetworkSecurityGroup_read" name="networkSecurityGroup"/>
                                      <prop type="string" name="nicType">
                                        <enum>
                                          <item value="&quot;Elastic&quot;"/>
                                          <item value="&quot;Standard&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="boolean" name="primary"/>
                                      <prop readOnly="True" type="object" name="privateEndpoint" cls="PrivateEndpoint_read">
                                        <prop readOnly="True" type="string" name="etag"/>
                                        <prop type="@ExtendedLocation_read" name="extendedLocation"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateEndpoints/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="array<@ApplicationSecurityGroup_read>" name="applicationSecurityGroups">
                                            <item type="@ApplicationSecurityGroup_read"/>
                                          </prop>
                                          <prop type="array<object>" name="customDnsConfigs">
                                            <item type="object">
                                              <prop type="string" name="fqdn"/>
                                              <prop type="array<string>" name="ipAddresses">
                                                <item type="string"/>
                                              </prop>
                                            </item>
                                          </prop>
                                          <prop type="string" name="customNetworkInterfaceName"/>
                                          <prop type="array<object>" name="ipConfigurations">
                                            <item type="object">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="string" name="groupId"/>
                                                <prop type="string" name="memberName"/>
                                                <prop type="string" name="privateIPAddress"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop type="array<@PrivateLinkServiceConnection_read>" name="manualPrivateLinkServiceConnections">
                                            <item type="@PrivateLinkServiceConnection_read"/>
                                          </prop>
                                          <prop readOnly="True" type="array<@NetworkInterface_read>" name="networkInterfaces">
                                            <item type="@NetworkInterface_read"/>
                                          </prop>
                                          <prop type="array<object>" name="privateLinkServiceConnections">
                                            <item type="object" cls="PrivateLinkServiceConnection_read">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="string" name="id"/>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="array<string>" name="groupIds">
                                                  <item type="string"/>
                                                </prop>
                                                <prop type="object" name="privateLinkServiceConnectionState" cls="PrivateLinkServiceConnectionState_read">
                                                  <prop type="string" name="actionsRequired"/>
                                                  <prop type="string" name="description"/>
                                                  <prop type="string" name="status"/>
                                                </prop>
                                                <prop type="string" name="privateLinkServiceId"/>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="requestMessage"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop readOnly="True" type="string" name="provisioningState">
                                            <enum>
                                              <item value="&quot;Deleting&quot;"/>
                                              <item value="&quot;Failed&quot;"/>
                                              <item value="&quot;Succeeded&quot;"/>
                                              <item value="&quot;Updating&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="@Subnet_read" name="subnet"/>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop type="object" name="privateLinkService">
                                        <prop readOnly="True" type="string" name="etag"/>
                                        <prop type="@ExtendedLocation_read" name="extendedLocation"/>
                                        <prop type="ResourceId" name="id">
                                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateLinkServices/{}"/>
                                        </prop>
                                        <prop type="ResourceLocation" name="location"/>
                                        <prop readOnly="True" type="string" name="name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop readOnly="True" type="string" name="alias"/>
                                          <prop type="object" name="autoApproval">
                                            <prop type="array<string>" name="subscriptions">
                                              <item type="string"/>
                                            </prop>
                                          </prop>
                                          <prop type="string" name="destinationIPAddress"/>
                                          <prop type="boolean" name="enableProxyProtocol"/>
                                          <prop type="array<string>" name="fqdns">
                                            <item type="string"/>
                                          </prop>
                                          <prop type="array<object>" name="ipConfigurations">
                                            <item type="object">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="string" name="id"/>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="boolean" name="primary"/>
                                                <prop type="string" name="privateIPAddress"/>
                                                <prop type="string" name="privateIPAddressVersion">
                                                  <enum>
                                                    <item value="&quot;IPv4&quot;"/>
                                                    <item value="&quot;IPv6&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="privateIPAllocationMethod">
                                                  <enum>
                                                    <item value="&quot;Dynamic&quot;"/>
                                                    <item value="&quot;Static&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="@Subnet_read" name="subnet"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop type="array<object>" name="loadBalancerFrontendIpConfigurations">
                                            <item type="object" cls="FrontendIPConfiguration_read">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="ResourceId" name="id">
                                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
                                              </prop>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop type="@SubResource_read" name="gatewayLoadBalancer"/>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="inboundNatPools">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="inboundNatRules">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="loadBalancingRules">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop readOnly="True" type="array<@SubResource_read>" name="outboundRules">
                                                  <item type="@SubResource_read"/>
                                                </prop>
                                                <prop type="string" name="privateIPAddress"/>
                                                <prop type="string" name="privateIPAddressVersion">
                                                  <enum>
                                                    <item value="&quot;IPv4&quot;"/>
                                                    <item value="&quot;IPv6&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="string" name="privateIPAllocationMethod">
                                                  <enum>
                                                    <item value="&quot;Dynamic&quot;"/>
                                                    <item value="&quot;Static&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                                <prop type="object" name="publicIPAddress" cls="PublicIPAddress_read">
                                                  <prop readOnly="True" type="string" name="etag"/>
                                                  <prop type="@ExtendedLocation_read" name="extendedLocation"/>
                                                  <prop type="ResourceId" name="id">
                                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                                                  </prop>
                                                  <prop type="ResourceLocation" name="location"/>
                                                  <prop readOnly="True" type="string" name="name"/>
                                                  <prop type="object" name="properties" clientFlatten="True">
                                                    <prop type="object" name="ddosSettings">
                                                      <prop type="@SubResource_read" name="ddosProtectionPlan"/>
                                                      <prop type="string" name="protectionMode">
                                                        <enum>
                                                          <item value="&quot;Disabled&quot;"/>
                                                          <item value="&quot;Enabled&quot;"/>
                                                          <item value="&quot;VirtualNetworkInherited&quot;"/>
                                                        </enum>
                                                      </prop>
                                                    </prop>
                                                    <prop type="string" name="deleteOption">
                                                      <enum>
                                                        <item value="&quot;Delete&quot;"/>
                                                        <item value="&quot;Detach&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="object" name="dnsSettings">
                                                      <prop type="string" name="domainNameLabel"/>
                                                      <prop type="string" name="domainNameLabelScope">
                                                        <enum>
                                                          <item value="&quot;NoReuse&quot;"/>
                                                          <item value="&quot;ResourceGroupReuse&quot;"/>
                                                          <item value="&quot;SubscriptionReuse&quot;"/>
                                                          <item value="&quot;TenantReuse&quot;"/>
                                                        </enum>
                                                      </prop>
                                                      <prop type="string" name="fqdn"/>
                                                      <prop type="string" name="reverseFqdn"/>
                                                    </prop>
                                                    <prop type="integer32" name="idleTimeoutInMinutes"/>
                                                    <prop type="string" name="ipAddress"/>
                                                    <prop readOnly="True" type="object" name="ipConfiguration" cls="IPConfiguration_read">
                                                      <prop readOnly="True" type="string" name="etag"/>
                                                      <prop type="string" name="id"/>
                                                      <prop type="string" name="name"/>
                                                      <prop type="object" name="properties" clientFlatten="True">
                                                        <prop type="string" name="privateIPAddress"/>
                                                        <prop type="string" name="privateIPAllocationMethod">
                                                          <default value="&quot;Dynamic&quot;"/>
                                                          <enum>
                                                            <item value="&quot;Dynamic&quot;"/>
                                                            <item value="&quot;Static&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop readOnly="True" type="string" name="provisioningState">
                                                          <enum>
                                                            <item value="&quot;Deleting&quot;"/>
                                                            <item value="&quot;Failed&quot;"/>
                                                            <item value="&quot;Succeeded&quot;"/>
                                                            <item value="&quot;Updating&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop type="@PublicIPAddress_read" name="publicIPAddress"/>
                                                        <prop type="@Subnet_read" name="subnet"/>
                                                      </prop>
                                                    </prop>
                                                    <prop type="array<object>" name="ipTags">
                                                      <item type="object">
                                                        <prop type="string" name="ipTagType"/>
                                                        <prop type="string" name="tag"/>
                                                      </item>
                                                    </prop>
                                                    <prop type="@PublicIPAddress_read" name="linkedPublicIPAddress"/>
                                                    <prop type="string" name="migrationPhase">
                                                      <enum>
                                                        <item value="&quot;Abort&quot;"/>
                                                        <item value="&quot;Commit&quot;"/>
                                                        <item value="&quot;Committed&quot;"/>
                                                        <item value="&quot;None&quot;"/>
                                                        <item value="&quot;Prepare&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="object" name="natGateway">
                                                      <prop readOnly="True" type="string" name="etag"/>
                                                      <prop type="ResourceId" name="id">
                                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/natGateways/{}"/>
                                                      </prop>
                                                      <prop type="ResourceLocation" name="location"/>
                                                      <prop readOnly="True" type="string" name="name"/>
                                                      <prop type="object" name="properties" clientFlatten="True">
                                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                                        <prop readOnly="True" type="string" name="provisioningState">
                                                          <enum>
                                                            <item value="&quot;Deleting&quot;"/>
                                                            <item value="&quot;Failed&quot;"/>
                                                            <item value="&quot;Succeeded&quot;"/>
                                                            <item value="&quot;Updating&quot;"/>
                                                          </enum>
                                                        </prop>
                                                        <prop type="array<@SubResource_read>" name="publicIpAddresses">
                                                          <item type="@SubResource_read"/>
                                                        </prop>
                                                        <prop type="array<@SubResource_read>" name="publicIpPrefixes">
                                                          <item type="@SubResource_read"/>
                                                        </prop>
                                                        <prop readOnly="True" type="string" name="resourceGuid"/>
                                                        <prop readOnly="True" type="array<@SubResource_read>" name="subnets">
                                                          <item type="@SubResource_read"/>
                                                        </prop>
                                                      </prop>
                                                      <prop type="object" name="sku">
                                                        <prop type="string" name="name">
                                                          <enum>
                                                            <item value="&quot;Standard&quot;"/>
                                                          </enum>
                                                        </prop>
                                                      </prop>
                                                      <prop type="object" name="tags">
                                                        <additionalProp>
                                                          <item type="string"/>
                                                        </additionalProp>
                                                      </prop>
                                                      <prop readOnly="True" type="string" name="type"/>
                                                      <prop type="array<string>" name="zones">
                                                        <item type="string"/>
                                                      </prop>
                                                    </prop>
                                                    <prop readOnly="True" type="string" name="provisioningState">
                                                      <enum>
                                                        <item value="&quot;Deleting&quot;"/>
                                                        <item value="&quot;Failed&quot;"/>
                                                        <item value="&quot;Succeeded&quot;"/>
                                                        <item value="&quot;Updating&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="publicIPAddressVersion">
                                                      <enum>
                                                        <item value="&quot;IPv4&quot;"/>
                                                        <item value="&quot;IPv6&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="publicIPAllocationMethod">
                                                      <enum>
                                                        <item value="&quot;Dynamic&quot;"/>
                                                        <item value="&quot;Static&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="@SubResource_read" name="publicIPPrefix"/>
                                                    <prop readOnly="True" type="string" name="resourceGuid"/>
                                                    <prop type="@PublicIPAddress_read" name="servicePublicIPAddress"/>
                                                  </prop>
                                                  <prop type="object" name="sku">
                                                    <prop type="string" name="name">
                                                      <enum>
                                                        <item value="&quot;Basic&quot;"/>
                                                        <item value="&quot;Standard&quot;"/>
                                                      </enum>
                                                    </prop>
                                                    <prop type="string" name="tier">
                                                      <enum>
                                                        <item value="&quot;Global&quot;"/>
                                                        <item value="&quot;Regional&quot;"/>
                                                      </enum>
                                                    </prop>
                                                  </prop>
                                                  <prop type="object" name="tags">
                                                    <additionalProp>
                                                      <item type="string"/>
                                                    </additionalProp>
                                                  </prop>
                                                  <prop readOnly="True" type="string" name="type"/>
                                                  <prop type="array<string>" name="zones">
                                                    <item type="string"/>
                                                  </prop>
                                                </prop>
                                                <prop type="@SubResource_read" name="publicIPPrefix"/>
                                                <prop type="@Subnet_read" name="subnet"/>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                              <prop type="array<string>" name="zones">
                                                <item type="string"/>
                                              </prop>
                                            </item>
                                          </prop>
                                          <prop readOnly="True" type="array<@NetworkInterface_read>" name="networkInterfaces">
                                            <item type="@NetworkInterface_read"/>
                                          </prop>
                                          <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                                            <item type="object">
                                              <prop readOnly="True" type="string" name="etag"/>
                                              <prop type="ResourceId" name="id">
                                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/privateLinkServices/{}/privateEndpointConnections/{}"/>
                                              </prop>
                                              <prop type="string" name="name"/>
                                              <prop type="object" name="properties" clientFlatten="True">
                                                <prop readOnly="True" type="string" name="linkIdentifier"/>
                                                <prop readOnly="True" type="@PrivateEndpoint_read" name="privateEndpoint"/>
                                                <prop readOnly="True" type="string" name="privateEndpointLocation"/>
                                                <prop type="@PrivateLinkServiceConnectionState_read" name="privateLinkServiceConnectionState"/>
                                                <prop readOnly="True" type="string" name="provisioningState">
                                                  <enum>
                                                    <item value="&quot;Deleting&quot;"/>
                                                    <item value="&quot;Failed&quot;"/>
                                                    <item value="&quot;Succeeded&quot;"/>
                                                    <item value="&quot;Updating&quot;"/>
                                                  </enum>
                                                </prop>
                                              </prop>
                                              <prop readOnly="True" type="string" name="type"/>
                                            </item>
                                          </prop>
                                          <prop readOnly="True" type="string" name="provisioningState">
                                            <enum>
                                              <item value="&quot;Deleting&quot;"/>
                                              <item value="&quot;Failed&quot;"/>
                                              <item value="&quot;Succeeded&quot;"/>
                                              <item value="&quot;Updating&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="object" name="visibility">
                                            <prop type="array<string>" name="subscriptions">
                                              <item type="string"/>
                                            </prop>
                                          </prop>
                                        </prop>
                                        <prop type="object" name="tags">
                                          <additionalProp>
                                            <item type="string"/>
                                          </additionalProp>
                                        </prop>
                                        <prop readOnly="True" type="string" name="type"/>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="string" name="resourceGuid"/>
                                      <prop readOnly="True" type="array<@NetworkInterfaceTapConfiguration_read>" name="tapConfigurations">
                                        <item type="@NetworkInterfaceTapConfiguration_read"/>
                                      </prop>
                                      <prop readOnly="True" type="@SubResource_read" name="virtualMachine"/>
                                      <prop readOnly="True" type="boolean" name="vnetEncryptionSupported"/>
                                      <prop type="string" name="workloadType"/>
                                    </prop>
                                    <prop type="object" name="tags">
                                      <additionalProp>
                                        <item type="string"/>
                                      </additionalProp>
                                    </prop>
                                    <prop readOnly="True" type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                                <prop readOnly="True" type="string" name="resourceGuid"/>
                                <prop type="array<object>" name="securityRules">
                                  <item type="object" cls="SecurityRule_read">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id"/>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="access" required="True">
                                        <enum>
                                          <item value="&quot;Allow&quot;"/>
                                          <item value="&quot;Deny&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="description"/>
                                      <prop type="string" name="destinationAddressPrefix"/>
                                      <prop type="array<string>" name="destinationAddressPrefixes">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<@ApplicationSecurityGroup_read>" name="destinationApplicationSecurityGroups">
                                        <item type="@ApplicationSecurityGroup_read"/>
                                      </prop>
                                      <prop type="string" name="destinationPortRange"/>
                                      <prop type="array<string>" name="destinationPortRanges">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="string" name="direction" required="True">
                                        <enum>
                                          <item value="&quot;Inbound&quot;"/>
                                          <item value="&quot;Outbound&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="integer32" name="priority" required="True"/>
                                      <prop type="string" name="protocol" required="True">
                                        <enum>
                                          <item value="&quot;*&quot;"/>
                                          <item value="&quot;Ah&quot;"/>
                                          <item value="&quot;Esp&quot;"/>
                                          <item value="&quot;Icmp&quot;"/>
                                          <item value="&quot;Tcp&quot;"/>
                                          <item value="&quot;Udp&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="sourceAddressPrefix"/>
                                      <prop type="array<string>" name="sourceAddressPrefixes">
                                        <item type="string"/>
                                      </prop>
                                      <prop type="array<object>" name="sourceApplicationSecurityGroups">
                                        <item type="object" cls="ApplicationSecurityGroup_read">
                                          <prop readOnly="True" type="string" name="etag"/>
                                          <prop type="ResourceId" name="id">
                                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                                          </prop>
                                          <prop type="ResourceLocation" name="location"/>
                                          <prop readOnly="True" type="string" name="name"/>
                                          <prop type="object" name="properties" clientFlatten="True">
                                            <prop readOnly="True" type="string" name="provisioningState">
                                              <enum>
                                                <item value="&quot;Deleting&quot;"/>
                                                <item value="&quot;Failed&quot;"/>
                                                <item value="&quot;Succeeded&quot;"/>
                                                <item value="&quot;Updating&quot;"/>
                                              </enum>
                                            </prop>
                                            <prop readOnly="True" type="string" name="resourceGuid"/>
                                          </prop>
                                          <prop type="object" name="tags">
                                            <additionalProp>
                                              <item type="string"/>
                                            </additionalProp>
                                          </prop>
                                          <prop readOnly="True" type="string" name="type"/>
                                        </item>
                                      </prop>
                                      <prop type="string" name="sourcePortRange"/>
                                      <prop type="array<string>" name="sourcePortRanges">
                                        <item type="string"/>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="array<@Subnet_read>" name="subnets">
                                  <item type="@Subnet_read"/>
                                </prop>
                              </prop>
                              <prop type="object" name="tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </prop>
                            <prop type="string" name="privateEndpointNetworkPolicies">
                              <default value="&quot;Disabled&quot;"/>
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                                <item value="&quot;NetworkSecurityGroupEnabled&quot;"/>
                                <item value="&quot;RouteTableEnabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="array<@PrivateEndpoint_read>" name="privateEndpoints">
                              <item type="@PrivateEndpoint_read"/>
                            </prop>
                            <prop type="string" name="privateLinkServiceNetworkPolicies">
                              <default value="&quot;Enabled&quot;"/>
                              <enum>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enabled&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Deleting&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Updating&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="purpose"/>
                            <prop readOnly="True" type="array<object>" name="resourceNavigationLinks">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop readOnly="True" type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="link"/>
                                  <prop type="string" name="linkedResourceType"/>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="object" name="routeTable">
                              <prop readOnly="True" type="string" name="etag"/>
                              <prop type="ResourceId" name="id">
                                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                              </prop>
                              <prop type="ResourceLocation" name="location"/>
                              <prop readOnly="True" type="string" name="name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="boolean" name="disableBgpRoutePropagation"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                                <prop readOnly="True" type="string" name="resourceGuid"/>
                                <prop type="array<object>" name="routes">
                                  <item type="object">
                                    <prop readOnly="True" type="string" name="etag"/>
                                    <prop type="ResourceId" name="id">
                                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                    </prop>
                                    <prop type="string" name="name"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="addressPrefix"/>
                                      <prop readOnly="True" type="boolean" name="hasBgpOverride"/>
                                      <prop type="string" name="nextHopIpAddress"/>
                                      <prop type="string" name="nextHopType" required="True">
                                        <enum>
                                          <item value="&quot;Internet&quot;"/>
                                          <item value="&quot;None&quot;"/>
                                          <item value="&quot;VirtualAppliance&quot;"/>
                                          <item value="&quot;VirtualNetworkGateway&quot;"/>
                                          <item value="&quot;VnetLocal&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop readOnly="True" type="string" name="provisioningState">
                                        <enum>
                                          <item value="&quot;Deleting&quot;"/>
                                          <item value="&quot;Failed&quot;"/>
                                          <item value="&quot;Succeeded&quot;"/>
                                          <item value="&quot;Updating&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                    <prop type="string" name="type"/>
                                  </item>
                                </prop>
                                <prop readOnly="True" type="array<@Subnet_read>" name="subnets">
                                  <item type="@Subnet_read"/>
                                </prop>
                              </prop>
                              <prop type="object" name="tags">
                                <additionalProp>
                                  <item type="string"/>
                                </additionalProp>
                              </prop>
                              <prop readOnly="True" type="string" name="type"/>
                            </prop>
                            <prop readOnly="True" type="array<object>" name="serviceAssociationLinks">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="string" name="id"/>
                                <prop type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="boolean" name="allowDelete"/>
                                  <prop type="string" name="link"/>
                                  <prop type="string" name="linkedResourceType"/>
                                  <prop type="array<string>" name="locations">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="array<object>" name="serviceEndpointPolicies">
                              <item type="object">
                                <prop readOnly="True" type="string" name="etag"/>
                                <prop type="ResourceId" name="id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"/>
                                </prop>
                                <prop readOnly="True" type="string" name="kind"/>
                                <prop type="ResourceLocation" name="location"/>
                                <prop readOnly="True" type="string" name="name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<string>" name="contextualServiceEndpointPolicies">
                                    <item type="string"/>
                                  </prop>
                                  <prop readOnly="True" type="string" name="provisioningState">
                                    <enum>
                                      <item value="&quot;Deleting&quot;"/>
                                      <item value="&quot;Failed&quot;"/>
                                      <item value="&quot;Succeeded&quot;"/>
                                      <item value="&quot;Updating&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop readOnly="True" type="string" name="resourceGuid"/>
                                  <prop type="string" name="serviceAlias"/>
                                  <prop type="array<object>" name="serviceEndpointPolicyDefinitions">
                                    <item type="object">
                                      <prop readOnly="True" type="string" name="etag"/>
                                      <prop type="ResourceId" name="id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"/>
                                      </prop>
                                      <prop type="string" name="name"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="description"/>
                                        <prop readOnly="True" type="string" name="provisioningState">
                                          <enum>
                                            <item value="&quot;Deleting&quot;"/>
                                            <item value="&quot;Failed&quot;"/>
                                            <item value="&quot;Succeeded&quot;"/>
                                            <item value="&quot;Updating&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="service"/>
                                        <prop type="array<string>" name="serviceResources">
                                          <item type="string"/>
                                        </prop>
                                      </prop>
                                      <prop type="string" name="type"/>
                                    </item>
                                  </prop>
                                  <prop readOnly="True" type="array<@Subnet_read>" name="subnets">
                                    <item type="@Subnet_read"/>
                                  </prop>
                                </prop>
                                <prop type="object" name="tags">
                                  <additionalProp>
                                    <item type="string"/>
                                  </additionalProp>
                                </prop>
                                <prop readOnly="True" type="string" name="type"/>
                              </item>
                            </prop>
                            <prop type="array<object>" name="serviceEndpoints">
                              <item type="object">
                                <prop type="array<string>" name="locations">
                                  <item type="string"/>
                                </prop>
                                <prop type="@SubResource_read" name="networkIdentifier"/>
                                <prop readOnly="True" type="string" name="provisioningState">
                                  <enum>
                                    <item value="&quot;Deleting&quot;"/>
                                    <item value="&quot;Failed&quot;"/>
                                    <item value="&quot;Succeeded&quot;"/>
                                    <item value="&quot;Updating&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="service"/>
                              </item>
                            </prop>
                            <prop type="string" name="sharingScope">
                              <enum>
                                <item value="&quot;DelegatedServices&quot;"/>
                                <item value="&quot;Tenant&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="type"/>
                        </prop>
                        <prop type="array<@VirtualNetworkTap_read>" name="virtualNetworkTaps">
                          <item type="@VirtualNetworkTap_read"/>
                        </prop>
                      </prop>
                      <prop type="string" name="type"/>
                    </prop>
                    <prop type="integer" name="destinationPort"/>
                    <prop readOnly="True" type="array<object>" name="networkInterfaceTapConfigurations">
                      <item type="object" cls="NetworkInterfaceTapConfiguration_read">
                        <prop readOnly="True" type="string" name="etag"/>
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/tapConfigurations/{}"/>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="@VirtualNetworkTap_read" name="virtualNetworkTap"/>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceGuid"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="destinationLoadBalancerFrontEndIPConfiguration" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration">
                  <prop type="ResourceId" name="id" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
                  </prop>
                  <prop type="string" name="name" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="@SubResource_update" name="gatewayLoadBalancer" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer"/>
                    <prop type="string" name="privateIPAddress" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress"/>
                    <prop type="string" name="privateIPAddressVersion" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion">
                      <enum>
                        <item value="&quot;IPv4&quot;"/>
                        <item value="&quot;IPv6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod">
                      <enum>
                        <item value="&quot;Dynamic&quot;"/>
                        <item value="&quot;Static&quot;"/>
                      </enum>
                    </prop>
                    <prop type="@PublicIPAddress_update" name="publicIPAddress" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress"/>
                    <prop type="@SubResource_update" name="publicIPPrefix" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix"/>
                    <prop type="@Subnet_update" name="subnet" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet"/>
                  </prop>
                  <prop type="array<string>" name="zones" arg="$parameters.properties.destinationLoadBalancerFrontEndIPConfiguration.zones">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="object" name="destinationNetworkInterfaceIPConfiguration" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration">
                  <prop type="ResourceId" name="id" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
                  </prop>
                  <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="applicationGatewayBackendAddressPools" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools">
                      <item type="object">
                        <prop type="string" name="id" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].id"/>
                        <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="array<object>" name="backendAddresses" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses">
                            <item type="object">
                              <prop type="string" name="fqdn" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn"/>
                              <prop type="string" name="ipAddress" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress"/>
                            </item>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<@ApplicationSecurityGroup_update>" name="applicationSecurityGroups" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups">
                      <item type="@ApplicationSecurityGroup_update"/>
                    </prop>
                    <prop type="object" name="gatewayLoadBalancer" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer" cls="SubResource_update">
                      <prop type="string" name="id" arg="@SubResource_update.id"/>
                    </prop>
                    <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="integer32" name="drainPeriodInSeconds" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds"/>
                          <prop type="array<object>" name="loadBalancerBackendAddresses" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses">
                            <item type="object">
                              <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name"/>
                              <prop type="object" name="properties" clientFlatten="True">
                                <prop type="string" name="adminState" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.adminState">
                                  <enum>
                                    <item value="&quot;Down&quot;"/>
                                    <item value="&quot;None&quot;"/>
                                    <item value="&quot;Up&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="ipAddress" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress"/>
                                <prop type="@SubResource_update" name="loadBalancerFrontendIPConfiguration" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.loadBalancerFrontendIPConfiguration"/>
                                <prop type="@SubResource_update" name="subnet" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.subnet"/>
                                <prop type="@SubResource_update" name="virtualNetwork" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.virtualNetwork"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="string" name="location" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.location"/>
                          <prop type="string" name="syncMode" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.syncMode">
                            <enum>
                              <item value="&quot;Automatic&quot;"/>
                              <item value="&quot;Manual&quot;"/>
                            </enum>
                          </prop>
                          <prop type="array<object>" name="tunnelInterfaces" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces">
                            <item type="object">
                              <prop type="integer32" name="identifier" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier"/>
                              <prop type="integer32" name="port" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port"/>
                              <prop type="string" name="protocol" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol">
                                <enum>
                                  <item value="&quot;Native&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                  <item value="&quot;VXLAN&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type">
                                <enum>
                                  <item value="&quot;External&quot;"/>
                                  <item value="&quot;Internal&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="@SubResource_update" name="virtualNetwork" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.virtualNetwork"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="loadBalancerInboundNatRules" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="@SubResource_update" name="backendAddressPool" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendAddressPool"/>
                          <prop type="integer32" name="backendPort" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                          <prop type="boolean" name="enableFloatingIP" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                          <prop type="boolean" name="enableTcpReset" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableTcpReset"/>
                          <prop type="@SubResource_update" name="frontendIPConfiguration" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                          <prop type="integer32" name="frontendPort" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                          <prop type="integer32" name="frontendPortRangeEnd" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd"/>
                          <prop type="integer32" name="frontendPortRangeStart" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart"/>
                          <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                          <prop type="string" name="protocol" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.protocol">
                            <enum>
                              <item value="&quot;All&quot;"/>
                              <item value="&quot;Tcp&quot;"/>
                              <item value="&quot;Udp&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                    <prop type="boolean" name="primary" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.primary"/>
                    <prop type="string" name="privateIPAddress" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress"/>
                    <prop nullable="True" type="integer32" name="privateIPAddressPrefixLength" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressPrefixLength">
                      <format maximum="128" minimum="1"/>
                    </prop>
                    <prop type="string" name="privateIPAddressVersion" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion">
                      <enum>
                        <item value="&quot;IPv4&quot;"/>
                        <item value="&quot;IPv6&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="privateIPAllocationMethod" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod">
                      <enum>
                        <item value="&quot;Dynamic&quot;"/>
                        <item value="&quot;Static&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="publicIPAddress" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress" cls="PublicIPAddress_update">
                      <prop type="object" name="extendedLocation" arg="@PublicIPAddress_update.extendedLocation">
                        <prop type="string" name="name" arg="@PublicIPAddress_update.extendedLocation.name"/>
                        <prop type="string" name="type" arg="@PublicIPAddress_update.extendedLocation.type">
                          <enum>
                            <item value="&quot;EdgeZone&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="ResourceId" name="id" arg="@PublicIPAddress_update.id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/publicIPAddresses/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" arg="@PublicIPAddress_update.location"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="ddosSettings" arg="@PublicIPAddress_update.properties.ddosSettings">
                          <prop type="@SubResource_update" name="ddosProtectionPlan" arg="@PublicIPAddress_update.properties.ddosSettings.ddosProtectionPlan"/>
                          <prop type="string" name="protectionMode" arg="@PublicIPAddress_update.properties.ddosSettings.protectionMode">
                            <enum>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enabled&quot;"/>
                              <item value="&quot;VirtualNetworkInherited&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="deleteOption" arg="@PublicIPAddress_update.properties.deleteOption">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Detach&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="dnsSettings" arg="@PublicIPAddress_update.properties.dnsSettings">
                          <prop type="string" name="domainNameLabel" arg="@PublicIPAddress_update.properties.dnsSettings.domainNameLabel"/>
                          <prop type="string" name="domainNameLabelScope" arg="@PublicIPAddress_update.properties.dnsSettings.domainNameLabelScope">
                            <enum>
                              <item value="&quot;NoReuse&quot;"/>
                              <item value="&quot;ResourceGroupReuse&quot;"/>
                              <item value="&quot;SubscriptionReuse&quot;"/>
                              <item value="&quot;TenantReuse&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="fqdn" arg="@PublicIPAddress_update.properties.dnsSettings.fqdn"/>
                          <prop type="string" name="reverseFqdn" arg="@PublicIPAddress_update.properties.dnsSettings.reverseFqdn"/>
                        </prop>
                        <prop type="integer32" name="idleTimeoutInMinutes" arg="@PublicIPAddress_update.properties.idleTimeoutInMinutes"/>
                        <prop type="string" name="ipAddress" arg="@PublicIPAddress_update.properties.ipAddress"/>
                        <prop type="array<object>" name="ipTags" arg="@PublicIPAddress_update.properties.ipTags">
                          <item type="object">
                            <prop type="string" name="ipTagType" arg="@PublicIPAddress_update.properties.ipTags[].ipTagType"/>
                            <prop type="string" name="tag" arg="@PublicIPAddress_update.properties.ipTags[].tag"/>
                          </item>
                        </prop>
                        <prop type="@PublicIPAddress_update" name="linkedPublicIPAddress" arg="@PublicIPAddress_update.properties.linkedPublicIPAddress"/>
                        <prop type="string" name="migrationPhase" arg="@PublicIPAddress_update.properties.migrationPhase">
                          <enum>
                            <item value="&quot;Abort&quot;"/>
                            <item value="&quot;Commit&quot;"/>
                            <item value="&quot;Committed&quot;"/>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;Prepare&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="natGateway" arg="@PublicIPAddress_update.properties.natGateway">
                          <prop type="ResourceId" name="id" arg="@PublicIPAddress_update.properties.natGateway.id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/natGateways/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location" arg="@PublicIPAddress_update.properties.natGateway.location"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="integer32" name="idleTimeoutInMinutes" arg="@PublicIPAddress_update.properties.natGateway.properties.idleTimeoutInMinutes"/>
                            <prop type="array<@SubResource_update>" name="publicIpAddresses" arg="@PublicIPAddress_update.properties.natGateway.properties.publicIpAddresses">
                              <item type="@SubResource_update"/>
                            </prop>
                            <prop type="array<@SubResource_update>" name="publicIpPrefixes" arg="@PublicIPAddress_update.properties.natGateway.properties.publicIpPrefixes">
                              <item type="@SubResource_update"/>
                            </prop>
                          </prop>
                          <prop type="object" name="sku" arg="@PublicIPAddress_update.properties.natGateway.sku">
                            <prop type="string" name="name" arg="@PublicIPAddress_update.properties.natGateway.sku.name">
                              <enum>
                                <item value="&quot;Standard&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="object" name="tags" arg="@PublicIPAddress_update.properties.natGateway.tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                          <prop type="array<string>" name="zones" arg="@PublicIPAddress_update.properties.natGateway.zones">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="string" name="publicIPAddressVersion" arg="@PublicIPAddress_update.properties.publicIPAddressVersion">
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="publicIPAllocationMethod" arg="@PublicIPAddress_update.properties.publicIPAllocationMethod">
                          <enum>
                            <item value="&quot;Dynamic&quot;"/>
                            <item value="&quot;Static&quot;"/>
                          </enum>
                        </prop>
                        <prop type="@SubResource_update" name="publicIPPrefix" arg="@PublicIPAddress_update.properties.publicIPPrefix"/>
                        <prop type="@PublicIPAddress_update" name="servicePublicIPAddress" arg="@PublicIPAddress_update.properties.servicePublicIPAddress"/>
                      </prop>
                      <prop type="object" name="sku" arg="@PublicIPAddress_update.sku">
                        <prop type="string" name="name" arg="@PublicIPAddress_update.sku.name">
                          <enum>
                            <item value="&quot;Basic&quot;"/>
                            <item value="&quot;Standard&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="tier" arg="@PublicIPAddress_update.sku.tier">
                          <enum>
                            <item value="&quot;Global&quot;"/>
                            <item value="&quot;Regional&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags" arg="@PublicIPAddress_update.tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="array<string>" name="zones" arg="@PublicIPAddress_update.zones">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="subnet" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet" cls="Subnet_update">
                      <prop type="ResourceId" name="id" arg="@Subnet_update.id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworks/{}/subnets/{}"/>
                      </prop>
                      <prop type="string" name="name" arg="@Subnet_update.name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="addressPrefix" arg="@Subnet_update.properties.addressPrefix"/>
                        <prop type="array<string>" name="addressPrefixes" arg="@Subnet_update.properties.addressPrefixes">
                          <item type="string"/>
                        </prop>
                        <prop type="array<object>" name="applicationGatewayIPConfigurations" arg="@Subnet_update.properties.applicationGatewayIPConfigurations">
                          <item type="object">
                            <prop type="string" name="id" arg="@Subnet_update.properties.applicationGatewayIPConfigurations[].id"/>
                            <prop type="string" name="name" arg="@Subnet_update.properties.applicationGatewayIPConfigurations[].name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="@SubResource_update" name="subnet" arg="@Subnet_update.properties.applicationGatewayIPConfigurations[].properties.subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="boolean" name="defaultOutboundAccess" arg="@Subnet_update.properties.defaultOutboundAccess"/>
                        <prop type="array<object>" name="delegations" arg="@Subnet_update.properties.delegations">
                          <item type="object">
                            <prop type="string" name="id" arg="@Subnet_update.properties.delegations[].id"/>
                            <prop type="string" name="name" arg="@Subnet_update.properties.delegations[].name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="serviceName" arg="@Subnet_update.properties.delegations[].properties.serviceName"/>
                            </prop>
                            <prop type="string" name="type" arg="@Subnet_update.properties.delegations[].type"/>
                          </item>
                        </prop>
                        <prop type="array<@SubResource_update>" name="ipAllocations" arg="@Subnet_update.properties.ipAllocations">
                          <item type="@SubResource_update"/>
                        </prop>
                        <prop type="@SubResource_update" name="natGateway" arg="@Subnet_update.properties.natGateway"/>
                        <prop type="object" name="networkSecurityGroup" arg="@Subnet_update.properties.networkSecurityGroup">
                          <prop type="ResourceId" name="id" arg="@Subnet_update.properties.networkSecurityGroup.id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkSecurityGroups/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location" arg="@Subnet_update.properties.networkSecurityGroup.location"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="flushConnection" arg="@Subnet_update.properties.networkSecurityGroup.properties.flushConnection"/>
                            <prop type="array<object>" name="securityRules" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules">
                              <item type="object">
                                <prop type="ResourceId" name="id" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].id"/>
                                <prop type="string" name="name" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="access" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.access" required="True">
                                    <enum>
                                      <item value="&quot;Allow&quot;"/>
                                      <item value="&quot;Deny&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="description" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.description"/>
                                  <prop type="string" name="destinationAddressPrefix" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefix"/>
                                  <prop type="array<string>" name="destinationAddressPrefixes" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationAddressPrefixes">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<@ApplicationSecurityGroup_update>" name="destinationApplicationSecurityGroups" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationApplicationSecurityGroups">
                                    <item type="@ApplicationSecurityGroup_update"/>
                                  </prop>
                                  <prop type="string" name="destinationPortRange" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRange"/>
                                  <prop type="array<string>" name="destinationPortRanges" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.destinationPortRanges">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="string" name="direction" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.direction" required="True">
                                    <enum>
                                      <item value="&quot;Inbound&quot;"/>
                                      <item value="&quot;Outbound&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="integer32" name="priority" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.priority" required="True"/>
                                  <prop type="string" name="protocol" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.protocol" required="True">
                                    <enum>
                                      <item value="&quot;*&quot;"/>
                                      <item value="&quot;Ah&quot;"/>
                                      <item value="&quot;Esp&quot;"/>
                                      <item value="&quot;Icmp&quot;"/>
                                      <item value="&quot;Tcp&quot;"/>
                                      <item value="&quot;Udp&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="sourceAddressPrefix" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefix"/>
                                  <prop type="array<string>" name="sourceAddressPrefixes" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourceAddressPrefixes">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="array<object>" name="sourceApplicationSecurityGroups" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourceApplicationSecurityGroups">
                                    <item type="object" cls="ApplicationSecurityGroup_update">
                                      <prop type="ResourceId" name="id" arg="@ApplicationSecurityGroup_update.id">
                                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/applicationSecurityGroups/{}"/>
                                      </prop>
                                      <prop type="ResourceLocation" name="location" arg="@ApplicationSecurityGroup_update.location"/>
                                      <prop type="object" name="tags" arg="@ApplicationSecurityGroup_update.tags">
                                        <additionalProp>
                                          <item type="string"/>
                                        </additionalProp>
                                      </prop>
                                    </item>
                                  </prop>
                                  <prop type="string" name="sourcePortRange" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRange"/>
                                  <prop type="array<string>" name="sourcePortRanges" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].properties.sourcePortRanges">
                                    <item type="string"/>
                                  </prop>
                                </prop>
                                <prop type="string" name="type" arg="@Subnet_update.properties.networkSecurityGroup.properties.securityRules[].type"/>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags" arg="@Subnet_update.properties.networkSecurityGroup.tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </prop>
                        <prop type="string" name="privateEndpointNetworkPolicies" arg="@Subnet_update.properties.privateEndpointNetworkPolicies">
                          <default value="&quot;Disabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                            <item value="&quot;NetworkSecurityGroupEnabled&quot;"/>
                            <item value="&quot;RouteTableEnabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="privateLinkServiceNetworkPolicies" arg="@Subnet_update.properties.privateLinkServiceNetworkPolicies">
                          <default value="&quot;Enabled&quot;"/>
                          <enum>
                            <item value="&quot;Disabled&quot;"/>
                            <item value="&quot;Enabled&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="routeTable" arg="@Subnet_update.properties.routeTable">
                          <prop type="ResourceId" name="id" arg="@Subnet_update.properties.routeTable.id">
                            <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}"/>
                          </prop>
                          <prop type="ResourceLocation" name="location" arg="@Subnet_update.properties.routeTable.location"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="boolean" name="disableBgpRoutePropagation" arg="@Subnet_update.properties.routeTable.properties.disableBgpRoutePropagation"/>
                            <prop type="array<object>" name="routes" arg="@Subnet_update.properties.routeTable.properties.routes">
                              <item type="object">
                                <prop type="ResourceId" name="id" arg="@Subnet_update.properties.routeTable.properties.routes[].id">
                                  <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/routeTables/{}/routes/{}"/>
                                </prop>
                                <prop type="string" name="name" arg="@Subnet_update.properties.routeTable.properties.routes[].name"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="addressPrefix" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.addressPrefix"/>
                                  <prop type="string" name="nextHopIpAddress" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopIpAddress"/>
                                  <prop type="string" name="nextHopType" arg="@Subnet_update.properties.routeTable.properties.routes[].properties.nextHopType" required="True">
                                    <enum>
                                      <item value="&quot;Internet&quot;"/>
                                      <item value="&quot;None&quot;"/>
                                      <item value="&quot;VirtualAppliance&quot;"/>
                                      <item value="&quot;VirtualNetworkGateway&quot;"/>
                                      <item value="&quot;VnetLocal&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                                <prop type="string" name="type" arg="@Subnet_update.properties.routeTable.properties.routes[].type"/>
                              </item>
                            </prop>
                          </prop>
                          <prop type="object" name="tags" arg="@Subnet_update.properties.routeTable.tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="serviceEndpointPolicies" arg="@Subnet_update.properties.serviceEndpointPolicies">
                          <item type="object">
                            <prop type="ResourceId" name="id" arg="@Subnet_update.properties.serviceEndpointPolicies[].id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}"/>
                            </prop>
                            <prop type="ResourceLocation" name="location" arg="@Subnet_update.properties.serviceEndpointPolicies[].location"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<string>" name="contextualServiceEndpointPolicies" arg="@Subnet_update.properties.serviceEndpointPolicies[].properties.contextualServiceEndpointPolicies">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="serviceAlias" arg="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceAlias"/>
                              <prop type="array<object>" name="serviceEndpointPolicyDefinitions" arg="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions">
                                <item type="object">
                                  <prop type="ResourceId" name="id" arg="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/serviceEndpointPolicies/{}/serviceEndpointPolicyDefinitions/{}"/>
                                  </prop>
                                  <prop type="string" name="name" arg="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="string" name="description" arg="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.description"/>
                                    <prop type="string" name="service" arg="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.service"/>
                                    <prop type="array<string>" name="serviceResources" arg="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].properties.serviceResources">
                                      <item type="string"/>
                                    </prop>
                                  </prop>
                                  <prop type="string" name="type" arg="@Subnet_update.properties.serviceEndpointPolicies[].properties.serviceEndpointPolicyDefinitions[].type"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="object" name="tags" arg="@Subnet_update.properties.serviceEndpointPolicies[].tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="serviceEndpoints" arg="@Subnet_update.properties.serviceEndpoints">
                          <item type="object">
                            <prop type="array<string>" name="locations" arg="@Subnet_update.properties.serviceEndpoints[].locations">
                              <item type="string"/>
                            </prop>
                            <prop type="@SubResource_update" name="networkIdentifier" arg="@Subnet_update.properties.serviceEndpoints[].networkIdentifier"/>
                            <prop type="string" name="service" arg="@Subnet_update.properties.serviceEndpoints[].service"/>
                          </item>
                        </prop>
                        <prop type="string" name="sharingScope" arg="@Subnet_update.properties.sharingScope">
                          <enum>
                            <item value="&quot;DelegatedServices&quot;"/>
                            <item value="&quot;Tenant&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="type" arg="@Subnet_update.type"/>
                    </prop>
                    <prop type="array<object>" name="virtualNetworkTaps" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps">
                      <item type="object" cls="VirtualNetworkTap_update">
                        <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_update.id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/virtualNetworkTaps/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location" arg="@VirtualNetworkTap_update.location"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="object" name="destinationLoadBalancerFrontEndIPConfiguration" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration">
                            <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/frontendIPConfigurations/{}"/>
                            </prop>
                            <prop type="string" name="name" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="@SubResource_update" name="gatewayLoadBalancer" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.gatewayLoadBalancer"/>
                              <prop type="string" name="privateIPAddress" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddress"/>
                              <prop type="string" name="privateIPAddressVersion" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAddressVersion">
                                <enum>
                                  <item value="&quot;IPv4&quot;"/>
                                  <item value="&quot;IPv6&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="privateIPAllocationMethod" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="@PublicIPAddress_update" name="publicIPAddress" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPAddress"/>
                              <prop type="@SubResource_update" name="publicIPPrefix" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.publicIPPrefix"/>
                              <prop type="@Subnet_update" name="subnet" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.properties.subnet"/>
                            </prop>
                            <prop type="array<string>" name="zones" arg="@VirtualNetworkTap_update.properties.destinationLoadBalancerFrontEndIPConfiguration.zones">
                              <item type="string"/>
                            </prop>
                          </prop>
                          <prop type="object" name="destinationNetworkInterfaceIPConfiguration" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration">
                            <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.id">
                              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkInterfaces/{}/ipConfigurations/{}"/>
                            </prop>
                            <prop type="string" name="name" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<object>" name="applicationGatewayBackendAddressPools" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools">
                                <item type="object">
                                  <prop type="string" name="id" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].id"/>
                                  <prop type="string" name="name" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<object>" name="backendAddresses" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses">
                                      <item type="object">
                                        <prop type="string" name="fqdn" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].fqdn"/>
                                        <prop type="string" name="ipAddress" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationGatewayBackendAddressPools[].properties.backendAddresses[].ipAddress"/>
                                      </item>
                                    </prop>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<@ApplicationSecurityGroup_update>" name="applicationSecurityGroups" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.applicationSecurityGroups">
                                <item type="@ApplicationSecurityGroup_update"/>
                              </prop>
                              <prop type="@SubResource_update" name="gatewayLoadBalancer" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.gatewayLoadBalancer"/>
                              <prop type="array<object>" name="loadBalancerBackendAddressPools" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools">
                                <item type="object">
                                  <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/backendAddressPools/{}"/>
                                  </prop>
                                  <prop type="string" name="name" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="integer32" name="drainPeriodInSeconds" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.drainPeriodInSeconds"/>
                                    <prop type="array<object>" name="loadBalancerBackendAddresses" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses">
                                      <item type="object">
                                        <prop type="string" name="name" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].name"/>
                                        <prop type="object" name="properties" clientFlatten="True">
                                          <prop type="string" name="adminState" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.adminState">
                                            <enum>
                                              <item value="&quot;Down&quot;"/>
                                              <item value="&quot;None&quot;"/>
                                              <item value="&quot;Up&quot;"/>
                                            </enum>
                                          </prop>
                                          <prop type="string" name="ipAddress" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.ipAddress"/>
                                          <prop type="@SubResource_update" name="loadBalancerFrontendIPConfiguration" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.loadBalancerFrontendIPConfiguration"/>
                                          <prop type="@SubResource_update" name="subnet" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.subnet"/>
                                          <prop type="@SubResource_update" name="virtualNetwork" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.loadBalancerBackendAddresses[].properties.virtualNetwork"/>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="string" name="location" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.location"/>
                                    <prop type="string" name="syncMode" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.syncMode">
                                      <enum>
                                        <item value="&quot;Automatic&quot;"/>
                                        <item value="&quot;Manual&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="array<object>" name="tunnelInterfaces" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces">
                                      <item type="object">
                                        <prop type="integer32" name="identifier" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].identifier"/>
                                        <prop type="integer32" name="port" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].port"/>
                                        <prop type="string" name="protocol" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].protocol">
                                          <enum>
                                            <item value="&quot;Native&quot;"/>
                                            <item value="&quot;None&quot;"/>
                                            <item value="&quot;VXLAN&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="type" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.tunnelInterfaces[].type">
                                          <enum>
                                            <item value="&quot;External&quot;"/>
                                            <item value="&quot;Internal&quot;"/>
                                            <item value="&quot;None&quot;"/>
                                          </enum>
                                        </prop>
                                      </item>
                                    </prop>
                                    <prop type="@SubResource_update" name="virtualNetwork" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerBackendAddressPools[].properties.virtualNetwork"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="array<object>" name="loadBalancerInboundNatRules" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules">
                                <item type="object">
                                  <prop type="ResourceId" name="id" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].id">
                                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/loadBalancers/{}/inboundNatRules/{}"/>
                                  </prop>
                                  <prop type="string" name="name" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].name"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="@SubResource_update" name="backendAddressPool" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendAddressPool"/>
                                    <prop type="integer32" name="backendPort" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.backendPort"/>
                                    <prop type="boolean" name="enableFloatingIP" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableFloatingIP"/>
                                    <prop type="boolean" name="enableTcpReset" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.enableTcpReset"/>
                                    <prop type="@SubResource_update" name="frontendIPConfiguration" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendIPConfiguration"/>
                                    <prop type="integer32" name="frontendPort" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPort"/>
                                    <prop type="integer32" name="frontendPortRangeEnd" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeEnd"/>
                                    <prop type="integer32" name="frontendPortRangeStart" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.frontendPortRangeStart"/>
                                    <prop type="integer32" name="idleTimeoutInMinutes" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.idleTimeoutInMinutes"/>
                                    <prop type="string" name="protocol" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.loadBalancerInboundNatRules[].properties.protocol">
                                      <enum>
                                        <item value="&quot;All&quot;"/>
                                        <item value="&quot;Tcp&quot;"/>
                                        <item value="&quot;Udp&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="primary" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.primary"/>
                              <prop type="string" name="privateIPAddress" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddress"/>
                              <prop nullable="True" type="integer32" name="privateIPAddressPrefixLength" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressPrefixLength">
                                <format maximum="128" minimum="1"/>
                              </prop>
                              <prop type="string" name="privateIPAddressVersion" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAddressVersion">
                                <enum>
                                  <item value="&quot;IPv4&quot;"/>
                                  <item value="&quot;IPv6&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="privateIPAllocationMethod" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.privateIPAllocationMethod">
                                <enum>
                                  <item value="&quot;Dynamic&quot;"/>
                                  <item value="&quot;Static&quot;"/>
                                </enum>
                              </prop>
                              <prop type="@PublicIPAddress_update" name="publicIPAddress" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.publicIPAddress"/>
                              <prop type="@Subnet_update" name="subnet" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.subnet"/>
                              <prop type="array<@VirtualNetworkTap_update>" name="virtualNetworkTaps" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.properties.virtualNetworkTaps">
                                <item type="@VirtualNetworkTap_update"/>
                              </prop>
                            </prop>
                            <prop type="string" name="type" arg="@VirtualNetworkTap_update.properties.destinationNetworkInterfaceIPConfiguration.type"/>
                          </prop>
                          <prop type="integer" name="destinationPort" arg="@VirtualNetworkTap_update.properties.destinationPort"/>
                        </prop>
                        <prop type="object" name="tags" arg="@VirtualNetworkTap_update.tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="string" name="type" arg="$parameters.properties.destinationNetworkInterfaceIPConfiguration.type"/>
                </prop>
                <prop type="integer" name="destinationPort" arg="$parameters.properties.destinationPort"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="VirtualNetworkTaps_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkTaps/{tapName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="tapName" arg="$Path.tapName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-03-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@VirtualNetworkTap_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
