{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.apicenter/services/{}/workspaces/{}/importapisource", "version": "2024-12-01-preview", "swagger": "mgmt-plane/apicenter/ResourceProviders/Microsoft.ApiCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpQ2VudGVyL3NlcnZpY2VzL3tzZXJ2aWNlTmFtZX0vd29ya3NwYWNlcy97d29ya3NwYWNlTmFtZX0vaW1wb3J0QXBpU291cmNl/V/MjAyNC0xMi0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "apic", "commands": [{"name": "import", "version": "2024-12-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.apicenter/services/{}/workspaces/{}/importapisource", "version": "2024-12-01-preview", "swagger": "mgmt-plane/apicenter/ResourceProviders/Microsoft.ApiCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpQ2VudGVyL3NlcnZpY2VzL3tzZXJ2aWNlTmFtZX0vd29ya3NwYWNlcy97d29ya3NwYWNlTmFtZX0vaW1wb3J0QXBpU291cmNl/V/MjAyNC0xMi0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "string", "var": "$Path.serviceName", "options": ["n", "service-name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of Azure API Center service."}, "format": {"pattern": "^[a-zA-Z0-9-]{3,90}$", "maxLength": 90, "minLength": 1}}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.workspaceName", "options": ["workspace-name"], "required": true, "idPart": "child_name_1", "help": {"short": "The name of the workspace."}, "format": {"pattern": "^[a-zA-Z0-9-]{3,90}$", "maxLength": 90, "minLength": 1}}, {"type": "object", "var": "$body.amazonApiGatewaySource", "options": ["amazon-api-gateway-source"], "group": "", "help": {"short": "API source configuration for Amazon API Gateway."}, "args": [{"type": "string", "var": "$body.amazonApiGatewaySource.accessKey", "options": ["access-key"], "required": true, "help": {"short": "Amazon API Gateway Access Key. Must be an Azure Key Vault secret reference."}}, {"type": "ResourceId", "var": "$body.amazonApiGatewaySource.msiResourceId", "options": ["msi-resource-id"], "help": {"short": "(Optional) The resource ID of the managed identity that has access to the Azure Key Vault secrets."}}, {"type": "string", "var": "$body.amazonApiGatewaySource.regionName", "options": ["region-name"], "required": true, "help": {"short": "Amazon API Gateway Region (ex. us-east-2)."}}, {"type": "string", "var": "$body.amazonApiGatewaySource.secretAccessKey", "options": ["secret-access-key"], "required": true, "help": {"short": "Amazon API Gateway Secret Access Key. Must be an Azure Key Vault secret reference."}}]}, {"type": "string", "var": "$body.apiSourceType", "options": ["api-source-type"], "required": true, "group": "", "help": {"short": "API source type"}, "enum": {"items": [{"name": "AmazonApiGateway", "value": "AmazonApiGateway"}, {"name": "AzureApiManagement", "value": "AzureApiManagement"}]}}, {"type": "object", "var": "$body.azureApiManagementSource", "options": ["azure-api-management-source"], "group": "", "help": {"short": "API source configuration for Azure API Management."}, "args": [{"type": "ResourceId", "var": "$body.azureApiManagementSource.msiResourceId", "options": ["msi-resource-id"], "help": {"short": "(Optional) The resource ID of the managed identity that has access to the API Management instance."}}, {"type": "ResourceId", "var": "$body.azureApiManagementSource.resourceId", "options": ["resource-id"], "required": true, "help": {"short": "API Management service resource ID."}}]}, {"type": "string", "var": "$body.importSpecification", "options": ["import-specification"], "group": "", "help": {"short": "Indicates if the specification should be imported along with metadata."}, "default": {"value": "always"}, "enum": {"items": [{"name": "always", "value": "always"}, {"name": "never", "value": "never"}, {"name": "ondemand", "value": "ondemand"}]}}, {"type": "ResourceId", "var": "$body.targetEnvironmentId", "options": ["target-environment-id"], "group": "", "help": {"short": "The target environment resource ID."}}, {"type": "string", "var": "$body.targetLifecycleStage", "options": ["target-lifecycle-stage"], "group": "", "help": {"short": "The target lifecycle stage."}, "enum": {"items": [{"name": "deprecated", "value": "deprecated"}, {"name": "design", "value": "design"}, {"name": "development", "value": "development"}, {"name": "preview", "value": "preview"}, {"name": "production", "value": "production"}, {"name": "retired", "value": "retired"}, {"name": "testing", "value": "testing"}]}}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "Workspaces_ImportApiSource", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/importApiSource", "request": {"method": "post", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "serviceName", "arg": "$Path.serviceName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]{3,90}$", "maxLength": 90, "minLength": 1}}, {"type": "uuid", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "workspaceName", "arg": "$Path.workspaceName", "required": true, "format": {"pattern": "^[a-zA-Z0-9-]{3,90}$", "maxLength": 90, "minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-12-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "body", "required": true, "props": [{"type": "object", "name": "amazonApiGatewaySource", "arg": "$body.amazonApiGatewaySource", "props": [{"type": "string", "name": "accessKey", "arg": "$body.amazonApiGatewaySource.accessKey", "required": true}, {"type": "ResourceId", "name": "msiResourceId", "arg": "$body.amazonApiGatewaySource.msiResourceId"}, {"type": "string", "name": "regionName", "arg": "$body.amazonApiGatewaySource.regionName", "required": true}, {"type": "string", "name": "secretAccessKey", "arg": "$body.amazonApiGatewaySource.secretAccessKey", "required": true}]}, {"type": "string", "name": "apiSourceType", "arg": "$body.apiSourceType", "required": true, "enum": {"items": [{"value": "AmazonApiGateway"}, {"value": "AzureApiManagement"}]}}, {"type": "object", "name": "azureApiManagementSource", "arg": "$body.azureApiManagementSource", "props": [{"type": "ResourceId", "name": "msiResourceId", "arg": "$body.azureApiManagementSource.msiResourceId"}, {"type": "ResourceId", "name": "resourceId", "arg": "$body.azureApiManagementSource.resourceId", "required": true}]}, {"default": {"value": "ondemand"}, "type": "string", "name": "importSpecification", "arg": "$body.importSpecification", "enum": {"items": [{"value": "always"}, {"value": "never"}, {"value": "ondemand"}]}}, {"type": "ResourceId", "name": "targetEnvironmentId", "arg": "$body.targetEnvironmentId"}, {"type": "string", "name": "targetLifecycleStage", "arg": "$body.targetLifecycleStage", "enum": {"items": [{"value": "deprecated"}, {"value": "design"}, {"value": "development"}, {"value": "preview"}, {"value": "production"}, {"value": "retired"}, {"value": "testing"}]}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"type": "dateTime", "name": "endTime"}, {"type": "object", "name": "error", "props": [{"readOnly": true, "type": "array<object>", "name": "additionalInfo", "item": {"type": "object", "props": [{"readOnly": true, "type": "object", "name": "info"}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"readOnly": true, "type": "string", "name": "code"}, {"readOnly": true, "type": "array<@ErrorDetail_read>", "name": "details", "item": {"type": "@ErrorDetail_read"}, "identifiers": ["target", "message"]}, {"readOnly": true, "type": "string", "name": "message"}, {"readOnly": true, "type": "string", "name": "target"}], "cls": "ErrorDetail_read"}, {"type": "ResourceId", "name": "id"}, {"type": "string", "name": "name"}, {"type": "array<@OperationStatusResult_read>", "name": "operations", "item": {"type": "@OperationStatusResult_read"}}, {"type": "float", "name": "percentComplete", "format": {"maximum": 100.0, "minimum": 0.0}}, {"readOnly": true, "type": "ResourceId", "name": "resourceId"}, {"type": "dateTime", "name": "startTime"}, {"type": "string", "name": "status", "required": true}], "cls": "OperationStatusResult_read"}}}}, {"statusCode": [202], "header": {"items": [{"name": "Location"}, {"name": "Retry-After"}]}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}