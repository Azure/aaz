<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.apicenter/services/{}/workspaces/{}/importapisource" version="2024-12-01-preview" swagger="mgmt-plane/apicenter/ResourceProviders/Microsoft.ApiCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpQ2VudGVyL3NlcnZpY2VzL3tzZXJ2aWNlTmFtZX0vd29ya3NwYWNlcy97d29ya3NwYWNlTmFtZX0vaW1wb3J0QXBpU291cmNl/V/MjAyNC0xMi0wMS1wcmV2aWV3"/>
  <commandGroup name="apic">
    <command name="import" version="2024-12-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.apicenter/services/{}/workspaces/{}/importapisource" version="2024-12-01-preview" swagger="mgmt-plane/apicenter/ResourceProviders/Microsoft.ApiCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpQ2VudGVyL3NlcnZpY2VzL3tzZXJ2aWNlTmFtZX0vd29ya3NwYWNlcy97d29ya3NwYWNlTmFtZX0vaW1wb3J0QXBpU291cmNl/V/MjAyNC0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.serviceName" options="service-name n" required="True" group="" idPart="name">
          <help short="The name of Azure API Center service."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.workspaceName" options="workspace-name" required="True" idPart="child_name_1">
          <help short="The name of the workspace."/>
          <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
        </arg>
        <arg type="object" var="$body.amazonApiGatewaySource" options="amazon-api-gateway-source" group="">
          <help short="API source configuration for Amazon API Gateway."/>
          <arg type="string" var="$body.amazonApiGatewaySource.accessKey" options="access-key" required="True">
            <help short="Amazon API Gateway Access Key. Must be an Azure Key Vault secret reference."/>
          </arg>
          <arg type="ResourceId" var="$body.amazonApiGatewaySource.msiResourceId" options="msi-resource-id">
            <help short="(Optional) The resource ID of the managed identity that has access to the Azure Key Vault secrets."/>
          </arg>
          <arg type="string" var="$body.amazonApiGatewaySource.regionName" options="region-name" required="True">
            <help short="Amazon API Gateway Region (ex. us-east-2)."/>
          </arg>
          <arg type="string" var="$body.amazonApiGatewaySource.secretAccessKey" options="secret-access-key" required="True">
            <help short="Amazon API Gateway Secret Access Key. Must be an Azure Key Vault secret reference."/>
          </arg>
        </arg>
        <arg type="string" var="$body.apiSourceType" options="api-source-type" required="True" group="">
          <help short="API source type"/>
          <enum>
            <item name="AmazonApiGateway" value="&quot;AmazonApiGateway&quot;"/>
            <item name="AzureApiManagement" value="&quot;AzureApiManagement&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$body.azureApiManagementSource" options="azure-api-management-source" group="">
          <help short="API source configuration for Azure API Management."/>
          <arg type="ResourceId" var="$body.azureApiManagementSource.msiResourceId" options="msi-resource-id">
            <help short="(Optional) The resource ID of the managed identity that has access to the API Management instance."/>
          </arg>
          <arg type="ResourceId" var="$body.azureApiManagementSource.resourceId" options="resource-id" required="True">
            <help short="API Management service resource ID."/>
          </arg>
        </arg>
        <arg type="string" var="$body.importSpecification" options="import-specification" group="">
          <help short="Indicates if the specification should be imported along with metadata."/>
          <default value="&quot;always&quot;"/>
          <enum>
            <item name="always" value="&quot;always&quot;"/>
            <item name="never" value="&quot;never&quot;"/>
            <item name="ondemand" value="&quot;ondemand&quot;"/>
          </enum>
        </arg>
        <arg type="ResourceId" var="$body.targetEnvironmentId" options="target-environment-id" group="">
          <help short="The target environment resource ID."/>
        </arg>
        <arg type="string" var="$body.targetLifecycleStage" options="target-lifecycle-stage" group="">
          <help short="The target lifecycle stage."/>
          <enum>
            <item name="deprecated" value="&quot;deprecated&quot;"/>
            <item name="design" value="&quot;design&quot;"/>
            <item name="development" value="&quot;development&quot;"/>
            <item name="preview" value="&quot;preview&quot;"/>
            <item name="production" value="&quot;production&quot;"/>
            <item name="retired" value="&quot;retired&quot;"/>
            <item name="testing" value="&quot;testing&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="Workspaces_ImportApiSource">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}/workspaces/{workspaceName}/importApiSource">
          <request method="post">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="serviceName" arg="$Path.serviceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="workspaceName" arg="$Path.workspaceName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,90}$" maxLength="90" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="object" name="amazonApiGatewaySource" arg="$body.amazonApiGatewaySource">
                    <prop type="string" name="accessKey" arg="$body.amazonApiGatewaySource.accessKey" required="True"/>
                    <prop type="ResourceId" name="msiResourceId" arg="$body.amazonApiGatewaySource.msiResourceId"/>
                    <prop type="string" name="regionName" arg="$body.amazonApiGatewaySource.regionName" required="True"/>
                    <prop type="string" name="secretAccessKey" arg="$body.amazonApiGatewaySource.secretAccessKey" required="True"/>
                  </prop>
                  <prop type="string" name="apiSourceType" arg="$body.apiSourceType" required="True">
                    <enum>
                      <item value="&quot;AmazonApiGateway&quot;"/>
                      <item value="&quot;AzureApiManagement&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="azureApiManagementSource" arg="$body.azureApiManagementSource">
                    <prop type="ResourceId" name="msiResourceId" arg="$body.azureApiManagementSource.msiResourceId"/>
                    <prop type="ResourceId" name="resourceId" arg="$body.azureApiManagementSource.resourceId" required="True"/>
                  </prop>
                  <prop type="string" name="importSpecification" arg="$body.importSpecification">
                    <default value="&quot;ondemand&quot;"/>
                    <enum>
                      <item value="&quot;always&quot;"/>
                      <item value="&quot;never&quot;"/>
                      <item value="&quot;ondemand&quot;"/>
                    </enum>
                  </prop>
                  <prop type="ResourceId" name="targetEnvironmentId" arg="$body.targetEnvironmentId"/>
                  <prop type="string" name="targetLifecycleStage" arg="$body.targetLifecycleStage">
                    <enum>
                      <item value="&quot;deprecated&quot;"/>
                      <item value="&quot;design&quot;"/>
                      <item value="&quot;development&quot;"/>
                      <item value="&quot;preview&quot;"/>
                      <item value="&quot;production&quot;"/>
                      <item value="&quot;retired&quot;"/>
                      <item value="&quot;testing&quot;"/>
                    </enum>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="OperationStatusResult_read">
                  <prop type="dateTime" name="endTime"/>
                  <prop type="object" name="error" cls="ErrorDetail_read">
                    <prop readOnly="True" type="array<object>" name="additionalInfo">
                      <item type="object">
                        <prop readOnly="True" type="object" name="info"/>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="code"/>
                    <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                      <item type="@ErrorDetail_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="message"/>
                    <prop readOnly="True" type="string" name="target"/>
                  </prop>
                  <prop type="ResourceId" name="id"/>
                  <prop type="string" name="name"/>
                  <prop type="array<@OperationStatusResult_read>" name="operations">
                    <item type="@OperationStatusResult_read"/>
                  </prop>
                  <prop type="float" name="percentComplete">
                    <format maximum="100.0" minimum="0.0"/>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="resourceId"/>
                  <prop type="dateTime" name="startTime"/>
                  <prop type="string" name="status" required="True"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
