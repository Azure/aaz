{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}", "version": "2024-09-01-preview", "swagger": "mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNC0wOS0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "redisenterprise database", "commands": [{"name": "show", "version": "2024-09-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}", "version": "2024-09-01-preview", "swagger": "mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNC0wOS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.clusterName", "options": ["cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the RedisEnterprise cluster."}, "format": {"pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "var": "$Path.databaseName", "options": ["n", "name", "database-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The name of the database."}, "default": {"value": "default"}, "format": {"pattern": "^[A-Za-z0-9]{1,60}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Databases_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "name": "databaseName", "arg": "$Path.databaseName", "required": true, "format": {"pattern": "^[A-Za-z0-9]{1,60}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redisEnterprise/{}/databases/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessKeysAuthentication", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "clientProtocol", "enum": {"items": [{"value": "Encrypted"}, {"value": "Plaintext"}]}}, {"type": "string", "name": "clusteringPolicy", "enum": {"items": [{"value": "EnterpriseCluster"}, {"value": "OSSCluster"}]}}, {"type": "string", "name": "deferUpgrade", "enum": {"items": [{"value": "Deferred"}, {"value": "NotDeferred"}]}}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "AllKeysLFU"}, {"value": "AllKeysLRU"}, {"value": "AllKeysRandom"}, {"value": "NoEviction"}, {"value": "VolatileLFU"}, {"value": "VolatileLRU"}, {"value": "VolatileRandom"}, {"value": "VolatileTTL"}]}}, {"type": "object", "name": "geoReplication", "props": [{"type": "string", "name": "groupNickname"}, {"type": "array<object>", "name": "linkedDatabases", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "state", "enum": {"items": [{"value": "LinkFailed"}, {"value": "Linked"}, {"value": "Linking"}, {"value": "UnlinkFailed"}, {"value": "Unlinking"}]}}]}}]}, {"type": "array<object>", "name": "modules", "item": {"type": "object", "props": [{"type": "string", "name": "args"}, {"type": "string", "name": "name", "required": true}, {"readOnly": true, "type": "string", "name": "version"}]}, "identifiers": ["name"]}, {"type": "object", "name": "persistence", "props": [{"type": "boolean", "name": "aofEnabled"}, {"type": "string", "name": "aofFrequency", "enum": {"items": [{"value": "1s"}, {"value": "always"}]}}, {"type": "boolean", "name": "rdbEnabled"}, {"type": "string", "name": "rdbFrequency", "enum": {"items": [{"value": "12h"}, {"value": "1h"}, {"value": "6h"}]}}]}, {"type": "integer32", "name": "port"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"readOnly": true, "type": "string", "name": "redisVersion"}, {"readOnly": true, "type": "string", "name": "resourceState", "enum": {"items": [{"value": "CreateFailed"}, {"value": "Creating"}, {"value": "DeleteFailed"}, {"value": "Deleting"}, {"value": "DisableFailed"}, {"value": "Disabled"}, {"value": "Disabling"}, {"value": "EnableFailed"}, {"value": "Enabling"}, {"value": "Running"}, {"value": "Scaling"}, {"value": "ScalingFailed"}, {"value": "UpdateFailed"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-09-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}", "version": "2024-09-01-preview", "swagger": "mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNC0wOS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.clusterName", "options": ["cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the RedisEnterprise cluster."}, "format": {"pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "var": "$Path.databaseName", "options": ["n", "name", "database-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The name of the database."}, "default": {"value": "default"}, "format": {"pattern": "^[A-Za-z0-9]{1,60}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "Databases_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "name": "databaseName", "arg": "$Path.databaseName", "required": true, "format": {"pattern": "^[A-Za-z0-9]{1,60}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202], "header": {"items": [{"name": "Azure-AsyncOperation"}, {"name": "Location"}]}}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2024-09-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}", "version": "2024-09-01-preview", "swagger": "mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNC0wOS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.clusterName", "options": ["cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the RedisEnterprise cluster."}, "format": {"pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "var": "$Path.databaseName", "options": ["n", "name", "database-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The name of the database."}, "default": {"value": "default"}, "format": {"pattern": "^[A-Za-z0-9]{1,60}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "GeoReplication", "args": [{"type": "string", "var": "$parameters.properties.geoReplication.groupNickname", "options": ["group-nickname"], "group": "GeoReplication", "help": {"short": "Name for the group of linked database resources"}}, {"type": "array<object>", "var": "$parameters.properties.geoReplication.linkedDatabases", "options": ["linkeddatabase"], "group": "GeoReplication", "help": {"short": "List of database resources to link with this database"}, "item": {"type": "object", "args": [{"type": "ResourceId", "var": "$parameters.properties.geoReplication.linkedDatabases[].id", "options": ["id"], "help": {"short": "Resource ID of a database resource to link with this database."}}]}, "singularOptions": ["linked-database", "linked-databases"]}]}, {"name": "Properties", "args": [{"type": "string", "var": "$parameters.properties.accessKeysAuthentication", "options": ["access-keys-auth", "access-keys-authentication"], "stage": "Preview", "group": "Properties", "help": {"short": "Access database using keys - default is enabled. This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"type": "string", "var": "$parameters.properties.clientProtocol", "options": ["client-protocol"], "group": "Properties", "help": {"short": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted."}, "enum": {"items": [{"name": "Encrypted", "value": "Encrypted"}, {"name": "Plaintext", "value": "Plaintext"}]}}, {"type": "string", "var": "$parameters.properties.clusteringPolicy", "options": ["clustering-policy"], "group": "Properties", "help": {"short": "Clustering policy - default is OSSCluster. Specified at create time."}, "enum": {"items": [{"name": "EnterpriseCluster", "value": "EnterpriseCluster"}, {"name": "OSSCluster", "value": "OSSCluster"}]}}, {"type": "string", "var": "$parameters.properties.deferUpgrade", "options": ["defer-upgrade"], "group": "Properties", "help": {"short": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade"}, "enum": {"items": [{"name": "Deferred", "value": "Deferred"}, {"name": "NotDeferred", "value": "NotDeferred"}]}}, {"type": "string", "var": "$parameters.properties.evictionPolicy", "options": ["eviction-policy"], "group": "Properties", "help": {"short": "Redis eviction policy - default is VolatileLRU"}, "enum": {"items": [{"name": "AllKeysLFU", "value": "AllKeysLFU"}, {"name": "AllKeysLRU", "value": "AllKeysLRU"}, {"name": "AllKeysRandom", "value": "AllKeysRandom"}, {"name": "NoEviction", "value": "NoEviction"}, {"name": "VolatileLFU", "value": "VolatileLFU"}, {"name": "VolatileLRU", "value": "VolatileLRU"}, {"name": "VolatileRandom", "value": "VolatileRandom"}, {"name": "VolatileTTL", "value": "VolatileTTL"}]}}, {"type": "array<object>", "var": "$parameters.properties.modules", "options": ["mods"], "group": "Properties", "help": {"short": "Optional set of redis modules to enable in this database - modules can only be added at creation time."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.modules[].args", "options": ["args"], "help": {"short": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."}}, {"type": "string", "var": "$parameters.properties.modules[].name", "options": ["name"], "required": true, "help": {"short": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"}}]}, "singularOptions": ["module", "modules"]}, {"type": "object", "var": "$parameters.properties.persistence", "options": ["persistence"], "group": "Properties", "help": {"short": "Persistence settings"}, "args": [{"type": "boolean", "var": "$parameters.properties.persistence.aofEnabled", "options": ["aof-enabled"], "help": {"short": "Sets whether AOF is enabled."}}, {"type": "string", "var": "$parameters.properties.persistence.aofFrequency", "options": ["aof-frequency"], "help": {"short": "Sets the frequency at which data is written to disk."}, "enum": {"items": [{"name": "1s", "value": "1s"}, {"name": "always", "value": "always"}]}}, {"type": "boolean", "var": "$parameters.properties.persistence.rdbEnabled", "options": ["rdb-enabled"], "help": {"short": "Sets whether RDB is enabled."}}, {"type": "string", "var": "$parameters.properties.persistence.rdbFrequency", "options": ["rdb-frequency"], "help": {"short": "Sets the frequency at which a snapshot of the database is created."}, "enum": {"items": [{"name": "12h", "value": "12h"}, {"name": "1h", "value": "1h"}, {"name": "6h", "value": "6h"}]}}]}, {"type": "integer32", "var": "$parameters.properties.port", "options": ["port"], "group": "Properties", "help": {"short": "TCP port of the database endpoint. Specified at create time. Defaults to an available port."}}]}], "operations": [{"longRunning": {"finalStateVia": "original-uri"}, "operationId": "Databases_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "name": "databaseName", "arg": "$Path.databaseName", "required": true, "format": {"pattern": "^[A-Za-z0-9]{1,60}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessKeysAuthentication", "arg": "$parameters.properties.accessKeysAuthentication", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "clientProtocol", "arg": "$parameters.properties.clientProtocol", "enum": {"items": [{"value": "Encrypted"}, {"value": "Plaintext"}]}}, {"type": "string", "name": "clusteringPolicy", "arg": "$parameters.properties.clusteringPolicy", "enum": {"items": [{"value": "EnterpriseCluster"}, {"value": "OSSCluster"}]}}, {"type": "string", "name": "deferUpgrade", "arg": "$parameters.properties.deferUpgrade", "enum": {"items": [{"value": "Deferred"}, {"value": "NotDeferred"}]}}, {"type": "string", "name": "evictionPolicy", "arg": "$parameters.properties.evictionPolicy", "enum": {"items": [{"value": "AllKeysLFU"}, {"value": "AllKeysLRU"}, {"value": "AllKeysRandom"}, {"value": "NoEviction"}, {"value": "VolatileLFU"}, {"value": "VolatileLRU"}, {"value": "VolatileRandom"}, {"value": "VolatileTTL"}]}}, {"type": "object", "name": "geoReplication", "props": [{"type": "string", "name": "groupNickname", "arg": "$parameters.properties.geoReplication.groupNickname"}, {"type": "array<object>", "name": "linkedDatabases", "arg": "$parameters.properties.geoReplication.linkedDatabases", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "arg": "$parameters.properties.geoReplication.linkedDatabases[].id"}]}}]}, {"type": "array<object>", "name": "modules", "arg": "$parameters.properties.modules", "item": {"type": "object", "props": [{"type": "string", "name": "args", "arg": "$parameters.properties.modules[].args"}, {"type": "string", "name": "name", "arg": "$parameters.properties.modules[].name", "required": true}]}, "identifiers": ["name"]}, {"type": "object", "name": "persistence", "arg": "$parameters.properties.persistence", "props": [{"type": "boolean", "name": "aofEnabled", "arg": "$parameters.properties.persistence.aofEnabled"}, {"type": "string", "name": "aofFrequency", "arg": "$parameters.properties.persistence.aofFrequency", "enum": {"items": [{"value": "1s"}, {"value": "always"}]}}, {"type": "boolean", "name": "rdbEnabled", "arg": "$parameters.properties.persistence.rdbEnabled"}, {"type": "string", "name": "rdbFrequency", "arg": "$parameters.properties.persistence.rdbFrequency", "enum": {"items": [{"value": "12h"}, {"value": "1h"}, {"value": "6h"}]}}]}, {"type": "integer32", "name": "port", "arg": "$parameters.properties.port"}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redisEnterprise/{}/databases/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessKeysAuthentication", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "clientProtocol", "enum": {"items": [{"value": "Encrypted"}, {"value": "Plaintext"}]}}, {"type": "string", "name": "clusteringPolicy", "enum": {"items": [{"value": "EnterpriseCluster"}, {"value": "OSSCluster"}]}}, {"type": "string", "name": "deferUpgrade", "enum": {"items": [{"value": "Deferred"}, {"value": "NotDeferred"}]}}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "AllKeysLFU"}, {"value": "AllKeysLRU"}, {"value": "AllKeysRandom"}, {"value": "NoEviction"}, {"value": "VolatileLFU"}, {"value": "VolatileLRU"}, {"value": "VolatileRandom"}, {"value": "VolatileTTL"}]}}, {"type": "object", "name": "geoReplication", "props": [{"type": "string", "name": "groupNickname"}, {"type": "array<object>", "name": "linkedDatabases", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "state", "enum": {"items": [{"value": "LinkFailed"}, {"value": "Linked"}, {"value": "Linking"}, {"value": "UnlinkFailed"}, {"value": "Unlinking"}]}}]}}]}, {"type": "array<object>", "name": "modules", "item": {"type": "object", "props": [{"type": "string", "name": "args"}, {"type": "string", "name": "name", "required": true}, {"readOnly": true, "type": "string", "name": "version"}]}, "identifiers": ["name"]}, {"type": "object", "name": "persistence", "props": [{"type": "boolean", "name": "aofEnabled"}, {"type": "string", "name": "aofFrequency", "enum": {"items": [{"value": "1s"}, {"value": "always"}]}}, {"type": "boolean", "name": "rdbEnabled"}, {"type": "string", "name": "rdbFrequency", "enum": {"items": [{"value": "12h"}, {"value": "1h"}, {"value": "6h"}]}}]}, {"type": "integer32", "name": "port"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"readOnly": true, "type": "string", "name": "redisVersion"}, {"readOnly": true, "type": "string", "name": "resourceState", "enum": {"items": [{"value": "CreateFailed"}, {"value": "Creating"}, {"value": "DeleteFailed"}, {"value": "Deleting"}, {"value": "DisableFailed"}, {"value": "Disabled"}, {"value": "Disabling"}, {"value": "EnableFailed"}, {"value": "Enabling"}, {"value": "Running"}, {"value": "Scaling"}, {"value": "ScalingFailed"}, {"value": "UpdateFailed"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2024-09-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}", "version": "2024-09-01-preview", "swagger": "mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNC0wOS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.clusterName", "options": ["cluster-name"], "required": true, "idPart": "name", "help": {"short": "The name of the RedisEnterprise cluster."}, "format": {"pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "var": "$Path.databaseName", "options": ["n", "name", "database-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The name of the database."}, "default": {"value": "default"}, "format": {"pattern": "^[A-Za-z0-9]{1,60}$"}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Properties", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.accessKeysAuthentication", "options": ["access-keys-auth", "access-keys-authentication"], "stage": "Preview", "group": "Properties", "help": {"short": "Access database using keys - default is enabled. This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created."}, "enum": {"items": [{"name": "Disabled", "value": "Disabled"}, {"name": "Enabled", "value": "Enabled"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.clientProtocol", "options": ["client-protocol"], "group": "Properties", "help": {"short": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted."}, "enum": {"items": [{"name": "Encrypted", "value": "Encrypted"}, {"name": "Plaintext", "value": "Plaintext"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.deferUpgrade", "options": ["defer-upgrade"], "group": "Properties", "help": {"short": "Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade"}, "enum": {"items": [{"name": "Deferred", "value": "Deferred"}, {"name": "NotDeferred", "value": "NotDeferred"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.evictionPolicy", "options": ["eviction-policy"], "group": "Properties", "help": {"short": "Redis eviction policy - default is VolatileLRU"}, "enum": {"items": [{"name": "AllKeysLFU", "value": "AllKeysLFU"}, {"name": "AllKeysLRU", "value": "AllKeysLRU"}, {"name": "AllKeysRandom", "value": "AllKeysRandom"}, {"name": "NoEviction", "value": "NoEviction"}, {"name": "VolatileLFU", "value": "VolatileLFU"}, {"name": "VolatileLRU", "value": "VolatileLRU"}, {"name": "VolatileRandom", "value": "VolatileRandom"}, {"name": "VolatileTTL", "value": "VolatileTTL"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.persistence", "options": ["persistence"], "group": "Properties", "help": {"short": "Persistence settings"}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.persistence.aofEnabled", "options": ["aof-enabled"], "help": {"short": "Sets whether AOF is enabled."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.persistence.aofFrequency", "options": ["aof-frequency"], "help": {"short": "Sets the frequency at which data is written to disk."}, "enum": {"items": [{"name": "1s", "value": "1s"}, {"name": "always", "value": "always"}]}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.persistence.rdbEnabled", "options": ["rdb-enabled"], "help": {"short": "Sets whether RDB is enabled."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.persistence.rdbFrequency", "options": ["rdb-frequency"], "help": {"short": "Sets the frequency at which a snapshot of the database is created."}, "enum": {"items": [{"name": "12h", "value": "12h"}, {"name": "1h", "value": "1h"}, {"name": "6h", "value": "6h"}]}}]}]}], "operations": [{"operationId": "Databases_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "name": "databaseName", "arg": "$Path.databaseName", "required": true, "format": {"pattern": "^[A-Za-z0-9]{1,60}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redisEnterprise/{}/databases/{}"}}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessKeysAuthentication", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "clientProtocol", "enum": {"items": [{"value": "Encrypted"}, {"value": "Plaintext"}]}}, {"type": "string", "name": "clusteringPolicy", "enum": {"items": [{"value": "EnterpriseCluster"}, {"value": "OSSCluster"}]}}, {"type": "string", "name": "deferUpgrade", "enum": {"items": [{"value": "Deferred"}, {"value": "NotDeferred"}]}}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "AllKeysLFU"}, {"value": "AllKeysLRU"}, {"value": "AllKeysRandom"}, {"value": "NoEviction"}, {"value": "VolatileLFU"}, {"value": "VolatileLRU"}, {"value": "VolatileRandom"}, {"value": "VolatileTTL"}]}}, {"type": "object", "name": "geoReplication", "props": [{"type": "string", "name": "groupNickname"}, {"type": "array<object>", "name": "linkedDatabases", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id"}, {"readOnly": true, "type": "string", "name": "state", "enum": {"items": [{"value": "LinkFailed"}, {"value": "Linked"}, {"value": "Linking"}, {"value": "UnlinkFailed"}, {"value": "Unlinking"}]}}]}}]}, {"type": "array<object>", "name": "modules", "item": {"type": "object", "props": [{"type": "string", "name": "args"}, {"type": "string", "name": "name", "required": true}, {"readOnly": true, "type": "string", "name": "version"}]}, "identifiers": ["name"]}, {"type": "object", "name": "persistence", "props": [{"type": "boolean", "name": "aofEnabled"}, {"type": "string", "name": "aofFrequency", "enum": {"items": [{"value": "1s"}, {"value": "always"}]}}, {"type": "boolean", "name": "rdbEnabled"}, {"type": "string", "name": "rdbFrequency", "enum": {"items": [{"value": "12h"}, {"value": "1h"}, {"value": "6h"}]}}]}, {"type": "integer32", "name": "port"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Canceled"}, {"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"readOnly": true, "type": "string", "name": "redisVersion"}, {"readOnly": true, "type": "string", "name": "resourceState", "enum": {"items": [{"value": "CreateFailed"}, {"value": "Creating"}, {"value": "DeleteFailed"}, {"value": "Deleting"}, {"value": "DisableFailed"}, {"value": "Disabled"}, {"value": "Disabling"}, {"value": "EnableFailed"}, {"value": "Enabling"}, {"value": "Running"}, {"value": "Scaling"}, {"value": "ScalingFailed"}, {"value": "UpdateFailed"}, {"value": "Updating"}]}}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "Database_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "accessKeysAuthentication", "arg": "$parameters.properties.accessKeysAuthentication", "enum": {"items": [{"value": "Disabled"}, {"value": "Enabled"}]}}, {"type": "string", "name": "clientProtocol", "arg": "$parameters.properties.clientProtocol", "enum": {"items": [{"value": "Encrypted"}, {"value": "Plaintext"}]}}, {"type": "string", "name": "deferUpgrade", "arg": "$parameters.properties.deferUpgrade", "enum": {"items": [{"value": "Deferred"}, {"value": "NotDeferred"}]}}, {"type": "string", "name": "evictionPolicy", "arg": "$parameters.properties.evictionPolicy", "enum": {"items": [{"value": "AllKeysLFU"}, {"value": "AllKeysLRU"}, {"value": "AllKeysRandom"}, {"value": "NoEviction"}, {"value": "VolatileLFU"}, {"value": "VolatileLRU"}, {"value": "VolatileRandom"}, {"value": "VolatileTTL"}]}}, {"type": "object", "name": "persistence", "arg": "$parameters.properties.persistence", "props": [{"type": "boolean", "name": "aofEnabled", "arg": "$parameters.properties.persistence.aofEnabled"}, {"type": "string", "name": "aofFrequency", "arg": "$parameters.properties.persistence.aofFrequency", "enum": {"items": [{"value": "1s"}, {"value": "always"}]}}, {"type": "boolean", "name": "rdbEnabled", "arg": "$parameters.properties.persistence.rdbEnabled"}, {"type": "string", "name": "rdbFrequency", "arg": "$parameters.properties.persistence.rdbFrequency", "enum": {"items": [{"value": "12h"}, {"value": "1h"}, {"value": "6h"}]}}]}], "clientFlatten": true}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "original-uri"}, "operationId": "Databases_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "clusterName", "arg": "$Path.clusterName", "required": true, "format": {"pattern": "^[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"}}, {"type": "string", "name": "databaseName", "arg": "$Path.databaseName", "required": true, "format": {"pattern": "^[A-Za-z0-9]{1,60}$"}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true, "format": {"minLength": 1}}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "format": {"minLength": 1}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@Database_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}