<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}" version="2025-05-01-preview" swagger="mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNS0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="redisenterprise database">
    <command name="show" version="2025-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}" version="2025-05-01-preview" swagger="mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNS0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the RedisEnterprise cluster."/>
          <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="string" var="$Path.databaseName" options="database-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the database."/>
          <default value="&quot;default&quot;"/>
          <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Databases_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}">
          <request method="get">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="databaseName" arg="$Path.databaseName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redisEnterprise/{}/databases/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="accessKeysAuthentication">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="clientProtocol">
                      <enum>
                        <item value="&quot;Encrypted&quot;"/>
                        <item value="&quot;Plaintext&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="clusteringPolicy">
                      <enum>
                        <item value="&quot;EnterpriseCluster&quot;"/>
                        <item value="&quot;NoCluster&quot;"/>
                        <item value="&quot;OSSCluster&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deferUpgrade">
                      <enum>
                        <item value="&quot;Deferred&quot;"/>
                        <item value="&quot;NotDeferred&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="evictionPolicy">
                      <enum>
                        <item value="&quot;AllKeysLFU&quot;"/>
                        <item value="&quot;AllKeysLRU&quot;"/>
                        <item value="&quot;AllKeysRandom&quot;"/>
                        <item value="&quot;NoEviction&quot;"/>
                        <item value="&quot;VolatileLFU&quot;"/>
                        <item value="&quot;VolatileLRU&quot;"/>
                        <item value="&quot;VolatileRandom&quot;"/>
                        <item value="&quot;VolatileTTL&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="geoReplication">
                      <prop type="string" name="groupNickname"/>
                      <prop type="array<object>" name="linkedDatabases">
                        <item type="object">
                          <prop type="ResourceId" name="id"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;LinkFailed&quot;"/>
                              <item value="&quot;Linked&quot;"/>
                              <item value="&quot;Linking&quot;"/>
                              <item value="&quot;UnlinkFailed&quot;"/>
                              <item value="&quot;Unlinking&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="modules" identifiers="name">
                      <item type="object">
                        <prop type="string" name="args"/>
                        <prop type="string" name="name" required="True"/>
                        <prop readOnly="True" type="string" name="version"/>
                      </item>
                    </prop>
                    <prop type="object" name="persistence">
                      <prop type="boolean" name="aofEnabled"/>
                      <prop type="string" name="aofFrequency">
                        <enum>
                          <item value="&quot;1s&quot;"/>
                          <item value="&quot;always&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="rdbEnabled"/>
                      <prop type="string" name="rdbFrequency">
                        <enum>
                          <item value="&quot;12h&quot;"/>
                          <item value="&quot;1h&quot;"/>
                          <item value="&quot;6h&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="port"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="redisVersion"/>
                    <prop readOnly="True" type="string" name="resourceState">
                      <enum>
                        <item value="&quot;CreateFailed&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;DeleteFailed&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;DisableFailed&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Disabling&quot;"/>
                        <item value="&quot;EnableFailed&quot;"/>
                        <item value="&quot;Enabling&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Scaling&quot;"/>
                        <item value="&quot;ScalingFailed&quot;"/>
                        <item value="&quot;UpdateFailed&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-05-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}" version="2025-05-01-preview" swagger="mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNS0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the RedisEnterprise cluster."/>
          <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="string" var="$Path.databaseName" options="database-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the database."/>
          <default value="&quot;default&quot;"/>
          <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Databases_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}">
          <request method="delete">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="databaseName" arg="$Path.databaseName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Azure-AsyncOperation"/>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2025-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}" version="2025-05-01-preview" swagger="mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNS0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the RedisEnterprise cluster."/>
          <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="string" var="$Path.databaseName" options="database-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the database."/>
          <default value="&quot;default&quot;"/>
          <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="GeoReplication">
        <arg type="string" var="$parameters.properties.geoReplication.groupNickname" options="group-nickname" group="GeoReplication">
          <help short="Name for the group of linked database resources"/>
        </arg>
        <arg type="array<object>" var="$parameters.properties.geoReplication.linkedDatabases" options="linkeddatabase" group="GeoReplication" singularOptions="linked-databases linked-database">
          <help short="List of database resources to link with this database"/>
          <item type="object">
            <arg type="ResourceId" var="$parameters.properties.geoReplication.linkedDatabases[].id" options="id">
              <help short="Resource ID of a database resource to link with this database."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.accessKeysAuthentication" options="access-keys-authentication access-keys-auth" group="Properties">
          <help short="Access database using keys - default is enabled. This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.clientProtocol" options="client-protocol" group="Properties">
          <help short="Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted."/>
          <enum>
            <item name="Encrypted" value="&quot;Encrypted&quot;"/>
            <item name="Plaintext" value="&quot;Plaintext&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.clusteringPolicy" options="clustering-policy" group="Properties">
          <help short="Clustering policy - default is OSSCluster. Specified at create time."/>
          <enum>
            <item name="EnterpriseCluster" value="&quot;EnterpriseCluster&quot;"/>
            <item name="NoCluster" value="&quot;NoCluster&quot;"/>
            <item name="OSSCluster" value="&quot;OSSCluster&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.deferUpgrade" options="defer-upgrade" group="Properties">
          <help short="Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade"/>
          <enum>
            <item name="Deferred" value="&quot;Deferred&quot;"/>
            <item name="NotDeferred" value="&quot;NotDeferred&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.evictionPolicy" options="eviction-policy" group="Properties">
          <help short="Redis eviction policy - default is VolatileLRU"/>
          <enum>
            <item name="AllKeysLFU" value="&quot;AllKeysLFU&quot;"/>
            <item name="AllKeysLRU" value="&quot;AllKeysLRU&quot;"/>
            <item name="AllKeysRandom" value="&quot;AllKeysRandom&quot;"/>
            <item name="NoEviction" value="&quot;NoEviction&quot;"/>
            <item name="VolatileLFU" value="&quot;VolatileLFU&quot;"/>
            <item name="VolatileLRU" value="&quot;VolatileLRU&quot;"/>
            <item name="VolatileRandom" value="&quot;VolatileRandom&quot;"/>
            <item name="VolatileTTL" value="&quot;VolatileTTL&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$parameters.properties.modules" options="mods" group="Properties" singularOptions="modules module">
          <help short="Optional set of redis modules to enable in this database - modules can only be added at creation time."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.modules[].args" options="args">
              <help short="Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'."/>
            </arg>
            <arg type="string" var="$parameters.properties.modules[].name" options="name" required="True">
              <help short="The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'"/>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.persistence" options="persistence" group="Properties">
          <help short="Persistence settings"/>
          <arg type="boolean" var="$parameters.properties.persistence.aofEnabled" options="aof-enabled">
            <help short="Sets whether AOF is enabled."/>
          </arg>
          <arg type="string" var="$parameters.properties.persistence.aofFrequency" options="aof-frequency">
            <help short="Sets the frequency at which data is written to disk."/>
            <enum>
              <item name="1s" value="&quot;1s&quot;"/>
              <item name="always" value="&quot;always&quot;"/>
            </enum>
          </arg>
          <arg type="boolean" var="$parameters.properties.persistence.rdbEnabled" options="rdb-enabled">
            <help short="Sets whether RDB is enabled."/>
          </arg>
          <arg type="string" var="$parameters.properties.persistence.rdbFrequency" options="rdb-frequency">
            <help short="Sets the frequency at which a snapshot of the database is created."/>
            <enum>
              <item name="12h" value="&quot;12h&quot;"/>
              <item name="1h" value="&quot;1h&quot;"/>
              <item name="6h" value="&quot;6h&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="integer32" var="$parameters.properties.port" options="port" group="Properties">
          <help short="TCP port of the database endpoint. Specified at create time. Defaults to an available port."/>
        </arg>
      </argGroup>
      <operation operationId="Databases_Create">
        <longRunning finalStateVia="original-uri"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}">
          <request method="put">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="databaseName" arg="$Path.databaseName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="accessKeysAuthentication" arg="$parameters.properties.accessKeysAuthentication">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="clientProtocol" arg="$parameters.properties.clientProtocol">
                      <enum>
                        <item value="&quot;Encrypted&quot;"/>
                        <item value="&quot;Plaintext&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="clusteringPolicy" arg="$parameters.properties.clusteringPolicy">
                      <enum>
                        <item value="&quot;EnterpriseCluster&quot;"/>
                        <item value="&quot;NoCluster&quot;"/>
                        <item value="&quot;OSSCluster&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deferUpgrade" arg="$parameters.properties.deferUpgrade">
                      <enum>
                        <item value="&quot;Deferred&quot;"/>
                        <item value="&quot;NotDeferred&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="evictionPolicy" arg="$parameters.properties.evictionPolicy">
                      <enum>
                        <item value="&quot;AllKeysLFU&quot;"/>
                        <item value="&quot;AllKeysLRU&quot;"/>
                        <item value="&quot;AllKeysRandom&quot;"/>
                        <item value="&quot;NoEviction&quot;"/>
                        <item value="&quot;VolatileLFU&quot;"/>
                        <item value="&quot;VolatileLRU&quot;"/>
                        <item value="&quot;VolatileRandom&quot;"/>
                        <item value="&quot;VolatileTTL&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="geoReplication">
                      <prop type="string" name="groupNickname" arg="$parameters.properties.geoReplication.groupNickname"/>
                      <prop type="array<object>" name="linkedDatabases" arg="$parameters.properties.geoReplication.linkedDatabases">
                        <item type="object">
                          <prop type="ResourceId" name="id" arg="$parameters.properties.geoReplication.linkedDatabases[].id"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="modules" arg="$parameters.properties.modules" identifiers="name">
                      <item type="object">
                        <prop type="string" name="args" arg="$parameters.properties.modules[].args"/>
                        <prop type="string" name="name" arg="$parameters.properties.modules[].name" required="True"/>
                      </item>
                    </prop>
                    <prop type="object" name="persistence" arg="$parameters.properties.persistence">
                      <prop type="boolean" name="aofEnabled" arg="$parameters.properties.persistence.aofEnabled"/>
                      <prop type="string" name="aofFrequency" arg="$parameters.properties.persistence.aofFrequency">
                        <enum>
                          <item value="&quot;1s&quot;"/>
                          <item value="&quot;always&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="rdbEnabled" arg="$parameters.properties.persistence.rdbEnabled"/>
                      <prop type="string" name="rdbFrequency" arg="$parameters.properties.persistence.rdbFrequency">
                        <enum>
                          <item value="&quot;12h&quot;"/>
                          <item value="&quot;1h&quot;"/>
                          <item value="&quot;6h&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="port" arg="$parameters.properties.port"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redisEnterprise/{}/databases/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="accessKeysAuthentication">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="clientProtocol">
                      <enum>
                        <item value="&quot;Encrypted&quot;"/>
                        <item value="&quot;Plaintext&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="clusteringPolicy">
                      <enum>
                        <item value="&quot;EnterpriseCluster&quot;"/>
                        <item value="&quot;NoCluster&quot;"/>
                        <item value="&quot;OSSCluster&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deferUpgrade">
                      <enum>
                        <item value="&quot;Deferred&quot;"/>
                        <item value="&quot;NotDeferred&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="evictionPolicy">
                      <enum>
                        <item value="&quot;AllKeysLFU&quot;"/>
                        <item value="&quot;AllKeysLRU&quot;"/>
                        <item value="&quot;AllKeysRandom&quot;"/>
                        <item value="&quot;NoEviction&quot;"/>
                        <item value="&quot;VolatileLFU&quot;"/>
                        <item value="&quot;VolatileLRU&quot;"/>
                        <item value="&quot;VolatileRandom&quot;"/>
                        <item value="&quot;VolatileTTL&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="geoReplication">
                      <prop type="string" name="groupNickname"/>
                      <prop type="array<object>" name="linkedDatabases">
                        <item type="object">
                          <prop type="ResourceId" name="id"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;LinkFailed&quot;"/>
                              <item value="&quot;Linked&quot;"/>
                              <item value="&quot;Linking&quot;"/>
                              <item value="&quot;UnlinkFailed&quot;"/>
                              <item value="&quot;Unlinking&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="modules" identifiers="name">
                      <item type="object">
                        <prop type="string" name="args"/>
                        <prop type="string" name="name" required="True"/>
                        <prop readOnly="True" type="string" name="version"/>
                      </item>
                    </prop>
                    <prop type="object" name="persistence">
                      <prop type="boolean" name="aofEnabled"/>
                      <prop type="string" name="aofFrequency">
                        <enum>
                          <item value="&quot;1s&quot;"/>
                          <item value="&quot;always&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="rdbEnabled"/>
                      <prop type="string" name="rdbFrequency">
                        <enum>
                          <item value="&quot;12h&quot;"/>
                          <item value="&quot;1h&quot;"/>
                          <item value="&quot;6h&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="port"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="redisVersion"/>
                    <prop readOnly="True" type="string" name="resourceState">
                      <enum>
                        <item value="&quot;CreateFailed&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;DeleteFailed&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;DisableFailed&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Disabling&quot;"/>
                        <item value="&quot;EnableFailed&quot;"/>
                        <item value="&quot;Enabling&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Scaling&quot;"/>
                        <item value="&quot;ScalingFailed&quot;"/>
                        <item value="&quot;UpdateFailed&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-05-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cache/redisenterprise/{}/databases/{}" version="2025-05-01-preview" swagger="mgmt-plane/redisenterprise/ResourceProviders/Microsoft.Cache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2FjaGUvcmVkaXNFbnRlcnByaXNlL3tjbHVzdGVyTmFtZX0vZGF0YWJhc2VzL3tkYXRhYmFzZU5hbWV9/V/MjAyNS0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="name">
          <help short="The name of the RedisEnterprise cluster."/>
          <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="string" var="$Path.databaseName" options="database-name name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the database."/>
          <default value="&quot;default&quot;"/>
          <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.accessKeysAuthentication" options="access-keys-authentication access-keys-auth" group="Properties">
          <help short="Access database using keys - default is enabled. This property can be Enabled/Disabled to allow or deny access with the current access keys. Can be updated even after database is created."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.clientProtocol" options="client-protocol" group="Properties">
          <help short="Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted."/>
          <enum>
            <item name="Encrypted" value="&quot;Encrypted&quot;"/>
            <item name="Plaintext" value="&quot;Plaintext&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.clusteringPolicy" options="clustering-policy" group="Properties">
          <help short="Clustering policy - default is OSSCluster. This property can be updated only if the current value is NoCluster. If the value is OSSCluster or EnterpriseCluster, it cannot be updated without deleting the database."/>
          <enum>
            <item name="EnterpriseCluster" value="&quot;EnterpriseCluster&quot;"/>
            <item name="NoCluster" value="&quot;NoCluster&quot;"/>
            <item name="OSSCluster" value="&quot;OSSCluster&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.deferUpgrade" options="defer-upgrade" group="Properties">
          <help short="Option to defer upgrade when newest version is released - default is NotDeferred. Learn more: https://aka.ms/redisversionupgrade"/>
          <enum>
            <item name="Deferred" value="&quot;Deferred&quot;"/>
            <item name="NotDeferred" value="&quot;NotDeferred&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.evictionPolicy" options="eviction-policy" group="Properties">
          <help short="Redis eviction policy - default is VolatileLRU"/>
          <enum>
            <item name="AllKeysLFU" value="&quot;AllKeysLFU&quot;"/>
            <item name="AllKeysLRU" value="&quot;AllKeysLRU&quot;"/>
            <item name="AllKeysRandom" value="&quot;AllKeysRandom&quot;"/>
            <item name="NoEviction" value="&quot;NoEviction&quot;"/>
            <item name="VolatileLFU" value="&quot;VolatileLFU&quot;"/>
            <item name="VolatileLRU" value="&quot;VolatileLRU&quot;"/>
            <item name="VolatileRandom" value="&quot;VolatileRandom&quot;"/>
            <item name="VolatileTTL" value="&quot;VolatileTTL&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.persistence" options="persistence" group="Properties">
          <help short="Persistence settings"/>
          <arg nullable="True" type="boolean" var="$parameters.properties.persistence.aofEnabled" options="aof-enabled">
            <help short="Sets whether AOF is enabled."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.persistence.aofFrequency" options="aof-frequency">
            <help short="Sets the frequency at which data is written to disk."/>
            <enum>
              <item name="1s" value="&quot;1s&quot;"/>
              <item name="always" value="&quot;always&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.persistence.rdbEnabled" options="rdb-enabled">
            <help short="Sets whether RDB is enabled."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.persistence.rdbFrequency" options="rdb-frequency">
            <help short="Sets the frequency at which a snapshot of the database is created."/>
            <enum>
              <item name="12h" value="&quot;12h&quot;"/>
              <item name="1h" value="&quot;1h&quot;"/>
              <item name="6h" value="&quot;6h&quot;"/>
            </enum>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="Databases_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}">
          <request method="get">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="databaseName" arg="$Path.databaseName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Database_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cache/redisEnterprise/{}/databases/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="accessKeysAuthentication">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="clientProtocol">
                      <enum>
                        <item value="&quot;Encrypted&quot;"/>
                        <item value="&quot;Plaintext&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="clusteringPolicy">
                      <enum>
                        <item value="&quot;EnterpriseCluster&quot;"/>
                        <item value="&quot;NoCluster&quot;"/>
                        <item value="&quot;OSSCluster&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deferUpgrade">
                      <enum>
                        <item value="&quot;Deferred&quot;"/>
                        <item value="&quot;NotDeferred&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="evictionPolicy">
                      <enum>
                        <item value="&quot;AllKeysLFU&quot;"/>
                        <item value="&quot;AllKeysLRU&quot;"/>
                        <item value="&quot;AllKeysRandom&quot;"/>
                        <item value="&quot;NoEviction&quot;"/>
                        <item value="&quot;VolatileLFU&quot;"/>
                        <item value="&quot;VolatileLRU&quot;"/>
                        <item value="&quot;VolatileRandom&quot;"/>
                        <item value="&quot;VolatileTTL&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="geoReplication">
                      <prop type="string" name="groupNickname"/>
                      <prop type="array<object>" name="linkedDatabases">
                        <item type="object">
                          <prop type="ResourceId" name="id"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;LinkFailed&quot;"/>
                              <item value="&quot;Linked&quot;"/>
                              <item value="&quot;Linking&quot;"/>
                              <item value="&quot;UnlinkFailed&quot;"/>
                              <item value="&quot;Unlinking&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="modules" identifiers="name">
                      <item type="object">
                        <prop type="string" name="args"/>
                        <prop type="string" name="name" required="True"/>
                        <prop readOnly="True" type="string" name="version"/>
                      </item>
                    </prop>
                    <prop type="object" name="persistence">
                      <prop type="boolean" name="aofEnabled"/>
                      <prop type="string" name="aofFrequency">
                        <enum>
                          <item value="&quot;1s&quot;"/>
                          <item value="&quot;always&quot;"/>
                        </enum>
                      </prop>
                      <prop type="boolean" name="rdbEnabled"/>
                      <prop type="string" name="rdbFrequency">
                        <enum>
                          <item value="&quot;12h&quot;"/>
                          <item value="&quot;1h&quot;"/>
                          <item value="&quot;6h&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="port"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="redisVersion"/>
                    <prop readOnly="True" type="string" name="resourceState">
                      <enum>
                        <item value="&quot;CreateFailed&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;DeleteFailed&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;DisableFailed&quot;"/>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Disabling&quot;"/>
                        <item value="&quot;EnableFailed&quot;"/>
                        <item value="&quot;Enabling&quot;"/>
                        <item value="&quot;Moving&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;Scaling&quot;"/>
                        <item value="&quot;ScalingFailed&quot;"/>
                        <item value="&quot;UpdateFailed&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="accessKeysAuthentication" arg="$parameters.properties.accessKeysAuthentication">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="clientProtocol" arg="$parameters.properties.clientProtocol">
                  <enum>
                    <item value="&quot;Encrypted&quot;"/>
                    <item value="&quot;Plaintext&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="clusteringPolicy" arg="$parameters.properties.clusteringPolicy">
                  <enum>
                    <item value="&quot;EnterpriseCluster&quot;"/>
                    <item value="&quot;NoCluster&quot;"/>
                    <item value="&quot;OSSCluster&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="deferUpgrade" arg="$parameters.properties.deferUpgrade">
                  <enum>
                    <item value="&quot;Deferred&quot;"/>
                    <item value="&quot;NotDeferred&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="evictionPolicy" arg="$parameters.properties.evictionPolicy">
                  <enum>
                    <item value="&quot;AllKeysLFU&quot;"/>
                    <item value="&quot;AllKeysLRU&quot;"/>
                    <item value="&quot;AllKeysRandom&quot;"/>
                    <item value="&quot;NoEviction&quot;"/>
                    <item value="&quot;VolatileLFU&quot;"/>
                    <item value="&quot;VolatileLRU&quot;"/>
                    <item value="&quot;VolatileRandom&quot;"/>
                    <item value="&quot;VolatileTTL&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="persistence" arg="$parameters.properties.persistence">
                  <prop type="boolean" name="aofEnabled" arg="$parameters.properties.persistence.aofEnabled"/>
                  <prop type="string" name="aofFrequency" arg="$parameters.properties.persistence.aofFrequency">
                    <enum>
                      <item value="&quot;1s&quot;"/>
                      <item value="&quot;always&quot;"/>
                    </enum>
                  </prop>
                  <prop type="boolean" name="rdbEnabled" arg="$parameters.properties.persistence.rdbEnabled"/>
                  <prop type="string" name="rdbFrequency" arg="$parameters.properties.persistence.rdbFrequency">
                    <enum>
                      <item value="&quot;12h&quot;"/>
                      <item value="&quot;1h&quot;"/>
                      <item value="&quot;6h&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Databases_Create">
        <longRunning finalStateVia="original-uri"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cache/redisEnterprise/{clusterName}/databases/{databaseName}">
          <request method="put">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="databaseName" arg="$Path.databaseName" required="True">
                <format pattern="^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@Database_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
