<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.recoveryservices/vaults/{}/replicationmigrationitems" version="2022-08-01" swagger="mgmt-plane/recoveryservicessiterecovery/ResourceProviders/Microsoft.RecoveryServices/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuUmVjb3ZlcnlTZXJ2aWNlcy92YXVsdHMve3Jlc291cmNlTmFtZX0vcmVwbGljYXRpb25NaWdyYXRpb25JdGVtcw==/V/MjAyMi0wOC0wMQ=="/>
  <commandGroup name="site-recovery vault">
    <command name="list-migration-item" version="2022-08-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.recoveryservices/vaults/{}/replicationmigrationitems" version="2022-08-01" swagger="mgmt-plane/recoveryservicessiterecovery/ResourceProviders/Microsoft.RecoveryServices/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuUmVjb3ZlcnlTZXJ2aWNlcy92YXVsdHMve3Jlc291cmNlTmFtZX0vcmVwbGljYXRpb25NaWdyYXRpb25JdGVtcw==/V/MjAyMi0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.resourceName" options="vault-name" required="True" group="" idPart="name">
          <help short="The name of the recovery services vault."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.filter" options="filter">
          <help short="OData filter options."/>
        </arg>
        <arg type="string" var="$Query.skipToken" options="skip-token">
          <help short="The pagination token."/>
        </arg>
        <arg type="string" var="$Query.takeToken" options="take-token">
          <help short="The page size."/>
        </arg>
      </argGroup>
      <operation operationId="ReplicationMigrationItems_List">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{resourceName}/replicationMigrationItems">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="resourceName" arg="$Path.resourceName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="string" name="skipToken" arg="$Query.skipToken"/>
              <param type="string" name="takeToken" arg="$Query.takeToken"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-08-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.RecoveryServices/vaults/{}/replicationFabrics/{}/replicationProtectionContainers/{}/replicationMigrationItems/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop readOnly="True" type="array<string>" name="allowedOperations">
                          <item type="string">
                            <enum>
                              <item value="&quot;DisableMigration&quot;"/>
                              <item value="&quot;Migrate&quot;"/>
                              <item value="&quot;PauseReplication&quot;"/>
                              <item value="&quot;ResumeReplication&quot;"/>
                              <item value="&quot;StartResync&quot;"/>
                              <item value="&quot;TestMigrate&quot;"/>
                              <item value="&quot;TestMigrateCleanup&quot;"/>
                            </enum>
                          </item>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="criticalJobHistory">
                          <item type="object">
                            <prop readOnly="True" type="string" name="jobId"/>
                            <prop readOnly="True" type="string" name="jobName"/>
                            <prop readOnly="True" type="string" name="jobStatus"/>
                            <prop readOnly="True" type="dateTime" name="startTime"/>
                          </item>
                        </prop>
                        <prop type="object" name="currentJob">
                          <prop readOnly="True" type="string" name="jobId"/>
                          <prop readOnly="True" type="string" name="jobName"/>
                          <prop readOnly="True" type="dateTime" name="startTime"/>
                        </prop>
                        <prop readOnly="True" type="string" name="eventCorrelationId"/>
                        <prop readOnly="True" type="string" name="health">
                          <enum>
                            <item value="&quot;Critical&quot;"/>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;Normal&quot;"/>
                            <item value="&quot;Warning&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="healthErrors">
                          <item type="object">
                            <prop type="dateTime" name="creationTimeUtc"/>
                            <prop type="string" name="customerResolvability">
                              <enum>
                                <item value="&quot;Allowed&quot;"/>
                                <item value="&quot;NotAllowed&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="entityId"/>
                            <prop type="string" name="errorCategory"/>
                            <prop type="string" name="errorCode"/>
                            <prop type="string" name="errorId"/>
                            <prop type="string" name="errorLevel"/>
                            <prop type="string" name="errorMessage"/>
                            <prop type="string" name="errorSource"/>
                            <prop type="string" name="errorType"/>
                            <prop type="array<object>" name="innerHealthErrors">
                              <item type="object">
                                <prop type="dateTime" name="creationTimeUtc"/>
                                <prop type="string" name="customerResolvability">
                                  <enum>
                                    <item value="&quot;Allowed&quot;"/>
                                    <item value="&quot;NotAllowed&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="entityId"/>
                                <prop type="string" name="errorCategory"/>
                                <prop type="string" name="errorCode"/>
                                <prop type="string" name="errorId"/>
                                <prop type="string" name="errorLevel"/>
                                <prop type="string" name="errorMessage"/>
                                <prop type="string" name="errorSource"/>
                                <prop type="string" name="errorType"/>
                                <prop type="string" name="possibleCauses"/>
                                <prop type="string" name="recommendedAction"/>
                                <prop type="string" name="recoveryProviderErrorMessage"/>
                                <prop type="string" name="summaryMessage"/>
                              </item>
                            </prop>
                            <prop type="string" name="possibleCauses"/>
                            <prop type="string" name="recommendedAction"/>
                            <prop type="string" name="recoveryProviderErrorMessage"/>
                            <prop type="string" name="summaryMessage"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="lastMigrationStatus"/>
                        <prop readOnly="True" type="dateTime" name="lastMigrationTime"/>
                        <prop readOnly="True" type="string" name="lastTestMigrationStatus"/>
                        <prop readOnly="True" type="dateTime" name="lastTestMigrationTime"/>
                        <prop readOnly="True" type="string" name="machineName"/>
                        <prop readOnly="True" type="string" name="migrationState">
                          <enum>
                            <item value="&quot;DisableMigrationFailed&quot;"/>
                            <item value="&quot;DisableMigrationInProgress&quot;"/>
                            <item value="&quot;EnableMigrationFailed&quot;"/>
                            <item value="&quot;EnableMigrationInProgress&quot;"/>
                            <item value="&quot;InitialSeedingFailed&quot;"/>
                            <item value="&quot;InitialSeedingInProgress&quot;"/>
                            <item value="&quot;MigrationCompletedWithInformation&quot;"/>
                            <item value="&quot;MigrationFailed&quot;"/>
                            <item value="&quot;MigrationInProgress&quot;"/>
                            <item value="&quot;MigrationPartiallySucceeded&quot;"/>
                            <item value="&quot;MigrationSucceeded&quot;"/>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ProtectionSuspended&quot;"/>
                            <item value="&quot;Replicating&quot;"/>
                            <item value="&quot;ResumeInProgress&quot;"/>
                            <item value="&quot;ResumeInitiated&quot;"/>
                            <item value="&quot;SuspendingProtection&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="migrationStateDescription"/>
                        <prop readOnly="True" type="string" name="policyFriendlyName"/>
                        <prop readOnly="True" type="string" name="policyId"/>
                        <prop type="object" name="providerSpecificDetails">
                          <prop type="string" name="instanceType" required="True">
                            <enum>
                              <item value="&quot;VMwareCbt&quot;"/>
                            </enum>
                          </prop>
                          <discriminator property="instanceType" value="VMwareCbt">
                            <prop readOnly="True" type="string" name="dataMoverRunAsAccountId"/>
                            <prop readOnly="True" type="string" name="firmwareType"/>
                            <prop readOnly="True" type="integer32" name="initialSeedingProgressPercentage"/>
                            <prop readOnly="True" type="integer64" name="initialSeedingRetryCount"/>
                            <prop readOnly="True" type="string" name="lastRecoveryPointId"/>
                            <prop readOnly="True" type="dateTime" name="lastRecoveryPointReceived"/>
                            <prop type="string" name="licenseType"/>
                            <prop readOnly="True" type="integer32" name="migrationProgressPercentage"/>
                            <prop readOnly="True" type="string" name="migrationRecoveryPointId"/>
                            <prop readOnly="True" type="string" name="osType"/>
                            <prop type="string" name="performAutoResync"/>
                            <prop type="array<object>" name="protectedDisks">
                              <item type="object">
                                <prop readOnly="True" type="integer64" name="capacityInBytes"/>
                                <prop readOnly="True" type="string" name="diskEncryptionSetId"/>
                                <prop readOnly="True" type="string" name="diskId"/>
                                <prop readOnly="True" type="string" name="diskName"/>
                                <prop readOnly="True" type="string" name="diskPath"/>
                                <prop type="string" name="diskType">
                                  <enum>
                                    <item value="&quot;Premium_LRS&quot;"/>
                                    <item value="&quot;StandardSSD_LRS&quot;"/>
                                    <item value="&quot;Standard_LRS&quot;"/>
                                  </enum>
                                </prop>
                                <prop readOnly="True" type="string" name="isOSDisk"/>
                                <prop readOnly="True" type="string" name="logStorageAccountId"/>
                                <prop readOnly="True" type="string" name="logStorageAccountSasSecretName"/>
                                <prop readOnly="True" type="string" name="seedBlobUri"/>
                                <prop readOnly="True" type="string" name="seedManagedDiskId"/>
                                <prop readOnly="True" type="string" name="targetBlobUri"/>
                                <prop type="string" name="targetDiskName"/>
                                <prop readOnly="True" type="string" name="targetManagedDiskId"/>
                              </item>
                            </prop>
                            <prop readOnly="True" type="integer32" name="resumeProgressPercentage"/>
                            <prop readOnly="True" type="integer64" name="resumeRetryCount"/>
                            <prop readOnly="True" type="integer32" name="resyncProgressPercentage"/>
                            <prop readOnly="True" type="string" name="resyncRequired"/>
                            <prop readOnly="True" type="integer64" name="resyncRetryCount"/>
                            <prop readOnly="True" type="string" name="resyncState">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;PreparedForResynchronization&quot;"/>
                                <item value="&quot;StartedResynchronization&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="seedDiskTags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop readOnly="True" type="string" name="snapshotRunAsAccountId"/>
                            <prop type="string" name="sqlServerLicenseType"/>
                            <prop readOnly="True" type="string" name="storageAccountId"/>
                            <prop type="string" name="targetAvailabilitySetId"/>
                            <prop type="string" name="targetAvailabilityZone"/>
                            <prop type="string" name="targetBootDiagnosticsStorageAccountId"/>
                            <prop type="object" name="targetDiskTags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop readOnly="True" type="string" name="targetGeneration"/>
                            <prop readOnly="True" type="string" name="targetLocation"/>
                            <prop type="string" name="targetNetworkId"/>
                            <prop type="object" name="targetNicTags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="targetProximityPlacementGroupId"/>
                            <prop type="string" name="targetResourceGroupId"/>
                            <prop type="string" name="targetVmName"/>
                            <prop type="string" name="targetVmSize"/>
                            <prop type="object" name="targetVmTags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="testNetworkId"/>
                            <prop type="array<object>" name="vmNics">
                              <item type="object">
                                <prop type="string" name="isPrimaryNic"/>
                                <prop type="string" name="isSelectedForMigration"/>
                                <prop readOnly="True" type="string" name="nicId"/>
                                <prop readOnly="True" type="string" name="sourceIPAddress"/>
                                <prop readOnly="True" type="string" name="sourceIPAddressType">
                                  <enum>
                                    <item value="&quot;Dynamic&quot;"/>
                                    <item value="&quot;Static&quot;"/>
                                  </enum>
                                </prop>
                                <prop readOnly="True" type="string" name="sourceNetworkId"/>
                                <prop type="string" name="targetIPAddress"/>
                                <prop type="string" name="targetIPAddressType">
                                  <enum>
                                    <item value="&quot;Dynamic&quot;"/>
                                    <item value="&quot;Static&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="targetNicName"/>
                                <prop type="string" name="targetSubnetName"/>
                                <prop type="string" name="testIPAddress"/>
                                <prop type="string" name="testIPAddressType">
                                  <enum>
                                    <item value="&quot;Dynamic&quot;"/>
                                    <item value="&quot;Static&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="testNetworkId"/>
                                <prop type="string" name="testSubnetName"/>
                              </item>
                            </prop>
                            <prop readOnly="True" type="string" name="vmwareMachineId"/>
                          </discriminator>
                        </prop>
                        <prop readOnly="True" type="string" name="recoveryServicesProviderId"/>
                        <prop readOnly="True" type="string" name="replicationStatus"/>
                        <prop readOnly="True" type="string" name="testMigrateState">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;TestMigrationCleanupInProgress&quot;"/>
                            <item value="&quot;TestMigrationCompletedWithInformation&quot;"/>
                            <item value="&quot;TestMigrationFailed&quot;"/>
                            <item value="&quot;TestMigrationInProgress&quot;"/>
                            <item value="&quot;TestMigrationPartiallySucceeded&quot;"/>
                            <item value="&quot;TestMigrationSucceeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="testMigrateStateDescription"/>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
