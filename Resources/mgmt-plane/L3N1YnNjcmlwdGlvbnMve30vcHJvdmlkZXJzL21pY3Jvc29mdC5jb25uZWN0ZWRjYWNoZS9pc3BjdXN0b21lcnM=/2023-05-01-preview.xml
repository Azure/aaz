<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.connectedcache/ispcustomers" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNvbm5lY3RlZENhY2hlL2lzcEN1c3RvbWVycw==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.connectedcache/ispcustomers" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29ubmVjdGVkQ2FjaGUvaXNwQ3VzdG9tZXJz/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="mcc isp resource">
    <command name="list" version="2023-05-01-preview" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.connectedcache/ispcustomers" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkNvbm5lY3RlZENhY2hlL2lzcEN1c3RvbWVycw==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.connectedcache/ispcustomers" version="2023-05-01-preview" swagger="mgmt-plane/ConnectedCache/ResourceProviders/Microsoft.ConnectedCache/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29ubmVjdGVkQ2FjaGUvaXNwQ3VzdG9tZXJz/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_IspCustomers_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_IspCustomers_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_IspCustomers_ListByResourceGroup" operationId="IspCustomers_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedCache/ispCustomers">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ConnectedCache/ispCustomers/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="object" name="additionalCustomerProperties">
                          <prop type="string" name="customerAsn"/>
                          <prop readOnly="True" type="float32" name="customerAsnEstimatedEgressPeekGbps"/>
                          <prop type="string" name="customerEmail"/>
                          <prop type="dateTime" name="customerEntitlementExpiration"/>
                          <prop type="string" name="customerEntitlementSkuGuid"/>
                          <prop type="string" name="customerEntitlementSkuId"/>
                          <prop type="string" name="customerEntitlementSkuName"/>
                          <prop readOnly="True" type="string" name="customerOrgName"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewAverageEgressMbps"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewAverageMissMbps"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewCacheEfficiency"/>
                          <prop readOnly="True" type="integer32" name="customerPropertiesOverviewCacheNodesHealthyCount"/>
                          <prop readOnly="True" type="integer32" name="customerPropertiesOverviewCacheNodesUnhealthyCount"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewEgressMbpsMax"/>
                          <prop readOnly="True" type="dateTime" name="customerPropertiesOverviewEgressMbpsMaxDateTime"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewMissMbpsMax"/>
                          <prop readOnly="True" type="dateTime" name="customerPropertiesOverviewMissMbpsMaxDateTime"/>
                          <prop type="string" name="customerTransitAsn"/>
                          <prop type="string" name="customerTransitState">
                            <enum>
                              <item value="&quot;CombinedTransit&quot;"/>
                              <item value="&quot;NoTransit&quot;"/>
                              <item value="&quot;TransitOnly&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="optionalProperty1"/>
                          <prop type="string" name="optionalProperty2"/>
                          <prop type="string" name="optionalProperty3"/>
                          <prop type="string" name="optionalProperty4"/>
                          <prop type="string" name="optionalProperty5"/>
                          <prop readOnly="True" type="dateTime" name="peeringDbLastUpdateDate"/>
                          <prop readOnly="True" type="dateTime" name="peeringDbLastUpdateTime"/>
                          <prop readOnly="True" type="integer32" name="signupPhaseStatusCode"/>
                          <prop readOnly="True" type="string" name="signupPhaseStatusText"/>
                          <prop readOnly="True" type="boolean" name="signupStatus"/>
                          <prop readOnly="True" type="integer32" name="signupStatusCode"/>
                          <prop readOnly="True" type="string" name="signupStatusText"/>
                        </prop>
                        <prop type="object" name="customer">
                          <prop type="string" name="clientTenantId"/>
                          <prop type="string" name="contactEmail"/>
                          <prop type="string" name="contactName"/>
                          <prop type="string" name="contactPhone"/>
                          <prop readOnly="True" type="string" name="createAsyncOperationId"/>
                          <prop readOnly="True" type="string" name="customerId"/>
                          <prop type="string" name="customerName"/>
                          <prop readOnly="True" type="string" name="deleteAsyncOperationId"/>
                          <prop type="string" name="fullyQualifiedResourceId"/>
                          <prop type="boolean" name="isEnterpriseManaged"/>
                          <prop type="boolean" name="isEntitled"/>
                          <prop readOnly="True" type="dateTime" name="lastSyncWithAzureTimestamp"/>
                          <prop type="integer32" name="releaseVersion"/>
                          <prop type="boolean" name="resendSignupCode"/>
                          <prop type="boolean" name="shouldMigrate"/>
                          <prop readOnly="True" type="integer32" name="synchWithAzureAttemptsCount"/>
                          <prop type="boolean" name="verifySignupCode"/>
                        </prop>
                        <prop readOnly="True" type="object" name="error" cls="ErrorDetail_read">
                          <prop readOnly="True" type="array<object>" name="additionalInfo">
                            <item type="object">
                              <prop readOnly="True" type="object" name="info"/>
                              <prop readOnly="True" type="string" name="type"/>
                            </item>
                          </prop>
                          <prop readOnly="True" type="string" name="code"/>
                          <prop readOnly="True" type="array<@ErrorDetail_read>" name="details" identifiers="message target">
                            <item type="@ErrorDetail_read"/>
                          </prop>
                          <prop readOnly="True" type="string" name="message"/>
                          <prop readOnly="True" type="string" name="target"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                            <item value="&quot;Upgrading&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="status"/>
                        <prop readOnly="True" type="string" name="statusCode"/>
                        <prop readOnly="True" type="string" name="statusDetails"/>
                        <prop readOnly="True" type="string" name="statusText"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_IspCustomers_ListBySubscription" operationId="IspCustomers_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.ConnectedCache/ispCustomers">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ConnectedCache/ispCustomers/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties">
                        <prop type="object" name="additionalCustomerProperties">
                          <prop type="string" name="customerAsn"/>
                          <prop readOnly="True" type="float32" name="customerAsnEstimatedEgressPeekGbps"/>
                          <prop type="string" name="customerEmail"/>
                          <prop type="dateTime" name="customerEntitlementExpiration"/>
                          <prop type="string" name="customerEntitlementSkuGuid"/>
                          <prop type="string" name="customerEntitlementSkuId"/>
                          <prop type="string" name="customerEntitlementSkuName"/>
                          <prop readOnly="True" type="string" name="customerOrgName"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewAverageEgressMbps"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewAverageMissMbps"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewCacheEfficiency"/>
                          <prop readOnly="True" type="integer32" name="customerPropertiesOverviewCacheNodesHealthyCount"/>
                          <prop readOnly="True" type="integer32" name="customerPropertiesOverviewCacheNodesUnhealthyCount"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewEgressMbpsMax"/>
                          <prop readOnly="True" type="dateTime" name="customerPropertiesOverviewEgressMbpsMaxDateTime"/>
                          <prop readOnly="True" type="float32" name="customerPropertiesOverviewMissMbpsMax"/>
                          <prop readOnly="True" type="dateTime" name="customerPropertiesOverviewMissMbpsMaxDateTime"/>
                          <prop type="string" name="customerTransitAsn"/>
                          <prop type="string" name="customerTransitState">
                            <enum>
                              <item value="&quot;CombinedTransit&quot;"/>
                              <item value="&quot;NoTransit&quot;"/>
                              <item value="&quot;TransitOnly&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="optionalProperty1"/>
                          <prop type="string" name="optionalProperty2"/>
                          <prop type="string" name="optionalProperty3"/>
                          <prop type="string" name="optionalProperty4"/>
                          <prop type="string" name="optionalProperty5"/>
                          <prop readOnly="True" type="dateTime" name="peeringDbLastUpdateDate"/>
                          <prop readOnly="True" type="dateTime" name="peeringDbLastUpdateTime"/>
                          <prop readOnly="True" type="integer32" name="signupPhaseStatusCode"/>
                          <prop readOnly="True" type="string" name="signupPhaseStatusText"/>
                          <prop readOnly="True" type="boolean" name="signupStatus"/>
                          <prop readOnly="True" type="integer32" name="signupStatusCode"/>
                          <prop readOnly="True" type="string" name="signupStatusText"/>
                        </prop>
                        <prop type="object" name="customer">
                          <prop type="string" name="clientTenantId"/>
                          <prop type="string" name="contactEmail"/>
                          <prop type="string" name="contactName"/>
                          <prop type="string" name="contactPhone"/>
                          <prop readOnly="True" type="string" name="createAsyncOperationId"/>
                          <prop readOnly="True" type="string" name="customerId"/>
                          <prop type="string" name="customerName"/>
                          <prop readOnly="True" type="string" name="deleteAsyncOperationId"/>
                          <prop type="string" name="fullyQualifiedResourceId"/>
                          <prop type="boolean" name="isEnterpriseManaged"/>
                          <prop type="boolean" name="isEntitled"/>
                          <prop readOnly="True" type="dateTime" name="lastSyncWithAzureTimestamp"/>
                          <prop type="integer32" name="releaseVersion"/>
                          <prop type="boolean" name="resendSignupCode"/>
                          <prop type="boolean" name="shouldMigrate"/>
                          <prop readOnly="True" type="integer32" name="synchWithAzureAttemptsCount"/>
                          <prop type="boolean" name="verifySignupCode"/>
                        </prop>
                        <prop readOnly="True" type="@ErrorDetail_read" name="error"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                            <item value="&quot;Upgrading&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="status"/>
                        <prop readOnly="True" type="string" name="statusCode"/>
                        <prop readOnly="True" type="string" name="statusDetails"/>
                        <prop readOnly="True" type="string" name="statusText"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
