<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{scope}/providers/microsoft.quota/quotarequests" version="2023-02-01" swagger="mgmt-plane/quota/ResourceProviders/Microsoft.Quota/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5RdW90YS9xdW90YVJlcXVlc3Rz/V/MjAyMy0wMi0wMQ=="/>
  <commandGroup name="quota request">
    <command name="list" version="2023-02-01">
      <resource id="/{scope}/providers/microsoft.quota/quotarequests" version="2023-02-01" swagger="mgmt-plane/quota/ResourceProviders/Microsoft.Quota/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5RdW90YS9xdW90YVJlcXVlc3Rz/V/MjAyMy0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.scope" options="scope" required="True" group="">
          <help short="The target azure resource URI."/>
        </arg>
        <arg type="string" var="$Query.filter" options="filter" group="">
          <help short="Supported operators: ge, le, eq, gt, lt. Example: provisioningState eq {QuotaRequestState}, resourceName eq {resourceName}"/>
        </arg>
        <arg type="string" var="$Query.skiptoken" options="skiptoken">
          <help short="The **Skiptoken** parameter is used only if a previous operation returned a partial result. If a previous response contains a **nextLink** element, its value includes a **skiptoken** parameter that specifies a starting point to use for subsequent calls."/>
        </arg>
        <arg type="integer32" var="$Query.top" options="top">
          <help short="Number of records to return."/>
          <format minimum="1"/>
        </arg>
      </argGroup>
      <operation operationId="QuotaRequestStatus_List">
        <http path="/{scope}/providers/Microsoft.Quota/quotaRequests">
          <request method="get">
            <path>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <param type="string" name="$filter" arg="$Query.filter"/>
              <param type="string" name="$skiptoken" arg="$Query.skiptoken"/>
              <param type="integer32" name="$top" arg="$Query.top">
                <format minimum="1"/>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="string" name="id"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="error" cls="ServiceErrorDetail_read">
                          <prop readOnly="True" type="string" name="code"/>
                          <prop readOnly="True" type="string" name="message"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Invalid&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="dateTime" name="requestSubmitTime"/>
                        <prop type="array<object>" name="value" identifiers="subRequestId">
                          <item type="object">
                            <prop type="object" name="limit">
                              <prop type="string" name="limitObjectType" required="True">
                                <enum>
                                  <item value="&quot;LimitValue&quot;"/>
                                </enum>
                              </prop>
                              <discriminator property="limitObjectType" value="LimitValue">
                                <prop type="string" name="limitType">
                                  <enum>
                                    <item value="&quot;Independent&quot;"/>
                                    <item value="&quot;Shared&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="integer32" name="value" required="True"/>
                              </discriminator>
                            </prop>
                            <prop readOnly="True" type="string" name="message"/>
                            <prop type="object" name="name">
                              <prop readOnly="True" type="string" name="localizedValue"/>
                              <prop type="string" name="value"/>
                            </prop>
                            <prop readOnly="True" type="string" name="provisioningState">
                              <enum>
                                <item value="&quot;Accepted&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;Invalid&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="resourceType"/>
                            <prop readOnly="True" type="string" name="subRequestId"/>
                            <prop type="string" name="unit"/>
                          </item>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
