<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/firewallpolicies/{}/firewallpolicydrafts/default" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9maXJld2FsbFBvbGljaWVzL3tmaXJld2FsbFBvbGljeU5hbWV9L2ZpcmV3YWxsUG9saWN5RHJhZnRzL2RlZmF1bHQ=/V/MjAyMy0xMS0wMQ=="/>
  <commandGroup name="network firewall policy draft">
    <command name="show" version="2023-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/firewallpolicies/{}/firewallpolicydrafts/default" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9maXJld2FsbFBvbGljaWVzL3tmaXJld2FsbFBvbGljeU5hbWV9L2ZpcmV3YWxsUG9saWN5RHJhZnRzL2RlZmF1bHQ=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firewallPolicyName" options="firewall-policy-name" required="True" idPart="name">
          <help short="The name of the Firewall Policy."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FirewallPolicyDrafts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/firewallPolicyDrafts/default">
          <request method="get">
            <path>
              <param type="string" name="firewallPolicyName" arg="$Path.firewallPolicyName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/firewallPolicies/{}/firewallPolicyDrafts/default"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="basePolicy" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="dnsSettings">
                      <prop type="boolean" name="enableProxy"/>
                      <prop nullable="True" type="boolean" name="requireProxyForNetworkRules"/>
                      <prop type="array<string>" name="servers">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="explicitProxy">
                      <prop nullable="True" type="boolean" name="enableExplicitProxy"/>
                      <prop nullable="True" type="boolean" name="enablePacFile"/>
                      <prop type="integer32" name="httpPort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                      <prop type="integer32" name="httpsPort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                      <prop type="string" name="pacFile"/>
                      <prop type="integer32" name="pacFilePort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="insights">
                      <prop type="boolean" name="isEnabled"/>
                      <prop type="object" name="logAnalyticsResources">
                        <prop type="@SubResource_read" name="defaultWorkspaceId"/>
                        <prop type="array<object>" name="workspaces">
                          <item type="object">
                            <prop type="string" name="region"/>
                            <prop type="@SubResource_read" name="workspaceId"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="integer32" name="retentionDays"/>
                    </prop>
                    <prop type="object" name="intrusionDetection">
                      <prop type="object" name="configuration">
                        <prop type="array<object>" name="bypassTrafficSettings">
                          <item type="object">
                            <prop type="string" name="description"/>
                            <prop type="array<string>" name="destinationAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="destinationIpGroups">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="destinationPorts">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="protocol">
                              <enum>
                                <item value="&quot;ANY&quot;"/>
                                <item value="&quot;ICMP&quot;"/>
                                <item value="&quot;TCP&quot;"/>
                                <item value="&quot;UDP&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="sourceAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="sourceIpGroups">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="privateRanges">
                          <item type="string"/>
                        </prop>
                        <prop type="array<object>" name="signatureOverrides">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;Alert&quot;"/>
                                <item value="&quot;Deny&quot;"/>
                                <item value="&quot;Off&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;Alert&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                          <item value="&quot;Off&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="profile">
                        <enum>
                          <item value="&quot;Advanced&quot;"/>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Extended&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="snat">
                      <prop type="string" name="autoLearnPrivateRanges">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="privateRanges">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="sql">
                      <prop type="boolean" name="allowSqlRedirect"/>
                    </prop>
                    <prop type="string" name="threatIntelMode">
                      <enum>
                        <item value="&quot;Alert&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                        <item value="&quot;Off&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="threatIntelWhitelist">
                      <prop type="array<string>" name="fqdns">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipAddresses">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-11-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/firewallpolicies/{}/firewallpolicydrafts/default" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9maXJld2FsbFBvbGljaWVzL3tmaXJld2FsbFBvbGljeU5hbWV9L2ZpcmV3YWxsUG9saWN5RHJhZnRzL2RlZmF1bHQ=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firewallPolicyName" options="firewall-policy-name" required="True" idPart="name">
          <help short="The name of the Firewall Policy."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="FirewallPolicyDrafts_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/firewallPolicyDrafts/default">
          <request method="delete">
            <path>
              <param type="string" name="firewallPolicyName" arg="$Path.firewallPolicyName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/firewallpolicies/{}/firewallpolicydrafts/default" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9maXJld2FsbFBvbGljaWVzL3tmaXJld2FsbFBvbGljeU5hbWV9L2ZpcmV3YWxsUG9saWN5RHJhZnRzL2RlZmF1bHQ=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firewallPolicyName" options="firewall-policy-name" required="True" idPart="name">
          <help short="The name of the Firewall Policy."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/firewallPolicies/{}/firewallPolicyDrafts/default"/>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.basePolicy" options="base-policy" group="Properties" cls="SubResource_create">
          <help short="The parent firewall policy from which rules are inherited."/>
          <arg type="string" var="@SubResource_create.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.dnsSettings" options="dns-settings" group="Properties">
          <help short="DNS Proxy Settings definition."/>
          <arg type="boolean" var="$parameters.properties.dnsSettings.enableProxy" options="enable-proxy">
            <help short="Enable DNS Proxy on Firewalls attached to the Firewall Policy."/>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.dnsSettings.requireProxyForNetworkRules" options="require-proxy-for-network-rules">
            <help short="FQDNs in Network Rules are supported when set to true."/>
          </arg>
          <arg type="array<string>" var="$parameters.properties.dnsSettings.servers" options="servers">
            <help short="List of Custom DNS Servers."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.explicitProxy" options="explicit-proxy" group="Properties">
          <help short="Explicit Proxy Settings definition."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.explicitProxy.enableExplicitProxy" options="enable-explicit-proxy">
            <help short="When set to true, explicit proxy mode is enabled."/>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.explicitProxy.enablePacFile" options="enable-pac-file">
            <help short="When set to true, pac file port and url needs to be provided."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.explicitProxy.httpPort" options="http-port">
            <help short="Port number for explicit proxy http protocol, cannot be greater than 64000."/>
            <format maximum="64000" minimum="0"/>
          </arg>
          <arg type="integer32" var="$parameters.properties.explicitProxy.httpsPort" options="https-port">
            <help short="Port number for explicit proxy https protocol, cannot be greater than 64000."/>
            <format maximum="64000" minimum="0"/>
          </arg>
          <arg type="string" var="$parameters.properties.explicitProxy.pacFile" options="pac-file">
            <help short="SAS URL for PAC file."/>
          </arg>
          <arg type="integer32" var="$parameters.properties.explicitProxy.pacFilePort" options="pac-file-port">
            <help short="Port number for firewall to serve PAC file."/>
            <format maximum="64000" minimum="0"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.insights" options="insights" group="Properties">
          <help short="Insights on Firewall Policy."/>
          <arg type="boolean" var="$parameters.properties.insights.isEnabled" options="is-enabled">
            <help short="A flag to indicate if the insights are enabled on the policy."/>
          </arg>
          <arg type="object" var="$parameters.properties.insights.logAnalyticsResources" options="log-analytics-resources">
            <help short="Workspaces needed to configure the Firewall Policy Insights."/>
            <arg type="@SubResource_create" var="$parameters.properties.insights.logAnalyticsResources.defaultWorkspaceId" options="default-workspace-id">
              <help short="The default workspace Id for Firewall Policy Insights."/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.insights.logAnalyticsResources.workspaces" options="workspaces">
              <help short="List of workspaces for Firewall Policy Insights."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.insights.logAnalyticsResources.workspaces[].region" options="region">
                  <help short="Region to configure the Workspace."/>
                </arg>
                <arg type="@SubResource_create" var="$parameters.properties.insights.logAnalyticsResources.workspaces[].workspaceId" options="workspace-id">
                  <help short="The workspace Id for Firewall Policy Insights."/>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="integer32" var="$parameters.properties.insights.retentionDays" options="retention-days">
            <help short="Number of days the insights should be enabled on the policy."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.intrusionDetection" options="intrusion-detection" group="Properties">
          <help short="The configuration for Intrusion detection."/>
          <arg type="object" var="$parameters.properties.intrusionDetection.configuration" options="configuration">
            <help short="Intrusion detection configuration properties."/>
            <arg type="array<object>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings" options="bypass-traffic-settings">
              <help short="List of rules for traffic to bypass."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].description" options="description">
                  <help short="Description of the bypass traffic rule."/>
                </arg>
                <arg type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationAddresses" options="destination-addresses">
                  <help short="List of destination IP addresses or ranges for this rule."/>
                  <item type="string"/>
                </arg>
                <arg type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationIpGroups" options="destination-ip-groups">
                  <help short="List of destination IpGroups for this rule."/>
                  <item type="string"/>
                </arg>
                <arg type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationPorts" options="destination-ports">
                  <help short="List of destination ports or ranges."/>
                  <item type="string"/>
                </arg>
                <arg type="string" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].name" options="name">
                  <help short="Name of the bypass traffic rule."/>
                </arg>
                <arg type="string" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].protocol" options="protocol">
                  <help short="The rule bypass protocol."/>
                  <enum>
                    <item name="ANY" value="&quot;ANY&quot;"/>
                    <item name="ICMP" value="&quot;ICMP&quot;"/>
                    <item name="TCP" value="&quot;TCP&quot;"/>
                    <item name="UDP" value="&quot;UDP&quot;"/>
                  </enum>
                </arg>
                <arg type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].sourceAddresses" options="source-addresses">
                  <help short="List of source IP addresses or ranges for this rule."/>
                  <item type="string"/>
                </arg>
                <arg type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].sourceIpGroups" options="source-ip-groups">
                  <help short="List of source IpGroups for this rule."/>
                  <item type="string"/>
                </arg>
              </item>
            </arg>
            <arg type="array<string>" var="$parameters.properties.intrusionDetection.configuration.privateRanges" options="private-ranges">
              <help short="IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property"/>
              <item type="string"/>
            </arg>
            <arg type="array<object>" var="$parameters.properties.intrusionDetection.configuration.signatureOverrides" options="signature-overrides">
              <help short="List of specific signatures states."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.intrusionDetection.configuration.signatureOverrides[].id" options="id">
                  <help short="Signature id."/>
                </arg>
                <arg type="string" var="$parameters.properties.intrusionDetection.configuration.signatureOverrides[].mode" options="mode">
                  <help short="The signature state."/>
                  <enum>
                    <item name="Alert" value="&quot;Alert&quot;"/>
                    <item name="Deny" value="&quot;Deny&quot;"/>
                    <item name="Off" value="&quot;Off&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="string" var="$parameters.properties.intrusionDetection.mode" options="mode">
            <help short="Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two."/>
            <enum>
              <item name="Alert" value="&quot;Alert&quot;"/>
              <item name="Deny" value="&quot;Deny&quot;"/>
              <item name="Off" value="&quot;Off&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$parameters.properties.intrusionDetection.profile" options="profile">
            <help short="IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy."/>
            <enum>
              <item name="Advanced" value="&quot;Advanced&quot;"/>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Extended" value="&quot;Extended&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.snat" options="snat" group="Properties">
          <help short="The private IP addresses/IP ranges to which traffic will not be SNAT."/>
          <arg type="string" var="$parameters.properties.snat.autoLearnPrivateRanges" options="auto-learn-private-ranges">
            <help short="The operation mode for automatically learning private ranges to not be SNAT"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$parameters.properties.snat.privateRanges" options="private-ranges">
            <help short="List of private IP addresses/IP address ranges to not be SNAT."/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.sql" options="sql" group="Properties">
          <help short="SQL Settings definition."/>
          <arg type="boolean" var="$parameters.properties.sql.allowSqlRedirect" options="allow-sql-redirect">
            <help short="A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999."/>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.threatIntelMode" options="threat-intel-mode" group="Properties">
          <help short="The operation mode for Threat Intelligence."/>
          <enum>
            <item name="Alert" value="&quot;Alert&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
            <item name="Off" value="&quot;Off&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$parameters.properties.threatIntelWhitelist" options="threat-intel-whitelist" group="Properties">
          <help short="ThreatIntel Whitelist for Firewall Policy."/>
          <arg type="array<string>" var="$parameters.properties.threatIntelWhitelist.fqdns" options="fqdns">
            <help short="List of FQDNs for the ThreatIntel Whitelist."/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$parameters.properties.threatIntelWhitelist.ipAddresses" options="ip-addresses">
            <help short="List of IP addresses for the ThreatIntel Whitelist."/>
            <item type="string"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="FirewallPolicyDrafts_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/firewallPolicyDrafts/default">
          <request method="put">
            <path>
              <param type="string" name="firewallPolicyName" arg="$Path.firewallPolicyName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$parameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/firewallPolicies/{}/firewallPolicyDrafts/default"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="basePolicy" arg="$parameters.properties.basePolicy" cls="SubResource_create">
                      <prop type="string" name="id" arg="@SubResource_create.id"/>
                    </prop>
                    <prop type="object" name="dnsSettings" arg="$parameters.properties.dnsSettings">
                      <prop type="boolean" name="enableProxy" arg="$parameters.properties.dnsSettings.enableProxy"/>
                      <prop nullable="True" type="boolean" name="requireProxyForNetworkRules" arg="$parameters.properties.dnsSettings.requireProxyForNetworkRules"/>
                      <prop type="array<string>" name="servers" arg="$parameters.properties.dnsSettings.servers">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="explicitProxy" arg="$parameters.properties.explicitProxy">
                      <prop nullable="True" type="boolean" name="enableExplicitProxy" arg="$parameters.properties.explicitProxy.enableExplicitProxy"/>
                      <prop nullable="True" type="boolean" name="enablePacFile" arg="$parameters.properties.explicitProxy.enablePacFile"/>
                      <prop type="integer32" name="httpPort" arg="$parameters.properties.explicitProxy.httpPort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                      <prop type="integer32" name="httpsPort" arg="$parameters.properties.explicitProxy.httpsPort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                      <prop type="string" name="pacFile" arg="$parameters.properties.explicitProxy.pacFile"/>
                      <prop type="integer32" name="pacFilePort" arg="$parameters.properties.explicitProxy.pacFilePort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="insights" arg="$parameters.properties.insights">
                      <prop type="boolean" name="isEnabled" arg="$parameters.properties.insights.isEnabled"/>
                      <prop type="object" name="logAnalyticsResources" arg="$parameters.properties.insights.logAnalyticsResources">
                        <prop type="@SubResource_create" name="defaultWorkspaceId" arg="$parameters.properties.insights.logAnalyticsResources.defaultWorkspaceId"/>
                        <prop type="array<object>" name="workspaces" arg="$parameters.properties.insights.logAnalyticsResources.workspaces">
                          <item type="object">
                            <prop type="string" name="region" arg="$parameters.properties.insights.logAnalyticsResources.workspaces[].region"/>
                            <prop type="@SubResource_create" name="workspaceId" arg="$parameters.properties.insights.logAnalyticsResources.workspaces[].workspaceId"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="integer32" name="retentionDays" arg="$parameters.properties.insights.retentionDays"/>
                    </prop>
                    <prop type="object" name="intrusionDetection" arg="$parameters.properties.intrusionDetection">
                      <prop type="object" name="configuration" arg="$parameters.properties.intrusionDetection.configuration">
                        <prop type="array<object>" name="bypassTrafficSettings" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings">
                          <item type="object">
                            <prop type="string" name="description" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].description"/>
                            <prop type="array<string>" name="destinationAddresses" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="destinationIpGroups" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationIpGroups">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="destinationPorts" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationPorts">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].name"/>
                            <prop type="string" name="protocol" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].protocol">
                              <enum>
                                <item value="&quot;ANY&quot;"/>
                                <item value="&quot;ICMP&quot;"/>
                                <item value="&quot;TCP&quot;"/>
                                <item value="&quot;UDP&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="sourceAddresses" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].sourceAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="sourceIpGroups" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].sourceIpGroups">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="privateRanges" arg="$parameters.properties.intrusionDetection.configuration.privateRanges">
                          <item type="string"/>
                        </prop>
                        <prop type="array<object>" name="signatureOverrides" arg="$parameters.properties.intrusionDetection.configuration.signatureOverrides">
                          <item type="object">
                            <prop type="string" name="id" arg="$parameters.properties.intrusionDetection.configuration.signatureOverrides[].id"/>
                            <prop type="string" name="mode" arg="$parameters.properties.intrusionDetection.configuration.signatureOverrides[].mode">
                              <enum>
                                <item value="&quot;Alert&quot;"/>
                                <item value="&quot;Deny&quot;"/>
                                <item value="&quot;Off&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="mode" arg="$parameters.properties.intrusionDetection.mode">
                        <enum>
                          <item value="&quot;Alert&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                          <item value="&quot;Off&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="profile" arg="$parameters.properties.intrusionDetection.profile">
                        <enum>
                          <item value="&quot;Advanced&quot;"/>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Extended&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="snat" arg="$parameters.properties.snat">
                      <prop type="string" name="autoLearnPrivateRanges" arg="$parameters.properties.snat.autoLearnPrivateRanges">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="privateRanges" arg="$parameters.properties.snat.privateRanges">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="sql" arg="$parameters.properties.sql">
                      <prop type="boolean" name="allowSqlRedirect" arg="$parameters.properties.sql.allowSqlRedirect"/>
                    </prop>
                    <prop type="string" name="threatIntelMode" arg="$parameters.properties.threatIntelMode">
                      <enum>
                        <item value="&quot;Alert&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                        <item value="&quot;Off&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="threatIntelWhitelist" arg="$parameters.properties.threatIntelWhitelist">
                      <prop type="array<string>" name="fqdns" arg="$parameters.properties.threatIntelWhitelist.fqdns">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipAddresses" arg="$parameters.properties.threatIntelWhitelist.ipAddresses">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/firewallPolicies/{}/firewallPolicyDrafts/default"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="basePolicy" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="dnsSettings">
                      <prop type="boolean" name="enableProxy"/>
                      <prop nullable="True" type="boolean" name="requireProxyForNetworkRules"/>
                      <prop type="array<string>" name="servers">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="explicitProxy">
                      <prop nullable="True" type="boolean" name="enableExplicitProxy"/>
                      <prop nullable="True" type="boolean" name="enablePacFile"/>
                      <prop type="integer32" name="httpPort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                      <prop type="integer32" name="httpsPort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                      <prop type="string" name="pacFile"/>
                      <prop type="integer32" name="pacFilePort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="insights">
                      <prop type="boolean" name="isEnabled"/>
                      <prop type="object" name="logAnalyticsResources">
                        <prop type="@SubResource_read" name="defaultWorkspaceId"/>
                        <prop type="array<object>" name="workspaces">
                          <item type="object">
                            <prop type="string" name="region"/>
                            <prop type="@SubResource_read" name="workspaceId"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="integer32" name="retentionDays"/>
                    </prop>
                    <prop type="object" name="intrusionDetection">
                      <prop type="object" name="configuration">
                        <prop type="array<object>" name="bypassTrafficSettings">
                          <item type="object">
                            <prop type="string" name="description"/>
                            <prop type="array<string>" name="destinationAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="destinationIpGroups">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="destinationPorts">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="protocol">
                              <enum>
                                <item value="&quot;ANY&quot;"/>
                                <item value="&quot;ICMP&quot;"/>
                                <item value="&quot;TCP&quot;"/>
                                <item value="&quot;UDP&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="sourceAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="sourceIpGroups">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="privateRanges">
                          <item type="string"/>
                        </prop>
                        <prop type="array<object>" name="signatureOverrides">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;Alert&quot;"/>
                                <item value="&quot;Deny&quot;"/>
                                <item value="&quot;Off&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;Alert&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                          <item value="&quot;Off&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="profile">
                        <enum>
                          <item value="&quot;Advanced&quot;"/>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Extended&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="snat">
                      <prop type="string" name="autoLearnPrivateRanges">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="privateRanges">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="sql">
                      <prop type="boolean" name="allowSqlRedirect"/>
                    </prop>
                    <prop type="string" name="threatIntelMode">
                      <enum>
                        <item value="&quot;Alert&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                        <item value="&quot;Off&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="threatIntelWhitelist">
                      <prop type="array<string>" name="fqdns">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipAddresses">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/firewallpolicies/{}/firewallpolicydrafts/default" version="2023-11-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9maXJld2FsbFBvbGljaWVzL3tmaXJld2FsbFBvbGljeU5hbWV9L2ZpcmV3YWxsUG9saWN5RHJhZnRzL2RlZmF1bHQ=/V/MjAyMy0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.firewallPolicyName" options="firewall-policy-name" required="True" idPart="name">
          <help short="The name of the Firewall Policy."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="ResourceId" var="$parameters.id" options="id" hide="True" group="Parameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/firewallPolicies/{}/firewallPolicyDrafts/default"/>
        </arg>
        <arg nullable="True" type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$parameters.properties.basePolicy" options="base-policy" group="Properties" cls="SubResource_update">
          <help short="The parent firewall policy from which rules are inherited."/>
          <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.dnsSettings" options="dns-settings" group="Properties">
          <help short="DNS Proxy Settings definition."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.dnsSettings.enableProxy" options="enable-proxy">
            <help short="Enable DNS Proxy on Firewalls attached to the Firewall Policy."/>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.dnsSettings.requireProxyForNetworkRules" options="require-proxy-for-network-rules">
            <help short="FQDNs in Network Rules are supported when set to true."/>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.dnsSettings.servers" options="servers">
            <help short="List of Custom DNS Servers."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.explicitProxy" options="explicit-proxy" group="Properties">
          <help short="Explicit Proxy Settings definition."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.explicitProxy.enableExplicitProxy" options="enable-explicit-proxy">
            <help short="When set to true, explicit proxy mode is enabled."/>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.explicitProxy.enablePacFile" options="enable-pac-file">
            <help short="When set to true, pac file port and url needs to be provided."/>
          </arg>
          <arg nullable="True" type="integer32" var="$parameters.properties.explicitProxy.httpPort" options="http-port">
            <help short="Port number for explicit proxy http protocol, cannot be greater than 64000."/>
            <format maximum="64000" minimum="0"/>
          </arg>
          <arg nullable="True" type="integer32" var="$parameters.properties.explicitProxy.httpsPort" options="https-port">
            <help short="Port number for explicit proxy https protocol, cannot be greater than 64000."/>
            <format maximum="64000" minimum="0"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.explicitProxy.pacFile" options="pac-file">
            <help short="SAS URL for PAC file."/>
          </arg>
          <arg nullable="True" type="integer32" var="$parameters.properties.explicitProxy.pacFilePort" options="pac-file-port">
            <help short="Port number for firewall to serve PAC file."/>
            <format maximum="64000" minimum="0"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.insights" options="insights" group="Properties">
          <help short="Insights on Firewall Policy."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.insights.isEnabled" options="is-enabled">
            <help short="A flag to indicate if the insights are enabled on the policy."/>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.insights.logAnalyticsResources" options="log-analytics-resources">
            <help short="Workspaces needed to configure the Firewall Policy Insights."/>
            <arg nullable="True" type="@SubResource_update" var="$parameters.properties.insights.logAnalyticsResources.defaultWorkspaceId" options="default-workspace-id">
              <help short="The default workspace Id for Firewall Policy Insights."/>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.insights.logAnalyticsResources.workspaces" options="workspaces">
              <help short="List of workspaces for Firewall Policy Insights."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.insights.logAnalyticsResources.workspaces[].region" options="region">
                  <help short="Region to configure the Workspace."/>
                </arg>
                <arg nullable="True" type="@SubResource_update" var="$parameters.properties.insights.logAnalyticsResources.workspaces[].workspaceId" options="workspace-id">
                  <help short="The workspace Id for Firewall Policy Insights."/>
                </arg>
              </item>
            </arg>
          </arg>
          <arg nullable="True" type="integer32" var="$parameters.properties.insights.retentionDays" options="retention-days">
            <help short="Number of days the insights should be enabled on the policy."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.intrusionDetection" options="intrusion-detection" group="Properties">
          <help short="The configuration for Intrusion detection."/>
          <arg nullable="True" type="object" var="$parameters.properties.intrusionDetection.configuration" options="configuration">
            <help short="Intrusion detection configuration properties."/>
            <arg nullable="True" type="array<object>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings" options="bypass-traffic-settings">
              <help short="List of rules for traffic to bypass."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].description" options="description">
                  <help short="Description of the bypass traffic rule."/>
                </arg>
                <arg nullable="True" type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationAddresses" options="destination-addresses">
                  <help short="List of destination IP addresses or ranges for this rule."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationIpGroups" options="destination-ip-groups">
                  <help short="List of destination IpGroups for this rule."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationPorts" options="destination-ports">
                  <help short="List of destination ports or ranges."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].name" options="name">
                  <help short="Name of the bypass traffic rule."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].protocol" options="protocol">
                  <help short="The rule bypass protocol."/>
                  <enum>
                    <item name="ANY" value="&quot;ANY&quot;"/>
                    <item name="ICMP" value="&quot;ICMP&quot;"/>
                    <item name="TCP" value="&quot;TCP&quot;"/>
                    <item name="UDP" value="&quot;UDP&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].sourceAddresses" options="source-addresses">
                  <help short="List of source IP addresses or ranges for this rule."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="array<string>" var="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].sourceIpGroups" options="source-ip-groups">
                  <help short="List of source IpGroups for this rule."/>
                  <item nullable="True" type="string"/>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="array<string>" var="$parameters.properties.intrusionDetection.configuration.privateRanges" options="private-ranges">
              <help short="IDPS Private IP address ranges are used to identify traffic direction (i.e. inbound, outbound, etc.). By default, only ranges defined by IANA RFC 1918 are considered private IP addresses. To modify default ranges, specify your Private IP address ranges with this property"/>
              <item nullable="True" type="string"/>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.intrusionDetection.configuration.signatureOverrides" options="signature-overrides">
              <help short="List of specific signatures states."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.intrusionDetection.configuration.signatureOverrides[].id" options="id">
                  <help short="Signature id."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.intrusionDetection.configuration.signatureOverrides[].mode" options="mode">
                  <help short="The signature state."/>
                  <enum>
                    <item name="Alert" value="&quot;Alert&quot;"/>
                    <item name="Deny" value="&quot;Deny&quot;"/>
                    <item name="Off" value="&quot;Off&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.intrusionDetection.mode" options="mode">
            <help short="Intrusion detection general state. When attached to a parent policy, the firewall's effective IDPS mode is the stricter mode of the two."/>
            <enum>
              <item name="Alert" value="&quot;Alert&quot;"/>
              <item name="Deny" value="&quot;Deny&quot;"/>
              <item name="Off" value="&quot;Off&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.intrusionDetection.profile" options="profile">
            <help short="IDPS profile name. When attached to a parent policy, the firewall's effective profile is the profile name of the parent policy."/>
            <enum>
              <item name="Advanced" value="&quot;Advanced&quot;"/>
              <item name="Basic" value="&quot;Basic&quot;"/>
              <item name="Extended" value="&quot;Extended&quot;"/>
              <item name="Standard" value="&quot;Standard&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.snat" options="snat" group="Properties">
          <help short="The private IP addresses/IP ranges to which traffic will not be SNAT."/>
          <arg nullable="True" type="string" var="$parameters.properties.snat.autoLearnPrivateRanges" options="auto-learn-private-ranges">
            <help short="The operation mode for automatically learning private ranges to not be SNAT"/>
            <enum>
              <item name="Disabled" value="&quot;Disabled&quot;"/>
              <item name="Enabled" value="&quot;Enabled&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.snat.privateRanges" options="private-ranges">
            <help short="List of private IP addresses/IP address ranges to not be SNAT."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.sql" options="sql" group="Properties">
          <help short="SQL Settings definition."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.sql.allowSqlRedirect" options="allow-sql-redirect">
            <help short="A flag to indicate if SQL Redirect traffic filtering is enabled. Turning on the flag requires no rule using port 11000-11999."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.threatIntelMode" options="threat-intel-mode" group="Properties">
          <help short="The operation mode for Threat Intelligence."/>
          <enum>
            <item name="Alert" value="&quot;Alert&quot;"/>
            <item name="Deny" value="&quot;Deny&quot;"/>
            <item name="Off" value="&quot;Off&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.threatIntelWhitelist" options="threat-intel-whitelist" group="Properties">
          <help short="ThreatIntel Whitelist for Firewall Policy."/>
          <arg nullable="True" type="array<string>" var="$parameters.properties.threatIntelWhitelist.fqdns" options="fqdns">
            <help short="List of FQDNs for the ThreatIntel Whitelist."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.properties.threatIntelWhitelist.ipAddresses" options="ip-addresses">
            <help short="List of IP addresses for the ThreatIntel Whitelist."/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="FirewallPolicyDrafts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/firewallPolicyDrafts/default">
          <request method="get">
            <path>
              <param type="string" name="firewallPolicyName" arg="$Path.firewallPolicyName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="FirewallPolicyDraft_read">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/firewallPolicies/{}/firewallPolicyDrafts/default"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="basePolicy" cls="SubResource_read">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="dnsSettings">
                      <prop type="boolean" name="enableProxy"/>
                      <prop nullable="True" type="boolean" name="requireProxyForNetworkRules"/>
                      <prop type="array<string>" name="servers">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="explicitProxy">
                      <prop nullable="True" type="boolean" name="enableExplicitProxy"/>
                      <prop nullable="True" type="boolean" name="enablePacFile"/>
                      <prop type="integer32" name="httpPort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                      <prop type="integer32" name="httpsPort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                      <prop type="string" name="pacFile"/>
                      <prop type="integer32" name="pacFilePort">
                        <format maximum="64000" minimum="0"/>
                      </prop>
                    </prop>
                    <prop type="object" name="insights">
                      <prop type="boolean" name="isEnabled"/>
                      <prop type="object" name="logAnalyticsResources">
                        <prop type="@SubResource_read" name="defaultWorkspaceId"/>
                        <prop type="array<object>" name="workspaces">
                          <item type="object">
                            <prop type="string" name="region"/>
                            <prop type="@SubResource_read" name="workspaceId"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="integer32" name="retentionDays"/>
                    </prop>
                    <prop type="object" name="intrusionDetection">
                      <prop type="object" name="configuration">
                        <prop type="array<object>" name="bypassTrafficSettings">
                          <item type="object">
                            <prop type="string" name="description"/>
                            <prop type="array<string>" name="destinationAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="destinationIpGroups">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="destinationPorts">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="protocol">
                              <enum>
                                <item value="&quot;ANY&quot;"/>
                                <item value="&quot;ICMP&quot;"/>
                                <item value="&quot;TCP&quot;"/>
                                <item value="&quot;UDP&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="sourceAddresses">
                              <item type="string"/>
                            </prop>
                            <prop type="array<string>" name="sourceIpGroups">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<string>" name="privateRanges">
                          <item type="string"/>
                        </prop>
                        <prop type="array<object>" name="signatureOverrides">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;Alert&quot;"/>
                                <item value="&quot;Deny&quot;"/>
                                <item value="&quot;Off&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="string" name="mode">
                        <enum>
                          <item value="&quot;Alert&quot;"/>
                          <item value="&quot;Deny&quot;"/>
                          <item value="&quot;Off&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="profile">
                        <enum>
                          <item value="&quot;Advanced&quot;"/>
                          <item value="&quot;Basic&quot;"/>
                          <item value="&quot;Extended&quot;"/>
                          <item value="&quot;Standard&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="snat">
                      <prop type="string" name="autoLearnPrivateRanges">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="privateRanges">
                        <item type="string"/>
                      </prop>
                    </prop>
                    <prop type="object" name="sql">
                      <prop type="boolean" name="allowSqlRedirect"/>
                    </prop>
                    <prop type="string" name="threatIntelMode">
                      <enum>
                        <item value="&quot;Alert&quot;"/>
                        <item value="&quot;Deny&quot;"/>
                        <item value="&quot;Off&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="threatIntelWhitelist">
                      <prop type="array<string>" name="fqdns">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="ipAddresses">
                        <item type="string"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$parameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/firewallPolicies/{}/firewallPolicyDrafts/default"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="basePolicy" arg="$parameters.properties.basePolicy" cls="SubResource_update">
                  <prop type="string" name="id" arg="@SubResource_update.id"/>
                </prop>
                <prop type="object" name="dnsSettings" arg="$parameters.properties.dnsSettings">
                  <prop type="boolean" name="enableProxy" arg="$parameters.properties.dnsSettings.enableProxy"/>
                  <prop nullable="True" type="boolean" name="requireProxyForNetworkRules" arg="$parameters.properties.dnsSettings.requireProxyForNetworkRules"/>
                  <prop type="array<string>" name="servers" arg="$parameters.properties.dnsSettings.servers">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="object" name="explicitProxy" arg="$parameters.properties.explicitProxy">
                  <prop nullable="True" type="boolean" name="enableExplicitProxy" arg="$parameters.properties.explicitProxy.enableExplicitProxy"/>
                  <prop nullable="True" type="boolean" name="enablePacFile" arg="$parameters.properties.explicitProxy.enablePacFile"/>
                  <prop type="integer32" name="httpPort" arg="$parameters.properties.explicitProxy.httpPort">
                    <format maximum="64000" minimum="0"/>
                  </prop>
                  <prop type="integer32" name="httpsPort" arg="$parameters.properties.explicitProxy.httpsPort">
                    <format maximum="64000" minimum="0"/>
                  </prop>
                  <prop type="string" name="pacFile" arg="$parameters.properties.explicitProxy.pacFile"/>
                  <prop type="integer32" name="pacFilePort" arg="$parameters.properties.explicitProxy.pacFilePort">
                    <format maximum="64000" minimum="0"/>
                  </prop>
                </prop>
                <prop type="object" name="insights" arg="$parameters.properties.insights">
                  <prop type="boolean" name="isEnabled" arg="$parameters.properties.insights.isEnabled"/>
                  <prop type="object" name="logAnalyticsResources" arg="$parameters.properties.insights.logAnalyticsResources">
                    <prop type="@SubResource_update" name="defaultWorkspaceId" arg="$parameters.properties.insights.logAnalyticsResources.defaultWorkspaceId"/>
                    <prop type="array<object>" name="workspaces" arg="$parameters.properties.insights.logAnalyticsResources.workspaces">
                      <item type="object">
                        <prop type="string" name="region" arg="$parameters.properties.insights.logAnalyticsResources.workspaces[].region"/>
                        <prop type="@SubResource_update" name="workspaceId" arg="$parameters.properties.insights.logAnalyticsResources.workspaces[].workspaceId"/>
                      </item>
                    </prop>
                  </prop>
                  <prop type="integer32" name="retentionDays" arg="$parameters.properties.insights.retentionDays"/>
                </prop>
                <prop type="object" name="intrusionDetection" arg="$parameters.properties.intrusionDetection">
                  <prop type="object" name="configuration" arg="$parameters.properties.intrusionDetection.configuration">
                    <prop type="array<object>" name="bypassTrafficSettings" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings">
                      <item type="object">
                        <prop type="string" name="description" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].description"/>
                        <prop type="array<string>" name="destinationAddresses" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationAddresses">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="destinationIpGroups" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationIpGroups">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="destinationPorts" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].destinationPorts">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].name"/>
                        <prop type="string" name="protocol" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].protocol">
                          <enum>
                            <item value="&quot;ANY&quot;"/>
                            <item value="&quot;ICMP&quot;"/>
                            <item value="&quot;TCP&quot;"/>
                            <item value="&quot;UDP&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<string>" name="sourceAddresses" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].sourceAddresses">
                          <item type="string"/>
                        </prop>
                        <prop type="array<string>" name="sourceIpGroups" arg="$parameters.properties.intrusionDetection.configuration.bypassTrafficSettings[].sourceIpGroups">
                          <item type="string"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<string>" name="privateRanges" arg="$parameters.properties.intrusionDetection.configuration.privateRanges">
                      <item type="string"/>
                    </prop>
                    <prop type="array<object>" name="signatureOverrides" arg="$parameters.properties.intrusionDetection.configuration.signatureOverrides">
                      <item type="object">
                        <prop type="string" name="id" arg="$parameters.properties.intrusionDetection.configuration.signatureOverrides[].id"/>
                        <prop type="string" name="mode" arg="$parameters.properties.intrusionDetection.configuration.signatureOverrides[].mode">
                          <enum>
                            <item value="&quot;Alert&quot;"/>
                            <item value="&quot;Deny&quot;"/>
                            <item value="&quot;Off&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </prop>
                  <prop type="string" name="mode" arg="$parameters.properties.intrusionDetection.mode">
                    <enum>
                      <item value="&quot;Alert&quot;"/>
                      <item value="&quot;Deny&quot;"/>
                      <item value="&quot;Off&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="profile" arg="$parameters.properties.intrusionDetection.profile">
                    <enum>
                      <item value="&quot;Advanced&quot;"/>
                      <item value="&quot;Basic&quot;"/>
                      <item value="&quot;Extended&quot;"/>
                      <item value="&quot;Standard&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="object" name="snat" arg="$parameters.properties.snat">
                  <prop type="string" name="autoLearnPrivateRanges" arg="$parameters.properties.snat.autoLearnPrivateRanges">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<string>" name="privateRanges" arg="$parameters.properties.snat.privateRanges">
                    <item type="string"/>
                  </prop>
                </prop>
                <prop type="object" name="sql" arg="$parameters.properties.sql">
                  <prop type="boolean" name="allowSqlRedirect" arg="$parameters.properties.sql.allowSqlRedirect"/>
                </prop>
                <prop type="string" name="threatIntelMode" arg="$parameters.properties.threatIntelMode">
                  <enum>
                    <item value="&quot;Alert&quot;"/>
                    <item value="&quot;Deny&quot;"/>
                    <item value="&quot;Off&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="threatIntelWhitelist" arg="$parameters.properties.threatIntelWhitelist">
                  <prop type="array<string>" name="fqdns" arg="$parameters.properties.threatIntelWhitelist.fqdns">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="ipAddresses" arg="$parameters.properties.threatIntelWhitelist.ipAddresses">
                    <item type="string"/>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="FirewallPolicyDrafts_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/firewallPolicies/{firewallPolicyName}/firewallPolicyDrafts/default">
          <request method="put">
            <path>
              <param type="string" name="firewallPolicyName" arg="$Path.firewallPolicyName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@FirewallPolicyDraft_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
