<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}/catalogs/{}/imagedefinitions/{}" version="2024-10-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0vY2F0YWxvZ3Mve2NhdGFsb2dOYW1lfS9pbWFnZURlZmluaXRpb25zL3tpbWFnZURlZmluaXRpb25OYW1lfQ==/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter admin image-definition">
    <command name="show" version="2024-10-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.devcenter/projects/{}/catalogs/{}/imagedefinitions/{}" version="2024-10-01-preview" swagger="mgmt-plane/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGV2Q2VudGVyL3Byb2plY3RzL3twcm9qZWN0TmFtZX0vY2F0YWxvZ3Mve2NhdGFsb2dOYW1lfS9pbWFnZURlZmluaXRpb25zL3tpbWFnZURlZmluaXRpb25OYW1lfQ==/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.catalogName" options="catalog-name" required="True" idPart="child_name_1">
          <help short="The name of the Catalog."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.imageDefinitionName" options="image-definition-name name n" required="True" idPart="child_name_2">
          <help short="The name of the Image Definition."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name project" required="True" group="" idPart="name">
          <help short="The name of the project. Use `az configure -d project=<project_name>` to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ProjectCatalogImageDefinitions_GetByProjectCatalog">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/catalogs/{catalogName}/imageDefinitions/{imageDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="catalogName" arg="$Path.catalogName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="imageDefinitionName" arg="$Path.imageDefinitionName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DevCenter/projects/{}/catalogs/{}/imageDefinitions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="@ImageReference_read" name="activeImageReference"/>
                    <prop readOnly="True" type="string" name="fileUrl"/>
                    <prop type="object" name="imageReference" cls="ImageReference_read">
                      <prop readOnly="True" type="string" name="exactVersion"/>
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="object" name="imageValidationErrorDetails">
                      <prop type="string" name="code"/>
                      <prop type="string" name="message"/>
                    </prop>
                    <prop type="string" name="imageValidationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;TimedOut&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="latestBuild">
                      <prop readOnly="True" type="dateTime" name="endTime"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop readOnly="True" type="dateTime" name="startTime"/>
                      <prop readOnly="True" type="string" name="status">
                        <enum>
                          <item value="&quot;Cancelled&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;Running&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;TimedOut&quot;"/>
                          <item value="&quot;ValidationFailed&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="validationStatus">
                      <enum>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Pending&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
