<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}/versions/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfS92ZXJzaW9ucy97dmVyc2lvbklkfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
  <commandGroup name="blueprint">
    <command name="publish" version="2018-11-01-preview" confirmation="">
      <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}/versions/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfS92ZXJzaW9ucy97dmVyc2lvbklkfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.blueprintName" options="blueprint-name" required="True">
          <help short="Name of the blueprint definition."/>
        </arg>
        <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
          <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
        </arg>
        <arg type="string" var="$Path.versionId" options="version" required="True" group="">
          <help short="Version of the published blueprint definition."/>
        </arg>
        <arg type="string" var="$publishedBlueprint.properties.changeNotes" options="change-notes" group="">
          <help short="Version-specific change notes."/>
          <format maxLength="500"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$publishedBlueprint.properties.description" options="description" hide="True" group="Properties">
          <help short="Multi-line explain this resource."/>
          <format maxLength="500"/>
        </arg>
        <arg type="string" var="$publishedBlueprint.properties.displayName" options="display-name" hide="True" group="Properties">
          <help short="One-liner string explain this resource."/>
          <format maxLength="256"/>
        </arg>
        <arg type="object" var="$publishedBlueprint.properties.parameters" options="parameters" hide="True" group="Properties">
          <help short="Parameters required by this blueprint definition."/>
          <additionalProp>
            <item type="object">
              <arg type="array<string>" var="$publishedBlueprint.properties.parameters{}.allowedValues" options="allowed-values">
                <help short="Array of allowed values for this parameter."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$publishedBlueprint.properties.parameters{}.defaultValue" options="default-value">
                <help short="Default Value for this parameter."/>
              </arg>
              <arg type="object" var="$publishedBlueprint.properties.parameters{}.metadata" options="metadata" cls="ParameterDefinitionMetadata_create">
                <help short="User-friendly properties for this parameter."/>
                <arg type="string" var="@ParameterDefinitionMetadata_create.description" options="description">
                  <help short="Description of this parameter/resourceGroup."/>
                  <format maxLength="500"/>
                </arg>
                <arg type="string" var="@ParameterDefinitionMetadata_create.displayName" options="display-name">
                  <help short="DisplayName of this parameter/resourceGroup."/>
                  <format maxLength="256"/>
                </arg>
                <arg type="string" var="@ParameterDefinitionMetadata_create.strongType" options="strong-type">
                  <help short="StrongType for UI to render rich experience during blueprint assignment. Supported strong types are resourceType, principalId and location."/>
                  <format maxLength="64"/>
                </arg>
              </arg>
              <arg type="string" var="$publishedBlueprint.properties.parameters{}.type" options="type" required="True">
                <help short="Allowed data types for Resource Manager template parameters."/>
                <enum>
                  <item name="array" value="&quot;array&quot;"/>
                  <item name="bool" value="&quot;bool&quot;"/>
                  <item name="int" value="&quot;int&quot;"/>
                  <item name="object" value="&quot;object&quot;"/>
                  <item name="secureObject" value="&quot;secureObject&quot;"/>
                  <item name="secureString" value="&quot;secureString&quot;"/>
                  <item name="string" value="&quot;string&quot;"/>
                </enum>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="object" var="$publishedBlueprint.properties.resourceGroups" options="resource-groups" hide="True" group="Properties">
          <help short="Resource group placeholders defined by this blueprint definition."/>
          <additionalProp>
            <item type="object">
              <arg type="array<string>" var="$publishedBlueprint.properties.resourceGroups{}.dependsOn" options="depends-on">
                <help short="Artifacts which need to be deployed before this resource group."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$publishedBlueprint.properties.resourceGroups{}.location" options="location">
                <help short="Location of this resourceGroup. Leave empty if the resource group location will be specified during the blueprint assignment."/>
              </arg>
              <arg type="@ParameterDefinitionMetadata_create" var="$publishedBlueprint.properties.resourceGroups{}.metadata" options="metadata">
                <help short="User-friendly properties for this resource group."/>
              </arg>
              <arg type="string" var="$publishedBlueprint.properties.resourceGroups{}.name" options="name">
                <help short="Name of this resourceGroup. Leave empty if the resource group name will be specified during the blueprint assignment."/>
              </arg>
              <arg type="object" var="$publishedBlueprint.properties.resourceGroups{}.tags" options="tags">
                <help short="Tags to be assigned to this resource group."/>
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="string" var="$publishedBlueprint.properties.targetScope" options="target-scope" hide="True" group="Properties">
          <help short="The scope where this blueprint definition can be assigned."/>
          <enum>
            <item name="managementGroup" value="&quot;managementGroup&quot;"/>
            <item name="subscription" value="&quot;subscription&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="PublishedBlueprints_Create">
        <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}">
          <request method="put">
            <path>
              <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
              <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
              <param type="string" name="versionId" arg="$Path.versionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-11-01-preview&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="publishedBlueprint" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="blueprintName" arg="$Path.blueprintName"/>
                    <prop type="string" name="changeNotes" arg="$publishedBlueprint.properties.changeNotes">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="description" arg="$publishedBlueprint.properties.description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName" arg="$publishedBlueprint.properties.displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="parameters" arg="$publishedBlueprint.properties.parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="allowedValues" arg="$publishedBlueprint.properties.parameters{}.allowedValues">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="defaultValue" arg="$publishedBlueprint.properties.parameters{}.defaultValue"/>
                          <prop type="object" name="metadata" arg="$publishedBlueprint.properties.parameters{}.metadata" cls="ParameterDefinitionMetadata_create" clientFlatten="True">
                            <prop type="string" name="description" arg="@ParameterDefinitionMetadata_create.description">
                              <format maxLength="500"/>
                            </prop>
                            <prop type="string" name="displayName" arg="@ParameterDefinitionMetadata_create.displayName">
                              <format maxLength="256"/>
                            </prop>
                            <prop type="string" name="strongType" arg="@ParameterDefinitionMetadata_create.strongType">
                              <format maxLength="64"/>
                            </prop>
                          </prop>
                          <prop type="string" name="type" arg="$publishedBlueprint.properties.parameters{}.type" required="True">
                            <enum>
                              <item value="&quot;array&quot;"/>
                              <item value="&quot;bool&quot;"/>
                              <item value="&quot;int&quot;"/>
                              <item value="&quot;object&quot;"/>
                              <item value="&quot;secureObject&quot;"/>
                              <item value="&quot;secureString&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="resourceGroups" arg="$publishedBlueprint.properties.resourceGroups">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="dependsOn" arg="$publishedBlueprint.properties.resourceGroups{}.dependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="location" arg="$publishedBlueprint.properties.resourceGroups{}.location"/>
                          <prop type="@ParameterDefinitionMetadata_create" name="metadata" arg="$publishedBlueprint.properties.resourceGroups{}.metadata" clientFlatten="True"/>
                          <prop type="string" name="name" arg="$publishedBlueprint.properties.resourceGroups{}.name"/>
                          <prop type="object" name="tags" arg="$publishedBlueprint.properties.resourceGroups{}.tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="targetScope" arg="$publishedBlueprint.properties.targetScope">
                      <enum>
                        <item value="&quot;managementGroup&quot;"/>
                        <item value="&quot;subscription&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{}/versions/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="blueprintName"/>
                    <prop type="string" name="changeNotes">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="description">
                      <format maxLength="500"/>
                    </prop>
                    <prop type="string" name="displayName">
                      <format maxLength="256"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="allowedValues">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="defaultValue"/>
                          <prop type="object" name="metadata" cls="ParameterDefinitionMetadata_read" clientFlatten="True">
                            <prop type="string" name="description">
                              <format maxLength="500"/>
                            </prop>
                            <prop type="string" name="displayName">
                              <format maxLength="256"/>
                            </prop>
                            <prop type="string" name="strongType">
                              <format maxLength="64"/>
                            </prop>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;array&quot;"/>
                              <item value="&quot;bool&quot;"/>
                              <item value="&quot;int&quot;"/>
                              <item value="&quot;object&quot;"/>
                              <item value="&quot;secureObject&quot;"/>
                              <item value="&quot;secureString&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="resourceGroups">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<string>" name="dependsOn">
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="location"/>
                          <prop type="@ParameterDefinitionMetadata_read" name="metadata" clientFlatten="True"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="tags">
                            <additionalProp>
                              <item type="string"/>
                            </additionalProp>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="status">
                      <prop readOnly="True" type="dateTime" name="lastModified"/>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    </prop>
                    <prop type="string" name="targetScope">
                      <enum>
                        <item value="&quot;managementGroup&quot;"/>
                        <item value="&quot;subscription&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="version">
      <command name="show" version="2018-11-01-preview" confirmation="">
        <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}/versions/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfS92ZXJzaW9ucy97dmVyc2lvbklkfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.blueprintName" options="blueprint-name" required="True">
            <help short="Name of the blueprint definition."/>
          </arg>
          <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
            <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
          </arg>
          <arg type="string" var="$Path.versionId" options="version" required="True" group="">
            <help short="Version of the published blueprint definition."/>
          </arg>
        </argGroup>
        <operation operationId="PublishedBlueprints_Get">
          <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}">
            <request method="get">
              <path>
                <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
                <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
                <param type="string" name="versionId" arg="$Path.versionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2018-11-01-preview&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{}/versions/{}"/>
                    </prop>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="string" name="blueprintName"/>
                      <prop type="string" name="changeNotes">
                        <format maxLength="500"/>
                      </prop>
                      <prop type="string" name="description">
                        <format maxLength="500"/>
                      </prop>
                      <prop type="string" name="displayName">
                        <format maxLength="256"/>
                      </prop>
                      <prop type="object" name="parameters">
                        <additionalProp>
                          <item type="object">
                            <prop type="array<string>" name="allowedValues">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="defaultValue"/>
                            <prop type="object" name="metadata" cls="ParameterDefinitionMetadata_read" clientFlatten="True">
                              <prop type="string" name="description">
                                <format maxLength="500"/>
                              </prop>
                              <prop type="string" name="displayName">
                                <format maxLength="256"/>
                              </prop>
                              <prop type="string" name="strongType">
                                <format maxLength="64"/>
                              </prop>
                            </prop>
                            <prop type="string" name="type" required="True">
                              <enum>
                                <item value="&quot;array&quot;"/>
                                <item value="&quot;bool&quot;"/>
                                <item value="&quot;int&quot;"/>
                                <item value="&quot;object&quot;"/>
                                <item value="&quot;secureObject&quot;"/>
                                <item value="&quot;secureString&quot;"/>
                                <item value="&quot;string&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </additionalProp>
                      </prop>
                      <prop type="object" name="resourceGroups">
                        <additionalProp>
                          <item type="object">
                            <prop type="array<string>" name="dependsOn">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="location"/>
                            <prop type="@ParameterDefinitionMetadata_read" name="metadata" clientFlatten="True"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </additionalProp>
                      </prop>
                      <prop type="object" name="status">
                        <prop readOnly="True" type="dateTime" name="lastModified"/>
                        <prop readOnly="True" type="dateTime" name="timeCreated"/>
                      </prop>
                      <prop type="string" name="targetScope">
                        <enum>
                          <item value="&quot;managementGroup&quot;"/>
                          <item value="&quot;subscription&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Instance" clientFlatten="True"/>
      </command>
      <command name="delete" version="2018-11-01-preview" confirmation="Are you sure you want to perform this operation?">
        <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}/versions/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfS92ZXJzaW9ucy97dmVyc2lvbklkfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.blueprintName" options="blueprint-name" required="True">
            <help short="Name of the blueprint definition."/>
          </arg>
          <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
            <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
          </arg>
          <arg type="string" var="$Path.versionId" options="version" required="True" group="">
            <help short="Version of the published blueprint definition."/>
          </arg>
        </argGroup>
        <operation operationId="PublishedBlueprints_Delete">
          <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}">
            <request method="delete">
              <path>
                <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
                <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
                <param type="string" name="versionId" arg="$Path.versionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2018-11-01-preview&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{}/versions/{}"/>
                    </prop>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="string" name="blueprintName"/>
                      <prop type="string" name="changeNotes">
                        <format maxLength="500"/>
                      </prop>
                      <prop type="string" name="description">
                        <format maxLength="500"/>
                      </prop>
                      <prop type="string" name="displayName">
                        <format maxLength="256"/>
                      </prop>
                      <prop type="object" name="parameters">
                        <additionalProp>
                          <item type="object">
                            <prop type="array<string>" name="allowedValues">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="defaultValue"/>
                            <prop type="object" name="metadata" cls="ParameterDefinitionMetadata_read" clientFlatten="True">
                              <prop type="string" name="description">
                                <format maxLength="500"/>
                              </prop>
                              <prop type="string" name="displayName">
                                <format maxLength="256"/>
                              </prop>
                              <prop type="string" name="strongType">
                                <format maxLength="64"/>
                              </prop>
                            </prop>
                            <prop type="string" name="type" required="True">
                              <enum>
                                <item value="&quot;array&quot;"/>
                                <item value="&quot;bool&quot;"/>
                                <item value="&quot;int&quot;"/>
                                <item value="&quot;object&quot;"/>
                                <item value="&quot;secureObject&quot;"/>
                                <item value="&quot;secureString&quot;"/>
                                <item value="&quot;string&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </additionalProp>
                      </prop>
                      <prop type="object" name="resourceGroups">
                        <additionalProp>
                          <item type="object">
                            <prop type="array<string>" name="dependsOn">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="location"/>
                            <prop type="@ParameterDefinitionMetadata_read" name="metadata" clientFlatten="True"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </additionalProp>
                      </prop>
                      <prop type="object" name="status">
                        <prop readOnly="True" type="dateTime" name="lastModified"/>
                        <prop readOnly="True" type="dateTime" name="timeCreated"/>
                      </prop>
                      <prop type="string" name="targetScope">
                        <enum>
                          <item value="&quot;managementGroup&quot;"/>
                          <item value="&quot;subscription&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response statusCode="204"/>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Instance" clientFlatten="True"/>
      </command>
      <command name="update" version="2018-11-01-preview">
        <resource id="/{resourcescope}/providers/microsoft.blueprint/blueprints/{}/versions/{}" version="2018-11-01-preview" swagger="mgmt-plane/blueprint/ResourceProviders/Microsoft.Blueprint/Paths/L3tyZXNvdXJjZVNjb3BlfS9wcm92aWRlcnMvTWljcm9zb2Z0LkJsdWVwcmludC9ibHVlcHJpbnRzL3tibHVlcHJpbnROYW1lfS92ZXJzaW9ucy97dmVyc2lvbklkfQ==/V/MjAxOC0xMS0wMS1wcmV2aWV3"/>
        <argGroup name="">
          <arg type="string" var="$Path.blueprintName" options="blueprint-name" required="True">
            <help short="Name of the blueprint definition."/>
          </arg>
          <arg type="string" var="$Path.resourceScope" options="resource-scope" required="True">
            <help short="The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}')."/>
          </arg>
          <arg type="string" var="$Path.versionId" options="version" required="True" group="">
            <help short="Version of the published blueprint definition."/>
          </arg>
        </argGroup>
        <argGroup name="Properties">
          <arg nullable="True" type="string" var="$publishedBlueprint.properties.changeNotes" options="change-notes" group="Properties">
            <help short="Version-specific change notes."/>
            <format maxLength="500"/>
          </arg>
          <arg nullable="True" type="string" var="$publishedBlueprint.properties.description" options="description" group="Properties">
            <help short="Multi-line explain this resource."/>
            <format maxLength="500"/>
          </arg>
          <arg nullable="True" type="string" var="$publishedBlueprint.properties.displayName" options="display-name" group="Properties">
            <help short="One-liner string explain this resource."/>
            <format maxLength="256"/>
          </arg>
          <arg nullable="True" type="object" var="$publishedBlueprint.properties.parameters" options="parameters" group="Properties">
            <help short="Parameters required by this blueprint definition."/>
            <additionalProp>
              <item nullable="True" type="object">
                <arg nullable="True" type="array<string>" var="$publishedBlueprint.properties.parameters{}.allowedValues" options="allowed-values">
                  <help short="Array of allowed values for this parameter."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="string" var="$publishedBlueprint.properties.parameters{}.defaultValue" options="default-value">
                  <help short="Default Value for this parameter."/>
                </arg>
                <arg nullable="True" type="object" var="$publishedBlueprint.properties.parameters{}.metadata" options="metadata" cls="ParameterDefinitionMetadata_update">
                  <help short="User-friendly properties for this parameter."/>
                  <arg nullable="True" type="string" var="@ParameterDefinitionMetadata_update.description" options="description">
                    <help short="Description of this parameter/resourceGroup."/>
                    <format maxLength="500"/>
                  </arg>
                  <arg nullable="True" type="string" var="@ParameterDefinitionMetadata_update.displayName" options="display-name">
                    <help short="DisplayName of this parameter/resourceGroup."/>
                    <format maxLength="256"/>
                  </arg>
                  <arg nullable="True" type="string" var="@ParameterDefinitionMetadata_update.strongType" options="strong-type">
                    <help short="StrongType for UI to render rich experience during blueprint assignment. Supported strong types are resourceType, principalId and location."/>
                    <format maxLength="64"/>
                  </arg>
                </arg>
                <arg type="string" var="$publishedBlueprint.properties.parameters{}.type" options="type">
                  <help short="Allowed data types for Resource Manager template parameters."/>
                  <enum>
                    <item name="array" value="&quot;array&quot;"/>
                    <item name="bool" value="&quot;bool&quot;"/>
                    <item name="int" value="&quot;int&quot;"/>
                    <item name="object" value="&quot;object&quot;"/>
                    <item name="secureObject" value="&quot;secureObject&quot;"/>
                    <item name="secureString" value="&quot;secureString&quot;"/>
                    <item name="string" value="&quot;string&quot;"/>
                  </enum>
                </arg>
              </item>
            </additionalProp>
          </arg>
          <arg nullable="True" type="object" var="$publishedBlueprint.properties.resourceGroups" options="resource-groups" group="Properties">
            <help short="Resource group placeholders defined by this blueprint definition."/>
            <additionalProp>
              <item nullable="True" type="object">
                <arg nullable="True" type="array<string>" var="$publishedBlueprint.properties.resourceGroups{}.dependsOn" options="depends-on">
                  <help short="Artifacts which need to be deployed before this resource group."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg nullable="True" type="string" var="$publishedBlueprint.properties.resourceGroups{}.location" options="location">
                  <help short="Location of this resourceGroup. Leave empty if the resource group location will be specified during the blueprint assignment."/>
                </arg>
                <arg nullable="True" type="@ParameterDefinitionMetadata_update" var="$publishedBlueprint.properties.resourceGroups{}.metadata" options="metadata">
                  <help short="User-friendly properties for this resource group."/>
                </arg>
                <arg nullable="True" type="string" var="$publishedBlueprint.properties.resourceGroups{}.name" options="name">
                  <help short="Name of this resourceGroup. Leave empty if the resource group name will be specified during the blueprint assignment."/>
                </arg>
                <arg nullable="True" type="object" var="$publishedBlueprint.properties.resourceGroups{}.tags" options="tags">
                  <help short="Tags to be assigned to this resource group."/>
                  <additionalProp>
                    <item nullable="True" type="string"/>
                  </additionalProp>
                </arg>
              </item>
            </additionalProp>
          </arg>
          <arg nullable="True" type="string" var="$publishedBlueprint.properties.targetScope" options="target-scope" group="Properties">
            <help short="The scope where this blueprint definition can be assigned."/>
            <enum>
              <item name="managementGroup" value="&quot;managementGroup&quot;"/>
              <item name="subscription" value="&quot;subscription&quot;"/>
            </enum>
          </arg>
        </argGroup>
        <operation operationId="PublishedBlueprints_Get">
          <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}">
            <request method="get">
              <path>
                <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
                <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
                <param type="string" name="versionId" arg="$Path.versionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2018-11-01-preview&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="PublishedBlueprint_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{}/versions/{}"/>
                    </prop>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" required="True" clientFlatten="True">
                      <prop type="string" name="blueprintName"/>
                      <prop type="string" name="changeNotes">
                        <format maxLength="500"/>
                      </prop>
                      <prop type="string" name="description">
                        <format maxLength="500"/>
                      </prop>
                      <prop type="string" name="displayName">
                        <format maxLength="256"/>
                      </prop>
                      <prop type="object" name="parameters">
                        <additionalProp>
                          <item type="object">
                            <prop type="array<string>" name="allowedValues">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="defaultValue"/>
                            <prop type="object" name="metadata" cls="ParameterDefinitionMetadata_read" clientFlatten="True">
                              <prop type="string" name="description">
                                <format maxLength="500"/>
                              </prop>
                              <prop type="string" name="displayName">
                                <format maxLength="256"/>
                              </prop>
                              <prop type="string" name="strongType">
                                <format maxLength="64"/>
                              </prop>
                            </prop>
                            <prop type="string" name="type" required="True">
                              <enum>
                                <item value="&quot;array&quot;"/>
                                <item value="&quot;bool&quot;"/>
                                <item value="&quot;int&quot;"/>
                                <item value="&quot;object&quot;"/>
                                <item value="&quot;secureObject&quot;"/>
                                <item value="&quot;secureString&quot;"/>
                                <item value="&quot;string&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </additionalProp>
                      </prop>
                      <prop type="object" name="resourceGroups">
                        <additionalProp>
                          <item type="object">
                            <prop type="array<string>" name="dependsOn">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="location"/>
                            <prop type="@ParameterDefinitionMetadata_read" name="metadata" clientFlatten="True"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="tags">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                          </item>
                        </additionalProp>
                      </prop>
                      <prop type="object" name="status">
                        <prop readOnly="True" type="dateTime" name="lastModified"/>
                        <prop readOnly="True" type="dateTime" name="timeCreated"/>
                      </prop>
                      <prop type="string" name="targetScope">
                        <enum>
                          <item value="&quot;managementGroup&quot;"/>
                          <item value="&quot;subscription&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Instance">
            <json>
              <schema type="object" name="publishedBlueprint" clientFlatten="True">
                <prop type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="string" name="blueprintName" arg="$Path.blueprintName"/>
                  <prop type="string" name="changeNotes" arg="$publishedBlueprint.properties.changeNotes">
                    <format maxLength="500"/>
                  </prop>
                  <prop type="string" name="description" arg="$publishedBlueprint.properties.description">
                    <format maxLength="500"/>
                  </prop>
                  <prop type="string" name="displayName" arg="$publishedBlueprint.properties.displayName">
                    <format maxLength="256"/>
                  </prop>
                  <prop type="object" name="parameters" arg="$publishedBlueprint.properties.parameters">
                    <additionalProp>
                      <item type="object">
                        <prop type="array<string>" name="allowedValues" arg="$publishedBlueprint.properties.parameters{}.allowedValues">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="defaultValue" arg="$publishedBlueprint.properties.parameters{}.defaultValue"/>
                        <prop type="object" name="metadata" arg="$publishedBlueprint.properties.parameters{}.metadata" cls="ParameterDefinitionMetadata_update" clientFlatten="True">
                          <prop type="string" name="description" arg="@ParameterDefinitionMetadata_update.description">
                            <format maxLength="500"/>
                          </prop>
                          <prop type="string" name="displayName" arg="@ParameterDefinitionMetadata_update.displayName">
                            <format maxLength="256"/>
                          </prop>
                          <prop type="string" name="strongType" arg="@ParameterDefinitionMetadata_update.strongType">
                            <format maxLength="64"/>
                          </prop>
                        </prop>
                        <prop type="string" name="type" arg="$publishedBlueprint.properties.parameters{}.type" required="True">
                          <enum>
                            <item value="&quot;array&quot;"/>
                            <item value="&quot;bool&quot;"/>
                            <item value="&quot;int&quot;"/>
                            <item value="&quot;object&quot;"/>
                            <item value="&quot;secureObject&quot;"/>
                            <item value="&quot;secureString&quot;"/>
                            <item value="&quot;string&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </additionalProp>
                  </prop>
                  <prop type="object" name="resourceGroups" arg="$publishedBlueprint.properties.resourceGroups">
                    <additionalProp>
                      <item type="object">
                        <prop type="array<string>" name="dependsOn" arg="$publishedBlueprint.properties.resourceGroups{}.dependsOn">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="location" arg="$publishedBlueprint.properties.resourceGroups{}.location"/>
                        <prop type="@ParameterDefinitionMetadata_update" name="metadata" arg="$publishedBlueprint.properties.resourceGroups{}.metadata" clientFlatten="True"/>
                        <prop type="string" name="name" arg="$publishedBlueprint.properties.resourceGroups{}.name"/>
                        <prop type="object" name="tags" arg="$publishedBlueprint.properties.resourceGroups{}.tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </additionalProp>
                  </prop>
                  <prop type="string" name="targetScope" arg="$publishedBlueprint.properties.targetScope">
                    <enum>
                      <item value="&quot;managementGroup&quot;"/>
                      <item value="&quot;subscription&quot;"/>
                    </enum>
                  </prop>
                </prop>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="PublishedBlueprints_Create">
          <http path="/{resourceScope}/providers/Microsoft.Blueprint/blueprints/{blueprintName}/versions/{versionId}">
            <request method="put">
              <path>
                <param type="string" name="blueprintName" arg="$Path.blueprintName" required="True"/>
                <param type="string" name="resourceScope" arg="$Path.resourceScope" required="True" skipUrlEncoding="True"/>
                <param type="string" name="versionId" arg="$Path.versionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2018-11-01-preview&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="201">
              <body>
                <json var="$Instance">
                  <schema type="@PublishedBlueprint_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@MgmtErrorFormat"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Instance" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
