<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/storageclasses/{}" version="2023-10-01-preview" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9zdG9yYWdlQ2xhc3Nlcy97c3RvcmFnZUNsYXNzTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="k8s-runtime storage-class">
    <command name="show" version="2023-10-01-preview" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/storageclasses/{}" version="2023-10-01-preview" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9zdG9yYWdlQ2xhc3Nlcy97c3RvcmFnZUNsYXNzTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.resourceUri" options="resource-uri" required="True">
          <help short="The fully qualified Azure Resource manager identifier of the resource."/>
        </arg>
        <arg type="string" var="$Path.storageClassName" options="storage-class-name" required="True">
          <help short="The name of the the storage class"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
      </argGroup>
      <operation operationId="StorageClass_Get">
        <http path="/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{storageClassName}">
          <request method="get">
            <path>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
              <param type="string" name="storageClassName" arg="$Path.storageClassName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<string>" name="accessModes">
                      <item type="string">
                        <enum>
                          <item value="&quot;ReadWriteMany&quot;"/>
                          <item value="&quot;ReadWriteOnce&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="allowVolumeExpansion">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Disallow&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="dataResilience">
                      <enum>
                        <item value="&quot;DataResilient&quot;"/>
                        <item value="&quot;NotDataResilient&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="failoverSpeed">
                      <enum>
                        <item value="&quot;Fast&quot;"/>
                        <item value="&quot;NotAvailable&quot;"/>
                        <item value="&quot;Slow&quot;"/>
                        <item value="&quot;Super&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="limitations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="mountOptions">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="performance">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;Ultra&quot;"/>
                        <item value="&quot;Undefined&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="priority"/>
                    <prop type="string" name="provisioner"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="typeProperties" required="True">
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;Blob&quot;"/>
                          <item value="&quot;NFS&quot;"/>
                          <item value="&quot;Native&quot;"/>
                          <item value="&quot;RWX&quot;"/>
                          <item value="&quot;SMB&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="type" value="Blob">
                        <prop type="password" name="azureStorageAccountKey" required="True" secret="True"/>
                        <prop type="string" name="azureStorageAccountName" required="True"/>
                      </discriminator>
                      <discriminator property="type" value="NFS">
                        <prop type="string" name="mountPermissions"/>
                        <prop type="string" name="onDelete">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Retain&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="server" required="True"/>
                        <prop type="string" name="share" required="True"/>
                        <prop type="string" name="subDir"/>
                      </discriminator>
                      <discriminator property="type" value="Native"/>
                      <discriminator property="type" value="RWX">
                        <prop type="string" name="backingStorageClassName" required="True"/>
                      </discriminator>
                      <discriminator property="type" value="SMB">
                        <prop type="string" name="domain"/>
                        <prop type="password" name="password" secret="True"/>
                        <prop type="string" name="source" required="True"/>
                        <prop type="string" name="subDir"/>
                        <prop type="string" name="username"/>
                      </discriminator>
                    </prop>
                    <prop type="string" name="volumeBindingMode">
                      <enum>
                        <item value="&quot;Immediate&quot;"/>
                        <item value="&quot;WaitForFirstConsumer&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-10-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/storageclasses/{}" version="2023-10-01-preview" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9zdG9yYWdlQ2xhc3Nlcy97c3RvcmFnZUNsYXNzTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.resourceUri" options="resource-uri" required="True">
          <help short="The fully qualified Azure Resource manager identifier of the resource."/>
        </arg>
        <arg type="string" var="$Path.storageClassName" options="storage-class-name" required="True">
          <help short="The name of the the storage class"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
      </argGroup>
      <operation operationId="StorageClass_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{storageClassName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
              <param type="string" name="storageClassName" arg="$Path.storageClassName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-10-01-preview" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/storageclasses/{}" version="2023-10-01-preview" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9zdG9yYWdlQ2xhc3Nlcy97c3RvcmFnZUNsYXNzTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.resourceUri" options="resource-uri" required="True">
          <help short="The fully qualified Azure Resource manager identifier of the resource."/>
        </arg>
        <arg type="string" var="$Path.storageClassName" options="storage-class-name" required="True">
          <help short="The name of the the storage class"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<string>" var="$resource.properties.accessModes" options="access-modes" group="Properties">
          <help short="The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]"/>
          <item type="string">
            <enum>
              <item name="ReadWriteMany" value="&quot;ReadWriteMany&quot;"/>
              <item name="ReadWriteOnce" value="&quot;ReadWriteOnce&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.allowVolumeExpansion" options="allow-volume-expansion" group="Properties">
          <help short="Volume can be expanded or not"/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Disallow" value="&quot;Disallow&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.dataResilience" options="data-resilience" group="Properties">
          <help short="Allow single data node failure"/>
          <enum>
            <item name="DataResilient" value="&quot;DataResilient&quot;"/>
            <item name="NotDataResilient" value="&quot;NotDataResilient&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.failoverSpeed" options="failover-speed" group="Properties">
          <help short="Failover speed: NA, Slow, Fast"/>
          <enum>
            <item name="Fast" value="&quot;Fast&quot;"/>
            <item name="NotAvailable" value="&quot;NotAvailable&quot;"/>
            <item name="Slow" value="&quot;Slow&quot;"/>
            <item name="Super" value="&quot;Super&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$resource.properties.limitations" options="limitations" group="Properties">
          <help short="Limitations of the storage class"/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$resource.properties.mountOptions" options="mount-options" group="Properties">
          <help short="Additional mount options"/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$resource.properties.performance" options="performance" group="Properties">
          <help short="Performance tier"/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="Premium" value="&quot;Premium&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="Ultra" value="&quot;Ultra&quot;"/>
            <item name="Undefined" value="&quot;Undefined&quot;"/>
          </enum>
        </arg>
        <arg type="integer64" var="$resource.properties.priority" options="priority" group="Properties">
          <help short="Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"/>
        </arg>
        <arg type="string" var="$resource.properties.provisioner" options="provisioner" group="Properties">
          <help short="Provisioner name"/>
        </arg>
        <arg type="object" var="$resource.properties.typeProperties" options="type-properties" group="Properties">
          <help short="Properties of the StorageClass"/>
          <arg type="object" var="$resource.properties.typeProperties.Blob" options="blob" group="">
            <help short="Properties of a blob storage class"/>
            <arg type="password" var="$resource.properties.typeProperties.Blob.azureStorageAccountKey" options="azure-storage-account-key" required="True">
              <help short="Azure Storage Account Key"/>
              <prompt msg="Password:"/>
            </arg>
            <arg type="string" var="$resource.properties.typeProperties.Blob.azureStorageAccountName" options="azure-storage-account-name" required="True">
              <help short="Azure Storage Account Name"/>
            </arg>
          </arg>
          <arg type="object" var="$resource.properties.typeProperties.NFS" options="nfs" group="">
            <help short="Properties of a NFS storage class"/>
            <arg type="string" var="$resource.properties.typeProperties.NFS.mountPermissions" options="mount-permissions">
              <help short="Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount"/>
            </arg>
            <arg type="string" var="$resource.properties.typeProperties.NFS.onDelete" options="on-delete">
              <help short="The action to take when a NFS volume is deleted. Default is Delete"/>
              <enum>
                <item name="Delete" value="&quot;Delete&quot;"/>
                <item name="Retain" value="&quot;Retain&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$resource.properties.typeProperties.NFS.server" options="server" required="True">
              <help short="NFS Server"/>
            </arg>
            <arg type="string" var="$resource.properties.typeProperties.NFS.share" options="share" required="True">
              <help short="NFS share"/>
            </arg>
            <arg type="string" var="$resource.properties.typeProperties.NFS.subDir" options="sub-dir">
              <help short="Sub directory under share. If the sub directory doesn't exist, driver will create it"/>
            </arg>
          </arg>
          <arg type="object" var="$resource.properties.typeProperties.Native" options="native">
            <blank value="{}"/>
          </arg>
          <arg type="object" var="$resource.properties.typeProperties.RWX" options="rwx" group="">
            <help short="Properties of a RWX storage class"/>
            <arg type="string" var="$resource.properties.typeProperties.RWX.backingStorageClassName" options="backing-storage-class-name" required="True">
              <help short="The backing storageclass used to create new storageclass"/>
            </arg>
          </arg>
          <arg type="object" var="$resource.properties.typeProperties.SMB" options="smb" group="">
            <help short="Properties of an SMB storage class"/>
            <arg type="string" var="$resource.properties.typeProperties.SMB.domain" options="domain">
              <help short="Server domain"/>
            </arg>
            <arg type="password" var="$resource.properties.typeProperties.SMB.password" options="password">
              <help short="Server password"/>
              <prompt msg="Password:"/>
            </arg>
            <arg type="string" var="$resource.properties.typeProperties.SMB.source" options="source" required="True">
              <help short="SMB Source"/>
            </arg>
            <arg type="string" var="$resource.properties.typeProperties.SMB.subDir" options="sub-dir">
              <help short="Sub directory under share. If the sub directory doesn't exist, driver will create it"/>
            </arg>
            <arg type="string" var="$resource.properties.typeProperties.SMB.username" options="username">
              <help short="Server username"/>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$resource.properties.volumeBindingMode" options="volume-binding-mode" group="Properties">
          <help short="Binding mode of volumes: Immediate, WaitForFirstConsumer"/>
          <enum>
            <item name="Immediate" value="&quot;Immediate&quot;"/>
            <item name="WaitForFirstConsumer" value="&quot;WaitForFirstConsumer&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="StorageClass_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{storageClassName}">
          <request method="put">
            <path>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
              <param type="string" name="storageClassName" arg="$Path.storageClassName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<string>" name="accessModes" arg="$resource.properties.accessModes">
                      <item type="string">
                        <enum>
                          <item value="&quot;ReadWriteMany&quot;"/>
                          <item value="&quot;ReadWriteOnce&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="allowVolumeExpansion" arg="$resource.properties.allowVolumeExpansion">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Disallow&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="dataResilience" arg="$resource.properties.dataResilience">
                      <enum>
                        <item value="&quot;DataResilient&quot;"/>
                        <item value="&quot;NotDataResilient&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="failoverSpeed" arg="$resource.properties.failoverSpeed">
                      <enum>
                        <item value="&quot;Fast&quot;"/>
                        <item value="&quot;NotAvailable&quot;"/>
                        <item value="&quot;Slow&quot;"/>
                        <item value="&quot;Super&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="limitations" arg="$resource.properties.limitations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="mountOptions" arg="$resource.properties.mountOptions">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="performance" arg="$resource.properties.performance">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;Ultra&quot;"/>
                        <item value="&quot;Undefined&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="priority" arg="$resource.properties.priority"/>
                    <prop type="string" name="provisioner" arg="$resource.properties.provisioner"/>
                    <prop type="object" name="typeProperties" arg="$resource.properties.typeProperties" required="True">
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item arg="$resource.properties.typeProperties.Blob" value="&quot;Blob&quot;"/>
                          <item arg="$resource.properties.typeProperties.NFS" value="&quot;NFS&quot;"/>
                          <item arg="$resource.properties.typeProperties.Native" value="&quot;Native&quot;"/>
                          <item arg="$resource.properties.typeProperties.RWX" value="&quot;RWX&quot;"/>
                          <item arg="$resource.properties.typeProperties.SMB" value="&quot;SMB&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="type" value="Blob">
                        <prop type="password" name="azureStorageAccountKey" arg="$resource.properties.typeProperties.Blob.azureStorageAccountKey" required="True" secret="True"/>
                        <prop type="string" name="azureStorageAccountName" arg="$resource.properties.typeProperties.Blob.azureStorageAccountName" required="True"/>
                      </discriminator>
                      <discriminator property="type" value="NFS">
                        <prop type="string" name="mountPermissions" arg="$resource.properties.typeProperties.NFS.mountPermissions"/>
                        <prop type="string" name="onDelete" arg="$resource.properties.typeProperties.NFS.onDelete">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Retain&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="server" arg="$resource.properties.typeProperties.NFS.server" required="True"/>
                        <prop type="string" name="share" arg="$resource.properties.typeProperties.NFS.share" required="True"/>
                        <prop type="string" name="subDir" arg="$resource.properties.typeProperties.NFS.subDir"/>
                      </discriminator>
                      <discriminator property="type" value="Native"/>
                      <discriminator property="type" value="RWX">
                        <prop type="string" name="backingStorageClassName" arg="$resource.properties.typeProperties.RWX.backingStorageClassName" required="True"/>
                      </discriminator>
                      <discriminator property="type" value="SMB">
                        <prop type="string" name="domain" arg="$resource.properties.typeProperties.SMB.domain"/>
                        <prop type="password" name="password" arg="$resource.properties.typeProperties.SMB.password" secret="True"/>
                        <prop type="string" name="source" arg="$resource.properties.typeProperties.SMB.source" required="True"/>
                        <prop type="string" name="subDir" arg="$resource.properties.typeProperties.SMB.subDir"/>
                        <prop type="string" name="username" arg="$resource.properties.typeProperties.SMB.username"/>
                      </discriminator>
                    </prop>
                    <prop type="string" name="volumeBindingMode" arg="$resource.properties.volumeBindingMode">
                      <enum>
                        <item value="&quot;Immediate&quot;"/>
                        <item value="&quot;WaitForFirstConsumer&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<string>" name="accessModes">
                      <item type="string">
                        <enum>
                          <item value="&quot;ReadWriteMany&quot;"/>
                          <item value="&quot;ReadWriteOnce&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="allowVolumeExpansion">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Disallow&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="dataResilience">
                      <enum>
                        <item value="&quot;DataResilient&quot;"/>
                        <item value="&quot;NotDataResilient&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="failoverSpeed">
                      <enum>
                        <item value="&quot;Fast&quot;"/>
                        <item value="&quot;NotAvailable&quot;"/>
                        <item value="&quot;Slow&quot;"/>
                        <item value="&quot;Super&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="limitations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="mountOptions">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="performance">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;Ultra&quot;"/>
                        <item value="&quot;Undefined&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="priority"/>
                    <prop type="string" name="provisioner"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="typeProperties" required="True">
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;Blob&quot;"/>
                          <item value="&quot;NFS&quot;"/>
                          <item value="&quot;Native&quot;"/>
                          <item value="&quot;RWX&quot;"/>
                          <item value="&quot;SMB&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="type" value="Blob">
                        <prop type="password" name="azureStorageAccountKey" required="True" secret="True"/>
                        <prop type="string" name="azureStorageAccountName" required="True"/>
                      </discriminator>
                      <discriminator property="type" value="NFS">
                        <prop type="string" name="mountPermissions"/>
                        <prop type="string" name="onDelete">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Retain&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="server" required="True"/>
                        <prop type="string" name="share" required="True"/>
                        <prop type="string" name="subDir"/>
                      </discriminator>
                      <discriminator property="type" value="Native"/>
                      <discriminator property="type" value="RWX">
                        <prop type="string" name="backingStorageClassName" required="True"/>
                      </discriminator>
                      <discriminator property="type" value="SMB">
                        <prop type="string" name="domain"/>
                        <prop type="password" name="password" secret="True"/>
                        <prop type="string" name="source" required="True"/>
                        <prop type="string" name="subDir"/>
                        <prop type="string" name="username"/>
                      </discriminator>
                    </prop>
                    <prop type="string" name="volumeBindingMode">
                      <enum>
                        <item value="&quot;Immediate&quot;"/>
                        <item value="&quot;WaitForFirstConsumer&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-10-01-preview" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/storageclasses/{}" version="2023-10-01-preview" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9zdG9yYWdlQ2xhc3Nlcy97c3RvcmFnZUNsYXNzTmFtZX0=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.resourceUri" options="resource-uri" required="True">
          <help short="The fully qualified Azure Resource manager identifier of the resource."/>
        </arg>
        <arg type="string" var="$Path.storageClassName" options="storage-class-name" required="True">
          <help short="The name of the the storage class"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<string>" var="$properties.properties.accessModes" options="access-modes" group="Properties">
          <help short="The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]"/>
          <item type="string">
            <enum>
              <item name="ReadWriteMany" value="&quot;ReadWriteMany&quot;"/>
              <item name="ReadWriteOnce" value="&quot;ReadWriteOnce&quot;"/>
            </enum>
          </item>
        </arg>
        <arg type="string" var="$properties.properties.allowVolumeExpansion" options="allow-volume-expansion" group="Properties">
          <help short="Volume can be expanded or not"/>
          <enum>
            <item name="Allow" value="&quot;Allow&quot;"/>
            <item name="Disallow" value="&quot;Disallow&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$properties.properties.dataResilience" options="data-resilience" group="Properties">
          <help short="Allow single data node failure"/>
          <enum>
            <item name="DataResilient" value="&quot;DataResilient&quot;"/>
            <item name="NotDataResilient" value="&quot;NotDataResilient&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$properties.properties.failoverSpeed" options="failover-speed" group="Properties">
          <help short="Failover speed: NA, Slow, Fast"/>
          <enum>
            <item name="Fast" value="&quot;Fast&quot;"/>
            <item name="NotAvailable" value="&quot;NotAvailable&quot;"/>
            <item name="Slow" value="&quot;Slow&quot;"/>
            <item name="Super" value="&quot;Super&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$properties.properties.limitations" options="limitations" group="Properties">
          <help short="Limitations of the storage class"/>
          <item type="string"/>
        </arg>
        <arg type="array<string>" var="$properties.properties.mountOptions" options="mount-options" group="Properties">
          <help short="Additional mount options"/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$properties.properties.performance" options="performance" group="Properties">
          <help short="Performance tier"/>
          <enum>
            <item name="Basic" value="&quot;Basic&quot;"/>
            <item name="Premium" value="&quot;Premium&quot;"/>
            <item name="Standard" value="&quot;Standard&quot;"/>
            <item name="Ultra" value="&quot;Ultra&quot;"/>
            <item name="Undefined" value="&quot;Undefined&quot;"/>
          </enum>
        </arg>
        <arg type="integer64" var="$properties.properties.priority" options="priority" group="Properties">
          <help short="Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"/>
        </arg>
        <arg type="object" var="$properties.properties.typeProperties" options="type-properties" group="Properties">
          <help short="New storage class type of storageClass"/>
          <arg type="password" var="$properties.properties.typeProperties.azureStorageAccountKey" options="azure-storage-account-key">
            <help short="Azure Storage Account Key"/>
            <prompt msg="Password:"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.azureStorageAccountName" options="azure-storage-account-name">
            <help short="Azure Storage Account Name"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.backingStorageClassName" options="backing-storage-class-name">
            <help short="The backing storageclass used to create new storageclass"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.domain" options="domain">
            <help short="Server domain"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.mountPermissions" options="mount-permissions">
            <help short="Mounted folder permissions. Default is 0. If set as non-zero, driver will perform `chmod` after mount"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.onDelete" options="on-delete">
            <help short="The action to take when a NFS volume is deleted. Default is Delete"/>
            <enum>
              <item name="Delete" value="&quot;Delete&quot;"/>
              <item name="Retain" value="&quot;Retain&quot;"/>
            </enum>
          </arg>
          <arg type="password" var="$properties.properties.typeProperties.password" options="password">
            <help short="Server password"/>
            <prompt msg="Password:"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.server" options="server">
            <help short="NFS Server"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.share" options="share">
            <help short="NFS share"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.source" options="source">
            <help short="SMB Source"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.subDir" options="sub-dir">
            <help short="Sub directory under share. If the sub directory doesn't exist, driver will create it"/>
          </arg>
          <arg type="string" var="$properties.properties.typeProperties.username" options="username">
            <help short="Server username"/>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="StorageClass_Update">
        <longRunning finalStateVia="location"/>
        <http path="/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{storageClassName}">
          <request method="patch">
            <path>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
              <param type="string" name="storageClassName" arg="$Path.storageClassName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="accessModes" arg="$properties.properties.accessModes">
                      <item type="string">
                        <enum>
                          <item value="&quot;ReadWriteMany&quot;"/>
                          <item value="&quot;ReadWriteOnce&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="allowVolumeExpansion" arg="$properties.properties.allowVolumeExpansion">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Disallow&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="dataResilience" arg="$properties.properties.dataResilience">
                      <enum>
                        <item value="&quot;DataResilient&quot;"/>
                        <item value="&quot;NotDataResilient&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="failoverSpeed" arg="$properties.properties.failoverSpeed">
                      <enum>
                        <item value="&quot;Fast&quot;"/>
                        <item value="&quot;NotAvailable&quot;"/>
                        <item value="&quot;Slow&quot;"/>
                        <item value="&quot;Super&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="limitations" arg="$properties.properties.limitations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="mountOptions" arg="$properties.properties.mountOptions">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="performance" arg="$properties.properties.performance">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;Ultra&quot;"/>
                        <item value="&quot;Undefined&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="priority" arg="$properties.properties.priority"/>
                    <prop type="object" name="typeProperties" arg="$properties.properties.typeProperties">
                      <prop type="password" name="azureStorageAccountKey" arg="$properties.properties.typeProperties.azureStorageAccountKey" secret="True"/>
                      <prop type="string" name="azureStorageAccountName" arg="$properties.properties.typeProperties.azureStorageAccountName"/>
                      <prop type="string" name="backingStorageClassName" arg="$properties.properties.typeProperties.backingStorageClassName"/>
                      <prop type="string" name="domain" arg="$properties.properties.typeProperties.domain"/>
                      <prop type="string" name="mountPermissions" arg="$properties.properties.typeProperties.mountPermissions"/>
                      <prop type="string" name="onDelete" arg="$properties.properties.typeProperties.onDelete">
                        <enum>
                          <item value="&quot;Delete&quot;"/>
                          <item value="&quot;Retain&quot;"/>
                        </enum>
                      </prop>
                      <prop type="password" name="password" arg="$properties.properties.typeProperties.password" secret="True"/>
                      <prop type="string" name="server" arg="$properties.properties.typeProperties.server"/>
                      <prop type="string" name="share" arg="$properties.properties.typeProperties.share"/>
                      <prop type="string" name="source" arg="$properties.properties.typeProperties.source"/>
                      <prop type="string" name="subDir" arg="$properties.properties.typeProperties.subDir"/>
                      <prop type="string" name="username" arg="$properties.properties.typeProperties.username"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceUri}/providers/Microsoft.KubernetesRuntime/storageClasses/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<string>" name="accessModes">
                      <item type="string">
                        <enum>
                          <item value="&quot;ReadWriteMany&quot;"/>
                          <item value="&quot;ReadWriteOnce&quot;"/>
                        </enum>
                      </item>
                    </prop>
                    <prop type="string" name="allowVolumeExpansion">
                      <enum>
                        <item value="&quot;Allow&quot;"/>
                        <item value="&quot;Disallow&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="dataResilience">
                      <enum>
                        <item value="&quot;DataResilient&quot;"/>
                        <item value="&quot;NotDataResilient&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="failoverSpeed">
                      <enum>
                        <item value="&quot;Fast&quot;"/>
                        <item value="&quot;NotAvailable&quot;"/>
                        <item value="&quot;Slow&quot;"/>
                        <item value="&quot;Super&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<string>" name="limitations">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="mountOptions">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="performance">
                      <enum>
                        <item value="&quot;Basic&quot;"/>
                        <item value="&quot;Premium&quot;"/>
                        <item value="&quot;Standard&quot;"/>
                        <item value="&quot;Ultra&quot;"/>
                        <item value="&quot;Undefined&quot;"/>
                      </enum>
                    </prop>
                    <prop type="integer64" name="priority"/>
                    <prop type="string" name="provisioner"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="typeProperties" required="True">
                      <prop type="string" name="type" required="True">
                        <enum>
                          <item value="&quot;Blob&quot;"/>
                          <item value="&quot;NFS&quot;"/>
                          <item value="&quot;Native&quot;"/>
                          <item value="&quot;RWX&quot;"/>
                          <item value="&quot;SMB&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="type" value="Blob">
                        <prop type="password" name="azureStorageAccountKey" required="True" secret="True"/>
                        <prop type="string" name="azureStorageAccountName" required="True"/>
                      </discriminator>
                      <discriminator property="type" value="NFS">
                        <prop type="string" name="mountPermissions"/>
                        <prop type="string" name="onDelete">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Retain&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="server" required="True"/>
                        <prop type="string" name="share" required="True"/>
                        <prop type="string" name="subDir"/>
                      </discriminator>
                      <discriminator property="type" value="Native"/>
                      <discriminator property="type" value="RWX">
                        <prop type="string" name="backingStorageClassName" required="True"/>
                      </discriminator>
                      <discriminator property="type" value="SMB">
                        <prop type="string" name="domain"/>
                        <prop type="password" name="password" secret="True"/>
                        <prop type="string" name="source" required="True"/>
                        <prop type="string" name="subDir"/>
                        <prop type="string" name="username"/>
                      </discriminator>
                    </prop>
                    <prop type="string" name="volumeBindingMode">
                      <enum>
                        <item value="&quot;Immediate&quot;"/>
                        <item value="&quot;WaitForFirstConsumer&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
