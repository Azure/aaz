<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/providers/microsoft.management/managementgroups/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlbWVudC9tYW5hZ2VtZW50R3JvdXBzL3ttYW5hZ2VtZW50R3JvdXBJZH0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeURlZmluaXRpb25zL3twb2xpY3lEZWZpbml0aW9uTmFtZX0=/V/MjAyNC0wNS0wMQ=="/>
  <resource id="/subscriptions/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkF1dGhvcml6YXRpb24vcG9saWN5RGVmaW5pdGlvbnMve3BvbGljeURlZmluaXRpb25OYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
  <commandGroup name="policy definition">
    <command name="show" version="2024-05-01" confirmation="">
      <resource id="/providers/microsoft.management/managementgroups/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlbWVudC9tYW5hZ2VtZW50R3JvdXBzL3ttYW5hZ2VtZW50R3JvdXBJZH0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeURlZmluaXRpb25zL3twb2xpY3lEZWZpbml0aW9uTmFtZX0=/V/MjAyNC0wNS0wMQ=="/>
      <resource id="/subscriptions/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkF1dGhvcml6YXRpb24vcG9saWN5RGVmaW5pdGlvbnMve3BvbGljeURlZmluaXRpb25OYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.managementGroupId" options="management-group" group="">
          <help short="The management group." lines="The management group with the given name where the policy definition resides."/>
        </arg>
        <arg type="string" var="$Path.policyDefinitionName" options="name n" required="True" group="">
          <help short="The name of the policy definition."/>
          <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" group="" idPart="subscription">
          <help short="The subscription name or ID." lines="The subscription with the given name or ID where the policy definition resides."/>
        </arg>
      </argGroup>
      <condition var="$Condition_PolicyDefinitions_GetAtManagementGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.managementGroupId"/>
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
        </operator>
      </condition>
      <condition var="$Condition_PolicyDefinitions_Get">
        <operator type="and">
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_PolicyDefinitions_GetAtManagementGroup" operationId="PolicyDefinitions_GetAtManagementGroup">
        <http path="/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="managementGroupId" arg="$Path.managementGroupId" required="True"/>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="string" name="displayName"/>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="mode">
                      <default value="&quot;Indexed&quot;"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<any>" name="allowedValues">
                            <item type="any"/>
                          </prop>
                          <prop type="any" name="defaultValue"/>
                          <prop type="object" name="metadata">
                            <prop type="boolean" name="assignPermissions"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="displayName"/>
                            <prop type="string" name="strongType"/>
                            <additionalProp>
                              <item type="object">
                                <additionalProp>
                                  <item type="any"/>
                                </additionalProp>
                              </item>
                            </additionalProp>
                          </prop>
                          <prop type="object" name="schema">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Array&quot;"/>
                              <item value="&quot;Boolean&quot;"/>
                              <item value="&quot;DateTime&quot;"/>
                              <item value="&quot;Float&quot;"/>
                              <item value="&quot;Integer&quot;"/>
                              <item value="&quot;Object&quot;"/>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="policyRule">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="policyType">
                      <enum>
                        <item value="&quot;BuiltIn&quot;"/>
                        <item value="&quot;Custom&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Static&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="version"/>
                    <prop type="array<string>" name="versions">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_PolicyDefinitions_Get" operationId="PolicyDefinitions_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="string" name="displayName"/>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="mode">
                      <default value="&quot;Indexed&quot;"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<any>" name="allowedValues">
                            <item type="any"/>
                          </prop>
                          <prop type="any" name="defaultValue"/>
                          <prop type="object" name="metadata">
                            <prop type="boolean" name="assignPermissions"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="displayName"/>
                            <prop type="string" name="strongType"/>
                            <additionalProp>
                              <item type="object">
                                <additionalProp>
                                  <item type="any"/>
                                </additionalProp>
                              </item>
                            </additionalProp>
                          </prop>
                          <prop type="object" name="schema">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Array&quot;"/>
                              <item value="&quot;Boolean&quot;"/>
                              <item value="&quot;DateTime&quot;"/>
                              <item value="&quot;Float&quot;"/>
                              <item value="&quot;Integer&quot;"/>
                              <item value="&quot;Object&quot;"/>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="policyRule">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="policyType">
                      <enum>
                        <item value="&quot;BuiltIn&quot;"/>
                        <item value="&quot;Custom&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Static&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="version"/>
                    <prop type="array<string>" name="versions">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-05-01" confirmation="">
      <resource id="/providers/microsoft.management/managementgroups/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlbWVudC9tYW5hZ2VtZW50R3JvdXBzL3ttYW5hZ2VtZW50R3JvdXBJZH0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeURlZmluaXRpb25zL3twb2xpY3lEZWZpbml0aW9uTmFtZX0=/V/MjAyNC0wNS0wMQ=="/>
      <resource id="/subscriptions/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkF1dGhvcml6YXRpb24vcG9saWN5RGVmaW5pdGlvbnMve3BvbGljeURlZmluaXRpb25OYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.managementGroupId" options="management-group" group="">
          <help short="The management group." lines="The management group with the given name where the policy definition resides."/>
        </arg>
        <arg type="string" var="$Path.policyDefinitionName" options="name n" required="True" group="">
          <help short="The name of the policy definition."/>
          <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" group="" idPart="subscription">
          <help short="The subscription name or ID." lines="The subscription with the given name or ID where the policy definition resides."/>
        </arg>
      </argGroup>
      <condition var="$Condition_PolicyDefinitions_DeleteAtManagementGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.managementGroupId"/>
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
        </operator>
      </condition>
      <condition var="$Condition_PolicyDefinitions_Delete">
        <operator type="and">
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_PolicyDefinitions_DeleteAtManagementGroup" operationId="PolicyDefinitions_DeleteAtManagementGroup">
        <http path="/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="delete">
            <path>
              <param type="string" name="managementGroupId" arg="$Path.managementGroupId" required="True"/>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_PolicyDefinitions_Delete" operationId="PolicyDefinitions_Delete">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="delete">
            <path>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-05-01" confirmation="">
      <resource id="/providers/microsoft.management/managementgroups/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlbWVudC9tYW5hZ2VtZW50R3JvdXBzL3ttYW5hZ2VtZW50R3JvdXBJZH0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeURlZmluaXRpb25zL3twb2xpY3lEZWZpbml0aW9uTmFtZX0=/V/MjAyNC0wNS0wMQ=="/>
      <resource id="/subscriptions/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkF1dGhvcml6YXRpb24vcG9saWN5RGVmaW5pdGlvbnMve3BvbGljeURlZmluaXRpb25OYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.managementGroupId" options="management-group" group="">
          <help short="The management group." lines="The management group with the given name is where the policy definition will reside. It can be assigned only at scopes at or below this management group."/>
        </arg>
        <arg type="string" var="$Path.policyDefinitionName" options="name n" required="True" group="">
          <help short="The name of the policy definition."/>
          <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" group="" idPart="subscription">
          <help short="The subscription name or ID." lines="The subscription with the given name or ID is where the policy definition will reside. It can be assigned only at scopes at or below this subscription."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="Policy definition description." lines="Full description of the policy definition."/>
        </arg>
        <arg type="string" var="$parameters.properties.displayName" options="display-name" group="Properties">
          <help short="The display name of the policy definition." lines="The display name of the policy definition is not part of its ID, allowing for longer and more flexible naming."/>
        </arg>
        <arg type="object" var="$parameters.properties.metadata" options="metadata" group="Properties">
          <help short="The policy definition metadata." lines="The policy definition metadata. Metadata is an open-ended object and is typically a collection of key value pairs."/>
          <additionalProp>
            <item type="any"/>
          </additionalProp>
        </arg>
        <arg type="string" var="$parameters.properties.mode" options="mode m" group="Properties">
          <help short="The policy definition mode." lines="The policy definition mode. Valid values for control plane policy definitions: All, Indexed. The mode 'Indexed' indicates the policy should be evaluated only for resource types that support tags and location. Some examples for data plane policy definitions: Microsoft.KeyVault.Data, Microsoft.Network.Data."/>
          <default value="&quot;Indexed&quot;"/>
        </arg>
        <arg type="object" var="$parameters.properties.parameters" options="params p" group="Properties">
          <help short="The policy rule parameter definitions." lines="The definitions for parameters used in the policy rule. The keys are the parameter names."/>
          <additionalProp>
            <item type="object">
              <arg type="array<any>" var="$parameters.properties.parameters{}.allowedValues" options="allowed-values">
                <help short="The allowed values for the parameter."/>
                <item type="any"/>
              </arg>
              <arg type="any" var="$parameters.properties.parameters{}.defaultValue" options="default-value">
                <help short="The default value for the parameter if no value is provided."/>
              </arg>
              <arg type="object" var="$parameters.properties.parameters{}.metadata" options="metadata">
                <help short="General metadata for the parameter."/>
                <arg type="boolean" var="$parameters.properties.parameters{}.metadata.assignPermissions" options="assign-permissions">
                  <help short="Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope."/>
                </arg>
                <arg type="string" var="$parameters.properties.parameters{}.metadata.description" options="description">
                  <help short="The description of the parameter."/>
                </arg>
                <arg type="string" var="$parameters.properties.parameters{}.metadata.displayName" options="display-name">
                  <help short="The display name for the parameter."/>
                </arg>
                <arg type="string" var="$parameters.properties.parameters{}.metadata.strongType" options="strong-type">
                  <help short="Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from."/>
                </arg>
                <additionalProp>
                  <item type="object">
                    <additionalProp>
                      <item type="any"/>
                    </additionalProp>
                  </item>
                </additionalProp>
              </arg>
              <arg type="object" var="$parameters.properties.parameters{}.schema" options="schema">
                <help short="Provides validation of parameter inputs during assignment using a self-defined JSON schema. This property is only supported for object-type parameters and follows the Json.NET Schema 2019-09 implementation. You can learn more about using schemas at https://json-schema.org/ and test draft schemas at https://www.jsonschemavalidator.net/."/>
                <additionalProp>
                  <item type="any"/>
                </additionalProp>
              </arg>
              <arg type="string" var="$parameters.properties.parameters{}.type" options="type">
                <help short="The data type of the parameter."/>
                <enum>
                  <item name="Array" value="&quot;Array&quot;"/>
                  <item name="Boolean" value="&quot;Boolean&quot;"/>
                  <item name="DateTime" value="&quot;DateTime&quot;"/>
                  <item name="Float" value="&quot;Float&quot;"/>
                  <item name="Integer" value="&quot;Integer&quot;"/>
                  <item name="Object" value="&quot;Object&quot;"/>
                  <item name="String" value="&quot;String&quot;"/>
                </enum>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg type="object" var="$parameters.properties.policyRule" options="rules rule" group="Properties">
          <help short="The policy rule."/>
          <additionalProp>
            <item type="any"/>
          </additionalProp>
        </arg>
        <arg type="string" var="$parameters.properties.policyType" options="policy-type" hide="True" group="Properties">
          <help short="The type of policy set definition. Possible values are NotSpecified, BuiltIn, Custom, and Static."/>
          <enum>
            <item name="BuiltIn" value="&quot;BuiltIn&quot;"/>
            <item name="Custom" value="&quot;Custom&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="Static" value="&quot;Static&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.version" options="version" group="Properties">
          <help short="The policy definition version." lines="The policy definition version in #.#.# format."/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.versions" options="versions" hide="True" group="Properties">
          <help short="A list of available versions for this policy definition."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <condition var="$Condition_PolicyDefinitions_CreateOrUpdateAtManagementGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.managementGroupId"/>
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
        </operator>
      </condition>
      <condition var="$Condition_PolicyDefinitions_CreateOrUpdate">
        <operator type="and">
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_PolicyDefinitions_CreateOrUpdateAtManagementGroup" operationId="PolicyDefinitions_CreateOrUpdateAtManagementGroup">
        <http path="/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="put">
            <path>
              <param type="string" name="managementGroupId" arg="$Path.managementGroupId" required="True"/>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description" arg="$parameters.properties.description"/>
                    <prop type="string" name="displayName" arg="$parameters.properties.displayName"/>
                    <prop type="object" name="metadata" arg="$parameters.properties.metadata">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="mode" arg="$parameters.properties.mode">
                      <default value="&quot;Indexed&quot;"/>
                    </prop>
                    <prop type="object" name="parameters" arg="$parameters.properties.parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<any>" name="allowedValues" arg="$parameters.properties.parameters{}.allowedValues">
                            <item type="any"/>
                          </prop>
                          <prop type="any" name="defaultValue" arg="$parameters.properties.parameters{}.defaultValue"/>
                          <prop type="object" name="metadata" arg="$parameters.properties.parameters{}.metadata">
                            <prop type="boolean" name="assignPermissions" arg="$parameters.properties.parameters{}.metadata.assignPermissions"/>
                            <prop type="string" name="description" arg="$parameters.properties.parameters{}.metadata.description"/>
                            <prop type="string" name="displayName" arg="$parameters.properties.parameters{}.metadata.displayName"/>
                            <prop type="string" name="strongType" arg="$parameters.properties.parameters{}.metadata.strongType"/>
                            <additionalProp>
                              <item type="object">
                                <additionalProp>
                                  <item type="any"/>
                                </additionalProp>
                              </item>
                            </additionalProp>
                          </prop>
                          <prop type="object" name="schema" arg="$parameters.properties.parameters{}.schema">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="type" arg="$parameters.properties.parameters{}.type">
                            <enum>
                              <item value="&quot;Array&quot;"/>
                              <item value="&quot;Boolean&quot;"/>
                              <item value="&quot;DateTime&quot;"/>
                              <item value="&quot;Float&quot;"/>
                              <item value="&quot;Integer&quot;"/>
                              <item value="&quot;Object&quot;"/>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="policyRule" arg="$parameters.properties.policyRule">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="policyType" arg="$parameters.properties.policyType">
                      <enum>
                        <item value="&quot;BuiltIn&quot;"/>
                        <item value="&quot;Custom&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Static&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="version" arg="$parameters.properties.version"/>
                    <prop type="array<string>" name="versions" arg="$parameters.properties.versions">
                      <item type="string"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="string" name="displayName"/>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="mode">
                      <default value="&quot;Indexed&quot;"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<any>" name="allowedValues">
                            <item type="any"/>
                          </prop>
                          <prop type="any" name="defaultValue"/>
                          <prop type="object" name="metadata">
                            <prop type="boolean" name="assignPermissions"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="displayName"/>
                            <prop type="string" name="strongType"/>
                            <additionalProp>
                              <item type="object">
                                <additionalProp>
                                  <item type="any"/>
                                </additionalProp>
                              </item>
                            </additionalProp>
                          </prop>
                          <prop type="object" name="schema">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Array&quot;"/>
                              <item value="&quot;Boolean&quot;"/>
                              <item value="&quot;DateTime&quot;"/>
                              <item value="&quot;Float&quot;"/>
                              <item value="&quot;Integer&quot;"/>
                              <item value="&quot;Object&quot;"/>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="policyRule">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="policyType">
                      <enum>
                        <item value="&quot;BuiltIn&quot;"/>
                        <item value="&quot;Custom&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Static&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="version"/>
                    <prop type="array<string>" name="versions">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_PolicyDefinitions_CreateOrUpdate" operationId="PolicyDefinitions_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="put">
            <path>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description" arg="$parameters.properties.description"/>
                    <prop type="string" name="displayName" arg="$parameters.properties.displayName"/>
                    <prop type="object" name="metadata" arg="$parameters.properties.metadata">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="mode" arg="$parameters.properties.mode">
                      <default value="&quot;Indexed&quot;"/>
                    </prop>
                    <prop type="object" name="parameters" arg="$parameters.properties.parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<any>" name="allowedValues" arg="$parameters.properties.parameters{}.allowedValues">
                            <item type="any"/>
                          </prop>
                          <prop type="any" name="defaultValue" arg="$parameters.properties.parameters{}.defaultValue"/>
                          <prop type="object" name="metadata" arg="$parameters.properties.parameters{}.metadata">
                            <prop type="boolean" name="assignPermissions" arg="$parameters.properties.parameters{}.metadata.assignPermissions"/>
                            <prop type="string" name="description" arg="$parameters.properties.parameters{}.metadata.description"/>
                            <prop type="string" name="displayName" arg="$parameters.properties.parameters{}.metadata.displayName"/>
                            <prop type="string" name="strongType" arg="$parameters.properties.parameters{}.metadata.strongType"/>
                            <additionalProp>
                              <item type="object">
                                <additionalProp>
                                  <item type="any"/>
                                </additionalProp>
                              </item>
                            </additionalProp>
                          </prop>
                          <prop type="object" name="schema" arg="$parameters.properties.parameters{}.schema">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="type" arg="$parameters.properties.parameters{}.type">
                            <enum>
                              <item value="&quot;Array&quot;"/>
                              <item value="&quot;Boolean&quot;"/>
                              <item value="&quot;DateTime&quot;"/>
                              <item value="&quot;Float&quot;"/>
                              <item value="&quot;Integer&quot;"/>
                              <item value="&quot;Object&quot;"/>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="policyRule" arg="$parameters.properties.policyRule">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="policyType" arg="$parameters.properties.policyType">
                      <enum>
                        <item value="&quot;BuiltIn&quot;"/>
                        <item value="&quot;Custom&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Static&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="version" arg="$parameters.properties.version"/>
                    <prop type="array<string>" name="versions" arg="$parameters.properties.versions">
                      <item type="string"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="string" name="displayName"/>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="mode">
                      <default value="&quot;Indexed&quot;"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<any>" name="allowedValues">
                            <item type="any"/>
                          </prop>
                          <prop type="any" name="defaultValue"/>
                          <prop type="object" name="metadata">
                            <prop type="boolean" name="assignPermissions"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="displayName"/>
                            <prop type="string" name="strongType"/>
                            <additionalProp>
                              <item type="object">
                                <additionalProp>
                                  <item type="any"/>
                                </additionalProp>
                              </item>
                            </additionalProp>
                          </prop>
                          <prop type="object" name="schema">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Array&quot;"/>
                              <item value="&quot;Boolean&quot;"/>
                              <item value="&quot;DateTime&quot;"/>
                              <item value="&quot;Float&quot;"/>
                              <item value="&quot;Integer&quot;"/>
                              <item value="&quot;Object&quot;"/>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="policyRule">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="policyType">
                      <enum>
                        <item value="&quot;BuiltIn&quot;"/>
                        <item value="&quot;Custom&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Static&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="version"/>
                    <prop type="array<string>" name="versions">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-05-01" confirmation="">
      <resource id="/providers/microsoft.management/managementgroups/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlbWVudC9tYW5hZ2VtZW50R3JvdXBzL3ttYW5hZ2VtZW50R3JvdXBJZH0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3BvbGljeURlZmluaXRpb25zL3twb2xpY3lEZWZpbml0aW9uTmFtZX0=/V/MjAyNC0wNS0wMQ=="/>
      <resource id="/subscriptions/{}/providers/microsoft.authorization/policydefinitions/{}" version="2024-05-01" swagger="mgmt-plane/resources/ResourceProviders/Microsoft.Authorization/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkF1dGhvcml6YXRpb24vcG9saWN5RGVmaW5pdGlvbnMve3BvbGljeURlZmluaXRpb25OYW1lfQ==/V/MjAyNC0wNS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.managementGroupId" options="management-group" group="">
          <help short="The management group." lines="The management group with the given name where the policy definition resides."/>
        </arg>
        <arg type="string" var="$Path.policyDefinitionName" options="name n" required="True" group="">
          <help short="The name of the policy definition."/>
          <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" group="" idPart="subscription">
          <help short="The subscription name or ID." lines="The subscription with the given name or ID where the policy definition resides."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="Policy definition description." lines="Full description of the policy definition."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.displayName" options="display-name" group="Properties">
          <help short="The display name of the policy definition." lines="The display name of the policy definition is not part of its ID, allowing for longer and more flexible naming."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.metadata" options="metadata" group="Properties">
          <help short="The policy definition metadata." lines="The policy definition metadata. Metadata is an open-ended object and is typically a collection of key value pairs."/>
          <additionalProp>
            <item nullable="True" type="any"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.mode" options="mode m" group="Properties">
          <help short="The policy definition mode." lines="The policy definition mode. Valid values for control plane policy definitions: All, Indexed. The mode 'Indexed' indicates the policy should be evaluated only for resource types that support tags and location. Some examples for data plane policy definitions: Microsoft.KeyVault.Data, Microsoft.Network.Data."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.parameters" options="params p" group="Properties">
          <help short="The policy rule parameter definitions." lines="The definitions for parameters used in the policy rule. The keys are the parameter names."/>
          <additionalProp>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<any>" var="$parameters.properties.parameters{}.allowedValues" options="allowed-values">
                <help short="The allowed values for the parameter."/>
                <item nullable="True" type="any"/>
              </arg>
              <arg nullable="True" type="any" var="$parameters.properties.parameters{}.defaultValue" options="default-value">
                <help short="The default value for the parameter if no value is provided."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.parameters{}.metadata" options="metadata">
                <help short="General metadata for the parameter."/>
                <arg nullable="True" type="boolean" var="$parameters.properties.parameters{}.metadata.assignPermissions" options="assign-permissions">
                  <help short="Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the assignment scope."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.parameters{}.metadata.description" options="description">
                  <help short="The description of the parameter."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.parameters{}.metadata.displayName" options="display-name">
                  <help short="The display name for the parameter."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.parameters{}.metadata.strongType" options="strong-type">
                  <help short="Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from."/>
                </arg>
                <additionalProp>
                  <item nullable="True" type="object">
                    <additionalProp>
                      <item nullable="True" type="any"/>
                    </additionalProp>
                  </item>
                </additionalProp>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.parameters{}.schema" options="schema">
                <help short="Provides validation of parameter inputs during assignment using a self-defined JSON schema. This property is only supported for object-type parameters and follows the Json.NET Schema 2019-09 implementation. You can learn more about using schemas at https://json-schema.org/ and test draft schemas at https://www.jsonschemavalidator.net/."/>
                <additionalProp>
                  <item nullable="True" type="any"/>
                </additionalProp>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.parameters{}.type" options="type">
                <help short="The data type of the parameter."/>
                <enum>
                  <item name="Array" value="&quot;Array&quot;"/>
                  <item name="Boolean" value="&quot;Boolean&quot;"/>
                  <item name="DateTime" value="&quot;DateTime&quot;"/>
                  <item name="Float" value="&quot;Float&quot;"/>
                  <item name="Integer" value="&quot;Integer&quot;"/>
                  <item name="Object" value="&quot;Object&quot;"/>
                  <item name="String" value="&quot;String&quot;"/>
                </enum>
              </arg>
            </item>
          </additionalProp>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.policyRule" options="rules rule" group="Properties">
          <help short="The policy rule."/>
          <additionalProp>
            <item nullable="True" type="any"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.policyType" options="policy-type" hide="True" group="Properties">
          <help short="The type of policy set definition. Possible values are NotSpecified, BuiltIn, Custom, and Static."/>
          <enum>
            <item name="BuiltIn" value="&quot;BuiltIn&quot;"/>
            <item name="Custom" value="&quot;Custom&quot;"/>
            <item name="NotSpecified" value="&quot;NotSpecified&quot;"/>
            <item name="Static" value="&quot;Static&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.version" options="version" group="Properties">
          <help short="The policy definition version." lines="The policy definition version in #.#.# format."/>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.properties.versions" options="versions" hide="True" group="Properties">
          <help short="A list of available versions for this policy definition."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <condition var="$Condition_PolicyDefinitions_GetAtManagementGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.managementGroupId"/>
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
        </operator>
      </condition>
      <condition var="$Condition_PolicyDefinitions_Get">
        <operator type="and">
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_PolicyDefinitions_CreateOrUpdateAtManagementGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.managementGroupId"/>
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
        </operator>
      </condition>
      <condition var="$Condition_PolicyDefinitions_CreateOrUpdate">
        <operator type="and">
          <operator type="hasValue" arg="$Path.policyDefinitionName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_PolicyDefinitions_GetAtManagementGroup" operationId="PolicyDefinitions_GetAtManagementGroup">
        <http path="/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="managementGroupId" arg="$Path.managementGroupId" required="True"/>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="PolicyDefinition_read">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="description"/>
                    <prop type="string" name="displayName"/>
                    <prop type="object" name="metadata">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="mode">
                      <default value="&quot;Indexed&quot;"/>
                    </prop>
                    <prop type="object" name="parameters">
                      <additionalProp>
                        <item type="object">
                          <prop type="array<any>" name="allowedValues">
                            <item type="any"/>
                          </prop>
                          <prop type="any" name="defaultValue"/>
                          <prop type="object" name="metadata">
                            <prop type="boolean" name="assignPermissions"/>
                            <prop type="string" name="description"/>
                            <prop type="string" name="displayName"/>
                            <prop type="string" name="strongType"/>
                            <additionalProp>
                              <item type="object">
                                <additionalProp>
                                  <item type="any"/>
                                </additionalProp>
                              </item>
                            </additionalProp>
                          </prop>
                          <prop type="object" name="schema">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="string" name="type">
                            <enum>
                              <item value="&quot;Array&quot;"/>
                              <item value="&quot;Boolean&quot;"/>
                              <item value="&quot;DateTime&quot;"/>
                              <item value="&quot;Float&quot;"/>
                              <item value="&quot;Integer&quot;"/>
                              <item value="&quot;Object&quot;"/>
                              <item value="&quot;String&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </additionalProp>
                    </prop>
                    <prop type="object" name="policyRule">
                      <additionalProp>
                        <item type="any"/>
                      </additionalProp>
                    </prop>
                    <prop type="string" name="policyType">
                      <enum>
                        <item value="&quot;BuiltIn&quot;"/>
                        <item value="&quot;Custom&quot;"/>
                        <item value="&quot;NotSpecified&quot;"/>
                        <item value="&quot;Static&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="version"/>
                    <prop type="array<string>" name="versions">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_PolicyDefinitions_Get" operationId="PolicyDefinitions_Get">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="get">
            <path>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@PolicyDefinition_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="description" arg="$parameters.properties.description"/>
                <prop type="string" name="displayName" arg="$parameters.properties.displayName"/>
                <prop type="object" name="metadata" arg="$parameters.properties.metadata">
                  <additionalProp>
                    <item type="any"/>
                  </additionalProp>
                </prop>
                <prop type="string" name="mode" arg="$parameters.properties.mode">
                  <default value="&quot;Indexed&quot;"/>
                </prop>
                <prop type="object" name="parameters" arg="$parameters.properties.parameters">
                  <additionalProp>
                    <item type="object">
                      <prop type="array<any>" name="allowedValues" arg="$parameters.properties.parameters{}.allowedValues">
                        <item type="any"/>
                      </prop>
                      <prop type="any" name="defaultValue" arg="$parameters.properties.parameters{}.defaultValue"/>
                      <prop type="object" name="metadata" arg="$parameters.properties.parameters{}.metadata">
                        <prop type="boolean" name="assignPermissions" arg="$parameters.properties.parameters{}.metadata.assignPermissions"/>
                        <prop type="string" name="description" arg="$parameters.properties.parameters{}.metadata.description"/>
                        <prop type="string" name="displayName" arg="$parameters.properties.parameters{}.metadata.displayName"/>
                        <prop type="string" name="strongType" arg="$parameters.properties.parameters{}.metadata.strongType"/>
                        <additionalProp>
                          <item type="object">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </item>
                        </additionalProp>
                      </prop>
                      <prop type="object" name="schema" arg="$parameters.properties.parameters{}.schema">
                        <additionalProp>
                          <item type="any"/>
                        </additionalProp>
                      </prop>
                      <prop type="string" name="type" arg="$parameters.properties.parameters{}.type">
                        <enum>
                          <item value="&quot;Array&quot;"/>
                          <item value="&quot;Boolean&quot;"/>
                          <item value="&quot;DateTime&quot;"/>
                          <item value="&quot;Float&quot;"/>
                          <item value="&quot;Integer&quot;"/>
                          <item value="&quot;Object&quot;"/>
                          <item value="&quot;String&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </additionalProp>
                </prop>
                <prop type="object" name="policyRule" arg="$parameters.properties.policyRule">
                  <additionalProp>
                    <item type="any"/>
                  </additionalProp>
                </prop>
                <prop type="string" name="policyType" arg="$parameters.properties.policyType">
                  <enum>
                    <item value="&quot;BuiltIn&quot;"/>
                    <item value="&quot;Custom&quot;"/>
                    <item value="&quot;NotSpecified&quot;"/>
                    <item value="&quot;Static&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="version" arg="$parameters.properties.version"/>
                <prop type="array<string>" name="versions" arg="$parameters.properties.versions">
                  <item type="string"/>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation when="$Condition_PolicyDefinitions_CreateOrUpdateAtManagementGroup" operationId="PolicyDefinitions_CreateOrUpdateAtManagementGroup">
        <http path="/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="put">
            <path>
              <param type="string" name="managementGroupId" arg="$Path.managementGroupId" required="True"/>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="@PolicyDefinition_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_PolicyDefinitions_CreateOrUpdate" operationId="PolicyDefinitions_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}">
          <request method="put">
            <path>
              <param type="string" name="policyDefinitionName" arg="$Path.policyDefinitionName" required="True">
                <format pattern="^[^<>*%&:\?.+/]*[^<>*%&:\?.+/ ]+$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-05-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="201">
            <body>
              <json var="$Instance">
                <schema type="@PolicyDefinition_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
