<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/clusters/{}/placementpolicies/{}" version="2023-03-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vcGxhY2VtZW50UG9saWNpZXMve3BsYWNlbWVudFBvbGljeU5hbWV9/V/MjAyMy0wMy0wMQ=="/>
  <commandGroup name="vmware placement-policy">
    <command name="show" version="2023-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/clusters/{}/placementpolicies/{}" version="2023-03-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vcGxhY2VtZW50UG9saWNpZXMve3BsYWNlbWVudFBvbGljeU5hbWV9/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="child_name_1">
          <help short="Name of the cluster in the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="string" var="$Path.placementPolicyName" options="placement-policy-name name n" required="True" idPart="child_name_2">
          <help short="Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="string" var="$Path.privateCloudName" options="private-cloud c" required="True" group="" idPart="name">
          <help short="Name of the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PlacementPolicies_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies/{placementPolicyName}">
          <request method="get">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="placementPolicyName" arg="$Path.placementPolicyName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}/clusters/{}/placementPolicies/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="displayName"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Building&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;VmHost&quot;"/>
                        <item value="&quot;VmVm&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="type" value="VmHost">
                      <prop type="string" name="affinityStrength">
                        <enum>
                          <item value="&quot;Must&quot;"/>
                          <item value="&quot;Should&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="affinityType" required="True">
                        <enum>
                          <item value="&quot;Affinity&quot;"/>
                          <item value="&quot;AntiAffinity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="azureHybridBenefitType">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SqlHost&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="hostMembers" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="vmMembers" required="True">
                        <item type="string"/>
                      </prop>
                    </discriminator>
                    <discriminator property="type" value="VmVm">
                      <prop type="string" name="affinityType" required="True">
                        <enum>
                          <item value="&quot;Affinity&quot;"/>
                          <item value="&quot;AntiAffinity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="vmMembers" required="True">
                        <item type="string"/>
                      </prop>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-03-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/clusters/{}/placementpolicies/{}" version="2023-03-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vcGxhY2VtZW50UG9saWNpZXMve3BsYWNlbWVudFBvbGljeU5hbWV9/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="child_name_1">
          <help short="Name of the cluster in the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="string" var="$Path.placementPolicyName" options="placement-policy-name name n" required="True" idPart="child_name_2">
          <help short="Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="string" var="$Path.privateCloudName" options="private-cloud c" required="True" group="" idPart="name">
          <help short="Name of the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="PlacementPolicies_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies/{placementPolicyName}">
          <request method="delete">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="placementPolicyName" arg="$Path.placementPolicyName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/clusters/{}/placementpolicies/{}" version="2023-03-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vcGxhY2VtZW50UG9saWNpZXMve3BsYWNlbWVudFBvbGljeU5hbWV9/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="child_name_1">
          <help short="Name of the cluster in the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="string" var="$Path.placementPolicyName" options="placement-policy-name name n" required="True" idPart="child_name_2">
          <help short="Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="string" var="$Path.privateCloudName" options="private-cloud c" required="True" group="" idPart="name">
          <help short="Name of the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$placementPolicy.properties.VmHost" options="vm-host" group="Properties">
          <help short="VM-Host placement policy properties"/>
          <arg type="string" var="$placementPolicy.properties.VmHost.affinityStrength" options="affinity-strength">
            <help short="vm-host placement policy affinity strength (should/must)"/>
            <enum>
              <item name="Must" value="&quot;Must&quot;"/>
              <item name="Should" value="&quot;Should&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$placementPolicy.properties.VmHost.affinityType" options="affinity-type" required="True">
            <help short="placement policy affinity type"/>
            <enum>
              <item name="Affinity" value="&quot;Affinity&quot;"/>
              <item name="AntiAffinity" value="&quot;AntiAffinity&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$placementPolicy.properties.VmHost.azureHybridBenefitType" options="azure-hybrid-benefit" group="">
            <help short="placement policy azure hybrid benefit opt-in type"/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SqlHost" value="&quot;SqlHost&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$placementPolicy.properties.VmHost.hostMembers" options="host-members" required="True">
            <help short="Host members list"/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$placementPolicy.properties.VmHost.vmMembers" options="vm-members" required="True">
            <help short="Virtual machine members list"/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$placementPolicy.properties.VmVm" options="vm-vm" group="Properties">
          <help short="vm-vm placement policy properties"/>
          <arg type="string" var="$placementPolicy.properties.VmVm.affinityType" options="affinity-type" required="True">
            <help short="placement policy affinity type"/>
            <enum>
              <item name="Affinity" value="&quot;Affinity&quot;"/>
              <item name="AntiAffinity" value="&quot;AntiAffinity&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$placementPolicy.properties.VmVm.vmMembers" options="vm-members" required="True">
            <help short="Virtual machine members list"/>
            <item type="string"/>
          </arg>
        </arg>
        <arg type="string" var="$placementPolicy.properties.displayName" options="display-name" group="Properties">
          <help short="Display name of the placement policy"/>
        </arg>
        <arg type="string" var="$placementPolicy.properties.state" options="state" group="Properties">
          <help short="Whether the placement policy is enabled or disabled"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="PlacementPolicies_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies/{placementPolicyName}">
          <request method="put">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="placementPolicyName" arg="$Path.placementPolicyName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="placementPolicy" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="string" name="displayName" arg="$placementPolicy.properties.displayName"/>
                    <prop type="string" name="state" arg="$placementPolicy.properties.state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item arg="$placementPolicy.properties.VmHost" value="&quot;VmHost&quot;"/>
                        <item arg="$placementPolicy.properties.VmVm" value="&quot;VmVm&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="type" value="VmHost">
                      <prop type="string" name="affinityStrength" arg="$placementPolicy.properties.VmHost.affinityStrength">
                        <enum>
                          <item value="&quot;Must&quot;"/>
                          <item value="&quot;Should&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="affinityType" arg="$placementPolicy.properties.VmHost.affinityType" required="True">
                        <enum>
                          <item value="&quot;Affinity&quot;"/>
                          <item value="&quot;AntiAffinity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="azureHybridBenefitType" arg="$placementPolicy.properties.VmHost.azureHybridBenefitType">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SqlHost&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="hostMembers" arg="$placementPolicy.properties.VmHost.hostMembers" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="vmMembers" arg="$placementPolicy.properties.VmHost.vmMembers" required="True">
                        <item type="string"/>
                      </prop>
                    </discriminator>
                    <discriminator property="type" value="VmVm">
                      <prop type="string" name="affinityType" arg="$placementPolicy.properties.VmVm.affinityType" required="True">
                        <enum>
                          <item value="&quot;Affinity&quot;"/>
                          <item value="&quot;AntiAffinity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="vmMembers" arg="$placementPolicy.properties.VmVm.vmMembers" required="True">
                        <item type="string"/>
                      </prop>
                    </discriminator>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}/clusters/{}/placementPolicies/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="displayName"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Building&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;VmHost&quot;"/>
                        <item value="&quot;VmVm&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="type" value="VmHost">
                      <prop type="string" name="affinityStrength">
                        <enum>
                          <item value="&quot;Must&quot;"/>
                          <item value="&quot;Should&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="affinityType" required="True">
                        <enum>
                          <item value="&quot;Affinity&quot;"/>
                          <item value="&quot;AntiAffinity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="azureHybridBenefitType">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SqlHost&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="hostMembers" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="vmMembers" required="True">
                        <item type="string"/>
                      </prop>
                    </discriminator>
                    <discriminator property="type" value="VmVm">
                      <prop type="string" name="affinityType" required="True">
                        <enum>
                          <item value="&quot;Affinity&quot;"/>
                          <item value="&quot;AntiAffinity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="vmMembers" required="True">
                        <item type="string"/>
                      </prop>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-03-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.avs/privateclouds/{}/clusters/{}/placementpolicies/{}" version="2023-03-01" swagger="mgmt-plane/vmware/ResourceProviders/Microsoft.AVS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQVZTL3ByaXZhdGVDbG91ZHMve3ByaXZhdGVDbG91ZE5hbWV9L2NsdXN0ZXJzL3tjbHVzdGVyTmFtZX0vcGxhY2VtZW50UG9saWNpZXMve3BsYWNlbWVudFBvbGljeU5hbWV9/V/MjAyMy0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.clusterName" options="cluster-name" required="True" idPart="child_name_1">
          <help short="Name of the cluster in the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="string" var="$Path.placementPolicyName" options="placement-policy-name name n" required="True" idPart="child_name_2">
          <help short="Name of the VMware vSphere Distributed Resource Scheduler (DRS) placement policy"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="string" var="$Path.privateCloudName" options="private-cloud c" required="True" group="" idPart="name">
          <help short="Name of the private cloud"/>
          <format pattern="^[-\w\._]+$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$placementPolicy.properties.VmHost" options="vm-host" group="Properties">
          <help short="VM-Host placement policy properties"/>
          <arg nullable="True" type="string" var="$placementPolicy.properties.VmHost.affinityStrength" options="affinity-strength">
            <help short="vm-host placement policy affinity strength (should/must)"/>
            <enum>
              <item name="Must" value="&quot;Must&quot;"/>
              <item name="Should" value="&quot;Should&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$placementPolicy.properties.VmHost.affinityType" options="affinity-type" hide="True" group="">
            <help short="placement policy affinity type"/>
            <enum>
              <item name="Affinity" value="&quot;Affinity&quot;"/>
              <item name="AntiAffinity" value="&quot;AntiAffinity&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$placementPolicy.properties.VmHost.azureHybridBenefitType" options="azure-hybrid-benefit" group="">
            <help short="placement policy azure hybrid benefit opt-in type"/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SqlHost" value="&quot;SqlHost&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$placementPolicy.properties.VmHost.hostMembers" options="host-members">
            <help short="Host members list"/>
            <item nullable="True" type="string"/>
          </arg>
          <arg type="array<string>" var="$placementPolicy.properties.VmHost.vmMembers" options="vm-members">
            <help short="Virtual machine members list"/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg type="object" var="$placementPolicy.properties.VmVm" options="vm-vm" group="Properties">
          <help short="vm-vm placement policy properties"/>
          <arg type="string" var="$placementPolicy.properties.VmVm.affinityType" options="affinity-type" hide="True" group="">
            <help short="placement policy affinity type"/>
            <enum>
              <item name="Affinity" value="&quot;Affinity&quot;"/>
              <item name="AntiAffinity" value="&quot;AntiAffinity&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$placementPolicy.properties.VmVm.vmMembers" options="vm-members">
            <help short="Virtual machine members list"/>
            <item nullable="True" type="string"/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$placementPolicy.properties.displayName" options="display-name" group="Properties">
          <help short="Display name of the placement policy"/>
        </arg>
        <arg nullable="True" type="string" var="$placementPolicy.properties.state" options="state" group="Properties">
          <help short="Whether the placement policy is enabled or disabled"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="PlacementPolicies_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies/{placementPolicyName}">
          <request method="get">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="placementPolicyName" arg="$Path.placementPolicyName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="PlacementPolicy_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.AVS/privateClouds/{}/clusters/{}/placementPolicies/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="displayName"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Building&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="state">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="type" required="True">
                      <enum>
                        <item value="&quot;VmHost&quot;"/>
                        <item value="&quot;VmVm&quot;"/>
                      </enum>
                    </prop>
                    <discriminator property="type" value="VmHost">
                      <prop type="string" name="affinityStrength">
                        <enum>
                          <item value="&quot;Must&quot;"/>
                          <item value="&quot;Should&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="affinityType" required="True">
                        <enum>
                          <item value="&quot;Affinity&quot;"/>
                          <item value="&quot;AntiAffinity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="azureHybridBenefitType">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SqlHost&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="hostMembers" required="True">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="vmMembers" required="True">
                        <item type="string"/>
                      </prop>
                    </discriminator>
                    <discriminator property="type" value="VmVm">
                      <prop type="string" name="affinityType" required="True">
                        <enum>
                          <item value="&quot;Affinity&quot;"/>
                          <item value="&quot;AntiAffinity&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<string>" name="vmMembers" required="True">
                        <item type="string"/>
                      </prop>
                    </discriminator>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="placementPolicy" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="string" name="displayName" arg="$placementPolicy.properties.displayName"/>
                <prop type="string" name="state" arg="$placementPolicy.properties.state">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="type" required="True">
                  <enum>
                    <item arg="$placementPolicy.properties.VmHost" value="&quot;VmHost&quot;"/>
                    <item arg="$placementPolicy.properties.VmVm" value="&quot;VmVm&quot;"/>
                  </enum>
                </prop>
                <discriminator property="type" value="VmHost">
                  <prop type="string" name="affinityStrength" arg="$placementPolicy.properties.VmHost.affinityStrength">
                    <enum>
                      <item value="&quot;Must&quot;"/>
                      <item value="&quot;Should&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="affinityType" arg="$placementPolicy.properties.VmHost.affinityType" required="True">
                    <enum>
                      <item value="&quot;Affinity&quot;"/>
                      <item value="&quot;AntiAffinity&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="azureHybridBenefitType" arg="$placementPolicy.properties.VmHost.azureHybridBenefitType">
                    <enum>
                      <item value="&quot;None&quot;"/>
                      <item value="&quot;SqlHost&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<string>" name="hostMembers" arg="$placementPolicy.properties.VmHost.hostMembers" required="True">
                    <item type="string"/>
                  </prop>
                  <prop type="array<string>" name="vmMembers" arg="$placementPolicy.properties.VmHost.vmMembers" required="True">
                    <item type="string"/>
                  </prop>
                </discriminator>
                <discriminator property="type" value="VmVm">
                  <prop type="string" name="affinityType" arg="$placementPolicy.properties.VmVm.affinityType" required="True">
                    <enum>
                      <item value="&quot;Affinity&quot;"/>
                      <item value="&quot;AntiAffinity&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<string>" name="vmMembers" arg="$placementPolicy.properties.VmVm.vmMembers" required="True">
                    <item type="string"/>
                  </prop>
                </discriminator>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="PlacementPolicies_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AVS/privateClouds/{privateCloudName}/clusters/{clusterName}/placementPolicies/{placementPolicyName}">
          <request method="put">
            <path>
              <param type="string" name="clusterName" arg="$Path.clusterName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="placementPolicyName" arg="$Path.placementPolicyName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="privateCloudName" arg="$Path.privateCloudName" required="True">
                <format pattern="^[-\w\._]+$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@PlacementPolicy_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
