<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}/expressrouteconnections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9L2V4cHJlc3NSb3V0ZUNvbm5lY3Rpb25zL3tjb25uZWN0aW9uTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network express-route gateway connection">
    <command name="show" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}/expressrouteconnections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9L2V4cHJlc3NSb3V0ZUNvbm5lY3Rpb25zL3tjb25uZWN0aW9uTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="ExpressRoute connection name."/>
        </arg>
        <arg type="string" var="$Path.expressRouteGatewayName" options="gateway-name" required="True" group="" idPart="name">
          <help short="ExpressRoute gateway name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}">
          <request method="get">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
                  </prop>
                  <prop type="string" name="name" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="authorizationKey"/>
                    <prop type="boolean" name="enableInternetSecurity"/>
                    <prop type="object" name="expressRouteCircuitPeering" required="True">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="boolean" name="expressRouteGatewayBypass"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="routingConfiguration">
                      <prop type="object" name="associatedRouteTable" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<@SubResource_read>" name="ids">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<string>" name="labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes">
                        <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<object>" name="staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="nextHopIpAddress"/>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer" name="routingWeight"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}/expressrouteconnections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9L2V4cHJlc3NSb3V0ZUNvbm5lY3Rpb25zL3tjb25uZWN0aW9uTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="ExpressRoute connection name."/>
        </arg>
        <arg type="string" var="$Path.expressRouteGatewayName" options="gateway-name" required="True" group="" idPart="name">
          <help short="ExpressRoute gateway name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteConnections_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}">
          <request method="delete">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}/expressrouteconnections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9L2V4cHJlc3NSb3V0ZUNvbm5lY3Rpb25zL3tjb25uZWN0aW9uTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="ExpressRoute connection name."/>
        </arg>
        <arg type="string" var="$Path.expressRouteGatewayName" options="gateway-name" required="True" group="" idPart="name">
          <help short="ExpressRoute gateway name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$putExpressRouteConnectionParameters.properties.authorizationKey" options="authorization-key" group="">
          <help short="Authorization key to establish the connection."/>
        </arg>
        <arg type="boolean" var="$putExpressRouteConnectionParameters.properties.enableInternetSecurity" options="internet-security" group="">
          <help short="Enable internet security. A virtual hub can have the ability to propagate a learned default route to this ExpressRoute connection. This ref https://review.docs.microsoft.com/en-us/azure/virtual-wan/effective-routes-virtual-hub?branch=pr-en-us-91866#aboutdefaultroute might be helpful. Allowed values: false, true."/>
        </arg>
        <arg type="integer" var="$putExpressRouteConnectionParameters.properties.routingWeight" options="routing-weight" group="">
          <help short="Routing weight associated with the connection."/>
        </arg>
      </argGroup>
      <argGroup name="Peering">
        <arg type="string" var="$putExpressRouteConnectionParameters.properties.expressRouteCircuitPeering.id" options="peering" group="Peering">
          <help short="Name or ID of an ExpressRoute peering."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$putExpressRouteConnectionParameters.properties.expressRouteGatewayBypass" options="express-route-gateway-bypass" hide="True" group="Properties">
          <help short="Enable FastPath to vWan Firewall hub."/>
        </arg>
      </argGroup>
      <argGroup name="PutExpressRouteConnectionParameters">
        <arg type="ResourceId" var="$putExpressRouteConnectionParameters.id" options="id" hide="True" group="PutExpressRouteConnectionParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Routing Configuration">
        <arg type="object" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.associatedRouteTable" options="associated-id" stage="Preview" group="Routing Configuration" cls="SubResource_create">
          <help short="The resource id of route table associated with this routing configuration."/>
          <arg type="string" var="@SubResource_create.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
        <arg type="array<@SubResource_create>" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids" options="propagated-ids" stage="Preview" group="Routing Configuration">
          <help short="pace-separated list of resource id  of propagated route tables."/>
          <item type="@SubResource_create"/>
        </arg>
        <arg type="array<string>" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels" options="labels" stage="Preview" group="Routing Configuration">
          <help short="Space-separated list of labels for propagated route tables."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="RoutingConfiguration">
        <arg type="object" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes" options="vnet-routes" hide="True" group="RoutingConfiguration">
          <help short="List of routes that control routing from VirtualHub into a virtual network connection."/>
          <arg type="array<object>" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes" options="static-routes">
            <help short="List of all Static Routes."/>
            <item type="object">
              <arg type="array<string>" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes" options="address-prefixes">
                <help short="List of all address prefixes."/>
                <item type="string"/>
              </arg>
              <arg type="string" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name" options="name">
                <help short="The name of the StaticRoute that is unique within a VnetRoute."/>
              </arg>
              <arg type="string" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress" options="next-hop-ip-address">
                <help short="The ip address of the next hop."/>
              </arg>
            </item>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}">
          <request method="put">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="putExpressRouteConnectionParameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$putExpressRouteConnectionParameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
                  </prop>
                  <prop type="string" name="name" arg="$Path.connectionName" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="authorizationKey" arg="$putExpressRouteConnectionParameters.properties.authorizationKey"/>
                    <prop type="boolean" name="enableInternetSecurity" arg="$putExpressRouteConnectionParameters.properties.enableInternetSecurity"/>
                    <prop type="object" name="expressRouteCircuitPeering" required="True">
                      <prop type="string" name="id" arg="$putExpressRouteConnectionParameters.properties.expressRouteCircuitPeering.id"/>
                    </prop>
                    <prop type="boolean" name="expressRouteGatewayBypass" arg="$putExpressRouteConnectionParameters.properties.expressRouteGatewayBypass"/>
                    <prop type="object" name="routingConfiguration">
                      <prop type="object" name="associatedRouteTable" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.associatedRouteTable" cls="SubResource_create">
                        <prop type="string" name="id" arg="@SubResource_create.id"/>
                      </prop>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<@SubResource_create>" name="ids" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids">
                          <item type="@SubResource_create"/>
                        </prop>
                        <prop type="array<string>" name="labels" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes">
                        <prop type="array<object>" name="staticRoutes" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name"/>
                            <prop type="string" name="nextHopIpAddress" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress"/>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer" name="routingWeight" arg="$putExpressRouteConnectionParameters.properties.routingWeight"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
                  </prop>
                  <prop type="string" name="name" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="authorizationKey"/>
                    <prop type="boolean" name="enableInternetSecurity"/>
                    <prop type="object" name="expressRouteCircuitPeering" required="True">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="boolean" name="expressRouteGatewayBypass"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="routingConfiguration">
                      <prop type="object" name="associatedRouteTable" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<@SubResource_read>" name="ids">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<string>" name="labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes">
                        <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<object>" name="staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="nextHopIpAddress"/>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer" name="routingWeight"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}/expressrouteconnections/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9L2V4cHJlc3NSb3V0ZUNvbm5lY3Rpb25zL3tjb25uZWN0aW9uTmFtZX0=/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="ExpressRoute connection name."/>
        </arg>
        <arg type="string" var="$Path.expressRouteGatewayName" options="gateway-name" required="True" group="" idPart="name">
          <help short="ExpressRoute gateway name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="string" var="$putExpressRouteConnectionParameters.properties.authorizationKey" options="authorization-key" group="">
          <help short="Authorization key to establish the connection."/>
        </arg>
        <arg nullable="True" type="boolean" var="$putExpressRouteConnectionParameters.properties.enableInternetSecurity" options="internet-security" group="">
          <help short="Enable internet security. A virtual hub can have the ability to propagate a learned default route to this ExpressRoute connection. This ref https://review.docs.microsoft.com/en-us/azure/virtual-wan/effective-routes-virtual-hub?branch=pr-en-us-91866#aboutdefaultroute might be helpful."/>
        </arg>
        <arg nullable="True" type="integer" var="$putExpressRouteConnectionParameters.properties.routingWeight" options="routing-weight" group="">
          <help short="Routing weight associated with the connection."/>
        </arg>
      </argGroup>
      <argGroup name="Peering">
        <arg nullable="True" type="string" var="$putExpressRouteConnectionParameters.properties.expressRouteCircuitPeering.id" options="peering" group="Peering">
          <help short="Name or ID of an ExpressRoute peering."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$putExpressRouteConnectionParameters.properties.expressRouteGatewayBypass" options="express-route-gateway-bypass" hide="True" group="Properties">
          <help short="Enable FastPath to vWan Firewall hub."/>
        </arg>
      </argGroup>
      <argGroup name="PutExpressRouteConnectionParameters">
        <arg nullable="True" type="ResourceId" var="$putExpressRouteConnectionParameters.id" options="id" hide="True" group="PutExpressRouteConnectionParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
        </arg>
      </argGroup>
      <argGroup name="Routing Configuration">
        <arg nullable="True" type="object" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.associatedRouteTable" options="associated-id" group="Routing Configuration" cls="SubResource_update">
          <help short="The resource id of route table associated with this routing configuration."/>
          <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
        <arg nullable="True" type="array<@SubResource_update>" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids" options="propagated-ids" group="Routing Configuration">
          <help short="Space-separated list of resource id of propagated route tables."/>
          <item nullable="True" type="@SubResource_update"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels" options="labels" stage="Preview" group="Routing Configuration">
          <help short="Space-separated list of labels for propagated route tables."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="RoutingConfiguration">
        <arg nullable="True" type="object" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes" options="vnet-routes" hide="True" group="RoutingConfiguration">
          <help short="List of routes that control routing from VirtualHub into a virtual network connection."/>
          <arg nullable="True" type="array<object>" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes" options="static-routes">
            <help short="List of all Static Routes."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<string>" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes" options="address-prefixes">
                <help short="List of all address prefixes."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name" options="name">
                <help short="The name of the StaticRoute that is unique within a VnetRoute."/>
              </arg>
              <arg nullable="True" type="string" var="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress" options="next-hop-ip-address">
                <help short="The ip address of the next hop."/>
              </arg>
            </item>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}">
          <request method="get">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ExpressRouteConnection_read">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
                  </prop>
                  <prop type="string" name="name" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="authorizationKey"/>
                    <prop type="boolean" name="enableInternetSecurity"/>
                    <prop type="object" name="expressRouteCircuitPeering" required="True">
                      <prop type="string" name="id"/>
                    </prop>
                    <prop type="boolean" name="expressRouteGatewayBypass"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="routingConfiguration">
                      <prop type="object" name="associatedRouteTable" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<@SubResource_read>" name="ids">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<string>" name="labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes">
                        <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<object>" name="staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="nextHopIpAddress"/>
                          </item>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer" name="routingWeight"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate instance="$Instance">
          <json>
            <schema type="object" name="putExpressRouteConnectionParameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$putExpressRouteConnectionParameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
              </prop>
              <prop type="string" name="name" arg="$Path.connectionName" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="authorizationKey" arg="$putExpressRouteConnectionParameters.properties.authorizationKey"/>
                <prop type="boolean" name="enableInternetSecurity" arg="$putExpressRouteConnectionParameters.properties.enableInternetSecurity"/>
                <prop type="object" name="expressRouteCircuitPeering" required="True">
                  <prop type="string" name="id" arg="$putExpressRouteConnectionParameters.properties.expressRouteCircuitPeering.id"/>
                </prop>
                <prop type="boolean" name="expressRouteGatewayBypass" arg="$putExpressRouteConnectionParameters.properties.expressRouteGatewayBypass"/>
                <prop type="object" name="routingConfiguration">
                  <prop type="object" name="associatedRouteTable" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.associatedRouteTable" cls="SubResource_update">
                    <prop type="string" name="id" arg="@SubResource_update.id"/>
                  </prop>
                  <prop type="object" name="propagatedRouteTables">
                    <prop type="array<@SubResource_update>" name="ids" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids">
                      <item type="@SubResource_update"/>
                    </prop>
                    <prop type="array<string>" name="labels" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="object" name="vnetRoutes" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes">
                    <prop type="array<object>" name="staticRoutes" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes">
                      <item type="object">
                        <prop type="array<string>" name="addressPrefixes" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="name" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name"/>
                        <prop type="string" name="nextHopIpAddress" arg="$putExpressRouteConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress"/>
                      </item>
                    </prop>
                  </prop>
                </prop>
                <prop type="integer" name="routingWeight" arg="$putExpressRouteConnectionParameters.properties.routingWeight"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ExpressRouteConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}/expressRouteConnections/{connectionName}">
          <request method="put">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ExpressRouteConnection_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
