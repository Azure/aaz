<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}/versions/{}" version="2022-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5SW1hZ2VWZXJzaW9uTmFtZX0=/V/MjAyMi0wMy0wMw=="/>
  <commandGroup name="sig image-version">
    <command name="show" version="2022-03-03">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}/versions/{}" version="2022-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5SW1hZ2VWZXJzaW9uTmFtZX0=/V/MjAyMi0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryImageName" options="gallery-image-definition gallery-image-name i" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery image definition in which the Image Version resides."/>
        </arg>
        <arg type="string" var="$Path.galleryImageVersionName" options="gallery-image-version-name gallery-image-version e" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery image version to be deleted."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the Image Definition resides."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="The expand expression to apply on the operation."/>
          <enum>
            <item name="ReplicationStatus" value="&quot;ReplicationStatus&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="GalleryImageVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}">
          <request method="get">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryImageVersionName" arg="$Path.galleryImageVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand">
                <enum>
                  <item value="&quot;ReplicationStatus&quot;"/>
                </enum>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/images/{}/versions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="publishingProfile">
                      <prop type="dateTime" name="endOfLifeDate"/>
                      <prop type="boolean" name="excludeFromLatest"/>
                      <prop readOnly="True" type="dateTime" name="publishedDate"/>
                      <prop type="integer32" name="replicaCount"/>
                      <prop type="string" name="replicationMode">
                        <enum>
                          <item value="&quot;Full&quot;"/>
                          <item value="&quot;Shallow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="targetExtendedLocations" identifiers="name">
                        <item type="object">
                          <prop type="@EncryptionImages_read" name="encryption"/>
                          <prop type="object" name="extendedLocation">
                            <prop type="string" name="name"/>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;EdgeZone&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="extendedLocationReplicaCount"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;StandardSSD_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="targetRegions" identifiers="name">
                        <item type="object">
                          <prop type="object" name="encryption" cls="EncryptionImages_read">
                            <prop type="array<object>" name="dataDiskImages" identifiers="lun">
                              <item type="object">
                                <prop type="string" name="diskEncryptionSetId"/>
                                <prop type="integer32" name="lun" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="osDiskImage">
                              <prop type="string" name="diskEncryptionSetId"/>
                              <prop type="object" name="securityProfile">
                                <prop type="string" name="confidentialVMEncryptionType">
                                  <enum>
                                    <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                    <item value="&quot;EncryptedWithCmk&quot;"/>
                                    <item value="&quot;EncryptedWithPmk&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="secureVMDiskEncryptionSetId"/>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="boolean" name="excludeFromLatest"/>
                          <prop type="string" name="name" required="True"/>
                          <prop type="integer32" name="regionalReplicaCount"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="replicationStatus">
                      <prop readOnly="True" type="string" name="aggregatedState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="summary" identifiers="region">
                        <item type="object">
                          <prop readOnly="True" type="string" name="details"/>
                          <prop readOnly="True" type="integer32" name="progress"/>
                          <prop readOnly="True" type="string" name="region"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Replicating&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="safetyProfile">
                      <prop type="boolean" name="allowDeletionOfReplicatedLocations"/>
                      <prop readOnly="True" type="array<object>" name="policyViolations">
                        <item type="object">
                          <prop type="string" name="category">
                            <enum>
                              <item value="&quot;CopyrightValidation&quot;"/>
                              <item value="&quot;ImageFlaggedUnsafe&quot;"/>
                              <item value="&quot;IpTheft&quot;"/>
                              <item value="&quot;Other&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="details"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="boolean" name="reportedForPolicyViolation"/>
                    </prop>
                    <prop type="object" name="storageProfile" required="True">
                      <prop type="array<object>" name="dataDiskImages" identifiers="lun">
                        <item type="object">
                          <prop type="string" name="hostCaching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="lun" required="True"/>
                          <prop readOnly="True" type="integer32" name="sizeInGB"/>
                          <prop type="@GalleryDiskImageSource_read" name="source"/>
                        </item>
                      </prop>
                      <prop type="object" name="osDiskImage">
                        <prop type="string" name="hostCaching">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer32" name="sizeInGB"/>
                        <prop type="object" name="source" cls="GalleryDiskImageSource_read">
                          <prop type="string" name="id"/>
                          <prop type="string" name="storageAccountId"/>
                          <prop type="string" name="uri"/>
                        </prop>
                      </prop>
                      <prop type="object" name="source">
                        <prop type="string" name="communityGalleryImageId"/>
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-03-03" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}/versions/{}" version="2022-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5SW1hZ2VWZXJzaW9uTmFtZX0=/V/MjAyMi0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryImageName" options="gallery-image-definition gallery-image-name i" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery image definition in which the Image Version resides."/>
        </arg>
        <arg type="string" var="$Path.galleryImageVersionName" options="gallery-image-version-name gallery-image-version e" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery image version to be deleted."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the Image Definition resides."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="GalleryImageVersions_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}">
          <request method="delete">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryImageVersionName" arg="$Path.galleryImageVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-03-03">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}/versions/{}" version="2022-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5SW1hZ2VWZXJzaW9uTmFtZX0=/V/MjAyMi0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryImageName" options="gallery-image-definition gallery-image-name i" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery image definition in which the Image Version resides."/>
        </arg>
        <arg type="string" var="$Path.galleryImageVersionName" options="gallery-image-version-name gallery-image-version e" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery image version to be deleted."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the Image Definition resides."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="GalleryImageVersion">
        <arg type="ResourceLocation" var="$galleryImageVersion.location" options="location l" required="True" group="GalleryImageVersion">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$galleryImageVersion.tags" options="tags" group="GalleryImageVersion">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$galleryImageVersion.properties.publishingProfile" options="publishing-profile" group="Properties">
          <help short="The publishing profile of a gallery image Version."/>
          <arg type="dateTime" var="$galleryImageVersion.properties.publishingProfile.endOfLifeDate" options="end-of-life-date">
            <help short="The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable."/>
          </arg>
          <arg type="boolean" var="$galleryImageVersion.properties.publishingProfile.excludeFromLatest" options="exclude-from-latest">
            <help short="If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version."/>
          </arg>
          <arg type="integer32" var="$galleryImageVersion.properties.publishingProfile.replicaCount" options="replica-count">
            <help short="The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable."/>
          </arg>
          <arg type="string" var="$galleryImageVersion.properties.publishingProfile.replicationMode" options="replication-mode">
            <help short="Optional parameter which specifies the mode to be used for replication. This property is not updatable."/>
            <enum>
              <item name="Full" value="&quot;Full&quot;"/>
              <item name="Shallow" value="&quot;Shallow&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$galleryImageVersion.properties.publishingProfile.storageAccountType" options="storage-account-type">
            <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
            <enum>
              <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
              <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
              <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
            </enum>
          </arg>
          <arg type="array<object>" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations" options="target-extended-locations">
            <help short="The target extended locations where the Image Version is going to be replicated to. This property is updatable."/>
            <item type="object">
              <arg type="@EncryptionImages_create" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].encryption" options="encryption"/>
              <arg type="object" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation" options="extended-location">
                <help short="The name of the extended location."/>
                <arg type="string" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.name" options="name"/>
                <arg type="string" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.type" options="type">
                  <help short="It is type of the extended location."/>
                  <enum>
                    <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="integer32" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocationReplicaCount" options="extended-location-replica-count">
                <help short="The number of replicas of the Image Version to be created per extended location. This property is updatable."/>
              </arg>
              <arg type="string" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].name" options="name">
                <help short="The name of the region."/>
              </arg>
              <arg type="string" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
                <enum>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$galleryImageVersion.properties.publishingProfile.targetRegions" options="target-regions">
            <help short="The target regions where the Image Version is going to be replicated to. This property is updatable."/>
            <item type="object">
              <arg type="object" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].encryption" options="encryption" cls="EncryptionImages_create">
                <help short="Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact."/>
                <arg type="array<object>" var="@EncryptionImages_create.dataDiskImages" options="data-disk-images">
                  <help short="A list of encryption specifications for data disk images."/>
                  <item type="object">
                    <arg type="string" var="@EncryptionImages_create.dataDiskImages[].diskEncryptionSetId" options="disk-encryption-set-id">
                      <help short="A relative URI containing the resource ID of the disk encryption set."/>
                    </arg>
                    <arg type="integer32" var="@EncryptionImages_create.dataDiskImages[].lun" options="lun" required="True">
                      <help short="This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine."/>
                    </arg>
                  </item>
                </arg>
                <arg type="object" var="@EncryptionImages_create.osDiskImage" options="os-disk-image">
                  <help short="Contains encryption settings for an OS disk image."/>
                  <arg type="string" var="@EncryptionImages_create.osDiskImage.diskEncryptionSetId" options="disk-encryption-set-id">
                    <help short="A relative URI containing the resource ID of the disk encryption set."/>
                  </arg>
                  <arg type="object" var="@EncryptionImages_create.osDiskImage.securityProfile" options="security-profile">
                    <help short="This property specifies the security profile of an OS disk image."/>
                    <arg type="string" var="@EncryptionImages_create.osDiskImage.securityProfile.confidentialVMEncryptionType" options="confidential-vm-encryption-type">
                      <help short="confidential VM encryption types"/>
                      <enum>
                        <item name="EncryptedVMGuestStateOnlyWithPmk" value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                        <item name="EncryptedWithCmk" value="&quot;EncryptedWithCmk&quot;"/>
                        <item name="EncryptedWithPmk" value="&quot;EncryptedWithPmk&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="@EncryptionImages_create.osDiskImage.securityProfile.secureVMDiskEncryptionSetId" options="secure-vm-disk-encryption-set-id">
                      <help short="secure VM disk encryption set id"/>
                    </arg>
                  </arg>
                </arg>
              </arg>
              <arg type="boolean" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].excludeFromLatest" options="exclude-from-latest">
                <help short="Contains the flag setting to hide an image when users specify version='latest'"/>
              </arg>
              <arg type="string" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].name" options="name" required="True">
                <help short="The name of the region."/>
              </arg>
              <arg type="integer32" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].regionalReplicaCount" options="regional-replica-count">
                <help short="The number of replicas of the Image Version to be created per region. This property is updatable."/>
              </arg>
              <arg type="string" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
                <enum>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="object" var="$galleryImageVersion.properties.safetyProfile" options="safety-profile" group="Properties">
          <help short="This is the safety profile of the Gallery Image Version."/>
          <arg type="boolean" var="$galleryImageVersion.properties.safetyProfile.allowDeletionOfReplicatedLocations" options="allow-deletion-of-replicated-locations">
            <help short="Indicates whether or not removing this Gallery Image Version from replicated regions is allowed."/>
          </arg>
        </arg>
        <arg type="object" var="$galleryImageVersion.properties.storageProfile" options="storage-profile" group="Properties">
          <help short="This is the storage profile of a Gallery Image Version."/>
          <arg type="array<object>" var="$galleryImageVersion.properties.storageProfile.dataDiskImages" options="data-disk-images">
            <help short="A list of data disk images."/>
            <item type="object">
              <arg type="string" var="$galleryImageVersion.properties.storageProfile.dataDiskImages[].hostCaching" options="host-caching">
                <help short="The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'"/>
                <enum>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                  <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                </enum>
              </arg>
              <arg type="integer32" var="$galleryImageVersion.properties.storageProfile.dataDiskImages[].lun" options="lun" required="True">
                <help short="This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine."/>
              </arg>
              <arg type="@GalleryDiskImageSource_create" var="$galleryImageVersion.properties.storageProfile.dataDiskImages[].source" options="source"/>
            </item>
          </arg>
          <arg type="object" var="$galleryImageVersion.properties.storageProfile.osDiskImage" options="os-disk-image">
            <help short="This is the OS disk image."/>
            <arg type="string" var="$galleryImageVersion.properties.storageProfile.osDiskImage.hostCaching" options="host-caching">
              <help short="The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'"/>
              <enum>
                <item name="None" value="&quot;None&quot;"/>
                <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$galleryImageVersion.properties.storageProfile.osDiskImage.source" options="source" cls="GalleryDiskImageSource_create">
              <help short="The source for the disk image."/>
              <arg type="string" var="@GalleryDiskImageSource_create.id" options="id">
                <help short="The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource."/>
              </arg>
              <arg type="string" var="@GalleryDiskImageSource_create.storageAccountId" options="storage-account-id">
                <help short="The Storage Account Id that contains the vhd blob being used as a source for this artifact version."/>
              </arg>
              <arg type="string" var="@GalleryDiskImageSource_create.uri" options="uri">
                <help short="The uri of the gallery artifact version source. Currently used to specify vhd/blob source."/>
              </arg>
            </arg>
          </arg>
          <arg type="object" var="$galleryImageVersion.properties.storageProfile.source" options="source">
            <help short="The source of the gallery artifact version."/>
            <arg type="string" var="$galleryImageVersion.properties.storageProfile.source.communityGalleryImageId" options="community-gallery-image-id">
              <help short="The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source."/>
            </arg>
            <arg type="string" var="$galleryImageVersion.properties.storageProfile.source.id" options="id">
              <help short="The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource."/>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="GalleryImageVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}">
          <request method="put">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryImageVersionName" arg="$Path.galleryImageVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-03&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="galleryImageVersion" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$galleryImageVersion.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="publishingProfile" arg="$galleryImageVersion.properties.publishingProfile">
                      <prop type="dateTime" name="endOfLifeDate" arg="$galleryImageVersion.properties.publishingProfile.endOfLifeDate"/>
                      <prop type="boolean" name="excludeFromLatest" arg="$galleryImageVersion.properties.publishingProfile.excludeFromLatest"/>
                      <prop type="integer32" name="replicaCount" arg="$galleryImageVersion.properties.publishingProfile.replicaCount"/>
                      <prop type="string" name="replicationMode" arg="$galleryImageVersion.properties.publishingProfile.replicationMode">
                        <enum>
                          <item value="&quot;Full&quot;"/>
                          <item value="&quot;Shallow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageAccountType" arg="$galleryImageVersion.properties.publishingProfile.storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="targetExtendedLocations" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations" identifiers="name">
                        <item type="object">
                          <prop type="@EncryptionImages_create" name="encryption" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].encryption"/>
                          <prop type="object" name="extendedLocation" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation">
                            <prop type="string" name="name" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.name"/>
                            <prop type="string" name="type" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.type">
                              <enum>
                                <item value="&quot;EdgeZone&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="extendedLocationReplicaCount" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocationReplicaCount"/>
                          <prop type="string" name="name" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].name"/>
                          <prop type="string" name="storageAccountType" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;StandardSSD_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="targetRegions" arg="$galleryImageVersion.properties.publishingProfile.targetRegions" identifiers="name">
                        <item type="object">
                          <prop type="object" name="encryption" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].encryption" cls="EncryptionImages_create">
                            <prop type="array<object>" name="dataDiskImages" arg="@EncryptionImages_create.dataDiskImages" identifiers="lun">
                              <item type="object">
                                <prop type="string" name="diskEncryptionSetId" arg="@EncryptionImages_create.dataDiskImages[].diskEncryptionSetId"/>
                                <prop type="integer32" name="lun" arg="@EncryptionImages_create.dataDiskImages[].lun" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="osDiskImage" arg="@EncryptionImages_create.osDiskImage">
                              <prop type="string" name="diskEncryptionSetId" arg="@EncryptionImages_create.osDiskImage.diskEncryptionSetId"/>
                              <prop type="object" name="securityProfile" arg="@EncryptionImages_create.osDiskImage.securityProfile">
                                <prop type="string" name="confidentialVMEncryptionType" arg="@EncryptionImages_create.osDiskImage.securityProfile.confidentialVMEncryptionType">
                                  <enum>
                                    <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                    <item value="&quot;EncryptedWithCmk&quot;"/>
                                    <item value="&quot;EncryptedWithPmk&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="secureVMDiskEncryptionSetId" arg="@EncryptionImages_create.osDiskImage.securityProfile.secureVMDiskEncryptionSetId"/>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="boolean" name="excludeFromLatest" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].excludeFromLatest"/>
                          <prop type="string" name="name" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].name" required="True"/>
                          <prop type="integer32" name="regionalReplicaCount" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].regionalReplicaCount"/>
                          <prop type="string" name="storageAccountType" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="safetyProfile" arg="$galleryImageVersion.properties.safetyProfile">
                      <prop type="boolean" name="allowDeletionOfReplicatedLocations" arg="$galleryImageVersion.properties.safetyProfile.allowDeletionOfReplicatedLocations"/>
                    </prop>
                    <prop type="object" name="storageProfile" arg="$galleryImageVersion.properties.storageProfile" required="True">
                      <prop type="array<object>" name="dataDiskImages" arg="$galleryImageVersion.properties.storageProfile.dataDiskImages" identifiers="lun">
                        <item type="object">
                          <prop type="string" name="hostCaching" arg="$galleryImageVersion.properties.storageProfile.dataDiskImages[].hostCaching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="lun" arg="$galleryImageVersion.properties.storageProfile.dataDiskImages[].lun" required="True"/>
                          <prop type="@GalleryDiskImageSource_create" name="source" arg="$galleryImageVersion.properties.storageProfile.dataDiskImages[].source"/>
                        </item>
                      </prop>
                      <prop type="object" name="osDiskImage" arg="$galleryImageVersion.properties.storageProfile.osDiskImage">
                        <prop type="string" name="hostCaching" arg="$galleryImageVersion.properties.storageProfile.osDiskImage.hostCaching">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="source" arg="$galleryImageVersion.properties.storageProfile.osDiskImage.source" cls="GalleryDiskImageSource_create">
                          <prop type="string" name="id" arg="@GalleryDiskImageSource_create.id"/>
                          <prop type="string" name="storageAccountId" arg="@GalleryDiskImageSource_create.storageAccountId"/>
                          <prop type="string" name="uri" arg="@GalleryDiskImageSource_create.uri"/>
                        </prop>
                      </prop>
                      <prop type="object" name="source" arg="$galleryImageVersion.properties.storageProfile.source">
                        <prop type="string" name="communityGalleryImageId" arg="$galleryImageVersion.properties.storageProfile.source.communityGalleryImageId"/>
                        <prop type="string" name="id" arg="$galleryImageVersion.properties.storageProfile.source.id"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$galleryImageVersion.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object" cls="GalleryImageVersion_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/images/{}/versions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="publishingProfile">
                      <prop type="dateTime" name="endOfLifeDate"/>
                      <prop type="boolean" name="excludeFromLatest"/>
                      <prop readOnly="True" type="dateTime" name="publishedDate"/>
                      <prop type="integer32" name="replicaCount"/>
                      <prop type="string" name="replicationMode">
                        <enum>
                          <item value="&quot;Full&quot;"/>
                          <item value="&quot;Shallow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="targetExtendedLocations" identifiers="name">
                        <item type="object">
                          <prop type="@EncryptionImages_read" name="encryption"/>
                          <prop type="object" name="extendedLocation">
                            <prop type="string" name="name"/>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;EdgeZone&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="extendedLocationReplicaCount"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;StandardSSD_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="targetRegions" identifiers="name">
                        <item type="object">
                          <prop type="object" name="encryption" cls="EncryptionImages_read">
                            <prop type="array<object>" name="dataDiskImages" identifiers="lun">
                              <item type="object">
                                <prop type="string" name="diskEncryptionSetId"/>
                                <prop type="integer32" name="lun" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="osDiskImage">
                              <prop type="string" name="diskEncryptionSetId"/>
                              <prop type="object" name="securityProfile">
                                <prop type="string" name="confidentialVMEncryptionType">
                                  <enum>
                                    <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                    <item value="&quot;EncryptedWithCmk&quot;"/>
                                    <item value="&quot;EncryptedWithPmk&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="secureVMDiskEncryptionSetId"/>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="boolean" name="excludeFromLatest"/>
                          <prop type="string" name="name" required="True"/>
                          <prop type="integer32" name="regionalReplicaCount"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="replicationStatus">
                      <prop readOnly="True" type="string" name="aggregatedState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="summary" identifiers="region">
                        <item type="object">
                          <prop readOnly="True" type="string" name="details"/>
                          <prop readOnly="True" type="integer32" name="progress"/>
                          <prop readOnly="True" type="string" name="region"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Replicating&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="safetyProfile">
                      <prop type="boolean" name="allowDeletionOfReplicatedLocations"/>
                      <prop readOnly="True" type="array<object>" name="policyViolations">
                        <item type="object">
                          <prop type="string" name="category">
                            <enum>
                              <item value="&quot;CopyrightValidation&quot;"/>
                              <item value="&quot;ImageFlaggedUnsafe&quot;"/>
                              <item value="&quot;IpTheft&quot;"/>
                              <item value="&quot;Other&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="details"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="boolean" name="reportedForPolicyViolation"/>
                    </prop>
                    <prop type="object" name="storageProfile" required="True">
                      <prop type="array<object>" name="dataDiskImages" identifiers="lun">
                        <item type="object">
                          <prop type="string" name="hostCaching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="lun" required="True"/>
                          <prop readOnly="True" type="integer32" name="sizeInGB"/>
                          <prop type="@GalleryDiskImageSource_read" name="source"/>
                        </item>
                      </prop>
                      <prop type="object" name="osDiskImage">
                        <prop type="string" name="hostCaching">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer32" name="sizeInGB"/>
                        <prop type="object" name="source" cls="GalleryDiskImageSource_read">
                          <prop type="string" name="id"/>
                          <prop type="string" name="storageAccountId"/>
                          <prop type="string" name="uri"/>
                        </prop>
                      </prop>
                      <prop type="object" name="source">
                        <prop type="string" name="communityGalleryImageId"/>
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@GalleryImageVersion_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-03-03">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/galleries/{}/images/{}/versions/{}" version="2022-03-03" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9nYWxsZXJpZXMve2dhbGxlcnlOYW1lfS9pbWFnZXMve2dhbGxlcnlJbWFnZU5hbWV9L3ZlcnNpb25zL3tnYWxsZXJ5SW1hZ2VWZXJzaW9uTmFtZX0=/V/MjAyMi0wMy0wMw=="/>
      <argGroup name="">
        <arg type="string" var="$Path.galleryImageName" options="gallery-image-definition gallery-image-name i" required="True" group="" idPart="child_name_1">
          <help short="The name of the gallery image definition in which the Image Version resides."/>
        </arg>
        <arg type="string" var="$Path.galleryImageVersionName" options="gallery-image-version-name gallery-image-version e" required="True" group="" idPart="child_name_2">
          <help short="The name of the gallery image version to be deleted."/>
        </arg>
        <arg type="string" var="$Path.galleryName" options="gallery-name r" required="True" group="" idPart="name">
          <help short="The name of the Shared Image Gallery in which the Image Definition resides."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="GalleryImageVersion">
        <arg type="ResourceLocation" var="$galleryImageVersion.location" options="location l" group="GalleryImageVersion">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$galleryImageVersion.tags" options="tags" group="GalleryImageVersion">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$galleryImageVersion.properties.publishingProfile" options="publishing-profile" group="Properties">
          <help short="The publishing profile of a gallery image Version."/>
          <arg nullable="True" type="dateTime" var="$galleryImageVersion.properties.publishingProfile.endOfLifeDate" options="end-of-life-date">
            <help short="The end of life date of the gallery image version. This property can be used for decommissioning purposes. This property is updatable."/>
          </arg>
          <arg nullable="True" type="boolean" var="$galleryImageVersion.properties.publishingProfile.excludeFromLatest" options="exclude-from-latest">
            <help short="If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version."/>
          </arg>
          <arg nullable="True" type="integer32" var="$galleryImageVersion.properties.publishingProfile.replicaCount" options="replica-count">
            <help short="The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable."/>
          </arg>
          <arg nullable="True" type="string" var="$galleryImageVersion.properties.publishingProfile.replicationMode" options="replication-mode">
            <help short="Optional parameter which specifies the mode to be used for replication. This property is not updatable."/>
            <enum>
              <item name="Full" value="&quot;Full&quot;"/>
              <item name="Shallow" value="&quot;Shallow&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="string" var="$galleryImageVersion.properties.publishingProfile.storageAccountType" options="storage-account-type">
            <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
            <enum>
              <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
              <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
              <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="array<object>" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations" options="target-extended-locations">
            <help short="The target extended locations where the Image Version is going to be replicated to. This property is updatable."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="@EncryptionImages_update" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].encryption" options="encryption"/>
              <arg nullable="True" type="object" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation" options="extended-location">
                <help short="The name of the extended location."/>
                <arg nullable="True" type="string" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.name" options="name"/>
                <arg nullable="True" type="string" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.type" options="type">
                  <help short="It is type of the extended location."/>
                  <enum>
                    <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="integer32" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocationReplicaCount" options="extended-location-replica-count">
                <help short="The number of replicas of the Image Version to be created per extended location. This property is updatable."/>
              </arg>
              <arg nullable="True" type="string" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].name" options="name">
                <help short="The name of the region."/>
              </arg>
              <arg nullable="True" type="string" var="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
                <enum>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$galleryImageVersion.properties.publishingProfile.targetRegions" options="target-regions">
            <help short="The target regions where the Image Version is going to be replicated to. This property is updatable."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="object" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].encryption" options="encryption" cls="EncryptionImages_update">
                <help short="Optional. Allows users to provide customer managed keys for encrypting the OS and data disks in the gallery artifact."/>
                <arg nullable="True" type="array<object>" var="@EncryptionImages_update.dataDiskImages" options="data-disk-images">
                  <help short="A list of encryption specifications for data disk images."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="string" var="@EncryptionImages_update.dataDiskImages[].diskEncryptionSetId" options="disk-encryption-set-id">
                      <help short="A relative URI containing the resource ID of the disk encryption set."/>
                    </arg>
                    <arg type="integer32" var="@EncryptionImages_update.dataDiskImages[].lun" options="lun">
                      <help short="This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="object" var="@EncryptionImages_update.osDiskImage" options="os-disk-image">
                  <help short="Contains encryption settings for an OS disk image."/>
                  <arg nullable="True" type="string" var="@EncryptionImages_update.osDiskImage.diskEncryptionSetId" options="disk-encryption-set-id">
                    <help short="A relative URI containing the resource ID of the disk encryption set."/>
                  </arg>
                  <arg nullable="True" type="object" var="@EncryptionImages_update.osDiskImage.securityProfile" options="security-profile">
                    <help short="This property specifies the security profile of an OS disk image."/>
                    <arg nullable="True" type="string" var="@EncryptionImages_update.osDiskImage.securityProfile.confidentialVMEncryptionType" options="confidential-vm-encryption-type">
                      <help short="confidential VM encryption types"/>
                      <enum>
                        <item name="EncryptedVMGuestStateOnlyWithPmk" value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                        <item name="EncryptedWithCmk" value="&quot;EncryptedWithCmk&quot;"/>
                        <item name="EncryptedWithPmk" value="&quot;EncryptedWithPmk&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="@EncryptionImages_update.osDiskImage.securityProfile.secureVMDiskEncryptionSetId" options="secure-vm-disk-encryption-set-id">
                      <help short="secure VM disk encryption set id"/>
                    </arg>
                  </arg>
                </arg>
              </arg>
              <arg nullable="True" type="boolean" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].excludeFromLatest" options="exclude-from-latest">
                <help short="Contains the flag setting to hide an image when users specify version='latest'"/>
              </arg>
              <arg type="string" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].name" options="name">
                <help short="The name of the region."/>
              </arg>
              <arg nullable="True" type="integer32" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].regionalReplicaCount" options="regional-replica-count">
                <help short="The number of replicas of the Image Version to be created per region. This property is updatable."/>
              </arg>
              <arg nullable="True" type="string" var="$galleryImageVersion.properties.publishingProfile.targetRegions[].storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type to be used to store the image. This property is not updatable."/>
                <enum>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="Standard_ZRS" value="&quot;Standard_ZRS&quot;"/>
                </enum>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$galleryImageVersion.properties.safetyProfile" options="safety-profile" group="Properties">
          <help short="This is the safety profile of the Gallery Image Version."/>
          <arg nullable="True" type="boolean" var="$galleryImageVersion.properties.safetyProfile.allowDeletionOfReplicatedLocations" options="allow-deletion-of-replicated-locations">
            <help short="Indicates whether or not removing this Gallery Image Version from replicated regions is allowed."/>
          </arg>
        </arg>
        <arg type="object" var="$galleryImageVersion.properties.storageProfile" options="storage-profile" group="Properties">
          <help short="This is the storage profile of a Gallery Image Version."/>
          <arg nullable="True" type="array<object>" var="$galleryImageVersion.properties.storageProfile.dataDiskImages" options="data-disk-images">
            <help short="A list of data disk images."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$galleryImageVersion.properties.storageProfile.dataDiskImages[].hostCaching" options="host-caching">
                <help short="The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'"/>
                <enum>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                  <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                </enum>
              </arg>
              <arg type="integer32" var="$galleryImageVersion.properties.storageProfile.dataDiskImages[].lun" options="lun">
                <help short="This property specifies the logical unit number of the data disk. This value is used to identify data disks within the Virtual Machine and therefore must be unique for each data disk attached to the Virtual Machine."/>
              </arg>
              <arg nullable="True" type="@GalleryDiskImageSource_update" var="$galleryImageVersion.properties.storageProfile.dataDiskImages[].source" options="source"/>
            </item>
          </arg>
          <arg nullable="True" type="object" var="$galleryImageVersion.properties.storageProfile.osDiskImage" options="os-disk-image">
            <help short="This is the OS disk image."/>
            <arg nullable="True" type="string" var="$galleryImageVersion.properties.storageProfile.osDiskImage.hostCaching" options="host-caching">
              <help short="The host caching of the disk. Valid values are 'None', 'ReadOnly', and 'ReadWrite'"/>
              <enum>
                <item name="None" value="&quot;None&quot;"/>
                <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="$galleryImageVersion.properties.storageProfile.osDiskImage.source" options="source" cls="GalleryDiskImageSource_update">
              <help short="The source for the disk image."/>
              <arg nullable="True" type="string" var="@GalleryDiskImageSource_update.id" options="id">
                <help short="The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource."/>
              </arg>
              <arg nullable="True" type="string" var="@GalleryDiskImageSource_update.storageAccountId" options="storage-account-id">
                <help short="The Storage Account Id that contains the vhd blob being used as a source for this artifact version."/>
              </arg>
              <arg nullable="True" type="string" var="@GalleryDiskImageSource_update.uri" options="uri">
                <help short="The uri of the gallery artifact version source. Currently used to specify vhd/blob source."/>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$galleryImageVersion.properties.storageProfile.source" options="source">
            <help short="The source of the gallery artifact version."/>
            <arg nullable="True" type="string" var="$galleryImageVersion.properties.storageProfile.source.communityGalleryImageId" options="community-gallery-image-id">
              <help short="The resource Id of the source Community Gallery Image.  Only required when using Community Gallery Image as a source."/>
            </arg>
            <arg nullable="True" type="string" var="$galleryImageVersion.properties.storageProfile.source.id" options="id">
              <help short="The id of the gallery artifact version source. Can specify a disk uri, snapshot uri, user image or storage account resource."/>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="GalleryImageVersions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}">
          <request method="get">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryImageVersionName" arg="$Path.galleryImageVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-03&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="GalleryImageVersion_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/galleries/{}/images/{}/versions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Migrating&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="publishingProfile">
                      <prop type="dateTime" name="endOfLifeDate"/>
                      <prop type="boolean" name="excludeFromLatest"/>
                      <prop readOnly="True" type="dateTime" name="publishedDate"/>
                      <prop type="integer32" name="replicaCount"/>
                      <prop type="string" name="replicationMode">
                        <enum>
                          <item value="&quot;Full&quot;"/>
                          <item value="&quot;Shallow&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="targetExtendedLocations" identifiers="name">
                        <item type="object">
                          <prop type="@EncryptionImages_read" name="encryption"/>
                          <prop type="object" name="extendedLocation">
                            <prop type="string" name="name"/>
                            <prop type="string" name="type">
                              <enum>
                                <item value="&quot;EdgeZone&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="extendedLocationReplicaCount"/>
                          <prop type="string" name="name"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;StandardSSD_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="targetRegions" identifiers="name">
                        <item type="object">
                          <prop type="object" name="encryption" cls="EncryptionImages_read">
                            <prop type="array<object>" name="dataDiskImages" identifiers="lun">
                              <item type="object">
                                <prop type="string" name="diskEncryptionSetId"/>
                                <prop type="integer32" name="lun" required="True"/>
                              </item>
                            </prop>
                            <prop type="object" name="osDiskImage">
                              <prop type="string" name="diskEncryptionSetId"/>
                              <prop type="object" name="securityProfile">
                                <prop type="string" name="confidentialVMEncryptionType">
                                  <enum>
                                    <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                    <item value="&quot;EncryptedWithCmk&quot;"/>
                                    <item value="&quot;EncryptedWithPmk&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="secureVMDiskEncryptionSetId"/>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="boolean" name="excludeFromLatest"/>
                          <prop type="string" name="name" required="True"/>
                          <prop type="integer32" name="regionalReplicaCount"/>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;Standard_ZRS&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="replicationStatus">
                      <prop readOnly="True" type="string" name="aggregatedState">
                        <enum>
                          <item value="&quot;Completed&quot;"/>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;InProgress&quot;"/>
                          <item value="&quot;Unknown&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="array<object>" name="summary" identifiers="region">
                        <item type="object">
                          <prop readOnly="True" type="string" name="details"/>
                          <prop readOnly="True" type="integer32" name="progress"/>
                          <prop readOnly="True" type="string" name="region"/>
                          <prop readOnly="True" type="string" name="state">
                            <enum>
                              <item value="&quot;Completed&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Replicating&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="safetyProfile">
                      <prop type="boolean" name="allowDeletionOfReplicatedLocations"/>
                      <prop readOnly="True" type="array<object>" name="policyViolations">
                        <item type="object">
                          <prop type="string" name="category">
                            <enum>
                              <item value="&quot;CopyrightValidation&quot;"/>
                              <item value="&quot;ImageFlaggedUnsafe&quot;"/>
                              <item value="&quot;IpTheft&quot;"/>
                              <item value="&quot;Other&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="details"/>
                        </item>
                      </prop>
                      <prop readOnly="True" type="boolean" name="reportedForPolicyViolation"/>
                    </prop>
                    <prop type="object" name="storageProfile" required="True">
                      <prop type="array<object>" name="dataDiskImages" identifiers="lun">
                        <item type="object">
                          <prop type="string" name="hostCaching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="lun" required="True"/>
                          <prop readOnly="True" type="integer32" name="sizeInGB"/>
                          <prop type="@GalleryDiskImageSource_read" name="source"/>
                        </item>
                      </prop>
                      <prop type="object" name="osDiskImage">
                        <prop type="string" name="hostCaching">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="integer32" name="sizeInGB"/>
                        <prop type="object" name="source" cls="GalleryDiskImageSource_read">
                          <prop type="string" name="id"/>
                          <prop type="string" name="storageAccountId"/>
                          <prop type="string" name="uri"/>
                        </prop>
                      </prop>
                      <prop type="object" name="source">
                        <prop type="string" name="communityGalleryImageId"/>
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="galleryImageVersion" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$galleryImageVersion.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="publishingProfile" arg="$galleryImageVersion.properties.publishingProfile">
                  <prop type="dateTime" name="endOfLifeDate" arg="$galleryImageVersion.properties.publishingProfile.endOfLifeDate"/>
                  <prop type="boolean" name="excludeFromLatest" arg="$galleryImageVersion.properties.publishingProfile.excludeFromLatest"/>
                  <prop type="integer32" name="replicaCount" arg="$galleryImageVersion.properties.publishingProfile.replicaCount"/>
                  <prop type="string" name="replicationMode" arg="$galleryImageVersion.properties.publishingProfile.replicationMode">
                    <enum>
                      <item value="&quot;Full&quot;"/>
                      <item value="&quot;Shallow&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="storageAccountType" arg="$galleryImageVersion.properties.publishingProfile.storageAccountType">
                    <enum>
                      <item value="&quot;Premium_LRS&quot;"/>
                      <item value="&quot;Standard_LRS&quot;"/>
                      <item value="&quot;Standard_ZRS&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<object>" name="targetExtendedLocations" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations" identifiers="name">
                    <item type="object">
                      <prop type="@EncryptionImages_update" name="encryption" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].encryption"/>
                      <prop type="object" name="extendedLocation" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation">
                        <prop type="string" name="name" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.name"/>
                        <prop type="string" name="type" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocation.type">
                          <enum>
                            <item value="&quot;EdgeZone&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="integer32" name="extendedLocationReplicaCount" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].extendedLocationReplicaCount"/>
                      <prop type="string" name="name" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].name"/>
                      <prop type="string" name="storageAccountType" arg="$galleryImageVersion.properties.publishingProfile.targetExtendedLocations[].storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;StandardSSD_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="targetRegions" arg="$galleryImageVersion.properties.publishingProfile.targetRegions" identifiers="name">
                    <item type="object">
                      <prop type="object" name="encryption" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].encryption" cls="EncryptionImages_update">
                        <prop type="array<object>" name="dataDiskImages" arg="@EncryptionImages_update.dataDiskImages" identifiers="lun">
                          <item type="object">
                            <prop type="string" name="diskEncryptionSetId" arg="@EncryptionImages_update.dataDiskImages[].diskEncryptionSetId"/>
                            <prop type="integer32" name="lun" arg="@EncryptionImages_update.dataDiskImages[].lun" required="True"/>
                          </item>
                        </prop>
                        <prop type="object" name="osDiskImage" arg="@EncryptionImages_update.osDiskImage">
                          <prop type="string" name="diskEncryptionSetId" arg="@EncryptionImages_update.osDiskImage.diskEncryptionSetId"/>
                          <prop type="object" name="securityProfile" arg="@EncryptionImages_update.osDiskImage.securityProfile">
                            <prop type="string" name="confidentialVMEncryptionType" arg="@EncryptionImages_update.osDiskImage.securityProfile.confidentialVMEncryptionType">
                              <enum>
                                <item value="&quot;EncryptedVMGuestStateOnlyWithPmk&quot;"/>
                                <item value="&quot;EncryptedWithCmk&quot;"/>
                                <item value="&quot;EncryptedWithPmk&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="secureVMDiskEncryptionSetId" arg="@EncryptionImages_update.osDiskImage.securityProfile.secureVMDiskEncryptionSetId"/>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="boolean" name="excludeFromLatest" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].excludeFromLatest"/>
                      <prop type="string" name="name" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].name" required="True"/>
                      <prop type="integer32" name="regionalReplicaCount" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].regionalReplicaCount"/>
                      <prop type="string" name="storageAccountType" arg="$galleryImageVersion.properties.publishingProfile.targetRegions[].storageAccountType">
                        <enum>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;Standard_ZRS&quot;"/>
                        </enum>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="safetyProfile" arg="$galleryImageVersion.properties.safetyProfile">
                  <prop type="boolean" name="allowDeletionOfReplicatedLocations" arg="$galleryImageVersion.properties.safetyProfile.allowDeletionOfReplicatedLocations"/>
                </prop>
                <prop type="object" name="storageProfile" arg="$galleryImageVersion.properties.storageProfile" required="True">
                  <prop type="array<object>" name="dataDiskImages" arg="$galleryImageVersion.properties.storageProfile.dataDiskImages" identifiers="lun">
                    <item type="object">
                      <prop type="string" name="hostCaching" arg="$galleryImageVersion.properties.storageProfile.dataDiskImages[].hostCaching">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;ReadOnly&quot;"/>
                          <item value="&quot;ReadWrite&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="lun" arg="$galleryImageVersion.properties.storageProfile.dataDiskImages[].lun" required="True"/>
                      <prop type="@GalleryDiskImageSource_update" name="source" arg="$galleryImageVersion.properties.storageProfile.dataDiskImages[].source"/>
                    </item>
                  </prop>
                  <prop type="object" name="osDiskImage" arg="$galleryImageVersion.properties.storageProfile.osDiskImage">
                    <prop type="string" name="hostCaching" arg="$galleryImageVersion.properties.storageProfile.osDiskImage.hostCaching">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;ReadOnly&quot;"/>
                        <item value="&quot;ReadWrite&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="source" arg="$galleryImageVersion.properties.storageProfile.osDiskImage.source" cls="GalleryDiskImageSource_update">
                      <prop type="string" name="id" arg="@GalleryDiskImageSource_update.id"/>
                      <prop type="string" name="storageAccountId" arg="@GalleryDiskImageSource_update.storageAccountId"/>
                      <prop type="string" name="uri" arg="@GalleryDiskImageSource_update.uri"/>
                    </prop>
                  </prop>
                  <prop type="object" name="source" arg="$galleryImageVersion.properties.storageProfile.source">
                    <prop type="string" name="communityGalleryImageId" arg="$galleryImageVersion.properties.storageProfile.source.communityGalleryImageId"/>
                    <prop type="string" name="id" arg="$galleryImageVersion.properties.storageProfile.source.id"/>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$galleryImageVersion.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="GalleryImageVersions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{galleryImageName}/versions/{galleryImageVersionName}">
          <request method="put">
            <path>
              <param type="string" name="galleryImageName" arg="$Path.galleryImageName" required="True"/>
              <param type="string" name="galleryImageVersionName" arg="$Path.galleryImageVersionName" required="True"/>
              <param type="string" name="galleryName" arg="$Path.galleryName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-03-03&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@GalleryImageVersion_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@GalleryImageVersion_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
