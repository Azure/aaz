<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.monitor/pipelinegroups" version="2023-10-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk1vbml0b3IvcGlwZWxpbmVHcm91cHM=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/pipelinegroups" version="2023-10-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9waXBlbGluZUdyb3Vwcw==/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="monitor pipeline-group">
    <command name="list" version="2023-10-01-preview">
      <resource id="/subscriptions/{}/providers/microsoft.monitor/pipelinegroups" version="2023-10-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk1vbml0b3IvcGlwZWxpbmVHcm91cHM=/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.monitor/pipelinegroups" version="2023-10-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Monitor/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTW9uaXRvci9waXBlbGluZUdyb3Vwcw==/V/MjAyMy0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_PipelineGroups_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_PipelineGroups_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_PipelineGroups_ListByResourceGroup" operationId="PipelineGroups_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Monitor/pipelineGroups">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop type="object" name="extendedLocation">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;CustomLocation&quot;"/>
                            <item value="&quot;EdgeZone&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Monitor/pipelineGroups/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="exporters" required="True">
                          <item type="object">
                            <prop type="object" name="azureMonitorWorkspaceLogs">
                              <prop type="object" name="api" required="True">
                                <prop type="string" name="dataCollectionEndpointUrl" required="True">
                                  <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                                </prop>
                                <prop type="string" name="dataCollectionRule" required="True">
                                  <format pattern="^(?!-)[a-zA-Z0-9.-]{1,1000}[^-]$"/>
                                </prop>
                                <prop type="object" name="schema" required="True">
                                  <prop type="array<object>" name="recordMap" required="True">
                                    <item type="object">
                                      <prop type="string" name="from" required="True"/>
                                      <prop type="string" name="to" required="True"/>
                                    </item>
                                  </prop>
                                  <prop type="array<object>" name="resourceMap">
                                    <item type="object">
                                      <prop type="string" name="from" required="True"/>
                                      <prop type="string" name="to" required="True"/>
                                    </item>
                                  </prop>
                                  <prop type="array<object>" name="scopeMap">
                                    <item type="object">
                                      <prop type="string" name="from" required="True"/>
                                      <prop type="string" name="to" required="True"/>
                                    </item>
                                  </prop>
                                </prop>
                                <prop type="string" name="stream" required="True">
                                  <format pattern="^(?!-)[a-zA-Z0-9._-]{1,1000}[^-]$"/>
                                </prop>
                              </prop>
                              <prop type="object" name="cache">
                                <prop type="integer32" name="maxStorageUsage"/>
                                <prop type="integer32" name="retentionPeriod"/>
                              </prop>
                              <prop type="object" name="concurrency">
                                <prop type="integer32" name="batchQueueSize">
                                  <default value="100"/>
                                </prop>
                                <prop type="integer32" name="workerCount">
                                  <default value="4"/>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="string" name="name" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="object" name="tcp">
                              <prop type="string" name="url" required="True">
                                <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                              </prop>
                            </prop>
                            <prop type="string" name="type" required="True">
                              <enum>
                                <item value="&quot;AzureMonitorWorkspaceLogs&quot;"/>
                                <item value="&quot;PipelineGroup&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="networkingConfigurations">
                          <item type="object">
                            <prop type="string" name="externalNetworkingMode" required="True">
                              <enum>
                                <item value="&quot;LoadBalancerOnly&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="host">
                              <format pattern="^[a-zA-Z0-9-\.]+$"/>
                            </prop>
                            <prop type="array<object>" name="routes" required="True">
                              <item type="object">
                                <prop type="string" name="path">
                                  <format pattern="^[a-zA-Z0-9-/\.]+$"/>
                                </prop>
                                <prop type="integer32" name="port">
                                  <format maximum="65535" minimum="1"/>
                                </prop>
                                <prop type="string" name="receiver" required="True">
                                  <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                                </prop>
                                <prop type="string" name="subdomain">
                                  <format pattern="^[a-zA-Z0-9-\.]+$"/>
                                </prop>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="processors" required="True">
                          <item type="object">
                            <prop type="object" name="batch">
                              <prop type="integer32" name="batchSize">
                                <default value="8192"/>
                                <format maximum="100000" minimum="10"/>
                              </prop>
                              <prop type="integer32" name="timeout">
                                <default value="200"/>
                                <format maximum="60000" minimum="10"/>
                              </prop>
                            </prop>
                            <prop type="string" name="name" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="string" name="type" required="True">
                              <enum>
                                <item value="&quot;Batch&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="receivers" required="True">
                          <item type="object">
                            <prop type="string" name="name" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="object" name="otlp">
                              <prop type="string" name="endpoint" required="True">
                                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                              </prop>
                            </prop>
                            <prop type="object" name="syslog">
                              <prop type="string" name="endpoint" required="True">
                                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                              </prop>
                              <prop type="string" name="protocol">
                                <default value="&quot;rfc3164&quot;"/>
                                <enum>
                                  <item value="&quot;rfc3164&quot;"/>
                                  <item value="&quot;rfc5424&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="type" required="True">
                              <enum>
                                <item value="&quot;Ama&quot;"/>
                                <item value="&quot;OTLP&quot;"/>
                                <item value="&quot;PipelineGroup&quot;"/>
                                <item value="&quot;Syslog&quot;"/>
                                <item value="&quot;UDP&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="udp">
                              <prop type="string" name="encoding">
                                <default value="&quot;nop&quot;"/>
                                <enum>
                                  <item value="&quot;ascii&quot;"/>
                                  <item value="&quot;big5&quot;"/>
                                  <item value="&quot;nop&quot;"/>
                                  <item value="&quot;utf-16be&quot;"/>
                                  <item value="&quot;utf-16le&quot;"/>
                                  <item value="&quot;utf-8&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="endpoint" required="True">
                                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                              </prop>
                              <prop type="integer32" name="readQueueLength">
                                <default value="1000"/>
                                <format maximum="100000" minimum="100"/>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="replicas"/>
                        <prop type="object" name="service" required="True">
                          <prop type="object" name="persistence">
                            <prop type="string" name="persistentVolumeName" required="True"/>
                          </prop>
                          <prop type="array<object>" name="pipelines" required="True">
                            <item type="object">
                              <prop type="array<string>" name="exporters" required="True">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="name" required="True">
                                <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                              </prop>
                              <prop type="array<string>" name="processors">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="receivers" required="True">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="type" required="True">
                                <enum>
                                  <item value="&quot;logs&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_PipelineGroups_ListBySubscription" operationId="PipelineGroups_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Monitor/pipelineGroups">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop type="object" name="extendedLocation">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True">
                          <enum>
                            <item value="&quot;CustomLocation&quot;"/>
                            <item value="&quot;EdgeZone&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Monitor/pipelineGroups/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="array<object>" name="exporters" required="True">
                          <item type="object">
                            <prop type="object" name="azureMonitorWorkspaceLogs">
                              <prop type="object" name="api" required="True">
                                <prop type="string" name="dataCollectionEndpointUrl" required="True">
                                  <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                                </prop>
                                <prop type="string" name="dataCollectionRule" required="True">
                                  <format pattern="^(?!-)[a-zA-Z0-9.-]{1,1000}[^-]$"/>
                                </prop>
                                <prop type="object" name="schema" required="True">
                                  <prop type="array<object>" name="recordMap" required="True">
                                    <item type="object">
                                      <prop type="string" name="from" required="True"/>
                                      <prop type="string" name="to" required="True"/>
                                    </item>
                                  </prop>
                                  <prop type="array<object>" name="resourceMap">
                                    <item type="object">
                                      <prop type="string" name="from" required="True"/>
                                      <prop type="string" name="to" required="True"/>
                                    </item>
                                  </prop>
                                  <prop type="array<object>" name="scopeMap">
                                    <item type="object">
                                      <prop type="string" name="from" required="True"/>
                                      <prop type="string" name="to" required="True"/>
                                    </item>
                                  </prop>
                                </prop>
                                <prop type="string" name="stream" required="True">
                                  <format pattern="^(?!-)[a-zA-Z0-9._-]{1,1000}[^-]$"/>
                                </prop>
                              </prop>
                              <prop type="object" name="cache">
                                <prop type="integer32" name="maxStorageUsage"/>
                                <prop type="integer32" name="retentionPeriod"/>
                              </prop>
                              <prop type="object" name="concurrency">
                                <prop type="integer32" name="batchQueueSize">
                                  <default value="100"/>
                                </prop>
                                <prop type="integer32" name="workerCount">
                                  <default value="4"/>
                                </prop>
                              </prop>
                            </prop>
                            <prop type="string" name="name" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="object" name="tcp">
                              <prop type="string" name="url" required="True">
                                <format pattern="^(https?)://[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*$"/>
                              </prop>
                            </prop>
                            <prop type="string" name="type" required="True">
                              <enum>
                                <item value="&quot;AzureMonitorWorkspaceLogs&quot;"/>
                                <item value="&quot;PipelineGroup&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="networkingConfigurations">
                          <item type="object">
                            <prop type="string" name="externalNetworkingMode" required="True">
                              <enum>
                                <item value="&quot;LoadBalancerOnly&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="host">
                              <format pattern="^[a-zA-Z0-9-\.]+$"/>
                            </prop>
                            <prop type="array<object>" name="routes" required="True">
                              <item type="object">
                                <prop type="string" name="path">
                                  <format pattern="^[a-zA-Z0-9-/\.]+$"/>
                                </prop>
                                <prop type="integer32" name="port">
                                  <format maximum="65535" minimum="1"/>
                                </prop>
                                <prop type="string" name="receiver" required="True">
                                  <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                                </prop>
                                <prop type="string" name="subdomain">
                                  <format pattern="^[a-zA-Z0-9-\.]+$"/>
                                </prop>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="processors" required="True">
                          <item type="object">
                            <prop type="object" name="batch">
                              <prop type="integer32" name="batchSize">
                                <default value="8192"/>
                                <format maximum="100000" minimum="10"/>
                              </prop>
                              <prop type="integer32" name="timeout">
                                <default value="200"/>
                                <format maximum="60000" minimum="10"/>
                              </prop>
                            </prop>
                            <prop type="string" name="name" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="string" name="type" required="True">
                              <enum>
                                <item value="&quot;Batch&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Creating&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="receivers" required="True">
                          <item type="object">
                            <prop type="string" name="name" required="True">
                              <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                            </prop>
                            <prop type="object" name="otlp">
                              <prop type="string" name="endpoint" required="True">
                                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                              </prop>
                            </prop>
                            <prop type="object" name="syslog">
                              <prop type="string" name="endpoint" required="True">
                                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                              </prop>
                              <prop type="string" name="protocol">
                                <default value="&quot;rfc3164&quot;"/>
                                <enum>
                                  <item value="&quot;rfc3164&quot;"/>
                                  <item value="&quot;rfc5424&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="type" required="True">
                              <enum>
                                <item value="&quot;Ama&quot;"/>
                                <item value="&quot;OTLP&quot;"/>
                                <item value="&quot;PipelineGroup&quot;"/>
                                <item value="&quot;Syslog&quot;"/>
                                <item value="&quot;UDP&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="udp">
                              <prop type="string" name="encoding">
                                <default value="&quot;nop&quot;"/>
                                <enum>
                                  <item value="&quot;ascii&quot;"/>
                                  <item value="&quot;big5&quot;"/>
                                  <item value="&quot;nop&quot;"/>
                                  <item value="&quot;utf-16be&quot;"/>
                                  <item value="&quot;utf-16le&quot;"/>
                                  <item value="&quot;utf-8&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="endpoint" required="True">
                                <format pattern="^[a-zA-Z0-9-\.]+:[0-9]+$"/>
                              </prop>
                              <prop type="integer32" name="readQueueLength">
                                <default value="1000"/>
                                <format maximum="100000" minimum="100"/>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="integer32" name="replicas"/>
                        <prop type="object" name="service" required="True">
                          <prop type="object" name="persistence">
                            <prop type="string" name="persistentVolumeName" required="True"/>
                          </prop>
                          <prop type="array<object>" name="pipelines" required="True">
                            <item type="object">
                              <prop type="array<string>" name="exporters" required="True">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="name" required="True">
                                <format pattern="^(?!-)[a-zA-Z0-9-]{3,32}[^-]$"/>
                              </prop>
                              <prop type="array<string>" name="processors">
                                <item type="string"/>
                              </prop>
                              <prop type="array<string>" name="receivers" required="True">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="type" required="True">
                                <enum>
                                  <item value="&quot;logs&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
