{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}/consumergroups/{}", "version": "2022-01-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9L2NvbnN1bWVyZ3JvdXBzL3tjb25zdW1lckdyb3VwTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "eventhubs eventhub consumer-group", "commands": [{"name": "show", "version": "2022-01-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}/consumergroups/{}", "version": "2022-01-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9L2NvbnN1bWVyZ3JvdXBzL3tjb25zdW1lckdyb3VwTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.consumerGroupName", "options": ["n", "name", "consumer-group-name"], "required": true, "idPart": "child_name_2", "help": {"short": "The consumer group name"}, "format": {"maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.eventHubName", "options": ["eventhub-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The Event Hub name"}, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "The Namespace name"}, "format": {"maxLength": 50, "minLength": 6}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "ConsumerGroups_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "consumerGroupName", "arg": "$Path.consumerGroupName", "required": true, "format": {"maxLength": 50, "minLength": 1}}, {"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/eventhubs/{}/consumergroups/{}"}}, {"readOnly": true, "type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "dateTime", "name": "createdAt"}, {"readOnly": true, "type": "dateTime", "name": "updatedAt"}, {"type": "string", "name": "userMetadata"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2022-01-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}/consumergroups/{}", "version": "2022-01-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9L2NvbnN1bWVyZ3JvdXBzL3tjb25zdW1lckdyb3VwTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.consumerGroupName", "options": ["n", "name", "consumer-group-name"], "required": true, "idPart": "child_name_2", "help": {"short": "The consumer group name"}, "format": {"maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.eventHubName", "options": ["eventhub-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The Event Hub name"}, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "The Namespace name"}, "format": {"maxLength": 50, "minLength": 6}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "ConsumerGroups_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "consumerGroupName", "arg": "$Path.consumerGroupName", "required": true, "format": {"maxLength": 50, "minLength": 1}}, {"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "confirmation": ""}, {"name": "create", "version": "2022-01-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}/consumergroups/{}", "version": "2022-01-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9L2NvbnN1bWVyZ3JvdXBzL3tjb25zdW1lckdyb3VwTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.consumerGroupName", "options": ["n", "name", "consumer-group-name"], "required": true, "idPart": "child_name_2", "help": {"short": "The consumer group name"}, "format": {"maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.eventHubName", "options": ["eventhub-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The Event Hub name"}, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "The Namespace name"}, "format": {"maxLength": 50, "minLength": 6}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Properties", "args": [{"type": "string", "var": "$parameters.properties.userMetadata", "options": ["user-metadata"], "group": "Properties", "help": {"short": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."}}]}], "operations": [{"operationId": "ConsumerGroups_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "consumerGroupName", "arg": "$Path.consumerGroupName", "required": true, "format": {"maxLength": 50, "minLength": 1}}, {"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "userMetadata", "arg": "$parameters.properties.userMetadata"}], "clientFlatten": true}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/eventhubs/{}/consumergroups/{}"}}, {"readOnly": true, "type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "dateTime", "name": "createdAt"}, {"readOnly": true, "type": "dateTime", "name": "updatedAt"}, {"type": "string", "name": "userMetadata"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2022-01-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.eventhub/namespaces/{}/eventhubs/{}/consumergroups/{}", "version": "2022-01-01-preview", "swagger": "mgmt-plane/eventhub/ResourceProviders/Microsoft.EventHub/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRXZlbnRIdWIvbmFtZXNwYWNlcy97bmFtZXNwYWNlTmFtZX0vZXZlbnRodWJzL3tldmVudEh1Yk5hbWV9L2NvbnN1bWVyZ3JvdXBzL3tjb25zdW1lckdyb3VwTmFtZX0=/V/MjAyMi0wMS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.consumerGroupName", "options": ["n", "name", "consumer-group-name"], "required": true, "idPart": "child_name_2", "help": {"short": "The consumer group name"}, "format": {"maxLength": 50, "minLength": 1}}, {"type": "string", "var": "$Path.eventHubName", "options": ["eventhub-name"], "required": true, "group": "", "idPart": "child_name_1", "help": {"short": "The Event Hub name"}, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "var": "$Path.namespaceName", "options": ["namespace-name"], "required": true, "idPart": "name", "help": {"short": "The Namespace name"}, "format": {"maxLength": 50, "minLength": 6}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "Properties", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.userMetadata", "options": ["user-metadata"], "group": "Properties", "help": {"short": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored."}}]}], "operations": [{"operationId": "ConsumerGroups_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "consumerGroupName", "arg": "$Path.consumerGroupName", "required": true, "format": {"maxLength": 50, "minLength": 1}}, {"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01-preview"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.EventHub/namespaces/{}/eventhubs/{}/consumergroups/{}"}}, {"readOnly": true, "type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"readOnly": true, "type": "dateTime", "name": "createdAt"}, {"readOnly": true, "type": "dateTime", "name": "updatedAt"}, {"type": "string", "name": "userMetadata"}], "clientFlatten": true}, {"readOnly": true, "type": "object", "name": "systemData", "props": [{"type": "dateTime", "name": "createdAt"}, {"type": "string", "name": "createdBy"}, {"type": "string", "name": "createdByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}, {"type": "dateTime", "name": "lastModifiedAt"}, {"type": "string", "name": "lastModifiedBy"}, {"type": "string", "name": "lastModifiedByType", "enum": {"items": [{"value": "Application"}, {"value": "Key"}, {"value": "ManagedIdentity"}, {"value": "User"}]}}]}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "ConsumerGroup_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "properties", "props": [{"type": "string", "name": "userMetadata", "arg": "$parameters.properties.userMetadata"}], "clientFlatten": true}], "clientFlatten": true}}}}, {"operationId": "ConsumerGroups_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "consumerGroupName", "arg": "$Path.consumerGroupName", "required": true, "format": {"maxLength": 50, "minLength": 1}}, {"type": "string", "name": "eventHubName", "arg": "$Path.eventHubName", "required": true, "format": {"maxLength": 256, "minLength": 1}}, {"type": "string", "name": "namespaceName", "arg": "$Path.namespaceName", "required": true, "format": {"maxLength": 50, "minLength": 6}}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true, "format": {"maxLength": 90, "minLength": 1}}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2022-01-01-preview"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "@ConsumerGroup_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@MgmtErrorFormat"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}