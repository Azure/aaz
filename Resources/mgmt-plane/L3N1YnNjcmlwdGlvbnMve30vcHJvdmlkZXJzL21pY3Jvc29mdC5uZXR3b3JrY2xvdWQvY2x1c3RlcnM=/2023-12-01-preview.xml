<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.networkcloud/clusters" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldHdvcmtDbG91ZC9jbHVzdGVycw==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/clusters" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2NsdXN0ZXJz/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
  <commandGroup name="networkcloud cluster">
    <command name="list" version="2023-12-01-preview" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.networkcloud/clusters" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0Lk5ldHdvcmtDbG91ZC9jbHVzdGVycw==/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.networkcloud/clusters" version="2023-12-01-preview" swagger="mgmt-plane/networkcloud/ResourceProviders/Microsoft.NetworkCloud/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29ya0Nsb3VkL2NsdXN0ZXJz/V/MjAyMy0xMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Clusters_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Clusters_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Clusters_ListByResourceGroup" operationId="Clusters_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="object" name="extendedLocation" required="True" cls="ExtendedLocation_read">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="type" required="True"/>
                      </prop>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/clusters/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="object" name="aggregatorOrSingleRackDefinition" required="True" cls="RackDefinition_read">
                          <prop type="string" name="availabilityZone">
                            <format pattern="^[a-zA-Z0-9]{1,10}$"/>
                          </prop>
                          <prop type="array<object>" name="bareMetalMachineConfigurationData">
                            <item type="object">
                              <prop readOnly="True" type="string" name="bmcConnectionString"/>
                              <prop type="object" name="bmcCredentials" required="True" cls="AdministrativeCredentials_read">
                                <prop type="string" name="password" required="True" secret="True">
                                  <format minLength="1"/>
                                </prop>
                                <prop type="string" name="username" required="True">
                                  <format minLength="1"/>
                                </prop>
                              </prop>
                              <prop type="string" name="bmcMacAddress" required="True">
                                <format pattern="^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"/>
                              </prop>
                              <prop type="string" name="bootMacAddress" required="True">
                                <format pattern="^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$"/>
                              </prop>
                              <prop type="string" name="machineDetails">
                                <format maxLength="256"/>
                              </prop>
                              <prop type="string" name="machineName">
                                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9]{0,62}[a-zA-Z0-9])$"/>
                              </prop>
                              <prop type="integer64" name="rackSlot" required="True">
                                <format maximum="256" minimum="1"/>
                              </prop>
                              <prop type="string" name="serialNumber" required="True">
                                <format maxLength="64"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="ResourceId" name="networkRackId" required="True"/>
                          <prop type="string" name="rackLocation">
                            <format maxLength="256"/>
                          </prop>
                          <prop type="string" name="rackSerialNumber" required="True">
                            <format maxLength="64" minLength="1"/>
                          </prop>
                          <prop type="ResourceId" name="rackSkuId" required="True"/>
                          <prop type="array<object>" name="storageApplianceConfigurationData">
                            <item type="object">
                              <prop type="@AdministrativeCredentials_read" name="adminCredentials" required="True"/>
                              <prop type="integer64" name="rackSlot" required="True">
                                <format maximum="256" minimum="1"/>
                              </prop>
                              <prop type="string" name="serialNumber" required="True"/>
                              <prop type="string" name="storageApplianceName">
                                <format pattern="^([a-zA-Z0-9][a-zA-Z0-9-_]{0,28}[a-zA-Z0-9])$"/>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                        <prop type="ResourceId" name="analyticsWorkspaceId"/>
                        <prop readOnly="True" type="array<object>" name="availableUpgradeVersions" identifiers="targetClusterVersion">
                          <item type="object">
                            <prop readOnly="True" type="string" name="controlImpact">
                              <enum>
                                <item value="&quot;False&quot;"/>
                                <item value="&quot;True&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="expectedDuration"/>
                            <prop readOnly="True" type="string" name="impactDescription"/>
                            <prop readOnly="True" type="string" name="supportExpiryDate"/>
                            <prop readOnly="True" type="string" name="targetClusterVersion"/>
                            <prop readOnly="True" type="string" name="workloadImpact">
                              <enum>
                                <item value="&quot;False&quot;"/>
                                <item value="&quot;True&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="clusterCapacity">
                          <prop type="integer64" name="availableApplianceStorageGB"/>
                          <prop type="integer64" name="availableCoreCount"/>
                          <prop type="integer64" name="availableHostStorageGB"/>
                          <prop type="integer64" name="availableMemoryGB"/>
                          <prop type="integer64" name="totalApplianceStorageGB"/>
                          <prop type="integer64" name="totalCoreCount"/>
                          <prop type="integer64" name="totalHostStorageGB"/>
                          <prop type="integer64" name="totalMemoryGB"/>
                        </prop>
                        <prop readOnly="True" type="string" name="clusterConnectionStatus">
                          <enum>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                            <item value="&quot;Timeout&quot;"/>
                            <item value="&quot;Undefined&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="@ExtendedLocation_read" name="clusterExtendedLocation"/>
                        <prop type="string" name="clusterLocation">
                          <format maxLength="256"/>
                        </prop>
                        <prop readOnly="True" type="string" name="clusterManagerConnectionStatus">
                          <enum>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Unreachable&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="ResourceId" name="clusterManagerId"/>
                        <prop type="object" name="clusterServicePrincipal">
                          <prop type="string" name="applicationId" required="True"/>
                          <prop type="string" name="password" required="True" secret="True"/>
                          <prop type="string" name="principalId" required="True"/>
                          <prop type="string" name="tenantId" required="True"/>
                        </prop>
                        <prop type="string" name="clusterType" required="True">
                          <enum>
                            <item value="&quot;MultiRack&quot;"/>
                            <item value="&quot;SingleRack&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="clusterVersion" required="True"/>
                        <prop type="object" name="computeDeploymentThreshold">
                          <prop type="string" name="grouping" required="True">
                            <enum>
                              <item value="&quot;PerCluster&quot;"/>
                              <item value="&quot;PerRack&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;CountSuccess&quot;"/>
                              <item value="&quot;PercentSuccess&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="value" required="True">
                            <format minimum="0"/>
                          </prop>
                        </prop>
                        <prop type="array<@RackDefinition_read>" name="computeRackDefinitions" identifiers="networkRackId">
                          <item type="@RackDefinition_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="detailedStatus">
                          <enum>
                            <item value="&quot;Degraded&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Deploying&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;PendingDeployment&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;UpdatePaused&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                        <prop readOnly="True" type="@ExtendedLocation_read" name="hybridAksExtendedLocation"/>
                        <prop type="object" name="managedResourceGroupConfiguration">
                          <prop type="string" name="location"/>
                          <prop type="string" name="name">
                            <format maxLength="75"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="integer64" name="manualActionCount"/>
                        <prop type="ResourceId" name="networkFabricId" required="True"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                            <item value="&quot;Validating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="runtimeProtectionConfiguration">
                          <prop type="string" name="enforcementLevel">
                            <default value="&quot;Disabled&quot;"/>
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;OnDemand&quot;"/>
                              <item value="&quot;Passive&quot;"/>
                              <item value="&quot;RealTime&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="secretArchive">
                          <prop type="ResourceId" name="keyVaultId" required="True"/>
                          <prop type="string" name="useKeyVault">
                            <default value="&quot;False&quot;"/>
                            <enum>
                              <item value="&quot;False&quot;"/>
                              <item value="&quot;True&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="supportExpiryDate"/>
                        <prop type="object" name="updateStrategy">
                          <prop type="integer64" name="maxUnavailable">
                            <format minimum="1"/>
                          </prop>
                          <prop type="string" name="strategyType" required="True">
                            <enum>
                              <item value="&quot;PauseAfterRack&quot;"/>
                              <item value="&quot;Rack&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="thresholdType" required="True">
                            <enum>
                              <item value="&quot;CountSuccess&quot;"/>
                              <item value="&quot;PercentSuccess&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="thresholdValue" required="True">
                            <format minimum="0"/>
                          </prop>
                          <prop type="integer64" name="waitTimeMinutes">
                            <default value="15"/>
                            <format maximum="60" minimum="0"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="workloadResourceIds">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Clusters_ListBySubscription" operationId="Clusters_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusters">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-12-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop type="@ExtendedLocation_read" name="extendedLocation" required="True"/>
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.NetworkCloud/clusters/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" required="True" clientFlatten="True">
                        <prop type="@RackDefinition_read" name="aggregatorOrSingleRackDefinition" required="True"/>
                        <prop type="ResourceId" name="analyticsWorkspaceId"/>
                        <prop readOnly="True" type="array<object>" name="availableUpgradeVersions" identifiers="targetClusterVersion">
                          <item type="object">
                            <prop readOnly="True" type="string" name="controlImpact">
                              <enum>
                                <item value="&quot;False&quot;"/>
                                <item value="&quot;True&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="string" name="expectedDuration"/>
                            <prop readOnly="True" type="string" name="impactDescription"/>
                            <prop readOnly="True" type="string" name="supportExpiryDate"/>
                            <prop readOnly="True" type="string" name="targetClusterVersion"/>
                            <prop readOnly="True" type="string" name="workloadImpact">
                              <enum>
                                <item value="&quot;False&quot;"/>
                                <item value="&quot;True&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="clusterCapacity">
                          <prop type="integer64" name="availableApplianceStorageGB"/>
                          <prop type="integer64" name="availableCoreCount"/>
                          <prop type="integer64" name="availableHostStorageGB"/>
                          <prop type="integer64" name="availableMemoryGB"/>
                          <prop type="integer64" name="totalApplianceStorageGB"/>
                          <prop type="integer64" name="totalCoreCount"/>
                          <prop type="integer64" name="totalHostStorageGB"/>
                          <prop type="integer64" name="totalMemoryGB"/>
                        </prop>
                        <prop readOnly="True" type="string" name="clusterConnectionStatus">
                          <enum>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                            <item value="&quot;Timeout&quot;"/>
                            <item value="&quot;Undefined&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="@ExtendedLocation_read" name="clusterExtendedLocation"/>
                        <prop type="string" name="clusterLocation">
                          <format maxLength="256"/>
                        </prop>
                        <prop readOnly="True" type="string" name="clusterManagerConnectionStatus">
                          <enum>
                            <item value="&quot;Connected&quot;"/>
                            <item value="&quot;Unreachable&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="ResourceId" name="clusterManagerId"/>
                        <prop type="object" name="clusterServicePrincipal">
                          <prop type="string" name="applicationId" required="True"/>
                          <prop type="string" name="password" required="True" secret="True"/>
                          <prop type="string" name="principalId" required="True"/>
                          <prop type="string" name="tenantId" required="True"/>
                        </prop>
                        <prop type="string" name="clusterType" required="True">
                          <enum>
                            <item value="&quot;MultiRack&quot;"/>
                            <item value="&quot;SingleRack&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="clusterVersion" required="True"/>
                        <prop type="object" name="computeDeploymentThreshold">
                          <prop type="string" name="grouping" required="True">
                            <enum>
                              <item value="&quot;PerCluster&quot;"/>
                              <item value="&quot;PerRack&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;CountSuccess&quot;"/>
                              <item value="&quot;PercentSuccess&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="value" required="True">
                            <format minimum="0"/>
                          </prop>
                        </prop>
                        <prop type="array<@RackDefinition_read>" name="computeRackDefinitions" identifiers="networkRackId">
                          <item type="@RackDefinition_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="detailedStatus">
                          <enum>
                            <item value="&quot;Degraded&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Deploying&quot;"/>
                            <item value="&quot;Disconnected&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;PendingDeployment&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;UpdatePaused&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="detailedStatusMessage"/>
                        <prop readOnly="True" type="@ExtendedLocation_read" name="hybridAksExtendedLocation"/>
                        <prop type="object" name="managedResourceGroupConfiguration">
                          <prop type="string" name="location"/>
                          <prop type="string" name="name">
                            <format maxLength="75"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="integer64" name="manualActionCount"/>
                        <prop type="ResourceId" name="networkFabricId" required="True"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                            <item value="&quot;Updating&quot;"/>
                            <item value="&quot;Validating&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="runtimeProtectionConfiguration">
                          <prop type="string" name="enforcementLevel">
                            <default value="&quot;Disabled&quot;"/>
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;OnDemand&quot;"/>
                              <item value="&quot;Passive&quot;"/>
                              <item value="&quot;RealTime&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="object" name="secretArchive">
                          <prop type="ResourceId" name="keyVaultId" required="True"/>
                          <prop type="string" name="useKeyVault">
                            <default value="&quot;False&quot;"/>
                            <enum>
                              <item value="&quot;False&quot;"/>
                              <item value="&quot;True&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="supportExpiryDate"/>
                        <prop type="object" name="updateStrategy">
                          <prop type="integer64" name="maxUnavailable">
                            <format minimum="1"/>
                          </prop>
                          <prop type="string" name="strategyType" required="True">
                            <enum>
                              <item value="&quot;PauseAfterRack&quot;"/>
                              <item value="&quot;Rack&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="thresholdType" required="True">
                            <enum>
                              <item value="&quot;CountSuccess&quot;"/>
                              <item value="&quot;PercentSuccess&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer64" name="thresholdValue" required="True">
                            <format minimum="0"/>
                          </prop>
                          <prop type="integer64" name="waitTimeMinutes">
                            <default value="15"/>
                            <format maximum="60" minimum="0"/>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="array<string>" name="workloadResourceIds">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
