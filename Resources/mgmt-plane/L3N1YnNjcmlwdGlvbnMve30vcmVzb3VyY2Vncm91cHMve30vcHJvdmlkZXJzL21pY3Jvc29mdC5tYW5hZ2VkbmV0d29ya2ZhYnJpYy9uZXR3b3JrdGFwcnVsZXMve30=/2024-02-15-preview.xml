<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networktaprules/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya1RhcFJ1bGVzL3tuZXR3b3JrVGFwUnVsZU5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
  <commandGroup name="networkfabric taprule">
    <command name="show" version="2024-02-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networktaprules/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya1RhcFJ1bGVzL3tuZXR3b3JrVGFwUnVsZU5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkTapRuleName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Tap Rule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkTapRules_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}">
          <request method="get">
            <path>
              <param type="string" name="networkTapRuleName" arg="$Path.networkTapRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="configurationType" required="True">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastSyncedTime"/>
                    <prop type="array<object>" name="matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="ResourceId" name="destinationId"/>
                            <prop type="string" name="isTimestampEnabled">
                              <enum>
                                <item value="&quot;False&quot;"/>
                                <item value="&quot;True&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="matchConfigurationName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="truncate">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Goto&quot;"/>
                                <item value="&quot;Log&quot;"/>
                                <item value="&quot;Mirror&quot;"/>
                                <item value="&quot;Redirect&quot;"/>
                                <item value="&quot;Replicate&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions">
                          <item type="object">
                            <prop type="string" name="encapsulationType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;GTPv1&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="ipCondition">
                              <prop type="array<string>" name="ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="object" name="portCondition">
                              <prop type="string" name="layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="networkTapId"/>
                    <prop type="integer32" name="pollingIntervalInSeconds">
                      <enum>
                        <item value="30"/>
                        <item value="60"/>
                        <item value="90"/>
                        <item value="120"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="tapRulesUrl">
                      <format minLength="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-02-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networktaprules/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya1RhcFJ1bGVzL3tuZXR3b3JrVGFwUnVsZU5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkTapRuleName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Tap Rule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkTapRules_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}">
          <request method="delete">
            <path>
              <param type="string" name="networkTapRuleName" arg="$Path.networkTapRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-02-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networktaprules/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya1RhcFJ1bGVzL3tuZXR3b3JrVGFwUnVsZU5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkTapRuleName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Tap Rule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="ResourceLocation" var="$body.location" options="location l" required="True" group="Body">
          <help short="Location of Azure region"/>
        </arg>
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.annotation" options="annotation" group="Properties">
          <help short="Description for underlying resource."/>
        </arg>
        <arg type="string" var="$body.properties.configurationType" options="configuration-type" required="True" group="Properties">
          <help short="Input method to configure Network Tap Rule. Example: File."/>
          <enum>
            <item name="File" value="&quot;File&quot;"/>
            <item name="Inline" value="&quot;Inline&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations" options="dynamic-match-configurations" group="Properties">
          <help short="List of dynamic match configurations."/>
          <item type="object">
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].ipGroups" options="ip-groups">
              <help short="List of IP Groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipAddressType" options="ip-address-type" group="">
                  <help short="IP Address type. Example: IPv4."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="IPv4" value="&quot;IPv4&quot;"/>
                    <item name="IPv6" value="&quot;IPv6&quot;"/>
                  </enum>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipPrefixes" options="ip-prefixes">
                  <help short="List of IP Prefixes."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].name" options="name">
                  <help short="IP Group name."/>
                  <format minLength="1"/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].portGroups" options="port-groups">
              <help short="List of the port group."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].portGroups[].name" options="name">
                  <help short="The name of the port group."/>
                  <format minLength="1"/>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].portGroups[].ports" options="ports">
                  <help short="List of the ports that needs to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].vlanGroups" options="vlan-groups">
              <help short="List of vlan groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].vlanGroups[].name" options="name">
                  <help short="Vlan group name."/>
                  <format minLength="1"/>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].vlanGroups[].vlans" options="vlans">
                  <help short="List of vlans."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$body.properties.matchConfigurations" options="match-configurations" group="Properties">
          <help short="List of match configurations."/>
          <item type="object">
            <arg type="array<object>" var="$body.properties.matchConfigurations[].actions" options="actions">
              <help short="List of actions that need to be performed for the matched conditions."/>
              <item type="object">
                <arg type="ResourceId" var="$body.properties.matchConfigurations[].actions[].destinationId" options="destination-id">
                  <help short="Destination Id. The ARM resource Id may be either Network To Network Interconnect or NeighborGroup."/>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].isTimestampEnabled" options="is-timestamp-enabled" group="">
                  <help short="The parameter to enable or disable the timestamp. Example: False."/>
                  <enum>
                    <item name="False" value="&quot;False&quot;"/>
                    <item name="True" value="&quot;True&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].matchConfigurationName" options="match-configuration-name">
                  <help short="The name of the match configuration. This is used when Goto type is provided. If Goto type is selected and no match configuration name is provided. It goes to next configuration."/>
                  <format minLength="1"/>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].truncate" options="truncate">
                  <help short="Truncate. 0 indicates do not truncate."/>
                  <format minLength="1"/>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].type" options="type" group="">
                  <help short="Type of actions that can be performed. Example: Log."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="Count" value="&quot;Count&quot;"/>
                    <item name="Drop" value="&quot;Drop&quot;"/>
                    <item name="Goto" value="&quot;Goto&quot;"/>
                    <item name="Log" value="&quot;Log&quot;"/>
                    <item name="Mirror" value="&quot;Mirror&quot;"/>
                    <item name="Redirect" value="&quot;Redirect&quot;"/>
                    <item name="Replicate" value="&quot;Replicate&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$body.properties.matchConfigurations[].ipAddressType" options="ip-address-type" group="">
              <help short="Type of IP Address. Example: IPv4."/>
              <format minLength="1"/>
              <enum>
                <item name="IPv4" value="&quot;IPv4&quot;"/>
                <item name="IPv6" value="&quot;IPv6&quot;"/>
              </enum>
            </arg>
            <arg type="array<object>" var="$body.properties.matchConfigurations[].matchConditions" options="match-conditions">
              <help short="List of the match conditions."/>
              <item type="object">
                <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].encapsulationType" options="encapsulation-type" group="">
                  <help short="Encapsulation Type that needs to be matched. Example: None."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="GTPv1" value="&quot;GTPv1&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                  </enum>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition" options="ip-condition" group="">
                  <help short="IP conditions that need to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipGroupNames" options="ip-group-names">
                    <help short="The List of IP Group Names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipPrefixValues" options="ip-prefix-values">
                    <help short="The list of IP Prefixes."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.prefixType" options="prefix-type" group="">
                    <help short="IP Prefix Type. Example: SourcePort."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="LongestPrefix" value="&quot;LongestPrefix&quot;"/>
                      <item name="Prefix" value="&quot;Prefix&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.type" options="type" group="">
                    <help short="IP Address type. Example: DestinationIP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="DestinationIP" value="&quot;DestinationIP&quot;"/>
                      <item name="SourceIP" value="&quot;SourceIP&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].portCondition" options="port-condition" group="">
                  <help short="Port conditions that need to be matched."/>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.layer4Protocol" options="layer4-protocol" required="True" group="">
                    <help short="Layer4 protocol type that needs to be matched. Example: TCP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="TCP" value="&quot;TCP&quot;"/>
                      <item name="UDP" value="&quot;UDP&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.portGroupNames" options="port-group-names" group="">
                    <help short="List of the port Group Names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.portType" options="port-type" group="">
                    <help short="Port type that needs to be matched. Example: SourcePort."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="DestinationPort" value="&quot;DestinationPort&quot;"/>
                      <item name="SourcePort" value="&quot;SourcePort&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.ports" options="ports">
                    <help short="List of the Ports that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].protocolTypes" options="protocol-types">
                  <help short="List of the protocols that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition" options="vlan-match-condition" group="">
                  <help short="Vlan match conditions that need to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.innerVlans" options="inner-vlans" group="">
                    <help short="List of inner vlans that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlanGroupNames" options="vlan-group-names" group="">
                    <help short="List of vlan group names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlans" options="vlans" group="">
                    <help short="List of vlans that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$body.properties.matchConfigurations[].matchConfigurationName" options="match-configuration-name">
              <help short="The name of the match configuration."/>
              <format minLength="1"/>
            </arg>
            <arg type="integer64" var="$body.properties.matchConfigurations[].sequenceNumber" options="sequence-number" group="">
              <help short="Sequence Number of the match configuration."/>
              <format maximum="4294967295" minimum="1"/>
            </arg>
          </item>
        </arg>
        <arg type="integer32" var="$body.properties.pollingIntervalInSeconds" options="polling-interval-in-seconds" group="Properties">
          <help short="Polling interval in seconds. Default value is 30. Example: 60."/>
          <enum>
            <item name="120" value="120"/>
            <item name="30" value="30"/>
            <item name="60" value="60"/>
            <item name="90" value="90"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.tapRulesUrl" options="tap-rules-url" group="Properties">
          <help short="Network Tap Rules file URL."/>
          <format minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkTapRules_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}">
          <request method="put">
            <path>
              <param type="string" name="networkTapRuleName" arg="$Path.networkTapRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$body.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="annotation" arg="$body.properties.annotation"/>
                    <prop type="string" name="configurationType" arg="$body.properties.configurationType" required="True">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations" arg="$body.properties.dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups" arg="$body.properties.dynamicMatchConfigurations[].ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups" arg="$body.properties.dynamicMatchConfigurations[].portGroups">
                          <item type="object">
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].portGroups[].name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports" arg="$body.properties.dynamicMatchConfigurations[].portGroups[].ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups">
                          <item type="object">
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups[].name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups[].vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="matchConfigurations" arg="$body.properties.matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions" arg="$body.properties.matchConfigurations[].actions">
                          <item type="object">
                            <prop type="ResourceId" name="destinationId" arg="$body.properties.matchConfigurations[].actions[].destinationId"/>
                            <prop type="string" name="isTimestampEnabled" arg="$body.properties.matchConfigurations[].actions[].isTimestampEnabled">
                              <enum>
                                <item value="&quot;False&quot;"/>
                                <item value="&quot;True&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="matchConfigurationName" arg="$body.properties.matchConfigurations[].actions[].matchConfigurationName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="truncate" arg="$body.properties.matchConfigurations[].actions[].truncate">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type" arg="$body.properties.matchConfigurations[].actions[].type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Goto&quot;"/>
                                <item value="&quot;Log&quot;"/>
                                <item value="&quot;Mirror&quot;"/>
                                <item value="&quot;Redirect&quot;"/>
                                <item value="&quot;Replicate&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType" arg="$body.properties.matchConfigurations[].ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions" arg="$body.properties.matchConfigurations[].matchConditions">
                          <item type="object">
                            <prop type="string" name="encapsulationType" arg="$body.properties.matchConfigurations[].matchConditions[].encapsulationType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;GTPv1&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="ipCondition" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition">
                              <prop type="array<string>" name="ipGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="object" name="portCondition" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition">
                              <prop type="string" name="layer4Protocol" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes" arg="$body.properties.matchConfigurations[].matchConditions[].protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName" arg="$body.properties.matchConfigurations[].matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber" arg="$body.properties.matchConfigurations[].sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="integer32" name="pollingIntervalInSeconds" arg="$body.properties.pollingIntervalInSeconds">
                      <enum>
                        <item value="30"/>
                        <item value="60"/>
                        <item value="90"/>
                        <item value="120"/>
                      </enum>
                    </prop>
                    <prop type="string" name="tapRulesUrl" arg="$body.properties.tapRulesUrl">
                      <format minLength="1"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="configurationType" required="True">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastSyncedTime"/>
                    <prop type="array<object>" name="matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="ResourceId" name="destinationId"/>
                            <prop type="string" name="isTimestampEnabled">
                              <enum>
                                <item value="&quot;False&quot;"/>
                                <item value="&quot;True&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="matchConfigurationName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="truncate">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Goto&quot;"/>
                                <item value="&quot;Log&quot;"/>
                                <item value="&quot;Mirror&quot;"/>
                                <item value="&quot;Redirect&quot;"/>
                                <item value="&quot;Replicate&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions">
                          <item type="object">
                            <prop type="string" name="encapsulationType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;GTPv1&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="ipCondition">
                              <prop type="array<string>" name="ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="object" name="portCondition">
                              <prop type="string" name="layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="networkTapId"/>
                    <prop type="integer32" name="pollingIntervalInSeconds">
                      <enum>
                        <item value="30"/>
                        <item value="60"/>
                        <item value="90"/>
                        <item value="120"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="tapRulesUrl">
                      <format minLength="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-02-15-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networktaprules/{}" version="2024-02-15-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya1RhcFJ1bGVzL3tuZXR3b3JrVGFwUnVsZU5hbWV9/V/MjAyNC0wMi0xNS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkTapRuleName" options="resource-name" required="True" group="" idPart="name">
          <help short="Name of the Network Tap Rule."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Body">
        <arg type="object" var="$body.tags" options="tags" group="Body">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.annotation" options="annotation" group="Properties">
          <help short="Description for underlying resource."/>
        </arg>
        <arg type="string" var="$body.properties.configurationType" options="configuration-type" group="Properties">
          <help short="Input method to configure Network Tap Rule. Example: File."/>
          <enum>
            <item name="File" value="&quot;File&quot;"/>
            <item name="Inline" value="&quot;Inline&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations" options="dynamic-match-configurations" group="Properties">
          <help short="List of dynamic match configurations."/>
          <item type="object">
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].ipGroups" options="ip-groups">
              <help short="List of IP Groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipAddressType" options="ip-address-type" group="">
                  <help short="IP Address type. Example: IPv4."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="IPv4" value="&quot;IPv4&quot;"/>
                    <item name="IPv6" value="&quot;IPv6&quot;"/>
                  </enum>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipPrefixes" options="ip-prefixes">
                  <help short="List of IP Prefixes."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].ipGroups[].name" options="name">
                  <help short="IP Group name."/>
                  <format minLength="1"/>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].portGroups" options="port-groups">
              <help short="List of the port group."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].portGroups[].name" options="name">
                  <help short="The name of the port group."/>
                  <format minLength="1"/>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].portGroups[].ports" options="ports">
                  <help short="List of the ports that needs to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
              </item>
            </arg>
            <arg type="array<object>" var="$body.properties.dynamicMatchConfigurations[].vlanGroups" options="vlan-groups">
              <help short="List of vlan groups."/>
              <item type="object">
                <arg type="string" var="$body.properties.dynamicMatchConfigurations[].vlanGroups[].name" options="name">
                  <help short="Vlan group name."/>
                  <format minLength="1"/>
                </arg>
                <arg type="array<string>" var="$body.properties.dynamicMatchConfigurations[].vlanGroups[].vlans" options="vlans">
                  <help short="List of vlans."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$body.properties.matchConfigurations" options="match-configurations" group="Properties">
          <help short="List of match configurations."/>
          <item type="object">
            <arg type="array<object>" var="$body.properties.matchConfigurations[].actions" options="actions">
              <help short="List of actions that need to be performed for the matched conditions."/>
              <item type="object">
                <arg type="ResourceId" var="$body.properties.matchConfigurations[].actions[].destinationId" options="destination-id">
                  <help short="Destination Id. The ARM resource Id may be either Network To Network Interconnect or NeighborGroup."/>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].isTimestampEnabled" options="is-timestamp-enabled" group="">
                  <help short="The parameter to enable or disable the timestamp. Example: False."/>
                  <enum>
                    <item name="False" value="&quot;False&quot;"/>
                    <item name="True" value="&quot;True&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].matchConfigurationName" options="match-configuration-name">
                  <help short="The name of the match configuration. This is used when Goto type is provided. If Goto type is selected and no match configuration name is provided. It goes to next configuration."/>
                  <format minLength="1"/>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].truncate" options="truncate">
                  <help short="Truncate. 0 indicates do not truncate."/>
                  <format minLength="1"/>
                </arg>
                <arg type="string" var="$body.properties.matchConfigurations[].actions[].type" options="type" group="">
                  <help short="Type of actions that can be performed. Example: Log."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="Count" value="&quot;Count&quot;"/>
                    <item name="Drop" value="&quot;Drop&quot;"/>
                    <item name="Goto" value="&quot;Goto&quot;"/>
                    <item name="Log" value="&quot;Log&quot;"/>
                    <item name="Mirror" value="&quot;Mirror&quot;"/>
                    <item name="Redirect" value="&quot;Redirect&quot;"/>
                    <item name="Replicate" value="&quot;Replicate&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$body.properties.matchConfigurations[].ipAddressType" options="ip-address-type" group="">
              <help short="Type of IP Address. Example: IPv4."/>
              <format minLength="1"/>
              <enum>
                <item name="IPv4" value="&quot;IPv4&quot;"/>
                <item name="IPv6" value="&quot;IPv6&quot;"/>
              </enum>
            </arg>
            <arg type="array<object>" var="$body.properties.matchConfigurations[].matchConditions" options="match-conditions">
              <help short="List of the match conditions."/>
              <item type="object">
                <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].encapsulationType" options="encapsulation-type" group="">
                  <help short="Encapsulation Type that needs to be matched. Example: None."/>
                  <format minLength="1"/>
                  <enum>
                    <item name="GTPv1" value="&quot;GTPv1&quot;"/>
                    <item name="None" value="&quot;None&quot;"/>
                  </enum>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition" options="ip-condition" group="">
                  <help short="IP conditions that need to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipGroupNames" options="ip-group-names">
                    <help short="The List of IP Group Names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipPrefixValues" options="ip-prefix-values">
                    <help short="The list of IP Prefixes."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.prefixType" options="prefix-type" group="">
                    <help short="IP Prefix Type. Example: SourcePort."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="LongestPrefix" value="&quot;LongestPrefix&quot;"/>
                      <item name="Prefix" value="&quot;Prefix&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].ipCondition.type" options="type" group="">
                    <help short="IP Address type. Example: DestinationIP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="DestinationIP" value="&quot;DestinationIP&quot;"/>
                      <item name="SourceIP" value="&quot;SourceIP&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].portCondition" options="port-condition" group="">
                  <help short="Port conditions that need to be matched."/>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.layer4Protocol" options="layer4-protocol" required="True" group="">
                    <help short="Layer4 protocol type that needs to be matched. Example: TCP."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="TCP" value="&quot;TCP&quot;"/>
                      <item name="UDP" value="&quot;UDP&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.portGroupNames" options="port-group-names" group="">
                    <help short="List of the port Group Names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="string" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.portType" options="port-type" group="">
                    <help short="Port type that needs to be matched. Example: SourcePort."/>
                    <format minLength="1"/>
                    <enum>
                      <item name="DestinationPort" value="&quot;DestinationPort&quot;"/>
                      <item name="SourcePort" value="&quot;SourcePort&quot;"/>
                    </enum>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].portCondition.ports" options="ports">
                    <help short="List of the Ports that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                </arg>
                <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].protocolTypes" options="protocol-types">
                  <help short="List of the protocols that need to be matched."/>
                  <item type="string">
                    <format minLength="1"/>
                  </item>
                </arg>
                <arg type="object" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition" options="vlan-match-condition" group="">
                  <help short="Vlan match conditions that need to be matched."/>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.innerVlans" options="inner-vlans" group="">
                    <help short="List of inner vlans that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlanGroupNames" options="vlan-group-names" group="">
                    <help short="List of vlan group names that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                  <arg type="array<string>" var="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlans" options="vlans" group="">
                    <help short="List of vlans that need to be matched."/>
                    <item type="string">
                      <format minLength="1"/>
                    </item>
                  </arg>
                </arg>
              </item>
            </arg>
            <arg type="string" var="$body.properties.matchConfigurations[].matchConfigurationName" options="match-configuration-name">
              <help short="The name of the match configuration."/>
              <format minLength="1"/>
            </arg>
            <arg type="integer64" var="$body.properties.matchConfigurations[].sequenceNumber" options="sequence-number" group="">
              <help short="Sequence Number of the match configuration."/>
              <format maximum="4294967295" minimum="1"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$body.properties.tapRulesUrl" options="tap-rules-url" group="Properties">
          <help short="Network Tap Rules file URL."/>
          <format minLength="1"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkTapRules_Update">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{networkTapRuleName}">
          <request method="patch">
            <path>
              <param type="string" name="networkTapRuleName" arg="$Path.networkTapRuleName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-15-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="annotation" arg="$body.properties.annotation"/>
                    <prop type="string" name="configurationType" arg="$body.properties.configurationType">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations" arg="$body.properties.dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups" arg="$body.properties.dynamicMatchConfigurations[].ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].ipGroups[].name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups" arg="$body.properties.dynamicMatchConfigurations[].portGroups">
                          <item type="object">
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].portGroups[].name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports" arg="$body.properties.dynamicMatchConfigurations[].portGroups[].ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups">
                          <item type="object">
                            <prop type="string" name="name" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups[].name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans" arg="$body.properties.dynamicMatchConfigurations[].vlanGroups[].vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="array<object>" name="matchConfigurations" arg="$body.properties.matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions" arg="$body.properties.matchConfigurations[].actions">
                          <item type="object">
                            <prop type="ResourceId" name="destinationId" arg="$body.properties.matchConfigurations[].actions[].destinationId"/>
                            <prop type="string" name="isTimestampEnabled" arg="$body.properties.matchConfigurations[].actions[].isTimestampEnabled">
                              <enum>
                                <item value="&quot;False&quot;"/>
                                <item value="&quot;True&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="matchConfigurationName" arg="$body.properties.matchConfigurations[].actions[].matchConfigurationName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="truncate" arg="$body.properties.matchConfigurations[].actions[].truncate">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type" arg="$body.properties.matchConfigurations[].actions[].type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Goto&quot;"/>
                                <item value="&quot;Log&quot;"/>
                                <item value="&quot;Mirror&quot;"/>
                                <item value="&quot;Redirect&quot;"/>
                                <item value="&quot;Replicate&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType" arg="$body.properties.matchConfigurations[].ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions" arg="$body.properties.matchConfigurations[].matchConditions">
                          <item type="object">
                            <prop type="string" name="encapsulationType" arg="$body.properties.matchConfigurations[].matchConditions[].encapsulationType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;GTPv1&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="ipCondition" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition">
                              <prop type="array<string>" name="ipGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type" arg="$body.properties.matchConfigurations[].matchConditions[].ipCondition.type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="object" name="portCondition" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition">
                              <prop type="string" name="layer4Protocol" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports" arg="$body.properties.matchConfigurations[].matchConditions[].portCondition.ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes" arg="$body.properties.matchConfigurations[].matchConditions[].protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans" arg="$body.properties.matchConfigurations[].matchConditions[].vlanMatchCondition.vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName" arg="$body.properties.matchConfigurations[].matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber" arg="$body.properties.matchConfigurations[].sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="tapRulesUrl" arg="$body.properties.tapRulesUrl">
                      <format minLength="1"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$body.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkTapRules/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;MAT&quot;"/>
                        <item value="&quot;RMA&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="annotation"/>
                    <prop readOnly="True" type="string" name="configurationState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;DeferredControl&quot;"/>
                        <item value="&quot;Deprovisioned&quot;"/>
                        <item value="&quot;Deprovisioning&quot;"/>
                        <item value="&quot;ErrorDeprovisioning&quot;"/>
                        <item value="&quot;ErrorProvisioning&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;PendingCommit&quot;"/>
                        <item value="&quot;Provisioned&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Rejected&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="configurationType" required="True">
                      <enum>
                        <item value="&quot;File&quot;"/>
                        <item value="&quot;Inline&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="dynamicMatchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="ipGroups">
                          <item type="object">
                            <prop type="string" name="ipAddressType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;IPv4&quot;"/>
                                <item value="&quot;IPv6&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<string>" name="ipPrefixes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="portGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="ports">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="vlanGroups">
                          <item type="object">
                            <prop type="string" name="name">
                              <format minLength="1"/>
                            </prop>
                            <prop type="array<string>" name="vlans">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="lastSyncedTime"/>
                    <prop type="array<object>" name="matchConfigurations">
                      <item type="object">
                        <prop type="array<object>" name="actions">
                          <item type="object">
                            <prop type="ResourceId" name="destinationId"/>
                            <prop type="string" name="isTimestampEnabled">
                              <enum>
                                <item value="&quot;False&quot;"/>
                                <item value="&quot;True&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="matchConfigurationName">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="truncate">
                              <format minLength="1"/>
                            </prop>
                            <prop type="string" name="type">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Drop&quot;"/>
                                <item value="&quot;Goto&quot;"/>
                                <item value="&quot;Log&quot;"/>
                                <item value="&quot;Mirror&quot;"/>
                                <item value="&quot;Redirect&quot;"/>
                                <item value="&quot;Replicate&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="ipAddressType">
                          <format minLength="1"/>
                          <enum>
                            <item value="&quot;IPv4&quot;"/>
                            <item value="&quot;IPv6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="matchConditions">
                          <item type="object">
                            <prop type="string" name="encapsulationType">
                              <format minLength="1"/>
                              <enum>
                                <item value="&quot;GTPv1&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="ipCondition">
                              <prop type="array<string>" name="ipGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="ipPrefixValues">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="prefixType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;LongestPrefix&quot;"/>
                                  <item value="&quot;Prefix&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationIP&quot;"/>
                                  <item value="&quot;SourceIP&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="object" name="portCondition">
                              <prop type="string" name="layer4Protocol" required="True">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;TCP&quot;"/>
                                  <item value="&quot;UDP&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="portGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="string" name="portType">
                                <format minLength="1"/>
                                <enum>
                                  <item value="&quot;DestinationPort&quot;"/>
                                  <item value="&quot;SourcePort&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="ports">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                            <prop type="array<string>" name="protocolTypes">
                              <item type="string">
                                <format minLength="1"/>
                              </item>
                            </prop>
                            <prop type="object" name="vlanMatchCondition">
                              <prop type="array<string>" name="innerVlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlanGroupNames">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                              <prop type="array<string>" name="vlans">
                                <item type="string">
                                  <format minLength="1"/>
                                </item>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="matchConfigurationName">
                          <format minLength="1"/>
                        </prop>
                        <prop type="integer64" name="sequenceNumber">
                          <format maximum="4294967295" minimum="1"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="networkTapId"/>
                    <prop type="integer32" name="pollingIntervalInSeconds">
                      <enum>
                        <item value="30"/>
                        <item value="60"/>
                        <item value="90"/>
                        <item value="120"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="tapRulesUrl">
                      <format minLength="1"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
