<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/endpoints/{}/customdomains/{}/enablecustomhttps" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vZW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9L2N1c3RvbURvbWFpbnMve2N1c3RvbURvbWFpbk5hbWV9L2VuYWJsZUN1c3RvbUh0dHBz/V/MjAyNC0wMi0wMQ=="/>
  <commandGroup name="cdn custom-domain">
    <command name="enable-https" version="2024-02-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.cdn/profiles/{}/endpoints/{}/customdomains/{}/enablecustomhttps" version="2024-02-01" swagger="mgmt-plane/cdn/ResourceProviders/Microsoft.Cdn/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ2RuL3Byb2ZpbGVzL3twcm9maWxlTmFtZX0vZW5kcG9pbnRzL3tlbmRwb2ludE5hbWV9L2N1c3RvbURvbWFpbnMve2N1c3RvbURvbWFpbk5hbWV9L2VuYWJsZUN1c3RvbUh0dHBz/V/MjAyNC0wMi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.customDomainName" options="custom-domain-name name n" required="True" group="" idPart="child_name_2">
          <help short="Name of the custom domain within an endpoint."/>
        </arg>
        <arg type="string" var="$Path.endpointName" options="endpoint-name" required="True" idPart="child_name_1">
          <help short="Name of the endpoint under the profile which is unique globally."/>
        </arg>
        <arg type="string" var="$Path.profileName" options="profile-name" required="True" idPart="name">
          <help short="Name of the CDN profile which is unique within the resource group."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="CustomDomainHttpsParameters">
        <arg type="object" var="$customDomainHttpsParameters.AzureKeyVault" options="azure-key-vault" group="CustomDomainHttpsParameters">
          <arg type="object" var="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters" options="certificate-source-parameters" required="True">
            <help short="Defines the certificate source parameters using user's keyvault certificate for enabling SSL."/>
            <arg type="string" var="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.deleteRule" options="delete-rule" required="True">
              <help short="Describes the action that shall be taken when the certificate is removed from Key Vault."/>
              <enum>
                <item name="NoAction" value="&quot;NoAction&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.resourceGroupName" options="resource-group-name" required="True">
              <help short="Resource group of the user's Key Vault containing the SSL certificate"/>
            </arg>
            <arg type="string" var="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.secretName" options="secret-name" required="True">
              <help short="The name of Key Vault Secret (representing the full certificate PFX) in Key Vault."/>
            </arg>
            <arg type="string" var="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.secretVersion" options="secret-version">
              <help short="The version(GUID) of Key Vault Secret in Key Vault."/>
            </arg>
            <arg type="string" var="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.subscriptionId" options="subscription-id" required="True">
              <help short="Subscription Id of the user's Key Vault containing the SSL certificate"/>
            </arg>
            <arg type="string" var="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.typeName" options="type-name" required="True">
              <enum>
                <item name="KeyVaultCertificateSourceParameters" value="&quot;KeyVaultCertificateSourceParameters&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.updateRule" options="update-rule" required="True">
              <help short="Describes the action that shall be taken when the certificate is updated in Key Vault."/>
              <enum>
                <item name="NoAction" value="&quot;NoAction&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.vaultName" options="vault-name" required="True">
              <help short="The name of the user's Key Vault containing the SSL certificate"/>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$customDomainHttpsParameters.Cdn" options="cdn" group="CustomDomainHttpsParameters">
          <arg type="object" var="$customDomainHttpsParameters.Cdn.certificateSourceParameters" options="certificate-source-parameters" required="True">
            <help short="Defines the certificate source parameters using CDN managed certificate for enabling SSL."/>
            <arg type="string" var="$customDomainHttpsParameters.Cdn.certificateSourceParameters.certificateType" options="certificate-type" required="True">
              <help short="Type of certificate used"/>
              <enum>
                <item name="Dedicated" value="&quot;Dedicated&quot;"/>
                <item name="Shared" value="&quot;Shared&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$customDomainHttpsParameters.Cdn.certificateSourceParameters.typeName" options="type-name" required="True">
              <enum>
                <item name="CdnCertificateSourceParameters" value="&quot;CdnCertificateSourceParameters&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$customDomainHttpsParameters.minimumTlsVersion" options="minimum-tls-version" group="CustomDomainHttpsParameters">
          <help short="TLS protocol version that will be used for Https"/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="TLS10" value="&quot;TLS10&quot;"/>
            <item name="TLS12" value="&quot;TLS12&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$customDomainHttpsParameters.protocolType" options="protocol-type" group="CustomDomainHttpsParameters">
          <help short="Defines the TLS extension protocol that is used for secure delivery."/>
          <enum>
            <item name="IPBased" value="&quot;IPBased&quot;"/>
            <item name="ServerNameIndication" value="&quot;ServerNameIndication&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="CustomDomains_EnableCustomHttps">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/customDomains/{customDomainName}/enableCustomHttps">
          <request method="post">
            <path>
              <param type="string" name="customDomainName" arg="$Path.customDomainName" required="True"/>
              <param type="string" name="endpointName" arg="$Path.endpointName" required="True"/>
              <param type="string" name="profileName" arg="$Path.profileName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format pattern="^[-\w\._\(\)]+$" maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-02-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="customDomainHttpsParameters" clientFlatten="True">
                  <prop type="string" name="certificateSource" required="True">
                    <enum>
                      <item arg="$customDomainHttpsParameters.AzureKeyVault" value="&quot;AzureKeyVault&quot;"/>
                      <item arg="$customDomainHttpsParameters.Cdn" value="&quot;Cdn&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="minimumTlsVersion" arg="$customDomainHttpsParameters.minimumTlsVersion">
                    <enum>
                      <item value="&quot;None&quot;"/>
                      <item value="&quot;TLS10&quot;"/>
                      <item value="&quot;TLS12&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="protocolType" arg="$customDomainHttpsParameters.protocolType" required="True">
                    <enum>
                      <item value="&quot;IPBased&quot;"/>
                      <item value="&quot;ServerNameIndication&quot;"/>
                    </enum>
                  </prop>
                  <discriminator property="certificateSource" value="AzureKeyVault">
                    <prop type="object" name="certificateSourceParameters" arg="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters" required="True">
                      <prop type="string" name="deleteRule" arg="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.deleteRule" required="True">
                        <enum>
                          <item value="&quot;NoAction&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="resourceGroupName" arg="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.resourceGroupName" required="True"/>
                      <prop type="string" name="secretName" arg="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.secretName" required="True"/>
                      <prop type="string" name="secretVersion" arg="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.secretVersion"/>
                      <prop type="string" name="subscriptionId" arg="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.subscriptionId" required="True"/>
                      <prop type="string" name="typeName" arg="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.typeName" required="True">
                        <enum>
                          <item value="&quot;KeyVaultCertificateSourceParameters&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="updateRule" arg="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.updateRule" required="True">
                        <enum>
                          <item value="&quot;NoAction&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="vaultName" arg="$customDomainHttpsParameters.AzureKeyVault.certificateSourceParameters.vaultName" required="True"/>
                    </prop>
                  </discriminator>
                  <discriminator property="certificateSource" value="Cdn">
                    <prop type="object" name="certificateSourceParameters" arg="$customDomainHttpsParameters.Cdn.certificateSourceParameters" required="True">
                      <prop type="string" name="certificateType" arg="$customDomainHttpsParameters.Cdn.certificateSourceParameters.certificateType" required="True">
                        <enum>
                          <item value="&quot;Dedicated&quot;"/>
                          <item value="&quot;Shared&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="typeName" arg="$customDomainHttpsParameters.Cdn.certificateSourceParameters.typeName" required="True">
                        <enum>
                          <item value="&quot;CdnCertificateSourceParameters&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </discriminator>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="CustomDomain_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Cdn/profiles/{}/endpoints/{}/customDomains/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="customHttpsParameters">
                      <prop type="string" name="certificateSource" required="True">
                        <enum>
                          <item value="&quot;AzureKeyVault&quot;"/>
                          <item value="&quot;Cdn&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="minimumTlsVersion">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;TLS10&quot;"/>
                          <item value="&quot;TLS12&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="protocolType" required="True">
                        <enum>
                          <item value="&quot;IPBased&quot;"/>
                          <item value="&quot;ServerNameIndication&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="certificateSource" value="AzureKeyVault">
                        <prop type="object" name="certificateSourceParameters" required="True">
                          <prop type="string" name="deleteRule" required="True">
                            <enum>
                              <item value="&quot;NoAction&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="resourceGroupName" required="True"/>
                          <prop type="string" name="secretName" required="True"/>
                          <prop type="string" name="secretVersion"/>
                          <prop type="string" name="subscriptionId" required="True"/>
                          <prop type="string" name="typeName" required="True">
                            <enum>
                              <item value="&quot;KeyVaultCertificateSourceParameters&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="updateRule" required="True">
                            <enum>
                              <item value="&quot;NoAction&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="vaultName" required="True"/>
                        </prop>
                      </discriminator>
                      <discriminator property="certificateSource" value="Cdn">
                        <prop type="object" name="certificateSourceParameters" required="True">
                          <prop type="string" name="certificateType" required="True">
                            <enum>
                              <item value="&quot;Dedicated&quot;"/>
                              <item value="&quot;Shared&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="typeName" required="True">
                            <enum>
                              <item value="&quot;CdnCertificateSourceParameters&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </discriminator>
                    </prop>
                    <prop readOnly="True" type="string" name="customHttpsProvisioningState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Disabling&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;Enabling&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="customHttpsProvisioningSubstate">
                      <enum>
                        <item value="&quot;CertificateDeleted&quot;"/>
                        <item value="&quot;CertificateDeployed&quot;"/>
                        <item value="&quot;DeletingCertificate&quot;"/>
                        <item value="&quot;DeployingCertificate&quot;"/>
                        <item value="&quot;DomainControlValidationRequestApproved&quot;"/>
                        <item value="&quot;DomainControlValidationRequestRejected&quot;"/>
                        <item value="&quot;DomainControlValidationRequestTimedOut&quot;"/>
                        <item value="&quot;IssuingCertificate&quot;"/>
                        <item value="&quot;PendingDomainControlValidationREquestApproval&quot;"/>
                        <item value="&quot;SubmittingDomainControlValidationRequest&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="hostName" required="True"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Disabling&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                        <item value="&quot;Enabling&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="resourceState">
                      <enum>
                        <item value="&quot;Active&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="validationData"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;application&quot;"/>
                        <item value="&quot;key&quot;"/>
                        <item value="&quot;managedIdentity&quot;"/>
                        <item value="&quot;user&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
            <body>
              <json var="$Instance">
                <schema type="@CustomDomain_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
