<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/apikeys/{}" version="2024-11-01-preview" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2FwaUtleXMve2FwaUtleU5hbWV9/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
  <commandGroup name="nginx deployment api-key">
    <command name="show" version="2024-11-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/apikeys/{}" version="2024-11-01-preview" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2FwaUtleXMve2FwaUtleU5hbWV9/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.apiKeyName" options="api-key-name name n" required="True" idPart="child_name_1">
          <help short="The resource name of the API key"/>
          <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
        </arg>
        <arg type="string" var="$Path.deploymentName" options="deployment-name" required="True" idPart="name">
          <help short="The name of targeted NGINX deployment"/>
          <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ApiKeys_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/apiKeys/{apiKeyName}">
          <request method="get">
            <path>
              <param type="string" name="apiKeyName" arg="$Path.apiKeyName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}/apiKeys/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="dateTime" name="endDateTime"/>
                    <prop readOnly="True" type="string" name="hint"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-11-01-preview" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/apikeys/{}" version="2024-11-01-preview" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2FwaUtleXMve2FwaUtleU5hbWV9/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.apiKeyName" options="api-key-name name n" required="True" idPart="child_name_1">
          <help short="The resource name of the API key"/>
          <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
        </arg>
        <arg type="string" var="$Path.deploymentName" options="deployment-name" required="True" idPart="name">
          <help short="The name of targeted NGINX deployment"/>
          <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ApiKeys_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/apiKeys/{apiKeyName}">
          <request method="delete">
            <path>
              <param type="string" name="apiKeyName" arg="$Path.apiKeyName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-11-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/apikeys/{}" version="2024-11-01-preview" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2FwaUtleXMve2FwaUtleU5hbWV9/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.apiKeyName" options="api-key-name name n" required="True" idPart="child_name_1">
          <help short="The resource name of the API key"/>
          <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
        </arg>
        <arg type="string" var="$Path.deploymentName" options="deployment-name" required="True" idPart="name">
          <help short="The name of targeted NGINX deployment"/>
          <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="dateTime" var="$body.properties.endDateTime" options="end-date-time" group="Properties">
          <help short="The time after which this Dataplane API Key is no longer valid."/>
        </arg>
        <arg type="password" var="$body.properties.secretText" options="secret-text" group="Properties">
          <help short="Secret text to be used as a Dataplane API Key. This is a write only property that can never be read back, but the first three characters will be returned in the 'hint' property."/>
          <prompt msg="Password:"/>
        </arg>
      </argGroup>
      <operation operationId="ApiKeys_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/apiKeys/{apiKeyName}">
          <request method="put">
            <path>
              <param type="string" name="apiKeyName" arg="$Path.apiKeyName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="dateTime" name="endDateTime" arg="$body.properties.endDateTime"/>
                    <prop type="password" name="secretText" arg="$body.properties.secretText" secret="True"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}/apiKeys/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="dateTime" name="endDateTime"/>
                    <prop readOnly="True" type="string" name="hint"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-11-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/nginx.nginxplus/nginxdeployments/{}/apikeys/{}" version="2024-11-01-preview" swagger="mgmt-plane/nginx/ResourceProviders/NGINX.NGINXPLUS/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9OZ2lueC5OZ2lueFBsdXMvbmdpbnhEZXBsb3ltZW50cy97ZGVwbG95bWVudE5hbWV9L2FwaUtleXMve2FwaUtleU5hbWV9/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.apiKeyName" options="api-key-name name n" required="True" idPart="child_name_1">
          <help short="The resource name of the API key"/>
          <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
        </arg>
        <arg type="string" var="$Path.deploymentName" options="deployment-name" required="True" idPart="name">
          <help short="The name of targeted NGINX deployment"/>
          <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="dateTime" var="$body.properties.endDateTime" options="end-date-time" group="Properties">
          <help short="The time after which this Dataplane API Key is no longer valid."/>
        </arg>
        <arg nullable="True" type="password" var="$body.properties.secretText" options="secret-text" group="Properties">
          <help short="Secret text to be used as a Dataplane API Key. This is a write only property that can never be read back, but the first three characters will be returned in the 'hint' property."/>
          <prompt msg="Password:"/>
        </arg>
      </argGroup>
      <operation operationId="ApiKeys_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/apiKeys/{apiKeyName}">
          <request method="get">
            <path>
              <param type="string" name="apiKeyName" arg="$Path.apiKeyName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NginxDeploymentApiKeyResponse_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Nginx.NginxPlus/nginxDeployments/{}/apiKeys/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="dateTime" name="endDateTime"/>
                    <prop readOnly="True" type="string" name="hint"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="dateTime" name="endDateTime" arg="$body.properties.endDateTime"/>
                <prop type="password" name="secretText" arg="$body.properties.secretText" secret="True"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ApiKeys_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Nginx.NginxPlus/nginxDeployments/{deploymentName}/apiKeys/{apiKeyName}">
          <request method="put">
            <path>
              <param type="string" name="apiKeyName" arg="$Path.apiKeyName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="deploymentName" arg="$Path.deploymentName" required="True">
                <format pattern="^([a-z0-9A-Z][a-z0-9A-Z-]{0,28}[a-z0-9A-Z]|[a-z0-9A-Z])$"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NginxDeploymentApiKeyResponse_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
