<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}/connectivityconfigurations/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0vY29ubmVjdGl2aXR5Q29uZmlndXJhdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
  <commandGroup name="network manager connect-config">
    <command name="show" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}/connectivityconfigurations/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0vY29ubmVjdGl2aXR5Q29uZmlndXJhdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the network manager connectivity configuration."/>
        </arg>
        <arg type="string" var="$Path.networkManagerName" options="network-manager-name name n" required="True" group="" idPart="name">
          <help short="The name of the network manager."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ConnectivityConfigurations_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}">
          <request method="get">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}/connectivityConfigurations/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="appliesToGroups" required="True" identifiers="networkGroupId">
                      <item type="object">
                        <prop type="string" name="groupConnectivity" required="True">
                          <enum>
                            <item value="&quot;DirectlyConnected&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="isGlobal">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="networkGroupId" required="True"/>
                        <prop type="string" name="useHubGateway">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="connectivityTopology" required="True">
                      <enum>
                        <item value="&quot;HubAndSpoke&quot;"/>
                        <item value="&quot;Mesh&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deleteExistingPeering">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="array<object>" name="hubs" identifiers="resourceId">
                      <item type="object">
                        <prop type="string" name="resourceId"/>
                        <prop type="string" name="resourceType"/>
                      </item>
                    </prop>
                    <prop type="string" name="isGlobal">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-01-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}/connectivityconfigurations/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0vY29ubmVjdGl2aXR5Q29uZmlndXJhdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the network manager connectivity configuration."/>
        </arg>
        <arg type="string" var="$Path.networkManagerName" options="network-manager-name name n" required="True" group="" idPart="name">
          <help short="The name of the network manager."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="boolean" var="$Query.force" options="force">
          <help short="Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service will do a cleanup deployment in the background, prior to the delete."/>
        </arg>
      </argGroup>
      <operation operationId="ConnectivityConfigurations_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}">
          <request method="delete">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <param type="boolean" name="force" arg="$Query.force"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202">
            <header>
              <item name="Location"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}/connectivityconfigurations/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0vY29ubmVjdGl2aXR5Q29uZmlndXJhdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the network manager connectivity configuration."/>
        </arg>
        <arg type="string" var="$Path.networkManagerName" options="network-manager-name name n" required="True" group="" idPart="name">
          <help short="The name of the network manager."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$connectivityConfiguration.properties.appliesToGroups" options="applies-to-groups" group="Properties" singularOptions="applies-to-group">
          <help short="Groups for configuration"/>
          <item type="object">
            <arg type="string" var="$connectivityConfiguration.properties.appliesToGroups[].groupConnectivity" options="group-connectivity" required="True" group="">
              <help short="Group connectivity type. Only required if topology is Hub and Spoke."/>
              <enum>
                <item name="DirectlyConnected" value="&quot;DirectlyConnected&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$connectivityConfiguration.properties.appliesToGroups[].isGlobal" options="is-global" group="">
              <help short="Flag if global is supported. Only required if topology is Hub and Spoke."/>
              <enum>
                <item name="False" value="&quot;False&quot;"/>
                <item name="True" value="&quot;True&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$connectivityConfiguration.properties.appliesToGroups[].networkGroupId" options="network-group-id" required="True">
              <help short="Network group Id."/>
            </arg>
            <arg type="string" var="$connectivityConfiguration.properties.appliesToGroups[].useHubGateway" options="use-hub-gateway" group="">
              <help short="Flag if need to use hub gateway. Only required if topology is Hub and Spoke."/>
              <enum>
                <item name="False" value="&quot;False&quot;"/>
                <item name="True" value="&quot;True&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$connectivityConfiguration.properties.connectivityTopology" options="connectivity-topology" group="Properties">
          <help short="Connectivity topology type."/>
          <enum>
            <item name="HubAndSpoke" value="&quot;HubAndSpoke&quot;"/>
            <item name="Mesh" value="&quot;Mesh&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$connectivityConfiguration.properties.deleteExistingPeering" options="delete-existing-peering" group="Properties">
          <help short="Flag if need to remove current existing peerings."/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$connectivityConfiguration.properties.description" options="description" group="Properties">
          <help short="A description of the connectivity configuration."/>
        </arg>
        <arg type="array<object>" var="$connectivityConfiguration.properties.hubs" options="hubs" group="Properties" singularOptions="hub">
          <help short="List of hubItems"/>
          <item type="object">
            <arg type="string" var="$connectivityConfiguration.properties.hubs[].resourceId" options="resource-id">
              <help short="Resource Id."/>
            </arg>
            <arg type="string" var="$connectivityConfiguration.properties.hubs[].resourceType" options="resource-type" group="">
              <help short="Resource Type, suggested value(s): 'Microsoft.Network/virtualNetworks'"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$connectivityConfiguration.properties.isGlobal" options="is-global" group="Properties">
          <help short="Flag if global mesh is supported."/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="ConnectivityConfigurations_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}">
          <request method="put">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="connectivityConfiguration" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="appliesToGroups" arg="$connectivityConfiguration.properties.appliesToGroups" required="True" identifiers="networkGroupId">
                      <item type="object">
                        <prop type="string" name="groupConnectivity" arg="$connectivityConfiguration.properties.appliesToGroups[].groupConnectivity" required="True">
                          <enum>
                            <item value="&quot;DirectlyConnected&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="isGlobal" arg="$connectivityConfiguration.properties.appliesToGroups[].isGlobal">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="networkGroupId" arg="$connectivityConfiguration.properties.appliesToGroups[].networkGroupId" required="True"/>
                        <prop type="string" name="useHubGateway" arg="$connectivityConfiguration.properties.appliesToGroups[].useHubGateway">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="connectivityTopology" arg="$connectivityConfiguration.properties.connectivityTopology" required="True">
                      <enum>
                        <item value="&quot;HubAndSpoke&quot;"/>
                        <item value="&quot;Mesh&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deleteExistingPeering" arg="$connectivityConfiguration.properties.deleteExistingPeering">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description" arg="$connectivityConfiguration.properties.description"/>
                    <prop type="array<object>" name="hubs" arg="$connectivityConfiguration.properties.hubs" identifiers="resourceId">
                      <item type="object">
                        <prop type="string" name="resourceId" arg="$connectivityConfiguration.properties.hubs[].resourceId"/>
                        <prop type="string" name="resourceType" arg="$connectivityConfiguration.properties.hubs[].resourceType"/>
                      </item>
                    </prop>
                    <prop type="string" name="isGlobal" arg="$connectivityConfiguration.properties.isGlobal">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}/connectivityConfigurations/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="appliesToGroups" required="True" identifiers="networkGroupId">
                      <item type="object">
                        <prop type="string" name="groupConnectivity" required="True">
                          <enum>
                            <item value="&quot;DirectlyConnected&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="isGlobal">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="networkGroupId" required="True"/>
                        <prop type="string" name="useHubGateway">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="connectivityTopology" required="True">
                      <enum>
                        <item value="&quot;HubAndSpoke&quot;"/>
                        <item value="&quot;Mesh&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deleteExistingPeering">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="array<object>" name="hubs" identifiers="resourceId">
                      <item type="object">
                        <prop type="string" name="resourceId"/>
                        <prop type="string" name="resourceType"/>
                      </item>
                    </prop>
                    <prop type="string" name="isGlobal">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-01-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkmanagers/{}/connectivityconfigurations/{}" version="2022-01-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrTWFuYWdlcnMve25ldHdvcmtNYW5hZ2VyTmFtZX0vY29ubmVjdGl2aXR5Q29uZmlndXJhdGlvbnMve2NvbmZpZ3VyYXRpb25OYW1lfQ==/V/MjAyMi0wMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.configurationName" options="configuration-name" required="True" group="" idPart="child_name_1">
          <help short="The name of the network manager connectivity configuration."/>
        </arg>
        <arg type="string" var="$Path.networkManagerName" options="network-manager-name name n" required="True" group="" idPart="name">
          <help short="The name of the network manager."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$connectivityConfiguration.properties.appliesToGroups" options="applies-to-groups" group="Properties" singularOptions="applies-to-group">
          <help short="Groups for configuration"/>
          <item nullable="True" type="object">
            <arg type="string" var="$connectivityConfiguration.properties.appliesToGroups[].groupConnectivity" options="group-connectivity" group="">
              <help short="Group connectivity type. Only required if topology is Hub and Spoke."/>
              <enum>
                <item name="DirectlyConnected" value="&quot;DirectlyConnected&quot;"/>
                <item name="None" value="&quot;None&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$connectivityConfiguration.properties.appliesToGroups[].isGlobal" options="is-global" group="">
              <help short="Flag if global is supported. Only required if topology is Hub and Spoke."/>
              <enum>
                <item name="False" value="&quot;False&quot;"/>
                <item name="True" value="&quot;True&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$connectivityConfiguration.properties.appliesToGroups[].networkGroupId" options="network-group-id">
              <help short="Network group Id."/>
            </arg>
            <arg nullable="True" type="string" var="$connectivityConfiguration.properties.appliesToGroups[].useHubGateway" options="use-hub-gateway" group="">
              <help short="Flag if need to use hub gateway. Only required if topology is Hub and Spoke."/>
              <enum>
                <item name="False" value="&quot;False&quot;"/>
                <item name="True" value="&quot;True&quot;"/>
              </enum>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$connectivityConfiguration.properties.connectivityTopology" options="connectivity-topology" group="Properties">
          <help short="Connectivity topology type."/>
          <enum>
            <item name="HubAndSpoke" value="&quot;HubAndSpoke&quot;"/>
            <item name="Mesh" value="&quot;Mesh&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$connectivityConfiguration.properties.deleteExistingPeering" options="delete-existing-peering" group="Properties">
          <help short="Flag if need to remove current existing peerings."/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$connectivityConfiguration.properties.description" options="description" group="Properties">
          <help short="A description of the connectivity configuration."/>
        </arg>
        <arg nullable="True" type="array<object>" var="$connectivityConfiguration.properties.hubs" options="hubs" group="Properties" singularOptions="hub">
          <help short="List of hubItems"/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$connectivityConfiguration.properties.hubs[].resourceId" options="resource-id">
              <help short="Resource Id."/>
            </arg>
            <arg nullable="True" type="string" var="$connectivityConfiguration.properties.hubs[].resourceType" options="resource-type" group="">
              <help short="Resource Type, suggested value(s): 'Microsoft.Network/virtualNetworks'"/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$connectivityConfiguration.properties.isGlobal" options="is-global" group="Properties">
          <help short="Flag if global mesh is supported."/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="ConnectivityConfigurations_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}">
          <request method="get">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ConnectivityConfiguration_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkManagers/{}/connectivityConfigurations/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="array<object>" name="appliesToGroups" required="True" identifiers="networkGroupId">
                      <item type="object">
                        <prop type="string" name="groupConnectivity" required="True">
                          <enum>
                            <item value="&quot;DirectlyConnected&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="isGlobal">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="networkGroupId" required="True"/>
                        <prop type="string" name="useHubGateway">
                          <enum>
                            <item value="&quot;False&quot;"/>
                            <item value="&quot;True&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="connectivityTopology" required="True">
                      <enum>
                        <item value="&quot;HubAndSpoke&quot;"/>
                        <item value="&quot;Mesh&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deleteExistingPeering">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="array<object>" name="hubs" identifiers="resourceId">
                      <item type="object">
                        <prop type="string" name="resourceId"/>
                        <prop type="string" name="resourceType"/>
                      </item>
                    </prop>
                    <prop type="string" name="isGlobal">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="connectivityConfiguration" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="array<object>" name="appliesToGroups" arg="$connectivityConfiguration.properties.appliesToGroups" required="True" identifiers="networkGroupId">
                  <item type="object">
                    <prop type="string" name="groupConnectivity" arg="$connectivityConfiguration.properties.appliesToGroups[].groupConnectivity" required="True">
                      <enum>
                        <item value="&quot;DirectlyConnected&quot;"/>
                        <item value="&quot;None&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="isGlobal" arg="$connectivityConfiguration.properties.appliesToGroups[].isGlobal">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="networkGroupId" arg="$connectivityConfiguration.properties.appliesToGroups[].networkGroupId" required="True"/>
                    <prop type="string" name="useHubGateway" arg="$connectivityConfiguration.properties.appliesToGroups[].useHubGateway">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="connectivityTopology" arg="$connectivityConfiguration.properties.connectivityTopology" required="True">
                  <enum>
                    <item value="&quot;HubAndSpoke&quot;"/>
                    <item value="&quot;Mesh&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="deleteExistingPeering" arg="$connectivityConfiguration.properties.deleteExistingPeering">
                  <enum>
                    <item value="&quot;False&quot;"/>
                    <item value="&quot;True&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="description" arg="$connectivityConfiguration.properties.description"/>
                <prop type="array<object>" name="hubs" arg="$connectivityConfiguration.properties.hubs" identifiers="resourceId">
                  <item type="object">
                    <prop type="string" name="resourceId" arg="$connectivityConfiguration.properties.hubs[].resourceId"/>
                    <prop type="string" name="resourceType" arg="$connectivityConfiguration.properties.hubs[].resourceType"/>
                  </item>
                </prop>
                <prop type="string" name="isGlobal" arg="$connectivityConfiguration.properties.isGlobal">
                  <enum>
                    <item value="&quot;False&quot;"/>
                    <item value="&quot;True&quot;"/>
                  </enum>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ConnectivityConfigurations_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkManagers/{networkManagerName}/connectivityConfigurations/{configurationName}">
          <request method="put">
            <path>
              <param type="string" name="configurationName" arg="$Path.configurationName" required="True"/>
              <param type="string" name="networkManagerName" arg="$Path.networkManagerName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-01-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ConnectivityConfiguration_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
