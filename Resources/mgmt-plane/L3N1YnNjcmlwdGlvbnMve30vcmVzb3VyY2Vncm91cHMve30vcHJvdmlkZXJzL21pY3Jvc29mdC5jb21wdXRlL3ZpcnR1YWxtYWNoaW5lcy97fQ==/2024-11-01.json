{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}", "version": "2024-11-01", "swagger": "mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="}], "commandGroups": [{"name": "vm", "commands": [{"name": "show", "version": "2024-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}", "version": "2024-11-01", "swagger": "mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vmName", "options": ["n", "name", "vm-name"], "required": true, "idPart": "name", "help": {"short": "The name of the virtual machine."}}, {"type": "string", "var": "$Query.expand", "options": ["expand"], "help": {"short": "The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the virtual machine that is managed by the platform and can change outside of control plane operations. 'UserData' retrieves the UserData property as part of the VM model view that was provided by the user during the VM Create/Update operation."}, "enum": {"items": [{"name": "instanceView", "value": "instanceView"}, {"name": "userData", "value": "userData"}]}}]}], "operations": [{"operationId": "VirtualMachines_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"params": [{"type": "string", "name": "$expand", "arg": "$Query.expand", "enum": {"items": [{"value": "instanceView"}, {"value": "userData"}]}}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "object", "name": "extendedLocation", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "EdgeZone"}]}}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "managedBy"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "placement", "props": [{"type": "array<string>", "name": "excludeZones", "item": {"type": "string"}}, {"type": "array<string>", "name": "includeZones", "item": {"type": "string"}}, {"type": "string", "name": "zonePlacementPolicy", "enum": {"items": [{"value": "Any"}]}}]}, {"type": "object", "name": "plan", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "product"}, {"type": "string", "name": "promotionCode"}, {"type": "string", "name": "publisher"}]}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "additionalCapabilities", "props": [{"type": "boolean", "name": "hibernationEnabled"}, {"type": "boolean", "name": "ultraSSDEnabled"}]}, {"type": "object", "name": "applicationProfile", "props": [{"type": "array<object>", "name": "galleryApplications", "item": {"type": "object", "props": [{"type": "string", "name": "configurationReference"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "integer32", "name": "order"}, {"type": "string", "name": "packageReferenceId", "required": true}, {"type": "string", "name": "tags"}, {"type": "boolean", "name": "treatFailureAsDeploymentFailure"}]}, "identifiers": ["packageReferenceId"]}]}, {"type": "@SubResource_read", "name": "availabilitySet"}, {"type": "object", "name": "billingProfile", "props": [{"type": "float64", "name": "maxPrice"}]}, {"type": "object", "name": "capacityReservation", "props": [{"type": "@SubResource_read", "name": "capacityReservationGroup"}]}, {"type": "object", "name": "diagnosticsProfile", "props": [{"type": "object", "name": "bootDiagnostics", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "storageUri"}]}]}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "Deallocate"}, {"value": "Delete"}]}}, {"type": "string", "name": "extensionsTimeBudget"}, {"type": "object", "name": "hardwareProfile", "props": [{"type": "string", "name": "vmSize", "enum": {"items": [{"value": "Basic_A0"}, {"value": "Basic_A1"}, {"value": "Basic_A2"}, {"value": "Basic_A3"}, {"value": "Basic_A4"}, {"value": "Standard_A0"}, {"value": "Standard_A1"}, {"value": "Standard_A10"}, {"value": "Standard_A11"}, {"value": "Standard_A1_v2"}, {"value": "Standard_A2"}, {"value": "Standard_A2_v2"}, {"value": "Standard_A2m_v2"}, {"value": "Standard_A3"}, {"value": "Standard_A4"}, {"value": "Standard_A4_v2"}, {"value": "Standard_A4m_v2"}, {"value": "Standard_A5"}, {"value": "Standard_A6"}, {"value": "Standard_A7"}, {"value": "Standard_A8"}, {"value": "Standard_A8_v2"}, {"value": "Standard_A8m_v2"}, {"value": "Standard_A9"}, {"value": "Standard_B1ms"}, {"value": "Standard_B1s"}, {"value": "Standard_B2ms"}, {"value": "Standard_B2s"}, {"value": "Standard_B4ms"}, {"value": "Standard_B8ms"}, {"value": "Standard_D1"}, {"value": "Standard_D11"}, {"value": "Standard_D11_v2"}, {"value": "Standard_D12"}, {"value": "Standard_D12_v2"}, {"value": "Standard_D13"}, {"value": "Standard_D13_v2"}, {"value": "Standard_D14"}, {"value": "Standard_D14_v2"}, {"value": "Standard_D15_v2"}, {"value": "Standard_D16_v3"}, {"value": "Standard_D16s_v3"}, {"value": "Standard_D1_v2"}, {"value": "Standard_D2"}, {"value": "Standard_D2_v2"}, {"value": "Standard_D2_v3"}, {"value": "Standard_D2s_v3"}, {"value": "Standard_D3"}, {"value": "Standard_D32_v3"}, {"value": "Standard_D32s_v3"}, {"value": "Standard_D3_v2"}, {"value": "Standard_D4"}, {"value": "Standard_D4_v2"}, {"value": "Standard_D4_v3"}, {"value": "Standard_D4s_v3"}, {"value": "Standard_D5_v2"}, {"value": "Standard_D64_v3"}, {"value": "Standard_D64s_v3"}, {"value": "Standard_D8_v3"}, {"value": "Standard_D8s_v3"}, {"value": "Standard_DS1"}, {"value": "Standard_DS11"}, {"value": "Standard_DS11_v2"}, {"value": "Standard_DS12"}, {"value": "Standard_DS12_v2"}, {"value": "Standard_DS13"}, {"value": "Standard_DS13-2_v2"}, {"value": "Standard_DS13-4_v2"}, {"value": "Standard_DS13_v2"}, {"value": "Standard_DS14"}, {"value": "Standard_DS14-4_v2"}, {"value": "Standard_DS14-8_v2"}, {"value": "Standard_DS14_v2"}, {"value": "Standard_DS15_v2"}, {"value": "Standard_DS1_v2"}, {"value": "Standard_DS2"}, {"value": "Standard_DS2_v2"}, {"value": "Standard_DS3"}, {"value": "Standard_DS3_v2"}, {"value": "Standard_DS4"}, {"value": "Standard_DS4_v2"}, {"value": "Standard_DS5_v2"}, {"value": "Standard_E16_v3"}, {"value": "Standard_E16s_v3"}, {"value": "Standard_E2_v3"}, {"value": "Standard_E2s_v3"}, {"value": "Standard_E32-16_v3"}, {"value": "Standard_E32-8s_v3"}, {"value": "Standard_E32_v3"}, {"value": "Standard_E32s_v3"}, {"value": "Standard_E4_v3"}, {"value": "Standard_E4s_v3"}, {"value": "Standard_E64-16s_v3"}, {"value": "Standard_E64-32s_v3"}, {"value": "Standard_E64_v3"}, {"value": "Standard_E64s_v3"}, {"value": "Standard_E8_v3"}, {"value": "Standard_E8s_v3"}, {"value": "Standard_F1"}, {"value": "Standard_F16"}, {"value": "Standard_F16s"}, {"value": "Standard_F16s_v2"}, {"value": "Standard_F1s"}, {"value": "Standard_F2"}, {"value": "Standard_F2s"}, {"value": "Standard_F2s_v2"}, {"value": "Standard_F32s_v2"}, {"value": "Standard_F4"}, {"value": "Standard_F4s"}, {"value": "Standard_F4s_v2"}, {"value": "Standard_F64s_v2"}, {"value": "Standard_F72s_v2"}, {"value": "Standard_F8"}, {"value": "Standard_F8s"}, {"value": "Standard_F8s_v2"}, {"value": "Standard_G1"}, {"value": "Standard_G2"}, {"value": "Standard_G3"}, {"value": "Standard_G4"}, {"value": "Standard_G5"}, {"value": "Standard_GS1"}, {"value": "Standard_GS2"}, {"value": "Standard_GS3"}, {"value": "Standard_GS4"}, {"value": "Standard_GS4-4"}, {"value": "Standard_GS4-8"}, {"value": "Standard_GS5"}, {"value": "Standard_GS5-16"}, {"value": "Standard_GS5-8"}, {"value": "Standard_H16"}, {"value": "Standard_H16m"}, {"value": "Standard_H16mr"}, {"value": "Standard_H16r"}, {"value": "Standard_H8"}, {"value": "Standard_H8m"}, {"value": "Standard_L16s"}, {"value": "Standard_L32s"}, {"value": "Standard_L4s"}, {"value": "Standard_L8s"}, {"value": "Standard_M128-32ms"}, {"value": "Standard_M128-64ms"}, {"value": "Standard_M128ms"}, {"value": "Standard_M128s"}, {"value": "Standard_M64-16ms"}, {"value": "Standard_M64-32ms"}, {"value": "Standard_M64ms"}, {"value": "Standard_M64s"}, {"value": "Standard_NC12"}, {"value": "Standard_NC12s_v2"}, {"value": "Standard_NC12s_v3"}, {"value": "Standard_NC24"}, {"value": "Standard_NC24r"}, {"value": "Standard_NC24rs_v2"}, {"value": "Standard_NC24rs_v3"}, {"value": "Standard_NC24s_v2"}, {"value": "Standard_NC24s_v3"}, {"value": "Standard_NC6"}, {"value": "Standard_NC6s_v2"}, {"value": "Standard_NC6s_v3"}, {"value": "Standard_ND12s"}, {"value": "Standard_ND24rs"}, {"value": "Standard_ND24s"}, {"value": "Standard_ND6s"}, {"value": "Standard_NV12"}, {"value": "Standard_NV24"}, {"value": "Standard_NV6"}]}}, {"type": "object", "name": "vmSizeProperties", "props": [{"type": "integer32", "name": "vCPUsAvailable"}, {"type": "integer32", "name": "vCPUsPerCore"}]}]}, {"type": "@SubResource_read", "name": "host"}, {"type": "@SubResource_read", "name": "hostGroup"}, {"readOnly": true, "type": "object", "name": "instanceView", "props": [{"readOnly": true, "type": "string", "name": "assignedHost"}, {"type": "object", "name": "bootDiagnostics", "props": [{"readOnly": true, "type": "string", "name": "consoleScreenshotBlobUri"}, {"readOnly": true, "type": "string", "name": "serialConsoleLogBlobUri"}, {"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}, {"type": "string", "name": "computerName"}, {"type": "array<object>", "name": "disks", "item": {"type": "object", "props": [{"type": "array<@DiskEncryptionSettings_read>", "name": "encryptionSettings", "item": {"type": "@DiskEncryptionSettings_read"}}, {"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "extensions", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "array<@InstanceViewStatus_read>", "name": "substatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "cls": "VirtualMachineExtensionInstanceView_read"}, "identifiers": ["name", "type"]}, {"type": "string", "name": "hyperVGeneration", "enum": {"items": [{"value": "V1"}, {"value": "V2"}]}}, {"readOnly": true, "type": "boolean", "name": "isVMInStandbyPool"}, {"type": "object", "name": "maintenanceRedeployStatus", "props": [{"type": "boolean", "name": "isCustomerInitiatedMaintenanceAllowed"}, {"type": "string", "name": "lastOperationMessage"}, {"type": "string", "name": "lastOperationResultCode", "enum": {"items": [{"value": "MaintenanceAborted"}, {"value": "MaintenanceCompleted"}, {"value": "None"}, {"value": "RetryLater"}]}}, {"type": "dateTime", "name": "maintenanceWindowEndTime"}, {"type": "dateTime", "name": "maintenanceWindowStartTime"}, {"type": "dateTime", "name": "preMaintenanceWindowEndTime"}, {"type": "dateTime", "name": "preMaintenanceWindowStartTime"}]}, {"type": "string", "name": "osName"}, {"type": "string", "name": "osVersion"}, {"type": "object", "name": "patchStatus", "props": [{"type": "object", "name": "availablePatchSummary", "props": [{"readOnly": true, "type": "string", "name": "assessmentActivityId"}, {"readOnly": true, "type": "integer32", "name": "criticalAndSecurityPatchCount"}, {"readOnly": true, "type": "object", "name": "error", "props": [{"type": "string", "name": "code"}, {"type": "array<object>", "name": "details", "item": {"type": "object", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}]}, "identifiers": ["target", "message"]}, {"type": "object", "name": "innererror", "props": [{"type": "string", "name": "errordetail"}, {"type": "string", "name": "exceptiontype"}]}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}], "cls": "ApiError_read"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "integer32", "name": "otherPatchCount"}, {"readOnly": true, "type": "boolean", "name": "rebootPending"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}, {"readOnly": true, "type": "array<@InstanceViewStatus_read>", "name": "configurationStatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "lastPatchInstallationSummary", "props": [{"readOnly": true, "type": "@ApiError_read", "name": "error"}, {"readOnly": true, "type": "integer32", "name": "excludedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "failedPatchCount"}, {"readOnly": true, "type": "string", "name": "installationActivityId"}, {"readOnly": true, "type": "integer32", "name": "installedPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "boolean", "name": "maintenanceWindowExceeded"}, {"readOnly": true, "type": "integer32", "name": "notSelectedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "pendingPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "integer32", "name": "platformUpdateDomain"}, {"type": "string", "name": "rdpThumbPrint"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "vmAgent", "props": [{"type": "array<object>", "name": "extensionHandlers", "item": {"type": "object", "props": [{"type": "object", "name": "status", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "displayStatus"}, {"type": "string", "name": "level", "enum": {"items": [{"value": "Error"}, {"value": "Info"}, {"value": "Warning"}]}}, {"type": "string", "name": "message"}, {"type": "dateTime", "name": "time"}], "cls": "InstanceViewStatus_read"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}]}}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "vmAgentVersion"}]}, {"readOnly": true, "type": "object", "name": "vmHealth", "props": [{"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}]}, {"type": "string", "name": "licenseType"}, {"type": "object", "name": "networkProfile", "props": [{"type": "string", "name": "networkApiVersion", "enum": {"items": [{"value": "2020-11-01"}, {"value": "2022-11-01"}]}}, {"type": "array<object>", "name": "networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "auxiliaryMode", "enum": {"items": [{"value": "AcceleratedConnections"}, {"value": "Floating"}, {"value": "None"}]}}, {"type": "string", "name": "auxiliarySku", "enum": {"items": [{"value": "A1"}, {"value": "A2"}, {"value": "A4"}, {"value": "A8"}, {"value": "None"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "disableTcpStateTracking"}, {"type": "object", "name": "dnsSettings", "props": [{"type": "array<string>", "name": "dnsServers", "item": {"type": "string"}}]}, {"type": "@SubResource_read", "name": "dscpConfiguration"}, {"type": "boolean", "name": "enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableFpga"}, {"type": "boolean", "name": "enableIPForwarding"}, {"type": "array<object>", "name": "ipConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<@SubResource_read>", "name": "applicationGatewayBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "applicationSecurityGroups", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "loadBalancerBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "object", "name": "publicIPAddressConfiguration", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "required": true}, {"type": "string", "name": "domainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}]}}]}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "array<object>", "name": "ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType"}, {"type": "string", "name": "tag"}]}}, {"type": "string", "name": "publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_read", "name": "publicIPPrefix"}], "clientFlatten": true}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}, {"type": "string", "name": "tier", "enum": {"items": [{"value": "Global"}, {"value": "Regional"}]}}]}]}, {"type": "@SubResource_read", "name": "subnet"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "@SubResource_read", "name": "networkSecurityGroup"}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "id"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}}]}, {"type": "object", "name": "osProfile", "props": [{"type": "string", "name": "adminPassword", "secret": true}, {"type": "string", "name": "adminUsername"}, {"type": "boolean", "name": "allowExtensionOperations"}, {"type": "string", "name": "computerName"}, {"type": "string", "name": "customData"}, {"type": "object", "name": "linuxConfiguration", "props": [{"type": "boolean", "name": "disablePasswordAuthentication"}, {"type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "object", "name": "ssh", "props": [{"type": "array<object>", "name": "publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData"}, {"type": "string", "name": "path"}]}, "identifiers": ["path"]}]}]}, {"type": "boolean", "name": "requireGuestProvisionSignal"}, {"type": "array<object>", "name": "secrets", "item": {"type": "object", "props": [{"type": "@SubResource_read", "name": "sourceVault"}, {"type": "array<object>", "name": "vaultCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "certificateStore"}, {"type": "string", "name": "certificateUrl"}]}, "identifiers": ["certificateUrl"]}]}}, {"type": "object", "name": "windowsConfiguration", "props": [{"type": "array<object>", "name": "additionalUnattendContent", "item": {"type": "object", "props": [{"type": "string", "name": "componentName", "enum": {"items": [{"value": "Microsoft-Windows-Shell-Setup"}]}}, {"type": "string", "name": "content"}, {"type": "string", "name": "passName", "enum": {"items": [{"value": "OobeSystem"}]}}, {"type": "string", "name": "settingName", "enum": {"items": [{"value": "AutoLogon"}, {"value": "FirstLogonCommands"}]}}]}}, {"type": "boolean", "name": "enableAutomaticUpdates"}, {"readOnly": true, "type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "boolean", "name": "enableHotpatching"}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByOS"}, {"value": "AutomaticByPlatform"}, {"value": "Manual"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "string", "name": "timeZone"}, {"type": "object", "name": "winRM", "props": [{"type": "array<object>", "name": "listeners", "item": {"type": "object", "props": [{"type": "string", "name": "certificateUrl"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}]}}]}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "string", "name": "priority", "enum": {"items": [{"value": "Low"}, {"value": "Regular"}, {"value": "Spot"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "proximityPlacementGroup"}, {"type": "object", "name": "scheduledEventsPolicy", "props": [{"type": "object", "name": "scheduledEventsAdditionalPublishingTargets", "props": [{"type": "object", "name": "eventGridAndResourceGraph", "props": [{"type": "boolean", "name": "enable"}]}]}, {"type": "object", "name": "userInitiatedReboot", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}, {"type": "object", "name": "userInitiatedRedeploy", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}]}, {"type": "object", "name": "scheduledEventsProfile", "props": [{"type": "object", "name": "osImageNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}, {"type": "object", "name": "terminateNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}]}, {"type": "object", "name": "securityProfile", "props": [{"type": "boolean", "name": "encryptionAtHost"}, {"type": "object", "name": "encryptionIdentity", "props": [{"type": "string", "name": "userAssignedIdentityResourceId"}]}, {"type": "object", "name": "proxyAgentSettings", "props": [{"type": "boolean", "name": "enabled"}, {"type": "@HostEndpointSettings_read", "name": "imds"}, {"type": "integer32", "name": "keyIncarnationId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Enforce"}]}}, {"type": "object", "name": "wireServer", "props": [{"type": "string", "name": "inVMAccessControlProfileReferenceId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Disabled"}, {"value": "Enforce"}]}}], "cls": "HostEndpointSettings_read"}]}, {"type": "string", "name": "securityType", "enum": {"items": [{"value": "ConfidentialVM"}, {"value": "TrustedLaunch"}]}}, {"type": "object", "name": "uefiSettings", "props": [{"type": "boolean", "name": "secureBootEnabled"}, {"type": "boolean", "name": "vTpmEnabled"}]}]}, {"type": "object", "name": "storageProfile", "props": [{"type": "boolean", "name": "alignRegionalDisksToVMZone"}, {"type": "array<object>", "name": "dataDisks", "item": {"type": "object", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "string", "name": "detachOption", "enum": {"items": [{"value": "ForceDetach"}]}}, {"readOnly": true, "type": "integer64", "name": "diskIOPSReadWrite"}, {"readOnly": true, "type": "integer64", "name": "diskMBpsReadWrite"}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "integer32", "name": "lun", "required": true}, {"type": "@ManagedDiskParameters_read", "name": "managedDisk"}, {"type": "string", "name": "name"}, {"type": "object", "name": "sourceResource", "props": [{"type": "string", "name": "id"}]}, {"type": "boolean", "name": "toBeDetached"}, {"type": "@VirtualHardDisk_read", "name": "vhd"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}, "identifiers": ["lun"]}, {"type": "string", "name": "diskControllerType", "enum": {"items": [{"value": "NVMe"}, {"value": "SCSI"}]}}, {"type": "object", "name": "imageReference", "props": [{"type": "string", "name": "communityGalleryImageId"}, {"readOnly": true, "type": "string", "name": "exactVersion"}, {"type": "string", "name": "id"}, {"type": "string", "name": "offer"}, {"type": "string", "name": "publisher"}, {"type": "string", "name": "sharedGalleryImageId"}, {"type": "string", "name": "sku"}, {"type": "string", "name": "version"}]}, {"type": "object", "name": "osDisk", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "diffDiskSettings", "props": [{"type": "string", "name": "option", "enum": {"items": [{"value": "Local"}]}}, {"type": "string", "name": "placement", "enum": {"items": [{"value": "CacheDisk"}, {"value": "NvmeDisk"}, {"value": "ResourceDisk"}]}}]}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "object", "name": "encryptionSettings", "props": [{"type": "object", "name": "diskEncryptionKey", "props": [{"type": "string", "name": "secretUrl", "required": true}, {"type": "object", "name": "sourceVault", "required": true, "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "cls": "KeyVaultSecretReference_read"}, {"type": "boolean", "name": "enabled"}, {"type": "object", "name": "keyEncryptionKey", "props": [{"type": "string", "name": "keyUrl", "required": true}, {"type": "@SubResource_read", "name": "sourceVault", "required": true}]}], "cls": "DiskEncryptionSettings_read"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "object", "name": "managedDisk", "props": [{"type": "object", "name": "diskEncryptionSet", "props": [{"type": "string", "name": "id"}], "cls": "DiskEncryptionSetParameters_read"}, {"type": "string", "name": "id"}, {"type": "object", "name": "securityProfile", "props": [{"type": "@DiskEncryptionSetParameters_read", "name": "diskEncryptionSet"}, {"type": "string", "name": "securityEncryptionType", "enum": {"items": [{"value": "DiskWithVMGuestState"}, {"value": "NonPersistedTPM"}, {"value": "VMGuestStateOnly"}]}}]}, {"type": "string", "name": "storageAccountType", "enum": {"items": [{"value": "PremiumV2_LRS"}, {"value": "Premium_LRS"}, {"value": "Premium_ZRS"}, {"value": "StandardSSD_LRS"}, {"value": "StandardSSD_ZRS"}, {"value": "Standard_LRS"}, {"value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_read"}, {"type": "string", "name": "name"}, {"type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "object", "name": "vhd", "props": [{"type": "string", "name": "uri"}], "cls": "VirtualHardDisk_read"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}]}, {"readOnly": true, "type": "dateTime", "name": "timeCreated"}, {"type": "string", "name": "userData"}, {"type": "@SubResource_read", "name": "virtualMachineScaleSet"}, {"readOnly": true, "type": "string", "name": "vmId"}], "clientFlatten": true}, {"readOnly": true, "type": "array<object>", "name": "resources", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "autoUpgradeMinorVersion"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "string", "name": "forceUpdateTag"}, {"type": "@VirtualMachineExtensionInstanceView_read", "name": "instanceView"}, {"type": "object", "name": "protectedSettings", "additionalProps": {"item": {"type": "any"}}}, {"type": "@KeyVaultSecretReference_read", "name": "protectedSettingsFromKeyVault"}, {"type": "array<string>", "name": "provisionAfterExtensions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "publisher"}, {"type": "object", "name": "settings", "additionalProps": {"item": {"type": "any"}}}, {"type": "boolean", "name": "suppressFailures"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "delete", "version": "2024-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}", "version": "2024-11-01", "swagger": "mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vmName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the virtual machine."}}, {"type": "boolean", "var": "$Query.forceDeletion", "options": ["force-deletion"], "help": {"short": "Optional parameter to force delete virtual machines."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "VirtualMachines_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"params": [{"type": "boolean", "name": "forceDeletion", "arg": "$Query.forceDeletion"}], "consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2024-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}", "version": "2024-11-01", "swagger": "mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.If-Match", "options": ["if-match"], "help": {"short": "The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."}}, {"type": "string", "var": "$Header.If-None-Match", "options": ["if-none-match"], "help": {"short": "Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vmName", "options": ["n", "name", "vm-name"], "required": true, "idPart": "name", "help": {"short": "The name of the virtual machine."}}]}, {"name": "Identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$parameters.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "group": "Identity", "help": {"short": "Set the system managed identity."}}, {"type": "string", "var": "$parameters.identity.type", "options": ["type"], "hide": true, "group": "Identity", "help": {"short": "The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"blank": {"value": []}, "type": "array<string>", "var": "$parameters.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "Identity", "help": {"short": "Set the user managed identities."}, "item": {"type": "string"}}, {"type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "hide": true, "group": "Identity", "help": {"short": "The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."}, "additionalProps": {"item": {"blank": {"value": {}}, "type": "object"}}}]}, {"name": "Parameters", "args": [{"type": "object", "var": "$parameters.extendedLocation", "options": ["extended-location"], "group": "Parameters", "help": {"short": "The extended location of the Virtual Machine."}, "args": [{"type": "string", "var": "$parameters.extendedLocation.name", "options": ["name"], "help": {"short": "The name of the extended location."}}, {"type": "string", "var": "$parameters.extendedLocation.type", "options": ["type"], "help": {"short": "The type of the extended location."}, "enum": {"items": [{"name": "EdgeZone", "value": "EdgeZone"}]}}]}, {"type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "required": true, "group": "Parameters", "help": {"short": "Resource location"}}, {"type": "object", "var": "$parameters.placement", "options": ["placement"], "group": "Parameters", "help": {"short": "Placement section specifies the user-defined constraints for virtual machine hardware placement. This property cannot be changed once VM is provisioned. Minimum api-version: 2024-11-01."}, "args": [{"type": "array<string>", "var": "$parameters.placement.excludeZones", "options": ["exclude-zones"], "help": {"short": "This property supplements the 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to 'Any', availability zone selected by the system must not be present in the list of availability zones passed with 'excludeZones'. If 'excludeZones' is not provided, all availability zones in region will be considered for selection."}, "item": {"type": "string"}}, {"type": "array<string>", "var": "$parameters.placement.includeZones", "options": ["include-zones"], "help": {"short": "This property supplements the 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to 'Any', availability zone selected by the system must be present in the list of availability zones passed with 'includeZones'. If 'includeZones' is not provided, all availability zones in region will be considered for selection."}, "item": {"type": "string"}}, {"type": "string", "var": "$parameters.placement.zonePlacementPolicy", "options": ["zone-placement-policy"], "help": {"short": "Specifies the policy for virtual machine's placement in availability zone. Possible values are: **Any** - An availability zone will be automatically picked by system as part of virtual machine creation."}, "enum": {"items": [{"name": "Any", "value": "Any"}]}}]}, {"type": "object", "var": "$parameters.plan", "options": ["plan"], "group": "Parameters", "help": {"short": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**."}, "args": [{"type": "string", "var": "$parameters.plan.name", "options": ["name"], "help": {"short": "The plan ID."}}, {"type": "string", "var": "$parameters.plan.product", "options": ["product"], "help": {"short": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."}}, {"type": "string", "var": "$parameters.plan.promotionCode", "options": ["promotion-code"], "help": {"short": "The promotion code."}}, {"type": "string", "var": "$parameters.plan.publisher", "options": ["publisher"], "help": {"short": "The publisher ID."}}]}, {"type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Resource tags"}, "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "var": "$parameters.zones", "options": ["zones"], "group": "Parameters", "help": {"short": "The virtual machine zones."}, "item": {"type": "string"}}]}, {"name": "Properties", "args": [{"type": "object", "var": "$parameters.properties.additionalCapabilities", "options": ["additional-capabilities"], "group": "Properties", "help": {"short": "Specifies additional capabilities enabled or disabled on the virtual machine."}, "args": [{"type": "boolean", "var": "$parameters.properties.additionalCapabilities.hibernationEnabled", "options": ["hibernation-enabled"], "help": {"short": "The flag that enables or disables hibernation capability on the VM."}}, {"type": "boolean", "var": "$parameters.properties.additionalCapabilities.ultraSSDEnabled", "options": ["ultra-ssd-enabled"], "help": {"short": "The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled."}}]}, {"type": "object", "var": "$parameters.properties.applicationProfile", "options": ["application-profile"], "group": "Properties", "help": {"short": "Specifies the gallery applications that should be made available to the VM/VMSS."}, "args": [{"type": "array<object>", "var": "$parameters.properties.applicationProfile.galleryApplications", "options": ["gallery-applications"], "help": {"short": "Specifies the gallery applications that should be made available to the VM/VMSS"}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.applicationProfile.galleryApplications[].configurationReference", "options": ["configuration-reference"], "help": {"short": "Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided"}}, {"type": "boolean", "var": "$parameters.properties.applicationProfile.galleryApplications[].enableAutomaticUpgrade", "options": ["enable-automatic-upgrade"], "help": {"short": "If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS"}}, {"type": "integer32", "var": "$parameters.properties.applicationProfile.galleryApplications[].order", "options": ["order"], "help": {"short": "Optional, Specifies the order in which the packages have to be installed"}}, {"type": "string", "var": "$parameters.properties.applicationProfile.galleryApplications[].packageReferenceId", "options": ["package-reference-id"], "required": true, "help": {"short": "Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}"}}, {"type": "string", "var": "$parameters.properties.applicationProfile.galleryApplications[].tags", "options": ["tags"], "help": {"short": "Optional, Specifies a passthrough value for more generic context."}}, {"type": "boolean", "var": "$parameters.properties.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure", "options": ["treat-failure-as-deployment-failure"], "help": {"short": "Optional, If true, any failure for any operation in the VmApplication will fail the deployment"}}]}}]}, {"type": "@SubResource_create", "var": "$parameters.properties.availabilitySet", "options": ["availability-set"], "group": "Properties", "help": {"short": "Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. This property cannot exist along with a non-null properties.virtualMachineScaleSet reference."}}, {"type": "object", "var": "$parameters.properties.billingProfile", "options": ["billing-profile"], "group": "Properties", "help": {"short": "Specifies the billing related details of a Azure Spot virtual machine. Minimum api-version: 2019-03-01."}, "args": [{"type": "float64", "var": "$parameters.properties.billingProfile.maxPrice", "options": ["max-price"], "help": {"short": "Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01."}}]}, {"type": "object", "var": "$parameters.properties.capacityReservation", "options": ["capacity-reservation"], "group": "Properties", "help": {"short": "Specifies information about the capacity reservation that is used to allocate virtual machine. Minimum api-version: 2021-04-01."}, "args": [{"type": "@SubResource_create", "var": "$parameters.properties.capacityReservation.capacityReservationGroup", "options": ["capacity-reservation-group"], "help": {"short": "Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details."}}]}, {"type": "object", "var": "$parameters.properties.diagnosticsProfile", "options": ["diagnostics-profile"], "group": "Properties", "help": {"short": "Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15."}, "args": [{"type": "object", "var": "$parameters.properties.diagnosticsProfile.bootDiagnostics", "options": ["boot-diagnostics"], "help": {"short": "Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor."}, "args": [{"type": "boolean", "var": "$parameters.properties.diagnosticsProfile.bootDiagnostics.enabled", "options": ["enabled"], "help": {"short": "Whether boot diagnostics should be enabled on the Virtual Machine."}}, {"type": "string", "var": "$parameters.properties.diagnosticsProfile.bootDiagnostics.storageUri", "options": ["storage-uri"], "help": {"short": "Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used."}}]}]}, {"type": "string", "var": "$parameters.properties.evictionPolicy", "options": ["eviction-policy"], "group": "Properties", "help": {"short": "Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview."}, "enum": {"items": [{"name": "Deallocate", "value": "Deallocate"}, {"name": "Delete", "value": "Delete"}]}}, {"type": "string", "var": "$parameters.properties.extensionsTimeBudget", "options": ["extensions-time-budget"], "group": "Properties", "help": {"short": "Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01."}}, {"type": "object", "var": "$parameters.properties.hardwareProfile", "options": ["hardware-profile"], "group": "Properties", "help": {"short": "Specifies the hardware settings for the virtual machine."}, "args": [{"type": "string", "var": "$parameters.properties.hardwareProfile.vmSize", "options": ["vm-size"], "help": {"short": "Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. The recommended way to get the list of available sizes is using these APIs: [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes), [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list), [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). The available VM sizes depend on region and availability set."}, "enum": {"items": [{"name": "Basic_A0", "value": "Basic_A0"}, {"name": "Basic_A1", "value": "Basic_A1"}, {"name": "Basic_A2", "value": "Basic_A2"}, {"name": "Basic_A3", "value": "Basic_A3"}, {"name": "Basic_A4", "value": "Basic_A4"}, {"name": "Standard_A0", "value": "Standard_A0"}, {"name": "Standard_A1", "value": "Standard_A1"}, {"name": "Standard_A10", "value": "Standard_A10"}, {"name": "Standard_A11", "value": "Standard_A11"}, {"name": "Standard_A1_v2", "value": "Standard_A1_v2"}, {"name": "Standard_A2", "value": "Standard_A2"}, {"name": "Standard_A2_v2", "value": "Standard_A2_v2"}, {"name": "Standard_A2m_v2", "value": "Standard_A2m_v2"}, {"name": "Standard_A3", "value": "Standard_A3"}, {"name": "Standard_A4", "value": "Standard_A4"}, {"name": "Standard_A4_v2", "value": "Standard_A4_v2"}, {"name": "Standard_A4m_v2", "value": "Standard_A4m_v2"}, {"name": "Standard_A5", "value": "Standard_A5"}, {"name": "Standard_A6", "value": "Standard_A6"}, {"name": "Standard_A7", "value": "Standard_A7"}, {"name": "Standard_A8", "value": "Standard_A8"}, {"name": "Standard_A8_v2", "value": "Standard_A8_v2"}, {"name": "Standard_A8m_v2", "value": "Standard_A8m_v2"}, {"name": "Standard_A9", "value": "Standard_A9"}, {"name": "Standard_B1ms", "value": "Standard_B1ms"}, {"name": "Standard_B1s", "value": "Standard_B1s"}, {"name": "Standard_B2ms", "value": "Standard_B2ms"}, {"name": "Standard_B2s", "value": "Standard_B2s"}, {"name": "Standard_B4ms", "value": "Standard_B4ms"}, {"name": "Standard_B8ms", "value": "Standard_B8ms"}, {"name": "Standard_D1", "value": "Standard_D1"}, {"name": "Standard_D11", "value": "Standard_D11"}, {"name": "Standard_D11_v2", "value": "Standard_D11_v2"}, {"name": "Standard_D12", "value": "Standard_D12"}, {"name": "Standard_D12_v2", "value": "Standard_D12_v2"}, {"name": "Standard_D13", "value": "Standard_D13"}, {"name": "Standard_D13_v2", "value": "Standard_D13_v2"}, {"name": "Standard_D14", "value": "Standard_D14"}, {"name": "Standard_D14_v2", "value": "Standard_D14_v2"}, {"name": "Standard_D15_v2", "value": "Standard_D15_v2"}, {"name": "Standard_D16_v3", "value": "Standard_D16_v3"}, {"name": "Standard_D16s_v3", "value": "Standard_D16s_v3"}, {"name": "Standard_D1_v2", "value": "Standard_D1_v2"}, {"name": "Standard_D2", "value": "Standard_D2"}, {"name": "Standard_D2_v2", "value": "Standard_D2_v2"}, {"name": "Standard_D2_v3", "value": "Standard_D2_v3"}, {"name": "Standard_D2s_v3", "value": "Standard_D2s_v3"}, {"name": "Standard_D3", "value": "Standard_D3"}, {"name": "Standard_D32_v3", "value": "Standard_D32_v3"}, {"name": "Standard_D32s_v3", "value": "Standard_D32s_v3"}, {"name": "Standard_D3_v2", "value": "Standard_D3_v2"}, {"name": "Standard_D4", "value": "Standard_D4"}, {"name": "Standard_D4_v2", "value": "Standard_D4_v2"}, {"name": "Standard_D4_v3", "value": "Standard_D4_v3"}, {"name": "Standard_D4s_v3", "value": "Standard_D4s_v3"}, {"name": "Standard_D5_v2", "value": "Standard_D5_v2"}, {"name": "Standard_D64_v3", "value": "Standard_D64_v3"}, {"name": "Standard_D64s_v3", "value": "Standard_D64s_v3"}, {"name": "Standard_D8_v3", "value": "Standard_D8_v3"}, {"name": "Standard_D8s_v3", "value": "Standard_D8s_v3"}, {"name": "Standard_DS1", "value": "Standard_DS1"}, {"name": "Standard_DS11", "value": "Standard_DS11"}, {"name": "Standard_DS11_v2", "value": "Standard_DS11_v2"}, {"name": "Standard_DS12", "value": "Standard_DS12"}, {"name": "Standard_DS12_v2", "value": "Standard_DS12_v2"}, {"name": "Standard_DS13", "value": "Standard_DS13"}, {"name": "Standard_DS13-2_v2", "value": "Standard_DS13-2_v2"}, {"name": "Standard_DS13-4_v2", "value": "Standard_DS13-4_v2"}, {"name": "Standard_DS13_v2", "value": "Standard_DS13_v2"}, {"name": "Standard_DS14", "value": "Standard_DS14"}, {"name": "Standard_DS14-4_v2", "value": "Standard_DS14-4_v2"}, {"name": "Standard_DS14-8_v2", "value": "Standard_DS14-8_v2"}, {"name": "Standard_DS14_v2", "value": "Standard_DS14_v2"}, {"name": "Standard_DS15_v2", "value": "Standard_DS15_v2"}, {"name": "Standard_DS1_v2", "value": "Standard_DS1_v2"}, {"name": "Standard_DS2", "value": "Standard_DS2"}, {"name": "Standard_DS2_v2", "value": "Standard_DS2_v2"}, {"name": "Standard_DS3", "value": "Standard_DS3"}, {"name": "Standard_DS3_v2", "value": "Standard_DS3_v2"}, {"name": "Standard_DS4", "value": "Standard_DS4"}, {"name": "Standard_DS4_v2", "value": "Standard_DS4_v2"}, {"name": "Standard_DS5_v2", "value": "Standard_DS5_v2"}, {"name": "Standard_E16_v3", "value": "Standard_E16_v3"}, {"name": "Standard_E16s_v3", "value": "Standard_E16s_v3"}, {"name": "Standard_E2_v3", "value": "Standard_E2_v3"}, {"name": "Standard_E2s_v3", "value": "Standard_E2s_v3"}, {"name": "Standard_E32-16_v3", "value": "Standard_E32-16_v3"}, {"name": "Standard_E32-8s_v3", "value": "Standard_E32-8s_v3"}, {"name": "Standard_E32_v3", "value": "Standard_E32_v3"}, {"name": "Standard_E32s_v3", "value": "Standard_E32s_v3"}, {"name": "Standard_E4_v3", "value": "Standard_E4_v3"}, {"name": "Standard_E4s_v3", "value": "Standard_E4s_v3"}, {"name": "Standard_E64-16s_v3", "value": "Standard_E64-16s_v3"}, {"name": "Standard_E64-32s_v3", "value": "Standard_E64-32s_v3"}, {"name": "Standard_E64_v3", "value": "Standard_E64_v3"}, {"name": "Standard_E64s_v3", "value": "Standard_E64s_v3"}, {"name": "Standard_E8_v3", "value": "Standard_E8_v3"}, {"name": "Standard_E8s_v3", "value": "Standard_E8s_v3"}, {"name": "Standard_F1", "value": "Standard_F1"}, {"name": "Standard_F16", "value": "Standard_F16"}, {"name": "Standard_F16s", "value": "Standard_F16s"}, {"name": "Standard_F16s_v2", "value": "Standard_F16s_v2"}, {"name": "Standard_F1s", "value": "Standard_F1s"}, {"name": "Standard_F2", "value": "Standard_F2"}, {"name": "Standard_F2s", "value": "Standard_F2s"}, {"name": "Standard_F2s_v2", "value": "Standard_F2s_v2"}, {"name": "Standard_F32s_v2", "value": "Standard_F32s_v2"}, {"name": "Standard_F4", "value": "Standard_F4"}, {"name": "Standard_F4s", "value": "Standard_F4s"}, {"name": "Standard_F4s_v2", "value": "Standard_F4s_v2"}, {"name": "Standard_F64s_v2", "value": "Standard_F64s_v2"}, {"name": "Standard_F72s_v2", "value": "Standard_F72s_v2"}, {"name": "Standard_F8", "value": "Standard_F8"}, {"name": "Standard_F8s", "value": "Standard_F8s"}, {"name": "Standard_F8s_v2", "value": "Standard_F8s_v2"}, {"name": "Standard_G1", "value": "Standard_G1"}, {"name": "Standard_G2", "value": "Standard_G2"}, {"name": "Standard_G3", "value": "Standard_G3"}, {"name": "Standard_G4", "value": "Standard_G4"}, {"name": "Standard_G5", "value": "Standard_G5"}, {"name": "Standard_GS1", "value": "Standard_GS1"}, {"name": "Standard_GS2", "value": "Standard_GS2"}, {"name": "Standard_GS3", "value": "Standard_GS3"}, {"name": "Standard_GS4", "value": "Standard_GS4"}, {"name": "Standard_GS4-4", "value": "Standard_GS4-4"}, {"name": "Standard_GS4-8", "value": "Standard_GS4-8"}, {"name": "Standard_GS5", "value": "Standard_GS5"}, {"name": "Standard_GS5-16", "value": "Standard_GS5-16"}, {"name": "Standard_GS5-8", "value": "Standard_GS5-8"}, {"name": "Standard_H16", "value": "Standard_H16"}, {"name": "Standard_H16m", "value": "Standard_H16m"}, {"name": "Standard_H16mr", "value": "Standard_H16mr"}, {"name": "Standard_H16r", "value": "Standard_H16r"}, {"name": "Standard_H8", "value": "Standard_H8"}, {"name": "Standard_H8m", "value": "Standard_H8m"}, {"name": "Standard_L16s", "value": "Standard_L16s"}, {"name": "Standard_L32s", "value": "Standard_L32s"}, {"name": "Standard_L4s", "value": "Standard_L4s"}, {"name": "Standard_L8s", "value": "Standard_L8s"}, {"name": "Standard_M128-32ms", "value": "Standard_M128-32ms"}, {"name": "Standard_M128-64ms", "value": "Standard_M128-64ms"}, {"name": "Standard_M128ms", "value": "Standard_M128ms"}, {"name": "Standard_M128s", "value": "Standard_M128s"}, {"name": "Standard_M64-16ms", "value": "Standard_M64-16ms"}, {"name": "Standard_M64-32ms", "value": "Standard_M64-32ms"}, {"name": "Standard_M64ms", "value": "Standard_M64ms"}, {"name": "Standard_M64s", "value": "Standard_M64s"}, {"name": "Standard_NC12", "value": "Standard_NC12"}, {"name": "Standard_NC12s_v2", "value": "Standard_NC12s_v2"}, {"name": "Standard_NC12s_v3", "value": "Standard_NC12s_v3"}, {"name": "Standard_NC24", "value": "Standard_NC24"}, {"name": "Standard_NC24r", "value": "Standard_NC24r"}, {"name": "Standard_NC24rs_v2", "value": "Standard_NC24rs_v2"}, {"name": "Standard_NC24rs_v3", "value": "Standard_NC24rs_v3"}, {"name": "Standard_NC24s_v2", "value": "Standard_NC24s_v2"}, {"name": "Standard_NC24s_v3", "value": "Standard_NC24s_v3"}, {"name": "Standard_NC6", "value": "Standard_NC6"}, {"name": "Standard_NC6s_v2", "value": "Standard_NC6s_v2"}, {"name": "Standard_NC6s_v3", "value": "Standard_NC6s_v3"}, {"name": "Standard_ND12s", "value": "Standard_ND12s"}, {"name": "Standard_ND24rs", "value": "Standard_ND24rs"}, {"name": "Standard_ND24s", "value": "Standard_ND24s"}, {"name": "Standard_ND6s", "value": "Standard_ND6s"}, {"name": "Standard_NV12", "value": "Standard_NV12"}, {"name": "Standard_NV24", "value": "Standard_NV24"}, {"name": "Standard_NV6", "value": "Standard_NV6"}]}}, {"type": "object", "var": "$parameters.properties.hardwareProfile.vmSizeProperties", "options": ["vm-size-properties"], "help": {"short": "Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details."}, "args": [{"type": "integer32", "var": "$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsAvailable", "options": ["v-cp-us-available"], "help": {"short": "Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list)."}}, {"type": "integer32", "var": "$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsPerCore", "options": ["v-cp-us-per-core"], "help": {"short": "Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**"}}]}]}, {"type": "@SubResource_create", "var": "$parameters.properties.host", "options": ["host"], "group": "Properties", "help": {"short": "Specifies information about the dedicated host that the virtual machine resides in. Minimum api-version: 2018-10-01."}}, {"type": "@SubResource_create", "var": "$parameters.properties.hostGroup", "options": ["host-group"], "group": "Properties", "help": {"short": "Specifies information about the dedicated host group that the virtual machine resides in. **Note:** User cannot specify both host and hostGroup properties. Minimum api-version: 2020-06-01."}}, {"type": "string", "var": "$parameters.properties.licenseType", "options": ["license-type"], "group": "Properties", "help": {"short": "Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15"}}, {"type": "object", "var": "$parameters.properties.networkProfile", "options": ["network-profile"], "group": "Properties", "help": {"short": "Specifies the network interfaces of the virtual machine."}, "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkApiVersion", "options": ["network-api-version"], "help": {"short": "specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations"}, "enum": {"items": [{"name": "2020-11-01", "value": "2020-11-01"}, {"name": "2022-11-01", "value": "2022-11-01"}]}}, {"type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations", "options": ["network-interface-configurations"], "help": {"short": "Specifies the networking configurations that will be used to create the virtual machine networking resources."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].name", "options": ["name"], "required": true, "help": {"short": "The network interface configuration name."}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode", "options": ["auxiliary-mode"], "group": "Properties", "help": {"short": "Specifies whether the Auxiliary mode is enabled for the Network Interface resource."}, "enum": {"items": [{"name": "AcceleratedConnections", "value": "AcceleratedConnections"}, {"name": "Floating", "value": "Floating"}, {"name": "None", "value": "None"}]}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku", "options": ["auxiliary-sku"], "group": "Properties", "help": {"short": "Specifies whether the Auxiliary sku is enabled for the Network Interface resource."}, "enum": {"items": [{"name": "A1", "value": "A1"}, {"name": "A2", "value": "A2"}, {"name": "A4", "value": "A4"}, {"name": "A8", "value": "A8"}, {"name": "None", "value": "None"}]}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.deleteOption", "options": ["delete-option"], "group": "Properties", "help": {"short": "Specify what happens to the network interface when the VM is deleted"}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking", "options": ["disable-tcp-state-tracking"], "group": "Properties", "help": {"short": "Specifies whether the network interface is disabled for tcp state tracking."}}, {"type": "object", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings", "options": ["dns-settings"], "group": "Properties", "help": {"short": "The dns settings to be applied on the network interfaces."}, "args": [{"type": "array<string>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers", "options": ["dns-servers"], "help": {"short": "List of DNS servers IP addresses"}, "item": {"type": "string"}}]}, {"type": "@SubResource_create", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dscpConfiguration", "options": ["dscp-configuration"], "group": "Properties"}, {"type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking", "options": ["enable-accelerated-networking"], "group": "Properties", "help": {"short": "Specifies whether the network interface is accelerated networking-enabled."}}, {"type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableFpga", "options": ["enable-fpga"], "group": "Properties", "help": {"short": "Specifies whether the network interface is FPGA networking-enabled."}}, {"type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding", "options": ["enable-ip-forwarding"], "group": "Properties", "help": {"short": "Whether IP forwarding enabled on this NIC."}}, {"type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations", "options": ["ip-configurations"], "group": "Properties", "help": {"short": "Specifies the IP configurations of the network interface."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name", "options": ["name"], "required": true, "help": {"short": "The IP configuration name."}}, {"type": "array<@SubResource_create>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools", "options": ["application-gateway-backend-address-pools"], "group": "Properties", "help": {"short": "Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway."}, "item": {"type": "@SubResource_create"}}, {"type": "array<@SubResource_create>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups", "options": ["application-security-groups"], "group": "Properties", "help": {"short": "Specifies an array of references to application security group."}, "item": {"type": "@SubResource_create"}}, {"type": "array<@SubResource_create>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools", "options": ["load-balancer-backend-address-pools"], "group": "Properties", "help": {"short": "Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer]."}, "item": {"type": "@SubResource_create"}}, {"type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Specifies the primary network interface in case the virtual machine has more than 1 network interface."}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion", "options": ["private-ip-address-version"], "group": "Properties", "help": {"short": "Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."}, "enum": {"items": [{"name": "IPv4", "value": "IPv4"}, {"name": "IPv6", "value": "IPv6"}]}}, {"type": "object", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration", "options": ["public-ip-address-configuration"], "group": "Properties", "help": {"short": "The publicIPAddressConfiguration."}, "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name", "options": ["name"], "required": true, "help": {"short": "The publicIP address configuration name."}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption", "options": ["delete-option"], "group": "Properties", "help": {"short": "Specify what happens to the public IP address when the VM is deleted"}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"type": "object", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings", "options": ["dns-settings"], "group": "Properties", "help": {"short": "The dns settings to be applied on the publicIP addresses ."}, "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel", "options": ["domain-name-label"], "required": true, "help": {"short": "The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID."}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope", "options": ["domain-name-label-scope"], "help": {"short": "The Domain name label scope of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the hashed domain name label with policy according to the domain name label scope and vm network profile unique ID."}, "enum": {"items": [{"name": "NoReuse", "value": "NoReuse"}, {"name": "ResourceGroupReuse", "value": "ResourceGroupReuse"}, {"name": "SubscriptionReuse", "value": "SubscriptionReuse"}, {"name": "TenantReuse", "value": "TenantReuse"}]}}]}, {"type": "integer32", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes", "options": ["idle-timeout-in-minutes"], "group": "Properties", "help": {"short": "The idle timeout of the public IP address."}}, {"type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags", "options": ["ip-tags"], "group": "Properties", "help": {"short": "The list of IP tags associated with the public IP address."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType", "options": ["ip-tag-type"], "help": {"short": "IP tag type. Example: FirstPartyUsage."}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag", "options": ["tag"], "help": {"short": "IP tag associated with the public IP. Example: SQL, Storage etc."}}]}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion", "options": ["public-ip-address-version"], "group": "Properties", "help": {"short": "Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."}, "enum": {"items": [{"name": "IPv4", "value": "IPv4"}, {"name": "IPv6", "value": "IPv6"}]}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAllocationMethod", "options": ["public-ip-allocation-method"], "group": "Properties", "help": {"short": "Specify the public IP allocation type"}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"type": "@SubResource_create", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix", "options": ["public-ip-prefix"], "group": "Properties", "help": {"short": "The PublicIPPrefix from which to allocate publicIP addresses."}}, {"type": "object", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku", "options": ["sku"], "help": {"short": "Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible."}, "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name", "options": ["name"], "help": {"short": "Specify public IP sku name"}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Standard", "value": "Standard"}]}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier", "options": ["tier"], "help": {"short": "Specify public IP sku tier"}, "enum": {"items": [{"name": "Global", "value": "Global"}, {"name": "Regional", "value": "Regional"}]}}]}]}, {"type": "@SubResource_create", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "Specifies the identifier of the subnet."}}]}}, {"type": "@SubResource_create", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup", "options": ["network-security-group"], "group": "Properties", "help": {"short": "The network security group."}}, {"type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Specifies the primary network interface in case the virtual machine has more than 1 network interface."}}]}}, {"type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaces", "options": ["network-interfaces"], "help": {"short": "Specifies the list of resource Ids for the network interfaces associated with the virtual machine."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaces[].id", "options": ["id"], "help": {"short": "Resource Id"}}, {"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaces[].properties.deleteOption", "options": ["delete-option"], "group": "Properties", "help": {"short": "Specify what happens to the network interface when the VM is deleted"}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaces[].properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Specifies the primary network interface in case the virtual machine has more than 1 network interface."}}]}}]}, {"type": "object", "var": "$parameters.properties.osProfile", "options": ["os-profile"], "group": "Properties", "help": {"short": "Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned."}, "args": [{"type": "string", "var": "$parameters.properties.osProfile.adminPassword", "options": ["admin-password"], "help": {"short": "Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)"}}, {"type": "string", "var": "$parameters.properties.osProfile.adminUsername", "options": ["admin-username"], "help": {"short": "Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters."}}, {"type": "boolean", "var": "$parameters.properties.osProfile.allowExtensionOperations", "options": ["allow-extension-operations"], "help": {"short": "Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine."}}, {"type": "string", "var": "$parameters.properties.osProfile.computerName", "options": ["computer-name"], "help": {"short": "Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. **Max-length (Windows):** 15 characters. **Max-length (Linux):** 64 characters. For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules)."}}, {"type": "string", "var": "$parameters.properties.osProfile.customData", "options": ["custom-data"], "help": {"short": "Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. **Note: Do not pass any secrets or passwords in customData property.** This property cannot be updated after the VM is created. The property 'customData' is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/). For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)."}}, {"type": "object", "var": "$parameters.properties.osProfile.linuxConfiguration", "options": ["linux-configuration"], "help": {"short": "Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros)."}, "args": [{"type": "boolean", "var": "$parameters.properties.osProfile.linuxConfiguration.disablePasswordAuthentication", "options": ["disable-password-authentication"], "help": {"short": "Specifies whether password authentication should be disabled."}}, {"type": "boolean", "var": "$parameters.properties.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates", "options": ["enable-vm-agent-platform-updates"], "help": {"short": "Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false."}}, {"type": "object", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings", "options": ["patch-settings"], "help": {"short": "[Preview Feature] Specifies settings related to VM Guest Patching on Linux."}, "args": [{"type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.assessmentMode", "options": ["assessment-mode"], "help": {"short": "Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."}, "enum": {"items": [{"name": "AutomaticByPlatform", "value": "AutomaticByPlatform"}, {"name": "ImageDefault", "value": "ImageDefault"}]}}, {"type": "object", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings", "options": ["automatic-by-platform-settings"], "help": {"short": "Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux."}, "args": [{"type": "boolean", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule", "options": ["bypass-platform-safety-checks-on-user-schedule"], "help": {"short": "Enables customer to schedule patching without accidental upgrades"}}, {"type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting", "options": ["reboot-setting"], "help": {"short": "Specifies the reboot setting for all AutomaticByPlatform patch installation operations."}, "enum": {"items": [{"name": "Always", "value": "Always"}, {"name": "IfRequired", "value": "IfRequired"}, {"name": "Never", "value": "Never"}, {"name": "Unknown", "value": "Unknown"}]}}]}, {"type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.patchMode", "options": ["patch-mode"], "help": {"short": "Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true"}, "enum": {"items": [{"name": "AutomaticByPlatform", "value": "AutomaticByPlatform"}, {"name": "ImageDefault", "value": "ImageDefault"}]}}]}, {"type": "boolean", "var": "$parameters.properties.osProfile.linuxConfiguration.provisionVMAgent", "options": ["provision-vm-agent"], "help": {"short": "Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."}}, {"type": "object", "var": "$parameters.properties.osProfile.linuxConfiguration.ssh", "options": ["ssh"], "help": {"short": "Specifies the ssh key configuration for a Linux OS."}, "args": [{"type": "array<object>", "var": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys", "options": ["public-keys"], "help": {"short": "The list of SSH public keys used to authenticate with linux based VMs."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].keyData", "options": ["key-data"], "help": {"short": "SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed)."}}, {"type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].path", "options": ["path"], "help": {"short": "Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"}}]}}]}]}, {"type": "boolean", "var": "$parameters.properties.osProfile.requireGuestProvisionSignal", "options": ["require-guest-provision-signal"], "help": {"short": "Optional property which must either be set to True or omitted."}}, {"type": "array<object>", "var": "$parameters.properties.osProfile.secrets", "options": ["secrets"], "help": {"short": "Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."}, "item": {"type": "object", "args": [{"type": "@SubResource_create", "var": "$parameters.properties.osProfile.secrets[].sourceVault", "options": ["source-vault"], "help": {"short": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates."}}, {"type": "array<object>", "var": "$parameters.properties.osProfile.secrets[].vaultCertificates", "options": ["vault-certificates"], "help": {"short": "The list of key vault references in SourceVault which contain certificates."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateStore", "options": ["certificate-store"], "help": {"short": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted."}}, {"type": "string", "var": "$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateUrl", "options": ["certificate-url"], "help": {"short": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."}}]}}]}}, {"type": "object", "var": "$parameters.properties.osProfile.windowsConfiguration", "options": ["windows-configuration"], "help": {"short": "Specifies Windows operating system settings on the virtual machine."}, "args": [{"type": "array<object>", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent", "options": ["additional-unattend-content"], "help": {"short": "Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].componentName", "options": ["component-name"], "help": {"short": "The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup."}, "enum": {"items": [{"name": "Microsoft-Windows-Shell-Setup", "value": "Microsoft-Windows-Shell-Setup"}]}}, {"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].content", "options": ["content"], "help": {"short": "Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted."}}, {"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].passName", "options": ["pass-name"], "help": {"short": "The pass name. Currently, the only allowable value is OobeSystem."}, "enum": {"items": [{"name": "OobeSystem", "value": "OobeSystem"}]}}, {"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].settingName", "options": ["setting-name"], "help": {"short": "Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon."}, "enum": {"items": [{"name": "AutoLogon", "value": "AutoLogon"}, {"name": "FirstLogonCommands", "value": "FirstLogonCommands"}]}}]}}, {"type": "boolean", "var": "$parameters.properties.osProfile.windowsConfiguration.enableAutomaticUpdates", "options": ["enable-automatic-updates"], "help": {"short": "Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning."}}, {"type": "object", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings", "options": ["patch-settings"], "help": {"short": "[Preview Feature] Specifies settings related to VM Guest Patching on Windows."}, "args": [{"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.assessmentMode", "options": ["assessment-mode"], "help": {"short": "Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. "}, "enum": {"items": [{"name": "AutomaticByPlatform", "value": "AutomaticByPlatform"}, {"name": "ImageDefault", "value": "ImageDefault"}]}}, {"type": "object", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings", "options": ["automatic-by-platform-settings"], "help": {"short": "Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows."}, "args": [{"type": "boolean", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule", "options": ["bypass-platform-safety-checks-on-user-schedule"], "help": {"short": "Enables customer to schedule patching without accidental upgrades"}}, {"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting", "options": ["reboot-setting"], "help": {"short": "Specifies the reboot setting for all AutomaticByPlatform patch installation operations."}, "enum": {"items": [{"name": "Always", "value": "Always"}, {"name": "IfRequired", "value": "IfRequired"}, {"name": "Never", "value": "Never"}, {"name": "Unknown", "value": "Unknown"}]}}]}, {"type": "boolean", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching", "options": ["enable-hotpatching"], "help": {"short": "Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'."}}, {"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.patchMode", "options": ["patch-mode"], "help": {"short": "Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true "}, "enum": {"items": [{"name": "AutomaticByOS", "value": "AutomaticByOS"}, {"name": "AutomaticByPlatform", "value": "AutomaticByPlatform"}, {"name": "Manual", "value": "Manual"}]}}]}, {"type": "boolean", "var": "$parameters.properties.osProfile.windowsConfiguration.provisionVMAgent", "options": ["provision-vm-agent"], "help": {"short": "Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."}}, {"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.timeZone", "options": ["time-zone"], "help": {"short": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones)."}}, {"type": "object", "var": "$parameters.properties.osProfile.windowsConfiguration.winRM", "options": ["win-rm"], "help": {"short": "Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell."}, "args": [{"type": "array<object>", "var": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners", "options": ["listeners"], "help": {"short": "The list of Windows Remote Management listeners"}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl", "options": ["certificate-url"], "help": {"short": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."}}, {"type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].protocol", "options": ["protocol"], "help": {"short": "Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**"}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}]}}]}}]}]}]}, {"type": "integer32", "var": "$parameters.properties.platformFaultDomain", "options": ["platform-fault-domain"], "group": "Properties", "help": {"short": "Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set. The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' greater than 1. This property cannot be updated once the Virtual Machine is created. Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api‐version: 2020‐12‐01."}}, {"type": "string", "var": "$parameters.properties.priority", "options": ["priority"], "group": "Properties", "help": {"short": "Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01"}, "enum": {"items": [{"name": "Low", "value": "Low"}, {"name": "Regular", "value": "Regular"}, {"name": "Spot", "value": "Spot"}]}}, {"type": "@SubResource_create", "var": "$parameters.properties.proximityPlacementGroup", "options": ["proximity-placement-group"], "group": "Properties", "help": {"short": "Specifies information about the proximity placement group that the virtual machine should be assigned to. Minimum api-version: 2018-04-01."}}, {"type": "object", "var": "$parameters.properties.scheduledEventsPolicy", "options": ["scheduled-events-policy"], "group": "Properties", "help": {"short": "Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the virtual machine."}, "args": [{"type": "object", "var": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets", "options": ["scheduled-events-additional-publishing-targets"], "help": {"short": "The configuration parameters used while publishing scheduledEventsAdditionalPublishingTargets."}, "args": [{"type": "object", "var": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph", "options": ["event-grid-and-resource-graph"], "help": {"short": "The configuration parameters used while creating eventGridAndResourceGraph Scheduled Event setting."}, "args": [{"type": "boolean", "var": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph.enable", "options": ["enable"], "help": {"short": "Specifies if event grid and resource graph is enabled for Scheduled event related configurations."}}]}]}, {"type": "object", "var": "$parameters.properties.scheduledEventsPolicy.userInitiatedReboot", "options": ["user-initiated-reboot"], "help": {"short": "The configuration parameters used while creating userInitiatedReboot scheduled event setting creation."}, "args": [{"type": "boolean", "var": "$parameters.properties.scheduledEventsPolicy.userInitiatedReboot.automaticallyApprove", "options": ["automatically-approve"], "help": {"short": "Specifies Reboot Scheduled Event related configurations."}}]}, {"type": "object", "var": "$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy", "options": ["user-initiated-redeploy"], "help": {"short": "The configuration parameters used while creating userInitiatedRedeploy scheduled event setting creation."}, "args": [{"type": "boolean", "var": "$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy.automaticallyApprove", "options": ["automatically-approve"], "help": {"short": "Specifies Redeploy Scheduled Event related configurations."}}]}]}, {"type": "object", "var": "$parameters.properties.scheduledEventsProfile", "options": ["scheduled-events-profile"], "group": "Properties", "help": {"short": "Specifies Scheduled Event related configurations."}, "args": [{"type": "object", "var": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile", "options": ["os-image-notification-profile"], "help": {"short": "Specifies OS Image Scheduled Event related configurations."}, "args": [{"type": "boolean", "var": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.enable", "options": ["enable"], "help": {"short": "Specifies whether the OS Image Scheduled event is enabled or disabled."}}, {"type": "string", "var": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout", "options": ["not-before-timeout"], "help": {"short": "Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must be 15 minutes (PT15M)"}}]}, {"type": "object", "var": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile", "options": ["terminate-notification-profile"], "help": {"short": "Specifies Terminate Scheduled Event related configurations."}, "args": [{"type": "boolean", "var": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.enable", "options": ["enable"], "help": {"short": "Specifies whether the Terminate Scheduled event is enabled or disabled."}}, {"type": "string", "var": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout", "options": ["not-before-timeout"], "help": {"short": "Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)"}}]}]}, {"type": "object", "var": "$parameters.properties.securityProfile", "options": ["security-profile"], "group": "Properties", "help": {"short": "Specifies the Security related profile settings for the virtual machine."}, "args": [{"type": "boolean", "var": "$parameters.properties.securityProfile.encryptionAtHost", "options": ["encryption-at-host"], "help": {"short": "This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource."}}, {"type": "object", "var": "$parameters.properties.securityProfile.encryptionIdentity", "options": ["encryption-identity"], "help": {"short": "Specifies the Managed Identity used by ADE to get access token for keyvault operations."}, "args": [{"type": "string", "var": "$parameters.properties.securityProfile.encryptionIdentity.userAssignedIdentityResourceId", "options": ["user-assigned-identity-resource-id"], "help": {"short": "Specifies ARM Resource ID of one of the user identities associated with the VM."}}]}, {"type": "object", "var": "$parameters.properties.securityProfile.proxyAgentSettings", "options": ["proxy-agent-settings"], "help": {"short": "Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01."}, "args": [{"type": "boolean", "var": "$parameters.properties.securityProfile.proxyAgentSettings.enabled", "options": ["enabled"], "help": {"short": "Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set."}}, {"type": "@HostEndpointSettings_create", "var": "$parameters.properties.securityProfile.proxyAgentSettings.imds", "options": ["imds"], "help": {"short": "Specifies the IMDS endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01."}}, {"type": "integer32", "var": "$parameters.properties.securityProfile.proxyAgentSettings.keyIncarnationId", "options": ["key-incarnation-id"], "help": {"short": "Increase the value of this property allows user to reset the key used for securing communication channel between guest and host."}}, {"type": "string", "var": "$parameters.properties.securityProfile.proxyAgentSettings.mode", "options": ["mode"], "help": {"short": "Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode."}, "enum": {"items": [{"name": "Audit", "value": "Audit"}, {"name": "Enforce", "value": "Enforce"}]}}, {"type": "object", "var": "$parameters.properties.securityProfile.proxyAgentSettings.wireServer", "options": ["wire-server"], "help": {"short": "Specifies the Wire Server endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01."}, "args": [{"type": "string", "var": "@HostEndpointSettings_create.inVMAccessControlProfileReferenceId", "options": ["in-vm-access-control-profile-reference-id"], "help": {"short": "Specifies the InVMAccessControlProfileVersion resource id in the format of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{profile}/versions/{version}"}}, {"type": "string", "var": "@HostEndpointSettings_create.mode", "options": ["mode"], "help": {"short": "Specifies the execution mode. In Audit mode, the system acts as if it is enforcing the access control policy, including emitting access denial entries in the logs but it does not actually deny any requests to host endpoints. In Enforce mode, the system will enforce the access control and it is the recommended mode of operation."}, "enum": {"items": [{"name": "Audit", "value": "Audit"}, {"name": "Disabled", "value": "Disabled"}, {"name": "Enforce", "value": "Enforce"}]}}], "cls": "HostEndpointSettings_create"}]}, {"type": "string", "var": "$parameters.properties.securityProfile.securityType", "options": ["security-type"], "help": {"short": "Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set."}, "enum": {"items": [{"name": "ConfidentialVM", "value": "ConfidentialVM"}, {"name": "TrustedLaunch", "value": "TrustedLaunch"}]}}, {"type": "object", "var": "$parameters.properties.securityProfile.uefiSettings", "options": ["uefi-settings"], "help": {"short": "Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01."}, "args": [{"type": "boolean", "var": "$parameters.properties.securityProfile.uefiSettings.secureBootEnabled", "options": ["secure-boot-enabled"], "help": {"short": "Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01."}}, {"type": "boolean", "var": "$parameters.properties.securityProfile.uefiSettings.vTpmEnabled", "options": ["v-tpm-enabled"], "help": {"short": "Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01."}}]}]}, {"type": "object", "var": "$parameters.properties.storageProfile", "options": ["storage-profile"], "group": "Properties", "help": {"short": "Specifies the storage settings for the virtual machine disks."}, "args": [{"type": "boolean", "var": "$parameters.properties.storageProfile.alignRegionalDisksToVMZone", "options": ["align-regional-disks-to-vm-zone"], "help": {"short": "Specifies whether the regional disks should be aligned/moved to the VM zone. This is applicable only for VMs with placement property set. Please note that this change is irreversible. Minimum api-version: 2024-11-01."}}, {"type": "array<object>", "var": "$parameters.properties.storageProfile.dataDisks", "options": ["data-disks"], "help": {"short": "Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."}, "item": {"type": "object", "args": [{"type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].caching", "options": ["caching"], "help": {"short": "Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**"}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "ReadOnly", "value": "ReadOnly"}, {"name": "ReadWrite", "value": "ReadWrite"}]}}, {"type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].createOption", "options": ["create-option"], "required": true, "help": {"short": "Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine data disk. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described. **Empty:** This value is used when creating an empty data disk. **Copy:** This value is used to create a data disk from a snapshot or another disk. **Restore:** This value is used to create a data disk from a disk restore point."}, "enum": {"items": [{"name": "Attach", "value": "Attach"}, {"name": "Copy", "value": "Copy"}, {"name": "Empty", "value": "Empty"}, {"name": "FromImage", "value": "FromImage"}, {"name": "Restore", "value": "Restore"}]}}, {"type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].deleteOption", "options": ["delete-option"], "help": {"short": "Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the data disk is deleted when VM is deleted. **Detach.** If this value is used, the data disk is retained after VM is deleted. The default value is set to **Detach**."}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].detachOption", "options": ["detach-option"], "help": {"short": "Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach.** detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'."}, "enum": {"items": [{"name": "ForceDetach", "value": "ForceDetach"}]}}, {"type": "integer32", "var": "$parameters.properties.storageProfile.dataDisks[].diskSizeGB", "options": ["disk-size-gb"], "help": {"short": "Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."}}, {"type": "@VirtualHardDisk_create", "var": "$parameters.properties.storageProfile.dataDisks[].image", "options": ["image"], "help": {"short": "The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."}}, {"type": "integer32", "var": "$parameters.properties.storageProfile.dataDisks[].lun", "options": ["lun"], "required": true, "help": {"short": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."}}, {"type": "@ManagedDiskParameters_create", "var": "$parameters.properties.storageProfile.dataDisks[].managedDisk", "options": ["managed-disk"], "help": {"short": "The managed disk parameters."}}, {"type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].name", "options": ["name"], "help": {"short": "The disk name."}}, {"type": "object", "var": "$parameters.properties.storageProfile.dataDisks[].sourceResource", "options": ["source-resource"], "help": {"short": "The source resource identifier. It can be a snapshot, or disk restore point from which to create a disk."}, "args": [{"type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].sourceResource.id", "options": ["id"], "help": {"short": "The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."}}]}, {"type": "boolean", "var": "$parameters.properties.storageProfile.dataDisks[].toBeDetached", "options": ["to-be-detached"], "help": {"short": "Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset"}}, {"type": "@VirtualHardDisk_create", "var": "$parameters.properties.storageProfile.dataDisks[].vhd", "options": ["vhd"], "help": {"short": "The virtual hard disk."}}, {"type": "boolean", "var": "$parameters.properties.storageProfile.dataDisks[].writeAcceleratorEnabled", "options": ["write-accelerator-enabled"], "help": {"short": "Specifies whether writeAccelerator should be enabled or disabled on the disk."}}]}}, {"type": "string", "var": "$parameters.properties.storageProfile.diskControllerType", "options": ["disk-controller-type"], "help": {"short": "Specifies the disk controller type configured for the VM. **Note:** This property will be set to the default disk controller type if not specified provided virtual machine is being created with 'hyperVGeneration' set to V2 based on the capabilities of the operating system disk and VM size from the the specified minimum api version. You need to deallocate the VM before updating its disk controller type unless you are updating the VM size in the VM configuration which implicitly deallocates and reallocates the VM. Minimum api-version: 2022-08-01."}, "enum": {"items": [{"name": "NVMe", "value": "NVMe"}, {"name": "SCSI", "value": "SCSI"}]}}, {"type": "object", "var": "$parameters.properties.storageProfile.imageReference", "options": ["image-reference"], "help": {"short": "Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations."}, "args": [{"type": "string", "var": "$parameters.properties.storageProfile.imageReference.communityGalleryImageId", "options": ["community-gallery-image-id"], "help": {"short": "Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call."}}, {"type": "string", "var": "$parameters.properties.storageProfile.imageReference.id", "options": ["id"], "help": {"short": "Resource Id"}}, {"type": "string", "var": "$parameters.properties.storageProfile.imageReference.offer", "options": ["offer"], "help": {"short": "Specifies the offer of the platform image or marketplace image used to create the virtual machine."}}, {"type": "string", "var": "$parameters.properties.storageProfile.imageReference.publisher", "options": ["publisher"], "help": {"short": "The image publisher."}}, {"type": "string", "var": "$parameters.properties.storageProfile.imageReference.sharedGalleryImageId", "options": ["shared-gallery-image-id"], "help": {"short": "Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call."}}, {"type": "string", "var": "$parameters.properties.storageProfile.imageReference.sku", "options": ["sku"], "help": {"short": "The image SKU."}}, {"type": "string", "var": "$parameters.properties.storageProfile.imageReference.version", "options": ["version"], "help": {"short": "Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input."}}]}, {"type": "object", "var": "$parameters.properties.storageProfile.osDisk", "options": ["os-disk"], "help": {"short": "Specifies information about the operating system disk used by the virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."}, "args": [{"type": "string", "var": "$parameters.properties.storageProfile.osDisk.caching", "options": ["caching"], "help": {"short": "Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**"}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "ReadOnly", "value": "ReadOnly"}, {"name": "ReadWrite", "value": "ReadWrite"}]}}, {"type": "string", "var": "$parameters.properties.storageProfile.osDisk.createOption", "options": ["create-option"], "required": true, "help": {"short": "Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described."}, "enum": {"items": [{"name": "Attach", "value": "Attach"}, {"name": "Copy", "value": "Copy"}, {"name": "Empty", "value": "Empty"}, {"name": "FromImage", "value": "FromImage"}, {"name": "Restore", "value": "Restore"}]}}, {"type": "string", "var": "$parameters.properties.storageProfile.osDisk.deleteOption", "options": ["delete-option"], "help": {"short": "Specifies whether OS Disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the OS disk is deleted when VM is deleted. **Detach.** If this value is used, the os disk is retained after VM is deleted. The default value is set to **Detach**. For an ephemeral OS Disk, the default value is set to **Delete**. The user cannot change the delete option for an ephemeral OS Disk."}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"type": "object", "var": "$parameters.properties.storageProfile.osDisk.diffDiskSettings", "options": ["diff-disk-settings"], "help": {"short": "Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine."}, "args": [{"type": "string", "var": "$parameters.properties.storageProfile.osDisk.diffDiskSettings.option", "options": ["option"], "help": {"short": "Specifies the ephemeral disk settings for operating system disk."}, "enum": {"items": [{"name": "Local", "value": "Local"}]}}, {"type": "string", "var": "$parameters.properties.storageProfile.osDisk.diffDiskSettings.placement", "options": ["placement"], "help": {"short": "Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk,** **NvmeDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** or **NvmeDisk** is used. Refer to the VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk. Minimum api-version for NvmeDisk: 2024-03-01."}, "enum": {"items": [{"name": "CacheDisk", "value": "CacheDisk"}, {"name": "NvmeDisk", "value": "NvmeDisk"}, {"name": "ResourceDisk", "value": "ResourceDisk"}]}}]}, {"type": "integer32", "var": "$parameters.properties.storageProfile.osDisk.diskSizeGB", "options": ["disk-size-gb"], "help": {"short": "Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."}}, {"type": "object", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings", "options": ["encryption-settings"], "help": {"short": "Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15."}, "args": [{"type": "object", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey", "options": ["disk-encryption-key"], "help": {"short": "Specifies the location of the disk encryption key, which is a Key Vault Secret."}, "args": [{"type": "string", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl", "options": ["secret-url"], "required": true, "help": {"short": "The URL referencing a secret in a Key Vault."}}, {"type": "object", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault", "options": ["source-vault"], "required": true, "help": {"short": "The relative URL of the Key Vault containing the secret."}, "args": [{"type": "string", "var": "@SubResource_create.id", "options": ["id"], "help": {"short": "Resource Id"}}], "cls": "SubResource_create"}]}, {"type": "boolean", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.enabled", "options": ["enabled"], "help": {"short": "Specifies whether disk encryption should be enabled on the virtual machine."}}, {"type": "object", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey", "options": ["key-encryption-key"], "help": {"short": "Specifies the location of the key encryption key in Key Vault."}, "args": [{"type": "string", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl", "options": ["key-url"], "required": true, "help": {"short": "The URL referencing a key encryption key in Key Vault."}}, {"type": "@SubResource_create", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault", "options": ["source-vault"], "required": true, "help": {"short": "The relative URL of the Key Vault containing the key."}}]}]}, {"type": "@VirtualHardDisk_create", "var": "$parameters.properties.storageProfile.osDisk.image", "options": ["image"], "help": {"short": "The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."}}, {"type": "object", "var": "$parameters.properties.storageProfile.osDisk.managedDisk", "options": ["managed-disk"], "help": {"short": "The managed disk parameters."}, "args": [{"type": "object", "var": "@ManagedDiskParameters_create.diskEncryptionSet", "options": ["disk-encryption-set"], "help": {"short": "Specifies the customer managed disk encryption set resource id for the managed disk."}, "args": [{"type": "string", "var": "@DiskEncryptionSetParameters_create.id", "options": ["id"], "help": {"short": "Resource Id"}}], "cls": "DiskEncryptionSetParameters_create"}, {"type": "string", "var": "@ManagedDiskParameters_create.id", "options": ["id"], "help": {"short": "Resource Id"}}, {"type": "object", "var": "@ManagedDiskParameters_create.securityProfile", "options": ["security-profile"], "help": {"short": "Specifies the security profile for the managed disk."}, "args": [{"type": "@DiskEncryptionSetParameters_create", "var": "@ManagedDiskParameters_create.securityProfile.diskEncryptionSet", "options": ["disk-encryption-set"], "help": {"short": "Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob."}}, {"type": "string", "var": "@ManagedDiskParameters_create.securityProfile.securityEncryptionType", "options": ["security-encryption-type"], "help": {"short": "Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob.. **Note:** It can be set for only Confidential VMs."}, "enum": {"items": [{"name": "DiskWithVMGuestState", "value": "DiskWithVMGuestState"}, {"name": "NonPersistedTPM", "value": "NonPersistedTPM"}, {"name": "VMGuestStateOnly", "value": "VMGuestStateOnly"}]}}]}, {"type": "string", "var": "@ManagedDiskParameters_create.storageAccountType", "options": ["storage-account-type"], "help": {"short": "Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk."}, "enum": {"items": [{"name": "PremiumV2_LRS", "value": "PremiumV2_LRS"}, {"name": "Premium_LRS", "value": "Premium_LRS"}, {"name": "Premium_ZRS", "value": "Premium_ZRS"}, {"name": "StandardSSD_LRS", "value": "StandardSSD_LRS"}, {"name": "StandardSSD_ZRS", "value": "StandardSSD_ZRS"}, {"name": "Standard_LRS", "value": "Standard_LRS"}, {"name": "UltraSSD_LRS", "value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_create"}, {"type": "string", "var": "$parameters.properties.storageProfile.osDisk.name", "options": ["name"], "help": {"short": "The disk name."}}, {"type": "string", "var": "$parameters.properties.storageProfile.osDisk.osType", "options": ["os-type"], "help": {"short": "This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**"}, "enum": {"items": [{"name": "Linux", "value": "Linux"}, {"name": "Windows", "value": "Windows"}]}}, {"type": "object", "var": "$parameters.properties.storageProfile.osDisk.vhd", "options": ["vhd"], "help": {"short": "The virtual hard disk."}, "args": [{"type": "string", "var": "@VirtualHardDisk_create.uri", "options": ["uri"], "help": {"short": "Specifies the virtual hard disk's uri."}}], "cls": "VirtualHardDisk_create"}, {"type": "boolean", "var": "$parameters.properties.storageProfile.osDisk.writeAcceleratorEnabled", "options": ["write-accelerator-enabled"], "help": {"short": "Specifies whether writeAccelerator should be enabled or disabled on the disk."}}]}]}, {"type": "string", "var": "$parameters.properties.userData", "options": ["user-data"], "group": "Properties", "help": {"short": "UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01."}}, {"type": "@SubResource_create", "var": "$parameters.properties.virtualMachineScaleSet", "options": ["virtual-machine-scale-set"], "group": "Properties", "help": {"short": "Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. This property cannot exist along with a non-null properties.availabilitySet reference. Minimum api‐version: 2019‐03‐01."}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "VirtualMachines_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}, "header": {"params": [{"type": "string", "name": "If-Match", "arg": "$Header.If-Match"}, {"type": "string", "name": "If-None-Match", "arg": "$Header.If-None-Match"}]}, "body": {"json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "extendedLocation", "arg": "$parameters.extendedLocation", "props": [{"type": "string", "name": "name", "arg": "$parameters.extendedLocation.name"}, {"type": "string", "name": "type", "arg": "$parameters.extendedLocation.type", "enum": {"items": [{"value": "EdgeZone"}]}}]}, {"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}], "userAssigned": {"action": "create", "type": "array<string>", "name": "userAssigned", "arg": "$parameters.identity.userAssigned", "item": {"action": "create", "type": "string"}}, "systemAssigned": {"action": "create", "type": "string", "name": "systemAssigned", "arg": "$parameters.identity.systemAssigned"}}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location", "required": true}, {"type": "object", "name": "placement", "arg": "$parameters.placement", "props": [{"type": "array<string>", "name": "excludeZones", "arg": "$parameters.placement.excludeZones", "item": {"type": "string"}}, {"type": "array<string>", "name": "includeZones", "arg": "$parameters.placement.includeZones", "item": {"type": "string"}}, {"type": "string", "name": "zonePlacementPolicy", "arg": "$parameters.placement.zonePlacementPolicy", "enum": {"items": [{"value": "Any"}]}}]}, {"type": "object", "name": "plan", "arg": "$parameters.plan", "props": [{"type": "string", "name": "name", "arg": "$parameters.plan.name"}, {"type": "string", "name": "product", "arg": "$parameters.plan.product"}, {"type": "string", "name": "promotionCode", "arg": "$parameters.plan.promotionCode"}, {"type": "string", "name": "publisher", "arg": "$parameters.plan.publisher"}]}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "additionalCapabilities", "arg": "$parameters.properties.additionalCapabilities", "props": [{"type": "boolean", "name": "hibernationEnabled", "arg": "$parameters.properties.additionalCapabilities.hibernationEnabled"}, {"type": "boolean", "name": "ultraSSDEnabled", "arg": "$parameters.properties.additionalCapabilities.ultraSSDEnabled"}]}, {"type": "object", "name": "applicationProfile", "arg": "$parameters.properties.applicationProfile", "props": [{"type": "array<object>", "name": "galleryApplications", "arg": "$parameters.properties.applicationProfile.galleryApplications", "item": {"type": "object", "props": [{"type": "string", "name": "configurationReference", "arg": "$parameters.properties.applicationProfile.galleryApplications[].configurationReference"}, {"type": "boolean", "name": "enableAutomaticUpgrade", "arg": "$parameters.properties.applicationProfile.galleryApplications[].enableAutomaticUpgrade"}, {"type": "integer32", "name": "order", "arg": "$parameters.properties.applicationProfile.galleryApplications[].order"}, {"type": "string", "name": "packageReferenceId", "arg": "$parameters.properties.applicationProfile.galleryApplications[].packageReferenceId", "required": true}, {"type": "string", "name": "tags", "arg": "$parameters.properties.applicationProfile.galleryApplications[].tags"}, {"type": "boolean", "name": "treatFailureAsDeploymentFailure", "arg": "$parameters.properties.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure"}]}, "identifiers": ["packageReferenceId"]}]}, {"type": "@SubResource_create", "name": "availabilitySet", "arg": "$parameters.properties.availabilitySet"}, {"type": "object", "name": "billingProfile", "arg": "$parameters.properties.billingProfile", "props": [{"type": "float64", "name": "maxPrice", "arg": "$parameters.properties.billingProfile.maxPrice"}]}, {"type": "object", "name": "capacityReservation", "arg": "$parameters.properties.capacityReservation", "props": [{"type": "@SubResource_create", "name": "capacityReservationGroup", "arg": "$parameters.properties.capacityReservation.capacityReservationGroup"}]}, {"type": "object", "name": "diagnosticsProfile", "arg": "$parameters.properties.diagnosticsProfile", "props": [{"type": "object", "name": "bootDiagnostics", "arg": "$parameters.properties.diagnosticsProfile.bootDiagnostics", "props": [{"type": "boolean", "name": "enabled", "arg": "$parameters.properties.diagnosticsProfile.bootDiagnostics.enabled"}, {"type": "string", "name": "storageUri", "arg": "$parameters.properties.diagnosticsProfile.bootDiagnostics.storageUri"}]}]}, {"type": "string", "name": "evictionPolicy", "arg": "$parameters.properties.evictionPolicy", "enum": {"items": [{"value": "Deallocate"}, {"value": "Delete"}]}}, {"type": "string", "name": "extensionsTimeBudget", "arg": "$parameters.properties.extensionsTimeBudget"}, {"type": "object", "name": "hardwareProfile", "arg": "$parameters.properties.hardwareProfile", "props": [{"type": "string", "name": "vmSize", "arg": "$parameters.properties.hardwareProfile.vmSize", "enum": {"items": [{"value": "Basic_A0"}, {"value": "Basic_A1"}, {"value": "Basic_A2"}, {"value": "Basic_A3"}, {"value": "Basic_A4"}, {"value": "Standard_A0"}, {"value": "Standard_A1"}, {"value": "Standard_A10"}, {"value": "Standard_A11"}, {"value": "Standard_A1_v2"}, {"value": "Standard_A2"}, {"value": "Standard_A2_v2"}, {"value": "Standard_A2m_v2"}, {"value": "Standard_A3"}, {"value": "Standard_A4"}, {"value": "Standard_A4_v2"}, {"value": "Standard_A4m_v2"}, {"value": "Standard_A5"}, {"value": "Standard_A6"}, {"value": "Standard_A7"}, {"value": "Standard_A8"}, {"value": "Standard_A8_v2"}, {"value": "Standard_A8m_v2"}, {"value": "Standard_A9"}, {"value": "Standard_B1ms"}, {"value": "Standard_B1s"}, {"value": "Standard_B2ms"}, {"value": "Standard_B2s"}, {"value": "Standard_B4ms"}, {"value": "Standard_B8ms"}, {"value": "Standard_D1"}, {"value": "Standard_D11"}, {"value": "Standard_D11_v2"}, {"value": "Standard_D12"}, {"value": "Standard_D12_v2"}, {"value": "Standard_D13"}, {"value": "Standard_D13_v2"}, {"value": "Standard_D14"}, {"value": "Standard_D14_v2"}, {"value": "Standard_D15_v2"}, {"value": "Standard_D16_v3"}, {"value": "Standard_D16s_v3"}, {"value": "Standard_D1_v2"}, {"value": "Standard_D2"}, {"value": "Standard_D2_v2"}, {"value": "Standard_D2_v3"}, {"value": "Standard_D2s_v3"}, {"value": "Standard_D3"}, {"value": "Standard_D32_v3"}, {"value": "Standard_D32s_v3"}, {"value": "Standard_D3_v2"}, {"value": "Standard_D4"}, {"value": "Standard_D4_v2"}, {"value": "Standard_D4_v3"}, {"value": "Standard_D4s_v3"}, {"value": "Standard_D5_v2"}, {"value": "Standard_D64_v3"}, {"value": "Standard_D64s_v3"}, {"value": "Standard_D8_v3"}, {"value": "Standard_D8s_v3"}, {"value": "Standard_DS1"}, {"value": "Standard_DS11"}, {"value": "Standard_DS11_v2"}, {"value": "Standard_DS12"}, {"value": "Standard_DS12_v2"}, {"value": "Standard_DS13"}, {"value": "Standard_DS13-2_v2"}, {"value": "Standard_DS13-4_v2"}, {"value": "Standard_DS13_v2"}, {"value": "Standard_DS14"}, {"value": "Standard_DS14-4_v2"}, {"value": "Standard_DS14-8_v2"}, {"value": "Standard_DS14_v2"}, {"value": "Standard_DS15_v2"}, {"value": "Standard_DS1_v2"}, {"value": "Standard_DS2"}, {"value": "Standard_DS2_v2"}, {"value": "Standard_DS3"}, {"value": "Standard_DS3_v2"}, {"value": "Standard_DS4"}, {"value": "Standard_DS4_v2"}, {"value": "Standard_DS5_v2"}, {"value": "Standard_E16_v3"}, {"value": "Standard_E16s_v3"}, {"value": "Standard_E2_v3"}, {"value": "Standard_E2s_v3"}, {"value": "Standard_E32-16_v3"}, {"value": "Standard_E32-8s_v3"}, {"value": "Standard_E32_v3"}, {"value": "Standard_E32s_v3"}, {"value": "Standard_E4_v3"}, {"value": "Standard_E4s_v3"}, {"value": "Standard_E64-16s_v3"}, {"value": "Standard_E64-32s_v3"}, {"value": "Standard_E64_v3"}, {"value": "Standard_E64s_v3"}, {"value": "Standard_E8_v3"}, {"value": "Standard_E8s_v3"}, {"value": "Standard_F1"}, {"value": "Standard_F16"}, {"value": "Standard_F16s"}, {"value": "Standard_F16s_v2"}, {"value": "Standard_F1s"}, {"value": "Standard_F2"}, {"value": "Standard_F2s"}, {"value": "Standard_F2s_v2"}, {"value": "Standard_F32s_v2"}, {"value": "Standard_F4"}, {"value": "Standard_F4s"}, {"value": "Standard_F4s_v2"}, {"value": "Standard_F64s_v2"}, {"value": "Standard_F72s_v2"}, {"value": "Standard_F8"}, {"value": "Standard_F8s"}, {"value": "Standard_F8s_v2"}, {"value": "Standard_G1"}, {"value": "Standard_G2"}, {"value": "Standard_G3"}, {"value": "Standard_G4"}, {"value": "Standard_G5"}, {"value": "Standard_GS1"}, {"value": "Standard_GS2"}, {"value": "Standard_GS3"}, {"value": "Standard_GS4"}, {"value": "Standard_GS4-4"}, {"value": "Standard_GS4-8"}, {"value": "Standard_GS5"}, {"value": "Standard_GS5-16"}, {"value": "Standard_GS5-8"}, {"value": "Standard_H16"}, {"value": "Standard_H16m"}, {"value": "Standard_H16mr"}, {"value": "Standard_H16r"}, {"value": "Standard_H8"}, {"value": "Standard_H8m"}, {"value": "Standard_L16s"}, {"value": "Standard_L32s"}, {"value": "Standard_L4s"}, {"value": "Standard_L8s"}, {"value": "Standard_M128-32ms"}, {"value": "Standard_M128-64ms"}, {"value": "Standard_M128ms"}, {"value": "Standard_M128s"}, {"value": "Standard_M64-16ms"}, {"value": "Standard_M64-32ms"}, {"value": "Standard_M64ms"}, {"value": "Standard_M64s"}, {"value": "Standard_NC12"}, {"value": "Standard_NC12s_v2"}, {"value": "Standard_NC12s_v3"}, {"value": "Standard_NC24"}, {"value": "Standard_NC24r"}, {"value": "Standard_NC24rs_v2"}, {"value": "Standard_NC24rs_v3"}, {"value": "Standard_NC24s_v2"}, {"value": "Standard_NC24s_v3"}, {"value": "Standard_NC6"}, {"value": "Standard_NC6s_v2"}, {"value": "Standard_NC6s_v3"}, {"value": "Standard_ND12s"}, {"value": "Standard_ND24rs"}, {"value": "Standard_ND24s"}, {"value": "Standard_ND6s"}, {"value": "Standard_NV12"}, {"value": "Standard_NV24"}, {"value": "Standard_NV6"}]}}, {"type": "object", "name": "vmSizeProperties", "arg": "$parameters.properties.hardwareProfile.vmSizeProperties", "props": [{"type": "integer32", "name": "vCPUsAvailable", "arg": "$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsAvailable"}, {"type": "integer32", "name": "vCPUsPerCore", "arg": "$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsPerCore"}]}]}, {"type": "@SubResource_create", "name": "host", "arg": "$parameters.properties.host"}, {"type": "@SubResource_create", "name": "hostGroup", "arg": "$parameters.properties.hostGroup"}, {"type": "string", "name": "licenseType", "arg": "$parameters.properties.licenseType"}, {"type": "object", "name": "networkProfile", "arg": "$parameters.properties.networkProfile", "props": [{"type": "string", "name": "networkApiVersion", "arg": "$parameters.properties.networkProfile.networkApiVersion", "enum": {"items": [{"value": "2020-11-01"}, {"value": "2022-11-01"}]}}, {"type": "array<object>", "name": "networkInterfaceConfigurations", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "auxiliaryMode", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode", "enum": {"items": [{"value": "AcceleratedConnections"}, {"value": "Floating"}, {"value": "None"}]}}, {"type": "string", "name": "auxiliarySku", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku", "enum": {"items": [{"value": "A1"}, {"value": "A2"}, {"value": "A4"}, {"value": "A8"}, {"value": "None"}]}}, {"type": "string", "name": "deleteOption", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "disableTcpStateTracking", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking"}, {"type": "object", "name": "dnsSettings", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings", "props": [{"type": "array<string>", "name": "dnsServers", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers", "item": {"type": "string"}}]}, {"type": "@SubResource_create", "name": "dscpConfiguration", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dscpConfiguration"}, {"type": "boolean", "name": "enableAcceleratedNetworking", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableFpga", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableFpga"}, {"type": "boolean", "name": "enableIPForwarding", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding"}, {"type": "array<object>", "name": "ipConfigurations", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<@SubResource_create>", "name": "applicationGatewayBackendAddressPools", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools", "item": {"type": "@SubResource_create"}}, {"type": "array<@SubResource_create>", "name": "applicationSecurityGroups", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups", "item": {"type": "@SubResource_create"}}, {"type": "array<@SubResource_create>", "name": "loadBalancerBackendAddressPools", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools", "item": {"type": "@SubResource_create"}}, {"type": "boolean", "name": "primary", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"}, {"type": "string", "name": "privateIPAddressVersion", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "object", "name": "publicIPAddressConfiguration", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "dnsSettings", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel", "required": true}, {"type": "string", "name": "domainNameLabelScope", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}]}}]}, {"type": "integer32", "name": "idleTimeoutInMinutes", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes"}, {"type": "array<object>", "name": "ipTags", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType"}, {"type": "string", "name": "tag", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag"}]}}, {"type": "string", "name": "publicIPAddressVersion", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_create", "name": "publicIPPrefix", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix"}], "clientFlatten": true}, {"type": "object", "name": "sku", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}, {"type": "string", "name": "tier", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier", "enum": {"items": [{"value": "Global"}, {"value": "Regional"}]}}]}]}, {"type": "@SubResource_create", "name": "subnet", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "@SubResource_create", "name": "networkSecurityGroup", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup"}, {"type": "boolean", "name": "primary", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.primary"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "networkInterfaces", "arg": "$parameters.properties.networkProfile.networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.networkProfile.networkInterfaces[].id"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "arg": "$parameters.properties.networkProfile.networkInterfaces[].properties.deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "primary", "arg": "$parameters.properties.networkProfile.networkInterfaces[].properties.primary"}], "clientFlatten": true}]}}]}, {"type": "object", "name": "osProfile", "arg": "$parameters.properties.osProfile", "props": [{"type": "string", "name": "adminPassword", "arg": "$parameters.properties.osProfile.adminPassword", "secret": true}, {"type": "string", "name": "adminUsername", "arg": "$parameters.properties.osProfile.adminUsername"}, {"type": "boolean", "name": "allowExtensionOperations", "arg": "$parameters.properties.osProfile.allowExtensionOperations"}, {"type": "string", "name": "computerName", "arg": "$parameters.properties.osProfile.computerName"}, {"type": "string", "name": "customData", "arg": "$parameters.properties.osProfile.customData"}, {"type": "object", "name": "linuxConfiguration", "arg": "$parameters.properties.osProfile.linuxConfiguration", "props": [{"type": "boolean", "name": "disablePasswordAuthentication", "arg": "$parameters.properties.osProfile.linuxConfiguration.disablePasswordAuthentication"}, {"type": "boolean", "name": "enableVMAgentPlatformUpdates", "arg": "$parameters.properties.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings", "props": [{"type": "string", "name": "assessmentMode", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "string", "name": "patchMode", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.patchMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}]}, {"type": "boolean", "name": "provisionVMAgent", "arg": "$parameters.properties.osProfile.linuxConfiguration.provisionVMAgent"}, {"type": "object", "name": "ssh", "arg": "$parameters.properties.osProfile.linuxConfiguration.ssh", "props": [{"type": "array<object>", "name": "publicKeys", "arg": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData", "arg": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].keyData"}, {"type": "string", "name": "path", "arg": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].path"}]}, "identifiers": ["path"]}]}]}, {"type": "boolean", "name": "requireGuestProvisionSignal", "arg": "$parameters.properties.osProfile.requireGuestProvisionSignal"}, {"type": "array<object>", "name": "secrets", "arg": "$parameters.properties.osProfile.secrets", "item": {"type": "object", "props": [{"type": "@SubResource_create", "name": "sourceVault", "arg": "$parameters.properties.osProfile.secrets[].sourceVault"}, {"type": "array<object>", "name": "vaultCertificates", "arg": "$parameters.properties.osProfile.secrets[].vaultCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "certificateStore", "arg": "$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateStore"}, {"type": "string", "name": "certificateUrl", "arg": "$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateUrl"}]}, "identifiers": ["certificateUrl"]}]}}, {"type": "object", "name": "windowsConfiguration", "arg": "$parameters.properties.osProfile.windowsConfiguration", "props": [{"type": "array<object>", "name": "additionalUnattendContent", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent", "item": {"type": "object", "props": [{"type": "string", "name": "componentName", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].componentName", "enum": {"items": [{"value": "Microsoft-Windows-Shell-Setup"}]}}, {"type": "string", "name": "content", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].content"}, {"type": "string", "name": "passName", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].passName", "enum": {"items": [{"value": "OobeSystem"}]}}, {"type": "string", "name": "settingName", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].settingName", "enum": {"items": [{"value": "AutoLogon"}, {"value": "FirstLogonCommands"}]}}]}}, {"type": "boolean", "name": "enableAutomaticUpdates", "arg": "$parameters.properties.osProfile.windowsConfiguration.enableAutomaticUpdates"}, {"type": "object", "name": "patchSettings", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings", "props": [{"type": "string", "name": "assessmentMode", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "boolean", "name": "enableHotpatching", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching"}, {"type": "string", "name": "patchMode", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.patchMode", "enum": {"items": [{"value": "AutomaticByOS"}, {"value": "AutomaticByPlatform"}, {"value": "Manual"}]}}]}, {"type": "boolean", "name": "provisionVMAgent", "arg": "$parameters.properties.osProfile.windowsConfiguration.provisionVMAgent"}, {"type": "string", "name": "timeZone", "arg": "$parameters.properties.osProfile.windowsConfiguration.timeZone"}, {"type": "object", "name": "winRM", "arg": "$parameters.properties.osProfile.windowsConfiguration.winRM", "props": [{"type": "array<object>", "name": "listeners", "arg": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners", "item": {"type": "object", "props": [{"type": "string", "name": "certificateUrl", "arg": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl"}, {"type": "string", "name": "protocol", "arg": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}]}}]}]}]}, {"type": "integer32", "name": "platformFaultDomain", "arg": "$parameters.properties.platformFaultDomain"}, {"type": "string", "name": "priority", "arg": "$parameters.properties.priority", "enum": {"items": [{"value": "Low"}, {"value": "Regular"}, {"value": "Spot"}]}}, {"type": "@SubResource_create", "name": "proximityPlacementGroup", "arg": "$parameters.properties.proximityPlacementGroup"}, {"type": "object", "name": "scheduledEventsPolicy", "arg": "$parameters.properties.scheduledEventsPolicy", "props": [{"type": "object", "name": "scheduledEventsAdditionalPublishingTargets", "arg": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets", "props": [{"type": "object", "name": "eventGridAndResourceGraph", "arg": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph", "props": [{"type": "boolean", "name": "enable", "arg": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph.enable"}]}]}, {"type": "object", "name": "userInitiatedReboot", "arg": "$parameters.properties.scheduledEventsPolicy.userInitiatedReboot", "props": [{"type": "boolean", "name": "automaticallyApprove", "arg": "$parameters.properties.scheduledEventsPolicy.userInitiatedReboot.automaticallyApprove"}]}, {"type": "object", "name": "userInitiatedRedeploy", "arg": "$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy", "props": [{"type": "boolean", "name": "automaticallyApprove", "arg": "$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy.automaticallyApprove"}]}]}, {"type": "object", "name": "scheduledEventsProfile", "arg": "$parameters.properties.scheduledEventsProfile", "props": [{"type": "object", "name": "osImageNotificationProfile", "arg": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile", "props": [{"type": "boolean", "name": "enable", "arg": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.enable"}, {"type": "string", "name": "notBeforeTimeout", "arg": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout"}]}, {"type": "object", "name": "terminateNotificationProfile", "arg": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile", "props": [{"type": "boolean", "name": "enable", "arg": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.enable"}, {"type": "string", "name": "notBeforeTimeout", "arg": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout"}]}]}, {"type": "object", "name": "securityProfile", "arg": "$parameters.properties.securityProfile", "props": [{"type": "boolean", "name": "encryptionAtHost", "arg": "$parameters.properties.securityProfile.encryptionAtHost"}, {"type": "object", "name": "encryptionIdentity", "arg": "$parameters.properties.securityProfile.encryptionIdentity", "props": [{"type": "string", "name": "userAssignedIdentityResourceId", "arg": "$parameters.properties.securityProfile.encryptionIdentity.userAssignedIdentityResourceId"}]}, {"type": "object", "name": "proxyAgentSettings", "arg": "$parameters.properties.securityProfile.proxyAgentSettings", "props": [{"type": "boolean", "name": "enabled", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.enabled"}, {"type": "@HostEndpointSettings_create", "name": "imds", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.imds"}, {"type": "integer32", "name": "keyIncarnationId", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.keyIncarnationId"}, {"type": "string", "name": "mode", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.mode", "enum": {"items": [{"value": "Audit"}, {"value": "Enforce"}]}}, {"type": "object", "name": "wireServer", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.wireServer", "props": [{"type": "string", "name": "inVMAccessControlProfileReferenceId", "arg": "@HostEndpointSettings_create.inVMAccessControlProfileReferenceId"}, {"type": "string", "name": "mode", "arg": "@HostEndpointSettings_create.mode", "enum": {"items": [{"value": "Audit"}, {"value": "Disabled"}, {"value": "Enforce"}]}}], "cls": "HostEndpointSettings_create"}]}, {"type": "string", "name": "securityType", "arg": "$parameters.properties.securityProfile.securityType", "enum": {"items": [{"value": "ConfidentialVM"}, {"value": "TrustedLaunch"}]}}, {"type": "object", "name": "uefiSettings", "arg": "$parameters.properties.securityProfile.uefiSettings", "props": [{"type": "boolean", "name": "secureBootEnabled", "arg": "$parameters.properties.securityProfile.uefiSettings.secureBootEnabled"}, {"type": "boolean", "name": "vTpmEnabled", "arg": "$parameters.properties.securityProfile.uefiSettings.vTpmEnabled"}]}]}, {"type": "object", "name": "storageProfile", "arg": "$parameters.properties.storageProfile", "props": [{"type": "boolean", "name": "alignRegionalDisksToVMZone", "arg": "$parameters.properties.storageProfile.alignRegionalDisksToVMZone"}, {"type": "array<object>", "name": "dataDisks", "arg": "$parameters.properties.storageProfile.dataDisks", "item": {"type": "object", "props": [{"type": "string", "name": "caching", "arg": "$parameters.properties.storageProfile.dataDisks[].caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "arg": "$parameters.properties.storageProfile.dataDisks[].createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "arg": "$parameters.properties.storageProfile.dataDisks[].deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "string", "name": "detachOption", "arg": "$parameters.properties.storageProfile.dataDisks[].detachOption", "enum": {"items": [{"value": "ForceDetach"}]}}, {"type": "integer32", "name": "diskSizeGB", "arg": "$parameters.properties.storageProfile.dataDisks[].diskSizeGB"}, {"type": "@VirtualHardDisk_create", "name": "image", "arg": "$parameters.properties.storageProfile.dataDisks[].image"}, {"type": "integer32", "name": "lun", "arg": "$parameters.properties.storageProfile.dataDisks[].lun", "required": true}, {"type": "@ManagedDiskParameters_create", "name": "managedDisk", "arg": "$parameters.properties.storageProfile.dataDisks[].managedDisk"}, {"type": "string", "name": "name", "arg": "$parameters.properties.storageProfile.dataDisks[].name"}, {"type": "object", "name": "sourceResource", "arg": "$parameters.properties.storageProfile.dataDisks[].sourceResource", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.storageProfile.dataDisks[].sourceResource.id"}]}, {"type": "boolean", "name": "toBeDetached", "arg": "$parameters.properties.storageProfile.dataDisks[].toBeDetached"}, {"type": "@VirtualHardDisk_create", "name": "vhd", "arg": "$parameters.properties.storageProfile.dataDisks[].vhd"}, {"type": "boolean", "name": "writeAcceleratorEnabled", "arg": "$parameters.properties.storageProfile.dataDisks[].writeAcceleratorEnabled"}]}, "identifiers": ["lun"]}, {"type": "string", "name": "diskControllerType", "arg": "$parameters.properties.storageProfile.diskControllerType", "enum": {"items": [{"value": "NVMe"}, {"value": "SCSI"}]}}, {"type": "object", "name": "imageReference", "arg": "$parameters.properties.storageProfile.imageReference", "props": [{"type": "string", "name": "communityGalleryImageId", "arg": "$parameters.properties.storageProfile.imageReference.communityGalleryImageId"}, {"type": "string", "name": "id", "arg": "$parameters.properties.storageProfile.imageReference.id"}, {"type": "string", "name": "offer", "arg": "$parameters.properties.storageProfile.imageReference.offer"}, {"type": "string", "name": "publisher", "arg": "$parameters.properties.storageProfile.imageReference.publisher"}, {"type": "string", "name": "sharedGalleryImageId", "arg": "$parameters.properties.storageProfile.imageReference.sharedGalleryImageId"}, {"type": "string", "name": "sku", "arg": "$parameters.properties.storageProfile.imageReference.sku"}, {"type": "string", "name": "version", "arg": "$parameters.properties.storageProfile.imageReference.version"}]}, {"type": "object", "name": "osDisk", "arg": "$parameters.properties.storageProfile.osDisk", "props": [{"type": "string", "name": "caching", "arg": "$parameters.properties.storageProfile.osDisk.caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "arg": "$parameters.properties.storageProfile.osDisk.createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "arg": "$parameters.properties.storageProfile.osDisk.deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "diffDiskSettings", "arg": "$parameters.properties.storageProfile.osDisk.diffDiskSettings", "props": [{"type": "string", "name": "option", "arg": "$parameters.properties.storageProfile.osDisk.diffDiskSettings.option", "enum": {"items": [{"value": "Local"}]}}, {"type": "string", "name": "placement", "arg": "$parameters.properties.storageProfile.osDisk.diffDiskSettings.placement", "enum": {"items": [{"value": "CacheDisk"}, {"value": "NvmeDisk"}, {"value": "ResourceDisk"}]}}]}, {"type": "integer32", "name": "diskSizeGB", "arg": "$parameters.properties.storageProfile.osDisk.diskSizeGB"}, {"type": "object", "name": "encryptionSettings", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings", "props": [{"type": "object", "name": "diskEncryptionKey", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey", "props": [{"type": "string", "name": "secretUrl", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl", "required": true}, {"type": "object", "name": "sourceVault", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault", "required": true, "props": [{"type": "string", "name": "id", "arg": "@SubResource_create.id"}], "cls": "SubResource_create"}]}, {"type": "boolean", "name": "enabled", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.enabled"}, {"type": "object", "name": "keyEncryptionKey", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey", "props": [{"type": "string", "name": "keyUrl", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl", "required": true}, {"type": "@SubResource_create", "name": "sourceVault", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault", "required": true}]}]}, {"type": "@VirtualHardDisk_create", "name": "image", "arg": "$parameters.properties.storageProfile.osDisk.image"}, {"type": "object", "name": "managedDisk", "arg": "$parameters.properties.storageProfile.osDisk.managedDisk", "props": [{"type": "object", "name": "diskEncryptionSet", "arg": "@ManagedDiskParameters_create.diskEncryptionSet", "props": [{"type": "string", "name": "id", "arg": "@DiskEncryptionSetParameters_create.id"}], "cls": "DiskEncryptionSetParameters_create"}, {"type": "string", "name": "id", "arg": "@ManagedDiskParameters_create.id"}, {"type": "object", "name": "securityProfile", "arg": "@ManagedDiskParameters_create.securityProfile", "props": [{"type": "@DiskEncryptionSetParameters_create", "name": "diskEncryptionSet", "arg": "@ManagedDiskParameters_create.securityProfile.diskEncryptionSet"}, {"type": "string", "name": "securityEncryptionType", "arg": "@ManagedDiskParameters_create.securityProfile.securityEncryptionType", "enum": {"items": [{"value": "DiskWithVMGuestState"}, {"value": "NonPersistedTPM"}, {"value": "VMGuestStateOnly"}]}}]}, {"type": "string", "name": "storageAccountType", "arg": "@ManagedDiskParameters_create.storageAccountType", "enum": {"items": [{"value": "PremiumV2_LRS"}, {"value": "Premium_LRS"}, {"value": "Premium_ZRS"}, {"value": "StandardSSD_LRS"}, {"value": "StandardSSD_ZRS"}, {"value": "Standard_LRS"}, {"value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_create"}, {"type": "string", "name": "name", "arg": "$parameters.properties.storageProfile.osDisk.name"}, {"type": "string", "name": "osType", "arg": "$parameters.properties.storageProfile.osDisk.osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "object", "name": "vhd", "arg": "$parameters.properties.storageProfile.osDisk.vhd", "props": [{"type": "string", "name": "uri", "arg": "@VirtualHardDisk_create.uri"}], "cls": "VirtualHardDisk_create"}, {"type": "boolean", "name": "writeAcceleratorEnabled", "arg": "$parameters.properties.storageProfile.osDisk.writeAcceleratorEnabled"}]}]}, {"type": "string", "name": "userData", "arg": "$parameters.properties.userData"}, {"type": "@SubResource_create", "name": "virtualMachineScaleSet", "arg": "$parameters.properties.virtualMachineScaleSet"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "zones", "arg": "$parameters.zones", "item": {"type": "string"}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "object", "name": "extendedLocation", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "EdgeZone"}]}}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "managedBy"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "placement", "props": [{"type": "array<string>", "name": "excludeZones", "item": {"type": "string"}}, {"type": "array<string>", "name": "includeZones", "item": {"type": "string"}}, {"type": "string", "name": "zonePlacementPolicy", "enum": {"items": [{"value": "Any"}]}}]}, {"type": "object", "name": "plan", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "product"}, {"type": "string", "name": "promotionCode"}, {"type": "string", "name": "publisher"}]}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "additionalCapabilities", "props": [{"type": "boolean", "name": "hibernationEnabled"}, {"type": "boolean", "name": "ultraSSDEnabled"}]}, {"type": "object", "name": "applicationProfile", "props": [{"type": "array<object>", "name": "galleryApplications", "item": {"type": "object", "props": [{"type": "string", "name": "configurationReference"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "integer32", "name": "order"}, {"type": "string", "name": "packageReferenceId", "required": true}, {"type": "string", "name": "tags"}, {"type": "boolean", "name": "treatFailureAsDeploymentFailure"}]}, "identifiers": ["packageReferenceId"]}]}, {"type": "@SubResource_read", "name": "availabilitySet"}, {"type": "object", "name": "billingProfile", "props": [{"type": "float64", "name": "maxPrice"}]}, {"type": "object", "name": "capacityReservation", "props": [{"type": "@SubResource_read", "name": "capacityReservationGroup"}]}, {"type": "object", "name": "diagnosticsProfile", "props": [{"type": "object", "name": "bootDiagnostics", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "storageUri"}]}]}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "Deallocate"}, {"value": "Delete"}]}}, {"type": "string", "name": "extensionsTimeBudget"}, {"type": "object", "name": "hardwareProfile", "props": [{"type": "string", "name": "vmSize", "enum": {"items": [{"value": "Basic_A0"}, {"value": "Basic_A1"}, {"value": "Basic_A2"}, {"value": "Basic_A3"}, {"value": "Basic_A4"}, {"value": "Standard_A0"}, {"value": "Standard_A1"}, {"value": "Standard_A10"}, {"value": "Standard_A11"}, {"value": "Standard_A1_v2"}, {"value": "Standard_A2"}, {"value": "Standard_A2_v2"}, {"value": "Standard_A2m_v2"}, {"value": "Standard_A3"}, {"value": "Standard_A4"}, {"value": "Standard_A4_v2"}, {"value": "Standard_A4m_v2"}, {"value": "Standard_A5"}, {"value": "Standard_A6"}, {"value": "Standard_A7"}, {"value": "Standard_A8"}, {"value": "Standard_A8_v2"}, {"value": "Standard_A8m_v2"}, {"value": "Standard_A9"}, {"value": "Standard_B1ms"}, {"value": "Standard_B1s"}, {"value": "Standard_B2ms"}, {"value": "Standard_B2s"}, {"value": "Standard_B4ms"}, {"value": "Standard_B8ms"}, {"value": "Standard_D1"}, {"value": "Standard_D11"}, {"value": "Standard_D11_v2"}, {"value": "Standard_D12"}, {"value": "Standard_D12_v2"}, {"value": "Standard_D13"}, {"value": "Standard_D13_v2"}, {"value": "Standard_D14"}, {"value": "Standard_D14_v2"}, {"value": "Standard_D15_v2"}, {"value": "Standard_D16_v3"}, {"value": "Standard_D16s_v3"}, {"value": "Standard_D1_v2"}, {"value": "Standard_D2"}, {"value": "Standard_D2_v2"}, {"value": "Standard_D2_v3"}, {"value": "Standard_D2s_v3"}, {"value": "Standard_D3"}, {"value": "Standard_D32_v3"}, {"value": "Standard_D32s_v3"}, {"value": "Standard_D3_v2"}, {"value": "Standard_D4"}, {"value": "Standard_D4_v2"}, {"value": "Standard_D4_v3"}, {"value": "Standard_D4s_v3"}, {"value": "Standard_D5_v2"}, {"value": "Standard_D64_v3"}, {"value": "Standard_D64s_v3"}, {"value": "Standard_D8_v3"}, {"value": "Standard_D8s_v3"}, {"value": "Standard_DS1"}, {"value": "Standard_DS11"}, {"value": "Standard_DS11_v2"}, {"value": "Standard_DS12"}, {"value": "Standard_DS12_v2"}, {"value": "Standard_DS13"}, {"value": "Standard_DS13-2_v2"}, {"value": "Standard_DS13-4_v2"}, {"value": "Standard_DS13_v2"}, {"value": "Standard_DS14"}, {"value": "Standard_DS14-4_v2"}, {"value": "Standard_DS14-8_v2"}, {"value": "Standard_DS14_v2"}, {"value": "Standard_DS15_v2"}, {"value": "Standard_DS1_v2"}, {"value": "Standard_DS2"}, {"value": "Standard_DS2_v2"}, {"value": "Standard_DS3"}, {"value": "Standard_DS3_v2"}, {"value": "Standard_DS4"}, {"value": "Standard_DS4_v2"}, {"value": "Standard_DS5_v2"}, {"value": "Standard_E16_v3"}, {"value": "Standard_E16s_v3"}, {"value": "Standard_E2_v3"}, {"value": "Standard_E2s_v3"}, {"value": "Standard_E32-16_v3"}, {"value": "Standard_E32-8s_v3"}, {"value": "Standard_E32_v3"}, {"value": "Standard_E32s_v3"}, {"value": "Standard_E4_v3"}, {"value": "Standard_E4s_v3"}, {"value": "Standard_E64-16s_v3"}, {"value": "Standard_E64-32s_v3"}, {"value": "Standard_E64_v3"}, {"value": "Standard_E64s_v3"}, {"value": "Standard_E8_v3"}, {"value": "Standard_E8s_v3"}, {"value": "Standard_F1"}, {"value": "Standard_F16"}, {"value": "Standard_F16s"}, {"value": "Standard_F16s_v2"}, {"value": "Standard_F1s"}, {"value": "Standard_F2"}, {"value": "Standard_F2s"}, {"value": "Standard_F2s_v2"}, {"value": "Standard_F32s_v2"}, {"value": "Standard_F4"}, {"value": "Standard_F4s"}, {"value": "Standard_F4s_v2"}, {"value": "Standard_F64s_v2"}, {"value": "Standard_F72s_v2"}, {"value": "Standard_F8"}, {"value": "Standard_F8s"}, {"value": "Standard_F8s_v2"}, {"value": "Standard_G1"}, {"value": "Standard_G2"}, {"value": "Standard_G3"}, {"value": "Standard_G4"}, {"value": "Standard_G5"}, {"value": "Standard_GS1"}, {"value": "Standard_GS2"}, {"value": "Standard_GS3"}, {"value": "Standard_GS4"}, {"value": "Standard_GS4-4"}, {"value": "Standard_GS4-8"}, {"value": "Standard_GS5"}, {"value": "Standard_GS5-16"}, {"value": "Standard_GS5-8"}, {"value": "Standard_H16"}, {"value": "Standard_H16m"}, {"value": "Standard_H16mr"}, {"value": "Standard_H16r"}, {"value": "Standard_H8"}, {"value": "Standard_H8m"}, {"value": "Standard_L16s"}, {"value": "Standard_L32s"}, {"value": "Standard_L4s"}, {"value": "Standard_L8s"}, {"value": "Standard_M128-32ms"}, {"value": "Standard_M128-64ms"}, {"value": "Standard_M128ms"}, {"value": "Standard_M128s"}, {"value": "Standard_M64-16ms"}, {"value": "Standard_M64-32ms"}, {"value": "Standard_M64ms"}, {"value": "Standard_M64s"}, {"value": "Standard_NC12"}, {"value": "Standard_NC12s_v2"}, {"value": "Standard_NC12s_v3"}, {"value": "Standard_NC24"}, {"value": "Standard_NC24r"}, {"value": "Standard_NC24rs_v2"}, {"value": "Standard_NC24rs_v3"}, {"value": "Standard_NC24s_v2"}, {"value": "Standard_NC24s_v3"}, {"value": "Standard_NC6"}, {"value": "Standard_NC6s_v2"}, {"value": "Standard_NC6s_v3"}, {"value": "Standard_ND12s"}, {"value": "Standard_ND24rs"}, {"value": "Standard_ND24s"}, {"value": "Standard_ND6s"}, {"value": "Standard_NV12"}, {"value": "Standard_NV24"}, {"value": "Standard_NV6"}]}}, {"type": "object", "name": "vmSizeProperties", "props": [{"type": "integer32", "name": "vCPUsAvailable"}, {"type": "integer32", "name": "vCPUsPerCore"}]}]}, {"type": "@SubResource_read", "name": "host"}, {"type": "@SubResource_read", "name": "hostGroup"}, {"readOnly": true, "type": "object", "name": "instanceView", "props": [{"readOnly": true, "type": "string", "name": "assignedHost"}, {"type": "object", "name": "bootDiagnostics", "props": [{"readOnly": true, "type": "string", "name": "consoleScreenshotBlobUri"}, {"readOnly": true, "type": "string", "name": "serialConsoleLogBlobUri"}, {"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}, {"type": "string", "name": "computerName"}, {"type": "array<object>", "name": "disks", "item": {"type": "object", "props": [{"type": "array<@DiskEncryptionSettings_read>", "name": "encryptionSettings", "item": {"type": "@DiskEncryptionSettings_read"}}, {"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "extensions", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "array<@InstanceViewStatus_read>", "name": "substatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "cls": "VirtualMachineExtensionInstanceView_read"}, "identifiers": ["name", "type"]}, {"type": "string", "name": "hyperVGeneration", "enum": {"items": [{"value": "V1"}, {"value": "V2"}]}}, {"readOnly": true, "type": "boolean", "name": "isVMInStandbyPool"}, {"type": "object", "name": "maintenanceRedeployStatus", "props": [{"type": "boolean", "name": "isCustomerInitiatedMaintenanceAllowed"}, {"type": "string", "name": "lastOperationMessage"}, {"type": "string", "name": "lastOperationResultCode", "enum": {"items": [{"value": "MaintenanceAborted"}, {"value": "MaintenanceCompleted"}, {"value": "None"}, {"value": "RetryLater"}]}}, {"type": "dateTime", "name": "maintenanceWindowEndTime"}, {"type": "dateTime", "name": "maintenanceWindowStartTime"}, {"type": "dateTime", "name": "preMaintenanceWindowEndTime"}, {"type": "dateTime", "name": "preMaintenanceWindowStartTime"}]}, {"type": "string", "name": "osName"}, {"type": "string", "name": "osVersion"}, {"type": "object", "name": "patchStatus", "props": [{"type": "object", "name": "availablePatchSummary", "props": [{"readOnly": true, "type": "string", "name": "assessmentActivityId"}, {"readOnly": true, "type": "integer32", "name": "criticalAndSecurityPatchCount"}, {"readOnly": true, "type": "object", "name": "error", "props": [{"type": "string", "name": "code"}, {"type": "array<object>", "name": "details", "item": {"type": "object", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}]}, "identifiers": ["target", "message"]}, {"type": "object", "name": "innererror", "props": [{"type": "string", "name": "errordetail"}, {"type": "string", "name": "exceptiontype"}]}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}], "cls": "ApiError_read"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "integer32", "name": "otherPatchCount"}, {"readOnly": true, "type": "boolean", "name": "rebootPending"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}, {"readOnly": true, "type": "array<@InstanceViewStatus_read>", "name": "configurationStatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "lastPatchInstallationSummary", "props": [{"readOnly": true, "type": "@ApiError_read", "name": "error"}, {"readOnly": true, "type": "integer32", "name": "excludedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "failedPatchCount"}, {"readOnly": true, "type": "string", "name": "installationActivityId"}, {"readOnly": true, "type": "integer32", "name": "installedPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "boolean", "name": "maintenanceWindowExceeded"}, {"readOnly": true, "type": "integer32", "name": "notSelectedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "pendingPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "integer32", "name": "platformUpdateDomain"}, {"type": "string", "name": "rdpThumbPrint"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "vmAgent", "props": [{"type": "array<object>", "name": "extensionHandlers", "item": {"type": "object", "props": [{"type": "object", "name": "status", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "displayStatus"}, {"type": "string", "name": "level", "enum": {"items": [{"value": "Error"}, {"value": "Info"}, {"value": "Warning"}]}}, {"type": "string", "name": "message"}, {"type": "dateTime", "name": "time"}], "cls": "InstanceViewStatus_read"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}]}}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "vmAgentVersion"}]}, {"readOnly": true, "type": "object", "name": "vmHealth", "props": [{"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}]}, {"type": "string", "name": "licenseType"}, {"type": "object", "name": "networkProfile", "props": [{"type": "string", "name": "networkApiVersion", "enum": {"items": [{"value": "2020-11-01"}, {"value": "2022-11-01"}]}}, {"type": "array<object>", "name": "networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "auxiliaryMode", "enum": {"items": [{"value": "AcceleratedConnections"}, {"value": "Floating"}, {"value": "None"}]}}, {"type": "string", "name": "auxiliarySku", "enum": {"items": [{"value": "A1"}, {"value": "A2"}, {"value": "A4"}, {"value": "A8"}, {"value": "None"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "disableTcpStateTracking"}, {"type": "object", "name": "dnsSettings", "props": [{"type": "array<string>", "name": "dnsServers", "item": {"type": "string"}}]}, {"type": "@SubResource_read", "name": "dscpConfiguration"}, {"type": "boolean", "name": "enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableFpga"}, {"type": "boolean", "name": "enableIPForwarding"}, {"type": "array<object>", "name": "ipConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<@SubResource_read>", "name": "applicationGatewayBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "applicationSecurityGroups", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "loadBalancerBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "object", "name": "publicIPAddressConfiguration", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "required": true}, {"type": "string", "name": "domainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}]}}]}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "array<object>", "name": "ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType"}, {"type": "string", "name": "tag"}]}}, {"type": "string", "name": "publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_read", "name": "publicIPPrefix"}], "clientFlatten": true}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}, {"type": "string", "name": "tier", "enum": {"items": [{"value": "Global"}, {"value": "Regional"}]}}]}]}, {"type": "@SubResource_read", "name": "subnet"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "@SubResource_read", "name": "networkSecurityGroup"}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "id"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}}]}, {"type": "object", "name": "osProfile", "props": [{"type": "string", "name": "adminPassword", "secret": true}, {"type": "string", "name": "adminUsername"}, {"type": "boolean", "name": "allowExtensionOperations"}, {"type": "string", "name": "computerName"}, {"type": "string", "name": "customData"}, {"type": "object", "name": "linuxConfiguration", "props": [{"type": "boolean", "name": "disablePasswordAuthentication"}, {"type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "object", "name": "ssh", "props": [{"type": "array<object>", "name": "publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData"}, {"type": "string", "name": "path"}]}, "identifiers": ["path"]}]}]}, {"type": "boolean", "name": "requireGuestProvisionSignal"}, {"type": "array<object>", "name": "secrets", "item": {"type": "object", "props": [{"type": "@SubResource_read", "name": "sourceVault"}, {"type": "array<object>", "name": "vaultCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "certificateStore"}, {"type": "string", "name": "certificateUrl"}]}, "identifiers": ["certificateUrl"]}]}}, {"type": "object", "name": "windowsConfiguration", "props": [{"type": "array<object>", "name": "additionalUnattendContent", "item": {"type": "object", "props": [{"type": "string", "name": "componentName", "enum": {"items": [{"value": "Microsoft-Windows-Shell-Setup"}]}}, {"type": "string", "name": "content"}, {"type": "string", "name": "passName", "enum": {"items": [{"value": "OobeSystem"}]}}, {"type": "string", "name": "settingName", "enum": {"items": [{"value": "AutoLogon"}, {"value": "FirstLogonCommands"}]}}]}}, {"type": "boolean", "name": "enableAutomaticUpdates"}, {"readOnly": true, "type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "boolean", "name": "enableHotpatching"}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByOS"}, {"value": "AutomaticByPlatform"}, {"value": "Manual"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "string", "name": "timeZone"}, {"type": "object", "name": "winRM", "props": [{"type": "array<object>", "name": "listeners", "item": {"type": "object", "props": [{"type": "string", "name": "certificateUrl"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}]}}]}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "string", "name": "priority", "enum": {"items": [{"value": "Low"}, {"value": "Regular"}, {"value": "Spot"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "proximityPlacementGroup"}, {"type": "object", "name": "scheduledEventsPolicy", "props": [{"type": "object", "name": "scheduledEventsAdditionalPublishingTargets", "props": [{"type": "object", "name": "eventGridAndResourceGraph", "props": [{"type": "boolean", "name": "enable"}]}]}, {"type": "object", "name": "userInitiatedReboot", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}, {"type": "object", "name": "userInitiatedRedeploy", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}]}, {"type": "object", "name": "scheduledEventsProfile", "props": [{"type": "object", "name": "osImageNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}, {"type": "object", "name": "terminateNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}]}, {"type": "object", "name": "securityProfile", "props": [{"type": "boolean", "name": "encryptionAtHost"}, {"type": "object", "name": "encryptionIdentity", "props": [{"type": "string", "name": "userAssignedIdentityResourceId"}]}, {"type": "object", "name": "proxyAgentSettings", "props": [{"type": "boolean", "name": "enabled"}, {"type": "@HostEndpointSettings_read", "name": "imds"}, {"type": "integer32", "name": "keyIncarnationId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Enforce"}]}}, {"type": "object", "name": "wireServer", "props": [{"type": "string", "name": "inVMAccessControlProfileReferenceId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Disabled"}, {"value": "Enforce"}]}}], "cls": "HostEndpointSettings_read"}]}, {"type": "string", "name": "securityType", "enum": {"items": [{"value": "ConfidentialVM"}, {"value": "TrustedLaunch"}]}}, {"type": "object", "name": "uefiSettings", "props": [{"type": "boolean", "name": "secureBootEnabled"}, {"type": "boolean", "name": "vTpmEnabled"}]}]}, {"type": "object", "name": "storageProfile", "props": [{"type": "boolean", "name": "alignRegionalDisksToVMZone"}, {"type": "array<object>", "name": "dataDisks", "item": {"type": "object", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "string", "name": "detachOption", "enum": {"items": [{"value": "ForceDetach"}]}}, {"readOnly": true, "type": "integer64", "name": "diskIOPSReadWrite"}, {"readOnly": true, "type": "integer64", "name": "diskMBpsReadWrite"}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "integer32", "name": "lun", "required": true}, {"type": "@ManagedDiskParameters_read", "name": "managedDisk"}, {"type": "string", "name": "name"}, {"type": "object", "name": "sourceResource", "props": [{"type": "string", "name": "id"}]}, {"type": "boolean", "name": "toBeDetached"}, {"type": "@VirtualHardDisk_read", "name": "vhd"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}, "identifiers": ["lun"]}, {"type": "string", "name": "diskControllerType", "enum": {"items": [{"value": "NVMe"}, {"value": "SCSI"}]}}, {"type": "object", "name": "imageReference", "props": [{"type": "string", "name": "communityGalleryImageId"}, {"readOnly": true, "type": "string", "name": "exactVersion"}, {"type": "string", "name": "id"}, {"type": "string", "name": "offer"}, {"type": "string", "name": "publisher"}, {"type": "string", "name": "sharedGalleryImageId"}, {"type": "string", "name": "sku"}, {"type": "string", "name": "version"}]}, {"type": "object", "name": "osDisk", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "diffDiskSettings", "props": [{"type": "string", "name": "option", "enum": {"items": [{"value": "Local"}]}}, {"type": "string", "name": "placement", "enum": {"items": [{"value": "CacheDisk"}, {"value": "NvmeDisk"}, {"value": "ResourceDisk"}]}}]}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "object", "name": "encryptionSettings", "props": [{"type": "object", "name": "diskEncryptionKey", "props": [{"type": "string", "name": "secretUrl", "required": true}, {"type": "object", "name": "sourceVault", "required": true, "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "cls": "KeyVaultSecretReference_read"}, {"type": "boolean", "name": "enabled"}, {"type": "object", "name": "keyEncryptionKey", "props": [{"type": "string", "name": "keyUrl", "required": true}, {"type": "@SubResource_read", "name": "sourceVault", "required": true}]}], "cls": "DiskEncryptionSettings_read"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "object", "name": "managedDisk", "props": [{"type": "object", "name": "diskEncryptionSet", "props": [{"type": "string", "name": "id"}], "cls": "DiskEncryptionSetParameters_read"}, {"type": "string", "name": "id"}, {"type": "object", "name": "securityProfile", "props": [{"type": "@DiskEncryptionSetParameters_read", "name": "diskEncryptionSet"}, {"type": "string", "name": "securityEncryptionType", "enum": {"items": [{"value": "DiskWithVMGuestState"}, {"value": "NonPersistedTPM"}, {"value": "VMGuestStateOnly"}]}}]}, {"type": "string", "name": "storageAccountType", "enum": {"items": [{"value": "PremiumV2_LRS"}, {"value": "Premium_LRS"}, {"value": "Premium_ZRS"}, {"value": "StandardSSD_LRS"}, {"value": "StandardSSD_ZRS"}, {"value": "Standard_LRS"}, {"value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_read"}, {"type": "string", "name": "name"}, {"type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "object", "name": "vhd", "props": [{"type": "string", "name": "uri"}], "cls": "VirtualHardDisk_read"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}]}, {"readOnly": true, "type": "dateTime", "name": "timeCreated"}, {"type": "string", "name": "userData"}, {"type": "@SubResource_read", "name": "virtualMachineScaleSet"}, {"readOnly": true, "type": "string", "name": "vmId"}], "clientFlatten": true}, {"readOnly": true, "type": "array<object>", "name": "resources", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "autoUpgradeMinorVersion"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "string", "name": "forceUpdateTag"}, {"type": "@VirtualMachineExtensionInstanceView_read", "name": "instanceView"}, {"type": "object", "name": "protectedSettings", "additionalProps": {"item": {"type": "any"}}}, {"type": "@KeyVaultSecretReference_read", "name": "protectedSettingsFromKeyVault"}, {"type": "array<string>", "name": "provisionAfterExtensions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "publisher"}, {"type": "object", "name": "settings", "additionalProps": {"item": {"type": "any"}}}, {"type": "boolean", "name": "suppressFailures"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2024-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}", "version": "2024-11-01", "swagger": "mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.If-Match", "options": ["if-match"], "help": {"short": "The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."}}, {"type": "string", "var": "$Header.If-None-Match", "options": ["if-none-match"], "help": {"short": "Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vmName", "options": ["n", "name", "vm-name"], "required": true, "idPart": "name", "help": {"short": "The name of the virtual machine."}}]}, {"name": "Identity", "args": [{"nullable": true, "type": "string", "var": "$parameters.identity.type", "options": ["type"], "hide": true, "group": "Identity", "help": {"short": "The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "SystemAssigned", "value": "SystemAssigned"}, {"name": "SystemAssigned, UserAssigned", "value": "SystemAssigned, UserAssigned"}, {"name": "UserAssigned", "value": "UserAssigned"}]}}, {"nullable": true, "type": "object", "var": "$parameters.identity.userAssignedIdentities", "options": ["user-assigned-identities"], "hide": true, "group": "Identity", "help": {"short": "The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."}, "additionalProps": {"item": {"nullable": true, "blank": {"value": {}}, "type": "object"}}}]}, {"name": "Parameters", "args": [{"nullable": true, "type": "object", "var": "$parameters.extendedLocation", "options": ["extended-location"], "group": "Parameters", "help": {"short": "The extended location of the Virtual Machine."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.extendedLocation.name", "options": ["name"], "help": {"short": "The name of the extended location."}}, {"nullable": true, "type": "string", "var": "$parameters.extendedLocation.type", "options": ["type"], "help": {"short": "The type of the extended location."}, "enum": {"items": [{"name": "EdgeZone", "value": "EdgeZone"}]}}]}, {"type": "ResourceLocation", "var": "$parameters.location", "options": ["l", "location"], "group": "Parameters", "help": {"short": "Resource location"}}, {"nullable": true, "type": "object", "var": "$parameters.placement", "options": ["placement"], "group": "Parameters", "help": {"short": "Placement section specifies the user-defined constraints for virtual machine hardware placement. This property cannot be changed once VM is provisioned. Minimum api-version: 2024-11-01."}, "args": [{"nullable": true, "type": "array<string>", "var": "$parameters.placement.excludeZones", "options": ["exclude-zones"], "help": {"short": "This property supplements the 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to 'Any', availability zone selected by the system must not be present in the list of availability zones passed with 'excludeZones'. If 'excludeZones' is not provided, all availability zones in region will be considered for selection."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "array<string>", "var": "$parameters.placement.includeZones", "options": ["include-zones"], "help": {"short": "This property supplements the 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to 'Any', availability zone selected by the system must be present in the list of availability zones passed with 'includeZones'. If 'includeZones' is not provided, all availability zones in region will be considered for selection."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$parameters.placement.zonePlacementPolicy", "options": ["zone-placement-policy"], "help": {"short": "Specifies the policy for virtual machine's placement in availability zone. Possible values are: **Any** - An availability zone will be automatically picked by system as part of virtual machine creation."}, "enum": {"items": [{"name": "Any", "value": "Any"}]}}]}, {"nullable": true, "type": "object", "var": "$parameters.plan", "options": ["plan"], "group": "Parameters", "help": {"short": "Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.plan.name", "options": ["name"], "help": {"short": "The plan ID."}}, {"nullable": true, "type": "string", "var": "$parameters.plan.product", "options": ["product"], "help": {"short": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."}}, {"nullable": true, "type": "string", "var": "$parameters.plan.promotionCode", "options": ["promotion-code"], "help": {"short": "The promotion code."}}, {"nullable": true, "type": "string", "var": "$parameters.plan.publisher", "options": ["publisher"], "help": {"short": "The publisher ID."}}]}, {"nullable": true, "type": "object", "var": "$parameters.tags", "options": ["tags"], "group": "Parameters", "help": {"short": "Resource tags"}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}, {"nullable": true, "type": "array<string>", "var": "$parameters.zones", "options": ["zones"], "group": "Parameters", "help": {"short": "The virtual machine zones."}, "item": {"nullable": true, "type": "string"}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.additionalCapabilities", "options": ["additional-capabilities"], "group": "Properties", "help": {"short": "Specifies additional capabilities enabled or disabled on the virtual machine."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.additionalCapabilities.hibernationEnabled", "options": ["hibernation-enabled"], "help": {"short": "The flag that enables or disables hibernation capability on the VM."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.additionalCapabilities.ultraSSDEnabled", "options": ["ultra-ssd-enabled"], "help": {"short": "The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled."}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.applicationProfile", "options": ["application-profile"], "group": "Properties", "help": {"short": "Specifies the gallery applications that should be made available to the VM/VMSS."}, "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.applicationProfile.galleryApplications", "options": ["gallery-applications"], "help": {"short": "Specifies the gallery applications that should be made available to the VM/VMSS"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.applicationProfile.galleryApplications[].configurationReference", "options": ["configuration-reference"], "help": {"short": "Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided"}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.applicationProfile.galleryApplications[].enableAutomaticUpgrade", "options": ["enable-automatic-upgrade"], "help": {"short": "If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS"}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.applicationProfile.galleryApplications[].order", "options": ["order"], "help": {"short": "Optional, Specifies the order in which the packages have to be installed"}}, {"type": "string", "var": "$parameters.properties.applicationProfile.galleryApplications[].packageReferenceId", "options": ["package-reference-id"], "help": {"short": "Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.applicationProfile.galleryApplications[].tags", "options": ["tags"], "help": {"short": "Optional, Specifies a passthrough value for more generic context."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure", "options": ["treat-failure-as-deployment-failure"], "help": {"short": "Optional, If true, any failure for any operation in the VmApplication will fail the deployment"}}]}}]}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.availabilitySet", "options": ["availability-set"], "group": "Properties", "help": {"short": "Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. This property cannot exist along with a non-null properties.virtualMachineScaleSet reference."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.billingProfile", "options": ["billing-profile"], "group": "Properties", "help": {"short": "Specifies the billing related details of a Azure Spot virtual machine. Minimum api-version: 2019-03-01."}, "args": [{"nullable": true, "type": "float64", "var": "$parameters.properties.billingProfile.maxPrice", "options": ["max-price"], "help": {"short": "Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01."}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.capacityReservation", "options": ["capacity-reservation"], "group": "Properties", "help": {"short": "Specifies information about the capacity reservation that is used to allocate virtual machine. Minimum api-version: 2021-04-01."}, "args": [{"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.capacityReservation.capacityReservationGroup", "options": ["capacity-reservation-group"], "help": {"short": "Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details."}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.diagnosticsProfile", "options": ["diagnostics-profile"], "group": "Properties", "help": {"short": "Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15."}, "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.diagnosticsProfile.bootDiagnostics", "options": ["boot-diagnostics"], "help": {"short": "Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.diagnosticsProfile.bootDiagnostics.enabled", "options": ["enabled"], "help": {"short": "Whether boot diagnostics should be enabled on the Virtual Machine."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.diagnosticsProfile.bootDiagnostics.storageUri", "options": ["storage-uri"], "help": {"short": "Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used."}}]}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.evictionPolicy", "options": ["eviction-policy"], "group": "Properties", "help": {"short": "Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview."}, "enum": {"items": [{"name": "Deallocate", "value": "Deallocate"}, {"name": "Delete", "value": "Delete"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.extensionsTimeBudget", "options": ["extensions-time-budget"], "group": "Properties", "help": {"short": "Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.hardwareProfile", "options": ["hardware-profile"], "group": "Properties", "help": {"short": "Specifies the hardware settings for the virtual machine."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.hardwareProfile.vmSize", "options": ["vm-size"], "help": {"short": "Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. The recommended way to get the list of available sizes is using these APIs: [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes), [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list), [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). The available VM sizes depend on region and availability set."}, "enum": {"items": [{"name": "Basic_A0", "value": "Basic_A0"}, {"name": "Basic_A1", "value": "Basic_A1"}, {"name": "Basic_A2", "value": "Basic_A2"}, {"name": "Basic_A3", "value": "Basic_A3"}, {"name": "Basic_A4", "value": "Basic_A4"}, {"name": "Standard_A0", "value": "Standard_A0"}, {"name": "Standard_A1", "value": "Standard_A1"}, {"name": "Standard_A10", "value": "Standard_A10"}, {"name": "Standard_A11", "value": "Standard_A11"}, {"name": "Standard_A1_v2", "value": "Standard_A1_v2"}, {"name": "Standard_A2", "value": "Standard_A2"}, {"name": "Standard_A2_v2", "value": "Standard_A2_v2"}, {"name": "Standard_A2m_v2", "value": "Standard_A2m_v2"}, {"name": "Standard_A3", "value": "Standard_A3"}, {"name": "Standard_A4", "value": "Standard_A4"}, {"name": "Standard_A4_v2", "value": "Standard_A4_v2"}, {"name": "Standard_A4m_v2", "value": "Standard_A4m_v2"}, {"name": "Standard_A5", "value": "Standard_A5"}, {"name": "Standard_A6", "value": "Standard_A6"}, {"name": "Standard_A7", "value": "Standard_A7"}, {"name": "Standard_A8", "value": "Standard_A8"}, {"name": "Standard_A8_v2", "value": "Standard_A8_v2"}, {"name": "Standard_A8m_v2", "value": "Standard_A8m_v2"}, {"name": "Standard_A9", "value": "Standard_A9"}, {"name": "Standard_B1ms", "value": "Standard_B1ms"}, {"name": "Standard_B1s", "value": "Standard_B1s"}, {"name": "Standard_B2ms", "value": "Standard_B2ms"}, {"name": "Standard_B2s", "value": "Standard_B2s"}, {"name": "Standard_B4ms", "value": "Standard_B4ms"}, {"name": "Standard_B8ms", "value": "Standard_B8ms"}, {"name": "Standard_D1", "value": "Standard_D1"}, {"name": "Standard_D11", "value": "Standard_D11"}, {"name": "Standard_D11_v2", "value": "Standard_D11_v2"}, {"name": "Standard_D12", "value": "Standard_D12"}, {"name": "Standard_D12_v2", "value": "Standard_D12_v2"}, {"name": "Standard_D13", "value": "Standard_D13"}, {"name": "Standard_D13_v2", "value": "Standard_D13_v2"}, {"name": "Standard_D14", "value": "Standard_D14"}, {"name": "Standard_D14_v2", "value": "Standard_D14_v2"}, {"name": "Standard_D15_v2", "value": "Standard_D15_v2"}, {"name": "Standard_D16_v3", "value": "Standard_D16_v3"}, {"name": "Standard_D16s_v3", "value": "Standard_D16s_v3"}, {"name": "Standard_D1_v2", "value": "Standard_D1_v2"}, {"name": "Standard_D2", "value": "Standard_D2"}, {"name": "Standard_D2_v2", "value": "Standard_D2_v2"}, {"name": "Standard_D2_v3", "value": "Standard_D2_v3"}, {"name": "Standard_D2s_v3", "value": "Standard_D2s_v3"}, {"name": "Standard_D3", "value": "Standard_D3"}, {"name": "Standard_D32_v3", "value": "Standard_D32_v3"}, {"name": "Standard_D32s_v3", "value": "Standard_D32s_v3"}, {"name": "Standard_D3_v2", "value": "Standard_D3_v2"}, {"name": "Standard_D4", "value": "Standard_D4"}, {"name": "Standard_D4_v2", "value": "Standard_D4_v2"}, {"name": "Standard_D4_v3", "value": "Standard_D4_v3"}, {"name": "Standard_D4s_v3", "value": "Standard_D4s_v3"}, {"name": "Standard_D5_v2", "value": "Standard_D5_v2"}, {"name": "Standard_D64_v3", "value": "Standard_D64_v3"}, {"name": "Standard_D64s_v3", "value": "Standard_D64s_v3"}, {"name": "Standard_D8_v3", "value": "Standard_D8_v3"}, {"name": "Standard_D8s_v3", "value": "Standard_D8s_v3"}, {"name": "Standard_DS1", "value": "Standard_DS1"}, {"name": "Standard_DS11", "value": "Standard_DS11"}, {"name": "Standard_DS11_v2", "value": "Standard_DS11_v2"}, {"name": "Standard_DS12", "value": "Standard_DS12"}, {"name": "Standard_DS12_v2", "value": "Standard_DS12_v2"}, {"name": "Standard_DS13", "value": "Standard_DS13"}, {"name": "Standard_DS13-2_v2", "value": "Standard_DS13-2_v2"}, {"name": "Standard_DS13-4_v2", "value": "Standard_DS13-4_v2"}, {"name": "Standard_DS13_v2", "value": "Standard_DS13_v2"}, {"name": "Standard_DS14", "value": "Standard_DS14"}, {"name": "Standard_DS14-4_v2", "value": "Standard_DS14-4_v2"}, {"name": "Standard_DS14-8_v2", "value": "Standard_DS14-8_v2"}, {"name": "Standard_DS14_v2", "value": "Standard_DS14_v2"}, {"name": "Standard_DS15_v2", "value": "Standard_DS15_v2"}, {"name": "Standard_DS1_v2", "value": "Standard_DS1_v2"}, {"name": "Standard_DS2", "value": "Standard_DS2"}, {"name": "Standard_DS2_v2", "value": "Standard_DS2_v2"}, {"name": "Standard_DS3", "value": "Standard_DS3"}, {"name": "Standard_DS3_v2", "value": "Standard_DS3_v2"}, {"name": "Standard_DS4", "value": "Standard_DS4"}, {"name": "Standard_DS4_v2", "value": "Standard_DS4_v2"}, {"name": "Standard_DS5_v2", "value": "Standard_DS5_v2"}, {"name": "Standard_E16_v3", "value": "Standard_E16_v3"}, {"name": "Standard_E16s_v3", "value": "Standard_E16s_v3"}, {"name": "Standard_E2_v3", "value": "Standard_E2_v3"}, {"name": "Standard_E2s_v3", "value": "Standard_E2s_v3"}, {"name": "Standard_E32-16_v3", "value": "Standard_E32-16_v3"}, {"name": "Standard_E32-8s_v3", "value": "Standard_E32-8s_v3"}, {"name": "Standard_E32_v3", "value": "Standard_E32_v3"}, {"name": "Standard_E32s_v3", "value": "Standard_E32s_v3"}, {"name": "Standard_E4_v3", "value": "Standard_E4_v3"}, {"name": "Standard_E4s_v3", "value": "Standard_E4s_v3"}, {"name": "Standard_E64-16s_v3", "value": "Standard_E64-16s_v3"}, {"name": "Standard_E64-32s_v3", "value": "Standard_E64-32s_v3"}, {"name": "Standard_E64_v3", "value": "Standard_E64_v3"}, {"name": "Standard_E64s_v3", "value": "Standard_E64s_v3"}, {"name": "Standard_E8_v3", "value": "Standard_E8_v3"}, {"name": "Standard_E8s_v3", "value": "Standard_E8s_v3"}, {"name": "Standard_F1", "value": "Standard_F1"}, {"name": "Standard_F16", "value": "Standard_F16"}, {"name": "Standard_F16s", "value": "Standard_F16s"}, {"name": "Standard_F16s_v2", "value": "Standard_F16s_v2"}, {"name": "Standard_F1s", "value": "Standard_F1s"}, {"name": "Standard_F2", "value": "Standard_F2"}, {"name": "Standard_F2s", "value": "Standard_F2s"}, {"name": "Standard_F2s_v2", "value": "Standard_F2s_v2"}, {"name": "Standard_F32s_v2", "value": "Standard_F32s_v2"}, {"name": "Standard_F4", "value": "Standard_F4"}, {"name": "Standard_F4s", "value": "Standard_F4s"}, {"name": "Standard_F4s_v2", "value": "Standard_F4s_v2"}, {"name": "Standard_F64s_v2", "value": "Standard_F64s_v2"}, {"name": "Standard_F72s_v2", "value": "Standard_F72s_v2"}, {"name": "Standard_F8", "value": "Standard_F8"}, {"name": "Standard_F8s", "value": "Standard_F8s"}, {"name": "Standard_F8s_v2", "value": "Standard_F8s_v2"}, {"name": "Standard_G1", "value": "Standard_G1"}, {"name": "Standard_G2", "value": "Standard_G2"}, {"name": "Standard_G3", "value": "Standard_G3"}, {"name": "Standard_G4", "value": "Standard_G4"}, {"name": "Standard_G5", "value": "Standard_G5"}, {"name": "Standard_GS1", "value": "Standard_GS1"}, {"name": "Standard_GS2", "value": "Standard_GS2"}, {"name": "Standard_GS3", "value": "Standard_GS3"}, {"name": "Standard_GS4", "value": "Standard_GS4"}, {"name": "Standard_GS4-4", "value": "Standard_GS4-4"}, {"name": "Standard_GS4-8", "value": "Standard_GS4-8"}, {"name": "Standard_GS5", "value": "Standard_GS5"}, {"name": "Standard_GS5-16", "value": "Standard_GS5-16"}, {"name": "Standard_GS5-8", "value": "Standard_GS5-8"}, {"name": "Standard_H16", "value": "Standard_H16"}, {"name": "Standard_H16m", "value": "Standard_H16m"}, {"name": "Standard_H16mr", "value": "Standard_H16mr"}, {"name": "Standard_H16r", "value": "Standard_H16r"}, {"name": "Standard_H8", "value": "Standard_H8"}, {"name": "Standard_H8m", "value": "Standard_H8m"}, {"name": "Standard_L16s", "value": "Standard_L16s"}, {"name": "Standard_L32s", "value": "Standard_L32s"}, {"name": "Standard_L4s", "value": "Standard_L4s"}, {"name": "Standard_L8s", "value": "Standard_L8s"}, {"name": "Standard_M128-32ms", "value": "Standard_M128-32ms"}, {"name": "Standard_M128-64ms", "value": "Standard_M128-64ms"}, {"name": "Standard_M128ms", "value": "Standard_M128ms"}, {"name": "Standard_M128s", "value": "Standard_M128s"}, {"name": "Standard_M64-16ms", "value": "Standard_M64-16ms"}, {"name": "Standard_M64-32ms", "value": "Standard_M64-32ms"}, {"name": "Standard_M64ms", "value": "Standard_M64ms"}, {"name": "Standard_M64s", "value": "Standard_M64s"}, {"name": "Standard_NC12", "value": "Standard_NC12"}, {"name": "Standard_NC12s_v2", "value": "Standard_NC12s_v2"}, {"name": "Standard_NC12s_v3", "value": "Standard_NC12s_v3"}, {"name": "Standard_NC24", "value": "Standard_NC24"}, {"name": "Standard_NC24r", "value": "Standard_NC24r"}, {"name": "Standard_NC24rs_v2", "value": "Standard_NC24rs_v2"}, {"name": "Standard_NC24rs_v3", "value": "Standard_NC24rs_v3"}, {"name": "Standard_NC24s_v2", "value": "Standard_NC24s_v2"}, {"name": "Standard_NC24s_v3", "value": "Standard_NC24s_v3"}, {"name": "Standard_NC6", "value": "Standard_NC6"}, {"name": "Standard_NC6s_v2", "value": "Standard_NC6s_v2"}, {"name": "Standard_NC6s_v3", "value": "Standard_NC6s_v3"}, {"name": "Standard_ND12s", "value": "Standard_ND12s"}, {"name": "Standard_ND24rs", "value": "Standard_ND24rs"}, {"name": "Standard_ND24s", "value": "Standard_ND24s"}, {"name": "Standard_ND6s", "value": "Standard_ND6s"}, {"name": "Standard_NV12", "value": "Standard_NV12"}, {"name": "Standard_NV24", "value": "Standard_NV24"}, {"name": "Standard_NV6", "value": "Standard_NV6"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.hardwareProfile.vmSizeProperties", "options": ["vm-size-properties"], "help": {"short": "Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details."}, "args": [{"nullable": true, "type": "integer32", "var": "$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsAvailable", "options": ["v-cp-us-available"], "help": {"short": "Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list)."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsPerCore", "options": ["v-cp-us-per-core"], "help": {"short": "Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**"}}]}]}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.host", "options": ["host"], "group": "Properties", "help": {"short": "Specifies information about the dedicated host that the virtual machine resides in. Minimum api-version: 2018-10-01."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.hostGroup", "options": ["host-group"], "group": "Properties", "help": {"short": "Specifies information about the dedicated host group that the virtual machine resides in. **Note:** User cannot specify both host and hostGroup properties. Minimum api-version: 2020-06-01."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.licenseType", "options": ["license-type"], "group": "Properties", "help": {"short": "Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) Minimum api-version: 2015-06-15"}}, {"nullable": true, "type": "object", "var": "$parameters.properties.networkProfile", "options": ["network-profile"], "group": "Properties", "help": {"short": "Specifies the network interfaces of the virtual machine."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkApiVersion", "options": ["network-api-version"], "help": {"short": "specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations"}, "enum": {"items": [{"name": "2020-11-01", "value": "2020-11-01"}, {"name": "2022-11-01", "value": "2022-11-01"}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations", "options": ["network-interface-configurations"], "help": {"short": "Specifies the networking configurations that will be used to create the virtual machine networking resources."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].name", "options": ["name"], "help": {"short": "The network interface configuration name."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode", "options": ["auxiliary-mode"], "group": "Properties", "help": {"short": "Specifies whether the Auxiliary mode is enabled for the Network Interface resource."}, "enum": {"items": [{"name": "AcceleratedConnections", "value": "AcceleratedConnections"}, {"name": "Floating", "value": "Floating"}, {"name": "None", "value": "None"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku", "options": ["auxiliary-sku"], "group": "Properties", "help": {"short": "Specifies whether the Auxiliary sku is enabled for the Network Interface resource."}, "enum": {"items": [{"name": "A1", "value": "A1"}, {"name": "A2", "value": "A2"}, {"name": "A4", "value": "A4"}, {"name": "A8", "value": "A8"}, {"name": "None", "value": "None"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.deleteOption", "options": ["delete-option"], "group": "Properties", "help": {"short": "Specify what happens to the network interface when the VM is deleted"}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking", "options": ["disable-tcp-state-tracking"], "group": "Properties", "help": {"short": "Specifies whether the network interface is disabled for tcp state tracking."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings", "options": ["dns-settings"], "group": "Properties", "help": {"short": "The dns settings to be applied on the network interfaces."}, "args": [{"nullable": true, "type": "array<string>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers", "options": ["dns-servers"], "help": {"short": "List of DNS servers IP addresses"}, "item": {"nullable": true, "type": "string"}}]}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dscpConfiguration", "options": ["dscp-configuration"], "group": "Properties"}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking", "options": ["enable-accelerated-networking"], "group": "Properties", "help": {"short": "Specifies whether the network interface is accelerated networking-enabled."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableFpga", "options": ["enable-fpga"], "group": "Properties", "help": {"short": "Specifies whether the network interface is FPGA networking-enabled."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding", "options": ["enable-ip-forwarding"], "group": "Properties", "help": {"short": "Whether IP forwarding enabled on this NIC."}}, {"type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations", "options": ["ip-configurations"], "group": "Properties", "help": {"short": "Specifies the IP configurations of the network interface."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name", "options": ["name"], "help": {"short": "The IP configuration name."}}, {"nullable": true, "type": "array<@SubResource_update>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools", "options": ["application-gateway-backend-address-pools"], "group": "Properties", "help": {"short": "Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway."}, "item": {"nullable": true, "type": "@SubResource_update"}}, {"nullable": true, "type": "array<@SubResource_update>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups", "options": ["application-security-groups"], "group": "Properties", "help": {"short": "Specifies an array of references to application security group."}, "item": {"nullable": true, "type": "@SubResource_update"}}, {"nullable": true, "type": "array<@SubResource_update>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools", "options": ["load-balancer-backend-address-pools"], "group": "Properties", "help": {"short": "Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer]."}, "item": {"nullable": true, "type": "@SubResource_update"}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Specifies the primary network interface in case the virtual machine has more than 1 network interface."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion", "options": ["private-ip-address-version"], "group": "Properties", "help": {"short": "Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."}, "enum": {"items": [{"name": "IPv4", "value": "IPv4"}, {"name": "IPv6", "value": "IPv6"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration", "options": ["public-ip-address-configuration"], "group": "Properties", "help": {"short": "The publicIPAddressConfiguration."}, "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name", "options": ["name"], "help": {"short": "The publicIP address configuration name."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption", "options": ["delete-option"], "group": "Properties", "help": {"short": "Specify what happens to the public IP address when the VM is deleted"}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings", "options": ["dns-settings"], "group": "Properties", "help": {"short": "The dns settings to be applied on the publicIP addresses ."}, "args": [{"type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel", "options": ["domain-name-label"], "help": {"short": "The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope", "options": ["domain-name-label-scope"], "help": {"short": "The Domain name label scope of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the hashed domain name label with policy according to the domain name label scope and vm network profile unique ID."}, "enum": {"items": [{"name": "NoReuse", "value": "NoReuse"}, {"name": "ResourceGroupReuse", "value": "ResourceGroupReuse"}, {"name": "SubscriptionReuse", "value": "SubscriptionReuse"}, {"name": "TenantReuse", "value": "TenantReuse"}]}}]}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes", "options": ["idle-timeout-in-minutes"], "group": "Properties", "help": {"short": "The idle timeout of the public IP address."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags", "options": ["ip-tags"], "group": "Properties", "help": {"short": "The list of IP tags associated with the public IP address."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType", "options": ["ip-tag-type"], "help": {"short": "IP tag type. Example: FirstPartyUsage."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag", "options": ["tag"], "help": {"short": "IP tag associated with the public IP. Example: SQL, Storage etc."}}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion", "options": ["public-ip-address-version"], "group": "Properties", "help": {"short": "Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."}, "enum": {"items": [{"name": "IPv4", "value": "IPv4"}, {"name": "IPv6", "value": "IPv6"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAllocationMethod", "options": ["public-ip-allocation-method"], "group": "Properties", "help": {"short": "Specify the public IP allocation type"}, "enum": {"items": [{"name": "Dynamic", "value": "Dynamic"}, {"name": "Static", "value": "Static"}]}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix", "options": ["public-ip-prefix"], "group": "Properties", "help": {"short": "The PublicIPPrefix from which to allocate publicIP addresses."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku", "options": ["sku"], "help": {"short": "Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name", "options": ["name"], "help": {"short": "Specify public IP sku name"}, "enum": {"items": [{"name": "Basic", "value": "Basic"}, {"name": "Standard", "value": "Standard"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier", "options": ["tier"], "help": {"short": "Specify public IP sku tier"}, "enum": {"items": [{"name": "Global", "value": "Global"}, {"name": "Regional", "value": "Regional"}]}}]}]}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet", "options": ["subnet"], "group": "Properties", "help": {"short": "Specifies the identifier of the subnet."}}]}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup", "options": ["network-security-group"], "group": "Properties", "help": {"short": "The network security group."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Specifies the primary network interface in case the virtual machine has more than 1 network interface."}}]}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.networkProfile.networkInterfaces", "options": ["network-interfaces"], "help": {"short": "Specifies the list of resource Ids for the network interfaces associated with the virtual machine."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaces[].id", "options": ["id"], "help": {"short": "Resource Id"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.networkProfile.networkInterfaces[].properties.deleteOption", "options": ["delete-option"], "group": "Properties", "help": {"short": "Specify what happens to the network interface when the VM is deleted"}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.networkProfile.networkInterfaces[].properties.primary", "options": ["primary"], "group": "Properties", "help": {"short": "Specifies the primary network interface in case the virtual machine has more than 1 network interface."}}]}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.osProfile", "options": ["os-profile"], "group": "Properties", "help": {"short": "Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.adminPassword", "options": ["admin-password"], "help": {"short": "Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\" <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.adminUsername", "options": ["admin-username"], "help": {"short": "Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.allowExtensionOperations", "options": ["allow-extension-operations"], "help": {"short": "Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.computerName", "options": ["computer-name"], "help": {"short": "Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. **Max-length (Windows):** 15 characters. **Max-length (Linux):** 64 characters. For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules)."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.customData", "options": ["custom-data"], "help": {"short": "Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. **Note: Do not pass any secrets or passwords in customData property.** This property cannot be updated after the VM is created. The property 'customData' is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/). For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.osProfile.linuxConfiguration", "options": ["linux-configuration"], "help": {"short": "Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros)."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.linuxConfiguration.disablePasswordAuthentication", "options": ["disable-password-authentication"], "help": {"short": "Specifies whether password authentication should be disabled."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates", "options": ["enable-vm-agent-platform-updates"], "help": {"short": "Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings", "options": ["patch-settings"], "help": {"short": "[Preview Feature] Specifies settings related to VM Guest Patching on Linux."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.assessmentMode", "options": ["assessment-mode"], "help": {"short": "Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."}, "enum": {"items": [{"name": "AutomaticByPlatform", "value": "AutomaticByPlatform"}, {"name": "ImageDefault", "value": "ImageDefault"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings", "options": ["automatic-by-platform-settings"], "help": {"short": "Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule", "options": ["bypass-platform-safety-checks-on-user-schedule"], "help": {"short": "Enables customer to schedule patching without accidental upgrades"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting", "options": ["reboot-setting"], "help": {"short": "Specifies the reboot setting for all AutomaticByPlatform patch installation operations."}, "enum": {"items": [{"name": "Always", "value": "Always"}, {"name": "IfRequired", "value": "IfRequired"}, {"name": "Never", "value": "Never"}, {"name": "Unknown", "value": "Unknown"}]}}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.patchMode", "options": ["patch-mode"], "help": {"short": "Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true"}, "enum": {"items": [{"name": "AutomaticByPlatform", "value": "AutomaticByPlatform"}, {"name": "ImageDefault", "value": "ImageDefault"}]}}]}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.linuxConfiguration.provisionVMAgent", "options": ["provision-vm-agent"], "help": {"short": "Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.osProfile.linuxConfiguration.ssh", "options": ["ssh"], "help": {"short": "Specifies the ssh key configuration for a Linux OS."}, "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys", "options": ["public-keys"], "help": {"short": "The list of SSH public keys used to authenticate with linux based VMs."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].keyData", "options": ["key-data"], "help": {"short": "SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed)."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].path", "options": ["path"], "help": {"short": "Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"}}]}}]}]}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.requireGuestProvisionSignal", "options": ["require-guest-provision-signal"], "help": {"short": "Optional property which must either be set to True or omitted."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.osProfile.secrets", "options": ["secrets"], "help": {"short": "Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.osProfile.secrets[].sourceVault", "options": ["source-vault"], "help": {"short": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.osProfile.secrets[].vaultCertificates", "options": ["vault-certificates"], "help": {"short": "The list of key vault references in SourceVault which contain certificates."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateStore", "options": ["certificate-store"], "help": {"short": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateUrl", "options": ["certificate-url"], "help": {"short": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."}}]}}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.osProfile.windowsConfiguration", "options": ["windows-configuration"], "help": {"short": "Specifies Windows operating system settings on the virtual machine."}, "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent", "options": ["additional-unattend-content"], "help": {"short": "Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].componentName", "options": ["component-name"], "help": {"short": "The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup."}, "enum": {"items": [{"name": "Microsoft-Windows-Shell-Setup", "value": "Microsoft-Windows-Shell-Setup"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].content", "options": ["content"], "help": {"short": "Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].passName", "options": ["pass-name"], "help": {"short": "The pass name. Currently, the only allowable value is OobeSystem."}, "enum": {"items": [{"name": "OobeSystem", "value": "OobeSystem"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].settingName", "options": ["setting-name"], "help": {"short": "Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon."}, "enum": {"items": [{"name": "AutoLogon", "value": "AutoLogon"}, {"name": "FirstLogonCommands", "value": "FirstLogonCommands"}]}}]}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.windowsConfiguration.enableAutomaticUpdates", "options": ["enable-automatic-updates"], "help": {"short": "Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings", "options": ["patch-settings"], "help": {"short": "[Preview Feature] Specifies settings related to VM Guest Patching on Windows."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.assessmentMode", "options": ["assessment-mode"], "help": {"short": "Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. "}, "enum": {"items": [{"name": "AutomaticByPlatform", "value": "AutomaticByPlatform"}, {"name": "ImageDefault", "value": "ImageDefault"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings", "options": ["automatic-by-platform-settings"], "help": {"short": "Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule", "options": ["bypass-platform-safety-checks-on-user-schedule"], "help": {"short": "Enables customer to schedule patching without accidental upgrades"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting", "options": ["reboot-setting"], "help": {"short": "Specifies the reboot setting for all AutomaticByPlatform patch installation operations."}, "enum": {"items": [{"name": "Always", "value": "Always"}, {"name": "IfRequired", "value": "IfRequired"}, {"name": "Never", "value": "Never"}, {"name": "Unknown", "value": "Unknown"}]}}]}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching", "options": ["enable-hotpatching"], "help": {"short": "Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.patchMode", "options": ["patch-mode"], "help": {"short": "Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true "}, "enum": {"items": [{"name": "AutomaticByOS", "value": "AutomaticByOS"}, {"name": "AutomaticByPlatform", "value": "AutomaticByPlatform"}, {"name": "Manual", "value": "Manual"}]}}]}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.osProfile.windowsConfiguration.provisionVMAgent", "options": ["provision-vm-agent"], "help": {"short": "Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.timeZone", "options": ["time-zone"], "help": {"short": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones)."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.osProfile.windowsConfiguration.winRM", "options": ["win-rm"], "help": {"short": "Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell."}, "args": [{"nullable": true, "type": "array<object>", "var": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners", "options": ["listeners"], "help": {"short": "The list of Windows Remote Management listeners"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl", "options": ["certificate-url"], "help": {"short": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].protocol", "options": ["protocol"], "help": {"short": "Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**"}, "enum": {"items": [{"name": "Http", "value": "Http"}, {"name": "Https", "value": "Https"}]}}]}}]}]}]}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.platformFaultDomain", "options": ["platform-fault-domain"], "group": "Properties", "help": {"short": "Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set. The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' greater than 1. This property cannot be updated once the Virtual Machine is created. Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api-version: 2020-12-01."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.priority", "options": ["priority"], "group": "Properties", "help": {"short": "Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01"}, "enum": {"items": [{"name": "Low", "value": "Low"}, {"name": "Regular", "value": "Regular"}, {"name": "Spot", "value": "Spot"}]}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.proximityPlacementGroup", "options": ["proximity-placement-group"], "group": "Properties", "help": {"short": "Specifies information about the proximity placement group that the virtual machine should be assigned to. Minimum api-version: 2018-04-01."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.scheduledEventsPolicy", "options": ["scheduled-events-policy"], "group": "Properties", "help": {"short": "Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the virtual machine."}, "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets", "options": ["scheduled-events-additional-publishing-targets"], "help": {"short": "The configuration parameters used while publishing scheduledEventsAdditionalPublishingTargets."}, "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph", "options": ["event-grid-and-resource-graph"], "help": {"short": "The configuration parameters used while creating eventGridAndResourceGraph Scheduled Event setting."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph.enable", "options": ["enable"], "help": {"short": "Specifies if event grid and resource graph is enabled for Scheduled event related configurations."}}]}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.scheduledEventsPolicy.userInitiatedReboot", "options": ["user-initiated-reboot"], "help": {"short": "The configuration parameters used while creating userInitiatedReboot scheduled event setting creation."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.scheduledEventsPolicy.userInitiatedReboot.automaticallyApprove", "options": ["automatically-approve"], "help": {"short": "Specifies Reboot Scheduled Event related configurations."}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy", "options": ["user-initiated-redeploy"], "help": {"short": "The configuration parameters used while creating userInitiatedRedeploy scheduled event setting creation."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy.automaticallyApprove", "options": ["automatically-approve"], "help": {"short": "Specifies Redeploy Scheduled Event related configurations."}}]}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.scheduledEventsProfile", "options": ["scheduled-events-profile"], "group": "Properties", "help": {"short": "Specifies Scheduled Event related configurations."}, "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile", "options": ["os-image-notification-profile"], "help": {"short": "Specifies OS Image Scheduled Event related configurations."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.enable", "options": ["enable"], "help": {"short": "Specifies whether the OS Image Scheduled event is enabled or disabled."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout", "options": ["not-before-timeout"], "help": {"short": "Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must be 15 minutes (PT15M)"}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile", "options": ["terminate-notification-profile"], "help": {"short": "Specifies Terminate Scheduled Event related configurations."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.enable", "options": ["enable"], "help": {"short": "Specifies whether the Terminate Scheduled event is enabled or disabled."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout", "options": ["not-before-timeout"], "help": {"short": "Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)"}}]}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.securityProfile", "options": ["security-profile"], "group": "Properties", "help": {"short": "Specifies the Security related profile settings for the virtual machine."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.securityProfile.encryptionAtHost", "options": ["encryption-at-host"], "help": {"short": "This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.securityProfile.encryptionIdentity", "options": ["encryption-identity"], "help": {"short": "Specifies the Managed Identity used by ADE to get access token for keyvault operations."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.securityProfile.encryptionIdentity.userAssignedIdentityResourceId", "options": ["user-assigned-identity-resource-id"], "help": {"short": "Specifies ARM Resource ID of one of the user identities associated with the VM."}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.securityProfile.proxyAgentSettings", "options": ["proxy-agent-settings"], "help": {"short": "Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.securityProfile.proxyAgentSettings.enabled", "options": ["enabled"], "help": {"short": "Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set."}}, {"nullable": true, "type": "@HostEndpointSettings_update", "var": "$parameters.properties.securityProfile.proxyAgentSettings.imds", "options": ["imds"], "help": {"short": "Specifies the IMDS endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01."}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.securityProfile.proxyAgentSettings.keyIncarnationId", "options": ["key-incarnation-id"], "help": {"short": "Increase the value of this property allows user to reset the key used for securing communication channel between guest and host."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.securityProfile.proxyAgentSettings.mode", "options": ["mode"], "help": {"short": "Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode."}, "enum": {"items": [{"name": "Audit", "value": "Audit"}, {"name": "Enforce", "value": "Enforce"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.securityProfile.proxyAgentSettings.wireServer", "options": ["wire-server"], "help": {"short": "Specifies the Wire Server endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01."}, "args": [{"nullable": true, "type": "string", "var": "@HostEndpointSettings_update.inVMAccessControlProfileReferenceId", "options": ["in-vm-access-control-profile-reference-id"], "help": {"short": "Specifies the InVMAccessControlProfileVersion resource id in the format of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{profile}/versions/{version}"}}, {"nullable": true, "type": "string", "var": "@HostEndpointSettings_update.mode", "options": ["mode"], "help": {"short": "Specifies the execution mode. In Audit mode, the system acts as if it is enforcing the access control policy, including emitting access denial entries in the logs but it does not actually deny any requests to host endpoints. In Enforce mode, the system will enforce the access control and it is the recommended mode of operation."}, "enum": {"items": [{"name": "Audit", "value": "Audit"}, {"name": "Disabled", "value": "Disabled"}, {"name": "Enforce", "value": "Enforce"}]}}], "cls": "HostEndpointSettings_update"}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.securityProfile.securityType", "options": ["security-type"], "help": {"short": "Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set."}, "enum": {"items": [{"name": "ConfidentialVM", "value": "ConfidentialVM"}, {"name": "TrustedLaunch", "value": "TrustedLaunch"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.securityProfile.uefiSettings", "options": ["uefi-settings"], "help": {"short": "Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.securityProfile.uefiSettings.secureBootEnabled", "options": ["secure-boot-enabled"], "help": {"short": "Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.securityProfile.uefiSettings.vTpmEnabled", "options": ["v-tpm-enabled"], "help": {"short": "Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01."}}]}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile", "options": ["storage-profile"], "group": "Properties", "help": {"short": "Specifies the storage settings for the virtual machine disks."}, "args": [{"nullable": true, "type": "boolean", "var": "$parameters.properties.storageProfile.alignRegionalDisksToVMZone", "options": ["align-regional-disks-to-vm-zone"], "help": {"short": "Specifies whether the regional disks should be aligned/moved to the VM zone. This is applicable only for VMs with placement property set. Please note that this change is irreversible. Minimum api-version: 2024-11-01."}}, {"nullable": true, "type": "array<object>", "var": "$parameters.properties.storageProfile.dataDisks", "options": ["data-disks"], "help": {"short": "Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].caching", "options": ["caching"], "help": {"short": "Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**"}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "ReadOnly", "value": "ReadOnly"}, {"name": "ReadWrite", "value": "ReadWrite"}]}}, {"type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].createOption", "options": ["create-option"], "help": {"short": "Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine data disk. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described. **Empty:** This value is used when creating an empty data disk. **Copy:** This value is used to create a data disk from a snapshot or another disk. **Restore:** This value is used to create a data disk from a disk restore point."}, "enum": {"items": [{"name": "Attach", "value": "Attach"}, {"name": "Copy", "value": "Copy"}, {"name": "Empty", "value": "Empty"}, {"name": "FromImage", "value": "FromImage"}, {"name": "Restore", "value": "Restore"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].deleteOption", "options": ["delete-option"], "help": {"short": "Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the data disk is deleted when VM is deleted. **Detach.** If this value is used, the data disk is retained after VM is deleted. The default value is set to **Detach**."}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].detachOption", "options": ["detach-option"], "help": {"short": "Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach.** detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'."}, "enum": {"items": [{"name": "ForceDetach", "value": "ForceDetach"}]}}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.storageProfile.dataDisks[].diskSizeGB", "options": ["disk-size-gb"], "help": {"short": "Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."}}, {"nullable": true, "type": "@VirtualHardDisk_update", "var": "$parameters.properties.storageProfile.dataDisks[].image", "options": ["image"], "help": {"short": "The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."}}, {"type": "integer32", "var": "$parameters.properties.storageProfile.dataDisks[].lun", "options": ["lun"], "help": {"short": "Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."}}, {"nullable": true, "type": "@ManagedDiskParameters_update", "var": "$parameters.properties.storageProfile.dataDisks[].managedDisk", "options": ["managed-disk"], "help": {"short": "The managed disk parameters."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].name", "options": ["name"], "help": {"short": "The disk name."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile.dataDisks[].sourceResource", "options": ["source-resource"], "help": {"short": "The source resource identifier. It can be a snapshot, or disk restore point from which to create a disk."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.dataDisks[].sourceResource.id", "options": ["id"], "help": {"short": "The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."}}]}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.storageProfile.dataDisks[].toBeDetached", "options": ["to-be-detached"], "help": {"short": "Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset"}}, {"nullable": true, "type": "@VirtualHardDisk_update", "var": "$parameters.properties.storageProfile.dataDisks[].vhd", "options": ["vhd"], "help": {"short": "The virtual hard disk."}}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.storageProfile.dataDisks[].writeAcceleratorEnabled", "options": ["write-accelerator-enabled"], "help": {"short": "Specifies whether writeAccelerator should be enabled or disabled on the disk."}}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.diskControllerType", "options": ["disk-controller-type"], "help": {"short": "Specifies the disk controller type configured for the VM. **Note:** This property will be set to the default disk controller type if not specified provided virtual machine is being created with 'hyperVGeneration' set to V2 based on the capabilities of the operating system disk and VM size from the the specified minimum api version. You need to deallocate the VM before updating its disk controller type unless you are updating the VM size in the VM configuration which implicitly deallocates and reallocates the VM. Minimum api-version: 2022-08-01."}, "enum": {"items": [{"name": "NVMe", "value": "NVMe"}, {"name": "SCSI", "value": "SCSI"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile.imageReference", "options": ["image-reference"], "help": {"short": "Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.imageReference.communityGalleryImageId", "options": ["community-gallery-image-id"], "help": {"short": "Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.imageReference.id", "options": ["id"], "help": {"short": "Resource Id"}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.imageReference.offer", "options": ["offer"], "help": {"short": "Specifies the offer of the platform image or marketplace image used to create the virtual machine."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.imageReference.publisher", "options": ["publisher"], "help": {"short": "The image publisher."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.imageReference.sharedGalleryImageId", "options": ["shared-gallery-image-id"], "help": {"short": "Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.imageReference.sku", "options": ["sku"], "help": {"short": "The image SKU."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.imageReference.version", "options": ["version"], "help": {"short": "Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input."}}]}, {"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile.osDisk", "options": ["os-disk"], "help": {"short": "Specifies information about the operating system disk used by the virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.osDisk.caching", "options": ["caching"], "help": {"short": "Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**"}, "enum": {"items": [{"name": "None", "value": "None"}, {"name": "ReadOnly", "value": "ReadOnly"}, {"name": "ReadWrite", "value": "ReadWrite"}]}}, {"type": "string", "var": "$parameters.properties.storageProfile.osDisk.createOption", "options": ["create-option"], "help": {"short": "Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described."}, "enum": {"items": [{"name": "Attach", "value": "Attach"}, {"name": "Copy", "value": "Copy"}, {"name": "Empty", "value": "Empty"}, {"name": "FromImage", "value": "FromImage"}, {"name": "Restore", "value": "Restore"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.osDisk.deleteOption", "options": ["delete-option"], "help": {"short": "Specifies whether OS Disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the OS disk is deleted when VM is deleted. **Detach.** If this value is used, the os disk is retained after VM is deleted. The default value is set to **Detach**. For an ephemeral OS Disk, the default value is set to **Delete**. The user cannot change the delete option for an ephemeral OS Disk."}, "enum": {"items": [{"name": "Delete", "value": "Delete"}, {"name": "Detach", "value": "Detach"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile.osDisk.diffDiskSettings", "options": ["diff-disk-settings"], "help": {"short": "Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine."}, "args": [{"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.osDisk.diffDiskSettings.option", "options": ["option"], "help": {"short": "Specifies the ephemeral disk settings for operating system disk."}, "enum": {"items": [{"name": "Local", "value": "Local"}]}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.osDisk.diffDiskSettings.placement", "options": ["placement"], "help": {"short": "Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk,** **NvmeDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** or **NvmeDisk** is used. Refer to the VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk. Minimum api-version for NvmeDisk: 2024-03-01."}, "enum": {"items": [{"name": "CacheDisk", "value": "CacheDisk"}, {"name": "NvmeDisk", "value": "NvmeDisk"}, {"name": "ResourceDisk", "value": "ResourceDisk"}]}}]}, {"nullable": true, "type": "integer32", "var": "$parameters.properties.storageProfile.osDisk.diskSizeGB", "options": ["disk-size-gb"], "help": {"short": "Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings", "options": ["encryption-settings"], "help": {"short": "Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15."}, "args": [{"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey", "options": ["disk-encryption-key"], "help": {"short": "Specifies the location of the disk encryption key, which is a Key Vault Secret."}, "args": [{"type": "string", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl", "options": ["secret-url"], "help": {"short": "The URL referencing a secret in a Key Vault."}}, {"type": "object", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault", "options": ["source-vault"], "help": {"short": "The relative URL of the Key Vault containing the secret."}, "args": [{"nullable": true, "type": "string", "var": "@SubResource_update.id", "options": ["id"], "help": {"short": "Resource Id"}}], "cls": "SubResource_update"}]}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.enabled", "options": ["enabled"], "help": {"short": "Specifies whether disk encryption should be enabled on the virtual machine."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey", "options": ["key-encryption-key"], "help": {"short": "Specifies the location of the key encryption key in Key Vault."}, "args": [{"type": "string", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl", "options": ["key-url"], "help": {"short": "The URL referencing a key encryption key in Key Vault."}}, {"type": "@SubResource_update", "var": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault", "options": ["source-vault"], "help": {"short": "The relative URL of the Key Vault containing the key."}}]}]}, {"nullable": true, "type": "@VirtualHardDisk_update", "var": "$parameters.properties.storageProfile.osDisk.image", "options": ["image"], "help": {"short": "The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."}}, {"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile.osDisk.managedDisk", "options": ["managed-disk"], "help": {"short": "The managed disk parameters."}, "args": [{"nullable": true, "type": "object", "var": "@ManagedDiskParameters_update.diskEncryptionSet", "options": ["disk-encryption-set"], "help": {"short": "Specifies the customer managed disk encryption set resource id for the managed disk."}, "args": [{"nullable": true, "type": "string", "var": "@DiskEncryptionSetParameters_update.id", "options": ["id"], "help": {"short": "Resource Id"}}], "cls": "DiskEncryptionSetParameters_update"}, {"nullable": true, "type": "string", "var": "@ManagedDiskParameters_update.id", "options": ["id"], "help": {"short": "Resource Id"}}, {"nullable": true, "type": "object", "var": "@ManagedDiskParameters_update.securityProfile", "options": ["security-profile"], "help": {"short": "Specifies the security profile for the managed disk."}, "args": [{"nullable": true, "type": "@DiskEncryptionSetParameters_update", "var": "@ManagedDiskParameters_update.securityProfile.diskEncryptionSet", "options": ["disk-encryption-set"], "help": {"short": "Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob."}}, {"nullable": true, "type": "string", "var": "@ManagedDiskParameters_update.securityProfile.securityEncryptionType", "options": ["security-encryption-type"], "help": {"short": "Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob.. **Note:** It can be set for only Confidential VMs."}, "enum": {"items": [{"name": "DiskWithVMGuestState", "value": "DiskWithVMGuestState"}, {"name": "NonPersistedTPM", "value": "NonPersistedTPM"}, {"name": "VMGuestStateOnly", "value": "VMGuestStateOnly"}]}}]}, {"nullable": true, "type": "string", "var": "@ManagedDiskParameters_update.storageAccountType", "options": ["storage-account-type"], "help": {"short": "Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk."}, "enum": {"items": [{"name": "PremiumV2_LRS", "value": "PremiumV2_LRS"}, {"name": "Premium_LRS", "value": "Premium_LRS"}, {"name": "Premium_ZRS", "value": "Premium_ZRS"}, {"name": "StandardSSD_LRS", "value": "StandardSSD_LRS"}, {"name": "StandardSSD_ZRS", "value": "StandardSSD_ZRS"}, {"name": "Standard_LRS", "value": "Standard_LRS"}, {"name": "UltraSSD_LRS", "value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_update"}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.osDisk.name", "options": ["name"], "help": {"short": "The disk name."}}, {"nullable": true, "type": "string", "var": "$parameters.properties.storageProfile.osDisk.osType", "options": ["os-type"], "help": {"short": "This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**"}, "enum": {"items": [{"name": "Linux", "value": "Linux"}, {"name": "Windows", "value": "Windows"}]}}, {"nullable": true, "type": "object", "var": "$parameters.properties.storageProfile.osDisk.vhd", "options": ["vhd"], "help": {"short": "The virtual hard disk."}, "args": [{"nullable": true, "type": "string", "var": "@VirtualHardDisk_update.uri", "options": ["uri"], "help": {"short": "Specifies the virtual hard disk's uri."}}], "cls": "VirtualHardDisk_update"}, {"nullable": true, "type": "boolean", "var": "$parameters.properties.storageProfile.osDisk.writeAcceleratorEnabled", "options": ["write-accelerator-enabled"], "help": {"short": "Specifies whether writeAccelerator should be enabled or disabled on the disk."}}]}]}, {"nullable": true, "type": "string", "var": "$parameters.properties.userData", "options": ["user-data"], "group": "Properties", "help": {"short": "UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01."}}, {"nullable": true, "type": "@SubResource_update", "var": "$parameters.properties.virtualMachineScaleSet", "options": ["virtual-machine-scale-set"], "group": "Properties", "help": {"short": "Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. This property cannot exist along with a non-null properties.availabilitySet reference. Minimum api-version: 2019-03-01."}}]}], "operations": [{"operationId": "VirtualMachines_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "object", "name": "extendedLocation", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "EdgeZone"}]}}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "managedBy"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "placement", "props": [{"type": "array<string>", "name": "excludeZones", "item": {"type": "string"}}, {"type": "array<string>", "name": "includeZones", "item": {"type": "string"}}, {"type": "string", "name": "zonePlacementPolicy", "enum": {"items": [{"value": "Any"}]}}]}, {"type": "object", "name": "plan", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "product"}, {"type": "string", "name": "promotionCode"}, {"type": "string", "name": "publisher"}]}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "additionalCapabilities", "props": [{"type": "boolean", "name": "hibernationEnabled"}, {"type": "boolean", "name": "ultraSSDEnabled"}]}, {"type": "object", "name": "applicationProfile", "props": [{"type": "array<object>", "name": "galleryApplications", "item": {"type": "object", "props": [{"type": "string", "name": "configurationReference"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "integer32", "name": "order"}, {"type": "string", "name": "packageReferenceId", "required": true}, {"type": "string", "name": "tags"}, {"type": "boolean", "name": "treatFailureAsDeploymentFailure"}]}, "identifiers": ["packageReferenceId"]}]}, {"type": "@SubResource_read", "name": "availabilitySet"}, {"type": "object", "name": "billingProfile", "props": [{"type": "float64", "name": "maxPrice"}]}, {"type": "object", "name": "capacityReservation", "props": [{"type": "@SubResource_read", "name": "capacityReservationGroup"}]}, {"type": "object", "name": "diagnosticsProfile", "props": [{"type": "object", "name": "bootDiagnostics", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "storageUri"}]}]}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "Deallocate"}, {"value": "Delete"}]}}, {"type": "string", "name": "extensionsTimeBudget"}, {"type": "object", "name": "hardwareProfile", "props": [{"type": "string", "name": "vmSize", "enum": {"items": [{"value": "Basic_A0"}, {"value": "Basic_A1"}, {"value": "Basic_A2"}, {"value": "Basic_A3"}, {"value": "Basic_A4"}, {"value": "Standard_A0"}, {"value": "Standard_A1"}, {"value": "Standard_A10"}, {"value": "Standard_A11"}, {"value": "Standard_A1_v2"}, {"value": "Standard_A2"}, {"value": "Standard_A2_v2"}, {"value": "Standard_A2m_v2"}, {"value": "Standard_A3"}, {"value": "Standard_A4"}, {"value": "Standard_A4_v2"}, {"value": "Standard_A4m_v2"}, {"value": "Standard_A5"}, {"value": "Standard_A6"}, {"value": "Standard_A7"}, {"value": "Standard_A8"}, {"value": "Standard_A8_v2"}, {"value": "Standard_A8m_v2"}, {"value": "Standard_A9"}, {"value": "Standard_B1ms"}, {"value": "Standard_B1s"}, {"value": "Standard_B2ms"}, {"value": "Standard_B2s"}, {"value": "Standard_B4ms"}, {"value": "Standard_B8ms"}, {"value": "Standard_D1"}, {"value": "Standard_D11"}, {"value": "Standard_D11_v2"}, {"value": "Standard_D12"}, {"value": "Standard_D12_v2"}, {"value": "Standard_D13"}, {"value": "Standard_D13_v2"}, {"value": "Standard_D14"}, {"value": "Standard_D14_v2"}, {"value": "Standard_D15_v2"}, {"value": "Standard_D16_v3"}, {"value": "Standard_D16s_v3"}, {"value": "Standard_D1_v2"}, {"value": "Standard_D2"}, {"value": "Standard_D2_v2"}, {"value": "Standard_D2_v3"}, {"value": "Standard_D2s_v3"}, {"value": "Standard_D3"}, {"value": "Standard_D32_v3"}, {"value": "Standard_D32s_v3"}, {"value": "Standard_D3_v2"}, {"value": "Standard_D4"}, {"value": "Standard_D4_v2"}, {"value": "Standard_D4_v3"}, {"value": "Standard_D4s_v3"}, {"value": "Standard_D5_v2"}, {"value": "Standard_D64_v3"}, {"value": "Standard_D64s_v3"}, {"value": "Standard_D8_v3"}, {"value": "Standard_D8s_v3"}, {"value": "Standard_DS1"}, {"value": "Standard_DS11"}, {"value": "Standard_DS11_v2"}, {"value": "Standard_DS12"}, {"value": "Standard_DS12_v2"}, {"value": "Standard_DS13"}, {"value": "Standard_DS13-2_v2"}, {"value": "Standard_DS13-4_v2"}, {"value": "Standard_DS13_v2"}, {"value": "Standard_DS14"}, {"value": "Standard_DS14-4_v2"}, {"value": "Standard_DS14-8_v2"}, {"value": "Standard_DS14_v2"}, {"value": "Standard_DS15_v2"}, {"value": "Standard_DS1_v2"}, {"value": "Standard_DS2"}, {"value": "Standard_DS2_v2"}, {"value": "Standard_DS3"}, {"value": "Standard_DS3_v2"}, {"value": "Standard_DS4"}, {"value": "Standard_DS4_v2"}, {"value": "Standard_DS5_v2"}, {"value": "Standard_E16_v3"}, {"value": "Standard_E16s_v3"}, {"value": "Standard_E2_v3"}, {"value": "Standard_E2s_v3"}, {"value": "Standard_E32-16_v3"}, {"value": "Standard_E32-8s_v3"}, {"value": "Standard_E32_v3"}, {"value": "Standard_E32s_v3"}, {"value": "Standard_E4_v3"}, {"value": "Standard_E4s_v3"}, {"value": "Standard_E64-16s_v3"}, {"value": "Standard_E64-32s_v3"}, {"value": "Standard_E64_v3"}, {"value": "Standard_E64s_v3"}, {"value": "Standard_E8_v3"}, {"value": "Standard_E8s_v3"}, {"value": "Standard_F1"}, {"value": "Standard_F16"}, {"value": "Standard_F16s"}, {"value": "Standard_F16s_v2"}, {"value": "Standard_F1s"}, {"value": "Standard_F2"}, {"value": "Standard_F2s"}, {"value": "Standard_F2s_v2"}, {"value": "Standard_F32s_v2"}, {"value": "Standard_F4"}, {"value": "Standard_F4s"}, {"value": "Standard_F4s_v2"}, {"value": "Standard_F64s_v2"}, {"value": "Standard_F72s_v2"}, {"value": "Standard_F8"}, {"value": "Standard_F8s"}, {"value": "Standard_F8s_v2"}, {"value": "Standard_G1"}, {"value": "Standard_G2"}, {"value": "Standard_G3"}, {"value": "Standard_G4"}, {"value": "Standard_G5"}, {"value": "Standard_GS1"}, {"value": "Standard_GS2"}, {"value": "Standard_GS3"}, {"value": "Standard_GS4"}, {"value": "Standard_GS4-4"}, {"value": "Standard_GS4-8"}, {"value": "Standard_GS5"}, {"value": "Standard_GS5-16"}, {"value": "Standard_GS5-8"}, {"value": "Standard_H16"}, {"value": "Standard_H16m"}, {"value": "Standard_H16mr"}, {"value": "Standard_H16r"}, {"value": "Standard_H8"}, {"value": "Standard_H8m"}, {"value": "Standard_L16s"}, {"value": "Standard_L32s"}, {"value": "Standard_L4s"}, {"value": "Standard_L8s"}, {"value": "Standard_M128-32ms"}, {"value": "Standard_M128-64ms"}, {"value": "Standard_M128ms"}, {"value": "Standard_M128s"}, {"value": "Standard_M64-16ms"}, {"value": "Standard_M64-32ms"}, {"value": "Standard_M64ms"}, {"value": "Standard_M64s"}, {"value": "Standard_NC12"}, {"value": "Standard_NC12s_v2"}, {"value": "Standard_NC12s_v3"}, {"value": "Standard_NC24"}, {"value": "Standard_NC24r"}, {"value": "Standard_NC24rs_v2"}, {"value": "Standard_NC24rs_v3"}, {"value": "Standard_NC24s_v2"}, {"value": "Standard_NC24s_v3"}, {"value": "Standard_NC6"}, {"value": "Standard_NC6s_v2"}, {"value": "Standard_NC6s_v3"}, {"value": "Standard_ND12s"}, {"value": "Standard_ND24rs"}, {"value": "Standard_ND24s"}, {"value": "Standard_ND6s"}, {"value": "Standard_NV12"}, {"value": "Standard_NV24"}, {"value": "Standard_NV6"}]}}, {"type": "object", "name": "vmSizeProperties", "props": [{"type": "integer32", "name": "vCPUsAvailable"}, {"type": "integer32", "name": "vCPUsPerCore"}]}]}, {"type": "@SubResource_read", "name": "host"}, {"type": "@SubResource_read", "name": "hostGroup"}, {"readOnly": true, "type": "object", "name": "instanceView", "props": [{"readOnly": true, "type": "string", "name": "assignedHost"}, {"type": "object", "name": "bootDiagnostics", "props": [{"readOnly": true, "type": "string", "name": "consoleScreenshotBlobUri"}, {"readOnly": true, "type": "string", "name": "serialConsoleLogBlobUri"}, {"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}, {"type": "string", "name": "computerName"}, {"type": "array<object>", "name": "disks", "item": {"type": "object", "props": [{"type": "array<@DiskEncryptionSettings_read>", "name": "encryptionSettings", "item": {"type": "@DiskEncryptionSettings_read"}}, {"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "extensions", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "array<@InstanceViewStatus_read>", "name": "substatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "cls": "VirtualMachineExtensionInstanceView_read"}, "identifiers": ["name", "type"]}, {"type": "string", "name": "hyperVGeneration", "enum": {"items": [{"value": "V1"}, {"value": "V2"}]}}, {"readOnly": true, "type": "boolean", "name": "isVMInStandbyPool"}, {"type": "object", "name": "maintenanceRedeployStatus", "props": [{"type": "boolean", "name": "isCustomerInitiatedMaintenanceAllowed"}, {"type": "string", "name": "lastOperationMessage"}, {"type": "string", "name": "lastOperationResultCode", "enum": {"items": [{"value": "MaintenanceAborted"}, {"value": "MaintenanceCompleted"}, {"value": "None"}, {"value": "RetryLater"}]}}, {"type": "dateTime", "name": "maintenanceWindowEndTime"}, {"type": "dateTime", "name": "maintenanceWindowStartTime"}, {"type": "dateTime", "name": "preMaintenanceWindowEndTime"}, {"type": "dateTime", "name": "preMaintenanceWindowStartTime"}]}, {"type": "string", "name": "osName"}, {"type": "string", "name": "osVersion"}, {"type": "object", "name": "patchStatus", "props": [{"type": "object", "name": "availablePatchSummary", "props": [{"readOnly": true, "type": "string", "name": "assessmentActivityId"}, {"readOnly": true, "type": "integer32", "name": "criticalAndSecurityPatchCount"}, {"readOnly": true, "type": "object", "name": "error", "props": [{"type": "string", "name": "code"}, {"type": "array<object>", "name": "details", "item": {"type": "object", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}]}, "identifiers": ["target", "message"]}, {"type": "object", "name": "innererror", "props": [{"type": "string", "name": "errordetail"}, {"type": "string", "name": "exceptiontype"}]}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}], "cls": "ApiError_read"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "integer32", "name": "otherPatchCount"}, {"readOnly": true, "type": "boolean", "name": "rebootPending"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}, {"readOnly": true, "type": "array<@InstanceViewStatus_read>", "name": "configurationStatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "lastPatchInstallationSummary", "props": [{"readOnly": true, "type": "@ApiError_read", "name": "error"}, {"readOnly": true, "type": "integer32", "name": "excludedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "failedPatchCount"}, {"readOnly": true, "type": "string", "name": "installationActivityId"}, {"readOnly": true, "type": "integer32", "name": "installedPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "boolean", "name": "maintenanceWindowExceeded"}, {"readOnly": true, "type": "integer32", "name": "notSelectedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "pendingPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "integer32", "name": "platformUpdateDomain"}, {"type": "string", "name": "rdpThumbPrint"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "vmAgent", "props": [{"type": "array<object>", "name": "extensionHandlers", "item": {"type": "object", "props": [{"type": "object", "name": "status", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "displayStatus"}, {"type": "string", "name": "level", "enum": {"items": [{"value": "Error"}, {"value": "Info"}, {"value": "Warning"}]}}, {"type": "string", "name": "message"}, {"type": "dateTime", "name": "time"}], "cls": "InstanceViewStatus_read"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}]}}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "vmAgentVersion"}]}, {"readOnly": true, "type": "object", "name": "vmHealth", "props": [{"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}]}, {"type": "string", "name": "licenseType"}, {"type": "object", "name": "networkProfile", "props": [{"type": "string", "name": "networkApiVersion", "enum": {"items": [{"value": "2020-11-01"}, {"value": "2022-11-01"}]}}, {"type": "array<object>", "name": "networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "auxiliaryMode", "enum": {"items": [{"value": "AcceleratedConnections"}, {"value": "Floating"}, {"value": "None"}]}}, {"type": "string", "name": "auxiliarySku", "enum": {"items": [{"value": "A1"}, {"value": "A2"}, {"value": "A4"}, {"value": "A8"}, {"value": "None"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "disableTcpStateTracking"}, {"type": "object", "name": "dnsSettings", "props": [{"type": "array<string>", "name": "dnsServers", "item": {"type": "string"}}]}, {"type": "@SubResource_read", "name": "dscpConfiguration"}, {"type": "boolean", "name": "enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableFpga"}, {"type": "boolean", "name": "enableIPForwarding"}, {"type": "array<object>", "name": "ipConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<@SubResource_read>", "name": "applicationGatewayBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "applicationSecurityGroups", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "loadBalancerBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "object", "name": "publicIPAddressConfiguration", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "required": true}, {"type": "string", "name": "domainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}]}}]}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "array<object>", "name": "ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType"}, {"type": "string", "name": "tag"}]}}, {"type": "string", "name": "publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_read", "name": "publicIPPrefix"}], "clientFlatten": true}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}, {"type": "string", "name": "tier", "enum": {"items": [{"value": "Global"}, {"value": "Regional"}]}}]}]}, {"type": "@SubResource_read", "name": "subnet"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "@SubResource_read", "name": "networkSecurityGroup"}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "id"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}}]}, {"type": "object", "name": "osProfile", "props": [{"type": "string", "name": "adminPassword", "secret": true}, {"type": "string", "name": "adminUsername"}, {"type": "boolean", "name": "allowExtensionOperations"}, {"type": "string", "name": "computerName"}, {"type": "string", "name": "customData"}, {"type": "object", "name": "linuxConfiguration", "props": [{"type": "boolean", "name": "disablePasswordAuthentication"}, {"type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "object", "name": "ssh", "props": [{"type": "array<object>", "name": "publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData"}, {"type": "string", "name": "path"}]}, "identifiers": ["path"]}]}]}, {"type": "boolean", "name": "requireGuestProvisionSignal"}, {"type": "array<object>", "name": "secrets", "item": {"type": "object", "props": [{"type": "@SubResource_read", "name": "sourceVault"}, {"type": "array<object>", "name": "vaultCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "certificateStore"}, {"type": "string", "name": "certificateUrl"}]}, "identifiers": ["certificateUrl"]}]}}, {"type": "object", "name": "windowsConfiguration", "props": [{"type": "array<object>", "name": "additionalUnattendContent", "item": {"type": "object", "props": [{"type": "string", "name": "componentName", "enum": {"items": [{"value": "Microsoft-Windows-Shell-Setup"}]}}, {"type": "string", "name": "content"}, {"type": "string", "name": "passName", "enum": {"items": [{"value": "OobeSystem"}]}}, {"type": "string", "name": "settingName", "enum": {"items": [{"value": "AutoLogon"}, {"value": "FirstLogonCommands"}]}}]}}, {"type": "boolean", "name": "enableAutomaticUpdates"}, {"readOnly": true, "type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "boolean", "name": "enableHotpatching"}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByOS"}, {"value": "AutomaticByPlatform"}, {"value": "Manual"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "string", "name": "timeZone"}, {"type": "object", "name": "winRM", "props": [{"type": "array<object>", "name": "listeners", "item": {"type": "object", "props": [{"type": "string", "name": "certificateUrl"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}]}}]}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "string", "name": "priority", "enum": {"items": [{"value": "Low"}, {"value": "Regular"}, {"value": "Spot"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "proximityPlacementGroup"}, {"type": "object", "name": "scheduledEventsPolicy", "props": [{"type": "object", "name": "scheduledEventsAdditionalPublishingTargets", "props": [{"type": "object", "name": "eventGridAndResourceGraph", "props": [{"type": "boolean", "name": "enable"}]}]}, {"type": "object", "name": "userInitiatedReboot", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}, {"type": "object", "name": "userInitiatedRedeploy", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}]}, {"type": "object", "name": "scheduledEventsProfile", "props": [{"type": "object", "name": "osImageNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}, {"type": "object", "name": "terminateNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}]}, {"type": "object", "name": "securityProfile", "props": [{"type": "boolean", "name": "encryptionAtHost"}, {"type": "object", "name": "encryptionIdentity", "props": [{"type": "string", "name": "userAssignedIdentityResourceId"}]}, {"type": "object", "name": "proxyAgentSettings", "props": [{"type": "boolean", "name": "enabled"}, {"type": "@HostEndpointSettings_read", "name": "imds"}, {"type": "integer32", "name": "keyIncarnationId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Enforce"}]}}, {"type": "object", "name": "wireServer", "props": [{"type": "string", "name": "inVMAccessControlProfileReferenceId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Disabled"}, {"value": "Enforce"}]}}], "cls": "HostEndpointSettings_read"}]}, {"type": "string", "name": "securityType", "enum": {"items": [{"value": "ConfidentialVM"}, {"value": "TrustedLaunch"}]}}, {"type": "object", "name": "uefiSettings", "props": [{"type": "boolean", "name": "secureBootEnabled"}, {"type": "boolean", "name": "vTpmEnabled"}]}]}, {"type": "object", "name": "storageProfile", "props": [{"type": "boolean", "name": "alignRegionalDisksToVMZone"}, {"type": "array<object>", "name": "dataDisks", "item": {"type": "object", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "string", "name": "detachOption", "enum": {"items": [{"value": "ForceDetach"}]}}, {"readOnly": true, "type": "integer64", "name": "diskIOPSReadWrite"}, {"readOnly": true, "type": "integer64", "name": "diskMBpsReadWrite"}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "integer32", "name": "lun", "required": true}, {"type": "@ManagedDiskParameters_read", "name": "managedDisk"}, {"type": "string", "name": "name"}, {"type": "object", "name": "sourceResource", "props": [{"type": "string", "name": "id"}]}, {"type": "boolean", "name": "toBeDetached"}, {"type": "@VirtualHardDisk_read", "name": "vhd"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}, "identifiers": ["lun"]}, {"type": "string", "name": "diskControllerType", "enum": {"items": [{"value": "NVMe"}, {"value": "SCSI"}]}}, {"type": "object", "name": "imageReference", "props": [{"type": "string", "name": "communityGalleryImageId"}, {"readOnly": true, "type": "string", "name": "exactVersion"}, {"type": "string", "name": "id"}, {"type": "string", "name": "offer"}, {"type": "string", "name": "publisher"}, {"type": "string", "name": "sharedGalleryImageId"}, {"type": "string", "name": "sku"}, {"type": "string", "name": "version"}]}, {"type": "object", "name": "osDisk", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "diffDiskSettings", "props": [{"type": "string", "name": "option", "enum": {"items": [{"value": "Local"}]}}, {"type": "string", "name": "placement", "enum": {"items": [{"value": "CacheDisk"}, {"value": "NvmeDisk"}, {"value": "ResourceDisk"}]}}]}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "object", "name": "encryptionSettings", "props": [{"type": "object", "name": "diskEncryptionKey", "props": [{"type": "string", "name": "secretUrl", "required": true}, {"type": "object", "name": "sourceVault", "required": true, "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "cls": "KeyVaultSecretReference_read"}, {"type": "boolean", "name": "enabled"}, {"type": "object", "name": "keyEncryptionKey", "props": [{"type": "string", "name": "keyUrl", "required": true}, {"type": "@SubResource_read", "name": "sourceVault", "required": true}]}], "cls": "DiskEncryptionSettings_read"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "object", "name": "managedDisk", "props": [{"type": "object", "name": "diskEncryptionSet", "props": [{"type": "string", "name": "id"}], "cls": "DiskEncryptionSetParameters_read"}, {"type": "string", "name": "id"}, {"type": "object", "name": "securityProfile", "props": [{"type": "@DiskEncryptionSetParameters_read", "name": "diskEncryptionSet"}, {"type": "string", "name": "securityEncryptionType", "enum": {"items": [{"value": "DiskWithVMGuestState"}, {"value": "NonPersistedTPM"}, {"value": "VMGuestStateOnly"}]}}]}, {"type": "string", "name": "storageAccountType", "enum": {"items": [{"value": "PremiumV2_LRS"}, {"value": "Premium_LRS"}, {"value": "Premium_ZRS"}, {"value": "StandardSSD_LRS"}, {"value": "StandardSSD_ZRS"}, {"value": "Standard_LRS"}, {"value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_read"}, {"type": "string", "name": "name"}, {"type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "object", "name": "vhd", "props": [{"type": "string", "name": "uri"}], "cls": "VirtualHardDisk_read"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}]}, {"readOnly": true, "type": "dateTime", "name": "timeCreated"}, {"type": "string", "name": "userData"}, {"type": "@SubResource_read", "name": "virtualMachineScaleSet"}, {"readOnly": true, "type": "string", "name": "vmId"}], "clientFlatten": true}, {"readOnly": true, "type": "array<object>", "name": "resources", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "autoUpgradeMinorVersion"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "string", "name": "forceUpdateTag"}, {"type": "@VirtualMachineExtensionInstanceView_read", "name": "instanceView"}, {"type": "object", "name": "protectedSettings", "additionalProps": {"item": {"type": "any"}}}, {"type": "@KeyVaultSecretReference_read", "name": "protectedSettingsFromKeyVault"}, {"type": "array<string>", "name": "provisionAfterExtensions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "publisher"}, {"type": "object", "name": "settings", "additionalProps": {"item": {"type": "any"}}}, {"type": "boolean", "name": "suppressFailures"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}], "cls": "VirtualMachine_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "parameters", "required": true, "props": [{"type": "object", "name": "extendedLocation", "arg": "$parameters.extendedLocation", "props": [{"type": "string", "name": "name", "arg": "$parameters.extendedLocation.name"}, {"type": "string", "name": "type", "arg": "$parameters.extendedLocation.type", "enum": {"items": [{"value": "EdgeZone"}]}}]}, {"type": "IdentityObject", "name": "identity", "props": [{"type": "string", "name": "type", "arg": "$parameters.identity.type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "arg": "$parameters.identity.userAssignedIdentities", "additionalProps": {"item": {"type": "object"}}}]}, {"type": "ResourceLocation", "name": "location", "arg": "$parameters.location", "required": true}, {"type": "object", "name": "placement", "arg": "$parameters.placement", "props": [{"type": "array<string>", "name": "excludeZones", "arg": "$parameters.placement.excludeZones", "item": {"type": "string"}}, {"type": "array<string>", "name": "includeZones", "arg": "$parameters.placement.includeZones", "item": {"type": "string"}}, {"type": "string", "name": "zonePlacementPolicy", "arg": "$parameters.placement.zonePlacementPolicy", "enum": {"items": [{"value": "Any"}]}}]}, {"type": "object", "name": "plan", "arg": "$parameters.plan", "props": [{"type": "string", "name": "name", "arg": "$parameters.plan.name"}, {"type": "string", "name": "product", "arg": "$parameters.plan.product"}, {"type": "string", "name": "promotionCode", "arg": "$parameters.plan.promotionCode"}, {"type": "string", "name": "publisher", "arg": "$parameters.plan.publisher"}]}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "additionalCapabilities", "arg": "$parameters.properties.additionalCapabilities", "props": [{"type": "boolean", "name": "hibernationEnabled", "arg": "$parameters.properties.additionalCapabilities.hibernationEnabled"}, {"type": "boolean", "name": "ultraSSDEnabled", "arg": "$parameters.properties.additionalCapabilities.ultraSSDEnabled"}]}, {"type": "object", "name": "applicationProfile", "arg": "$parameters.properties.applicationProfile", "props": [{"type": "array<object>", "name": "galleryApplications", "arg": "$parameters.properties.applicationProfile.galleryApplications", "item": {"type": "object", "props": [{"type": "string", "name": "configurationReference", "arg": "$parameters.properties.applicationProfile.galleryApplications[].configurationReference"}, {"type": "boolean", "name": "enableAutomaticUpgrade", "arg": "$parameters.properties.applicationProfile.galleryApplications[].enableAutomaticUpgrade"}, {"type": "integer32", "name": "order", "arg": "$parameters.properties.applicationProfile.galleryApplications[].order"}, {"type": "string", "name": "packageReferenceId", "arg": "$parameters.properties.applicationProfile.galleryApplications[].packageReferenceId", "required": true}, {"type": "string", "name": "tags", "arg": "$parameters.properties.applicationProfile.galleryApplications[].tags"}, {"type": "boolean", "name": "treatFailureAsDeploymentFailure", "arg": "$parameters.properties.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure"}]}, "identifiers": ["packageReferenceId"]}]}, {"type": "@SubResource_update", "name": "availabilitySet", "arg": "$parameters.properties.availabilitySet"}, {"type": "object", "name": "billingProfile", "arg": "$parameters.properties.billingProfile", "props": [{"type": "float64", "name": "maxPrice", "arg": "$parameters.properties.billingProfile.maxPrice"}]}, {"type": "object", "name": "capacityReservation", "arg": "$parameters.properties.capacityReservation", "props": [{"type": "@SubResource_update", "name": "capacityReservationGroup", "arg": "$parameters.properties.capacityReservation.capacityReservationGroup"}]}, {"type": "object", "name": "diagnosticsProfile", "arg": "$parameters.properties.diagnosticsProfile", "props": [{"type": "object", "name": "bootDiagnostics", "arg": "$parameters.properties.diagnosticsProfile.bootDiagnostics", "props": [{"type": "boolean", "name": "enabled", "arg": "$parameters.properties.diagnosticsProfile.bootDiagnostics.enabled"}, {"type": "string", "name": "storageUri", "arg": "$parameters.properties.diagnosticsProfile.bootDiagnostics.storageUri"}]}]}, {"type": "string", "name": "evictionPolicy", "arg": "$parameters.properties.evictionPolicy", "enum": {"items": [{"value": "Deallocate"}, {"value": "Delete"}]}}, {"type": "string", "name": "extensionsTimeBudget", "arg": "$parameters.properties.extensionsTimeBudget"}, {"type": "object", "name": "hardwareProfile", "arg": "$parameters.properties.hardwareProfile", "props": [{"type": "string", "name": "vmSize", "arg": "$parameters.properties.hardwareProfile.vmSize", "enum": {"items": [{"value": "Basic_A0"}, {"value": "Basic_A1"}, {"value": "Basic_A2"}, {"value": "Basic_A3"}, {"value": "Basic_A4"}, {"value": "Standard_A0"}, {"value": "Standard_A1"}, {"value": "Standard_A10"}, {"value": "Standard_A11"}, {"value": "Standard_A1_v2"}, {"value": "Standard_A2"}, {"value": "Standard_A2_v2"}, {"value": "Standard_A2m_v2"}, {"value": "Standard_A3"}, {"value": "Standard_A4"}, {"value": "Standard_A4_v2"}, {"value": "Standard_A4m_v2"}, {"value": "Standard_A5"}, {"value": "Standard_A6"}, {"value": "Standard_A7"}, {"value": "Standard_A8"}, {"value": "Standard_A8_v2"}, {"value": "Standard_A8m_v2"}, {"value": "Standard_A9"}, {"value": "Standard_B1ms"}, {"value": "Standard_B1s"}, {"value": "Standard_B2ms"}, {"value": "Standard_B2s"}, {"value": "Standard_B4ms"}, {"value": "Standard_B8ms"}, {"value": "Standard_D1"}, {"value": "Standard_D11"}, {"value": "Standard_D11_v2"}, {"value": "Standard_D12"}, {"value": "Standard_D12_v2"}, {"value": "Standard_D13"}, {"value": "Standard_D13_v2"}, {"value": "Standard_D14"}, {"value": "Standard_D14_v2"}, {"value": "Standard_D15_v2"}, {"value": "Standard_D16_v3"}, {"value": "Standard_D16s_v3"}, {"value": "Standard_D1_v2"}, {"value": "Standard_D2"}, {"value": "Standard_D2_v2"}, {"value": "Standard_D2_v3"}, {"value": "Standard_D2s_v3"}, {"value": "Standard_D3"}, {"value": "Standard_D32_v3"}, {"value": "Standard_D32s_v3"}, {"value": "Standard_D3_v2"}, {"value": "Standard_D4"}, {"value": "Standard_D4_v2"}, {"value": "Standard_D4_v3"}, {"value": "Standard_D4s_v3"}, {"value": "Standard_D5_v2"}, {"value": "Standard_D64_v3"}, {"value": "Standard_D64s_v3"}, {"value": "Standard_D8_v3"}, {"value": "Standard_D8s_v3"}, {"value": "Standard_DS1"}, {"value": "Standard_DS11"}, {"value": "Standard_DS11_v2"}, {"value": "Standard_DS12"}, {"value": "Standard_DS12_v2"}, {"value": "Standard_DS13"}, {"value": "Standard_DS13-2_v2"}, {"value": "Standard_DS13-4_v2"}, {"value": "Standard_DS13_v2"}, {"value": "Standard_DS14"}, {"value": "Standard_DS14-4_v2"}, {"value": "Standard_DS14-8_v2"}, {"value": "Standard_DS14_v2"}, {"value": "Standard_DS15_v2"}, {"value": "Standard_DS1_v2"}, {"value": "Standard_DS2"}, {"value": "Standard_DS2_v2"}, {"value": "Standard_DS3"}, {"value": "Standard_DS3_v2"}, {"value": "Standard_DS4"}, {"value": "Standard_DS4_v2"}, {"value": "Standard_DS5_v2"}, {"value": "Standard_E16_v3"}, {"value": "Standard_E16s_v3"}, {"value": "Standard_E2_v3"}, {"value": "Standard_E2s_v3"}, {"value": "Standard_E32-16_v3"}, {"value": "Standard_E32-8s_v3"}, {"value": "Standard_E32_v3"}, {"value": "Standard_E32s_v3"}, {"value": "Standard_E4_v3"}, {"value": "Standard_E4s_v3"}, {"value": "Standard_E64-16s_v3"}, {"value": "Standard_E64-32s_v3"}, {"value": "Standard_E64_v3"}, {"value": "Standard_E64s_v3"}, {"value": "Standard_E8_v3"}, {"value": "Standard_E8s_v3"}, {"value": "Standard_F1"}, {"value": "Standard_F16"}, {"value": "Standard_F16s"}, {"value": "Standard_F16s_v2"}, {"value": "Standard_F1s"}, {"value": "Standard_F2"}, {"value": "Standard_F2s"}, {"value": "Standard_F2s_v2"}, {"value": "Standard_F32s_v2"}, {"value": "Standard_F4"}, {"value": "Standard_F4s"}, {"value": "Standard_F4s_v2"}, {"value": "Standard_F64s_v2"}, {"value": "Standard_F72s_v2"}, {"value": "Standard_F8"}, {"value": "Standard_F8s"}, {"value": "Standard_F8s_v2"}, {"value": "Standard_G1"}, {"value": "Standard_G2"}, {"value": "Standard_G3"}, {"value": "Standard_G4"}, {"value": "Standard_G5"}, {"value": "Standard_GS1"}, {"value": "Standard_GS2"}, {"value": "Standard_GS3"}, {"value": "Standard_GS4"}, {"value": "Standard_GS4-4"}, {"value": "Standard_GS4-8"}, {"value": "Standard_GS5"}, {"value": "Standard_GS5-16"}, {"value": "Standard_GS5-8"}, {"value": "Standard_H16"}, {"value": "Standard_H16m"}, {"value": "Standard_H16mr"}, {"value": "Standard_H16r"}, {"value": "Standard_H8"}, {"value": "Standard_H8m"}, {"value": "Standard_L16s"}, {"value": "Standard_L32s"}, {"value": "Standard_L4s"}, {"value": "Standard_L8s"}, {"value": "Standard_M128-32ms"}, {"value": "Standard_M128-64ms"}, {"value": "Standard_M128ms"}, {"value": "Standard_M128s"}, {"value": "Standard_M64-16ms"}, {"value": "Standard_M64-32ms"}, {"value": "Standard_M64ms"}, {"value": "Standard_M64s"}, {"value": "Standard_NC12"}, {"value": "Standard_NC12s_v2"}, {"value": "Standard_NC12s_v3"}, {"value": "Standard_NC24"}, {"value": "Standard_NC24r"}, {"value": "Standard_NC24rs_v2"}, {"value": "Standard_NC24rs_v3"}, {"value": "Standard_NC24s_v2"}, {"value": "Standard_NC24s_v3"}, {"value": "Standard_NC6"}, {"value": "Standard_NC6s_v2"}, {"value": "Standard_NC6s_v3"}, {"value": "Standard_ND12s"}, {"value": "Standard_ND24rs"}, {"value": "Standard_ND24s"}, {"value": "Standard_ND6s"}, {"value": "Standard_NV12"}, {"value": "Standard_NV24"}, {"value": "Standard_NV6"}]}}, {"type": "object", "name": "vmSizeProperties", "arg": "$parameters.properties.hardwareProfile.vmSizeProperties", "props": [{"type": "integer32", "name": "vCPUsAvailable", "arg": "$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsAvailable"}, {"type": "integer32", "name": "vCPUsPerCore", "arg": "$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsPerCore"}]}]}, {"type": "@SubResource_update", "name": "host", "arg": "$parameters.properties.host"}, {"type": "@SubResource_update", "name": "hostGroup", "arg": "$parameters.properties.hostGroup"}, {"type": "string", "name": "licenseType", "arg": "$parameters.properties.licenseType"}, {"type": "object", "name": "networkProfile", "arg": "$parameters.properties.networkProfile", "props": [{"type": "string", "name": "networkApiVersion", "arg": "$parameters.properties.networkProfile.networkApiVersion", "enum": {"items": [{"value": "2020-11-01"}, {"value": "2022-11-01"}]}}, {"type": "array<object>", "name": "networkInterfaceConfigurations", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "auxiliaryMode", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode", "enum": {"items": [{"value": "AcceleratedConnections"}, {"value": "Floating"}, {"value": "None"}]}}, {"type": "string", "name": "auxiliarySku", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku", "enum": {"items": [{"value": "A1"}, {"value": "A2"}, {"value": "A4"}, {"value": "A8"}, {"value": "None"}]}}, {"type": "string", "name": "deleteOption", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "disableTcpStateTracking", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking"}, {"type": "object", "name": "dnsSettings", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings", "props": [{"type": "array<string>", "name": "dnsServers", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers", "item": {"type": "string"}}]}, {"type": "@SubResource_update", "name": "dscpConfiguration", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dscpConfiguration"}, {"type": "boolean", "name": "enableAcceleratedNetworking", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableFpga", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableFpga"}, {"type": "boolean", "name": "enableIPForwarding", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding"}, {"type": "array<object>", "name": "ipConfigurations", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<@SubResource_update>", "name": "applicationGatewayBackendAddressPools", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools", "item": {"type": "@SubResource_update"}}, {"type": "array<@SubResource_update>", "name": "applicationSecurityGroups", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups", "item": {"type": "@SubResource_update"}}, {"type": "array<@SubResource_update>", "name": "loadBalancerBackendAddressPools", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools", "item": {"type": "@SubResource_update"}}, {"type": "boolean", "name": "primary", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"}, {"type": "string", "name": "privateIPAddressVersion", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "object", "name": "publicIPAddressConfiguration", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "dnsSettings", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel", "required": true}, {"type": "string", "name": "domainNameLabelScope", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}]}}]}, {"type": "integer32", "name": "idleTimeoutInMinutes", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes"}, {"type": "array<object>", "name": "ipTags", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType"}, {"type": "string", "name": "tag", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag"}]}}, {"type": "string", "name": "publicIPAddressVersion", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_update", "name": "publicIPPrefix", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix"}], "clientFlatten": true}, {"type": "object", "name": "sku", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku", "props": [{"type": "string", "name": "name", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}, {"type": "string", "name": "tier", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier", "enum": {"items": [{"value": "Global"}, {"value": "Regional"}]}}]}]}, {"type": "@SubResource_update", "name": "subnet", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "@SubResource_update", "name": "networkSecurityGroup", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup"}, {"type": "boolean", "name": "primary", "arg": "$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.primary"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "networkInterfaces", "arg": "$parameters.properties.networkProfile.networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.networkProfile.networkInterfaces[].id"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "arg": "$parameters.properties.networkProfile.networkInterfaces[].properties.deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "primary", "arg": "$parameters.properties.networkProfile.networkInterfaces[].properties.primary"}], "clientFlatten": true}]}}]}, {"type": "object", "name": "osProfile", "arg": "$parameters.properties.osProfile", "props": [{"type": "string", "name": "adminPassword", "arg": "$parameters.properties.osProfile.adminPassword", "secret": true}, {"type": "string", "name": "adminUsername", "arg": "$parameters.properties.osProfile.adminUsername"}, {"type": "boolean", "name": "allowExtensionOperations", "arg": "$parameters.properties.osProfile.allowExtensionOperations"}, {"type": "string", "name": "computerName", "arg": "$parameters.properties.osProfile.computerName"}, {"type": "string", "name": "customData", "arg": "$parameters.properties.osProfile.customData"}, {"type": "object", "name": "linuxConfiguration", "arg": "$parameters.properties.osProfile.linuxConfiguration", "props": [{"type": "boolean", "name": "disablePasswordAuthentication", "arg": "$parameters.properties.osProfile.linuxConfiguration.disablePasswordAuthentication"}, {"type": "boolean", "name": "enableVMAgentPlatformUpdates", "arg": "$parameters.properties.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings", "props": [{"type": "string", "name": "assessmentMode", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "string", "name": "patchMode", "arg": "$parameters.properties.osProfile.linuxConfiguration.patchSettings.patchMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}]}, {"type": "boolean", "name": "provisionVMAgent", "arg": "$parameters.properties.osProfile.linuxConfiguration.provisionVMAgent"}, {"type": "object", "name": "ssh", "arg": "$parameters.properties.osProfile.linuxConfiguration.ssh", "props": [{"type": "array<object>", "name": "publicKeys", "arg": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData", "arg": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].keyData"}, {"type": "string", "name": "path", "arg": "$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].path"}]}, "identifiers": ["path"]}]}]}, {"type": "boolean", "name": "requireGuestProvisionSignal", "arg": "$parameters.properties.osProfile.requireGuestProvisionSignal"}, {"type": "array<object>", "name": "secrets", "arg": "$parameters.properties.osProfile.secrets", "item": {"type": "object", "props": [{"type": "@SubResource_update", "name": "sourceVault", "arg": "$parameters.properties.osProfile.secrets[].sourceVault"}, {"type": "array<object>", "name": "vaultCertificates", "arg": "$parameters.properties.osProfile.secrets[].vaultCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "certificateStore", "arg": "$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateStore"}, {"type": "string", "name": "certificateUrl", "arg": "$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateUrl"}]}, "identifiers": ["certificateUrl"]}]}}, {"type": "object", "name": "windowsConfiguration", "arg": "$parameters.properties.osProfile.windowsConfiguration", "props": [{"type": "array<object>", "name": "additionalUnattendContent", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent", "item": {"type": "object", "props": [{"type": "string", "name": "componentName", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].componentName", "enum": {"items": [{"value": "Microsoft-Windows-Shell-Setup"}]}}, {"type": "string", "name": "content", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].content"}, {"type": "string", "name": "passName", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].passName", "enum": {"items": [{"value": "OobeSystem"}]}}, {"type": "string", "name": "settingName", "arg": "$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].settingName", "enum": {"items": [{"value": "AutoLogon"}, {"value": "FirstLogonCommands"}]}}]}}, {"type": "boolean", "name": "enableAutomaticUpdates", "arg": "$parameters.properties.osProfile.windowsConfiguration.enableAutomaticUpdates"}, {"type": "object", "name": "patchSettings", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings", "props": [{"type": "string", "name": "assessmentMode", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "boolean", "name": "enableHotpatching", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching"}, {"type": "string", "name": "patchMode", "arg": "$parameters.properties.osProfile.windowsConfiguration.patchSettings.patchMode", "enum": {"items": [{"value": "AutomaticByOS"}, {"value": "AutomaticByPlatform"}, {"value": "Manual"}]}}]}, {"type": "boolean", "name": "provisionVMAgent", "arg": "$parameters.properties.osProfile.windowsConfiguration.provisionVMAgent"}, {"type": "string", "name": "timeZone", "arg": "$parameters.properties.osProfile.windowsConfiguration.timeZone"}, {"type": "object", "name": "winRM", "arg": "$parameters.properties.osProfile.windowsConfiguration.winRM", "props": [{"type": "array<object>", "name": "listeners", "arg": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners", "item": {"type": "object", "props": [{"type": "string", "name": "certificateUrl", "arg": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl"}, {"type": "string", "name": "protocol", "arg": "$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}]}}]}]}]}, {"type": "integer32", "name": "platformFaultDomain", "arg": "$parameters.properties.platformFaultDomain"}, {"type": "string", "name": "priority", "arg": "$parameters.properties.priority", "enum": {"items": [{"value": "Low"}, {"value": "Regular"}, {"value": "Spot"}]}}, {"type": "@SubResource_update", "name": "proximityPlacementGroup", "arg": "$parameters.properties.proximityPlacementGroup"}, {"type": "object", "name": "scheduledEventsPolicy", "arg": "$parameters.properties.scheduledEventsPolicy", "props": [{"type": "object", "name": "scheduledEventsAdditionalPublishingTargets", "arg": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets", "props": [{"type": "object", "name": "eventGridAndResourceGraph", "arg": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph", "props": [{"type": "boolean", "name": "enable", "arg": "$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph.enable"}]}]}, {"type": "object", "name": "userInitiatedReboot", "arg": "$parameters.properties.scheduledEventsPolicy.userInitiatedReboot", "props": [{"type": "boolean", "name": "automaticallyApprove", "arg": "$parameters.properties.scheduledEventsPolicy.userInitiatedReboot.automaticallyApprove"}]}, {"type": "object", "name": "userInitiatedRedeploy", "arg": "$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy", "props": [{"type": "boolean", "name": "automaticallyApprove", "arg": "$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy.automaticallyApprove"}]}]}, {"type": "object", "name": "scheduledEventsProfile", "arg": "$parameters.properties.scheduledEventsProfile", "props": [{"type": "object", "name": "osImageNotificationProfile", "arg": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile", "props": [{"type": "boolean", "name": "enable", "arg": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.enable"}, {"type": "string", "name": "notBeforeTimeout", "arg": "$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout"}]}, {"type": "object", "name": "terminateNotificationProfile", "arg": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile", "props": [{"type": "boolean", "name": "enable", "arg": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.enable"}, {"type": "string", "name": "notBeforeTimeout", "arg": "$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout"}]}]}, {"type": "object", "name": "securityProfile", "arg": "$parameters.properties.securityProfile", "props": [{"type": "boolean", "name": "encryptionAtHost", "arg": "$parameters.properties.securityProfile.encryptionAtHost"}, {"type": "object", "name": "encryptionIdentity", "arg": "$parameters.properties.securityProfile.encryptionIdentity", "props": [{"type": "string", "name": "userAssignedIdentityResourceId", "arg": "$parameters.properties.securityProfile.encryptionIdentity.userAssignedIdentityResourceId"}]}, {"type": "object", "name": "proxyAgentSettings", "arg": "$parameters.properties.securityProfile.proxyAgentSettings", "props": [{"type": "boolean", "name": "enabled", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.enabled"}, {"type": "@HostEndpointSettings_update", "name": "imds", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.imds"}, {"type": "integer32", "name": "keyIncarnationId", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.keyIncarnationId"}, {"type": "string", "name": "mode", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.mode", "enum": {"items": [{"value": "Audit"}, {"value": "Enforce"}]}}, {"type": "object", "name": "wireServer", "arg": "$parameters.properties.securityProfile.proxyAgentSettings.wireServer", "props": [{"type": "string", "name": "inVMAccessControlProfileReferenceId", "arg": "@HostEndpointSettings_update.inVMAccessControlProfileReferenceId"}, {"type": "string", "name": "mode", "arg": "@HostEndpointSettings_update.mode", "enum": {"items": [{"value": "Audit"}, {"value": "Disabled"}, {"value": "Enforce"}]}}], "cls": "HostEndpointSettings_update"}]}, {"type": "string", "name": "securityType", "arg": "$parameters.properties.securityProfile.securityType", "enum": {"items": [{"value": "ConfidentialVM"}, {"value": "TrustedLaunch"}]}}, {"type": "object", "name": "uefiSettings", "arg": "$parameters.properties.securityProfile.uefiSettings", "props": [{"type": "boolean", "name": "secureBootEnabled", "arg": "$parameters.properties.securityProfile.uefiSettings.secureBootEnabled"}, {"type": "boolean", "name": "vTpmEnabled", "arg": "$parameters.properties.securityProfile.uefiSettings.vTpmEnabled"}]}]}, {"type": "object", "name": "storageProfile", "arg": "$parameters.properties.storageProfile", "props": [{"type": "boolean", "name": "alignRegionalDisksToVMZone", "arg": "$parameters.properties.storageProfile.alignRegionalDisksToVMZone"}, {"type": "array<object>", "name": "dataDisks", "arg": "$parameters.properties.storageProfile.dataDisks", "item": {"type": "object", "props": [{"type": "string", "name": "caching", "arg": "$parameters.properties.storageProfile.dataDisks[].caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "arg": "$parameters.properties.storageProfile.dataDisks[].createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "arg": "$parameters.properties.storageProfile.dataDisks[].deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "string", "name": "detachOption", "arg": "$parameters.properties.storageProfile.dataDisks[].detachOption", "enum": {"items": [{"value": "ForceDetach"}]}}, {"type": "integer32", "name": "diskSizeGB", "arg": "$parameters.properties.storageProfile.dataDisks[].diskSizeGB"}, {"type": "@VirtualHardDisk_update", "name": "image", "arg": "$parameters.properties.storageProfile.dataDisks[].image"}, {"type": "integer32", "name": "lun", "arg": "$parameters.properties.storageProfile.dataDisks[].lun", "required": true}, {"type": "@ManagedDiskParameters_update", "name": "managedDisk", "arg": "$parameters.properties.storageProfile.dataDisks[].managedDisk"}, {"type": "string", "name": "name", "arg": "$parameters.properties.storageProfile.dataDisks[].name"}, {"type": "object", "name": "sourceResource", "arg": "$parameters.properties.storageProfile.dataDisks[].sourceResource", "props": [{"type": "string", "name": "id", "arg": "$parameters.properties.storageProfile.dataDisks[].sourceResource.id"}]}, {"type": "boolean", "name": "toBeDetached", "arg": "$parameters.properties.storageProfile.dataDisks[].toBeDetached"}, {"type": "@VirtualHardDisk_update", "name": "vhd", "arg": "$parameters.properties.storageProfile.dataDisks[].vhd"}, {"type": "boolean", "name": "writeAcceleratorEnabled", "arg": "$parameters.properties.storageProfile.dataDisks[].writeAcceleratorEnabled"}]}, "identifiers": ["lun"]}, {"type": "string", "name": "diskControllerType", "arg": "$parameters.properties.storageProfile.diskControllerType", "enum": {"items": [{"value": "NVMe"}, {"value": "SCSI"}]}}, {"type": "object", "name": "imageReference", "arg": "$parameters.properties.storageProfile.imageReference", "props": [{"type": "string", "name": "communityGalleryImageId", "arg": "$parameters.properties.storageProfile.imageReference.communityGalleryImageId"}, {"type": "string", "name": "id", "arg": "$parameters.properties.storageProfile.imageReference.id"}, {"type": "string", "name": "offer", "arg": "$parameters.properties.storageProfile.imageReference.offer"}, {"type": "string", "name": "publisher", "arg": "$parameters.properties.storageProfile.imageReference.publisher"}, {"type": "string", "name": "sharedGalleryImageId", "arg": "$parameters.properties.storageProfile.imageReference.sharedGalleryImageId"}, {"type": "string", "name": "sku", "arg": "$parameters.properties.storageProfile.imageReference.sku"}, {"type": "string", "name": "version", "arg": "$parameters.properties.storageProfile.imageReference.version"}]}, {"type": "object", "name": "osDisk", "arg": "$parameters.properties.storageProfile.osDisk", "props": [{"type": "string", "name": "caching", "arg": "$parameters.properties.storageProfile.osDisk.caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "arg": "$parameters.properties.storageProfile.osDisk.createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "arg": "$parameters.properties.storageProfile.osDisk.deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "diffDiskSettings", "arg": "$parameters.properties.storageProfile.osDisk.diffDiskSettings", "props": [{"type": "string", "name": "option", "arg": "$parameters.properties.storageProfile.osDisk.diffDiskSettings.option", "enum": {"items": [{"value": "Local"}]}}, {"type": "string", "name": "placement", "arg": "$parameters.properties.storageProfile.osDisk.diffDiskSettings.placement", "enum": {"items": [{"value": "CacheDisk"}, {"value": "NvmeDisk"}, {"value": "ResourceDisk"}]}}]}, {"type": "integer32", "name": "diskSizeGB", "arg": "$parameters.properties.storageProfile.osDisk.diskSizeGB"}, {"type": "object", "name": "encryptionSettings", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings", "props": [{"type": "object", "name": "diskEncryptionKey", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey", "props": [{"type": "string", "name": "secretUrl", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl", "required": true}, {"type": "object", "name": "sourceVault", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault", "required": true, "props": [{"type": "string", "name": "id", "arg": "@SubResource_update.id"}], "cls": "SubResource_update"}]}, {"type": "boolean", "name": "enabled", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.enabled"}, {"type": "object", "name": "keyEncryptionKey", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey", "props": [{"type": "string", "name": "keyUrl", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl", "required": true}, {"type": "@SubResource_update", "name": "sourceVault", "arg": "$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault", "required": true}]}]}, {"type": "@VirtualHardDisk_update", "name": "image", "arg": "$parameters.properties.storageProfile.osDisk.image"}, {"type": "object", "name": "managedDisk", "arg": "$parameters.properties.storageProfile.osDisk.managedDisk", "props": [{"type": "object", "name": "diskEncryptionSet", "arg": "@ManagedDiskParameters_update.diskEncryptionSet", "props": [{"type": "string", "name": "id", "arg": "@DiskEncryptionSetParameters_update.id"}], "cls": "DiskEncryptionSetParameters_update"}, {"type": "string", "name": "id", "arg": "@ManagedDiskParameters_update.id"}, {"type": "object", "name": "securityProfile", "arg": "@ManagedDiskParameters_update.securityProfile", "props": [{"type": "@DiskEncryptionSetParameters_update", "name": "diskEncryptionSet", "arg": "@ManagedDiskParameters_update.securityProfile.diskEncryptionSet"}, {"type": "string", "name": "securityEncryptionType", "arg": "@ManagedDiskParameters_update.securityProfile.securityEncryptionType", "enum": {"items": [{"value": "DiskWithVMGuestState"}, {"value": "NonPersistedTPM"}, {"value": "VMGuestStateOnly"}]}}]}, {"type": "string", "name": "storageAccountType", "arg": "@ManagedDiskParameters_update.storageAccountType", "enum": {"items": [{"value": "PremiumV2_LRS"}, {"value": "Premium_LRS"}, {"value": "Premium_ZRS"}, {"value": "StandardSSD_LRS"}, {"value": "StandardSSD_ZRS"}, {"value": "Standard_LRS"}, {"value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_update"}, {"type": "string", "name": "name", "arg": "$parameters.properties.storageProfile.osDisk.name"}, {"type": "string", "name": "osType", "arg": "$parameters.properties.storageProfile.osDisk.osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "object", "name": "vhd", "arg": "$parameters.properties.storageProfile.osDisk.vhd", "props": [{"type": "string", "name": "uri", "arg": "@VirtualHardDisk_update.uri"}], "cls": "VirtualHardDisk_update"}, {"type": "boolean", "name": "writeAcceleratorEnabled", "arg": "$parameters.properties.storageProfile.osDisk.writeAcceleratorEnabled"}]}]}, {"type": "string", "name": "userData", "arg": "$parameters.properties.userData"}, {"type": "@SubResource_update", "name": "virtualMachineScaleSet", "arg": "$parameters.properties.virtualMachineScaleSet"}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$parameters.tags", "additionalProps": {"item": {"type": "string"}}}, {"type": "array<string>", "name": "zones", "arg": "$parameters.zones", "item": {"type": "string"}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "VirtualMachines_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}, "header": {"params": [{"type": "string", "name": "If-Match", "arg": "$Header.If-Match"}, {"type": "string", "name": "If-None-Match", "arg": "$Header.If-None-Match"}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@VirtualMachine_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}], "commandGroups": [{"name": "identity", "commands": [{"name": "assign", "version": "2024-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}", "version": "2024-11-01", "subresource": "identity", "swagger": "mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.If-Match", "options": ["if-match"], "help": {"short": "The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."}}, {"type": "string", "var": "$Header.If-None-Match", "options": ["if-none-match"], "help": {"short": "Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vmName", "options": ["n", "name", "vm-name"], "required": true, "idPart": "name", "help": {"short": "The name of the virtual machine."}}]}, {"name": "Parameters.identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$parameters.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "group": "Parameters.identity", "help": {"short": "Set the system managed identity."}}, {"blank": {"value": []}, "type": "array<string>", "var": "$parameters.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "Parameters.identity", "help": {"short": "Set the user managed identities."}, "item": {"type": "string"}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "object", "name": "identity"}}}, "operations": [{"operationId": "VirtualMachines_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "object", "name": "extendedLocation", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "EdgeZone"}]}}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "managedBy"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "placement", "props": [{"type": "array<string>", "name": "excludeZones", "item": {"type": "string"}}, {"type": "array<string>", "name": "includeZones", "item": {"type": "string"}}, {"type": "string", "name": "zonePlacementPolicy", "enum": {"items": [{"value": "Any"}]}}]}, {"type": "object", "name": "plan", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "product"}, {"type": "string", "name": "promotionCode"}, {"type": "string", "name": "publisher"}]}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "additionalCapabilities", "props": [{"type": "boolean", "name": "hibernationEnabled"}, {"type": "boolean", "name": "ultraSSDEnabled"}]}, {"type": "object", "name": "applicationProfile", "props": [{"type": "array<object>", "name": "galleryApplications", "item": {"type": "object", "props": [{"type": "string", "name": "configurationReference"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "integer32", "name": "order"}, {"type": "string", "name": "packageReferenceId", "required": true}, {"type": "string", "name": "tags"}, {"type": "boolean", "name": "treatFailureAsDeploymentFailure"}]}, "identifiers": ["packageReferenceId"]}]}, {"type": "@SubResource_read", "name": "availabilitySet"}, {"type": "object", "name": "billingProfile", "props": [{"type": "float64", "name": "maxPrice"}]}, {"type": "object", "name": "capacityReservation", "props": [{"type": "@SubResource_read", "name": "capacityReservationGroup"}]}, {"type": "object", "name": "diagnosticsProfile", "props": [{"type": "object", "name": "bootDiagnostics", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "storageUri"}]}]}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "Deallocate"}, {"value": "Delete"}]}}, {"type": "string", "name": "extensionsTimeBudget"}, {"type": "object", "name": "hardwareProfile", "props": [{"type": "string", "name": "vmSize", "enum": {"items": [{"value": "Basic_A0"}, {"value": "Basic_A1"}, {"value": "Basic_A2"}, {"value": "Basic_A3"}, {"value": "Basic_A4"}, {"value": "Standard_A0"}, {"value": "Standard_A1"}, {"value": "Standard_A10"}, {"value": "Standard_A11"}, {"value": "Standard_A1_v2"}, {"value": "Standard_A2"}, {"value": "Standard_A2_v2"}, {"value": "Standard_A2m_v2"}, {"value": "Standard_A3"}, {"value": "Standard_A4"}, {"value": "Standard_A4_v2"}, {"value": "Standard_A4m_v2"}, {"value": "Standard_A5"}, {"value": "Standard_A6"}, {"value": "Standard_A7"}, {"value": "Standard_A8"}, {"value": "Standard_A8_v2"}, {"value": "Standard_A8m_v2"}, {"value": "Standard_A9"}, {"value": "Standard_B1ms"}, {"value": "Standard_B1s"}, {"value": "Standard_B2ms"}, {"value": "Standard_B2s"}, {"value": "Standard_B4ms"}, {"value": "Standard_B8ms"}, {"value": "Standard_D1"}, {"value": "Standard_D11"}, {"value": "Standard_D11_v2"}, {"value": "Standard_D12"}, {"value": "Standard_D12_v2"}, {"value": "Standard_D13"}, {"value": "Standard_D13_v2"}, {"value": "Standard_D14"}, {"value": "Standard_D14_v2"}, {"value": "Standard_D15_v2"}, {"value": "Standard_D16_v3"}, {"value": "Standard_D16s_v3"}, {"value": "Standard_D1_v2"}, {"value": "Standard_D2"}, {"value": "Standard_D2_v2"}, {"value": "Standard_D2_v3"}, {"value": "Standard_D2s_v3"}, {"value": "Standard_D3"}, {"value": "Standard_D32_v3"}, {"value": "Standard_D32s_v3"}, {"value": "Standard_D3_v2"}, {"value": "Standard_D4"}, {"value": "Standard_D4_v2"}, {"value": "Standard_D4_v3"}, {"value": "Standard_D4s_v3"}, {"value": "Standard_D5_v2"}, {"value": "Standard_D64_v3"}, {"value": "Standard_D64s_v3"}, {"value": "Standard_D8_v3"}, {"value": "Standard_D8s_v3"}, {"value": "Standard_DS1"}, {"value": "Standard_DS11"}, {"value": "Standard_DS11_v2"}, {"value": "Standard_DS12"}, {"value": "Standard_DS12_v2"}, {"value": "Standard_DS13"}, {"value": "Standard_DS13-2_v2"}, {"value": "Standard_DS13-4_v2"}, {"value": "Standard_DS13_v2"}, {"value": "Standard_DS14"}, {"value": "Standard_DS14-4_v2"}, {"value": "Standard_DS14-8_v2"}, {"value": "Standard_DS14_v2"}, {"value": "Standard_DS15_v2"}, {"value": "Standard_DS1_v2"}, {"value": "Standard_DS2"}, {"value": "Standard_DS2_v2"}, {"value": "Standard_DS3"}, {"value": "Standard_DS3_v2"}, {"value": "Standard_DS4"}, {"value": "Standard_DS4_v2"}, {"value": "Standard_DS5_v2"}, {"value": "Standard_E16_v3"}, {"value": "Standard_E16s_v3"}, {"value": "Standard_E2_v3"}, {"value": "Standard_E2s_v3"}, {"value": "Standard_E32-16_v3"}, {"value": "Standard_E32-8s_v3"}, {"value": "Standard_E32_v3"}, {"value": "Standard_E32s_v3"}, {"value": "Standard_E4_v3"}, {"value": "Standard_E4s_v3"}, {"value": "Standard_E64-16s_v3"}, {"value": "Standard_E64-32s_v3"}, {"value": "Standard_E64_v3"}, {"value": "Standard_E64s_v3"}, {"value": "Standard_E8_v3"}, {"value": "Standard_E8s_v3"}, {"value": "Standard_F1"}, {"value": "Standard_F16"}, {"value": "Standard_F16s"}, {"value": "Standard_F16s_v2"}, {"value": "Standard_F1s"}, {"value": "Standard_F2"}, {"value": "Standard_F2s"}, {"value": "Standard_F2s_v2"}, {"value": "Standard_F32s_v2"}, {"value": "Standard_F4"}, {"value": "Standard_F4s"}, {"value": "Standard_F4s_v2"}, {"value": "Standard_F64s_v2"}, {"value": "Standard_F72s_v2"}, {"value": "Standard_F8"}, {"value": "Standard_F8s"}, {"value": "Standard_F8s_v2"}, {"value": "Standard_G1"}, {"value": "Standard_G2"}, {"value": "Standard_G3"}, {"value": "Standard_G4"}, {"value": "Standard_G5"}, {"value": "Standard_GS1"}, {"value": "Standard_GS2"}, {"value": "Standard_GS3"}, {"value": "Standard_GS4"}, {"value": "Standard_GS4-4"}, {"value": "Standard_GS4-8"}, {"value": "Standard_GS5"}, {"value": "Standard_GS5-16"}, {"value": "Standard_GS5-8"}, {"value": "Standard_H16"}, {"value": "Standard_H16m"}, {"value": "Standard_H16mr"}, {"value": "Standard_H16r"}, {"value": "Standard_H8"}, {"value": "Standard_H8m"}, {"value": "Standard_L16s"}, {"value": "Standard_L32s"}, {"value": "Standard_L4s"}, {"value": "Standard_L8s"}, {"value": "Standard_M128-32ms"}, {"value": "Standard_M128-64ms"}, {"value": "Standard_M128ms"}, {"value": "Standard_M128s"}, {"value": "Standard_M64-16ms"}, {"value": "Standard_M64-32ms"}, {"value": "Standard_M64ms"}, {"value": "Standard_M64s"}, {"value": "Standard_NC12"}, {"value": "Standard_NC12s_v2"}, {"value": "Standard_NC12s_v3"}, {"value": "Standard_NC24"}, {"value": "Standard_NC24r"}, {"value": "Standard_NC24rs_v2"}, {"value": "Standard_NC24rs_v3"}, {"value": "Standard_NC24s_v2"}, {"value": "Standard_NC24s_v3"}, {"value": "Standard_NC6"}, {"value": "Standard_NC6s_v2"}, {"value": "Standard_NC6s_v3"}, {"value": "Standard_ND12s"}, {"value": "Standard_ND24rs"}, {"value": "Standard_ND24s"}, {"value": "Standard_ND6s"}, {"value": "Standard_NV12"}, {"value": "Standard_NV24"}, {"value": "Standard_NV6"}]}}, {"type": "object", "name": "vmSizeProperties", "props": [{"type": "integer32", "name": "vCPUsAvailable"}, {"type": "integer32", "name": "vCPUsPerCore"}]}]}, {"type": "@SubResource_read", "name": "host"}, {"type": "@SubResource_read", "name": "hostGroup"}, {"readOnly": true, "type": "object", "name": "instanceView", "props": [{"readOnly": true, "type": "string", "name": "assignedHost"}, {"type": "object", "name": "bootDiagnostics", "props": [{"readOnly": true, "type": "string", "name": "consoleScreenshotBlobUri"}, {"readOnly": true, "type": "string", "name": "serialConsoleLogBlobUri"}, {"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}, {"type": "string", "name": "computerName"}, {"type": "array<object>", "name": "disks", "item": {"type": "object", "props": [{"type": "array<@DiskEncryptionSettings_read>", "name": "encryptionSettings", "item": {"type": "@DiskEncryptionSettings_read"}}, {"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "extensions", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "array<@InstanceViewStatus_read>", "name": "substatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "cls": "VirtualMachineExtensionInstanceView_read"}, "identifiers": ["name", "type"]}, {"type": "string", "name": "hyperVGeneration", "enum": {"items": [{"value": "V1"}, {"value": "V2"}]}}, {"readOnly": true, "type": "boolean", "name": "isVMInStandbyPool"}, {"type": "object", "name": "maintenanceRedeployStatus", "props": [{"type": "boolean", "name": "isCustomerInitiatedMaintenanceAllowed"}, {"type": "string", "name": "lastOperationMessage"}, {"type": "string", "name": "lastOperationResultCode", "enum": {"items": [{"value": "MaintenanceAborted"}, {"value": "MaintenanceCompleted"}, {"value": "None"}, {"value": "RetryLater"}]}}, {"type": "dateTime", "name": "maintenanceWindowEndTime"}, {"type": "dateTime", "name": "maintenanceWindowStartTime"}, {"type": "dateTime", "name": "preMaintenanceWindowEndTime"}, {"type": "dateTime", "name": "preMaintenanceWindowStartTime"}]}, {"type": "string", "name": "osName"}, {"type": "string", "name": "osVersion"}, {"type": "object", "name": "patchStatus", "props": [{"type": "object", "name": "availablePatchSummary", "props": [{"readOnly": true, "type": "string", "name": "assessmentActivityId"}, {"readOnly": true, "type": "integer32", "name": "criticalAndSecurityPatchCount"}, {"readOnly": true, "type": "object", "name": "error", "props": [{"type": "string", "name": "code"}, {"type": "array<object>", "name": "details", "item": {"type": "object", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}]}, "identifiers": ["target", "message"]}, {"type": "object", "name": "innererror", "props": [{"type": "string", "name": "errordetail"}, {"type": "string", "name": "exceptiontype"}]}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}], "cls": "ApiError_read"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "integer32", "name": "otherPatchCount"}, {"readOnly": true, "type": "boolean", "name": "rebootPending"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}, {"readOnly": true, "type": "array<@InstanceViewStatus_read>", "name": "configurationStatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "lastPatchInstallationSummary", "props": [{"readOnly": true, "type": "@ApiError_read", "name": "error"}, {"readOnly": true, "type": "integer32", "name": "excludedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "failedPatchCount"}, {"readOnly": true, "type": "string", "name": "installationActivityId"}, {"readOnly": true, "type": "integer32", "name": "installedPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "boolean", "name": "maintenanceWindowExceeded"}, {"readOnly": true, "type": "integer32", "name": "notSelectedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "pendingPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "integer32", "name": "platformUpdateDomain"}, {"type": "string", "name": "rdpThumbPrint"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "vmAgent", "props": [{"type": "array<object>", "name": "extensionHandlers", "item": {"type": "object", "props": [{"type": "object", "name": "status", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "displayStatus"}, {"type": "string", "name": "level", "enum": {"items": [{"value": "Error"}, {"value": "Info"}, {"value": "Warning"}]}}, {"type": "string", "name": "message"}, {"type": "dateTime", "name": "time"}], "cls": "InstanceViewStatus_read"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}]}}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "vmAgentVersion"}]}, {"readOnly": true, "type": "object", "name": "vmHealth", "props": [{"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}]}, {"type": "string", "name": "licenseType"}, {"type": "object", "name": "networkProfile", "props": [{"type": "string", "name": "networkApiVersion", "enum": {"items": [{"value": "2020-11-01"}, {"value": "2022-11-01"}]}}, {"type": "array<object>", "name": "networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "auxiliaryMode", "enum": {"items": [{"value": "AcceleratedConnections"}, {"value": "Floating"}, {"value": "None"}]}}, {"type": "string", "name": "auxiliarySku", "enum": {"items": [{"value": "A1"}, {"value": "A2"}, {"value": "A4"}, {"value": "A8"}, {"value": "None"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "disableTcpStateTracking"}, {"type": "object", "name": "dnsSettings", "props": [{"type": "array<string>", "name": "dnsServers", "item": {"type": "string"}}]}, {"type": "@SubResource_read", "name": "dscpConfiguration"}, {"type": "boolean", "name": "enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableFpga"}, {"type": "boolean", "name": "enableIPForwarding"}, {"type": "array<object>", "name": "ipConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<@SubResource_read>", "name": "applicationGatewayBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "applicationSecurityGroups", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "loadBalancerBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "object", "name": "publicIPAddressConfiguration", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "required": true}, {"type": "string", "name": "domainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}]}}]}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "array<object>", "name": "ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType"}, {"type": "string", "name": "tag"}]}}, {"type": "string", "name": "publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_read", "name": "publicIPPrefix"}], "clientFlatten": true}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}, {"type": "string", "name": "tier", "enum": {"items": [{"value": "Global"}, {"value": "Regional"}]}}]}]}, {"type": "@SubResource_read", "name": "subnet"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "@SubResource_read", "name": "networkSecurityGroup"}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "id"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}}]}, {"type": "object", "name": "osProfile", "props": [{"type": "string", "name": "adminPassword", "secret": true}, {"type": "string", "name": "adminUsername"}, {"type": "boolean", "name": "allowExtensionOperations"}, {"type": "string", "name": "computerName"}, {"type": "string", "name": "customData"}, {"type": "object", "name": "linuxConfiguration", "props": [{"type": "boolean", "name": "disablePasswordAuthentication"}, {"type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "object", "name": "ssh", "props": [{"type": "array<object>", "name": "publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData"}, {"type": "string", "name": "path"}]}, "identifiers": ["path"]}]}]}, {"type": "boolean", "name": "requireGuestProvisionSignal"}, {"type": "array<object>", "name": "secrets", "item": {"type": "object", "props": [{"type": "@SubResource_read", "name": "sourceVault"}, {"type": "array<object>", "name": "vaultCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "certificateStore"}, {"type": "string", "name": "certificateUrl"}]}, "identifiers": ["certificateUrl"]}]}}, {"type": "object", "name": "windowsConfiguration", "props": [{"type": "array<object>", "name": "additionalUnattendContent", "item": {"type": "object", "props": [{"type": "string", "name": "componentName", "enum": {"items": [{"value": "Microsoft-Windows-Shell-Setup"}]}}, {"type": "string", "name": "content"}, {"type": "string", "name": "passName", "enum": {"items": [{"value": "OobeSystem"}]}}, {"type": "string", "name": "settingName", "enum": {"items": [{"value": "AutoLogon"}, {"value": "FirstLogonCommands"}]}}]}}, {"type": "boolean", "name": "enableAutomaticUpdates"}, {"readOnly": true, "type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "boolean", "name": "enableHotpatching"}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByOS"}, {"value": "AutomaticByPlatform"}, {"value": "Manual"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "string", "name": "timeZone"}, {"type": "object", "name": "winRM", "props": [{"type": "array<object>", "name": "listeners", "item": {"type": "object", "props": [{"type": "string", "name": "certificateUrl"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}]}}]}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "string", "name": "priority", "enum": {"items": [{"value": "Low"}, {"value": "Regular"}, {"value": "Spot"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "proximityPlacementGroup"}, {"type": "object", "name": "scheduledEventsPolicy", "props": [{"type": "object", "name": "scheduledEventsAdditionalPublishingTargets", "props": [{"type": "object", "name": "eventGridAndResourceGraph", "props": [{"type": "boolean", "name": "enable"}]}]}, {"type": "object", "name": "userInitiatedReboot", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}, {"type": "object", "name": "userInitiatedRedeploy", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}]}, {"type": "object", "name": "scheduledEventsProfile", "props": [{"type": "object", "name": "osImageNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}, {"type": "object", "name": "terminateNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}]}, {"type": "object", "name": "securityProfile", "props": [{"type": "boolean", "name": "encryptionAtHost"}, {"type": "object", "name": "encryptionIdentity", "props": [{"type": "string", "name": "userAssignedIdentityResourceId"}]}, {"type": "object", "name": "proxyAgentSettings", "props": [{"type": "boolean", "name": "enabled"}, {"type": "@HostEndpointSettings_read", "name": "imds"}, {"type": "integer32", "name": "keyIncarnationId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Enforce"}]}}, {"type": "object", "name": "wireServer", "props": [{"type": "string", "name": "inVMAccessControlProfileReferenceId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Disabled"}, {"value": "Enforce"}]}}], "cls": "HostEndpointSettings_read"}]}, {"type": "string", "name": "securityType", "enum": {"items": [{"value": "ConfidentialVM"}, {"value": "TrustedLaunch"}]}}, {"type": "object", "name": "uefiSettings", "props": [{"type": "boolean", "name": "secureBootEnabled"}, {"type": "boolean", "name": "vTpmEnabled"}]}]}, {"type": "object", "name": "storageProfile", "props": [{"type": "boolean", "name": "alignRegionalDisksToVMZone"}, {"type": "array<object>", "name": "dataDisks", "item": {"type": "object", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "string", "name": "detachOption", "enum": {"items": [{"value": "ForceDetach"}]}}, {"readOnly": true, "type": "integer64", "name": "diskIOPSReadWrite"}, {"readOnly": true, "type": "integer64", "name": "diskMBpsReadWrite"}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "integer32", "name": "lun", "required": true}, {"type": "@ManagedDiskParameters_read", "name": "managedDisk"}, {"type": "string", "name": "name"}, {"type": "object", "name": "sourceResource", "props": [{"type": "string", "name": "id"}]}, {"type": "boolean", "name": "toBeDetached"}, {"type": "@VirtualHardDisk_read", "name": "vhd"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}, "identifiers": ["lun"]}, {"type": "string", "name": "diskControllerType", "enum": {"items": [{"value": "NVMe"}, {"value": "SCSI"}]}}, {"type": "object", "name": "imageReference", "props": [{"type": "string", "name": "communityGalleryImageId"}, {"readOnly": true, "type": "string", "name": "exactVersion"}, {"type": "string", "name": "id"}, {"type": "string", "name": "offer"}, {"type": "string", "name": "publisher"}, {"type": "string", "name": "sharedGalleryImageId"}, {"type": "string", "name": "sku"}, {"type": "string", "name": "version"}]}, {"type": "object", "name": "osDisk", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "diffDiskSettings", "props": [{"type": "string", "name": "option", "enum": {"items": [{"value": "Local"}]}}, {"type": "string", "name": "placement", "enum": {"items": [{"value": "CacheDisk"}, {"value": "NvmeDisk"}, {"value": "ResourceDisk"}]}}]}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "object", "name": "encryptionSettings", "props": [{"type": "object", "name": "diskEncryptionKey", "props": [{"type": "string", "name": "secretUrl", "required": true}, {"type": "object", "name": "sourceVault", "required": true, "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "cls": "KeyVaultSecretReference_read"}, {"type": "boolean", "name": "enabled"}, {"type": "object", "name": "keyEncryptionKey", "props": [{"type": "string", "name": "keyUrl", "required": true}, {"type": "@SubResource_read", "name": "sourceVault", "required": true}]}], "cls": "DiskEncryptionSettings_read"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "object", "name": "managedDisk", "props": [{"type": "object", "name": "diskEncryptionSet", "props": [{"type": "string", "name": "id"}], "cls": "DiskEncryptionSetParameters_read"}, {"type": "string", "name": "id"}, {"type": "object", "name": "securityProfile", "props": [{"type": "@DiskEncryptionSetParameters_read", "name": "diskEncryptionSet"}, {"type": "string", "name": "securityEncryptionType", "enum": {"items": [{"value": "DiskWithVMGuestState"}, {"value": "NonPersistedTPM"}, {"value": "VMGuestStateOnly"}]}}]}, {"type": "string", "name": "storageAccountType", "enum": {"items": [{"value": "PremiumV2_LRS"}, {"value": "Premium_LRS"}, {"value": "Premium_ZRS"}, {"value": "StandardSSD_LRS"}, {"value": "StandardSSD_ZRS"}, {"value": "Standard_LRS"}, {"value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_read"}, {"type": "string", "name": "name"}, {"type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "object", "name": "vhd", "props": [{"type": "string", "name": "uri"}], "cls": "VirtualHardDisk_read"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}]}, {"readOnly": true, "type": "dateTime", "name": "timeCreated"}, {"type": "string", "name": "userData"}, {"type": "@SubResource_read", "name": "virtualMachineScaleSet"}, {"readOnly": true, "type": "string", "name": "vmId"}], "clientFlatten": true}, {"readOnly": true, "type": "array<object>", "name": "resources", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "autoUpgradeMinorVersion"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "string", "name": "forceUpdateTag"}, {"type": "@VirtualMachineExtensionInstanceView_read", "name": "instanceView"}, {"type": "object", "name": "protectedSettings", "additionalProps": {"item": {"type": "any"}}}, {"type": "@KeyVaultSecretReference_read", "name": "protectedSettingsFromKeyVault"}, {"type": "array<string>", "name": "provisionAfterExtensions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "publisher"}, {"type": "object", "name": "settings", "additionalProps": {"item": {"type": "any"}}}, {"type": "boolean", "name": "suppressFailures"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}], "cls": "VirtualMachine_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}, {"instanceUpdate": {"ref": "$Subresource", "json": {"schema": {"action": "assign", "type": "IdentityObject", "name": "parameters.identity", "required": true, "userAssigned": {"action": "assign", "type": "array<string>", "name": "userAssigned", "arg": "$parameters.identity.userAssigned", "item": {"action": "assign", "type": "string"}}, "systemAssigned": {"action": "assign", "type": "string", "name": "systemAssigned", "arg": "$parameters.identity.systemAssigned"}}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "VirtualMachines_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}, "header": {"params": [{"type": "string", "name": "If-Match", "arg": "$Header.If-Match"}, {"type": "string", "name": "If-None-Match", "arg": "$Header.If-None-Match"}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@VirtualMachine_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}]}, {"name": "remove", "version": "2024-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}", "version": "2024-11-01", "subresource": "identity", "swagger": "mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Header.If-Match", "options": ["if-match"], "help": {"short": "The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."}}, {"type": "string", "var": "$Header.If-None-Match", "options": ["if-none-match"], "help": {"short": "Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vmName", "options": ["n", "name", "vm-name"], "required": true, "idPart": "name", "help": {"short": "The name of the virtual machine."}}]}, {"name": "Parameters.identity", "args": [{"blank": {"value": "True"}, "type": "string", "var": "$parameters.identity.systemAssigned", "options": ["system-assigned", "mi-system-assigned"], "group": "Parameters.identity", "help": {"short": "Set the system managed identity."}}, {"blank": {"value": []}, "type": "array<string>", "var": "$parameters.identity.userAssigned", "options": ["user-assigned", "mi-user-assigned"], "group": "Parameters.identity", "help": {"short": "Set the user managed identities."}, "item": {"type": "string"}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "object", "name": "identity"}}}, "operations": [{"operationId": "VirtualMachines_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "object", "name": "extendedLocation", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "EdgeZone"}]}}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "managedBy"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "placement", "props": [{"type": "array<string>", "name": "excludeZones", "item": {"type": "string"}}, {"type": "array<string>", "name": "includeZones", "item": {"type": "string"}}, {"type": "string", "name": "zonePlacementPolicy", "enum": {"items": [{"value": "Any"}]}}]}, {"type": "object", "name": "plan", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "product"}, {"type": "string", "name": "promotionCode"}, {"type": "string", "name": "publisher"}]}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "additionalCapabilities", "props": [{"type": "boolean", "name": "hibernationEnabled"}, {"type": "boolean", "name": "ultraSSDEnabled"}]}, {"type": "object", "name": "applicationProfile", "props": [{"type": "array<object>", "name": "galleryApplications", "item": {"type": "object", "props": [{"type": "string", "name": "configurationReference"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "integer32", "name": "order"}, {"type": "string", "name": "packageReferenceId", "required": true}, {"type": "string", "name": "tags"}, {"type": "boolean", "name": "treatFailureAsDeploymentFailure"}]}, "identifiers": ["packageReferenceId"]}]}, {"type": "@SubResource_read", "name": "availabilitySet"}, {"type": "object", "name": "billingProfile", "props": [{"type": "float64", "name": "maxPrice"}]}, {"type": "object", "name": "capacityReservation", "props": [{"type": "@SubResource_read", "name": "capacityReservationGroup"}]}, {"type": "object", "name": "diagnosticsProfile", "props": [{"type": "object", "name": "bootDiagnostics", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "storageUri"}]}]}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "Deallocate"}, {"value": "Delete"}]}}, {"type": "string", "name": "extensionsTimeBudget"}, {"type": "object", "name": "hardwareProfile", "props": [{"type": "string", "name": "vmSize", "enum": {"items": [{"value": "Basic_A0"}, {"value": "Basic_A1"}, {"value": "Basic_A2"}, {"value": "Basic_A3"}, {"value": "Basic_A4"}, {"value": "Standard_A0"}, {"value": "Standard_A1"}, {"value": "Standard_A10"}, {"value": "Standard_A11"}, {"value": "Standard_A1_v2"}, {"value": "Standard_A2"}, {"value": "Standard_A2_v2"}, {"value": "Standard_A2m_v2"}, {"value": "Standard_A3"}, {"value": "Standard_A4"}, {"value": "Standard_A4_v2"}, {"value": "Standard_A4m_v2"}, {"value": "Standard_A5"}, {"value": "Standard_A6"}, {"value": "Standard_A7"}, {"value": "Standard_A8"}, {"value": "Standard_A8_v2"}, {"value": "Standard_A8m_v2"}, {"value": "Standard_A9"}, {"value": "Standard_B1ms"}, {"value": "Standard_B1s"}, {"value": "Standard_B2ms"}, {"value": "Standard_B2s"}, {"value": "Standard_B4ms"}, {"value": "Standard_B8ms"}, {"value": "Standard_D1"}, {"value": "Standard_D11"}, {"value": "Standard_D11_v2"}, {"value": "Standard_D12"}, {"value": "Standard_D12_v2"}, {"value": "Standard_D13"}, {"value": "Standard_D13_v2"}, {"value": "Standard_D14"}, {"value": "Standard_D14_v2"}, {"value": "Standard_D15_v2"}, {"value": "Standard_D16_v3"}, {"value": "Standard_D16s_v3"}, {"value": "Standard_D1_v2"}, {"value": "Standard_D2"}, {"value": "Standard_D2_v2"}, {"value": "Standard_D2_v3"}, {"value": "Standard_D2s_v3"}, {"value": "Standard_D3"}, {"value": "Standard_D32_v3"}, {"value": "Standard_D32s_v3"}, {"value": "Standard_D3_v2"}, {"value": "Standard_D4"}, {"value": "Standard_D4_v2"}, {"value": "Standard_D4_v3"}, {"value": "Standard_D4s_v3"}, {"value": "Standard_D5_v2"}, {"value": "Standard_D64_v3"}, {"value": "Standard_D64s_v3"}, {"value": "Standard_D8_v3"}, {"value": "Standard_D8s_v3"}, {"value": "Standard_DS1"}, {"value": "Standard_DS11"}, {"value": "Standard_DS11_v2"}, {"value": "Standard_DS12"}, {"value": "Standard_DS12_v2"}, {"value": "Standard_DS13"}, {"value": "Standard_DS13-2_v2"}, {"value": "Standard_DS13-4_v2"}, {"value": "Standard_DS13_v2"}, {"value": "Standard_DS14"}, {"value": "Standard_DS14-4_v2"}, {"value": "Standard_DS14-8_v2"}, {"value": "Standard_DS14_v2"}, {"value": "Standard_DS15_v2"}, {"value": "Standard_DS1_v2"}, {"value": "Standard_DS2"}, {"value": "Standard_DS2_v2"}, {"value": "Standard_DS3"}, {"value": "Standard_DS3_v2"}, {"value": "Standard_DS4"}, {"value": "Standard_DS4_v2"}, {"value": "Standard_DS5_v2"}, {"value": "Standard_E16_v3"}, {"value": "Standard_E16s_v3"}, {"value": "Standard_E2_v3"}, {"value": "Standard_E2s_v3"}, {"value": "Standard_E32-16_v3"}, {"value": "Standard_E32-8s_v3"}, {"value": "Standard_E32_v3"}, {"value": "Standard_E32s_v3"}, {"value": "Standard_E4_v3"}, {"value": "Standard_E4s_v3"}, {"value": "Standard_E64-16s_v3"}, {"value": "Standard_E64-32s_v3"}, {"value": "Standard_E64_v3"}, {"value": "Standard_E64s_v3"}, {"value": "Standard_E8_v3"}, {"value": "Standard_E8s_v3"}, {"value": "Standard_F1"}, {"value": "Standard_F16"}, {"value": "Standard_F16s"}, {"value": "Standard_F16s_v2"}, {"value": "Standard_F1s"}, {"value": "Standard_F2"}, {"value": "Standard_F2s"}, {"value": "Standard_F2s_v2"}, {"value": "Standard_F32s_v2"}, {"value": "Standard_F4"}, {"value": "Standard_F4s"}, {"value": "Standard_F4s_v2"}, {"value": "Standard_F64s_v2"}, {"value": "Standard_F72s_v2"}, {"value": "Standard_F8"}, {"value": "Standard_F8s"}, {"value": "Standard_F8s_v2"}, {"value": "Standard_G1"}, {"value": "Standard_G2"}, {"value": "Standard_G3"}, {"value": "Standard_G4"}, {"value": "Standard_G5"}, {"value": "Standard_GS1"}, {"value": "Standard_GS2"}, {"value": "Standard_GS3"}, {"value": "Standard_GS4"}, {"value": "Standard_GS4-4"}, {"value": "Standard_GS4-8"}, {"value": "Standard_GS5"}, {"value": "Standard_GS5-16"}, {"value": "Standard_GS5-8"}, {"value": "Standard_H16"}, {"value": "Standard_H16m"}, {"value": "Standard_H16mr"}, {"value": "Standard_H16r"}, {"value": "Standard_H8"}, {"value": "Standard_H8m"}, {"value": "Standard_L16s"}, {"value": "Standard_L32s"}, {"value": "Standard_L4s"}, {"value": "Standard_L8s"}, {"value": "Standard_M128-32ms"}, {"value": "Standard_M128-64ms"}, {"value": "Standard_M128ms"}, {"value": "Standard_M128s"}, {"value": "Standard_M64-16ms"}, {"value": "Standard_M64-32ms"}, {"value": "Standard_M64ms"}, {"value": "Standard_M64s"}, {"value": "Standard_NC12"}, {"value": "Standard_NC12s_v2"}, {"value": "Standard_NC12s_v3"}, {"value": "Standard_NC24"}, {"value": "Standard_NC24r"}, {"value": "Standard_NC24rs_v2"}, {"value": "Standard_NC24rs_v3"}, {"value": "Standard_NC24s_v2"}, {"value": "Standard_NC24s_v3"}, {"value": "Standard_NC6"}, {"value": "Standard_NC6s_v2"}, {"value": "Standard_NC6s_v3"}, {"value": "Standard_ND12s"}, {"value": "Standard_ND24rs"}, {"value": "Standard_ND24s"}, {"value": "Standard_ND6s"}, {"value": "Standard_NV12"}, {"value": "Standard_NV24"}, {"value": "Standard_NV6"}]}}, {"type": "object", "name": "vmSizeProperties", "props": [{"type": "integer32", "name": "vCPUsAvailable"}, {"type": "integer32", "name": "vCPUsPerCore"}]}]}, {"type": "@SubResource_read", "name": "host"}, {"type": "@SubResource_read", "name": "hostGroup"}, {"readOnly": true, "type": "object", "name": "instanceView", "props": [{"readOnly": true, "type": "string", "name": "assignedHost"}, {"type": "object", "name": "bootDiagnostics", "props": [{"readOnly": true, "type": "string", "name": "consoleScreenshotBlobUri"}, {"readOnly": true, "type": "string", "name": "serialConsoleLogBlobUri"}, {"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}, {"type": "string", "name": "computerName"}, {"type": "array<object>", "name": "disks", "item": {"type": "object", "props": [{"type": "array<@DiskEncryptionSettings_read>", "name": "encryptionSettings", "item": {"type": "@DiskEncryptionSettings_read"}}, {"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "extensions", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "array<@InstanceViewStatus_read>", "name": "substatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "cls": "VirtualMachineExtensionInstanceView_read"}, "identifiers": ["name", "type"]}, {"type": "string", "name": "hyperVGeneration", "enum": {"items": [{"value": "V1"}, {"value": "V2"}]}}, {"readOnly": true, "type": "boolean", "name": "isVMInStandbyPool"}, {"type": "object", "name": "maintenanceRedeployStatus", "props": [{"type": "boolean", "name": "isCustomerInitiatedMaintenanceAllowed"}, {"type": "string", "name": "lastOperationMessage"}, {"type": "string", "name": "lastOperationResultCode", "enum": {"items": [{"value": "MaintenanceAborted"}, {"value": "MaintenanceCompleted"}, {"value": "None"}, {"value": "RetryLater"}]}}, {"type": "dateTime", "name": "maintenanceWindowEndTime"}, {"type": "dateTime", "name": "maintenanceWindowStartTime"}, {"type": "dateTime", "name": "preMaintenanceWindowEndTime"}, {"type": "dateTime", "name": "preMaintenanceWindowStartTime"}]}, {"type": "string", "name": "osName"}, {"type": "string", "name": "osVersion"}, {"type": "object", "name": "patchStatus", "props": [{"type": "object", "name": "availablePatchSummary", "props": [{"readOnly": true, "type": "string", "name": "assessmentActivityId"}, {"readOnly": true, "type": "integer32", "name": "criticalAndSecurityPatchCount"}, {"readOnly": true, "type": "object", "name": "error", "props": [{"type": "string", "name": "code"}, {"type": "array<object>", "name": "details", "item": {"type": "object", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}]}, "identifiers": ["target", "message"]}, {"type": "object", "name": "innererror", "props": [{"type": "string", "name": "errordetail"}, {"type": "string", "name": "exceptiontype"}]}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}], "cls": "ApiError_read"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "integer32", "name": "otherPatchCount"}, {"readOnly": true, "type": "boolean", "name": "rebootPending"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}, {"readOnly": true, "type": "array<@InstanceViewStatus_read>", "name": "configurationStatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "lastPatchInstallationSummary", "props": [{"readOnly": true, "type": "@ApiError_read", "name": "error"}, {"readOnly": true, "type": "integer32", "name": "excludedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "failedPatchCount"}, {"readOnly": true, "type": "string", "name": "installationActivityId"}, {"readOnly": true, "type": "integer32", "name": "installedPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "boolean", "name": "maintenanceWindowExceeded"}, {"readOnly": true, "type": "integer32", "name": "notSelectedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "pendingPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "integer32", "name": "platformUpdateDomain"}, {"type": "string", "name": "rdpThumbPrint"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "vmAgent", "props": [{"type": "array<object>", "name": "extensionHandlers", "item": {"type": "object", "props": [{"type": "object", "name": "status", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "displayStatus"}, {"type": "string", "name": "level", "enum": {"items": [{"value": "Error"}, {"value": "Info"}, {"value": "Warning"}]}}, {"type": "string", "name": "message"}, {"type": "dateTime", "name": "time"}], "cls": "InstanceViewStatus_read"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}]}}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "vmAgentVersion"}]}, {"readOnly": true, "type": "object", "name": "vmHealth", "props": [{"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}]}, {"type": "string", "name": "licenseType"}, {"type": "object", "name": "networkProfile", "props": [{"type": "string", "name": "networkApiVersion", "enum": {"items": [{"value": "2020-11-01"}, {"value": "2022-11-01"}]}}, {"type": "array<object>", "name": "networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "auxiliaryMode", "enum": {"items": [{"value": "AcceleratedConnections"}, {"value": "Floating"}, {"value": "None"}]}}, {"type": "string", "name": "auxiliarySku", "enum": {"items": [{"value": "A1"}, {"value": "A2"}, {"value": "A4"}, {"value": "A8"}, {"value": "None"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "disableTcpStateTracking"}, {"type": "object", "name": "dnsSettings", "props": [{"type": "array<string>", "name": "dnsServers", "item": {"type": "string"}}]}, {"type": "@SubResource_read", "name": "dscpConfiguration"}, {"type": "boolean", "name": "enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableFpga"}, {"type": "boolean", "name": "enableIPForwarding"}, {"type": "array<object>", "name": "ipConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<@SubResource_read>", "name": "applicationGatewayBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "applicationSecurityGroups", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "loadBalancerBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "object", "name": "publicIPAddressConfiguration", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "required": true}, {"type": "string", "name": "domainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}]}}]}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "array<object>", "name": "ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType"}, {"type": "string", "name": "tag"}]}}, {"type": "string", "name": "publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_read", "name": "publicIPPrefix"}], "clientFlatten": true}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}, {"type": "string", "name": "tier", "enum": {"items": [{"value": "Global"}, {"value": "Regional"}]}}]}]}, {"type": "@SubResource_read", "name": "subnet"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "@SubResource_read", "name": "networkSecurityGroup"}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "id"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}}]}, {"type": "object", "name": "osProfile", "props": [{"type": "string", "name": "adminPassword", "secret": true}, {"type": "string", "name": "adminUsername"}, {"type": "boolean", "name": "allowExtensionOperations"}, {"type": "string", "name": "computerName"}, {"type": "string", "name": "customData"}, {"type": "object", "name": "linuxConfiguration", "props": [{"type": "boolean", "name": "disablePasswordAuthentication"}, {"type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "object", "name": "ssh", "props": [{"type": "array<object>", "name": "publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData"}, {"type": "string", "name": "path"}]}, "identifiers": ["path"]}]}]}, {"type": "boolean", "name": "requireGuestProvisionSignal"}, {"type": "array<object>", "name": "secrets", "item": {"type": "object", "props": [{"type": "@SubResource_read", "name": "sourceVault"}, {"type": "array<object>", "name": "vaultCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "certificateStore"}, {"type": "string", "name": "certificateUrl"}]}, "identifiers": ["certificateUrl"]}]}}, {"type": "object", "name": "windowsConfiguration", "props": [{"type": "array<object>", "name": "additionalUnattendContent", "item": {"type": "object", "props": [{"type": "string", "name": "componentName", "enum": {"items": [{"value": "Microsoft-Windows-Shell-Setup"}]}}, {"type": "string", "name": "content"}, {"type": "string", "name": "passName", "enum": {"items": [{"value": "OobeSystem"}]}}, {"type": "string", "name": "settingName", "enum": {"items": [{"value": "AutoLogon"}, {"value": "FirstLogonCommands"}]}}]}}, {"type": "boolean", "name": "enableAutomaticUpdates"}, {"readOnly": true, "type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "boolean", "name": "enableHotpatching"}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByOS"}, {"value": "AutomaticByPlatform"}, {"value": "Manual"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "string", "name": "timeZone"}, {"type": "object", "name": "winRM", "props": [{"type": "array<object>", "name": "listeners", "item": {"type": "object", "props": [{"type": "string", "name": "certificateUrl"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}]}}]}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "string", "name": "priority", "enum": {"items": [{"value": "Low"}, {"value": "Regular"}, {"value": "Spot"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "proximityPlacementGroup"}, {"type": "object", "name": "scheduledEventsPolicy", "props": [{"type": "object", "name": "scheduledEventsAdditionalPublishingTargets", "props": [{"type": "object", "name": "eventGridAndResourceGraph", "props": [{"type": "boolean", "name": "enable"}]}]}, {"type": "object", "name": "userInitiatedReboot", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}, {"type": "object", "name": "userInitiatedRedeploy", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}]}, {"type": "object", "name": "scheduledEventsProfile", "props": [{"type": "object", "name": "osImageNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}, {"type": "object", "name": "terminateNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}]}, {"type": "object", "name": "securityProfile", "props": [{"type": "boolean", "name": "encryptionAtHost"}, {"type": "object", "name": "encryptionIdentity", "props": [{"type": "string", "name": "userAssignedIdentityResourceId"}]}, {"type": "object", "name": "proxyAgentSettings", "props": [{"type": "boolean", "name": "enabled"}, {"type": "@HostEndpointSettings_read", "name": "imds"}, {"type": "integer32", "name": "keyIncarnationId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Enforce"}]}}, {"type": "object", "name": "wireServer", "props": [{"type": "string", "name": "inVMAccessControlProfileReferenceId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Disabled"}, {"value": "Enforce"}]}}], "cls": "HostEndpointSettings_read"}]}, {"type": "string", "name": "securityType", "enum": {"items": [{"value": "ConfidentialVM"}, {"value": "TrustedLaunch"}]}}, {"type": "object", "name": "uefiSettings", "props": [{"type": "boolean", "name": "secureBootEnabled"}, {"type": "boolean", "name": "vTpmEnabled"}]}]}, {"type": "object", "name": "storageProfile", "props": [{"type": "boolean", "name": "alignRegionalDisksToVMZone"}, {"type": "array<object>", "name": "dataDisks", "item": {"type": "object", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "string", "name": "detachOption", "enum": {"items": [{"value": "ForceDetach"}]}}, {"readOnly": true, "type": "integer64", "name": "diskIOPSReadWrite"}, {"readOnly": true, "type": "integer64", "name": "diskMBpsReadWrite"}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "integer32", "name": "lun", "required": true}, {"type": "@ManagedDiskParameters_read", "name": "managedDisk"}, {"type": "string", "name": "name"}, {"type": "object", "name": "sourceResource", "props": [{"type": "string", "name": "id"}]}, {"type": "boolean", "name": "toBeDetached"}, {"type": "@VirtualHardDisk_read", "name": "vhd"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}, "identifiers": ["lun"]}, {"type": "string", "name": "diskControllerType", "enum": {"items": [{"value": "NVMe"}, {"value": "SCSI"}]}}, {"type": "object", "name": "imageReference", "props": [{"type": "string", "name": "communityGalleryImageId"}, {"readOnly": true, "type": "string", "name": "exactVersion"}, {"type": "string", "name": "id"}, {"type": "string", "name": "offer"}, {"type": "string", "name": "publisher"}, {"type": "string", "name": "sharedGalleryImageId"}, {"type": "string", "name": "sku"}, {"type": "string", "name": "version"}]}, {"type": "object", "name": "osDisk", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "diffDiskSettings", "props": [{"type": "string", "name": "option", "enum": {"items": [{"value": "Local"}]}}, {"type": "string", "name": "placement", "enum": {"items": [{"value": "CacheDisk"}, {"value": "NvmeDisk"}, {"value": "ResourceDisk"}]}}]}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "object", "name": "encryptionSettings", "props": [{"type": "object", "name": "diskEncryptionKey", "props": [{"type": "string", "name": "secretUrl", "required": true}, {"type": "object", "name": "sourceVault", "required": true, "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "cls": "KeyVaultSecretReference_read"}, {"type": "boolean", "name": "enabled"}, {"type": "object", "name": "keyEncryptionKey", "props": [{"type": "string", "name": "keyUrl", "required": true}, {"type": "@SubResource_read", "name": "sourceVault", "required": true}]}], "cls": "DiskEncryptionSettings_read"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "object", "name": "managedDisk", "props": [{"type": "object", "name": "diskEncryptionSet", "props": [{"type": "string", "name": "id"}], "cls": "DiskEncryptionSetParameters_read"}, {"type": "string", "name": "id"}, {"type": "object", "name": "securityProfile", "props": [{"type": "@DiskEncryptionSetParameters_read", "name": "diskEncryptionSet"}, {"type": "string", "name": "securityEncryptionType", "enum": {"items": [{"value": "DiskWithVMGuestState"}, {"value": "NonPersistedTPM"}, {"value": "VMGuestStateOnly"}]}}]}, {"type": "string", "name": "storageAccountType", "enum": {"items": [{"value": "PremiumV2_LRS"}, {"value": "Premium_LRS"}, {"value": "Premium_ZRS"}, {"value": "StandardSSD_LRS"}, {"value": "StandardSSD_ZRS"}, {"value": "Standard_LRS"}, {"value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_read"}, {"type": "string", "name": "name"}, {"type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "object", "name": "vhd", "props": [{"type": "string", "name": "uri"}], "cls": "VirtualHardDisk_read"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}]}, {"readOnly": true, "type": "dateTime", "name": "timeCreated"}, {"type": "string", "name": "userData"}, {"type": "@SubResource_read", "name": "virtualMachineScaleSet"}, {"readOnly": true, "type": "string", "name": "vmId"}], "clientFlatten": true}, {"readOnly": true, "type": "array<object>", "name": "resources", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "autoUpgradeMinorVersion"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "string", "name": "forceUpdateTag"}, {"type": "@VirtualMachineExtensionInstanceView_read", "name": "instanceView"}, {"type": "object", "name": "protectedSettings", "additionalProps": {"item": {"type": "any"}}}, {"type": "@KeyVaultSecretReference_read", "name": "protectedSettingsFromKeyVault"}, {"type": "array<string>", "name": "provisionAfterExtensions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "publisher"}, {"type": "object", "name": "settings", "additionalProps": {"item": {"type": "any"}}}, {"type": "boolean", "name": "suppressFailures"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}], "cls": "VirtualMachine_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}, {"instanceUpdate": {"ref": "$Subresource", "json": {"schema": {"action": "remove", "type": "IdentityObject", "name": "parameters.identity", "required": true, "userAssigned": {"action": "remove", "type": "array<string>", "name": "userAssigned", "arg": "$parameters.identity.userAssigned", "item": {"action": "remove", "type": "string"}}, "systemAssigned": {"action": "remove", "type": "string", "name": "systemAssigned", "arg": "$parameters.identity.systemAssigned"}}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "VirtualMachines_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}, "header": {"params": [{"type": "string", "name": "If-Match", "arg": "$Header.If-Match"}, {"type": "string", "name": "If-None-Match", "arg": "$Header.If-None-Match"}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@VirtualMachine_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}]}, {"name": "show", "version": "2024-11-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}", "version": "2024-11-01", "subresource": "identity", "swagger": "mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "string", "var": "$Path.vmName", "options": ["n", "name", "vm-name"], "required": true, "idPart": "name", "help": {"short": "The name of the virtual machine."}}]}], "subresourceSelector": {"var": "$Subresource", "ref": "$Instance", "json": {"type": "object", "name": "parameters", "prop": {"type": "object", "name": "identity"}}}, "operations": [{"operationId": "VirtualMachines_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}, {"type": "string", "name": "vmName", "arg": "$Path.vmName", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2024-11-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "object", "name": "extendedLocation", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "EdgeZone"}]}}]}, {"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"}}, {"type": "IdentityObject", "name": "identity", "props": [{"readOnly": true, "type": "string", "name": "principalId"}, {"readOnly": true, "type": "string", "name": "tenantId"}, {"type": "string", "name": "type", "enum": {"items": [{"value": "None"}, {"value": "SystemAssigned"}, {"value": "SystemAssigned, UserAssigned"}, {"value": "UserAssigned"}]}}, {"type": "object", "name": "userAssignedIdentities", "additionalProps": {"item": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "clientId"}, {"readOnly": true, "type": "string", "name": "principalId"}]}}}]}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "managedBy"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "placement", "props": [{"type": "array<string>", "name": "excludeZones", "item": {"type": "string"}}, {"type": "array<string>", "name": "includeZones", "item": {"type": "string"}}, {"type": "string", "name": "zonePlacementPolicy", "enum": {"items": [{"value": "Any"}]}}]}, {"type": "object", "name": "plan", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "product"}, {"type": "string", "name": "promotionCode"}, {"type": "string", "name": "publisher"}]}, {"type": "object", "name": "properties", "props": [{"type": "object", "name": "additionalCapabilities", "props": [{"type": "boolean", "name": "hibernationEnabled"}, {"type": "boolean", "name": "ultraSSDEnabled"}]}, {"type": "object", "name": "applicationProfile", "props": [{"type": "array<object>", "name": "galleryApplications", "item": {"type": "object", "props": [{"type": "string", "name": "configurationReference"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "integer32", "name": "order"}, {"type": "string", "name": "packageReferenceId", "required": true}, {"type": "string", "name": "tags"}, {"type": "boolean", "name": "treatFailureAsDeploymentFailure"}]}, "identifiers": ["packageReferenceId"]}]}, {"type": "@SubResource_read", "name": "availabilitySet"}, {"type": "object", "name": "billingProfile", "props": [{"type": "float64", "name": "maxPrice"}]}, {"type": "object", "name": "capacityReservation", "props": [{"type": "@SubResource_read", "name": "capacityReservationGroup"}]}, {"type": "object", "name": "diagnosticsProfile", "props": [{"type": "object", "name": "bootDiagnostics", "props": [{"type": "boolean", "name": "enabled"}, {"type": "string", "name": "storageUri"}]}]}, {"type": "string", "name": "evictionPolicy", "enum": {"items": [{"value": "Deallocate"}, {"value": "Delete"}]}}, {"type": "string", "name": "extensionsTimeBudget"}, {"type": "object", "name": "hardwareProfile", "props": [{"type": "string", "name": "vmSize", "enum": {"items": [{"value": "Basic_A0"}, {"value": "Basic_A1"}, {"value": "Basic_A2"}, {"value": "Basic_A3"}, {"value": "Basic_A4"}, {"value": "Standard_A0"}, {"value": "Standard_A1"}, {"value": "Standard_A10"}, {"value": "Standard_A11"}, {"value": "Standard_A1_v2"}, {"value": "Standard_A2"}, {"value": "Standard_A2_v2"}, {"value": "Standard_A2m_v2"}, {"value": "Standard_A3"}, {"value": "Standard_A4"}, {"value": "Standard_A4_v2"}, {"value": "Standard_A4m_v2"}, {"value": "Standard_A5"}, {"value": "Standard_A6"}, {"value": "Standard_A7"}, {"value": "Standard_A8"}, {"value": "Standard_A8_v2"}, {"value": "Standard_A8m_v2"}, {"value": "Standard_A9"}, {"value": "Standard_B1ms"}, {"value": "Standard_B1s"}, {"value": "Standard_B2ms"}, {"value": "Standard_B2s"}, {"value": "Standard_B4ms"}, {"value": "Standard_B8ms"}, {"value": "Standard_D1"}, {"value": "Standard_D11"}, {"value": "Standard_D11_v2"}, {"value": "Standard_D12"}, {"value": "Standard_D12_v2"}, {"value": "Standard_D13"}, {"value": "Standard_D13_v2"}, {"value": "Standard_D14"}, {"value": "Standard_D14_v2"}, {"value": "Standard_D15_v2"}, {"value": "Standard_D16_v3"}, {"value": "Standard_D16s_v3"}, {"value": "Standard_D1_v2"}, {"value": "Standard_D2"}, {"value": "Standard_D2_v2"}, {"value": "Standard_D2_v3"}, {"value": "Standard_D2s_v3"}, {"value": "Standard_D3"}, {"value": "Standard_D32_v3"}, {"value": "Standard_D32s_v3"}, {"value": "Standard_D3_v2"}, {"value": "Standard_D4"}, {"value": "Standard_D4_v2"}, {"value": "Standard_D4_v3"}, {"value": "Standard_D4s_v3"}, {"value": "Standard_D5_v2"}, {"value": "Standard_D64_v3"}, {"value": "Standard_D64s_v3"}, {"value": "Standard_D8_v3"}, {"value": "Standard_D8s_v3"}, {"value": "Standard_DS1"}, {"value": "Standard_DS11"}, {"value": "Standard_DS11_v2"}, {"value": "Standard_DS12"}, {"value": "Standard_DS12_v2"}, {"value": "Standard_DS13"}, {"value": "Standard_DS13-2_v2"}, {"value": "Standard_DS13-4_v2"}, {"value": "Standard_DS13_v2"}, {"value": "Standard_DS14"}, {"value": "Standard_DS14-4_v2"}, {"value": "Standard_DS14-8_v2"}, {"value": "Standard_DS14_v2"}, {"value": "Standard_DS15_v2"}, {"value": "Standard_DS1_v2"}, {"value": "Standard_DS2"}, {"value": "Standard_DS2_v2"}, {"value": "Standard_DS3"}, {"value": "Standard_DS3_v2"}, {"value": "Standard_DS4"}, {"value": "Standard_DS4_v2"}, {"value": "Standard_DS5_v2"}, {"value": "Standard_E16_v3"}, {"value": "Standard_E16s_v3"}, {"value": "Standard_E2_v3"}, {"value": "Standard_E2s_v3"}, {"value": "Standard_E32-16_v3"}, {"value": "Standard_E32-8s_v3"}, {"value": "Standard_E32_v3"}, {"value": "Standard_E32s_v3"}, {"value": "Standard_E4_v3"}, {"value": "Standard_E4s_v3"}, {"value": "Standard_E64-16s_v3"}, {"value": "Standard_E64-32s_v3"}, {"value": "Standard_E64_v3"}, {"value": "Standard_E64s_v3"}, {"value": "Standard_E8_v3"}, {"value": "Standard_E8s_v3"}, {"value": "Standard_F1"}, {"value": "Standard_F16"}, {"value": "Standard_F16s"}, {"value": "Standard_F16s_v2"}, {"value": "Standard_F1s"}, {"value": "Standard_F2"}, {"value": "Standard_F2s"}, {"value": "Standard_F2s_v2"}, {"value": "Standard_F32s_v2"}, {"value": "Standard_F4"}, {"value": "Standard_F4s"}, {"value": "Standard_F4s_v2"}, {"value": "Standard_F64s_v2"}, {"value": "Standard_F72s_v2"}, {"value": "Standard_F8"}, {"value": "Standard_F8s"}, {"value": "Standard_F8s_v2"}, {"value": "Standard_G1"}, {"value": "Standard_G2"}, {"value": "Standard_G3"}, {"value": "Standard_G4"}, {"value": "Standard_G5"}, {"value": "Standard_GS1"}, {"value": "Standard_GS2"}, {"value": "Standard_GS3"}, {"value": "Standard_GS4"}, {"value": "Standard_GS4-4"}, {"value": "Standard_GS4-8"}, {"value": "Standard_GS5"}, {"value": "Standard_GS5-16"}, {"value": "Standard_GS5-8"}, {"value": "Standard_H16"}, {"value": "Standard_H16m"}, {"value": "Standard_H16mr"}, {"value": "Standard_H16r"}, {"value": "Standard_H8"}, {"value": "Standard_H8m"}, {"value": "Standard_L16s"}, {"value": "Standard_L32s"}, {"value": "Standard_L4s"}, {"value": "Standard_L8s"}, {"value": "Standard_M128-32ms"}, {"value": "Standard_M128-64ms"}, {"value": "Standard_M128ms"}, {"value": "Standard_M128s"}, {"value": "Standard_M64-16ms"}, {"value": "Standard_M64-32ms"}, {"value": "Standard_M64ms"}, {"value": "Standard_M64s"}, {"value": "Standard_NC12"}, {"value": "Standard_NC12s_v2"}, {"value": "Standard_NC12s_v3"}, {"value": "Standard_NC24"}, {"value": "Standard_NC24r"}, {"value": "Standard_NC24rs_v2"}, {"value": "Standard_NC24rs_v3"}, {"value": "Standard_NC24s_v2"}, {"value": "Standard_NC24s_v3"}, {"value": "Standard_NC6"}, {"value": "Standard_NC6s_v2"}, {"value": "Standard_NC6s_v3"}, {"value": "Standard_ND12s"}, {"value": "Standard_ND24rs"}, {"value": "Standard_ND24s"}, {"value": "Standard_ND6s"}, {"value": "Standard_NV12"}, {"value": "Standard_NV24"}, {"value": "Standard_NV6"}]}}, {"type": "object", "name": "vmSizeProperties", "props": [{"type": "integer32", "name": "vCPUsAvailable"}, {"type": "integer32", "name": "vCPUsPerCore"}]}]}, {"type": "@SubResource_read", "name": "host"}, {"type": "@SubResource_read", "name": "hostGroup"}, {"readOnly": true, "type": "object", "name": "instanceView", "props": [{"readOnly": true, "type": "string", "name": "assignedHost"}, {"type": "object", "name": "bootDiagnostics", "props": [{"readOnly": true, "type": "string", "name": "consoleScreenshotBlobUri"}, {"readOnly": true, "type": "string", "name": "serialConsoleLogBlobUri"}, {"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}, {"type": "string", "name": "computerName"}, {"type": "array<object>", "name": "disks", "item": {"type": "object", "props": [{"type": "array<@DiskEncryptionSettings_read>", "name": "encryptionSettings", "item": {"type": "@DiskEncryptionSettings_read"}}, {"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "extensions", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "array<@InstanceViewStatus_read>", "name": "substatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "cls": "VirtualMachineExtensionInstanceView_read"}, "identifiers": ["name", "type"]}, {"type": "string", "name": "hyperVGeneration", "enum": {"items": [{"value": "V1"}, {"value": "V2"}]}}, {"readOnly": true, "type": "boolean", "name": "isVMInStandbyPool"}, {"type": "object", "name": "maintenanceRedeployStatus", "props": [{"type": "boolean", "name": "isCustomerInitiatedMaintenanceAllowed"}, {"type": "string", "name": "lastOperationMessage"}, {"type": "string", "name": "lastOperationResultCode", "enum": {"items": [{"value": "MaintenanceAborted"}, {"value": "MaintenanceCompleted"}, {"value": "None"}, {"value": "RetryLater"}]}}, {"type": "dateTime", "name": "maintenanceWindowEndTime"}, {"type": "dateTime", "name": "maintenanceWindowStartTime"}, {"type": "dateTime", "name": "preMaintenanceWindowEndTime"}, {"type": "dateTime", "name": "preMaintenanceWindowStartTime"}]}, {"type": "string", "name": "osName"}, {"type": "string", "name": "osVersion"}, {"type": "object", "name": "patchStatus", "props": [{"type": "object", "name": "availablePatchSummary", "props": [{"readOnly": true, "type": "string", "name": "assessmentActivityId"}, {"readOnly": true, "type": "integer32", "name": "criticalAndSecurityPatchCount"}, {"readOnly": true, "type": "object", "name": "error", "props": [{"type": "string", "name": "code"}, {"type": "array<object>", "name": "details", "item": {"type": "object", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}]}, "identifiers": ["target", "message"]}, {"type": "object", "name": "innererror", "props": [{"type": "string", "name": "errordetail"}, {"type": "string", "name": "exceptiontype"}]}, {"type": "string", "name": "message"}, {"type": "string", "name": "target"}], "cls": "ApiError_read"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "integer32", "name": "otherPatchCount"}, {"readOnly": true, "type": "boolean", "name": "rebootPending"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}, {"readOnly": true, "type": "array<@InstanceViewStatus_read>", "name": "configurationStatuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "lastPatchInstallationSummary", "props": [{"readOnly": true, "type": "@ApiError_read", "name": "error"}, {"readOnly": true, "type": "integer32", "name": "excludedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "failedPatchCount"}, {"readOnly": true, "type": "string", "name": "installationActivityId"}, {"readOnly": true, "type": "integer32", "name": "installedPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "lastModifiedTime"}, {"readOnly": true, "type": "boolean", "name": "maintenanceWindowExceeded"}, {"readOnly": true, "type": "integer32", "name": "notSelectedPatchCount"}, {"readOnly": true, "type": "integer32", "name": "pendingPatchCount"}, {"readOnly": true, "type": "dateTime", "name": "startTime"}, {"readOnly": true, "type": "string", "name": "status", "enum": {"items": [{"value": "CompletedWithWarnings"}, {"value": "Failed"}, {"value": "InProgress"}, {"value": "Succeeded"}, {"value": "Unknown"}]}}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "integer32", "name": "platformUpdateDomain"}, {"type": "string", "name": "rdpThumbPrint"}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "object", "name": "vmAgent", "props": [{"type": "array<object>", "name": "extensionHandlers", "item": {"type": "object", "props": [{"type": "object", "name": "status", "props": [{"type": "string", "name": "code"}, {"type": "string", "name": "displayStatus"}, {"type": "string", "name": "level", "enum": {"items": [{"value": "Error"}, {"value": "Info"}, {"value": "Warning"}]}}, {"type": "string", "name": "message"}, {"type": "dateTime", "name": "time"}], "cls": "InstanceViewStatus_read"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}]}}, {"type": "array<@InstanceViewStatus_read>", "name": "statuses", "item": {"type": "@InstanceViewStatus_read"}}, {"type": "string", "name": "vmAgentVersion"}]}, {"readOnly": true, "type": "object", "name": "vmHealth", "props": [{"readOnly": true, "type": "@InstanceViewStatus_read", "name": "status"}]}]}, {"type": "string", "name": "licenseType"}, {"type": "object", "name": "networkProfile", "props": [{"type": "string", "name": "networkApiVersion", "enum": {"items": [{"value": "2020-11-01"}, {"value": "2022-11-01"}]}}, {"type": "array<object>", "name": "networkInterfaceConfigurations", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "auxiliaryMode", "enum": {"items": [{"value": "AcceleratedConnections"}, {"value": "Floating"}, {"value": "None"}]}}, {"type": "string", "name": "auxiliarySku", "enum": {"items": [{"value": "A1"}, {"value": "A2"}, {"value": "A4"}, {"value": "A8"}, {"value": "None"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "disableTcpStateTracking"}, {"type": "object", "name": "dnsSettings", "props": [{"type": "array<string>", "name": "dnsServers", "item": {"type": "string"}}]}, {"type": "@SubResource_read", "name": "dscpConfiguration"}, {"type": "boolean", "name": "enableAcceleratedNetworking"}, {"type": "boolean", "name": "enableFpga"}, {"type": "boolean", "name": "enableIPForwarding"}, {"type": "array<object>", "name": "ipConfigurations", "required": true, "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "array<@SubResource_read>", "name": "applicationGatewayBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "applicationSecurityGroups", "item": {"type": "@SubResource_read"}}, {"type": "array<@SubResource_read>", "name": "loadBalancerBackendAddressPools", "item": {"type": "@SubResource_read"}}, {"type": "boolean", "name": "primary"}, {"type": "string", "name": "privateIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "object", "name": "publicIPAddressConfiguration", "props": [{"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "dnsSettings", "props": [{"type": "string", "name": "domainNameLabel", "required": true}, {"type": "string", "name": "domainNameLabelScope", "enum": {"items": [{"value": "NoReuse"}, {"value": "ResourceGroupReuse"}, {"value": "SubscriptionReuse"}, {"value": "TenantReuse"}]}}]}, {"type": "integer32", "name": "idleTimeoutInMinutes"}, {"type": "array<object>", "name": "ipTags", "item": {"type": "object", "props": [{"type": "string", "name": "ipTagType"}, {"type": "string", "name": "tag"}]}}, {"type": "string", "name": "publicIPAddressVersion", "enum": {"items": [{"value": "IPv4"}, {"value": "IPv6"}]}}, {"type": "string", "name": "publicIPAllocationMethod", "enum": {"items": [{"value": "Dynamic"}, {"value": "Static"}]}}, {"type": "@SubResource_read", "name": "publicIPPrefix"}], "clientFlatten": true}, {"type": "object", "name": "sku", "props": [{"type": "string", "name": "name", "enum": {"items": [{"value": "Basic"}, {"value": "Standard"}]}}, {"type": "string", "name": "tier", "enum": {"items": [{"value": "Global"}, {"value": "Regional"}]}}]}]}, {"type": "@SubResource_read", "name": "subnet"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "@SubResource_read", "name": "networkSecurityGroup"}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}, "identifiers": ["name"]}, {"type": "array<object>", "name": "networkInterfaces", "item": {"type": "object", "props": [{"type": "string", "name": "id"}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "boolean", "name": "primary"}], "clientFlatten": true}]}}]}, {"type": "object", "name": "osProfile", "props": [{"type": "string", "name": "adminPassword", "secret": true}, {"type": "string", "name": "adminUsername"}, {"type": "boolean", "name": "allowExtensionOperations"}, {"type": "string", "name": "computerName"}, {"type": "string", "name": "customData"}, {"type": "object", "name": "linuxConfiguration", "props": [{"type": "boolean", "name": "disablePasswordAuthentication"}, {"type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "object", "name": "ssh", "props": [{"type": "array<object>", "name": "publicKeys", "item": {"type": "object", "props": [{"type": "string", "name": "keyData"}, {"type": "string", "name": "path"}]}, "identifiers": ["path"]}]}]}, {"type": "boolean", "name": "requireGuestProvisionSignal"}, {"type": "array<object>", "name": "secrets", "item": {"type": "object", "props": [{"type": "@SubResource_read", "name": "sourceVault"}, {"type": "array<object>", "name": "vaultCertificates", "item": {"type": "object", "props": [{"type": "string", "name": "certificateStore"}, {"type": "string", "name": "certificateUrl"}]}, "identifiers": ["certificateUrl"]}]}}, {"type": "object", "name": "windowsConfiguration", "props": [{"type": "array<object>", "name": "additionalUnattendContent", "item": {"type": "object", "props": [{"type": "string", "name": "componentName", "enum": {"items": [{"value": "Microsoft-Windows-Shell-Setup"}]}}, {"type": "string", "name": "content"}, {"type": "string", "name": "passName", "enum": {"items": [{"value": "OobeSystem"}]}}, {"type": "string", "name": "settingName", "enum": {"items": [{"value": "AutoLogon"}, {"value": "FirstLogonCommands"}]}}]}}, {"type": "boolean", "name": "enableAutomaticUpdates"}, {"readOnly": true, "type": "boolean", "name": "enableVMAgentPlatformUpdates"}, {"type": "object", "name": "patchSettings", "props": [{"type": "string", "name": "assessmentMode", "enum": {"items": [{"value": "AutomaticByPlatform"}, {"value": "ImageDefault"}]}}, {"type": "object", "name": "automaticByPlatformSettings", "props": [{"type": "boolean", "name": "bypassPlatformSafetyChecksOnUserSchedule"}, {"type": "string", "name": "rebootSetting", "enum": {"items": [{"value": "Always"}, {"value": "IfRequired"}, {"value": "Never"}, {"value": "Unknown"}]}}]}, {"type": "boolean", "name": "enableHotpatching"}, {"type": "string", "name": "patchMode", "enum": {"items": [{"value": "AutomaticByOS"}, {"value": "AutomaticByPlatform"}, {"value": "Manual"}]}}]}, {"type": "boolean", "name": "provisionVMAgent"}, {"type": "string", "name": "timeZone"}, {"type": "object", "name": "winRM", "props": [{"type": "array<object>", "name": "listeners", "item": {"type": "object", "props": [{"type": "string", "name": "certificateUrl"}, {"type": "string", "name": "protocol", "enum": {"items": [{"value": "Http"}, {"value": "Https"}]}}]}}]}]}]}, {"type": "integer32", "name": "platformFaultDomain"}, {"type": "string", "name": "priority", "enum": {"items": [{"value": "Low"}, {"value": "Regular"}, {"value": "Spot"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "@SubResource_read", "name": "proximityPlacementGroup"}, {"type": "object", "name": "scheduledEventsPolicy", "props": [{"type": "object", "name": "scheduledEventsAdditionalPublishingTargets", "props": [{"type": "object", "name": "eventGridAndResourceGraph", "props": [{"type": "boolean", "name": "enable"}]}]}, {"type": "object", "name": "userInitiatedReboot", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}, {"type": "object", "name": "userInitiatedRedeploy", "props": [{"type": "boolean", "name": "automaticallyApprove"}]}]}, {"type": "object", "name": "scheduledEventsProfile", "props": [{"type": "object", "name": "osImageNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}, {"type": "object", "name": "terminateNotificationProfile", "props": [{"type": "boolean", "name": "enable"}, {"type": "string", "name": "notBeforeTimeout"}]}]}, {"type": "object", "name": "securityProfile", "props": [{"type": "boolean", "name": "encryptionAtHost"}, {"type": "object", "name": "encryptionIdentity", "props": [{"type": "string", "name": "userAssignedIdentityResourceId"}]}, {"type": "object", "name": "proxyAgentSettings", "props": [{"type": "boolean", "name": "enabled"}, {"type": "@HostEndpointSettings_read", "name": "imds"}, {"type": "integer32", "name": "keyIncarnationId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Enforce"}]}}, {"type": "object", "name": "wireServer", "props": [{"type": "string", "name": "inVMAccessControlProfileReferenceId"}, {"type": "string", "name": "mode", "enum": {"items": [{"value": "Audit"}, {"value": "Disabled"}, {"value": "Enforce"}]}}], "cls": "HostEndpointSettings_read"}]}, {"type": "string", "name": "securityType", "enum": {"items": [{"value": "ConfidentialVM"}, {"value": "TrustedLaunch"}]}}, {"type": "object", "name": "uefiSettings", "props": [{"type": "boolean", "name": "secureBootEnabled"}, {"type": "boolean", "name": "vTpmEnabled"}]}]}, {"type": "object", "name": "storageProfile", "props": [{"type": "boolean", "name": "alignRegionalDisksToVMZone"}, {"type": "array<object>", "name": "dataDisks", "item": {"type": "object", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "string", "name": "detachOption", "enum": {"items": [{"value": "ForceDetach"}]}}, {"readOnly": true, "type": "integer64", "name": "diskIOPSReadWrite"}, {"readOnly": true, "type": "integer64", "name": "diskMBpsReadWrite"}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "integer32", "name": "lun", "required": true}, {"type": "@ManagedDiskParameters_read", "name": "managedDisk"}, {"type": "string", "name": "name"}, {"type": "object", "name": "sourceResource", "props": [{"type": "string", "name": "id"}]}, {"type": "boolean", "name": "toBeDetached"}, {"type": "@VirtualHardDisk_read", "name": "vhd"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}, "identifiers": ["lun"]}, {"type": "string", "name": "diskControllerType", "enum": {"items": [{"value": "NVMe"}, {"value": "SCSI"}]}}, {"type": "object", "name": "imageReference", "props": [{"type": "string", "name": "communityGalleryImageId"}, {"readOnly": true, "type": "string", "name": "exactVersion"}, {"type": "string", "name": "id"}, {"type": "string", "name": "offer"}, {"type": "string", "name": "publisher"}, {"type": "string", "name": "sharedGalleryImageId"}, {"type": "string", "name": "sku"}, {"type": "string", "name": "version"}]}, {"type": "object", "name": "osDisk", "props": [{"type": "string", "name": "caching", "enum": {"items": [{"value": "None"}, {"value": "ReadOnly"}, {"value": "ReadWrite"}]}}, {"type": "string", "name": "createOption", "required": true, "enum": {"items": [{"value": "Attach"}, {"value": "Copy"}, {"value": "Empty"}, {"value": "FromImage"}, {"value": "Restore"}]}}, {"type": "string", "name": "deleteOption", "enum": {"items": [{"value": "Delete"}, {"value": "Detach"}]}}, {"type": "object", "name": "diffDiskSettings", "props": [{"type": "string", "name": "option", "enum": {"items": [{"value": "Local"}]}}, {"type": "string", "name": "placement", "enum": {"items": [{"value": "CacheDisk"}, {"value": "NvmeDisk"}, {"value": "ResourceDisk"}]}}]}, {"type": "integer32", "name": "diskSizeGB"}, {"type": "object", "name": "encryptionSettings", "props": [{"type": "object", "name": "diskEncryptionKey", "props": [{"type": "string", "name": "secretUrl", "required": true}, {"type": "object", "name": "sourceVault", "required": true, "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}], "cls": "KeyVaultSecretReference_read"}, {"type": "boolean", "name": "enabled"}, {"type": "object", "name": "keyEncryptionKey", "props": [{"type": "string", "name": "keyUrl", "required": true}, {"type": "@SubResource_read", "name": "sourceVault", "required": true}]}], "cls": "DiskEncryptionSettings_read"}, {"type": "@VirtualHardDisk_read", "name": "image"}, {"type": "object", "name": "managedDisk", "props": [{"type": "object", "name": "diskEncryptionSet", "props": [{"type": "string", "name": "id"}], "cls": "DiskEncryptionSetParameters_read"}, {"type": "string", "name": "id"}, {"type": "object", "name": "securityProfile", "props": [{"type": "@DiskEncryptionSetParameters_read", "name": "diskEncryptionSet"}, {"type": "string", "name": "securityEncryptionType", "enum": {"items": [{"value": "DiskWithVMGuestState"}, {"value": "NonPersistedTPM"}, {"value": "VMGuestStateOnly"}]}}]}, {"type": "string", "name": "storageAccountType", "enum": {"items": [{"value": "PremiumV2_LRS"}, {"value": "Premium_LRS"}, {"value": "Premium_ZRS"}, {"value": "StandardSSD_LRS"}, {"value": "StandardSSD_ZRS"}, {"value": "Standard_LRS"}, {"value": "UltraSSD_LRS"}]}}], "cls": "ManagedDiskParameters_read"}, {"type": "string", "name": "name"}, {"type": "string", "name": "osType", "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "object", "name": "vhd", "props": [{"type": "string", "name": "uri"}], "cls": "VirtualHardDisk_read"}, {"type": "boolean", "name": "writeAcceleratorEnabled"}]}]}, {"readOnly": true, "type": "dateTime", "name": "timeCreated"}, {"type": "string", "name": "userData"}, {"type": "@SubResource_read", "name": "virtualMachineScaleSet"}, {"readOnly": true, "type": "string", "name": "vmId"}], "clientFlatten": true}, {"readOnly": true, "type": "array<object>", "name": "resources", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "autoUpgradeMinorVersion"}, {"type": "boolean", "name": "enableAutomaticUpgrade"}, {"type": "string", "name": "forceUpdateTag"}, {"type": "@VirtualMachineExtensionInstanceView_read", "name": "instanceView"}, {"type": "object", "name": "protectedSettings", "additionalProps": {"item": {"type": "any"}}}, {"type": "@KeyVaultSecretReference_read", "name": "protectedSettingsFromKeyVault"}, {"type": "array<string>", "name": "provisionAfterExtensions", "item": {"type": "string"}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "string", "name": "publisher"}, {"type": "object", "name": "settings", "additionalProps": {"item": {"type": "any"}}}, {"type": "boolean", "name": "suppressFailures"}, {"type": "string", "name": "type"}, {"type": "string", "name": "typeHandlerVersion"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}, {"type": "array<string>", "name": "zones", "item": {"type": "string"}}], "cls": "VirtualMachine_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Subresource", "clientFlatten": true}]}]}]}]}