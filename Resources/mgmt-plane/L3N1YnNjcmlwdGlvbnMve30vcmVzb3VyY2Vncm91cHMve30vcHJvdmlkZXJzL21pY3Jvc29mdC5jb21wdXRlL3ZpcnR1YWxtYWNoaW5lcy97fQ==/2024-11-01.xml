<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}" version="2024-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
  <commandGroup name="vm">
    <command name="show" version="2024-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}" version="2024-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmName" options="vm-name name n" required="True" idPart="name">
          <help short="The name of the virtual machine."/>
        </arg>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="The expand expression to apply on the operation. 'InstanceView' retrieves a snapshot of the runtime properties of the virtual machine that is managed by the platform and can change outside of control plane operations. 'UserData' retrieves the UserData property as part of the VM model view that was provided by the user during the VM Create/Update operation."/>
          <enum>
            <item name="instanceView" value="&quot;instanceView&quot;"/>
            <item name="userData" value="&quot;userData&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand">
                <enum>
                  <item value="&quot;instanceView&quot;"/>
                  <item value="&quot;userData&quot;"/>
                </enum>
              </param>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="managedBy"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="placement">
                    <prop type="array<string>" name="excludeZones">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="includeZones">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="zonePlacementPolicy">
                      <enum>
                        <item value="&quot;Any&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="plan">
                    <prop type="string" name="name"/>
                    <prop type="string" name="product"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalCapabilities">
                      <prop type="boolean" name="hibernationEnabled"/>
                      <prop type="boolean" name="ultraSSDEnabled"/>
                    </prop>
                    <prop type="object" name="applicationProfile">
                      <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                        <item type="object">
                          <prop type="string" name="configurationReference"/>
                          <prop type="boolean" name="enableAutomaticUpgrade"/>
                          <prop type="integer32" name="order"/>
                          <prop type="string" name="packageReferenceId" required="True"/>
                          <prop type="string" name="tags"/>
                          <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="@SubResource_read" name="availabilitySet"/>
                    <prop type="object" name="billingProfile">
                      <prop type="float64" name="maxPrice"/>
                    </prop>
                    <prop type="object" name="capacityReservation">
                      <prop type="@SubResource_read" name="capacityReservationGroup"/>
                    </prop>
                    <prop type="object" name="diagnosticsProfile">
                      <prop type="object" name="bootDiagnostics">
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="storageUri"/>
                      </prop>
                    </prop>
                    <prop type="string" name="evictionPolicy">
                      <enum>
                        <item value="&quot;Deallocate&quot;"/>
                        <item value="&quot;Delete&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="extensionsTimeBudget"/>
                    <prop type="object" name="hardwareProfile">
                      <prop type="string" name="vmSize">
                        <enum>
                          <item value="&quot;Basic_A0&quot;"/>
                          <item value="&quot;Basic_A1&quot;"/>
                          <item value="&quot;Basic_A2&quot;"/>
                          <item value="&quot;Basic_A3&quot;"/>
                          <item value="&quot;Basic_A4&quot;"/>
                          <item value="&quot;Standard_A0&quot;"/>
                          <item value="&quot;Standard_A1&quot;"/>
                          <item value="&quot;Standard_A10&quot;"/>
                          <item value="&quot;Standard_A11&quot;"/>
                          <item value="&quot;Standard_A1_v2&quot;"/>
                          <item value="&quot;Standard_A2&quot;"/>
                          <item value="&quot;Standard_A2_v2&quot;"/>
                          <item value="&quot;Standard_A2m_v2&quot;"/>
                          <item value="&quot;Standard_A3&quot;"/>
                          <item value="&quot;Standard_A4&quot;"/>
                          <item value="&quot;Standard_A4_v2&quot;"/>
                          <item value="&quot;Standard_A4m_v2&quot;"/>
                          <item value="&quot;Standard_A5&quot;"/>
                          <item value="&quot;Standard_A6&quot;"/>
                          <item value="&quot;Standard_A7&quot;"/>
                          <item value="&quot;Standard_A8&quot;"/>
                          <item value="&quot;Standard_A8_v2&quot;"/>
                          <item value="&quot;Standard_A8m_v2&quot;"/>
                          <item value="&quot;Standard_A9&quot;"/>
                          <item value="&quot;Standard_B1ms&quot;"/>
                          <item value="&quot;Standard_B1s&quot;"/>
                          <item value="&quot;Standard_B2ms&quot;"/>
                          <item value="&quot;Standard_B2s&quot;"/>
                          <item value="&quot;Standard_B4ms&quot;"/>
                          <item value="&quot;Standard_B8ms&quot;"/>
                          <item value="&quot;Standard_D1&quot;"/>
                          <item value="&quot;Standard_D11&quot;"/>
                          <item value="&quot;Standard_D11_v2&quot;"/>
                          <item value="&quot;Standard_D12&quot;"/>
                          <item value="&quot;Standard_D12_v2&quot;"/>
                          <item value="&quot;Standard_D13&quot;"/>
                          <item value="&quot;Standard_D13_v2&quot;"/>
                          <item value="&quot;Standard_D14&quot;"/>
                          <item value="&quot;Standard_D14_v2&quot;"/>
                          <item value="&quot;Standard_D15_v2&quot;"/>
                          <item value="&quot;Standard_D16_v3&quot;"/>
                          <item value="&quot;Standard_D16s_v3&quot;"/>
                          <item value="&quot;Standard_D1_v2&quot;"/>
                          <item value="&quot;Standard_D2&quot;"/>
                          <item value="&quot;Standard_D2_v2&quot;"/>
                          <item value="&quot;Standard_D2_v3&quot;"/>
                          <item value="&quot;Standard_D2s_v3&quot;"/>
                          <item value="&quot;Standard_D3&quot;"/>
                          <item value="&quot;Standard_D32_v3&quot;"/>
                          <item value="&quot;Standard_D32s_v3&quot;"/>
                          <item value="&quot;Standard_D3_v2&quot;"/>
                          <item value="&quot;Standard_D4&quot;"/>
                          <item value="&quot;Standard_D4_v2&quot;"/>
                          <item value="&quot;Standard_D4_v3&quot;"/>
                          <item value="&quot;Standard_D4s_v3&quot;"/>
                          <item value="&quot;Standard_D5_v2&quot;"/>
                          <item value="&quot;Standard_D64_v3&quot;"/>
                          <item value="&quot;Standard_D64s_v3&quot;"/>
                          <item value="&quot;Standard_D8_v3&quot;"/>
                          <item value="&quot;Standard_D8s_v3&quot;"/>
                          <item value="&quot;Standard_DS1&quot;"/>
                          <item value="&quot;Standard_DS11&quot;"/>
                          <item value="&quot;Standard_DS11_v2&quot;"/>
                          <item value="&quot;Standard_DS12&quot;"/>
                          <item value="&quot;Standard_DS12_v2&quot;"/>
                          <item value="&quot;Standard_DS13&quot;"/>
                          <item value="&quot;Standard_DS13-2_v2&quot;"/>
                          <item value="&quot;Standard_DS13-4_v2&quot;"/>
                          <item value="&quot;Standard_DS13_v2&quot;"/>
                          <item value="&quot;Standard_DS14&quot;"/>
                          <item value="&quot;Standard_DS14-4_v2&quot;"/>
                          <item value="&quot;Standard_DS14-8_v2&quot;"/>
                          <item value="&quot;Standard_DS14_v2&quot;"/>
                          <item value="&quot;Standard_DS15_v2&quot;"/>
                          <item value="&quot;Standard_DS1_v2&quot;"/>
                          <item value="&quot;Standard_DS2&quot;"/>
                          <item value="&quot;Standard_DS2_v2&quot;"/>
                          <item value="&quot;Standard_DS3&quot;"/>
                          <item value="&quot;Standard_DS3_v2&quot;"/>
                          <item value="&quot;Standard_DS4&quot;"/>
                          <item value="&quot;Standard_DS4_v2&quot;"/>
                          <item value="&quot;Standard_DS5_v2&quot;"/>
                          <item value="&quot;Standard_E16_v3&quot;"/>
                          <item value="&quot;Standard_E16s_v3&quot;"/>
                          <item value="&quot;Standard_E2_v3&quot;"/>
                          <item value="&quot;Standard_E2s_v3&quot;"/>
                          <item value="&quot;Standard_E32-16_v3&quot;"/>
                          <item value="&quot;Standard_E32-8s_v3&quot;"/>
                          <item value="&quot;Standard_E32_v3&quot;"/>
                          <item value="&quot;Standard_E32s_v3&quot;"/>
                          <item value="&quot;Standard_E4_v3&quot;"/>
                          <item value="&quot;Standard_E4s_v3&quot;"/>
                          <item value="&quot;Standard_E64-16s_v3&quot;"/>
                          <item value="&quot;Standard_E64-32s_v3&quot;"/>
                          <item value="&quot;Standard_E64_v3&quot;"/>
                          <item value="&quot;Standard_E64s_v3&quot;"/>
                          <item value="&quot;Standard_E8_v3&quot;"/>
                          <item value="&quot;Standard_E8s_v3&quot;"/>
                          <item value="&quot;Standard_F1&quot;"/>
                          <item value="&quot;Standard_F16&quot;"/>
                          <item value="&quot;Standard_F16s&quot;"/>
                          <item value="&quot;Standard_F16s_v2&quot;"/>
                          <item value="&quot;Standard_F1s&quot;"/>
                          <item value="&quot;Standard_F2&quot;"/>
                          <item value="&quot;Standard_F2s&quot;"/>
                          <item value="&quot;Standard_F2s_v2&quot;"/>
                          <item value="&quot;Standard_F32s_v2&quot;"/>
                          <item value="&quot;Standard_F4&quot;"/>
                          <item value="&quot;Standard_F4s&quot;"/>
                          <item value="&quot;Standard_F4s_v2&quot;"/>
                          <item value="&quot;Standard_F64s_v2&quot;"/>
                          <item value="&quot;Standard_F72s_v2&quot;"/>
                          <item value="&quot;Standard_F8&quot;"/>
                          <item value="&quot;Standard_F8s&quot;"/>
                          <item value="&quot;Standard_F8s_v2&quot;"/>
                          <item value="&quot;Standard_G1&quot;"/>
                          <item value="&quot;Standard_G2&quot;"/>
                          <item value="&quot;Standard_G3&quot;"/>
                          <item value="&quot;Standard_G4&quot;"/>
                          <item value="&quot;Standard_G5&quot;"/>
                          <item value="&quot;Standard_GS1&quot;"/>
                          <item value="&quot;Standard_GS2&quot;"/>
                          <item value="&quot;Standard_GS3&quot;"/>
                          <item value="&quot;Standard_GS4&quot;"/>
                          <item value="&quot;Standard_GS4-4&quot;"/>
                          <item value="&quot;Standard_GS4-8&quot;"/>
                          <item value="&quot;Standard_GS5&quot;"/>
                          <item value="&quot;Standard_GS5-16&quot;"/>
                          <item value="&quot;Standard_GS5-8&quot;"/>
                          <item value="&quot;Standard_H16&quot;"/>
                          <item value="&quot;Standard_H16m&quot;"/>
                          <item value="&quot;Standard_H16mr&quot;"/>
                          <item value="&quot;Standard_H16r&quot;"/>
                          <item value="&quot;Standard_H8&quot;"/>
                          <item value="&quot;Standard_H8m&quot;"/>
                          <item value="&quot;Standard_L16s&quot;"/>
                          <item value="&quot;Standard_L32s&quot;"/>
                          <item value="&quot;Standard_L4s&quot;"/>
                          <item value="&quot;Standard_L8s&quot;"/>
                          <item value="&quot;Standard_M128-32ms&quot;"/>
                          <item value="&quot;Standard_M128-64ms&quot;"/>
                          <item value="&quot;Standard_M128ms&quot;"/>
                          <item value="&quot;Standard_M128s&quot;"/>
                          <item value="&quot;Standard_M64-16ms&quot;"/>
                          <item value="&quot;Standard_M64-32ms&quot;"/>
                          <item value="&quot;Standard_M64ms&quot;"/>
                          <item value="&quot;Standard_M64s&quot;"/>
                          <item value="&quot;Standard_NC12&quot;"/>
                          <item value="&quot;Standard_NC12s_v2&quot;"/>
                          <item value="&quot;Standard_NC12s_v3&quot;"/>
                          <item value="&quot;Standard_NC24&quot;"/>
                          <item value="&quot;Standard_NC24r&quot;"/>
                          <item value="&quot;Standard_NC24rs_v2&quot;"/>
                          <item value="&quot;Standard_NC24rs_v3&quot;"/>
                          <item value="&quot;Standard_NC24s_v2&quot;"/>
                          <item value="&quot;Standard_NC24s_v3&quot;"/>
                          <item value="&quot;Standard_NC6&quot;"/>
                          <item value="&quot;Standard_NC6s_v2&quot;"/>
                          <item value="&quot;Standard_NC6s_v3&quot;"/>
                          <item value="&quot;Standard_ND12s&quot;"/>
                          <item value="&quot;Standard_ND24rs&quot;"/>
                          <item value="&quot;Standard_ND24s&quot;"/>
                          <item value="&quot;Standard_ND6s&quot;"/>
                          <item value="&quot;Standard_NV12&quot;"/>
                          <item value="&quot;Standard_NV24&quot;"/>
                          <item value="&quot;Standard_NV6&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="vmSizeProperties">
                        <prop type="integer32" name="vCPUsAvailable"/>
                        <prop type="integer32" name="vCPUsPerCore"/>
                      </prop>
                    </prop>
                    <prop type="@SubResource_read" name="host"/>
                    <prop type="@SubResource_read" name="hostGroup"/>
                    <prop readOnly="True" type="object" name="instanceView">
                      <prop readOnly="True" type="string" name="assignedHost"/>
                      <prop type="object" name="bootDiagnostics">
                        <prop readOnly="True" type="string" name="consoleScreenshotBlobUri"/>
                        <prop readOnly="True" type="string" name="serialConsoleLogBlobUri"/>
                        <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                      </prop>
                      <prop type="string" name="computerName"/>
                      <prop type="array<object>" name="disks" identifiers="name">
                        <item type="object">
                          <prop type="array<@DiskEncryptionSettings_read>" name="encryptionSettings">
                            <item type="@DiskEncryptionSettings_read"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<@InstanceViewStatus_read>" name="statuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="extensions" identifiers="name type">
                        <item type="object" cls="VirtualMachineExtensionInstanceView_read">
                          <prop type="string" name="name"/>
                          <prop type="array<@InstanceViewStatus_read>" name="statuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="array<@InstanceViewStatus_read>" name="substatuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="string" name="type"/>
                          <prop type="string" name="typeHandlerVersion"/>
                        </item>
                      </prop>
                      <prop type="string" name="hyperVGeneration">
                        <enum>
                          <item value="&quot;V1&quot;"/>
                          <item value="&quot;V2&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="boolean" name="isVMInStandbyPool"/>
                      <prop type="object" name="maintenanceRedeployStatus">
                        <prop type="boolean" name="isCustomerInitiatedMaintenanceAllowed"/>
                        <prop type="string" name="lastOperationMessage"/>
                        <prop type="string" name="lastOperationResultCode">
                          <enum>
                            <item value="&quot;MaintenanceAborted&quot;"/>
                            <item value="&quot;MaintenanceCompleted&quot;"/>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;RetryLater&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="maintenanceWindowEndTime"/>
                        <prop type="dateTime" name="maintenanceWindowStartTime"/>
                        <prop type="dateTime" name="preMaintenanceWindowEndTime"/>
                        <prop type="dateTime" name="preMaintenanceWindowStartTime"/>
                      </prop>
                      <prop type="string" name="osName"/>
                      <prop type="string" name="osVersion"/>
                      <prop type="object" name="patchStatus">
                        <prop type="object" name="availablePatchSummary">
                          <prop readOnly="True" type="string" name="assessmentActivityId"/>
                          <prop readOnly="True" type="integer32" name="criticalAndSecurityPatchCount"/>
                          <prop readOnly="True" type="object" name="error" cls="ApiError_read">
                            <prop type="string" name="code"/>
                            <prop type="array<object>" name="details" identifiers="message target">
                              <item type="object">
                                <prop type="string" name="code"/>
                                <prop type="string" name="message"/>
                                <prop type="string" name="target"/>
                              </item>
                            </prop>
                            <prop type="object" name="innererror">
                              <prop type="string" name="errordetail"/>
                              <prop type="string" name="exceptiontype"/>
                            </prop>
                            <prop type="string" name="message"/>
                            <prop type="string" name="target"/>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                          <prop readOnly="True" type="integer32" name="otherPatchCount"/>
                          <prop readOnly="True" type="boolean" name="rebootPending"/>
                          <prop readOnly="True" type="dateTime" name="startTime"/>
                          <prop readOnly="True" type="string" name="status">
                            <enum>
                              <item value="&quot;CompletedWithWarnings&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="array<@InstanceViewStatus_read>" name="configurationStatuses">
                          <item type="@InstanceViewStatus_read"/>
                        </prop>
                        <prop type="object" name="lastPatchInstallationSummary">
                          <prop readOnly="True" type="@ApiError_read" name="error"/>
                          <prop readOnly="True" type="integer32" name="excludedPatchCount"/>
                          <prop readOnly="True" type="integer32" name="failedPatchCount"/>
                          <prop readOnly="True" type="string" name="installationActivityId"/>
                          <prop readOnly="True" type="integer32" name="installedPatchCount"/>
                          <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                          <prop readOnly="True" type="boolean" name="maintenanceWindowExceeded"/>
                          <prop readOnly="True" type="integer32" name="notSelectedPatchCount"/>
                          <prop readOnly="True" type="integer32" name="pendingPatchCount"/>
                          <prop readOnly="True" type="dateTime" name="startTime"/>
                          <prop readOnly="True" type="string" name="status">
                            <enum>
                              <item value="&quot;CompletedWithWarnings&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="integer32" name="platformFaultDomain"/>
                      <prop type="integer32" name="platformUpdateDomain"/>
                      <prop type="string" name="rdpThumbPrint"/>
                      <prop type="array<@InstanceViewStatus_read>" name="statuses">
                        <item type="@InstanceViewStatus_read"/>
                      </prop>
                      <prop type="object" name="vmAgent">
                        <prop type="array<object>" name="extensionHandlers">
                          <item type="object">
                            <prop type="object" name="status" cls="InstanceViewStatus_read">
                              <prop type="string" name="code"/>
                              <prop type="string" name="displayStatus"/>
                              <prop type="string" name="level">
                                <enum>
                                  <item value="&quot;Error&quot;"/>
                                  <item value="&quot;Info&quot;"/>
                                  <item value="&quot;Warning&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="message"/>
                              <prop type="dateTime" name="time"/>
                            </prop>
                            <prop type="string" name="type"/>
                            <prop type="string" name="typeHandlerVersion"/>
                          </item>
                        </prop>
                        <prop type="array<@InstanceViewStatus_read>" name="statuses">
                          <item type="@InstanceViewStatus_read"/>
                        </prop>
                        <prop type="string" name="vmAgentVersion"/>
                      </prop>
                      <prop readOnly="True" type="object" name="vmHealth">
                        <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                      </prop>
                    </prop>
                    <prop type="string" name="licenseType"/>
                    <prop type="object" name="networkProfile">
                      <prop type="string" name="networkApiVersion">
                        <enum>
                          <item value="&quot;2020-11-01&quot;"/>
                          <item value="&quot;2022-11-01&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="networkInterfaceConfigurations" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="auxiliaryMode">
                              <enum>
                                <item value="&quot;AcceleratedConnections&quot;"/>
                                <item value="&quot;Floating&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="auxiliarySku">
                              <enum>
                                <item value="&quot;A1&quot;"/>
                                <item value="&quot;A2&quot;"/>
                                <item value="&quot;A4&quot;"/>
                                <item value="&quot;A8&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="disableTcpStateTracking"/>
                            <prop type="object" name="dnsSettings">
                              <prop type="array<string>" name="dnsServers">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="@SubResource_read" name="dscpConfiguration"/>
                            <prop type="boolean" name="enableAcceleratedNetworking"/>
                            <prop type="boolean" name="enableFpga"/>
                            <prop type="boolean" name="enableIPForwarding"/>
                            <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                              <item type="object">
                                <prop type="string" name="name" required="True"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop type="boolean" name="primary"/>
                                  <prop type="string" name="privateIPAddressVersion">
                                    <enum>
                                      <item value="&quot;IPv4&quot;"/>
                                      <item value="&quot;IPv6&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="publicIPAddressConfiguration">
                                    <prop type="string" name="name" required="True"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="deleteOption">
                                        <enum>
                                          <item value="&quot;Delete&quot;"/>
                                          <item value="&quot;Detach&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="dnsSettings">
                                        <prop type="string" name="domainNameLabel" required="True"/>
                                        <prop type="string" name="domainNameLabelScope">
                                          <enum>
                                            <item value="&quot;NoReuse&quot;"/>
                                            <item value="&quot;ResourceGroupReuse&quot;"/>
                                            <item value="&quot;SubscriptionReuse&quot;"/>
                                            <item value="&quot;TenantReuse&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                      <prop type="integer32" name="idleTimeoutInMinutes"/>
                                      <prop type="array<object>" name="ipTags">
                                        <item type="object">
                                          <prop type="string" name="ipTagType"/>
                                          <prop type="string" name="tag"/>
                                        </item>
                                      </prop>
                                      <prop type="string" name="publicIPAddressVersion">
                                        <enum>
                                          <item value="&quot;IPv4&quot;"/>
                                          <item value="&quot;IPv6&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="publicIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="@SubResource_read" name="publicIPPrefix"/>
                                    </prop>
                                    <prop type="object" name="sku">
                                      <prop type="string" name="name">
                                        <enum>
                                          <item value="&quot;Basic&quot;"/>
                                          <item value="&quot;Standard&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="tier">
                                        <enum>
                                          <item value="&quot;Global&quot;"/>
                                          <item value="&quot;Regional&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                  </prop>
                                  <prop type="@SubResource_read" name="subnet"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="@SubResource_read" name="networkSecurityGroup"/>
                            <prop type="boolean" name="primary"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="networkInterfaces">
                        <item type="object">
                          <prop type="string" name="id"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="primary"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="osProfile">
                      <prop type="string" name="adminPassword" secret="True"/>
                      <prop type="string" name="adminUsername"/>
                      <prop type="boolean" name="allowExtensionOperations"/>
                      <prop type="string" name="computerName"/>
                      <prop type="string" name="customData"/>
                      <prop type="object" name="linuxConfiguration">
                        <prop type="boolean" name="disablePasswordAuthentication"/>
                        <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                        <prop type="object" name="patchSettings">
                          <prop type="string" name="assessmentMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="automaticByPlatformSettings">
                            <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                            <prop type="string" name="rebootSetting">
                              <enum>
                                <item value="&quot;Always&quot;"/>
                                <item value="&quot;IfRequired&quot;"/>
                                <item value="&quot;Never&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="patchMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="boolean" name="provisionVMAgent"/>
                        <prop type="object" name="ssh">
                          <prop type="array<object>" name="publicKeys" identifiers="path">
                            <item type="object">
                              <prop type="string" name="keyData"/>
                              <prop type="string" name="path"/>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="boolean" name="requireGuestProvisionSignal"/>
                      <prop type="array<object>" name="secrets">
                        <item type="object">
                          <prop type="@SubResource_read" name="sourceVault"/>
                          <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                            <item type="object">
                              <prop type="string" name="certificateStore"/>
                              <prop type="string" name="certificateUrl"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="windowsConfiguration">
                        <prop type="array<object>" name="additionalUnattendContent">
                          <item type="object">
                            <prop type="string" name="componentName">
                              <enum>
                                <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="content"/>
                            <prop type="string" name="passName">
                              <enum>
                                <item value="&quot;OobeSystem&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="settingName">
                              <enum>
                                <item value="&quot;AutoLogon&quot;"/>
                                <item value="&quot;FirstLogonCommands&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="boolean" name="enableAutomaticUpdates"/>
                        <prop readOnly="True" type="boolean" name="enableVMAgentPlatformUpdates"/>
                        <prop type="object" name="patchSettings">
                          <prop type="string" name="assessmentMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="automaticByPlatformSettings">
                            <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                            <prop type="string" name="rebootSetting">
                              <enum>
                                <item value="&quot;Always&quot;"/>
                                <item value="&quot;IfRequired&quot;"/>
                                <item value="&quot;Never&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enableHotpatching"/>
                          <prop type="string" name="patchMode">
                            <enum>
                              <item value="&quot;AutomaticByOS&quot;"/>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;Manual&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="boolean" name="provisionVMAgent"/>
                        <prop type="string" name="timeZone"/>
                        <prop type="object" name="winRM">
                          <prop type="array<object>" name="listeners">
                            <item type="object">
                              <prop type="string" name="certificateUrl"/>
                              <prop type="string" name="protocol">
                                <enum>
                                  <item value="&quot;Http&quot;"/>
                                  <item value="&quot;Https&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer32" name="platformFaultDomain"/>
                    <prop type="string" name="priority">
                      <enum>
                        <item value="&quot;Low&quot;"/>
                        <item value="&quot;Regular&quot;"/>
                        <item value="&quot;Spot&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                    <prop type="object" name="scheduledEventsPolicy">
                      <prop type="object" name="scheduledEventsAdditionalPublishingTargets">
                        <prop type="object" name="eventGridAndResourceGraph">
                          <prop type="boolean" name="enable"/>
                        </prop>
                      </prop>
                      <prop type="object" name="userInitiatedReboot">
                        <prop type="boolean" name="automaticallyApprove"/>
                      </prop>
                      <prop type="object" name="userInitiatedRedeploy">
                        <prop type="boolean" name="automaticallyApprove"/>
                      </prop>
                    </prop>
                    <prop type="object" name="scheduledEventsProfile">
                      <prop type="object" name="osImageNotificationProfile">
                        <prop type="boolean" name="enable"/>
                        <prop type="string" name="notBeforeTimeout"/>
                      </prop>
                      <prop type="object" name="terminateNotificationProfile">
                        <prop type="boolean" name="enable"/>
                        <prop type="string" name="notBeforeTimeout"/>
                      </prop>
                    </prop>
                    <prop type="object" name="securityProfile">
                      <prop type="boolean" name="encryptionAtHost"/>
                      <prop type="object" name="encryptionIdentity">
                        <prop type="string" name="userAssignedIdentityResourceId"/>
                      </prop>
                      <prop type="object" name="proxyAgentSettings">
                        <prop type="boolean" name="enabled"/>
                        <prop type="@HostEndpointSettings_read" name="imds"/>
                        <prop type="integer32" name="keyIncarnationId"/>
                        <prop type="string" name="mode">
                          <enum>
                            <item value="&quot;Audit&quot;"/>
                            <item value="&quot;Enforce&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="wireServer" cls="HostEndpointSettings_read">
                          <prop type="string" name="inVMAccessControlProfileReferenceId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="securityType">
                        <enum>
                          <item value="&quot;ConfidentialVM&quot;"/>
                          <item value="&quot;TrustedLaunch&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="uefiSettings">
                        <prop type="boolean" name="secureBootEnabled"/>
                        <prop type="boolean" name="vTpmEnabled"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageProfile">
                      <prop type="boolean" name="alignRegionalDisksToVMZone"/>
                      <prop type="array<object>" name="dataDisks" identifiers="lun">
                        <item type="object">
                          <prop type="string" name="caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Copy&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                              <item value="&quot;Restore&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="detachOption">
                            <enum>
                              <item value="&quot;ForceDetach&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="integer64" name="diskIOPSReadWrite"/>
                          <prop readOnly="True" type="integer64" name="diskMBpsReadWrite"/>
                          <prop type="integer32" name="diskSizeGB"/>
                          <prop type="@VirtualHardDisk_read" name="image"/>
                          <prop type="integer32" name="lun" required="True"/>
                          <prop type="@ManagedDiskParameters_read" name="managedDisk"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="sourceResource">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="boolean" name="toBeDetached"/>
                          <prop type="@VirtualHardDisk_read" name="vhd"/>
                          <prop type="boolean" name="writeAcceleratorEnabled"/>
                        </item>
                      </prop>
                      <prop type="string" name="diskControllerType">
                        <enum>
                          <item value="&quot;NVMe&quot;"/>
                          <item value="&quot;SCSI&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="imageReference">
                        <prop type="string" name="communityGalleryImageId"/>
                        <prop readOnly="True" type="string" name="exactVersion"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="offer"/>
                        <prop type="string" name="publisher"/>
                        <prop type="string" name="sharedGalleryImageId"/>
                        <prop type="string" name="sku"/>
                        <prop type="string" name="version"/>
                      </prop>
                      <prop type="object" name="osDisk">
                        <prop type="string" name="caching">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="createOption" required="True">
                          <enum>
                            <item value="&quot;Attach&quot;"/>
                            <item value="&quot;Copy&quot;"/>
                            <item value="&quot;Empty&quot;"/>
                            <item value="&quot;FromImage&quot;"/>
                            <item value="&quot;Restore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Detach&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="diffDiskSettings">
                          <prop type="string" name="option">
                            <enum>
                              <item value="&quot;Local&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="placement">
                            <enum>
                              <item value="&quot;CacheDisk&quot;"/>
                              <item value="&quot;NvmeDisk&quot;"/>
                              <item value="&quot;ResourceDisk&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="integer32" name="diskSizeGB"/>
                        <prop type="object" name="encryptionSettings" cls="DiskEncryptionSettings_read">
                          <prop type="object" name="diskEncryptionKey" cls="KeyVaultSecretReference_read">
                            <prop type="string" name="secretUrl" required="True"/>
                            <prop type="object" name="sourceVault" required="True" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enabled"/>
                          <prop type="object" name="keyEncryptionKey">
                            <prop type="string" name="keyUrl" required="True"/>
                            <prop type="@SubResource_read" name="sourceVault" required="True"/>
                          </prop>
                        </prop>
                        <prop type="@VirtualHardDisk_read" name="image"/>
                        <prop type="object" name="managedDisk" cls="ManagedDiskParameters_read">
                          <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="string" name="id"/>
                          <prop type="object" name="securityProfile">
                            <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                            <prop type="string" name="securityEncryptionType">
                              <enum>
                                <item value="&quot;DiskWithVMGuestState&quot;"/>
                                <item value="&quot;NonPersistedTPM&quot;"/>
                                <item value="&quot;VMGuestStateOnly&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;PremiumV2_LRS&quot;"/>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Premium_ZRS&quot;"/>
                              <item value="&quot;StandardSSD_LRS&quot;"/>
                              <item value="&quot;StandardSSD_ZRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;UltraSSD_LRS&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="osType">
                          <enum>
                            <item value="&quot;Linux&quot;"/>
                            <item value="&quot;Windows&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="vhd" cls="VirtualHardDisk_read">
                          <prop type="string" name="uri"/>
                        </prop>
                        <prop type="boolean" name="writeAcceleratorEnabled"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop type="string" name="userData"/>
                    <prop type="@SubResource_read" name="virtualMachineScaleSet"/>
                    <prop readOnly="True" type="string" name="vmId"/>
                  </prop>
                  <prop readOnly="True" type="array<object>" name="resources">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="boolean" name="autoUpgradeMinorVersion"/>
                        <prop type="boolean" name="enableAutomaticUpgrade"/>
                        <prop type="string" name="forceUpdateTag"/>
                        <prop type="@VirtualMachineExtensionInstanceView_read" name="instanceView"/>
                        <prop type="object" name="protectedSettings">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="@KeyVaultSecretReference_read" name="protectedSettingsFromKeyVault"/>
                        <prop type="array<string>" name="provisionAfterExtensions">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop type="string" name="publisher"/>
                        <prop type="object" name="settings">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="boolean" name="suppressFailures"/>
                        <prop type="string" name="type"/>
                        <prop type="string" name="typeHandlerVersion"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-11-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}" version="2024-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmName" options="name n" required="True" group="" idPart="name">
          <help short="The name of the virtual machine."/>
        </arg>
        <arg type="boolean" var="$Query.forceDeletion" options="force-deletion">
          <help short="Optional parameter to force delete virtual machines."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <param type="boolean" name="forceDeletion" arg="$Query.forceDeletion"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}" version="2024-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match">
          <help short="The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."/>
        </arg>
        <arg type="string" var="$Header.If-None-Match" options="if-none-match">
          <help short="Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmName" options="vm-name name n" required="True" idPart="name">
          <help short="The name of the virtual machine."/>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg type="string" var="$parameters.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Identity">
          <blank value="&quot;True&quot;"/>
          <help short="Set the system managed identity."/>
        </arg>
        <arg type="string" var="$parameters.identity.type" options="type" hide="True" group="Identity">
          <help short="The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg type="array<string>" var="$parameters.identity.userAssigned" options="mi-user-assigned user-assigned" group="Identity">
          <blank value="[]"/>
          <help short="Set the user managed identities."/>
          <item type="string"/>
        </arg>
        <arg type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
          <additionalProp>
            <item type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="object" var="$parameters.extendedLocation" options="extended-location" group="Parameters">
          <help short="The extended location of the Virtual Machine."/>
          <arg type="string" var="$parameters.extendedLocation.name" options="name">
            <help short="The name of the extended location."/>
          </arg>
          <arg type="string" var="$parameters.extendedLocation.type" options="type">
            <help short="The type of the extended location."/>
            <enum>
              <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$parameters.placement" options="placement" group="Parameters">
          <help short="Placement section specifies the user-defined constraints for virtual machine hardware placement. This property cannot be changed once VM is provisioned. Minimum api-version: 2024-11-01."/>
          <arg type="array<string>" var="$parameters.placement.excludeZones" options="exclude-zones">
            <help short="This property supplements the 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to 'Any', availability zone selected by the system must not be present in the list of availability zones passed with 'excludeZones'. If 'excludeZones' is not provided, all availability zones in region will be considered for selection."/>
            <item type="string"/>
          </arg>
          <arg type="array<string>" var="$parameters.placement.includeZones" options="include-zones">
            <help short="This property supplements the 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to 'Any', availability zone selected by the system must be present in the list of availability zones passed with 'includeZones'. If 'includeZones' is not provided, all availability zones in region will be considered for selection."/>
            <item type="string"/>
          </arg>
          <arg type="string" var="$parameters.placement.zonePlacementPolicy" options="zone-placement-policy">
            <help short="Specifies the policy for virtual machine's placement in availability zone. Possible values are: **Any** - An availability zone will be automatically picked by system as part of virtual machine creation."/>
            <enum>
              <item name="Any" value="&quot;Any&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="object" var="$parameters.plan" options="plan" group="Parameters">
          <help short="Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**."/>
          <arg type="string" var="$parameters.plan.name" options="name">
            <help short="The plan ID."/>
          </arg>
          <arg type="string" var="$parameters.plan.product" options="product">
            <help short="Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."/>
          </arg>
          <arg type="string" var="$parameters.plan.promotionCode" options="promotion-code">
            <help short="The promotion code."/>
          </arg>
          <arg type="string" var="$parameters.plan.publisher" options="publisher">
            <help short="The publisher ID."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
        <arg type="array<string>" var="$parameters.zones" options="zones" group="Parameters">
          <help short="The virtual machine zones."/>
          <item type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$parameters.properties.additionalCapabilities" options="additional-capabilities" group="Properties">
          <help short="Specifies additional capabilities enabled or disabled on the virtual machine."/>
          <arg type="boolean" var="$parameters.properties.additionalCapabilities.hibernationEnabled" options="hibernation-enabled">
            <help short="The flag that enables or disables hibernation capability on the VM."/>
          </arg>
          <arg type="boolean" var="$parameters.properties.additionalCapabilities.ultraSSDEnabled" options="ultra-ssd-enabled">
            <help short="The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.applicationProfile" options="application-profile" group="Properties">
          <help short="Specifies the gallery applications that should be made available to the VM/VMSS."/>
          <arg type="array<object>" var="$parameters.properties.applicationProfile.galleryApplications" options="gallery-applications">
            <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
            <item type="object">
              <arg type="string" var="$parameters.properties.applicationProfile.galleryApplications[].configurationReference" options="configuration-reference">
                <help short="Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided"/>
              </arg>
              <arg type="boolean" var="$parameters.properties.applicationProfile.galleryApplications[].enableAutomaticUpgrade" options="enable-automatic-upgrade">
                <help short="If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS"/>
              </arg>
              <arg type="integer32" var="$parameters.properties.applicationProfile.galleryApplications[].order" options="order">
                <help short="Optional, Specifies the order in which the packages have to be installed"/>
              </arg>
              <arg type="string" var="$parameters.properties.applicationProfile.galleryApplications[].packageReferenceId" options="package-reference-id" required="True">
                <help short="Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}"/>
              </arg>
              <arg type="string" var="$parameters.properties.applicationProfile.galleryApplications[].tags" options="tags">
                <help short="Optional, Specifies a passthrough value for more generic context."/>
              </arg>
              <arg type="boolean" var="$parameters.properties.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure" options="treat-failure-as-deployment-failure">
                <help short="Optional, If true, any failure for any operation in the VmApplication will fail the deployment"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="@SubResource_create" var="$parameters.properties.availabilitySet" options="availability-set" group="Properties">
          <help short="Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. This property cannot exist along with a non-null properties.virtualMachineScaleSet reference."/>
        </arg>
        <arg type="object" var="$parameters.properties.billingProfile" options="billing-profile" group="Properties">
          <help short="Specifies the billing related details of a Azure Spot virtual machine. Minimum api-version: 2019-03-01."/>
          <arg type="float64" var="$parameters.properties.billingProfile.maxPrice" options="max-price">
            <help short="Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.capacityReservation" options="capacity-reservation" group="Properties">
          <help short="Specifies information about the capacity reservation that is used to allocate virtual machine. Minimum api-version: 2021-04-01."/>
          <arg type="@SubResource_create" var="$parameters.properties.capacityReservation.capacityReservationGroup" options="capacity-reservation-group">
            <help short="Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details."/>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.diagnosticsProfile" options="diagnostics-profile" group="Properties">
          <help short="Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15."/>
          <arg type="object" var="$parameters.properties.diagnosticsProfile.bootDiagnostics" options="boot-diagnostics">
            <help short="Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor."/>
            <arg type="boolean" var="$parameters.properties.diagnosticsProfile.bootDiagnostics.enabled" options="enabled">
              <help short="Whether boot diagnostics should be enabled on the Virtual Machine."/>
            </arg>
            <arg type="string" var="$parameters.properties.diagnosticsProfile.bootDiagnostics.storageUri" options="storage-uri">
              <help short="Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used."/>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.evictionPolicy" options="eviction-policy" group="Properties">
          <help short="Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview."/>
          <enum>
            <item name="Deallocate" value="&quot;Deallocate&quot;"/>
            <item name="Delete" value="&quot;Delete&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.extensionsTimeBudget" options="extensions-time-budget" group="Properties">
          <help short="Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01."/>
        </arg>
        <arg type="object" var="$parameters.properties.hardwareProfile" options="hardware-profile" group="Properties">
          <help short="Specifies the hardware settings for the virtual machine."/>
          <arg type="string" var="$parameters.properties.hardwareProfile.vmSize" options="vm-size">
            <help short="Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. The recommended way to get the list of available sizes is using these APIs: [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes), [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list), [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). The available VM sizes depend on region and availability set."/>
            <enum>
              <item name="Basic_A0" value="&quot;Basic_A0&quot;"/>
              <item name="Basic_A1" value="&quot;Basic_A1&quot;"/>
              <item name="Basic_A2" value="&quot;Basic_A2&quot;"/>
              <item name="Basic_A3" value="&quot;Basic_A3&quot;"/>
              <item name="Basic_A4" value="&quot;Basic_A4&quot;"/>
              <item name="Standard_A0" value="&quot;Standard_A0&quot;"/>
              <item name="Standard_A1" value="&quot;Standard_A1&quot;"/>
              <item name="Standard_A10" value="&quot;Standard_A10&quot;"/>
              <item name="Standard_A11" value="&quot;Standard_A11&quot;"/>
              <item name="Standard_A1_v2" value="&quot;Standard_A1_v2&quot;"/>
              <item name="Standard_A2" value="&quot;Standard_A2&quot;"/>
              <item name="Standard_A2_v2" value="&quot;Standard_A2_v2&quot;"/>
              <item name="Standard_A2m_v2" value="&quot;Standard_A2m_v2&quot;"/>
              <item name="Standard_A3" value="&quot;Standard_A3&quot;"/>
              <item name="Standard_A4" value="&quot;Standard_A4&quot;"/>
              <item name="Standard_A4_v2" value="&quot;Standard_A4_v2&quot;"/>
              <item name="Standard_A4m_v2" value="&quot;Standard_A4m_v2&quot;"/>
              <item name="Standard_A5" value="&quot;Standard_A5&quot;"/>
              <item name="Standard_A6" value="&quot;Standard_A6&quot;"/>
              <item name="Standard_A7" value="&quot;Standard_A7&quot;"/>
              <item name="Standard_A8" value="&quot;Standard_A8&quot;"/>
              <item name="Standard_A8_v2" value="&quot;Standard_A8_v2&quot;"/>
              <item name="Standard_A8m_v2" value="&quot;Standard_A8m_v2&quot;"/>
              <item name="Standard_A9" value="&quot;Standard_A9&quot;"/>
              <item name="Standard_B1ms" value="&quot;Standard_B1ms&quot;"/>
              <item name="Standard_B1s" value="&quot;Standard_B1s&quot;"/>
              <item name="Standard_B2ms" value="&quot;Standard_B2ms&quot;"/>
              <item name="Standard_B2s" value="&quot;Standard_B2s&quot;"/>
              <item name="Standard_B4ms" value="&quot;Standard_B4ms&quot;"/>
              <item name="Standard_B8ms" value="&quot;Standard_B8ms&quot;"/>
              <item name="Standard_D1" value="&quot;Standard_D1&quot;"/>
              <item name="Standard_D11" value="&quot;Standard_D11&quot;"/>
              <item name="Standard_D11_v2" value="&quot;Standard_D11_v2&quot;"/>
              <item name="Standard_D12" value="&quot;Standard_D12&quot;"/>
              <item name="Standard_D12_v2" value="&quot;Standard_D12_v2&quot;"/>
              <item name="Standard_D13" value="&quot;Standard_D13&quot;"/>
              <item name="Standard_D13_v2" value="&quot;Standard_D13_v2&quot;"/>
              <item name="Standard_D14" value="&quot;Standard_D14&quot;"/>
              <item name="Standard_D14_v2" value="&quot;Standard_D14_v2&quot;"/>
              <item name="Standard_D15_v2" value="&quot;Standard_D15_v2&quot;"/>
              <item name="Standard_D16_v3" value="&quot;Standard_D16_v3&quot;"/>
              <item name="Standard_D16s_v3" value="&quot;Standard_D16s_v3&quot;"/>
              <item name="Standard_D1_v2" value="&quot;Standard_D1_v2&quot;"/>
              <item name="Standard_D2" value="&quot;Standard_D2&quot;"/>
              <item name="Standard_D2_v2" value="&quot;Standard_D2_v2&quot;"/>
              <item name="Standard_D2_v3" value="&quot;Standard_D2_v3&quot;"/>
              <item name="Standard_D2s_v3" value="&quot;Standard_D2s_v3&quot;"/>
              <item name="Standard_D3" value="&quot;Standard_D3&quot;"/>
              <item name="Standard_D32_v3" value="&quot;Standard_D32_v3&quot;"/>
              <item name="Standard_D32s_v3" value="&quot;Standard_D32s_v3&quot;"/>
              <item name="Standard_D3_v2" value="&quot;Standard_D3_v2&quot;"/>
              <item name="Standard_D4" value="&quot;Standard_D4&quot;"/>
              <item name="Standard_D4_v2" value="&quot;Standard_D4_v2&quot;"/>
              <item name="Standard_D4_v3" value="&quot;Standard_D4_v3&quot;"/>
              <item name="Standard_D4s_v3" value="&quot;Standard_D4s_v3&quot;"/>
              <item name="Standard_D5_v2" value="&quot;Standard_D5_v2&quot;"/>
              <item name="Standard_D64_v3" value="&quot;Standard_D64_v3&quot;"/>
              <item name="Standard_D64s_v3" value="&quot;Standard_D64s_v3&quot;"/>
              <item name="Standard_D8_v3" value="&quot;Standard_D8_v3&quot;"/>
              <item name="Standard_D8s_v3" value="&quot;Standard_D8s_v3&quot;"/>
              <item name="Standard_DS1" value="&quot;Standard_DS1&quot;"/>
              <item name="Standard_DS11" value="&quot;Standard_DS11&quot;"/>
              <item name="Standard_DS11_v2" value="&quot;Standard_DS11_v2&quot;"/>
              <item name="Standard_DS12" value="&quot;Standard_DS12&quot;"/>
              <item name="Standard_DS12_v2" value="&quot;Standard_DS12_v2&quot;"/>
              <item name="Standard_DS13" value="&quot;Standard_DS13&quot;"/>
              <item name="Standard_DS13-2_v2" value="&quot;Standard_DS13-2_v2&quot;"/>
              <item name="Standard_DS13-4_v2" value="&quot;Standard_DS13-4_v2&quot;"/>
              <item name="Standard_DS13_v2" value="&quot;Standard_DS13_v2&quot;"/>
              <item name="Standard_DS14" value="&quot;Standard_DS14&quot;"/>
              <item name="Standard_DS14-4_v2" value="&quot;Standard_DS14-4_v2&quot;"/>
              <item name="Standard_DS14-8_v2" value="&quot;Standard_DS14-8_v2&quot;"/>
              <item name="Standard_DS14_v2" value="&quot;Standard_DS14_v2&quot;"/>
              <item name="Standard_DS15_v2" value="&quot;Standard_DS15_v2&quot;"/>
              <item name="Standard_DS1_v2" value="&quot;Standard_DS1_v2&quot;"/>
              <item name="Standard_DS2" value="&quot;Standard_DS2&quot;"/>
              <item name="Standard_DS2_v2" value="&quot;Standard_DS2_v2&quot;"/>
              <item name="Standard_DS3" value="&quot;Standard_DS3&quot;"/>
              <item name="Standard_DS3_v2" value="&quot;Standard_DS3_v2&quot;"/>
              <item name="Standard_DS4" value="&quot;Standard_DS4&quot;"/>
              <item name="Standard_DS4_v2" value="&quot;Standard_DS4_v2&quot;"/>
              <item name="Standard_DS5_v2" value="&quot;Standard_DS5_v2&quot;"/>
              <item name="Standard_E16_v3" value="&quot;Standard_E16_v3&quot;"/>
              <item name="Standard_E16s_v3" value="&quot;Standard_E16s_v3&quot;"/>
              <item name="Standard_E2_v3" value="&quot;Standard_E2_v3&quot;"/>
              <item name="Standard_E2s_v3" value="&quot;Standard_E2s_v3&quot;"/>
              <item name="Standard_E32-16_v3" value="&quot;Standard_E32-16_v3&quot;"/>
              <item name="Standard_E32-8s_v3" value="&quot;Standard_E32-8s_v3&quot;"/>
              <item name="Standard_E32_v3" value="&quot;Standard_E32_v3&quot;"/>
              <item name="Standard_E32s_v3" value="&quot;Standard_E32s_v3&quot;"/>
              <item name="Standard_E4_v3" value="&quot;Standard_E4_v3&quot;"/>
              <item name="Standard_E4s_v3" value="&quot;Standard_E4s_v3&quot;"/>
              <item name="Standard_E64-16s_v3" value="&quot;Standard_E64-16s_v3&quot;"/>
              <item name="Standard_E64-32s_v3" value="&quot;Standard_E64-32s_v3&quot;"/>
              <item name="Standard_E64_v3" value="&quot;Standard_E64_v3&quot;"/>
              <item name="Standard_E64s_v3" value="&quot;Standard_E64s_v3&quot;"/>
              <item name="Standard_E8_v3" value="&quot;Standard_E8_v3&quot;"/>
              <item name="Standard_E8s_v3" value="&quot;Standard_E8s_v3&quot;"/>
              <item name="Standard_F1" value="&quot;Standard_F1&quot;"/>
              <item name="Standard_F16" value="&quot;Standard_F16&quot;"/>
              <item name="Standard_F16s" value="&quot;Standard_F16s&quot;"/>
              <item name="Standard_F16s_v2" value="&quot;Standard_F16s_v2&quot;"/>
              <item name="Standard_F1s" value="&quot;Standard_F1s&quot;"/>
              <item name="Standard_F2" value="&quot;Standard_F2&quot;"/>
              <item name="Standard_F2s" value="&quot;Standard_F2s&quot;"/>
              <item name="Standard_F2s_v2" value="&quot;Standard_F2s_v2&quot;"/>
              <item name="Standard_F32s_v2" value="&quot;Standard_F32s_v2&quot;"/>
              <item name="Standard_F4" value="&quot;Standard_F4&quot;"/>
              <item name="Standard_F4s" value="&quot;Standard_F4s&quot;"/>
              <item name="Standard_F4s_v2" value="&quot;Standard_F4s_v2&quot;"/>
              <item name="Standard_F64s_v2" value="&quot;Standard_F64s_v2&quot;"/>
              <item name="Standard_F72s_v2" value="&quot;Standard_F72s_v2&quot;"/>
              <item name="Standard_F8" value="&quot;Standard_F8&quot;"/>
              <item name="Standard_F8s" value="&quot;Standard_F8s&quot;"/>
              <item name="Standard_F8s_v2" value="&quot;Standard_F8s_v2&quot;"/>
              <item name="Standard_G1" value="&quot;Standard_G1&quot;"/>
              <item name="Standard_G2" value="&quot;Standard_G2&quot;"/>
              <item name="Standard_G3" value="&quot;Standard_G3&quot;"/>
              <item name="Standard_G4" value="&quot;Standard_G4&quot;"/>
              <item name="Standard_G5" value="&quot;Standard_G5&quot;"/>
              <item name="Standard_GS1" value="&quot;Standard_GS1&quot;"/>
              <item name="Standard_GS2" value="&quot;Standard_GS2&quot;"/>
              <item name="Standard_GS3" value="&quot;Standard_GS3&quot;"/>
              <item name="Standard_GS4" value="&quot;Standard_GS4&quot;"/>
              <item name="Standard_GS4-4" value="&quot;Standard_GS4-4&quot;"/>
              <item name="Standard_GS4-8" value="&quot;Standard_GS4-8&quot;"/>
              <item name="Standard_GS5" value="&quot;Standard_GS5&quot;"/>
              <item name="Standard_GS5-16" value="&quot;Standard_GS5-16&quot;"/>
              <item name="Standard_GS5-8" value="&quot;Standard_GS5-8&quot;"/>
              <item name="Standard_H16" value="&quot;Standard_H16&quot;"/>
              <item name="Standard_H16m" value="&quot;Standard_H16m&quot;"/>
              <item name="Standard_H16mr" value="&quot;Standard_H16mr&quot;"/>
              <item name="Standard_H16r" value="&quot;Standard_H16r&quot;"/>
              <item name="Standard_H8" value="&quot;Standard_H8&quot;"/>
              <item name="Standard_H8m" value="&quot;Standard_H8m&quot;"/>
              <item name="Standard_L16s" value="&quot;Standard_L16s&quot;"/>
              <item name="Standard_L32s" value="&quot;Standard_L32s&quot;"/>
              <item name="Standard_L4s" value="&quot;Standard_L4s&quot;"/>
              <item name="Standard_L8s" value="&quot;Standard_L8s&quot;"/>
              <item name="Standard_M128-32ms" value="&quot;Standard_M128-32ms&quot;"/>
              <item name="Standard_M128-64ms" value="&quot;Standard_M128-64ms&quot;"/>
              <item name="Standard_M128ms" value="&quot;Standard_M128ms&quot;"/>
              <item name="Standard_M128s" value="&quot;Standard_M128s&quot;"/>
              <item name="Standard_M64-16ms" value="&quot;Standard_M64-16ms&quot;"/>
              <item name="Standard_M64-32ms" value="&quot;Standard_M64-32ms&quot;"/>
              <item name="Standard_M64ms" value="&quot;Standard_M64ms&quot;"/>
              <item name="Standard_M64s" value="&quot;Standard_M64s&quot;"/>
              <item name="Standard_NC12" value="&quot;Standard_NC12&quot;"/>
              <item name="Standard_NC12s_v2" value="&quot;Standard_NC12s_v2&quot;"/>
              <item name="Standard_NC12s_v3" value="&quot;Standard_NC12s_v3&quot;"/>
              <item name="Standard_NC24" value="&quot;Standard_NC24&quot;"/>
              <item name="Standard_NC24r" value="&quot;Standard_NC24r&quot;"/>
              <item name="Standard_NC24rs_v2" value="&quot;Standard_NC24rs_v2&quot;"/>
              <item name="Standard_NC24rs_v3" value="&quot;Standard_NC24rs_v3&quot;"/>
              <item name="Standard_NC24s_v2" value="&quot;Standard_NC24s_v2&quot;"/>
              <item name="Standard_NC24s_v3" value="&quot;Standard_NC24s_v3&quot;"/>
              <item name="Standard_NC6" value="&quot;Standard_NC6&quot;"/>
              <item name="Standard_NC6s_v2" value="&quot;Standard_NC6s_v2&quot;"/>
              <item name="Standard_NC6s_v3" value="&quot;Standard_NC6s_v3&quot;"/>
              <item name="Standard_ND12s" value="&quot;Standard_ND12s&quot;"/>
              <item name="Standard_ND24rs" value="&quot;Standard_ND24rs&quot;"/>
              <item name="Standard_ND24s" value="&quot;Standard_ND24s&quot;"/>
              <item name="Standard_ND6s" value="&quot;Standard_ND6s&quot;"/>
              <item name="Standard_NV12" value="&quot;Standard_NV12&quot;"/>
              <item name="Standard_NV24" value="&quot;Standard_NV24&quot;"/>
              <item name="Standard_NV6" value="&quot;Standard_NV6&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.properties.hardwareProfile.vmSizeProperties" options="vm-size-properties">
            <help short="Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details."/>
            <arg type="integer32" var="$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsAvailable" options="v-cp-us-available">
              <help short="Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list)."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsPerCore" options="v-cp-us-per-core">
              <help short="Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**"/>
            </arg>
          </arg>
        </arg>
        <arg type="@SubResource_create" var="$parameters.properties.host" options="host" group="Properties">
          <help short="Specifies information about the dedicated host that the virtual machine resides in. Minimum api-version: 2018-10-01."/>
        </arg>
        <arg type="@SubResource_create" var="$parameters.properties.hostGroup" options="host-group" group="Properties">
          <help short="Specifies information about the dedicated host group that the virtual machine resides in. **Note:** User cannot specify both host and hostGroup properties. Minimum api-version: 2020-06-01."/>
        </arg>
        <arg type="string" var="$parameters.properties.licenseType" options="license-type" group="Properties">
          <help short="Specifies that the image or disk that is being used was licensed on-premises. <br><br> Possible values for Windows Server operating system are: <br><br> Windows_Client <br><br> Windows_Server <br><br> Possible values for Linux Server operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS (for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) <br><br> [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) <br><br> Minimum api-version: 2015-06-15"/>
        </arg>
        <arg type="object" var="$parameters.properties.networkProfile" options="network-profile" group="Properties">
          <help short="Specifies the network interfaces of the virtual machine."/>
          <arg type="string" var="$parameters.properties.networkProfile.networkApiVersion" options="network-api-version">
            <help short="specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations"/>
            <enum>
              <item name="2020-11-01" value="&quot;2020-11-01&quot;"/>
              <item name="2022-11-01" value="&quot;2022-11-01&quot;"/>
            </enum>
          </arg>
          <arg type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations" options="network-interface-configurations">
            <help short="Specifies the networking configurations that will be used to create the virtual machine networking resources."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].name" options="name" required="True">
                <help short="The network interface configuration name."/>
              </arg>
              <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode" options="auxiliary-mode" group="Properties">
                <help short="Specifies whether the Auxiliary mode is enabled for the Network Interface resource."/>
                <enum>
                  <item name="AcceleratedConnections" value="&quot;AcceleratedConnections&quot;"/>
                  <item name="Floating" value="&quot;Floating&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku" options="auxiliary-sku" group="Properties">
                <help short="Specifies whether the Auxiliary sku is enabled for the Network Interface resource."/>
                <enum>
                  <item name="A1" value="&quot;A1&quot;"/>
                  <item name="A2" value="&quot;A2&quot;"/>
                  <item name="A4" value="&quot;A4&quot;"/>
                  <item name="A8" value="&quot;A8&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.deleteOption" options="delete-option" group="Properties">
                <help short="Specify what happens to the network interface when the VM is deleted"/>
                <enum>
                  <item name="Delete" value="&quot;Delete&quot;"/>
                  <item name="Detach" value="&quot;Detach&quot;"/>
                </enum>
              </arg>
              <arg type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking" options="disable-tcp-state-tracking" group="Properties">
                <help short="Specifies whether the network interface is disabled for tcp state tracking."/>
              </arg>
              <arg type="object" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings" options="dns-settings" group="Properties">
                <help short="The dns settings to be applied on the network interfaces."/>
                <arg type="array<string>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers" options="dns-servers">
                  <help short="List of DNS servers IP addresses"/>
                  <item type="string"/>
                </arg>
              </arg>
              <arg type="@SubResource_create" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dscpConfiguration" options="dscp-configuration" group="Properties"/>
              <arg type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking" options="enable-accelerated-networking" group="Properties">
                <help short="Specifies whether the network interface is accelerated networking-enabled."/>
              </arg>
              <arg type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableFpga" options="enable-fpga" group="Properties">
                <help short="Specifies whether the network interface is FPGA networking-enabled."/>
              </arg>
              <arg type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                <help short="Whether IP forwarding enabled on this NIC."/>
              </arg>
              <arg type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" options="ip-configurations" group="Properties">
                <help short="Specifies the IP configurations of the network interface."/>
                <item type="object">
                  <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" options="name" required="True">
                    <help short="The IP configuration name."/>
                  </arg>
                  <arg type="array<@SubResource_create>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools" options="application-gateway-backend-address-pools" group="Properties">
                    <help short="Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway."/>
                    <item type="@SubResource_create"/>
                  </arg>
                  <arg type="array<@SubResource_create>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups" options="application-security-groups" group="Properties">
                    <help short="Specifies an array of references to application security group."/>
                    <item type="@SubResource_create"/>
                  </arg>
                  <arg type="array<@SubResource_create>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                    <help short="Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer]."/>
                    <item type="@SubResource_create"/>
                  </arg>
                  <arg type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                    <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                    <help short="Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."/>
                    <enum>
                      <item name="IPv4" value="&quot;IPv4&quot;"/>
                      <item name="IPv6" value="&quot;IPv6&quot;"/>
                    </enum>
                  </arg>
                  <arg type="object" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration" options="public-ip-address-configuration" group="Properties">
                    <help short="The publicIPAddressConfiguration."/>
                    <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" options="name" required="True">
                      <help short="The publicIP address configuration name."/>
                    </arg>
                    <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption" options="delete-option" group="Properties">
                      <help short="Specify what happens to the public IP address when the VM is deleted"/>
                      <enum>
                        <item name="Delete" value="&quot;Delete&quot;"/>
                        <item name="Detach" value="&quot;Detach&quot;"/>
                      </enum>
                    </arg>
                    <arg type="object" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings" options="dns-settings" group="Properties">
                      <help short="The dns settings to be applied on the publicIP addresses ."/>
                      <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" options="domain-name-label" required="True">
                        <help short="The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID."/>
                      </arg>
                      <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope" options="domain-name-label-scope">
                        <help short="The Domain name label scope of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the hashed domain name label with policy according to the domain name label scope and vm network profile unique ID."/>
                        <enum>
                          <item name="NoReuse" value="&quot;NoReuse&quot;"/>
                          <item name="ResourceGroupReuse" value="&quot;ResourceGroupReuse&quot;"/>
                          <item name="SubscriptionReuse" value="&quot;SubscriptionReuse&quot;"/>
                          <item name="TenantReuse" value="&quot;TenantReuse&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg type="integer32" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                      <help short="The idle timeout of the public IP address."/>
                    </arg>
                    <arg type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags" options="ip-tags" group="Properties">
                      <help short="The list of IP tags associated with the public IP address."/>
                      <item type="object">
                        <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType" options="ip-tag-type">
                          <help short="IP tag type. Example: FirstPartyUsage."/>
                        </arg>
                        <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag" options="tag">
                          <help short="IP tag associated with the public IP. Example: SQL, Storage etc."/>
                        </arg>
                      </item>
                    </arg>
                    <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion" options="public-ip-address-version" group="Properties">
                      <help short="Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."/>
                      <enum>
                        <item name="IPv4" value="&quot;IPv4&quot;"/>
                        <item name="IPv6" value="&quot;IPv6&quot;"/>
                      </enum>
                    </arg>
                    <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
                      <help short="Specify the public IP allocation type"/>
                      <enum>
                        <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                        <item name="Static" value="&quot;Static&quot;"/>
                      </enum>
                    </arg>
                    <arg type="@SubResource_create" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix" options="public-ip-prefix" group="Properties">
                      <help short="The PublicIPPrefix from which to allocate publicIP addresses."/>
                    </arg>
                    <arg type="object" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku" options="sku">
                      <help short="Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible."/>
                      <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name" options="name">
                        <help short="Specify public IP sku name"/>
                        <enum>
                          <item name="Basic" value="&quot;Basic&quot;"/>
                          <item name="Standard" value="&quot;Standard&quot;"/>
                        </enum>
                      </arg>
                      <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier" options="tier">
                        <help short="Specify public IP sku tier"/>
                        <enum>
                          <item name="Global" value="&quot;Global&quot;"/>
                          <item name="Regional" value="&quot;Regional&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                  </arg>
                  <arg type="@SubResource_create" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
                    <help short="Specifies the identifier of the subnet."/>
                  </arg>
                </item>
              </arg>
              <arg type="@SubResource_create" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup" options="network-security-group" group="Properties">
                <help short="The network security group."/>
              </arg>
              <arg type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.primary" options="primary" group="Properties">
                <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
              </arg>
            </item>
          </arg>
          <arg type="array<object>" var="$parameters.properties.networkProfile.networkInterfaces" options="network-interfaces">
            <help short="Specifies the list of resource Ids for the network interfaces associated with the virtual machine."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.networkProfile.networkInterfaces[].id" options="id">
                <help short="Resource Id"/>
              </arg>
              <arg type="string" var="$parameters.properties.networkProfile.networkInterfaces[].properties.deleteOption" options="delete-option" group="Properties">
                <help short="Specify what happens to the network interface when the VM is deleted"/>
                <enum>
                  <item name="Delete" value="&quot;Delete&quot;"/>
                  <item name="Detach" value="&quot;Detach&quot;"/>
                </enum>
              </arg>
              <arg type="boolean" var="$parameters.properties.networkProfile.networkInterfaces[].properties.primary" options="primary" group="Properties">
                <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.osProfile" options="os-profile" group="Properties">
          <help short="Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned."/>
          <arg type="string" var="$parameters.properties.osProfile.adminPassword" options="admin-password">
            <help short="Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** &quot;abc@123&quot;, &quot;P@$$w0rd&quot;, &quot;P@ssw0rd&quot;, &quot;P@ssword123&quot;, &quot;Pa$$word&quot;, &quot;pass@word1&quot;, &quot;Password!&quot;, &quot;Password1&quot;, &quot;Password22&quot;, &quot;iloveyou!&quot; <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)"/>
          </arg>
          <arg type="string" var="$parameters.properties.osProfile.adminUsername" options="admin-username">
            <help short="Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in &quot;.&quot; <br><br> **Disallowed values:** &quot;administrator&quot;, &quot;admin&quot;, &quot;user&quot;, &quot;user1&quot;, &quot;test&quot;, &quot;user2&quot;, &quot;test1&quot;, &quot;user3&quot;, &quot;admin1&quot;, &quot;1&quot;, &quot;123&quot;, &quot;a&quot;, &quot;actuser&quot;, &quot;adm&quot;, &quot;admin2&quot;, &quot;aspnet&quot;, &quot;backup&quot;, &quot;console&quot;, &quot;david&quot;, &quot;guest&quot;, &quot;john&quot;, &quot;owner&quot;, &quot;root&quot;, &quot;server&quot;, &quot;sql&quot;, &quot;support&quot;, &quot;support_388945a0&quot;, &quot;sys&quot;, &quot;test2&quot;, &quot;test3&quot;, &quot;user4&quot;, &quot;user5&quot;. <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters."/>
          </arg>
          <arg type="boolean" var="$parameters.properties.osProfile.allowExtensionOperations" options="allow-extension-operations">
            <help short="Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine."/>
          </arg>
          <arg type="string" var="$parameters.properties.osProfile.computerName" options="computer-name">
            <help short="Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. **Max-length (Windows):** 15 characters. **Max-length (Linux):** 64 characters. For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules)."/>
          </arg>
          <arg type="string" var="$parameters.properties.osProfile.customData" options="custom-data">
            <help short="Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. **Note: Do not pass any secrets or passwords in customData property.** This property cannot be updated after the VM is created. The property 'customData' is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/). For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)."/>
          </arg>
          <arg type="object" var="$parameters.properties.osProfile.linuxConfiguration" options="linux-configuration">
            <help short="Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros)."/>
            <arg type="boolean" var="$parameters.properties.osProfile.linuxConfiguration.disablePasswordAuthentication" options="disable-password-authentication">
              <help short="Specifies whether password authentication should be disabled."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
              <help short="Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false."/>
            </arg>
            <arg type="object" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings" options="patch-settings">
              <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Linux."/>
              <arg type="string" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                <help short="Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."/>
                <enum>
                  <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                  <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                </enum>
              </arg>
              <arg type="object" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux."/>
                <arg type="boolean" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                  <help short="Enables customer to schedule patching without accidental upgrades"/>
                </arg>
                <arg type="string" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                  <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                  <enum>
                    <item name="Always" value="&quot;Always&quot;"/>
                    <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                    <item name="Never" value="&quot;Never&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="string" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.patchMode" options="patch-mode">
                <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true"/>
                <enum>
                  <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                  <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="boolean" var="$parameters.properties.osProfile.linuxConfiguration.provisionVMAgent" options="provision-vm-agent">
              <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
            </arg>
            <arg type="object" var="$parameters.properties.osProfile.linuxConfiguration.ssh" options="ssh">
              <help short="Specifies the ssh key configuration for a Linux OS."/>
              <arg type="array<object>" var="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys" options="public-keys">
                <help short="The list of SSH public keys used to authenticate with linux based VMs."/>
                <item type="object">
                  <arg type="string" var="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].keyData" options="key-data">
                    <help short="SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed)."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].path" options="path">
                    <help short="Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"/>
                  </arg>
                </item>
              </arg>
            </arg>
          </arg>
          <arg type="boolean" var="$parameters.properties.osProfile.requireGuestProvisionSignal" options="require-guest-provision-signal">
            <help short="Optional property which must either be set to True or omitted."/>
          </arg>
          <arg type="array<object>" var="$parameters.properties.osProfile.secrets" options="secrets">
            <help short="Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
            <item type="object">
              <arg type="@SubResource_create" var="$parameters.properties.osProfile.secrets[].sourceVault" options="source-vault">
                <help short="The relative URL of the Key Vault containing all of the certificates in VaultCertificates."/>
              </arg>
              <arg type="array<object>" var="$parameters.properties.osProfile.secrets[].vaultCertificates" options="vault-certificates">
                <help short="The list of key vault references in SourceVault which contain certificates."/>
                <item type="object">
                  <arg type="string" var="$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateStore" options="certificate-store">
                    <help short="For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateUrl" options="certificate-url">
                    <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br>  &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                  </arg>
                </item>
              </arg>
            </item>
          </arg>
          <arg type="object" var="$parameters.properties.osProfile.windowsConfiguration" options="windows-configuration">
            <help short="Specifies Windows operating system settings on the virtual machine."/>
            <arg type="array<object>" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent" options="additional-unattend-content">
              <help short="Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup."/>
              <item type="object">
                <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].componentName" options="component-name">
                  <help short="The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup."/>
                  <enum>
                    <item name="Microsoft-Windows-Shell-Setup" value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].content" options="content">
                  <help short="Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted."/>
                </arg>
                <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].passName" options="pass-name">
                  <help short="The pass name. Currently, the only allowable value is OobeSystem."/>
                  <enum>
                    <item name="OobeSystem" value="&quot;OobeSystem&quot;"/>
                  </enum>
                </arg>
                <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].settingName" options="setting-name">
                  <help short="Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon."/>
                  <enum>
                    <item name="AutoLogon" value="&quot;AutoLogon&quot;"/>
                    <item name="FirstLogonCommands" value="&quot;FirstLogonCommands&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg type="boolean" var="$parameters.properties.osProfile.windowsConfiguration.enableAutomaticUpdates" options="enable-automatic-updates">
              <help short="Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning."/>
            </arg>
            <arg type="object" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings" options="patch-settings">
              <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Windows."/>
              <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                <help short="Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. "/>
                <enum>
                  <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                  <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                </enum>
              </arg>
              <arg type="object" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows."/>
                <arg type="boolean" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                  <help short="Enables customer to schedule patching without accidental upgrades"/>
                </arg>
                <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                  <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                  <enum>
                    <item name="Always" value="&quot;Always&quot;"/>
                    <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                    <item name="Never" value="&quot;Never&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="boolean" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching" options="enable-hotpatching">
                <help short="Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'."/>
              </arg>
              <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.patchMode" options="patch-mode">
                <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true "/>
                <enum>
                  <item name="AutomaticByOS" value="&quot;AutomaticByOS&quot;"/>
                  <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                  <item name="Manual" value="&quot;Manual&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="boolean" var="$parameters.properties.osProfile.windowsConfiguration.provisionVMAgent" options="provision-vm-agent">
              <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
            </arg>
            <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.timeZone" options="time-zone">
              <help short="Specifies the time zone of the virtual machine. e.g. &quot;Pacific Standard Time&quot;. Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones)."/>
            </arg>
            <arg type="object" var="$parameters.properties.osProfile.windowsConfiguration.winRM" options="win-rm">
              <help short="Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell."/>
              <arg type="array<object>" var="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners" options="listeners">
                <help short="The list of Windows Remote Management listeners"/>
                <item type="object">
                  <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl" options="certificate-url">
                    <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br>  &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].protocol" options="protocol">
                    <help short="Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**"/>
                    <enum>
                      <item name="Http" value="&quot;Http&quot;"/>
                      <item name="Https" value="&quot;Https&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
            </arg>
          </arg>
        </arg>
        <arg type="integer32" var="$parameters.properties.platformFaultDomain" options="platform-fault-domain" group="Properties">
          <help short="Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set. The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' greater than 1. This property cannot be updated once the Virtual Machine is created. Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api‐version: 2020‐12‐01."/>
        </arg>
        <arg type="string" var="$parameters.properties.priority" options="priority" group="Properties">
          <help short="Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01"/>
          <enum>
            <item name="Low" value="&quot;Low&quot;"/>
            <item name="Regular" value="&quot;Regular&quot;"/>
            <item name="Spot" value="&quot;Spot&quot;"/>
          </enum>
        </arg>
        <arg type="@SubResource_create" var="$parameters.properties.proximityPlacementGroup" options="proximity-placement-group" group="Properties">
          <help short="Specifies information about the proximity placement group that the virtual machine should be assigned to. Minimum api-version: 2018-04-01."/>
        </arg>
        <arg type="object" var="$parameters.properties.scheduledEventsPolicy" options="scheduled-events-policy" group="Properties">
          <help short="Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the virtual machine."/>
          <arg type="object" var="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets" options="scheduled-events-additional-publishing-targets">
            <help short="The configuration parameters used while publishing scheduledEventsAdditionalPublishingTargets."/>
            <arg type="object" var="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph" options="event-grid-and-resource-graph">
              <help short="The configuration parameters used while creating eventGridAndResourceGraph Scheduled Event setting."/>
              <arg type="boolean" var="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph.enable" options="enable">
                <help short="Specifies if event grid and resource graph is enabled for Scheduled event related configurations."/>
              </arg>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.scheduledEventsPolicy.userInitiatedReboot" options="user-initiated-reboot">
            <help short="The configuration parameters used while creating userInitiatedReboot scheduled event setting creation."/>
            <arg type="boolean" var="$parameters.properties.scheduledEventsPolicy.userInitiatedReboot.automaticallyApprove" options="automatically-approve">
              <help short="Specifies Reboot Scheduled Event related configurations."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy" options="user-initiated-redeploy">
            <help short="The configuration parameters used while creating userInitiatedRedeploy scheduled event setting creation."/>
            <arg type="boolean" var="$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy.automaticallyApprove" options="automatically-approve">
              <help short="Specifies Redeploy Scheduled Event related configurations."/>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.scheduledEventsProfile" options="scheduled-events-profile" group="Properties">
          <help short="Specifies Scheduled Event related configurations."/>
          <arg type="object" var="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile" options="os-image-notification-profile">
            <help short="Specifies OS Image Scheduled Event related configurations."/>
            <arg type="boolean" var="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.enable" options="enable">
              <help short="Specifies whether the OS Image Scheduled event is enabled or disabled."/>
            </arg>
            <arg type="string" var="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout" options="not-before-timeout">
              <help short="Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must be 15 minutes (PT15M)"/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile" options="terminate-notification-profile">
            <help short="Specifies Terminate Scheduled Event related configurations."/>
            <arg type="boolean" var="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.enable" options="enable">
              <help short="Specifies whether the Terminate Scheduled event is enabled or disabled."/>
            </arg>
            <arg type="string" var="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout" options="not-before-timeout">
              <help short="Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)"/>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.securityProfile" options="security-profile" group="Properties">
          <help short="Specifies the Security related profile settings for the virtual machine."/>
          <arg type="boolean" var="$parameters.properties.securityProfile.encryptionAtHost" options="encryption-at-host">
            <help short="This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource."/>
          </arg>
          <arg type="object" var="$parameters.properties.securityProfile.encryptionIdentity" options="encryption-identity">
            <help short="Specifies the Managed Identity used by ADE to get access token for keyvault operations."/>
            <arg type="string" var="$parameters.properties.securityProfile.encryptionIdentity.userAssignedIdentityResourceId" options="user-assigned-identity-resource-id">
              <help short="Specifies ARM Resource ID of one of the user identities associated with the VM."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.securityProfile.proxyAgentSettings" options="proxy-agent-settings">
            <help short="Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01."/>
            <arg type="boolean" var="$parameters.properties.securityProfile.proxyAgentSettings.enabled" options="enabled">
              <help short="Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set."/>
            </arg>
            <arg type="@HostEndpointSettings_create" var="$parameters.properties.securityProfile.proxyAgentSettings.imds" options="imds">
              <help short="Specifies the IMDS endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01."/>
            </arg>
            <arg type="integer32" var="$parameters.properties.securityProfile.proxyAgentSettings.keyIncarnationId" options="key-incarnation-id">
              <help short="Increase the value of this property allows user to reset the key used for securing communication channel between guest and host."/>
            </arg>
            <arg type="string" var="$parameters.properties.securityProfile.proxyAgentSettings.mode" options="mode">
              <help short="Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode."/>
              <enum>
                <item name="Audit" value="&quot;Audit&quot;"/>
                <item name="Enforce" value="&quot;Enforce&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$parameters.properties.securityProfile.proxyAgentSettings.wireServer" options="wire-server" cls="HostEndpointSettings_create">
              <help short="Specifies the Wire Server endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01."/>
              <arg type="string" var="@HostEndpointSettings_create.inVMAccessControlProfileReferenceId" options="in-vm-access-control-profile-reference-id">
                <help short="Specifies the InVMAccessControlProfileVersion resource id in the format of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{profile}/versions/{version}"/>
              </arg>
              <arg type="string" var="@HostEndpointSettings_create.mode" options="mode">
                <help short="Specifies the execution mode. In Audit mode, the system acts as if it is enforcing the access control policy, including emitting access denial entries in the logs but it does not actually deny any requests to host endpoints. In Enforce mode, the system will enforce the access control and it is the recommended mode of operation."/>
                <enum>
                  <item name="Audit" value="&quot;Audit&quot;"/>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enforce" value="&quot;Enforce&quot;"/>
                </enum>
              </arg>
            </arg>
          </arg>
          <arg type="string" var="$parameters.properties.securityProfile.securityType" options="security-type">
            <help short="Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set."/>
            <enum>
              <item name="ConfidentialVM" value="&quot;ConfidentialVM&quot;"/>
              <item name="TrustedLaunch" value="&quot;TrustedLaunch&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.properties.securityProfile.uefiSettings" options="uefi-settings">
            <help short="Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01."/>
            <arg type="boolean" var="$parameters.properties.securityProfile.uefiSettings.secureBootEnabled" options="secure-boot-enabled">
              <help short="Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
            </arg>
            <arg type="boolean" var="$parameters.properties.securityProfile.uefiSettings.vTpmEnabled" options="v-tpm-enabled">
              <help short="Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
            </arg>
          </arg>
        </arg>
        <arg type="object" var="$parameters.properties.storageProfile" options="storage-profile" group="Properties">
          <help short="Specifies the storage settings for the virtual machine disks."/>
          <arg type="boolean" var="$parameters.properties.storageProfile.alignRegionalDisksToVMZone" options="align-regional-disks-to-vm-zone">
            <help short="Specifies whether the regional disks should be aligned/moved to the VM zone. This is applicable only for VMs with placement property set. Please note that this change is irreversible. Minimum api-version: 2024-11-01."/>
          </arg>
          <arg type="array<object>" var="$parameters.properties.storageProfile.dataDisks" options="data-disks">
            <help short="Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
            <item type="object">
              <arg type="string" var="$parameters.properties.storageProfile.dataDisks[].caching" options="caching">
                <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**"/>
                <enum>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                  <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.storageProfile.dataDisks[].createOption" options="create-option" required="True">
                <help short="Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine data disk. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described. **Empty:** This value is used when creating an empty data disk. **Copy:** This value is used to create a data disk from a snapshot or another disk. **Restore:** This value is used to create a data disk from a disk restore point."/>
                <enum>
                  <item name="Attach" value="&quot;Attach&quot;"/>
                  <item name="Copy" value="&quot;Copy&quot;"/>
                  <item name="Empty" value="&quot;Empty&quot;"/>
                  <item name="FromImage" value="&quot;FromImage&quot;"/>
                  <item name="Restore" value="&quot;Restore&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.storageProfile.dataDisks[].deleteOption" options="delete-option">
                <help short="Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the data disk is deleted when VM is deleted. **Detach.** If this value is used, the data disk is retained after VM is deleted. The default value is set to **Detach**."/>
                <enum>
                  <item name="Delete" value="&quot;Delete&quot;"/>
                  <item name="Detach" value="&quot;Detach&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.storageProfile.dataDisks[].detachOption" options="detach-option">
                <help short="Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach.** detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'."/>
                <enum>
                  <item name="ForceDetach" value="&quot;ForceDetach&quot;"/>
                </enum>
              </arg>
              <arg type="integer32" var="$parameters.properties.storageProfile.dataDisks[].diskSizeGB" options="disk-size-gb">
                <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
              </arg>
              <arg type="@VirtualHardDisk_create" var="$parameters.properties.storageProfile.dataDisks[].image" options="image">
                <help short="The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."/>
              </arg>
              <arg type="integer32" var="$parameters.properties.storageProfile.dataDisks[].lun" options="lun" required="True">
                <help short="Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."/>
              </arg>
              <arg type="@ManagedDiskParameters_create" var="$parameters.properties.storageProfile.dataDisks[].managedDisk" options="managed-disk">
                <help short="The managed disk parameters."/>
              </arg>
              <arg type="string" var="$parameters.properties.storageProfile.dataDisks[].name" options="name">
                <help short="The disk name."/>
              </arg>
              <arg type="object" var="$parameters.properties.storageProfile.dataDisks[].sourceResource" options="source-resource">
                <help short="The source resource identifier. It can be a snapshot, or disk restore point from which to create a disk."/>
                <arg type="string" var="$parameters.properties.storageProfile.dataDisks[].sourceResource.id" options="id">
                  <help short="The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."/>
                </arg>
              </arg>
              <arg type="boolean" var="$parameters.properties.storageProfile.dataDisks[].toBeDetached" options="to-be-detached">
                <help short="Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset"/>
              </arg>
              <arg type="@VirtualHardDisk_create" var="$parameters.properties.storageProfile.dataDisks[].vhd" options="vhd">
                <help short="The virtual hard disk."/>
              </arg>
              <arg type="boolean" var="$parameters.properties.storageProfile.dataDisks[].writeAcceleratorEnabled" options="write-accelerator-enabled">
                <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$parameters.properties.storageProfile.diskControllerType" options="disk-controller-type">
            <help short="Specifies the disk controller type configured for the VM. **Note:** This property will be set to the default disk controller type if not specified provided virtual machine is being created with 'hyperVGeneration' set to V2 based on the capabilities of the operating system disk and VM size from the the specified minimum api version. You need to deallocate the VM before updating its disk controller type unless you are updating the VM size in the VM configuration which implicitly deallocates and reallocates the VM. Minimum api-version: 2022-08-01."/>
            <enum>
              <item name="NVMe" value="&quot;NVMe&quot;"/>
              <item name="SCSI" value="&quot;SCSI&quot;"/>
            </enum>
          </arg>
          <arg type="object" var="$parameters.properties.storageProfile.imageReference" options="image-reference">
            <help short="Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations."/>
            <arg type="string" var="$parameters.properties.storageProfile.imageReference.communityGalleryImageId" options="community-gallery-image-id">
              <help short="Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call."/>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.imageReference.id" options="id">
              <help short="Resource Id"/>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.imageReference.offer" options="offer">
              <help short="Specifies the offer of the platform image or marketplace image used to create the virtual machine."/>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.imageReference.publisher" options="publisher">
              <help short="The image publisher."/>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.imageReference.sharedGalleryImageId" options="shared-gallery-image-id">
              <help short="Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call."/>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.imageReference.sku" options="sku">
              <help short="The image SKU."/>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.imageReference.version" options="version">
              <help short="Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input."/>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.storageProfile.osDisk" options="os-disk">
            <help short="Specifies information about the operating system disk used by the virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
            <arg type="string" var="$parameters.properties.storageProfile.osDisk.caching" options="caching">
              <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**"/>
              <enum>
                <item name="None" value="&quot;None&quot;"/>
                <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.osDisk.createOption" options="create-option" required="True">
              <help short="Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described."/>
              <enum>
                <item name="Attach" value="&quot;Attach&quot;"/>
                <item name="Copy" value="&quot;Copy&quot;"/>
                <item name="Empty" value="&quot;Empty&quot;"/>
                <item name="FromImage" value="&quot;FromImage&quot;"/>
                <item name="Restore" value="&quot;Restore&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.osDisk.deleteOption" options="delete-option">
              <help short="Specifies whether OS Disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the OS disk is deleted when VM is deleted. **Detach.** If this value is used, the os disk is retained after VM is deleted. The default value is set to **Detach**. For an ephemeral OS Disk, the default value is set to **Delete**. The user cannot change the delete option for an ephemeral OS Disk."/>
              <enum>
                <item name="Delete" value="&quot;Delete&quot;"/>
                <item name="Detach" value="&quot;Detach&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$parameters.properties.storageProfile.osDisk.diffDiskSettings" options="diff-disk-settings">
              <help short="Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine."/>
              <arg type="string" var="$parameters.properties.storageProfile.osDisk.diffDiskSettings.option" options="option">
                <help short="Specifies the ephemeral disk settings for operating system disk."/>
                <enum>
                  <item name="Local" value="&quot;Local&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.storageProfile.osDisk.diffDiskSettings.placement" options="placement">
                <help short="Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk,** **NvmeDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** or **NvmeDisk** is used. Refer to the VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk. Minimum api-version for NvmeDisk: 2024-03-01."/>
                <enum>
                  <item name="CacheDisk" value="&quot;CacheDisk&quot;"/>
                  <item name="NvmeDisk" value="&quot;NvmeDisk&quot;"/>
                  <item name="ResourceDisk" value="&quot;ResourceDisk&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="integer32" var="$parameters.properties.storageProfile.osDisk.diskSizeGB" options="disk-size-gb">
              <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
            </arg>
            <arg type="object" var="$parameters.properties.storageProfile.osDisk.encryptionSettings" options="encryption-settings">
              <help short="Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15."/>
              <arg type="object" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey" options="disk-encryption-key">
                <help short="Specifies the location of the disk encryption key, which is a Key Vault Secret."/>
                <arg type="string" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl" options="secret-url" required="True">
                  <help short="The URL referencing a secret in a Key Vault."/>
                </arg>
                <arg type="object" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault" options="source-vault" required="True" cls="SubResource_create">
                  <help short="The relative URL of the Key Vault containing the secret."/>
                  <arg type="string" var="@SubResource_create.id" options="id">
                    <help short="Resource Id"/>
                  </arg>
                </arg>
              </arg>
              <arg type="boolean" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.enabled" options="enabled">
                <help short="Specifies whether disk encryption should be enabled on the virtual machine."/>
              </arg>
              <arg type="object" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey" options="key-encryption-key">
                <help short="Specifies the location of the key encryption key in Key Vault."/>
                <arg type="string" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl" options="key-url" required="True">
                  <help short="The URL referencing a key encryption key in Key Vault."/>
                </arg>
                <arg type="@SubResource_create" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault" options="source-vault" required="True">
                  <help short="The relative URL of the Key Vault containing the key."/>
                </arg>
              </arg>
            </arg>
            <arg type="@VirtualHardDisk_create" var="$parameters.properties.storageProfile.osDisk.image" options="image">
              <help short="The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."/>
            </arg>
            <arg type="object" var="$parameters.properties.storageProfile.osDisk.managedDisk" options="managed-disk" cls="ManagedDiskParameters_create">
              <help short="The managed disk parameters."/>
              <arg type="object" var="@ManagedDiskParameters_create.diskEncryptionSet" options="disk-encryption-set" cls="DiskEncryptionSetParameters_create">
                <help short="Specifies the customer managed disk encryption set resource id for the managed disk."/>
                <arg type="string" var="@DiskEncryptionSetParameters_create.id" options="id">
                  <help short="Resource Id"/>
                </arg>
              </arg>
              <arg type="string" var="@ManagedDiskParameters_create.id" options="id">
                <help short="Resource Id"/>
              </arg>
              <arg type="object" var="@ManagedDiskParameters_create.securityProfile" options="security-profile">
                <help short="Specifies the security profile for the managed disk."/>
                <arg type="@DiskEncryptionSetParameters_create" var="@ManagedDiskParameters_create.securityProfile.diskEncryptionSet" options="disk-encryption-set">
                  <help short="Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob."/>
                </arg>
                <arg type="string" var="@ManagedDiskParameters_create.securityProfile.securityEncryptionType" options="security-encryption-type">
                  <help short="Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob.. **Note:** It can be set for only Confidential VMs."/>
                  <enum>
                    <item name="DiskWithVMGuestState" value="&quot;DiskWithVMGuestState&quot;"/>
                    <item name="NonPersistedTPM" value="&quot;NonPersistedTPM&quot;"/>
                    <item name="VMGuestStateOnly" value="&quot;VMGuestStateOnly&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg type="string" var="@ManagedDiskParameters_create.storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk."/>
                <enum>
                  <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
                  <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
                  <item name="StandardSSD_ZRS" value="&quot;StandardSSD_ZRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="UltraSSD_LRS" value="&quot;UltraSSD_LRS&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.osDisk.name" options="name">
              <help short="The disk name."/>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.osDisk.osType" options="os-type">
              <help short="This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**"/>
              <enum>
                <item name="Linux" value="&quot;Linux&quot;"/>
                <item name="Windows" value="&quot;Windows&quot;"/>
              </enum>
            </arg>
            <arg type="object" var="$parameters.properties.storageProfile.osDisk.vhd" options="vhd" cls="VirtualHardDisk_create">
              <help short="The virtual hard disk."/>
              <arg type="string" var="@VirtualHardDisk_create.uri" options="uri">
                <help short="Specifies the virtual hard disk's uri."/>
              </arg>
            </arg>
            <arg type="boolean" var="$parameters.properties.storageProfile.osDisk.writeAcceleratorEnabled" options="write-accelerator-enabled">
              <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.userData" options="user-data" group="Properties">
          <help short="UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01."/>
        </arg>
        <arg type="@SubResource_create" var="$parameters.properties.virtualMachineScaleSet" options="virtual-machine-scale-set" group="Properties">
          <help short="Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. This property cannot exist along with a non-null properties.availabilitySet reference. Minimum api‐version: 2019‐03‐01."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
              <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
            </header>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="extendedLocation" arg="$parameters.extendedLocation">
                    <prop type="string" name="name" arg="$parameters.extendedLocation.name"/>
                    <prop type="string" name="type" arg="$parameters.extendedLocation.type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop type="string" name="type" arg="$parameters.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$parameters.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$parameters.identity.systemAssigned"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="placement" arg="$parameters.placement">
                    <prop type="array<string>" name="excludeZones" arg="$parameters.placement.excludeZones">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="includeZones" arg="$parameters.placement.includeZones">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="zonePlacementPolicy" arg="$parameters.placement.zonePlacementPolicy">
                      <enum>
                        <item value="&quot;Any&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="plan" arg="$parameters.plan">
                    <prop type="string" name="name" arg="$parameters.plan.name"/>
                    <prop type="string" name="product" arg="$parameters.plan.product"/>
                    <prop type="string" name="promotionCode" arg="$parameters.plan.promotionCode"/>
                    <prop type="string" name="publisher" arg="$parameters.plan.publisher"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalCapabilities" arg="$parameters.properties.additionalCapabilities">
                      <prop type="boolean" name="hibernationEnabled" arg="$parameters.properties.additionalCapabilities.hibernationEnabled"/>
                      <prop type="boolean" name="ultraSSDEnabled" arg="$parameters.properties.additionalCapabilities.ultraSSDEnabled"/>
                    </prop>
                    <prop type="object" name="applicationProfile" arg="$parameters.properties.applicationProfile">
                      <prop type="array<object>" name="galleryApplications" arg="$parameters.properties.applicationProfile.galleryApplications" identifiers="packageReferenceId">
                        <item type="object">
                          <prop type="string" name="configurationReference" arg="$parameters.properties.applicationProfile.galleryApplications[].configurationReference"/>
                          <prop type="boolean" name="enableAutomaticUpgrade" arg="$parameters.properties.applicationProfile.galleryApplications[].enableAutomaticUpgrade"/>
                          <prop type="integer32" name="order" arg="$parameters.properties.applicationProfile.galleryApplications[].order"/>
                          <prop type="string" name="packageReferenceId" arg="$parameters.properties.applicationProfile.galleryApplications[].packageReferenceId" required="True"/>
                          <prop type="string" name="tags" arg="$parameters.properties.applicationProfile.galleryApplications[].tags"/>
                          <prop type="boolean" name="treatFailureAsDeploymentFailure" arg="$parameters.properties.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="@SubResource_create" name="availabilitySet" arg="$parameters.properties.availabilitySet"/>
                    <prop type="object" name="billingProfile" arg="$parameters.properties.billingProfile">
                      <prop type="float64" name="maxPrice" arg="$parameters.properties.billingProfile.maxPrice"/>
                    </prop>
                    <prop type="object" name="capacityReservation" arg="$parameters.properties.capacityReservation">
                      <prop type="@SubResource_create" name="capacityReservationGroup" arg="$parameters.properties.capacityReservation.capacityReservationGroup"/>
                    </prop>
                    <prop type="object" name="diagnosticsProfile" arg="$parameters.properties.diagnosticsProfile">
                      <prop type="object" name="bootDiagnostics" arg="$parameters.properties.diagnosticsProfile.bootDiagnostics">
                        <prop type="boolean" name="enabled" arg="$parameters.properties.diagnosticsProfile.bootDiagnostics.enabled"/>
                        <prop type="string" name="storageUri" arg="$parameters.properties.diagnosticsProfile.bootDiagnostics.storageUri"/>
                      </prop>
                    </prop>
                    <prop type="string" name="evictionPolicy" arg="$parameters.properties.evictionPolicy">
                      <enum>
                        <item value="&quot;Deallocate&quot;"/>
                        <item value="&quot;Delete&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="extensionsTimeBudget" arg="$parameters.properties.extensionsTimeBudget"/>
                    <prop type="object" name="hardwareProfile" arg="$parameters.properties.hardwareProfile">
                      <prop type="string" name="vmSize" arg="$parameters.properties.hardwareProfile.vmSize">
                        <enum>
                          <item value="&quot;Basic_A0&quot;"/>
                          <item value="&quot;Basic_A1&quot;"/>
                          <item value="&quot;Basic_A2&quot;"/>
                          <item value="&quot;Basic_A3&quot;"/>
                          <item value="&quot;Basic_A4&quot;"/>
                          <item value="&quot;Standard_A0&quot;"/>
                          <item value="&quot;Standard_A1&quot;"/>
                          <item value="&quot;Standard_A10&quot;"/>
                          <item value="&quot;Standard_A11&quot;"/>
                          <item value="&quot;Standard_A1_v2&quot;"/>
                          <item value="&quot;Standard_A2&quot;"/>
                          <item value="&quot;Standard_A2_v2&quot;"/>
                          <item value="&quot;Standard_A2m_v2&quot;"/>
                          <item value="&quot;Standard_A3&quot;"/>
                          <item value="&quot;Standard_A4&quot;"/>
                          <item value="&quot;Standard_A4_v2&quot;"/>
                          <item value="&quot;Standard_A4m_v2&quot;"/>
                          <item value="&quot;Standard_A5&quot;"/>
                          <item value="&quot;Standard_A6&quot;"/>
                          <item value="&quot;Standard_A7&quot;"/>
                          <item value="&quot;Standard_A8&quot;"/>
                          <item value="&quot;Standard_A8_v2&quot;"/>
                          <item value="&quot;Standard_A8m_v2&quot;"/>
                          <item value="&quot;Standard_A9&quot;"/>
                          <item value="&quot;Standard_B1ms&quot;"/>
                          <item value="&quot;Standard_B1s&quot;"/>
                          <item value="&quot;Standard_B2ms&quot;"/>
                          <item value="&quot;Standard_B2s&quot;"/>
                          <item value="&quot;Standard_B4ms&quot;"/>
                          <item value="&quot;Standard_B8ms&quot;"/>
                          <item value="&quot;Standard_D1&quot;"/>
                          <item value="&quot;Standard_D11&quot;"/>
                          <item value="&quot;Standard_D11_v2&quot;"/>
                          <item value="&quot;Standard_D12&quot;"/>
                          <item value="&quot;Standard_D12_v2&quot;"/>
                          <item value="&quot;Standard_D13&quot;"/>
                          <item value="&quot;Standard_D13_v2&quot;"/>
                          <item value="&quot;Standard_D14&quot;"/>
                          <item value="&quot;Standard_D14_v2&quot;"/>
                          <item value="&quot;Standard_D15_v2&quot;"/>
                          <item value="&quot;Standard_D16_v3&quot;"/>
                          <item value="&quot;Standard_D16s_v3&quot;"/>
                          <item value="&quot;Standard_D1_v2&quot;"/>
                          <item value="&quot;Standard_D2&quot;"/>
                          <item value="&quot;Standard_D2_v2&quot;"/>
                          <item value="&quot;Standard_D2_v3&quot;"/>
                          <item value="&quot;Standard_D2s_v3&quot;"/>
                          <item value="&quot;Standard_D3&quot;"/>
                          <item value="&quot;Standard_D32_v3&quot;"/>
                          <item value="&quot;Standard_D32s_v3&quot;"/>
                          <item value="&quot;Standard_D3_v2&quot;"/>
                          <item value="&quot;Standard_D4&quot;"/>
                          <item value="&quot;Standard_D4_v2&quot;"/>
                          <item value="&quot;Standard_D4_v3&quot;"/>
                          <item value="&quot;Standard_D4s_v3&quot;"/>
                          <item value="&quot;Standard_D5_v2&quot;"/>
                          <item value="&quot;Standard_D64_v3&quot;"/>
                          <item value="&quot;Standard_D64s_v3&quot;"/>
                          <item value="&quot;Standard_D8_v3&quot;"/>
                          <item value="&quot;Standard_D8s_v3&quot;"/>
                          <item value="&quot;Standard_DS1&quot;"/>
                          <item value="&quot;Standard_DS11&quot;"/>
                          <item value="&quot;Standard_DS11_v2&quot;"/>
                          <item value="&quot;Standard_DS12&quot;"/>
                          <item value="&quot;Standard_DS12_v2&quot;"/>
                          <item value="&quot;Standard_DS13&quot;"/>
                          <item value="&quot;Standard_DS13-2_v2&quot;"/>
                          <item value="&quot;Standard_DS13-4_v2&quot;"/>
                          <item value="&quot;Standard_DS13_v2&quot;"/>
                          <item value="&quot;Standard_DS14&quot;"/>
                          <item value="&quot;Standard_DS14-4_v2&quot;"/>
                          <item value="&quot;Standard_DS14-8_v2&quot;"/>
                          <item value="&quot;Standard_DS14_v2&quot;"/>
                          <item value="&quot;Standard_DS15_v2&quot;"/>
                          <item value="&quot;Standard_DS1_v2&quot;"/>
                          <item value="&quot;Standard_DS2&quot;"/>
                          <item value="&quot;Standard_DS2_v2&quot;"/>
                          <item value="&quot;Standard_DS3&quot;"/>
                          <item value="&quot;Standard_DS3_v2&quot;"/>
                          <item value="&quot;Standard_DS4&quot;"/>
                          <item value="&quot;Standard_DS4_v2&quot;"/>
                          <item value="&quot;Standard_DS5_v2&quot;"/>
                          <item value="&quot;Standard_E16_v3&quot;"/>
                          <item value="&quot;Standard_E16s_v3&quot;"/>
                          <item value="&quot;Standard_E2_v3&quot;"/>
                          <item value="&quot;Standard_E2s_v3&quot;"/>
                          <item value="&quot;Standard_E32-16_v3&quot;"/>
                          <item value="&quot;Standard_E32-8s_v3&quot;"/>
                          <item value="&quot;Standard_E32_v3&quot;"/>
                          <item value="&quot;Standard_E32s_v3&quot;"/>
                          <item value="&quot;Standard_E4_v3&quot;"/>
                          <item value="&quot;Standard_E4s_v3&quot;"/>
                          <item value="&quot;Standard_E64-16s_v3&quot;"/>
                          <item value="&quot;Standard_E64-32s_v3&quot;"/>
                          <item value="&quot;Standard_E64_v3&quot;"/>
                          <item value="&quot;Standard_E64s_v3&quot;"/>
                          <item value="&quot;Standard_E8_v3&quot;"/>
                          <item value="&quot;Standard_E8s_v3&quot;"/>
                          <item value="&quot;Standard_F1&quot;"/>
                          <item value="&quot;Standard_F16&quot;"/>
                          <item value="&quot;Standard_F16s&quot;"/>
                          <item value="&quot;Standard_F16s_v2&quot;"/>
                          <item value="&quot;Standard_F1s&quot;"/>
                          <item value="&quot;Standard_F2&quot;"/>
                          <item value="&quot;Standard_F2s&quot;"/>
                          <item value="&quot;Standard_F2s_v2&quot;"/>
                          <item value="&quot;Standard_F32s_v2&quot;"/>
                          <item value="&quot;Standard_F4&quot;"/>
                          <item value="&quot;Standard_F4s&quot;"/>
                          <item value="&quot;Standard_F4s_v2&quot;"/>
                          <item value="&quot;Standard_F64s_v2&quot;"/>
                          <item value="&quot;Standard_F72s_v2&quot;"/>
                          <item value="&quot;Standard_F8&quot;"/>
                          <item value="&quot;Standard_F8s&quot;"/>
                          <item value="&quot;Standard_F8s_v2&quot;"/>
                          <item value="&quot;Standard_G1&quot;"/>
                          <item value="&quot;Standard_G2&quot;"/>
                          <item value="&quot;Standard_G3&quot;"/>
                          <item value="&quot;Standard_G4&quot;"/>
                          <item value="&quot;Standard_G5&quot;"/>
                          <item value="&quot;Standard_GS1&quot;"/>
                          <item value="&quot;Standard_GS2&quot;"/>
                          <item value="&quot;Standard_GS3&quot;"/>
                          <item value="&quot;Standard_GS4&quot;"/>
                          <item value="&quot;Standard_GS4-4&quot;"/>
                          <item value="&quot;Standard_GS4-8&quot;"/>
                          <item value="&quot;Standard_GS5&quot;"/>
                          <item value="&quot;Standard_GS5-16&quot;"/>
                          <item value="&quot;Standard_GS5-8&quot;"/>
                          <item value="&quot;Standard_H16&quot;"/>
                          <item value="&quot;Standard_H16m&quot;"/>
                          <item value="&quot;Standard_H16mr&quot;"/>
                          <item value="&quot;Standard_H16r&quot;"/>
                          <item value="&quot;Standard_H8&quot;"/>
                          <item value="&quot;Standard_H8m&quot;"/>
                          <item value="&quot;Standard_L16s&quot;"/>
                          <item value="&quot;Standard_L32s&quot;"/>
                          <item value="&quot;Standard_L4s&quot;"/>
                          <item value="&quot;Standard_L8s&quot;"/>
                          <item value="&quot;Standard_M128-32ms&quot;"/>
                          <item value="&quot;Standard_M128-64ms&quot;"/>
                          <item value="&quot;Standard_M128ms&quot;"/>
                          <item value="&quot;Standard_M128s&quot;"/>
                          <item value="&quot;Standard_M64-16ms&quot;"/>
                          <item value="&quot;Standard_M64-32ms&quot;"/>
                          <item value="&quot;Standard_M64ms&quot;"/>
                          <item value="&quot;Standard_M64s&quot;"/>
                          <item value="&quot;Standard_NC12&quot;"/>
                          <item value="&quot;Standard_NC12s_v2&quot;"/>
                          <item value="&quot;Standard_NC12s_v3&quot;"/>
                          <item value="&quot;Standard_NC24&quot;"/>
                          <item value="&quot;Standard_NC24r&quot;"/>
                          <item value="&quot;Standard_NC24rs_v2&quot;"/>
                          <item value="&quot;Standard_NC24rs_v3&quot;"/>
                          <item value="&quot;Standard_NC24s_v2&quot;"/>
                          <item value="&quot;Standard_NC24s_v3&quot;"/>
                          <item value="&quot;Standard_NC6&quot;"/>
                          <item value="&quot;Standard_NC6s_v2&quot;"/>
                          <item value="&quot;Standard_NC6s_v3&quot;"/>
                          <item value="&quot;Standard_ND12s&quot;"/>
                          <item value="&quot;Standard_ND24rs&quot;"/>
                          <item value="&quot;Standard_ND24s&quot;"/>
                          <item value="&quot;Standard_ND6s&quot;"/>
                          <item value="&quot;Standard_NV12&quot;"/>
                          <item value="&quot;Standard_NV24&quot;"/>
                          <item value="&quot;Standard_NV6&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="vmSizeProperties" arg="$parameters.properties.hardwareProfile.vmSizeProperties">
                        <prop type="integer32" name="vCPUsAvailable" arg="$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsAvailable"/>
                        <prop type="integer32" name="vCPUsPerCore" arg="$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsPerCore"/>
                      </prop>
                    </prop>
                    <prop type="@SubResource_create" name="host" arg="$parameters.properties.host"/>
                    <prop type="@SubResource_create" name="hostGroup" arg="$parameters.properties.hostGroup"/>
                    <prop type="string" name="licenseType" arg="$parameters.properties.licenseType"/>
                    <prop type="object" name="networkProfile" arg="$parameters.properties.networkProfile">
                      <prop type="string" name="networkApiVersion" arg="$parameters.properties.networkProfile.networkApiVersion">
                        <enum>
                          <item value="&quot;2020-11-01&quot;"/>
                          <item value="&quot;2022-11-01&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="networkInterfaceConfigurations" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].name" required="True"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="auxiliaryMode" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode">
                              <enum>
                                <item value="&quot;AcceleratedConnections&quot;"/>
                                <item value="&quot;Floating&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="auxiliarySku" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku">
                              <enum>
                                <item value="&quot;A1&quot;"/>
                                <item value="&quot;A2&quot;"/>
                                <item value="&quot;A4&quot;"/>
                                <item value="&quot;A8&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="disableTcpStateTracking" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking"/>
                            <prop type="object" name="dnsSettings" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings">
                              <prop type="array<string>" name="dnsServers" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="@SubResource_create" name="dscpConfiguration" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dscpConfiguration"/>
                            <prop type="boolean" name="enableAcceleratedNetworking" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking"/>
                            <prop type="boolean" name="enableFpga" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableFpga"/>
                            <prop type="boolean" name="enableIPForwarding" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding"/>
                            <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" required="True" identifiers="name">
                              <item type="object">
                                <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" required="True"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<@SubResource_create>" name="applicationGatewayBackendAddressPools" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools">
                                    <item type="@SubResource_create"/>
                                  </prop>
                                  <prop type="array<@SubResource_create>" name="applicationSecurityGroups" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups">
                                    <item type="@SubResource_create"/>
                                  </prop>
                                  <prop type="array<@SubResource_create>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools">
                                    <item type="@SubResource_create"/>
                                  </prop>
                                  <prop type="boolean" name="primary" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"/>
                                  <prop type="string" name="privateIPAddressVersion" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion">
                                    <enum>
                                      <item value="&quot;IPv4&quot;"/>
                                      <item value="&quot;IPv6&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="publicIPAddressConfiguration" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration">
                                    <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" required="True"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="deleteOption" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption">
                                        <enum>
                                          <item value="&quot;Delete&quot;"/>
                                          <item value="&quot;Detach&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="dnsSettings" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings">
                                        <prop type="string" name="domainNameLabel" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" required="True"/>
                                        <prop type="string" name="domainNameLabelScope" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope">
                                          <enum>
                                            <item value="&quot;NoReuse&quot;"/>
                                            <item value="&quot;ResourceGroupReuse&quot;"/>
                                            <item value="&quot;SubscriptionReuse&quot;"/>
                                            <item value="&quot;TenantReuse&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                      <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes"/>
                                      <prop type="array<object>" name="ipTags" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags">
                                        <item type="object">
                                          <prop type="string" name="ipTagType" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType"/>
                                          <prop type="string" name="tag" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag"/>
                                        </item>
                                      </prop>
                                      <prop type="string" name="publicIPAddressVersion" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion">
                                        <enum>
                                          <item value="&quot;IPv4&quot;"/>
                                          <item value="&quot;IPv6&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="publicIPAllocationMethod" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="@SubResource_create" name="publicIPPrefix" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix"/>
                                    </prop>
                                    <prop type="object" name="sku" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku">
                                      <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name">
                                        <enum>
                                          <item value="&quot;Basic&quot;"/>
                                          <item value="&quot;Standard&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="tier" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier">
                                        <enum>
                                          <item value="&quot;Global&quot;"/>
                                          <item value="&quot;Regional&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                  </prop>
                                  <prop type="@SubResource_create" name="subnet" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="@SubResource_create" name="networkSecurityGroup" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup"/>
                            <prop type="boolean" name="primary" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.primary"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="networkInterfaces" arg="$parameters.properties.networkProfile.networkInterfaces">
                        <item type="object">
                          <prop type="string" name="id" arg="$parameters.properties.networkProfile.networkInterfaces[].id"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="deleteOption" arg="$parameters.properties.networkProfile.networkInterfaces[].properties.deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="primary" arg="$parameters.properties.networkProfile.networkInterfaces[].properties.primary"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="osProfile" arg="$parameters.properties.osProfile">
                      <prop type="string" name="adminPassword" arg="$parameters.properties.osProfile.adminPassword" secret="True"/>
                      <prop type="string" name="adminUsername" arg="$parameters.properties.osProfile.adminUsername"/>
                      <prop type="boolean" name="allowExtensionOperations" arg="$parameters.properties.osProfile.allowExtensionOperations"/>
                      <prop type="string" name="computerName" arg="$parameters.properties.osProfile.computerName"/>
                      <prop type="string" name="customData" arg="$parameters.properties.osProfile.customData"/>
                      <prop type="object" name="linuxConfiguration" arg="$parameters.properties.osProfile.linuxConfiguration">
                        <prop type="boolean" name="disablePasswordAuthentication" arg="$parameters.properties.osProfile.linuxConfiguration.disablePasswordAuthentication"/>
                        <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="$parameters.properties.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates"/>
                        <prop type="object" name="patchSettings" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings">
                          <prop type="string" name="assessmentMode" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.assessmentMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="automaticByPlatformSettings" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings">
                            <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                            <prop type="string" name="rebootSetting" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                              <enum>
                                <item value="&quot;Always&quot;"/>
                                <item value="&quot;IfRequired&quot;"/>
                                <item value="&quot;Never&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="patchMode" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.patchMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="boolean" name="provisionVMAgent" arg="$parameters.properties.osProfile.linuxConfiguration.provisionVMAgent"/>
                        <prop type="object" name="ssh" arg="$parameters.properties.osProfile.linuxConfiguration.ssh">
                          <prop type="array<object>" name="publicKeys" arg="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys" identifiers="path">
                            <item type="object">
                              <prop type="string" name="keyData" arg="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].keyData"/>
                              <prop type="string" name="path" arg="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].path"/>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="boolean" name="requireGuestProvisionSignal" arg="$parameters.properties.osProfile.requireGuestProvisionSignal"/>
                      <prop type="array<object>" name="secrets" arg="$parameters.properties.osProfile.secrets">
                        <item type="object">
                          <prop type="@SubResource_create" name="sourceVault" arg="$parameters.properties.osProfile.secrets[].sourceVault"/>
                          <prop type="array<object>" name="vaultCertificates" arg="$parameters.properties.osProfile.secrets[].vaultCertificates" identifiers="certificateUrl">
                            <item type="object">
                              <prop type="string" name="certificateStore" arg="$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateStore"/>
                              <prop type="string" name="certificateUrl" arg="$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateUrl"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="windowsConfiguration" arg="$parameters.properties.osProfile.windowsConfiguration">
                        <prop type="array<object>" name="additionalUnattendContent" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent">
                          <item type="object">
                            <prop type="string" name="componentName" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].componentName">
                              <enum>
                                <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="content" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].content"/>
                            <prop type="string" name="passName" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].passName">
                              <enum>
                                <item value="&quot;OobeSystem&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="settingName" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].settingName">
                              <enum>
                                <item value="&quot;AutoLogon&quot;"/>
                                <item value="&quot;FirstLogonCommands&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="boolean" name="enableAutomaticUpdates" arg="$parameters.properties.osProfile.windowsConfiguration.enableAutomaticUpdates"/>
                        <prop type="object" name="patchSettings" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings">
                          <prop type="string" name="assessmentMode" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.assessmentMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="automaticByPlatformSettings" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings">
                            <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                            <prop type="string" name="rebootSetting" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                              <enum>
                                <item value="&quot;Always&quot;"/>
                                <item value="&quot;IfRequired&quot;"/>
                                <item value="&quot;Never&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enableHotpatching" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching"/>
                          <prop type="string" name="patchMode" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.patchMode">
                            <enum>
                              <item value="&quot;AutomaticByOS&quot;"/>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;Manual&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="boolean" name="provisionVMAgent" arg="$parameters.properties.osProfile.windowsConfiguration.provisionVMAgent"/>
                        <prop type="string" name="timeZone" arg="$parameters.properties.osProfile.windowsConfiguration.timeZone"/>
                        <prop type="object" name="winRM" arg="$parameters.properties.osProfile.windowsConfiguration.winRM">
                          <prop type="array<object>" name="listeners" arg="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners">
                            <item type="object">
                              <prop type="string" name="certificateUrl" arg="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl"/>
                              <prop type="string" name="protocol" arg="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].protocol">
                                <enum>
                                  <item value="&quot;Http&quot;"/>
                                  <item value="&quot;Https&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer32" name="platformFaultDomain" arg="$parameters.properties.platformFaultDomain"/>
                    <prop type="string" name="priority" arg="$parameters.properties.priority">
                      <enum>
                        <item value="&quot;Low&quot;"/>
                        <item value="&quot;Regular&quot;"/>
                        <item value="&quot;Spot&quot;"/>
                      </enum>
                    </prop>
                    <prop type="@SubResource_create" name="proximityPlacementGroup" arg="$parameters.properties.proximityPlacementGroup"/>
                    <prop type="object" name="scheduledEventsPolicy" arg="$parameters.properties.scheduledEventsPolicy">
                      <prop type="object" name="scheduledEventsAdditionalPublishingTargets" arg="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets">
                        <prop type="object" name="eventGridAndResourceGraph" arg="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph">
                          <prop type="boolean" name="enable" arg="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph.enable"/>
                        </prop>
                      </prop>
                      <prop type="object" name="userInitiatedReboot" arg="$parameters.properties.scheduledEventsPolicy.userInitiatedReboot">
                        <prop type="boolean" name="automaticallyApprove" arg="$parameters.properties.scheduledEventsPolicy.userInitiatedReboot.automaticallyApprove"/>
                      </prop>
                      <prop type="object" name="userInitiatedRedeploy" arg="$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy">
                        <prop type="boolean" name="automaticallyApprove" arg="$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy.automaticallyApprove"/>
                      </prop>
                    </prop>
                    <prop type="object" name="scheduledEventsProfile" arg="$parameters.properties.scheduledEventsProfile">
                      <prop type="object" name="osImageNotificationProfile" arg="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile">
                        <prop type="boolean" name="enable" arg="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.enable"/>
                        <prop type="string" name="notBeforeTimeout" arg="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout"/>
                      </prop>
                      <prop type="object" name="terminateNotificationProfile" arg="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile">
                        <prop type="boolean" name="enable" arg="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.enable"/>
                        <prop type="string" name="notBeforeTimeout" arg="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout"/>
                      </prop>
                    </prop>
                    <prop type="object" name="securityProfile" arg="$parameters.properties.securityProfile">
                      <prop type="boolean" name="encryptionAtHost" arg="$parameters.properties.securityProfile.encryptionAtHost"/>
                      <prop type="object" name="encryptionIdentity" arg="$parameters.properties.securityProfile.encryptionIdentity">
                        <prop type="string" name="userAssignedIdentityResourceId" arg="$parameters.properties.securityProfile.encryptionIdentity.userAssignedIdentityResourceId"/>
                      </prop>
                      <prop type="object" name="proxyAgentSettings" arg="$parameters.properties.securityProfile.proxyAgentSettings">
                        <prop type="boolean" name="enabled" arg="$parameters.properties.securityProfile.proxyAgentSettings.enabled"/>
                        <prop type="@HostEndpointSettings_create" name="imds" arg="$parameters.properties.securityProfile.proxyAgentSettings.imds"/>
                        <prop type="integer32" name="keyIncarnationId" arg="$parameters.properties.securityProfile.proxyAgentSettings.keyIncarnationId"/>
                        <prop type="string" name="mode" arg="$parameters.properties.securityProfile.proxyAgentSettings.mode">
                          <enum>
                            <item value="&quot;Audit&quot;"/>
                            <item value="&quot;Enforce&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="wireServer" arg="$parameters.properties.securityProfile.proxyAgentSettings.wireServer" cls="HostEndpointSettings_create">
                          <prop type="string" name="inVMAccessControlProfileReferenceId" arg="@HostEndpointSettings_create.inVMAccessControlProfileReferenceId"/>
                          <prop type="string" name="mode" arg="@HostEndpointSettings_create.mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="securityType" arg="$parameters.properties.securityProfile.securityType">
                        <enum>
                          <item value="&quot;ConfidentialVM&quot;"/>
                          <item value="&quot;TrustedLaunch&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="uefiSettings" arg="$parameters.properties.securityProfile.uefiSettings">
                        <prop type="boolean" name="secureBootEnabled" arg="$parameters.properties.securityProfile.uefiSettings.secureBootEnabled"/>
                        <prop type="boolean" name="vTpmEnabled" arg="$parameters.properties.securityProfile.uefiSettings.vTpmEnabled"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageProfile" arg="$parameters.properties.storageProfile">
                      <prop type="boolean" name="alignRegionalDisksToVMZone" arg="$parameters.properties.storageProfile.alignRegionalDisksToVMZone"/>
                      <prop type="array<object>" name="dataDisks" arg="$parameters.properties.storageProfile.dataDisks" identifiers="lun">
                        <item type="object">
                          <prop type="string" name="caching" arg="$parameters.properties.storageProfile.dataDisks[].caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" arg="$parameters.properties.storageProfile.dataDisks[].createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Copy&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                              <item value="&quot;Restore&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption" arg="$parameters.properties.storageProfile.dataDisks[].deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="detachOption" arg="$parameters.properties.storageProfile.dataDisks[].detachOption">
                            <enum>
                              <item value="&quot;ForceDetach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="integer32" name="diskSizeGB" arg="$parameters.properties.storageProfile.dataDisks[].diskSizeGB"/>
                          <prop type="@VirtualHardDisk_create" name="image" arg="$parameters.properties.storageProfile.dataDisks[].image"/>
                          <prop type="integer32" name="lun" arg="$parameters.properties.storageProfile.dataDisks[].lun" required="True"/>
                          <prop type="@ManagedDiskParameters_create" name="managedDisk" arg="$parameters.properties.storageProfile.dataDisks[].managedDisk"/>
                          <prop type="string" name="name" arg="$parameters.properties.storageProfile.dataDisks[].name"/>
                          <prop type="object" name="sourceResource" arg="$parameters.properties.storageProfile.dataDisks[].sourceResource">
                            <prop type="string" name="id" arg="$parameters.properties.storageProfile.dataDisks[].sourceResource.id"/>
                          </prop>
                          <prop type="boolean" name="toBeDetached" arg="$parameters.properties.storageProfile.dataDisks[].toBeDetached"/>
                          <prop type="@VirtualHardDisk_create" name="vhd" arg="$parameters.properties.storageProfile.dataDisks[].vhd"/>
                          <prop type="boolean" name="writeAcceleratorEnabled" arg="$parameters.properties.storageProfile.dataDisks[].writeAcceleratorEnabled"/>
                        </item>
                      </prop>
                      <prop type="string" name="diskControllerType" arg="$parameters.properties.storageProfile.diskControllerType">
                        <enum>
                          <item value="&quot;NVMe&quot;"/>
                          <item value="&quot;SCSI&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="imageReference" arg="$parameters.properties.storageProfile.imageReference">
                        <prop type="string" name="communityGalleryImageId" arg="$parameters.properties.storageProfile.imageReference.communityGalleryImageId"/>
                        <prop type="string" name="id" arg="$parameters.properties.storageProfile.imageReference.id"/>
                        <prop type="string" name="offer" arg="$parameters.properties.storageProfile.imageReference.offer"/>
                        <prop type="string" name="publisher" arg="$parameters.properties.storageProfile.imageReference.publisher"/>
                        <prop type="string" name="sharedGalleryImageId" arg="$parameters.properties.storageProfile.imageReference.sharedGalleryImageId"/>
                        <prop type="string" name="sku" arg="$parameters.properties.storageProfile.imageReference.sku"/>
                        <prop type="string" name="version" arg="$parameters.properties.storageProfile.imageReference.version"/>
                      </prop>
                      <prop type="object" name="osDisk" arg="$parameters.properties.storageProfile.osDisk">
                        <prop type="string" name="caching" arg="$parameters.properties.storageProfile.osDisk.caching">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="createOption" arg="$parameters.properties.storageProfile.osDisk.createOption" required="True">
                          <enum>
                            <item value="&quot;Attach&quot;"/>
                            <item value="&quot;Copy&quot;"/>
                            <item value="&quot;Empty&quot;"/>
                            <item value="&quot;FromImage&quot;"/>
                            <item value="&quot;Restore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption" arg="$parameters.properties.storageProfile.osDisk.deleteOption">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Detach&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="diffDiskSettings" arg="$parameters.properties.storageProfile.osDisk.diffDiskSettings">
                          <prop type="string" name="option" arg="$parameters.properties.storageProfile.osDisk.diffDiskSettings.option">
                            <enum>
                              <item value="&quot;Local&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="placement" arg="$parameters.properties.storageProfile.osDisk.diffDiskSettings.placement">
                            <enum>
                              <item value="&quot;CacheDisk&quot;"/>
                              <item value="&quot;NvmeDisk&quot;"/>
                              <item value="&quot;ResourceDisk&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="integer32" name="diskSizeGB" arg="$parameters.properties.storageProfile.osDisk.diskSizeGB"/>
                        <prop type="object" name="encryptionSettings" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings">
                          <prop type="object" name="diskEncryptionKey" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey">
                            <prop type="string" name="secretUrl" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl" required="True"/>
                            <prop type="object" name="sourceVault" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault" required="True" cls="SubResource_create">
                              <prop type="string" name="id" arg="@SubResource_create.id"/>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enabled" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.enabled"/>
                          <prop type="object" name="keyEncryptionKey" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey">
                            <prop type="string" name="keyUrl" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl" required="True"/>
                            <prop type="@SubResource_create" name="sourceVault" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault" required="True"/>
                          </prop>
                        </prop>
                        <prop type="@VirtualHardDisk_create" name="image" arg="$parameters.properties.storageProfile.osDisk.image"/>
                        <prop type="object" name="managedDisk" arg="$parameters.properties.storageProfile.osDisk.managedDisk" cls="ManagedDiskParameters_create">
                          <prop type="object" name="diskEncryptionSet" arg="@ManagedDiskParameters_create.diskEncryptionSet" cls="DiskEncryptionSetParameters_create">
                            <prop type="string" name="id" arg="@DiskEncryptionSetParameters_create.id"/>
                          </prop>
                          <prop type="string" name="id" arg="@ManagedDiskParameters_create.id"/>
                          <prop type="object" name="securityProfile" arg="@ManagedDiskParameters_create.securityProfile">
                            <prop type="@DiskEncryptionSetParameters_create" name="diskEncryptionSet" arg="@ManagedDiskParameters_create.securityProfile.diskEncryptionSet"/>
                            <prop type="string" name="securityEncryptionType" arg="@ManagedDiskParameters_create.securityProfile.securityEncryptionType">
                              <enum>
                                <item value="&quot;DiskWithVMGuestState&quot;"/>
                                <item value="&quot;NonPersistedTPM&quot;"/>
                                <item value="&quot;VMGuestStateOnly&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="storageAccountType" arg="@ManagedDiskParameters_create.storageAccountType">
                            <enum>
                              <item value="&quot;PremiumV2_LRS&quot;"/>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Premium_ZRS&quot;"/>
                              <item value="&quot;StandardSSD_LRS&quot;"/>
                              <item value="&quot;StandardSSD_ZRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;UltraSSD_LRS&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.storageProfile.osDisk.name"/>
                        <prop type="string" name="osType" arg="$parameters.properties.storageProfile.osDisk.osType">
                          <enum>
                            <item value="&quot;Linux&quot;"/>
                            <item value="&quot;Windows&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="vhd" arg="$parameters.properties.storageProfile.osDisk.vhd" cls="VirtualHardDisk_create">
                          <prop type="string" name="uri" arg="@VirtualHardDisk_create.uri"/>
                        </prop>
                        <prop type="boolean" name="writeAcceleratorEnabled" arg="$parameters.properties.storageProfile.osDisk.writeAcceleratorEnabled"/>
                      </prop>
                    </prop>
                    <prop type="string" name="userData" arg="$parameters.properties.userData"/>
                    <prop type="@SubResource_create" name="virtualMachineScaleSet" arg="$parameters.properties.virtualMachineScaleSet"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop type="array<string>" name="zones" arg="$parameters.zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="managedBy"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="placement">
                    <prop type="array<string>" name="excludeZones">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="includeZones">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="zonePlacementPolicy">
                      <enum>
                        <item value="&quot;Any&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="plan">
                    <prop type="string" name="name"/>
                    <prop type="string" name="product"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalCapabilities">
                      <prop type="boolean" name="hibernationEnabled"/>
                      <prop type="boolean" name="ultraSSDEnabled"/>
                    </prop>
                    <prop type="object" name="applicationProfile">
                      <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                        <item type="object">
                          <prop type="string" name="configurationReference"/>
                          <prop type="boolean" name="enableAutomaticUpgrade"/>
                          <prop type="integer32" name="order"/>
                          <prop type="string" name="packageReferenceId" required="True"/>
                          <prop type="string" name="tags"/>
                          <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="@SubResource_read" name="availabilitySet"/>
                    <prop type="object" name="billingProfile">
                      <prop type="float64" name="maxPrice"/>
                    </prop>
                    <prop type="object" name="capacityReservation">
                      <prop type="@SubResource_read" name="capacityReservationGroup"/>
                    </prop>
                    <prop type="object" name="diagnosticsProfile">
                      <prop type="object" name="bootDiagnostics">
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="storageUri"/>
                      </prop>
                    </prop>
                    <prop type="string" name="evictionPolicy">
                      <enum>
                        <item value="&quot;Deallocate&quot;"/>
                        <item value="&quot;Delete&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="extensionsTimeBudget"/>
                    <prop type="object" name="hardwareProfile">
                      <prop type="string" name="vmSize">
                        <enum>
                          <item value="&quot;Basic_A0&quot;"/>
                          <item value="&quot;Basic_A1&quot;"/>
                          <item value="&quot;Basic_A2&quot;"/>
                          <item value="&quot;Basic_A3&quot;"/>
                          <item value="&quot;Basic_A4&quot;"/>
                          <item value="&quot;Standard_A0&quot;"/>
                          <item value="&quot;Standard_A1&quot;"/>
                          <item value="&quot;Standard_A10&quot;"/>
                          <item value="&quot;Standard_A11&quot;"/>
                          <item value="&quot;Standard_A1_v2&quot;"/>
                          <item value="&quot;Standard_A2&quot;"/>
                          <item value="&quot;Standard_A2_v2&quot;"/>
                          <item value="&quot;Standard_A2m_v2&quot;"/>
                          <item value="&quot;Standard_A3&quot;"/>
                          <item value="&quot;Standard_A4&quot;"/>
                          <item value="&quot;Standard_A4_v2&quot;"/>
                          <item value="&quot;Standard_A4m_v2&quot;"/>
                          <item value="&quot;Standard_A5&quot;"/>
                          <item value="&quot;Standard_A6&quot;"/>
                          <item value="&quot;Standard_A7&quot;"/>
                          <item value="&quot;Standard_A8&quot;"/>
                          <item value="&quot;Standard_A8_v2&quot;"/>
                          <item value="&quot;Standard_A8m_v2&quot;"/>
                          <item value="&quot;Standard_A9&quot;"/>
                          <item value="&quot;Standard_B1ms&quot;"/>
                          <item value="&quot;Standard_B1s&quot;"/>
                          <item value="&quot;Standard_B2ms&quot;"/>
                          <item value="&quot;Standard_B2s&quot;"/>
                          <item value="&quot;Standard_B4ms&quot;"/>
                          <item value="&quot;Standard_B8ms&quot;"/>
                          <item value="&quot;Standard_D1&quot;"/>
                          <item value="&quot;Standard_D11&quot;"/>
                          <item value="&quot;Standard_D11_v2&quot;"/>
                          <item value="&quot;Standard_D12&quot;"/>
                          <item value="&quot;Standard_D12_v2&quot;"/>
                          <item value="&quot;Standard_D13&quot;"/>
                          <item value="&quot;Standard_D13_v2&quot;"/>
                          <item value="&quot;Standard_D14&quot;"/>
                          <item value="&quot;Standard_D14_v2&quot;"/>
                          <item value="&quot;Standard_D15_v2&quot;"/>
                          <item value="&quot;Standard_D16_v3&quot;"/>
                          <item value="&quot;Standard_D16s_v3&quot;"/>
                          <item value="&quot;Standard_D1_v2&quot;"/>
                          <item value="&quot;Standard_D2&quot;"/>
                          <item value="&quot;Standard_D2_v2&quot;"/>
                          <item value="&quot;Standard_D2_v3&quot;"/>
                          <item value="&quot;Standard_D2s_v3&quot;"/>
                          <item value="&quot;Standard_D3&quot;"/>
                          <item value="&quot;Standard_D32_v3&quot;"/>
                          <item value="&quot;Standard_D32s_v3&quot;"/>
                          <item value="&quot;Standard_D3_v2&quot;"/>
                          <item value="&quot;Standard_D4&quot;"/>
                          <item value="&quot;Standard_D4_v2&quot;"/>
                          <item value="&quot;Standard_D4_v3&quot;"/>
                          <item value="&quot;Standard_D4s_v3&quot;"/>
                          <item value="&quot;Standard_D5_v2&quot;"/>
                          <item value="&quot;Standard_D64_v3&quot;"/>
                          <item value="&quot;Standard_D64s_v3&quot;"/>
                          <item value="&quot;Standard_D8_v3&quot;"/>
                          <item value="&quot;Standard_D8s_v3&quot;"/>
                          <item value="&quot;Standard_DS1&quot;"/>
                          <item value="&quot;Standard_DS11&quot;"/>
                          <item value="&quot;Standard_DS11_v2&quot;"/>
                          <item value="&quot;Standard_DS12&quot;"/>
                          <item value="&quot;Standard_DS12_v2&quot;"/>
                          <item value="&quot;Standard_DS13&quot;"/>
                          <item value="&quot;Standard_DS13-2_v2&quot;"/>
                          <item value="&quot;Standard_DS13-4_v2&quot;"/>
                          <item value="&quot;Standard_DS13_v2&quot;"/>
                          <item value="&quot;Standard_DS14&quot;"/>
                          <item value="&quot;Standard_DS14-4_v2&quot;"/>
                          <item value="&quot;Standard_DS14-8_v2&quot;"/>
                          <item value="&quot;Standard_DS14_v2&quot;"/>
                          <item value="&quot;Standard_DS15_v2&quot;"/>
                          <item value="&quot;Standard_DS1_v2&quot;"/>
                          <item value="&quot;Standard_DS2&quot;"/>
                          <item value="&quot;Standard_DS2_v2&quot;"/>
                          <item value="&quot;Standard_DS3&quot;"/>
                          <item value="&quot;Standard_DS3_v2&quot;"/>
                          <item value="&quot;Standard_DS4&quot;"/>
                          <item value="&quot;Standard_DS4_v2&quot;"/>
                          <item value="&quot;Standard_DS5_v2&quot;"/>
                          <item value="&quot;Standard_E16_v3&quot;"/>
                          <item value="&quot;Standard_E16s_v3&quot;"/>
                          <item value="&quot;Standard_E2_v3&quot;"/>
                          <item value="&quot;Standard_E2s_v3&quot;"/>
                          <item value="&quot;Standard_E32-16_v3&quot;"/>
                          <item value="&quot;Standard_E32-8s_v3&quot;"/>
                          <item value="&quot;Standard_E32_v3&quot;"/>
                          <item value="&quot;Standard_E32s_v3&quot;"/>
                          <item value="&quot;Standard_E4_v3&quot;"/>
                          <item value="&quot;Standard_E4s_v3&quot;"/>
                          <item value="&quot;Standard_E64-16s_v3&quot;"/>
                          <item value="&quot;Standard_E64-32s_v3&quot;"/>
                          <item value="&quot;Standard_E64_v3&quot;"/>
                          <item value="&quot;Standard_E64s_v3&quot;"/>
                          <item value="&quot;Standard_E8_v3&quot;"/>
                          <item value="&quot;Standard_E8s_v3&quot;"/>
                          <item value="&quot;Standard_F1&quot;"/>
                          <item value="&quot;Standard_F16&quot;"/>
                          <item value="&quot;Standard_F16s&quot;"/>
                          <item value="&quot;Standard_F16s_v2&quot;"/>
                          <item value="&quot;Standard_F1s&quot;"/>
                          <item value="&quot;Standard_F2&quot;"/>
                          <item value="&quot;Standard_F2s&quot;"/>
                          <item value="&quot;Standard_F2s_v2&quot;"/>
                          <item value="&quot;Standard_F32s_v2&quot;"/>
                          <item value="&quot;Standard_F4&quot;"/>
                          <item value="&quot;Standard_F4s&quot;"/>
                          <item value="&quot;Standard_F4s_v2&quot;"/>
                          <item value="&quot;Standard_F64s_v2&quot;"/>
                          <item value="&quot;Standard_F72s_v2&quot;"/>
                          <item value="&quot;Standard_F8&quot;"/>
                          <item value="&quot;Standard_F8s&quot;"/>
                          <item value="&quot;Standard_F8s_v2&quot;"/>
                          <item value="&quot;Standard_G1&quot;"/>
                          <item value="&quot;Standard_G2&quot;"/>
                          <item value="&quot;Standard_G3&quot;"/>
                          <item value="&quot;Standard_G4&quot;"/>
                          <item value="&quot;Standard_G5&quot;"/>
                          <item value="&quot;Standard_GS1&quot;"/>
                          <item value="&quot;Standard_GS2&quot;"/>
                          <item value="&quot;Standard_GS3&quot;"/>
                          <item value="&quot;Standard_GS4&quot;"/>
                          <item value="&quot;Standard_GS4-4&quot;"/>
                          <item value="&quot;Standard_GS4-8&quot;"/>
                          <item value="&quot;Standard_GS5&quot;"/>
                          <item value="&quot;Standard_GS5-16&quot;"/>
                          <item value="&quot;Standard_GS5-8&quot;"/>
                          <item value="&quot;Standard_H16&quot;"/>
                          <item value="&quot;Standard_H16m&quot;"/>
                          <item value="&quot;Standard_H16mr&quot;"/>
                          <item value="&quot;Standard_H16r&quot;"/>
                          <item value="&quot;Standard_H8&quot;"/>
                          <item value="&quot;Standard_H8m&quot;"/>
                          <item value="&quot;Standard_L16s&quot;"/>
                          <item value="&quot;Standard_L32s&quot;"/>
                          <item value="&quot;Standard_L4s&quot;"/>
                          <item value="&quot;Standard_L8s&quot;"/>
                          <item value="&quot;Standard_M128-32ms&quot;"/>
                          <item value="&quot;Standard_M128-64ms&quot;"/>
                          <item value="&quot;Standard_M128ms&quot;"/>
                          <item value="&quot;Standard_M128s&quot;"/>
                          <item value="&quot;Standard_M64-16ms&quot;"/>
                          <item value="&quot;Standard_M64-32ms&quot;"/>
                          <item value="&quot;Standard_M64ms&quot;"/>
                          <item value="&quot;Standard_M64s&quot;"/>
                          <item value="&quot;Standard_NC12&quot;"/>
                          <item value="&quot;Standard_NC12s_v2&quot;"/>
                          <item value="&quot;Standard_NC12s_v3&quot;"/>
                          <item value="&quot;Standard_NC24&quot;"/>
                          <item value="&quot;Standard_NC24r&quot;"/>
                          <item value="&quot;Standard_NC24rs_v2&quot;"/>
                          <item value="&quot;Standard_NC24rs_v3&quot;"/>
                          <item value="&quot;Standard_NC24s_v2&quot;"/>
                          <item value="&quot;Standard_NC24s_v3&quot;"/>
                          <item value="&quot;Standard_NC6&quot;"/>
                          <item value="&quot;Standard_NC6s_v2&quot;"/>
                          <item value="&quot;Standard_NC6s_v3&quot;"/>
                          <item value="&quot;Standard_ND12s&quot;"/>
                          <item value="&quot;Standard_ND24rs&quot;"/>
                          <item value="&quot;Standard_ND24s&quot;"/>
                          <item value="&quot;Standard_ND6s&quot;"/>
                          <item value="&quot;Standard_NV12&quot;"/>
                          <item value="&quot;Standard_NV24&quot;"/>
                          <item value="&quot;Standard_NV6&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="vmSizeProperties">
                        <prop type="integer32" name="vCPUsAvailable"/>
                        <prop type="integer32" name="vCPUsPerCore"/>
                      </prop>
                    </prop>
                    <prop type="@SubResource_read" name="host"/>
                    <prop type="@SubResource_read" name="hostGroup"/>
                    <prop readOnly="True" type="object" name="instanceView">
                      <prop readOnly="True" type="string" name="assignedHost"/>
                      <prop type="object" name="bootDiagnostics">
                        <prop readOnly="True" type="string" name="consoleScreenshotBlobUri"/>
                        <prop readOnly="True" type="string" name="serialConsoleLogBlobUri"/>
                        <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                      </prop>
                      <prop type="string" name="computerName"/>
                      <prop type="array<object>" name="disks" identifiers="name">
                        <item type="object">
                          <prop type="array<@DiskEncryptionSettings_read>" name="encryptionSettings">
                            <item type="@DiskEncryptionSettings_read"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<@InstanceViewStatus_read>" name="statuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="extensions" identifiers="name type">
                        <item type="object" cls="VirtualMachineExtensionInstanceView_read">
                          <prop type="string" name="name"/>
                          <prop type="array<@InstanceViewStatus_read>" name="statuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="array<@InstanceViewStatus_read>" name="substatuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="string" name="type"/>
                          <prop type="string" name="typeHandlerVersion"/>
                        </item>
                      </prop>
                      <prop type="string" name="hyperVGeneration">
                        <enum>
                          <item value="&quot;V1&quot;"/>
                          <item value="&quot;V2&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="boolean" name="isVMInStandbyPool"/>
                      <prop type="object" name="maintenanceRedeployStatus">
                        <prop type="boolean" name="isCustomerInitiatedMaintenanceAllowed"/>
                        <prop type="string" name="lastOperationMessage"/>
                        <prop type="string" name="lastOperationResultCode">
                          <enum>
                            <item value="&quot;MaintenanceAborted&quot;"/>
                            <item value="&quot;MaintenanceCompleted&quot;"/>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;RetryLater&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="maintenanceWindowEndTime"/>
                        <prop type="dateTime" name="maintenanceWindowStartTime"/>
                        <prop type="dateTime" name="preMaintenanceWindowEndTime"/>
                        <prop type="dateTime" name="preMaintenanceWindowStartTime"/>
                      </prop>
                      <prop type="string" name="osName"/>
                      <prop type="string" name="osVersion"/>
                      <prop type="object" name="patchStatus">
                        <prop type="object" name="availablePatchSummary">
                          <prop readOnly="True" type="string" name="assessmentActivityId"/>
                          <prop readOnly="True" type="integer32" name="criticalAndSecurityPatchCount"/>
                          <prop readOnly="True" type="object" name="error" cls="ApiError_read">
                            <prop type="string" name="code"/>
                            <prop type="array<object>" name="details" identifiers="message target">
                              <item type="object">
                                <prop type="string" name="code"/>
                                <prop type="string" name="message"/>
                                <prop type="string" name="target"/>
                              </item>
                            </prop>
                            <prop type="object" name="innererror">
                              <prop type="string" name="errordetail"/>
                              <prop type="string" name="exceptiontype"/>
                            </prop>
                            <prop type="string" name="message"/>
                            <prop type="string" name="target"/>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                          <prop readOnly="True" type="integer32" name="otherPatchCount"/>
                          <prop readOnly="True" type="boolean" name="rebootPending"/>
                          <prop readOnly="True" type="dateTime" name="startTime"/>
                          <prop readOnly="True" type="string" name="status">
                            <enum>
                              <item value="&quot;CompletedWithWarnings&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="array<@InstanceViewStatus_read>" name="configurationStatuses">
                          <item type="@InstanceViewStatus_read"/>
                        </prop>
                        <prop type="object" name="lastPatchInstallationSummary">
                          <prop readOnly="True" type="@ApiError_read" name="error"/>
                          <prop readOnly="True" type="integer32" name="excludedPatchCount"/>
                          <prop readOnly="True" type="integer32" name="failedPatchCount"/>
                          <prop readOnly="True" type="string" name="installationActivityId"/>
                          <prop readOnly="True" type="integer32" name="installedPatchCount"/>
                          <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                          <prop readOnly="True" type="boolean" name="maintenanceWindowExceeded"/>
                          <prop readOnly="True" type="integer32" name="notSelectedPatchCount"/>
                          <prop readOnly="True" type="integer32" name="pendingPatchCount"/>
                          <prop readOnly="True" type="dateTime" name="startTime"/>
                          <prop readOnly="True" type="string" name="status">
                            <enum>
                              <item value="&quot;CompletedWithWarnings&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="integer32" name="platformFaultDomain"/>
                      <prop type="integer32" name="platformUpdateDomain"/>
                      <prop type="string" name="rdpThumbPrint"/>
                      <prop type="array<@InstanceViewStatus_read>" name="statuses">
                        <item type="@InstanceViewStatus_read"/>
                      </prop>
                      <prop type="object" name="vmAgent">
                        <prop type="array<object>" name="extensionHandlers">
                          <item type="object">
                            <prop type="object" name="status" cls="InstanceViewStatus_read">
                              <prop type="string" name="code"/>
                              <prop type="string" name="displayStatus"/>
                              <prop type="string" name="level">
                                <enum>
                                  <item value="&quot;Error&quot;"/>
                                  <item value="&quot;Info&quot;"/>
                                  <item value="&quot;Warning&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="message"/>
                              <prop type="dateTime" name="time"/>
                            </prop>
                            <prop type="string" name="type"/>
                            <prop type="string" name="typeHandlerVersion"/>
                          </item>
                        </prop>
                        <prop type="array<@InstanceViewStatus_read>" name="statuses">
                          <item type="@InstanceViewStatus_read"/>
                        </prop>
                        <prop type="string" name="vmAgentVersion"/>
                      </prop>
                      <prop readOnly="True" type="object" name="vmHealth">
                        <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                      </prop>
                    </prop>
                    <prop type="string" name="licenseType"/>
                    <prop type="object" name="networkProfile">
                      <prop type="string" name="networkApiVersion">
                        <enum>
                          <item value="&quot;2020-11-01&quot;"/>
                          <item value="&quot;2022-11-01&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="networkInterfaceConfigurations" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="auxiliaryMode">
                              <enum>
                                <item value="&quot;AcceleratedConnections&quot;"/>
                                <item value="&quot;Floating&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="auxiliarySku">
                              <enum>
                                <item value="&quot;A1&quot;"/>
                                <item value="&quot;A2&quot;"/>
                                <item value="&quot;A4&quot;"/>
                                <item value="&quot;A8&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="disableTcpStateTracking"/>
                            <prop type="object" name="dnsSettings">
                              <prop type="array<string>" name="dnsServers">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="@SubResource_read" name="dscpConfiguration"/>
                            <prop type="boolean" name="enableAcceleratedNetworking"/>
                            <prop type="boolean" name="enableFpga"/>
                            <prop type="boolean" name="enableIPForwarding"/>
                            <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                              <item type="object">
                                <prop type="string" name="name" required="True"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop type="boolean" name="primary"/>
                                  <prop type="string" name="privateIPAddressVersion">
                                    <enum>
                                      <item value="&quot;IPv4&quot;"/>
                                      <item value="&quot;IPv6&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="publicIPAddressConfiguration">
                                    <prop type="string" name="name" required="True"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="deleteOption">
                                        <enum>
                                          <item value="&quot;Delete&quot;"/>
                                          <item value="&quot;Detach&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="dnsSettings">
                                        <prop type="string" name="domainNameLabel" required="True"/>
                                        <prop type="string" name="domainNameLabelScope">
                                          <enum>
                                            <item value="&quot;NoReuse&quot;"/>
                                            <item value="&quot;ResourceGroupReuse&quot;"/>
                                            <item value="&quot;SubscriptionReuse&quot;"/>
                                            <item value="&quot;TenantReuse&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                      <prop type="integer32" name="idleTimeoutInMinutes"/>
                                      <prop type="array<object>" name="ipTags">
                                        <item type="object">
                                          <prop type="string" name="ipTagType"/>
                                          <prop type="string" name="tag"/>
                                        </item>
                                      </prop>
                                      <prop type="string" name="publicIPAddressVersion">
                                        <enum>
                                          <item value="&quot;IPv4&quot;"/>
                                          <item value="&quot;IPv6&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="publicIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="@SubResource_read" name="publicIPPrefix"/>
                                    </prop>
                                    <prop type="object" name="sku">
                                      <prop type="string" name="name">
                                        <enum>
                                          <item value="&quot;Basic&quot;"/>
                                          <item value="&quot;Standard&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="tier">
                                        <enum>
                                          <item value="&quot;Global&quot;"/>
                                          <item value="&quot;Regional&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                  </prop>
                                  <prop type="@SubResource_read" name="subnet"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="@SubResource_read" name="networkSecurityGroup"/>
                            <prop type="boolean" name="primary"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="networkInterfaces">
                        <item type="object">
                          <prop type="string" name="id"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="primary"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="osProfile">
                      <prop type="string" name="adminPassword" secret="True"/>
                      <prop type="string" name="adminUsername"/>
                      <prop type="boolean" name="allowExtensionOperations"/>
                      <prop type="string" name="computerName"/>
                      <prop type="string" name="customData"/>
                      <prop type="object" name="linuxConfiguration">
                        <prop type="boolean" name="disablePasswordAuthentication"/>
                        <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                        <prop type="object" name="patchSettings">
                          <prop type="string" name="assessmentMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="automaticByPlatformSettings">
                            <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                            <prop type="string" name="rebootSetting">
                              <enum>
                                <item value="&quot;Always&quot;"/>
                                <item value="&quot;IfRequired&quot;"/>
                                <item value="&quot;Never&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="patchMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="boolean" name="provisionVMAgent"/>
                        <prop type="object" name="ssh">
                          <prop type="array<object>" name="publicKeys" identifiers="path">
                            <item type="object">
                              <prop type="string" name="keyData"/>
                              <prop type="string" name="path"/>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="boolean" name="requireGuestProvisionSignal"/>
                      <prop type="array<object>" name="secrets">
                        <item type="object">
                          <prop type="@SubResource_read" name="sourceVault"/>
                          <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                            <item type="object">
                              <prop type="string" name="certificateStore"/>
                              <prop type="string" name="certificateUrl"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="windowsConfiguration">
                        <prop type="array<object>" name="additionalUnattendContent">
                          <item type="object">
                            <prop type="string" name="componentName">
                              <enum>
                                <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="content"/>
                            <prop type="string" name="passName">
                              <enum>
                                <item value="&quot;OobeSystem&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="settingName">
                              <enum>
                                <item value="&quot;AutoLogon&quot;"/>
                                <item value="&quot;FirstLogonCommands&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="boolean" name="enableAutomaticUpdates"/>
                        <prop readOnly="True" type="boolean" name="enableVMAgentPlatformUpdates"/>
                        <prop type="object" name="patchSettings">
                          <prop type="string" name="assessmentMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="automaticByPlatformSettings">
                            <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                            <prop type="string" name="rebootSetting">
                              <enum>
                                <item value="&quot;Always&quot;"/>
                                <item value="&quot;IfRequired&quot;"/>
                                <item value="&quot;Never&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enableHotpatching"/>
                          <prop type="string" name="patchMode">
                            <enum>
                              <item value="&quot;AutomaticByOS&quot;"/>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;Manual&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="boolean" name="provisionVMAgent"/>
                        <prop type="string" name="timeZone"/>
                        <prop type="object" name="winRM">
                          <prop type="array<object>" name="listeners">
                            <item type="object">
                              <prop type="string" name="certificateUrl"/>
                              <prop type="string" name="protocol">
                                <enum>
                                  <item value="&quot;Http&quot;"/>
                                  <item value="&quot;Https&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer32" name="platformFaultDomain"/>
                    <prop type="string" name="priority">
                      <enum>
                        <item value="&quot;Low&quot;"/>
                        <item value="&quot;Regular&quot;"/>
                        <item value="&quot;Spot&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                    <prop type="object" name="scheduledEventsPolicy">
                      <prop type="object" name="scheduledEventsAdditionalPublishingTargets">
                        <prop type="object" name="eventGridAndResourceGraph">
                          <prop type="boolean" name="enable"/>
                        </prop>
                      </prop>
                      <prop type="object" name="userInitiatedReboot">
                        <prop type="boolean" name="automaticallyApprove"/>
                      </prop>
                      <prop type="object" name="userInitiatedRedeploy">
                        <prop type="boolean" name="automaticallyApprove"/>
                      </prop>
                    </prop>
                    <prop type="object" name="scheduledEventsProfile">
                      <prop type="object" name="osImageNotificationProfile">
                        <prop type="boolean" name="enable"/>
                        <prop type="string" name="notBeforeTimeout"/>
                      </prop>
                      <prop type="object" name="terminateNotificationProfile">
                        <prop type="boolean" name="enable"/>
                        <prop type="string" name="notBeforeTimeout"/>
                      </prop>
                    </prop>
                    <prop type="object" name="securityProfile">
                      <prop type="boolean" name="encryptionAtHost"/>
                      <prop type="object" name="encryptionIdentity">
                        <prop type="string" name="userAssignedIdentityResourceId"/>
                      </prop>
                      <prop type="object" name="proxyAgentSettings">
                        <prop type="boolean" name="enabled"/>
                        <prop type="@HostEndpointSettings_read" name="imds"/>
                        <prop type="integer32" name="keyIncarnationId"/>
                        <prop type="string" name="mode">
                          <enum>
                            <item value="&quot;Audit&quot;"/>
                            <item value="&quot;Enforce&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="wireServer" cls="HostEndpointSettings_read">
                          <prop type="string" name="inVMAccessControlProfileReferenceId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="securityType">
                        <enum>
                          <item value="&quot;ConfidentialVM&quot;"/>
                          <item value="&quot;TrustedLaunch&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="uefiSettings">
                        <prop type="boolean" name="secureBootEnabled"/>
                        <prop type="boolean" name="vTpmEnabled"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageProfile">
                      <prop type="boolean" name="alignRegionalDisksToVMZone"/>
                      <prop type="array<object>" name="dataDisks" identifiers="lun">
                        <item type="object">
                          <prop type="string" name="caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Copy&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                              <item value="&quot;Restore&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="detachOption">
                            <enum>
                              <item value="&quot;ForceDetach&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="integer64" name="diskIOPSReadWrite"/>
                          <prop readOnly="True" type="integer64" name="diskMBpsReadWrite"/>
                          <prop type="integer32" name="diskSizeGB"/>
                          <prop type="@VirtualHardDisk_read" name="image"/>
                          <prop type="integer32" name="lun" required="True"/>
                          <prop type="@ManagedDiskParameters_read" name="managedDisk"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="sourceResource">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="boolean" name="toBeDetached"/>
                          <prop type="@VirtualHardDisk_read" name="vhd"/>
                          <prop type="boolean" name="writeAcceleratorEnabled"/>
                        </item>
                      </prop>
                      <prop type="string" name="diskControllerType">
                        <enum>
                          <item value="&quot;NVMe&quot;"/>
                          <item value="&quot;SCSI&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="imageReference">
                        <prop type="string" name="communityGalleryImageId"/>
                        <prop readOnly="True" type="string" name="exactVersion"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="offer"/>
                        <prop type="string" name="publisher"/>
                        <prop type="string" name="sharedGalleryImageId"/>
                        <prop type="string" name="sku"/>
                        <prop type="string" name="version"/>
                      </prop>
                      <prop type="object" name="osDisk">
                        <prop type="string" name="caching">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="createOption" required="True">
                          <enum>
                            <item value="&quot;Attach&quot;"/>
                            <item value="&quot;Copy&quot;"/>
                            <item value="&quot;Empty&quot;"/>
                            <item value="&quot;FromImage&quot;"/>
                            <item value="&quot;Restore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Detach&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="diffDiskSettings">
                          <prop type="string" name="option">
                            <enum>
                              <item value="&quot;Local&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="placement">
                            <enum>
                              <item value="&quot;CacheDisk&quot;"/>
                              <item value="&quot;NvmeDisk&quot;"/>
                              <item value="&quot;ResourceDisk&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="integer32" name="diskSizeGB"/>
                        <prop type="object" name="encryptionSettings" cls="DiskEncryptionSettings_read">
                          <prop type="object" name="diskEncryptionKey" cls="KeyVaultSecretReference_read">
                            <prop type="string" name="secretUrl" required="True"/>
                            <prop type="object" name="sourceVault" required="True" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enabled"/>
                          <prop type="object" name="keyEncryptionKey">
                            <prop type="string" name="keyUrl" required="True"/>
                            <prop type="@SubResource_read" name="sourceVault" required="True"/>
                          </prop>
                        </prop>
                        <prop type="@VirtualHardDisk_read" name="image"/>
                        <prop type="object" name="managedDisk" cls="ManagedDiskParameters_read">
                          <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="string" name="id"/>
                          <prop type="object" name="securityProfile">
                            <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                            <prop type="string" name="securityEncryptionType">
                              <enum>
                                <item value="&quot;DiskWithVMGuestState&quot;"/>
                                <item value="&quot;NonPersistedTPM&quot;"/>
                                <item value="&quot;VMGuestStateOnly&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;PremiumV2_LRS&quot;"/>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Premium_ZRS&quot;"/>
                              <item value="&quot;StandardSSD_LRS&quot;"/>
                              <item value="&quot;StandardSSD_ZRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;UltraSSD_LRS&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="osType">
                          <enum>
                            <item value="&quot;Linux&quot;"/>
                            <item value="&quot;Windows&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="vhd" cls="VirtualHardDisk_read">
                          <prop type="string" name="uri"/>
                        </prop>
                        <prop type="boolean" name="writeAcceleratorEnabled"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop type="string" name="userData"/>
                    <prop type="@SubResource_read" name="virtualMachineScaleSet"/>
                    <prop readOnly="True" type="string" name="vmId"/>
                  </prop>
                  <prop readOnly="True" type="array<object>" name="resources">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="boolean" name="autoUpgradeMinorVersion"/>
                        <prop type="boolean" name="enableAutomaticUpgrade"/>
                        <prop type="string" name="forceUpdateTag"/>
                        <prop type="@VirtualMachineExtensionInstanceView_read" name="instanceView"/>
                        <prop type="object" name="protectedSettings">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="@KeyVaultSecretReference_read" name="protectedSettingsFromKeyVault"/>
                        <prop type="array<string>" name="provisionAfterExtensions">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop type="string" name="publisher"/>
                        <prop type="object" name="settings">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="boolean" name="suppressFailures"/>
                        <prop type="string" name="type"/>
                        <prop type="string" name="typeHandlerVersion"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-11-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}" version="2024-11-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Header.If-Match" options="if-match">
          <help short="The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."/>
        </arg>
        <arg type="string" var="$Header.If-None-Match" options="if-none-match">
          <help short="Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmName" options="vm-name name n" required="True" idPart="name">
          <help short="The name of the virtual machine."/>
        </arg>
      </argGroup>
      <argGroup name="Identity">
        <arg nullable="True" type="string" var="$parameters.identity.type" options="type" hide="True" group="Identity">
          <help short="The type of identity used for the virtual machine. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine."/>
          <enum>
            <item name="None" value="&quot;None&quot;"/>
            <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
            <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$parameters.identity.userAssignedIdentities" options="user-assigned-identities" hide="True" group="Identity">
          <help short="The list of user identities associated with the Virtual Machine. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
          <additionalProp>
            <item nullable="True" type="object">
              <blank value="{}"/>
            </item>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Parameters">
        <arg nullable="True" type="object" var="$parameters.extendedLocation" options="extended-location" group="Parameters">
          <help short="The extended location of the Virtual Machine."/>
          <arg nullable="True" type="string" var="$parameters.extendedLocation.name" options="name">
            <help short="The name of the extended location."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.extendedLocation.type" options="type">
            <help short="The type of the extended location."/>
            <enum>
              <item name="EdgeZone" value="&quot;EdgeZone&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.placement" options="placement" group="Parameters">
          <help short="Placement section specifies the user-defined constraints for virtual machine hardware placement. This property cannot be changed once VM is provisioned. Minimum api-version: 2024-11-01."/>
          <arg nullable="True" type="array<string>" var="$parameters.placement.excludeZones" options="exclude-zones">
            <help short="This property supplements the 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to 'Any', availability zone selected by the system must not be present in the list of availability zones passed with 'excludeZones'. If 'excludeZones' is not provided, all availability zones in region will be considered for selection."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="array<string>" var="$parameters.placement.includeZones" options="include-zones">
            <help short="This property supplements the 'zonePlacementPolicy' property. If 'zonePlacementPolicy' is set to 'Any', availability zone selected by the system must be present in the list of availability zones passed with 'includeZones'. If 'includeZones' is not provided, all availability zones in region will be considered for selection."/>
            <item nullable="True" type="string"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.placement.zonePlacementPolicy" options="zone-placement-policy">
            <help short="Specifies the policy for virtual machine's placement in availability zone. Possible values are: **Any** - An availability zone will be automatically picked by system as part of virtual machine creation."/>
            <enum>
              <item name="Any" value="&quot;Any&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.plan" options="plan" group="Parameters">
          <help short="Specifies information about the marketplace image used to create the virtual machine. This element is only used for marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic use.  In the Azure portal, find the marketplace image that you want to use and then click **Want to deploy programmatically, Get Started ->**. Enter any required information and then click **Save**."/>
          <arg nullable="True" type="string" var="$parameters.plan.name" options="name">
            <help short="The plan ID."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.plan.product" options="product">
            <help short="Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.plan.promotionCode" options="promotion-code">
            <help short="The promotion code."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.plan.publisher" options="publisher">
            <help short="The publisher ID."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
        <arg nullable="True" type="array<string>" var="$parameters.zones" options="zones" group="Parameters">
          <help short="The virtual machine zones."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$parameters.properties.additionalCapabilities" options="additional-capabilities" group="Properties">
          <help short="Specifies additional capabilities enabled or disabled on the virtual machine."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.additionalCapabilities.hibernationEnabled" options="hibernation-enabled">
            <help short="The flag that enables or disables hibernation capability on the VM."/>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.additionalCapabilities.ultraSSDEnabled" options="ultra-ssd-enabled">
            <help short="The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS storage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual machine or virtual machine scale set only if this property is enabled."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.applicationProfile" options="application-profile" group="Properties">
          <help short="Specifies the gallery applications that should be made available to the VM/VMSS."/>
          <arg nullable="True" type="array<object>" var="$parameters.properties.applicationProfile.galleryApplications" options="gallery-applications">
            <help short="Specifies the gallery applications that should be made available to the VM/VMSS"/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.applicationProfile.galleryApplications[].configurationReference" options="configuration-reference">
                <help short="Optional, Specifies the uri to an azure blob that will replace the default configuration for the package if provided"/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.applicationProfile.galleryApplications[].enableAutomaticUpgrade" options="enable-automatic-upgrade">
                <help short="If set to true, when a new Gallery Application version is available in PIR/SIG, it will be automatically updated for the VM/VMSS"/>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.applicationProfile.galleryApplications[].order" options="order">
                <help short="Optional, Specifies the order in which the packages have to be installed"/>
              </arg>
              <arg type="string" var="$parameters.properties.applicationProfile.galleryApplications[].packageReferenceId" options="package-reference-id">
                <help short="Specifies the GalleryApplicationVersion resource id on the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}"/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.applicationProfile.galleryApplications[].tags" options="tags">
                <help short="Optional, Specifies a passthrough value for more generic context."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure" options="treat-failure-as-deployment-failure">
                <help short="Optional, If true, any failure for any operation in the VmApplication will fail the deployment"/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$parameters.properties.availabilitySet" options="availability-set" group="Properties">
          <help short="Specifies information about the availability set that the virtual machine should be assigned to. Virtual machines specified in the same availability set are allocated to different nodes to maximize availability. For more information about availability sets, see [Availability sets overview](https://docs.microsoft.com/azure/virtual-machines/availability-set-overview). For more information on Azure planned maintenance, see [Maintenance and updates for Virtual Machines in Azure](https://docs.microsoft.com/azure/virtual-machines/maintenance-and-updates). Currently, a VM can only be added to availability set at creation time. The availability set to which the VM is being added should be under the same resource group as the availability set resource. An existing VM cannot be added to an availability set. This property cannot exist along with a non-null properties.virtualMachineScaleSet reference."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.billingProfile" options="billing-profile" group="Properties">
          <help short="Specifies the billing related details of a Azure Spot virtual machine. Minimum api-version: 2019-03-01."/>
          <arg nullable="True" type="float64" var="$parameters.properties.billingProfile.maxPrice" options="max-price">
            <help short="Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars. <br><br> This price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time of create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current Azure Spot price. <br><br> The maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the maxPrice after creation of VM/VMSS. <br><br> Possible values are: <br><br> - Any decimal value greater than zero. Example: 0.01538 <br><br> -1 – indicates default price to be up-to on-demand. <br><br> You can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also, the default max price is -1 if it is not provided by you. <br><br>Minimum api-version: 2019-03-01."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.capacityReservation" options="capacity-reservation" group="Properties">
          <help short="Specifies information about the capacity reservation that is used to allocate virtual machine. Minimum api-version: 2021-04-01."/>
          <arg nullable="True" type="@SubResource_update" var="$parameters.properties.capacityReservation.capacityReservationGroup" options="capacity-reservation-group">
            <help short="Specifies the capacity reservation group resource id that should be used for allocating the virtual machine or scaleset vm instances provided enough capacity has been reserved. Please refer to https://aka.ms/CapacityReservation for more details."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.diagnosticsProfile" options="diagnostics-profile" group="Properties">
          <help short="Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15."/>
          <arg nullable="True" type="object" var="$parameters.properties.diagnosticsProfile.bootDiagnostics" options="boot-diagnostics">
            <help short="Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to diagnose VM status. **NOTE**: If storageUri is being specified then ensure that the storage account is in the same region and subscription as the VM. You can easily view the output of your console log. Azure also enables you to see a screenshot of the VM from the hypervisor."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.diagnosticsProfile.bootDiagnostics.enabled" options="enabled">
              <help short="Whether boot diagnostics should be enabled on the Virtual Machine."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.diagnosticsProfile.bootDiagnostics.storageUri" options="storage-uri">
              <help short="Uri of the storage account to use for placing the console output and screenshot. If storageUri is not specified while enabling boot diagnostics, managed storage will be used."/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.evictionPolicy" options="eviction-policy" group="Properties">
          <help short="Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set. For Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01. For Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2017-10-30-preview."/>
          <enum>
            <item name="Deallocate" value="&quot;Deallocate&quot;"/>
            <item name="Delete" value="&quot;Delete&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.extensionsTimeBudget" options="extensions-time-budget" group="Properties">
          <help short="Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes (PT1H30M). Minimum api-version: 2020-06-01."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.hardwareProfile" options="hardware-profile" group="Properties">
          <help short="Specifies the hardware settings for the virtual machine."/>
          <arg nullable="True" type="string" var="$parameters.properties.hardwareProfile.vmSize" options="vm-size">
            <help short="Specifies the size of the virtual machine. The enum data type is currently deprecated and will be removed by December 23rd 2023. The recommended way to get the list of available sizes is using these APIs: [List all available virtual machine sizes in an availability set](https://docs.microsoft.com/rest/api/compute/availabilitysets/listavailablesizes), [List all available virtual machine sizes in a region]( https://docs.microsoft.com/rest/api/compute/resourceskus/list), [List all available virtual machine sizes for resizing](https://docs.microsoft.com/rest/api/compute/virtualmachines/listavailablesizes). For more information about virtual machine sizes, see [Sizes for virtual machines](https://docs.microsoft.com/azure/virtual-machines/sizes). The available VM sizes depend on region and availability set."/>
            <enum>
              <item name="Basic_A0" value="&quot;Basic_A0&quot;"/>
              <item name="Basic_A1" value="&quot;Basic_A1&quot;"/>
              <item name="Basic_A2" value="&quot;Basic_A2&quot;"/>
              <item name="Basic_A3" value="&quot;Basic_A3&quot;"/>
              <item name="Basic_A4" value="&quot;Basic_A4&quot;"/>
              <item name="Standard_A0" value="&quot;Standard_A0&quot;"/>
              <item name="Standard_A1" value="&quot;Standard_A1&quot;"/>
              <item name="Standard_A10" value="&quot;Standard_A10&quot;"/>
              <item name="Standard_A11" value="&quot;Standard_A11&quot;"/>
              <item name="Standard_A1_v2" value="&quot;Standard_A1_v2&quot;"/>
              <item name="Standard_A2" value="&quot;Standard_A2&quot;"/>
              <item name="Standard_A2_v2" value="&quot;Standard_A2_v2&quot;"/>
              <item name="Standard_A2m_v2" value="&quot;Standard_A2m_v2&quot;"/>
              <item name="Standard_A3" value="&quot;Standard_A3&quot;"/>
              <item name="Standard_A4" value="&quot;Standard_A4&quot;"/>
              <item name="Standard_A4_v2" value="&quot;Standard_A4_v2&quot;"/>
              <item name="Standard_A4m_v2" value="&quot;Standard_A4m_v2&quot;"/>
              <item name="Standard_A5" value="&quot;Standard_A5&quot;"/>
              <item name="Standard_A6" value="&quot;Standard_A6&quot;"/>
              <item name="Standard_A7" value="&quot;Standard_A7&quot;"/>
              <item name="Standard_A8" value="&quot;Standard_A8&quot;"/>
              <item name="Standard_A8_v2" value="&quot;Standard_A8_v2&quot;"/>
              <item name="Standard_A8m_v2" value="&quot;Standard_A8m_v2&quot;"/>
              <item name="Standard_A9" value="&quot;Standard_A9&quot;"/>
              <item name="Standard_B1ms" value="&quot;Standard_B1ms&quot;"/>
              <item name="Standard_B1s" value="&quot;Standard_B1s&quot;"/>
              <item name="Standard_B2ms" value="&quot;Standard_B2ms&quot;"/>
              <item name="Standard_B2s" value="&quot;Standard_B2s&quot;"/>
              <item name="Standard_B4ms" value="&quot;Standard_B4ms&quot;"/>
              <item name="Standard_B8ms" value="&quot;Standard_B8ms&quot;"/>
              <item name="Standard_D1" value="&quot;Standard_D1&quot;"/>
              <item name="Standard_D11" value="&quot;Standard_D11&quot;"/>
              <item name="Standard_D11_v2" value="&quot;Standard_D11_v2&quot;"/>
              <item name="Standard_D12" value="&quot;Standard_D12&quot;"/>
              <item name="Standard_D12_v2" value="&quot;Standard_D12_v2&quot;"/>
              <item name="Standard_D13" value="&quot;Standard_D13&quot;"/>
              <item name="Standard_D13_v2" value="&quot;Standard_D13_v2&quot;"/>
              <item name="Standard_D14" value="&quot;Standard_D14&quot;"/>
              <item name="Standard_D14_v2" value="&quot;Standard_D14_v2&quot;"/>
              <item name="Standard_D15_v2" value="&quot;Standard_D15_v2&quot;"/>
              <item name="Standard_D16_v3" value="&quot;Standard_D16_v3&quot;"/>
              <item name="Standard_D16s_v3" value="&quot;Standard_D16s_v3&quot;"/>
              <item name="Standard_D1_v2" value="&quot;Standard_D1_v2&quot;"/>
              <item name="Standard_D2" value="&quot;Standard_D2&quot;"/>
              <item name="Standard_D2_v2" value="&quot;Standard_D2_v2&quot;"/>
              <item name="Standard_D2_v3" value="&quot;Standard_D2_v3&quot;"/>
              <item name="Standard_D2s_v3" value="&quot;Standard_D2s_v3&quot;"/>
              <item name="Standard_D3" value="&quot;Standard_D3&quot;"/>
              <item name="Standard_D32_v3" value="&quot;Standard_D32_v3&quot;"/>
              <item name="Standard_D32s_v3" value="&quot;Standard_D32s_v3&quot;"/>
              <item name="Standard_D3_v2" value="&quot;Standard_D3_v2&quot;"/>
              <item name="Standard_D4" value="&quot;Standard_D4&quot;"/>
              <item name="Standard_D4_v2" value="&quot;Standard_D4_v2&quot;"/>
              <item name="Standard_D4_v3" value="&quot;Standard_D4_v3&quot;"/>
              <item name="Standard_D4s_v3" value="&quot;Standard_D4s_v3&quot;"/>
              <item name="Standard_D5_v2" value="&quot;Standard_D5_v2&quot;"/>
              <item name="Standard_D64_v3" value="&quot;Standard_D64_v3&quot;"/>
              <item name="Standard_D64s_v3" value="&quot;Standard_D64s_v3&quot;"/>
              <item name="Standard_D8_v3" value="&quot;Standard_D8_v3&quot;"/>
              <item name="Standard_D8s_v3" value="&quot;Standard_D8s_v3&quot;"/>
              <item name="Standard_DS1" value="&quot;Standard_DS1&quot;"/>
              <item name="Standard_DS11" value="&quot;Standard_DS11&quot;"/>
              <item name="Standard_DS11_v2" value="&quot;Standard_DS11_v2&quot;"/>
              <item name="Standard_DS12" value="&quot;Standard_DS12&quot;"/>
              <item name="Standard_DS12_v2" value="&quot;Standard_DS12_v2&quot;"/>
              <item name="Standard_DS13" value="&quot;Standard_DS13&quot;"/>
              <item name="Standard_DS13-2_v2" value="&quot;Standard_DS13-2_v2&quot;"/>
              <item name="Standard_DS13-4_v2" value="&quot;Standard_DS13-4_v2&quot;"/>
              <item name="Standard_DS13_v2" value="&quot;Standard_DS13_v2&quot;"/>
              <item name="Standard_DS14" value="&quot;Standard_DS14&quot;"/>
              <item name="Standard_DS14-4_v2" value="&quot;Standard_DS14-4_v2&quot;"/>
              <item name="Standard_DS14-8_v2" value="&quot;Standard_DS14-8_v2&quot;"/>
              <item name="Standard_DS14_v2" value="&quot;Standard_DS14_v2&quot;"/>
              <item name="Standard_DS15_v2" value="&quot;Standard_DS15_v2&quot;"/>
              <item name="Standard_DS1_v2" value="&quot;Standard_DS1_v2&quot;"/>
              <item name="Standard_DS2" value="&quot;Standard_DS2&quot;"/>
              <item name="Standard_DS2_v2" value="&quot;Standard_DS2_v2&quot;"/>
              <item name="Standard_DS3" value="&quot;Standard_DS3&quot;"/>
              <item name="Standard_DS3_v2" value="&quot;Standard_DS3_v2&quot;"/>
              <item name="Standard_DS4" value="&quot;Standard_DS4&quot;"/>
              <item name="Standard_DS4_v2" value="&quot;Standard_DS4_v2&quot;"/>
              <item name="Standard_DS5_v2" value="&quot;Standard_DS5_v2&quot;"/>
              <item name="Standard_E16_v3" value="&quot;Standard_E16_v3&quot;"/>
              <item name="Standard_E16s_v3" value="&quot;Standard_E16s_v3&quot;"/>
              <item name="Standard_E2_v3" value="&quot;Standard_E2_v3&quot;"/>
              <item name="Standard_E2s_v3" value="&quot;Standard_E2s_v3&quot;"/>
              <item name="Standard_E32-16_v3" value="&quot;Standard_E32-16_v3&quot;"/>
              <item name="Standard_E32-8s_v3" value="&quot;Standard_E32-8s_v3&quot;"/>
              <item name="Standard_E32_v3" value="&quot;Standard_E32_v3&quot;"/>
              <item name="Standard_E32s_v3" value="&quot;Standard_E32s_v3&quot;"/>
              <item name="Standard_E4_v3" value="&quot;Standard_E4_v3&quot;"/>
              <item name="Standard_E4s_v3" value="&quot;Standard_E4s_v3&quot;"/>
              <item name="Standard_E64-16s_v3" value="&quot;Standard_E64-16s_v3&quot;"/>
              <item name="Standard_E64-32s_v3" value="&quot;Standard_E64-32s_v3&quot;"/>
              <item name="Standard_E64_v3" value="&quot;Standard_E64_v3&quot;"/>
              <item name="Standard_E64s_v3" value="&quot;Standard_E64s_v3&quot;"/>
              <item name="Standard_E8_v3" value="&quot;Standard_E8_v3&quot;"/>
              <item name="Standard_E8s_v3" value="&quot;Standard_E8s_v3&quot;"/>
              <item name="Standard_F1" value="&quot;Standard_F1&quot;"/>
              <item name="Standard_F16" value="&quot;Standard_F16&quot;"/>
              <item name="Standard_F16s" value="&quot;Standard_F16s&quot;"/>
              <item name="Standard_F16s_v2" value="&quot;Standard_F16s_v2&quot;"/>
              <item name="Standard_F1s" value="&quot;Standard_F1s&quot;"/>
              <item name="Standard_F2" value="&quot;Standard_F2&quot;"/>
              <item name="Standard_F2s" value="&quot;Standard_F2s&quot;"/>
              <item name="Standard_F2s_v2" value="&quot;Standard_F2s_v2&quot;"/>
              <item name="Standard_F32s_v2" value="&quot;Standard_F32s_v2&quot;"/>
              <item name="Standard_F4" value="&quot;Standard_F4&quot;"/>
              <item name="Standard_F4s" value="&quot;Standard_F4s&quot;"/>
              <item name="Standard_F4s_v2" value="&quot;Standard_F4s_v2&quot;"/>
              <item name="Standard_F64s_v2" value="&quot;Standard_F64s_v2&quot;"/>
              <item name="Standard_F72s_v2" value="&quot;Standard_F72s_v2&quot;"/>
              <item name="Standard_F8" value="&quot;Standard_F8&quot;"/>
              <item name="Standard_F8s" value="&quot;Standard_F8s&quot;"/>
              <item name="Standard_F8s_v2" value="&quot;Standard_F8s_v2&quot;"/>
              <item name="Standard_G1" value="&quot;Standard_G1&quot;"/>
              <item name="Standard_G2" value="&quot;Standard_G2&quot;"/>
              <item name="Standard_G3" value="&quot;Standard_G3&quot;"/>
              <item name="Standard_G4" value="&quot;Standard_G4&quot;"/>
              <item name="Standard_G5" value="&quot;Standard_G5&quot;"/>
              <item name="Standard_GS1" value="&quot;Standard_GS1&quot;"/>
              <item name="Standard_GS2" value="&quot;Standard_GS2&quot;"/>
              <item name="Standard_GS3" value="&quot;Standard_GS3&quot;"/>
              <item name="Standard_GS4" value="&quot;Standard_GS4&quot;"/>
              <item name="Standard_GS4-4" value="&quot;Standard_GS4-4&quot;"/>
              <item name="Standard_GS4-8" value="&quot;Standard_GS4-8&quot;"/>
              <item name="Standard_GS5" value="&quot;Standard_GS5&quot;"/>
              <item name="Standard_GS5-16" value="&quot;Standard_GS5-16&quot;"/>
              <item name="Standard_GS5-8" value="&quot;Standard_GS5-8&quot;"/>
              <item name="Standard_H16" value="&quot;Standard_H16&quot;"/>
              <item name="Standard_H16m" value="&quot;Standard_H16m&quot;"/>
              <item name="Standard_H16mr" value="&quot;Standard_H16mr&quot;"/>
              <item name="Standard_H16r" value="&quot;Standard_H16r&quot;"/>
              <item name="Standard_H8" value="&quot;Standard_H8&quot;"/>
              <item name="Standard_H8m" value="&quot;Standard_H8m&quot;"/>
              <item name="Standard_L16s" value="&quot;Standard_L16s&quot;"/>
              <item name="Standard_L32s" value="&quot;Standard_L32s&quot;"/>
              <item name="Standard_L4s" value="&quot;Standard_L4s&quot;"/>
              <item name="Standard_L8s" value="&quot;Standard_L8s&quot;"/>
              <item name="Standard_M128-32ms" value="&quot;Standard_M128-32ms&quot;"/>
              <item name="Standard_M128-64ms" value="&quot;Standard_M128-64ms&quot;"/>
              <item name="Standard_M128ms" value="&quot;Standard_M128ms&quot;"/>
              <item name="Standard_M128s" value="&quot;Standard_M128s&quot;"/>
              <item name="Standard_M64-16ms" value="&quot;Standard_M64-16ms&quot;"/>
              <item name="Standard_M64-32ms" value="&quot;Standard_M64-32ms&quot;"/>
              <item name="Standard_M64ms" value="&quot;Standard_M64ms&quot;"/>
              <item name="Standard_M64s" value="&quot;Standard_M64s&quot;"/>
              <item name="Standard_NC12" value="&quot;Standard_NC12&quot;"/>
              <item name="Standard_NC12s_v2" value="&quot;Standard_NC12s_v2&quot;"/>
              <item name="Standard_NC12s_v3" value="&quot;Standard_NC12s_v3&quot;"/>
              <item name="Standard_NC24" value="&quot;Standard_NC24&quot;"/>
              <item name="Standard_NC24r" value="&quot;Standard_NC24r&quot;"/>
              <item name="Standard_NC24rs_v2" value="&quot;Standard_NC24rs_v2&quot;"/>
              <item name="Standard_NC24rs_v3" value="&quot;Standard_NC24rs_v3&quot;"/>
              <item name="Standard_NC24s_v2" value="&quot;Standard_NC24s_v2&quot;"/>
              <item name="Standard_NC24s_v3" value="&quot;Standard_NC24s_v3&quot;"/>
              <item name="Standard_NC6" value="&quot;Standard_NC6&quot;"/>
              <item name="Standard_NC6s_v2" value="&quot;Standard_NC6s_v2&quot;"/>
              <item name="Standard_NC6s_v3" value="&quot;Standard_NC6s_v3&quot;"/>
              <item name="Standard_ND12s" value="&quot;Standard_ND12s&quot;"/>
              <item name="Standard_ND24rs" value="&quot;Standard_ND24rs&quot;"/>
              <item name="Standard_ND24s" value="&quot;Standard_ND24s&quot;"/>
              <item name="Standard_ND6s" value="&quot;Standard_ND6s&quot;"/>
              <item name="Standard_NV12" value="&quot;Standard_NV12&quot;"/>
              <item name="Standard_NV24" value="&quot;Standard_NV24&quot;"/>
              <item name="Standard_NV6" value="&quot;Standard_NV6&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.hardwareProfile.vmSizeProperties" options="vm-size-properties">
            <help short="Specifies the properties for customizing the size of the virtual machine. Minimum api-version: 2021-07-01. This feature is still in preview mode and is not supported for VirtualMachineScaleSet. Please follow the instructions in [VM Customization](https://aka.ms/vmcustomization) for more details."/>
            <arg nullable="True" type="integer32" var="$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsAvailable" options="v-cp-us-available">
              <help short="Specifies the number of vCPUs available for the VM. When this property is not specified in the request body the default behavior is to set it to the value of vCPUs available for that VM size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list)."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsPerCore" options="v-cp-us-per-core">
              <help short="Specifies the vCPU to physical core ratio. When this property is not specified in the request body the default behavior is set to the value of vCPUsPerCore for the VM Size exposed in api response of [List all available virtual machine sizes in a region](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list). **Setting this property to 1 also means that hyper-threading is disabled.**"/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$parameters.properties.host" options="host" group="Properties">
          <help short="Specifies information about the dedicated host that the virtual machine resides in. Minimum api-version: 2018-10-01."/>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$parameters.properties.hostGroup" options="host-group" group="Properties">
          <help short="Specifies information about the dedicated host group that the virtual machine resides in. **Note:** User cannot specify both host and hostGroup properties. Minimum api-version: 2020-06-01."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.licenseType" options="license-type" group="Properties">
          <help short="Specifies that the image or disk that is being used was licensed on-premises. Possible values for Windows Server operating system are: Windows_Client Windows_Server Possible values for Linux Server operating system are: RHEL_BYOS (for RHEL) SLES_BYOS (for SUSE) For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing) [Azure Hybrid Use Benefit for Linux Server](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux) Minimum api-version: 2015-06-15"/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.networkProfile" options="network-profile" group="Properties">
          <help short="Specifies the network interfaces of the virtual machine."/>
          <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkApiVersion" options="network-api-version">
            <help short="specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations"/>
            <enum>
              <item name="2020-11-01" value="&quot;2020-11-01&quot;"/>
              <item name="2022-11-01" value="&quot;2022-11-01&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations" options="network-interface-configurations">
            <help short="Specifies the networking configurations that will be used to create the virtual machine networking resources."/>
            <item nullable="True" type="object">
              <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].name" options="name">
                <help short="The network interface configuration name."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode" options="auxiliary-mode" group="Properties">
                <help short="Specifies whether the Auxiliary mode is enabled for the Network Interface resource."/>
                <enum>
                  <item name="AcceleratedConnections" value="&quot;AcceleratedConnections&quot;"/>
                  <item name="Floating" value="&quot;Floating&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku" options="auxiliary-sku" group="Properties">
                <help short="Specifies whether the Auxiliary sku is enabled for the Network Interface resource."/>
                <enum>
                  <item name="A1" value="&quot;A1&quot;"/>
                  <item name="A2" value="&quot;A2&quot;"/>
                  <item name="A4" value="&quot;A4&quot;"/>
                  <item name="A8" value="&quot;A8&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.deleteOption" options="delete-option" group="Properties">
                <help short="Specify what happens to the network interface when the VM is deleted"/>
                <enum>
                  <item name="Delete" value="&quot;Delete&quot;"/>
                  <item name="Detach" value="&quot;Detach&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking" options="disable-tcp-state-tracking" group="Properties">
                <help short="Specifies whether the network interface is disabled for tcp state tracking."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings" options="dns-settings" group="Properties">
                <help short="The dns settings to be applied on the network interfaces."/>
                <arg nullable="True" type="array<string>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers" options="dns-servers">
                  <help short="List of DNS servers IP addresses"/>
                  <item nullable="True" type="string"/>
                </arg>
              </arg>
              <arg nullable="True" type="@SubResource_update" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dscpConfiguration" options="dscp-configuration" group="Properties"/>
              <arg nullable="True" type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking" options="enable-accelerated-networking" group="Properties">
                <help short="Specifies whether the network interface is accelerated networking-enabled."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableFpga" options="enable-fpga" group="Properties">
                <help short="Specifies whether the network interface is FPGA networking-enabled."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding" options="enable-ip-forwarding" group="Properties">
                <help short="Whether IP forwarding enabled on this NIC."/>
              </arg>
              <arg type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" options="ip-configurations" group="Properties">
                <help short="Specifies the IP configurations of the network interface."/>
                <item nullable="True" type="object">
                  <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" options="name">
                    <help short="The IP configuration name."/>
                  </arg>
                  <arg nullable="True" type="array<@SubResource_update>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools" options="application-gateway-backend-address-pools" group="Properties">
                    <help short="Specifies an array of references to backend address pools of application gateways. A virtual machine can reference backend address pools of multiple application gateways. Multiple virtual machines cannot use the same application gateway."/>
                    <item nullable="True" type="@SubResource_update"/>
                  </arg>
                  <arg nullable="True" type="array<@SubResource_update>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups" options="application-security-groups" group="Properties">
                    <help short="Specifies an array of references to application security group."/>
                    <item nullable="True" type="@SubResource_update"/>
                  </arg>
                  <arg nullable="True" type="array<@SubResource_update>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools" options="load-balancer-backend-address-pools" group="Properties">
                    <help short="Specifies an array of references to backend address pools of load balancers. A virtual machine can reference backend address pools of one public and one internal load balancer. [Multiple virtual machines cannot use the same basic sku load balancer]."/>
                    <item nullable="True" type="@SubResource_update"/>
                  </arg>
                  <arg nullable="True" type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary" options="primary" group="Properties">
                    <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion" options="private-ip-address-version" group="Properties">
                    <help short="Available from Api-Version 2017-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'."/>
                    <enum>
                      <item name="IPv4" value="&quot;IPv4&quot;"/>
                      <item name="IPv6" value="&quot;IPv6&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="object" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration" options="public-ip-address-configuration" group="Properties">
                    <help short="The publicIPAddressConfiguration."/>
                    <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" options="name">
                      <help short="The publicIP address configuration name."/>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption" options="delete-option" group="Properties">
                      <help short="Specify what happens to the public IP address when the VM is deleted"/>
                      <enum>
                        <item name="Delete" value="&quot;Delete&quot;"/>
                        <item name="Detach" value="&quot;Detach&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="object" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings" options="dns-settings" group="Properties">
                      <help short="The dns settings to be applied on the publicIP addresses ."/>
                      <arg type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" options="domain-name-label">
                        <help short="The Domain name label prefix of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the domain name label and vm network profile unique ID."/>
                      </arg>
                      <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope" options="domain-name-label-scope">
                        <help short="The Domain name label scope of the PublicIPAddress resources that will be created. The generated name label is the concatenation of the hashed domain name label with policy according to the domain name label scope and vm network profile unique ID."/>
                        <enum>
                          <item name="NoReuse" value="&quot;NoReuse&quot;"/>
                          <item name="ResourceGroupReuse" value="&quot;ResourceGroupReuse&quot;"/>
                          <item name="SubscriptionReuse" value="&quot;SubscriptionReuse&quot;"/>
                          <item name="TenantReuse" value="&quot;TenantReuse&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                    <arg nullable="True" type="integer32" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes" options="idle-timeout-in-minutes" group="Properties">
                      <help short="The idle timeout of the public IP address."/>
                    </arg>
                    <arg nullable="True" type="array<object>" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags" options="ip-tags" group="Properties">
                      <help short="The list of IP tags associated with the public IP address."/>
                      <item nullable="True" type="object">
                        <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType" options="ip-tag-type">
                          <help short="IP tag type. Example: FirstPartyUsage."/>
                        </arg>
                        <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag" options="tag">
                          <help short="IP tag associated with the public IP. Example: SQL, Storage etc."/>
                        </arg>
                      </item>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion" options="public-ip-address-version" group="Properties">
                      <help short="Available from Api-Version 2019-07-01 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'."/>
                      <enum>
                        <item name="IPv4" value="&quot;IPv4&quot;"/>
                        <item name="IPv6" value="&quot;IPv6&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAllocationMethod" options="public-ip-allocation-method" group="Properties">
                      <help short="Specify the public IP allocation type"/>
                      <enum>
                        <item name="Dynamic" value="&quot;Dynamic&quot;"/>
                        <item name="Static" value="&quot;Static&quot;"/>
                      </enum>
                    </arg>
                    <arg nullable="True" type="@SubResource_update" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix" options="public-ip-prefix" group="Properties">
                      <help short="The PublicIPPrefix from which to allocate publicIP addresses."/>
                    </arg>
                    <arg nullable="True" type="object" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku" options="sku">
                      <help short="Describes the public IP Sku. It can only be set with OrchestrationMode as Flexible."/>
                      <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name" options="name">
                        <help short="Specify public IP sku name"/>
                        <enum>
                          <item name="Basic" value="&quot;Basic&quot;"/>
                          <item name="Standard" value="&quot;Standard&quot;"/>
                        </enum>
                      </arg>
                      <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier" options="tier">
                        <help short="Specify public IP sku tier"/>
                        <enum>
                          <item name="Global" value="&quot;Global&quot;"/>
                          <item name="Regional" value="&quot;Regional&quot;"/>
                        </enum>
                      </arg>
                    </arg>
                  </arg>
                  <arg nullable="True" type="@SubResource_update" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet" options="subnet" group="Properties">
                    <help short="Specifies the identifier of the subnet."/>
                  </arg>
                </item>
              </arg>
              <arg nullable="True" type="@SubResource_update" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup" options="network-security-group" group="Properties">
                <help short="The network security group."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.primary" options="primary" group="Properties">
                <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.networkProfile.networkInterfaces" options="network-interfaces">
            <help short="Specifies the list of resource Ids for the network interfaces associated with the virtual machine."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaces[].id" options="id">
                <help short="Resource Id"/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.networkProfile.networkInterfaces[].properties.deleteOption" options="delete-option" group="Properties">
                <help short="Specify what happens to the network interface when the VM is deleted"/>
                <enum>
                  <item name="Delete" value="&quot;Delete&quot;"/>
                  <item name="Detach" value="&quot;Detach&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.networkProfile.networkInterfaces[].properties.primary" options="primary" group="Properties">
                <help short="Specifies the primary network interface in case the virtual machine has more than 1 network interface."/>
              </arg>
            </item>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.osProfile" options="os-profile" group="Properties">
          <help short="Specifies the operating system settings used while creating the virtual machine. Some of the settings cannot be changed once VM is provisioned."/>
          <arg nullable="True" type="string" var="$parameters.properties.osProfile.adminPassword" options="admin-password">
            <help short="Specifies the password of the administrator account. <br><br> **Minimum-length (Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters <br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length (Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\W_]) <br><br> **Disallowed values:** &quot;abc@123&quot;, &quot;P@$$w0rd&quot;, &quot;P@ssw0rd&quot;, &quot;P@ssword123&quot;, &quot;Pa$$word&quot;, &quot;pass@word1&quot;, &quot;Password!&quot;, &quot;Password1&quot;, &quot;Password22&quot;, &quot;iloveyou!&quot; <br><br> For resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows VM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp) <br><br> For resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess Extension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)"/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.osProfile.adminUsername" options="admin-username">
            <help short="Specifies the name of the administrator account. <br><br> This property cannot be updated after the VM is created. <br><br> **Windows-only restriction:** Cannot end in &quot;.&quot; <br><br> **Disallowed values:** &quot;administrator&quot;, &quot;admin&quot;, &quot;user&quot;, &quot;user1&quot;, &quot;test&quot;, &quot;user2&quot;, &quot;test1&quot;, &quot;user3&quot;, &quot;admin1&quot;, &quot;1&quot;, &quot;123&quot;, &quot;a&quot;, &quot;actuser&quot;, &quot;adm&quot;, &quot;admin2&quot;, &quot;aspnet&quot;, &quot;backup&quot;, &quot;console&quot;, &quot;david&quot;, &quot;guest&quot;, &quot;john&quot;, &quot;owner&quot;, &quot;root&quot;, &quot;server&quot;, &quot;sql&quot;, &quot;support&quot;, &quot;support_388945a0&quot;, &quot;sys&quot;, &quot;test2&quot;, &quot;test3&quot;, &quot;user4&quot;, &quot;user5&quot;. <br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length (Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters."/>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.allowExtensionOperations" options="allow-extension-operations">
            <help short="Specifies whether extension operations should be allowed on the virtual machine. This may only be set to False when no extensions are present on the virtual machine."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.osProfile.computerName" options="computer-name">
            <help short="Specifies the host OS name of the virtual machine. This name cannot be updated after the VM is created. **Max-length (Windows):** 15 characters. **Max-length (Linux):** 64 characters. For naming conventions and restrictions see [Azure infrastructure services implementation guidelines](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules)."/>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.osProfile.customData" options="custom-data">
            <help short="Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array that is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes. **Note: Do not pass any secrets or passwords in customData property.** This property cannot be updated after the VM is created. The property 'customData' is passed to the VM to be saved as a file, for more information see [Custom Data on Azure VMs](https://azure.microsoft.com/blog/custom-data-and-cloud-init-on-windows-azure/). For using cloud-init for your Linux VM, see [Using cloud-init to customize a Linux VM during creation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)."/>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.osProfile.linuxConfiguration" options="linux-configuration">
            <help short="Specifies the Linux operating system settings on the virtual machine. For a list of supported Linux distributions, see [Linux on Azure-Endorsed Distributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros)."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.linuxConfiguration.disablePasswordAuthentication" options="disable-password-authentication">
              <help short="Specifies whether password authentication should be disabled."/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates" options="enable-vm-agent-platform-updates">
              <help short="Indicates whether VMAgent Platform Updates is enabled for the Linux virtual machine. Default value is false."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings" options="patch-settings">
              <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Linux."/>
              <arg nullable="True" type="string" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                <help short="Specifies the mode of VM Guest Patch Assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine. <br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true."/>
                <enum>
                  <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                  <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Linux."/>
                <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                  <help short="Enables customer to schedule patching without accidental upgrades"/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                  <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                  <enum>
                    <item name="Always" value="&quot;Always&quot;"/>
                    <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                    <item name="Never" value="&quot;Never&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.osProfile.linuxConfiguration.patchSettings.patchMode" options="patch-mode">
                <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The virtual machine's default patching configuration is used. <br /><br /> **AutomaticByPlatform** - The virtual machine will be automatically updated by the platform. The property provisionVMAgent must be true"/>
                <enum>
                  <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                  <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.linuxConfiguration.provisionVMAgent" options="provision-vm-agent">
              <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, default behavior is to set it to true. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.osProfile.linuxConfiguration.ssh" options="ssh">
              <help short="Specifies the ssh key configuration for a Linux OS."/>
              <arg nullable="True" type="array<object>" var="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys" options="public-keys">
                <help short="The list of SSH public keys used to authenticate with linux based VMs."/>
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].keyData" options="key-data">
                    <help short="SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed)."/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].path" options="path">
                    <help short="Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys"/>
                  </arg>
                </item>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.requireGuestProvisionSignal" options="require-guest-provision-signal">
            <help short="Optional property which must either be set to True or omitted."/>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.osProfile.secrets" options="secrets">
            <help short="Specifies set of certificates that should be installed onto the virtual machine. To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="@SubResource_update" var="$parameters.properties.osProfile.secrets[].sourceVault" options="source-vault">
                <help short="The relative URL of the Key Vault containing all of the certificates in VaultCertificates."/>
              </arg>
              <arg nullable="True" type="array<object>" var="$parameters.properties.osProfile.secrets[].vaultCertificates" options="vault-certificates">
                <help short="The list of key vault references in SourceVault which contain certificates."/>
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateStore" options="certificate-store">
                    <help short="For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name &lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem formatted."/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateUrl" options="certificate-url">
                    <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br>  &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                  </arg>
                </item>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.osProfile.windowsConfiguration" options="windows-configuration">
            <help short="Specifies Windows operating system settings on the virtual machine."/>
            <arg nullable="True" type="array<object>" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent" options="additional-unattend-content">
              <help short="Specifies additional base-64 encoded XML formatted information that can be included in the Unattend.xml file, which is used by Windows Setup."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].componentName" options="component-name">
                  <help short="The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup."/>
                  <enum>
                    <item name="Microsoft-Windows-Shell-Setup" value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].content" options="content">
                  <help short="Specifies the XML formatted content that is added to the unattend.xml file for the specified path and component. The XML must be less than 4KB and must include the root element for the setting or feature that is being inserted."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].passName" options="pass-name">
                  <help short="The pass name. Currently, the only allowable value is OobeSystem."/>
                  <enum>
                    <item name="OobeSystem" value="&quot;OobeSystem&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].settingName" options="setting-name">
                  <help short="Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and AutoLogon."/>
                  <enum>
                    <item name="AutoLogon" value="&quot;AutoLogon&quot;"/>
                    <item name="FirstLogonCommands" value="&quot;FirstLogonCommands&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.windowsConfiguration.enableAutomaticUpdates" options="enable-automatic-updates">
              <help short="Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is true. For virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings" options="patch-settings">
              <help short="[Preview Feature] Specifies settings related to VM Guest Patching on Windows."/>
              <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.assessmentMode" options="assessment-mode">
                <help short="Specifies the mode of VM Guest patch assessment for the IaaS virtual machine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You control the timing of patch assessments on a virtual machine.<br /><br /> **AutomaticByPlatform** - The platform will trigger periodic patch assessments. The property provisionVMAgent must be true. "/>
                <enum>
                  <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                  <item name="ImageDefault" value="&quot;ImageDefault&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings" options="automatic-by-platform-settings">
                <help short="Specifies additional settings for patch mode AutomaticByPlatform in VM Guest Patching on Windows."/>
                <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule" options="bypass-platform-safety-checks-on-user-schedule">
                  <help short="Enables customer to schedule patching without accidental upgrades"/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting" options="reboot-setting">
                  <help short="Specifies the reboot setting for all AutomaticByPlatform patch installation operations."/>
                  <enum>
                    <item name="Always" value="&quot;Always&quot;"/>
                    <item name="IfRequired" value="&quot;IfRequired&quot;"/>
                    <item name="Never" value="&quot;Never&quot;"/>
                    <item name="Unknown" value="&quot;Unknown&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching" options="enable-hotpatching">
                <help short="Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.patchSettings.patchMode" options="patch-mode">
                <help short="Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual machines associated to virtual machine scale set with OrchestrationMode as Flexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You  control the application of patches to a virtual machine. You do this by applying patches manually inside the VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be false<br /><br /> **AutomaticByOS** - The virtual machine will automatically be updated by the OS. The property WindowsConfiguration.enableAutomaticUpdates must be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will automatically updated by the platform. The properties provisionVMAgent and WindowsConfiguration.enableAutomaticUpdates must be true "/>
                <enum>
                  <item name="AutomaticByOS" value="&quot;AutomaticByOS&quot;"/>
                  <item name="AutomaticByPlatform" value="&quot;AutomaticByPlatform&quot;"/>
                  <item name="Manual" value="&quot;Manual&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.osProfile.windowsConfiguration.provisionVMAgent" options="provision-vm-agent">
              <help short="Indicates whether virtual machine agent should be provisioned on the virtual machine. When this property is not specified in the request body, it is set to true by default. This will ensure that VM Agent is installed on the VM so that extensions can be added to the VM later."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.timeZone" options="time-zone">
              <help short="Specifies the time zone of the virtual machine. e.g. &quot;Pacific Standard Time&quot;. Possible values can be [TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from time zones returned by [TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones)."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.osProfile.windowsConfiguration.winRM" options="win-rm">
              <help short="Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell."/>
              <arg nullable="True" type="array<object>" var="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners" options="listeners">
                <help short="The list of Windows Remote Management listeners"/>
                <item nullable="True" type="object">
                  <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl" options="certificate-url">
                    <help short="This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  &quot;data&quot;:&quot;<Base64-encoded-certificate>&quot;,<br>  &quot;dataType&quot;:&quot;pfx&quot;,<br>  &quot;password&quot;:&quot;<pfx-file-password>&quot;<br>} <br> To install certificates on a virtual machine it is recommended to use the [Azure Key Vault virtual machine extension for Linux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux) or the [Azure Key Vault virtual machine extension for Windows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows)."/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].protocol" options="protocol">
                    <help short="Specifies the protocol of WinRM listener. Possible values are: **http,** **https.**"/>
                    <enum>
                      <item name="Http" value="&quot;Http&quot;"/>
                      <item name="Https" value="&quot;Https&quot;"/>
                    </enum>
                  </arg>
                </item>
              </arg>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="integer32" var="$parameters.properties.platformFaultDomain" options="platform-fault-domain" group="Properties">
          <help short="Specifies the scale set logical fault domain into which the Virtual Machine will be created. By default, the Virtual Machine will by automatically assigned to a fault domain that best maintains balance across available fault domains. This is applicable only if the 'virtualMachineScaleSet' property of this Virtual Machine is set. The Virtual Machine Scale Set that is referenced, must have 'platformFaultDomainCount' greater than 1. This property cannot be updated once the Virtual Machine is created. Fault domain assignment can be viewed in the Virtual Machine Instance View. Minimum api-version: 2020-12-01."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.priority" options="priority" group="Properties">
          <help short="Specifies the priority for the virtual machine. Minimum api-version: 2019-03-01"/>
          <enum>
            <item name="Low" value="&quot;Low&quot;"/>
            <item name="Regular" value="&quot;Regular&quot;"/>
            <item name="Spot" value="&quot;Spot&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$parameters.properties.proximityPlacementGroup" options="proximity-placement-group" group="Properties">
          <help short="Specifies information about the proximity placement group that the virtual machine should be assigned to. Minimum api-version: 2018-04-01."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.scheduledEventsPolicy" options="scheduled-events-policy" group="Properties">
          <help short="Specifies Redeploy, Reboot and ScheduledEventsAdditionalPublishingTargets Scheduled Event related configurations for the virtual machine."/>
          <arg nullable="True" type="object" var="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets" options="scheduled-events-additional-publishing-targets">
            <help short="The configuration parameters used while publishing scheduledEventsAdditionalPublishingTargets."/>
            <arg nullable="True" type="object" var="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph" options="event-grid-and-resource-graph">
              <help short="The configuration parameters used while creating eventGridAndResourceGraph Scheduled Event setting."/>
              <arg nullable="True" type="boolean" var="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph.enable" options="enable">
                <help short="Specifies if event grid and resource graph is enabled for Scheduled event related configurations."/>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.scheduledEventsPolicy.userInitiatedReboot" options="user-initiated-reboot">
            <help short="The configuration parameters used while creating userInitiatedReboot scheduled event setting creation."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.scheduledEventsPolicy.userInitiatedReboot.automaticallyApprove" options="automatically-approve">
              <help short="Specifies Reboot Scheduled Event related configurations."/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy" options="user-initiated-redeploy">
            <help short="The configuration parameters used while creating userInitiatedRedeploy scheduled event setting creation."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy.automaticallyApprove" options="automatically-approve">
              <help short="Specifies Redeploy Scheduled Event related configurations."/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.scheduledEventsProfile" options="scheduled-events-profile" group="Properties">
          <help short="Specifies Scheduled Event related configurations."/>
          <arg nullable="True" type="object" var="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile" options="os-image-notification-profile">
            <help short="Specifies OS Image Scheduled Event related configurations."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.enable" options="enable">
              <help short="Specifies whether the OS Image Scheduled event is enabled or disabled."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout" options="not-before-timeout">
              <help short="Length of time a Virtual Machine being reimaged or having its OS upgraded will have to potentially approve the OS Image Scheduled Event before the event is auto approved (timed out). The configuration is specified in ISO 8601 format, and the value must be 15 minutes (PT15M)"/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile" options="terminate-notification-profile">
            <help short="Specifies Terminate Scheduled Event related configurations."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.enable" options="enable">
              <help short="Specifies whether the Terminate Scheduled event is enabled or disabled."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout" options="not-before-timeout">
              <help short="Configurable length of time a Virtual Machine being deleted will have to potentially approve the Terminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601 format, the default value is 5 minutes (PT5M)"/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.securityProfile" options="security-profile" group="Properties">
          <help short="Specifies the Security related profile settings for the virtual machine."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.securityProfile.encryptionAtHost" options="encryption-at-host">
            <help short="This property can be used by user in the request to enable or disable the Host Encryption for the virtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp disk at host itself. The default behavior is: The Encryption at host will be disabled unless this property is set to true for the resource."/>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.securityProfile.encryptionIdentity" options="encryption-identity">
            <help short="Specifies the Managed Identity used by ADE to get access token for keyvault operations."/>
            <arg nullable="True" type="string" var="$parameters.properties.securityProfile.encryptionIdentity.userAssignedIdentityResourceId" options="user-assigned-identity-resource-id">
              <help short="Specifies ARM Resource ID of one of the user identities associated with the VM."/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.securityProfile.proxyAgentSettings" options="proxy-agent-settings">
            <help short="Specifies ProxyAgent settings while creating the virtual machine. Minimum api-version: 2023-09-01."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.securityProfile.proxyAgentSettings.enabled" options="enabled">
              <help short="Specifies whether ProxyAgent feature should be enabled on the virtual machine or virtual machine scale set."/>
            </arg>
            <arg nullable="True" type="@HostEndpointSettings_update" var="$parameters.properties.securityProfile.proxyAgentSettings.imds" options="imds">
              <help short="Specifies the IMDS endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01."/>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.securityProfile.proxyAgentSettings.keyIncarnationId" options="key-incarnation-id">
              <help short="Increase the value of this property allows user to reset the key used for securing communication channel between guest and host."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.securityProfile.proxyAgentSettings.mode" options="mode">
              <help short="Specifies the mode that ProxyAgent will execute on if the feature is enabled. ProxyAgent will start to audit or monitor but not enforce access control over requests to host endpoints in Audit mode, while in Enforce mode it will enforce access control. The default value is Enforce mode."/>
              <enum>
                <item name="Audit" value="&quot;Audit&quot;"/>
                <item name="Enforce" value="&quot;Enforce&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.securityProfile.proxyAgentSettings.wireServer" options="wire-server" cls="HostEndpointSettings_update">
              <help short="Specifies the Wire Server endpoint settings while creating the virtual machine or virtual machine scale set. Minimum api-version: 2024-03-01."/>
              <arg nullable="True" type="string" var="@HostEndpointSettings_update.inVMAccessControlProfileReferenceId" options="in-vm-access-control-profile-reference-id">
                <help short="Specifies the InVMAccessControlProfileVersion resource id in the format of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/inVMAccessControlProfiles/{profile}/versions/{version}"/>
              </arg>
              <arg nullable="True" type="string" var="@HostEndpointSettings_update.mode" options="mode">
                <help short="Specifies the execution mode. In Audit mode, the system acts as if it is enforcing the access control policy, including emitting access denial entries in the logs but it does not actually deny any requests to host endpoints. In Enforce mode, the system will enforce the access control and it is the recommended mode of operation."/>
                <enum>
                  <item name="Audit" value="&quot;Audit&quot;"/>
                  <item name="Disabled" value="&quot;Disabled&quot;"/>
                  <item name="Enforce" value="&quot;Enforce&quot;"/>
                </enum>
              </arg>
            </arg>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.securityProfile.securityType" options="security-type">
            <help short="Specifies the SecurityType of the virtual machine. It has to be set to any specified value to enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set."/>
            <enum>
              <item name="ConfidentialVM" value="&quot;ConfidentialVM&quot;"/>
              <item name="TrustedLaunch" value="&quot;TrustedLaunch&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.securityProfile.uefiSettings" options="uefi-settings">
            <help short="Specifies the security settings like secure boot and vTPM used while creating the virtual machine. Minimum api-version: 2020-12-01."/>
            <arg nullable="True" type="boolean" var="$parameters.properties.securityProfile.uefiSettings.secureBootEnabled" options="secure-boot-enabled">
              <help short="Specifies whether secure boot should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.securityProfile.uefiSettings.vTpmEnabled" options="v-tpm-enabled">
              <help short="Specifies whether vTPM should be enabled on the virtual machine. Minimum api-version: 2020-12-01."/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$parameters.properties.storageProfile" options="storage-profile" group="Properties">
          <help short="Specifies the storage settings for the virtual machine disks."/>
          <arg nullable="True" type="boolean" var="$parameters.properties.storageProfile.alignRegionalDisksToVMZone" options="align-regional-disks-to-vm-zone">
            <help short="Specifies whether the regional disks should be aligned/moved to the VM zone. This is applicable only for VMs with placement property set. Please note that this change is irreversible. Minimum api-version: 2024-11-01."/>
          </arg>
          <arg nullable="True" type="array<object>" var="$parameters.properties.storageProfile.dataDisks" options="data-disks">
            <help short="Specifies the parameters that are used to add a data disk to a virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="string" var="$parameters.properties.storageProfile.dataDisks[].caching" options="caching">
                <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**"/>
                <enum>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                  <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="$parameters.properties.storageProfile.dataDisks[].createOption" options="create-option">
                <help short="Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine data disk. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described. **Empty:** This value is used when creating an empty data disk. **Copy:** This value is used to create a data disk from a snapshot or another disk. **Restore:** This value is used to create a data disk from a disk restore point."/>
                <enum>
                  <item name="Attach" value="&quot;Attach&quot;"/>
                  <item name="Copy" value="&quot;Copy&quot;"/>
                  <item name="Empty" value="&quot;Empty&quot;"/>
                  <item name="FromImage" value="&quot;FromImage&quot;"/>
                  <item name="Restore" value="&quot;Restore&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.storageProfile.dataDisks[].deleteOption" options="delete-option">
                <help short="Specifies whether data disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the data disk is deleted when VM is deleted. **Detach.** If this value is used, the data disk is retained after VM is deleted. The default value is set to **Detach**."/>
                <enum>
                  <item name="Delete" value="&quot;Delete&quot;"/>
                  <item name="Detach" value="&quot;Detach&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.storageProfile.dataDisks[].detachOption" options="detach-option">
                <help short="Specifies the detach behavior to be used while detaching a disk or which is already in the process of detachment from the virtual machine. Supported values: **ForceDetach.** detachOption: **ForceDetach** is applicable only for managed data disks. If a previous detachment attempt of the data disk did not complete due to an unexpected failure from the virtual machine and the disk is still not released then use force-detach as a last resort option to detach the disk forcibly from the VM. All writes might not have been flushed when using this detach behavior. To force-detach a data disk update toBeDetached to 'true' along with setting detachOption: 'ForceDetach'."/>
                <enum>
                  <item name="ForceDetach" value="&quot;ForceDetach&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="integer32" var="$parameters.properties.storageProfile.dataDisks[].diskSizeGB" options="disk-size-gb">
                <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
              </arg>
              <arg nullable="True" type="@VirtualHardDisk_update" var="$parameters.properties.storageProfile.dataDisks[].image" options="image">
                <help short="The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."/>
              </arg>
              <arg type="integer32" var="$parameters.properties.storageProfile.dataDisks[].lun" options="lun">
                <help short="Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM."/>
              </arg>
              <arg nullable="True" type="@ManagedDiskParameters_update" var="$parameters.properties.storageProfile.dataDisks[].managedDisk" options="managed-disk">
                <help short="The managed disk parameters."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.storageProfile.dataDisks[].name" options="name">
                <help short="The disk name."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.storageProfile.dataDisks[].sourceResource" options="source-resource">
                <help short="The source resource identifier. It can be a snapshot, or disk restore point from which to create a disk."/>
                <arg nullable="True" type="string" var="$parameters.properties.storageProfile.dataDisks[].sourceResource.id" options="id">
                  <help short="The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."/>
                </arg>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.storageProfile.dataDisks[].toBeDetached" options="to-be-detached">
                <help short="Specifies whether the data disk is in process of detachment from the VirtualMachine/VirtualMachineScaleset"/>
              </arg>
              <arg nullable="True" type="@VirtualHardDisk_update" var="$parameters.properties.storageProfile.dataDisks[].vhd" options="vhd">
                <help short="The virtual hard disk."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.storageProfile.dataDisks[].writeAcceleratorEnabled" options="write-accelerator-enabled">
                <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$parameters.properties.storageProfile.diskControllerType" options="disk-controller-type">
            <help short="Specifies the disk controller type configured for the VM. **Note:** This property will be set to the default disk controller type if not specified provided virtual machine is being created with 'hyperVGeneration' set to V2 based on the capabilities of the operating system disk and VM size from the the specified minimum api version. You need to deallocate the VM before updating its disk controller type unless you are updating the VM size in the VM configuration which implicitly deallocates and reallocates the VM. Minimum api-version: 2022-08-01."/>
            <enum>
              <item name="NVMe" value="&quot;NVMe&quot;"/>
              <item name="SCSI" value="&quot;SCSI&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.storageProfile.imageReference" options="image-reference">
            <help short="Specifies information about the image to use. You can specify information about platform images, marketplace images, or virtual machine images. This element is required when you want to use a platform image, marketplace image, or virtual machine image, but is not used in other creation operations."/>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.imageReference.communityGalleryImageId" options="community-gallery-image-id">
              <help short="Specified the community gallery image unique id for vm deployment. This can be fetched from community gallery image GET call."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.imageReference.id" options="id">
              <help short="Resource Id"/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.imageReference.offer" options="offer">
              <help short="Specifies the offer of the platform image or marketplace image used to create the virtual machine."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.imageReference.publisher" options="publisher">
              <help short="The image publisher."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.imageReference.sharedGalleryImageId" options="shared-gallery-image-id">
              <help short="Specified the shared gallery image unique id for vm deployment. This can be fetched from shared gallery image GET call."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.imageReference.sku" options="sku">
              <help short="The image SKU."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.imageReference.version" options="version">
              <help short="Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use the latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a new version becomes available. Please do not use field 'version' for gallery image deployment, gallery image should always use 'id' field for deployment, to use 'latest' version of gallery image, just set '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}' in the 'id' field without version input."/>
            </arg>
          </arg>
          <arg nullable="True" type="object" var="$parameters.properties.storageProfile.osDisk" options="os-disk">
            <help short="Specifies information about the operating system disk used by the virtual machine. For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview)."/>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.osDisk.caching" options="caching">
              <help short="Specifies the caching requirements. Possible values are: **None,** **ReadOnly,** **ReadWrite.** The defaulting behavior is: **None for Standard storage. ReadOnly for Premium storage.**"/>
              <enum>
                <item name="None" value="&quot;None&quot;"/>
                <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$parameters.properties.storageProfile.osDisk.createOption" options="create-option">
              <help short="Specifies how the virtual machine disk should be created. Possible values are **Attach:** This value is used when you are using a specialized disk to create the virtual machine. **FromImage:** This value is used when you are using an image to create the virtual machine. If you are using a platform image, you should also use the imageReference element described above. If you are using a marketplace image, you should also use the plan element previously described."/>
              <enum>
                <item name="Attach" value="&quot;Attach&quot;"/>
                <item name="Copy" value="&quot;Copy&quot;"/>
                <item name="Empty" value="&quot;Empty&quot;"/>
                <item name="FromImage" value="&quot;FromImage&quot;"/>
                <item name="Restore" value="&quot;Restore&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.osDisk.deleteOption" options="delete-option">
              <help short="Specifies whether OS Disk should be deleted or detached upon VM deletion. Possible values are: **Delete.** If this value is used, the OS disk is deleted when VM is deleted. **Detach.** If this value is used, the os disk is retained after VM is deleted. The default value is set to **Detach**. For an ephemeral OS Disk, the default value is set to **Delete**. The user cannot change the delete option for an ephemeral OS Disk."/>
              <enum>
                <item name="Delete" value="&quot;Delete&quot;"/>
                <item name="Detach" value="&quot;Detach&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.storageProfile.osDisk.diffDiskSettings" options="diff-disk-settings">
              <help short="Specifies the ephemeral Disk Settings for the operating system disk used by the virtual machine."/>
              <arg nullable="True" type="string" var="$parameters.properties.storageProfile.osDisk.diffDiskSettings.option" options="option">
                <help short="Specifies the ephemeral disk settings for operating system disk."/>
                <enum>
                  <item name="Local" value="&quot;Local&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.storageProfile.osDisk.diffDiskSettings.placement" options="placement">
                <help short="Specifies the ephemeral disk placement for operating system disk. Possible values are: **CacheDisk,** **ResourceDisk,** **NvmeDisk.** The defaulting behavior is: **CacheDisk** if one is configured for the VM size otherwise **ResourceDisk** or **NvmeDisk** is used. Refer to the VM size documentation for Windows VM at https://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at https://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM sizes exposes a cache disk. Minimum api-version for NvmeDisk: 2024-03-01."/>
                <enum>
                  <item name="CacheDisk" value="&quot;CacheDisk&quot;"/>
                  <item name="NvmeDisk" value="&quot;NvmeDisk&quot;"/>
                  <item name="ResourceDisk" value="&quot;ResourceDisk&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="integer32" var="$parameters.properties.storageProfile.osDisk.diskSizeGB" options="disk-size-gb">
              <help short="Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB' is the number of bytes x 1024^3 for the disk and the value cannot be larger than 1023."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.storageProfile.osDisk.encryptionSettings" options="encryption-settings">
              <help short="Specifies the encryption settings for the OS Disk. Minimum api-version: 2015-06-15."/>
              <arg nullable="True" type="object" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey" options="disk-encryption-key">
                <help short="Specifies the location of the disk encryption key, which is a Key Vault Secret."/>
                <arg type="string" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl" options="secret-url">
                  <help short="The URL referencing a secret in a Key Vault."/>
                </arg>
                <arg type="object" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault" options="source-vault" cls="SubResource_update">
                  <help short="The relative URL of the Key Vault containing the secret."/>
                  <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                    <help short="Resource Id"/>
                  </arg>
                </arg>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.enabled" options="enabled">
                <help short="Specifies whether disk encryption should be enabled on the virtual machine."/>
              </arg>
              <arg nullable="True" type="object" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey" options="key-encryption-key">
                <help short="Specifies the location of the key encryption key in Key Vault."/>
                <arg type="string" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl" options="key-url">
                  <help short="The URL referencing a key encryption key in Key Vault."/>
                </arg>
                <arg type="@SubResource_update" var="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault" options="source-vault">
                  <help short="The relative URL of the Key Vault containing the key."/>
                </arg>
              </arg>
            </arg>
            <arg nullable="True" type="@VirtualHardDisk_update" var="$parameters.properties.storageProfile.osDisk.image" options="image">
              <help short="The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual machine. If SourceImage is provided, the destination virtual hard drive must not exist."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.storageProfile.osDisk.managedDisk" options="managed-disk" cls="ManagedDiskParameters_update">
              <help short="The managed disk parameters."/>
              <arg nullable="True" type="object" var="@ManagedDiskParameters_update.diskEncryptionSet" options="disk-encryption-set" cls="DiskEncryptionSetParameters_update">
                <help short="Specifies the customer managed disk encryption set resource id for the managed disk."/>
                <arg nullable="True" type="string" var="@DiskEncryptionSetParameters_update.id" options="id">
                  <help short="Resource Id"/>
                </arg>
              </arg>
              <arg nullable="True" type="string" var="@ManagedDiskParameters_update.id" options="id">
                <help short="Resource Id"/>
              </arg>
              <arg nullable="True" type="object" var="@ManagedDiskParameters_update.securityProfile" options="security-profile">
                <help short="Specifies the security profile for the managed disk."/>
                <arg nullable="True" type="@DiskEncryptionSetParameters_update" var="@ManagedDiskParameters_update.securityProfile.diskEncryptionSet" options="disk-encryption-set">
                  <help short="Specifies the customer managed disk encryption set resource id for the managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and VMGuest blob."/>
                </arg>
                <arg nullable="True" type="string" var="@ManagedDiskParameters_update.securityProfile.securityEncryptionType" options="security-encryption-type">
                  <help short="Specifies the EncryptionType of the managed disk. It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, VMGuestStateOnly for encryption of just the VMGuestState blob, and NonPersistedTPM for not persisting firmware state in the VMGuestState blob.. **Note:** It can be set for only Confidential VMs."/>
                  <enum>
                    <item name="DiskWithVMGuestState" value="&quot;DiskWithVMGuestState&quot;"/>
                    <item name="NonPersistedTPM" value="&quot;NonPersistedTPM&quot;"/>
                    <item name="VMGuestStateOnly" value="&quot;VMGuestStateOnly&quot;"/>
                  </enum>
                </arg>
              </arg>
              <arg nullable="True" type="string" var="@ManagedDiskParameters_update.storageAccountType" options="storage-account-type">
                <help short="Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with data disks, it cannot be used with OS Disk."/>
                <enum>
                  <item name="PremiumV2_LRS" value="&quot;PremiumV2_LRS&quot;"/>
                  <item name="Premium_LRS" value="&quot;Premium_LRS&quot;"/>
                  <item name="Premium_ZRS" value="&quot;Premium_ZRS&quot;"/>
                  <item name="StandardSSD_LRS" value="&quot;StandardSSD_LRS&quot;"/>
                  <item name="StandardSSD_ZRS" value="&quot;StandardSSD_ZRS&quot;"/>
                  <item name="Standard_LRS" value="&quot;Standard_LRS&quot;"/>
                  <item name="UltraSSD_LRS" value="&quot;UltraSSD_LRS&quot;"/>
                </enum>
              </arg>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.osDisk.name" options="name">
              <help short="The disk name."/>
            </arg>
            <arg nullable="True" type="string" var="$parameters.properties.storageProfile.osDisk.osType" options="os-type">
              <help short="This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. Possible values are: **Windows,** **Linux.**"/>
              <enum>
                <item name="Linux" value="&quot;Linux&quot;"/>
                <item name="Windows" value="&quot;Windows&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.storageProfile.osDisk.vhd" options="vhd" cls="VirtualHardDisk_update">
              <help short="The virtual hard disk."/>
              <arg nullable="True" type="string" var="@VirtualHardDisk_update.uri" options="uri">
                <help short="Specifies the virtual hard disk's uri."/>
              </arg>
            </arg>
            <arg nullable="True" type="boolean" var="$parameters.properties.storageProfile.osDisk.writeAcceleratorEnabled" options="write-accelerator-enabled">
              <help short="Specifies whether writeAccelerator should be enabled or disabled on the disk."/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.userData" options="user-data" group="Properties">
          <help short="UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. Minimum api-version: 2021-03-01."/>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$parameters.properties.virtualMachineScaleSet" options="virtual-machine-scale-set" group="Properties">
          <help short="Specifies information about the virtual machine scale set that the virtual machine should be assigned to. Virtual machines specified in the same virtual machine scale set are allocated to different nodes to maximize availability. Currently, a VM can only be added to virtual machine scale set at creation time. An existing VM cannot be added to a virtual machine scale set. This property cannot exist along with a non-null properties.availabilitySet reference. Minimum api-version: 2019-03-01."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachines_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualMachine_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="object" name="extendedLocation">
                    <prop type="string" name="name"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;EdgeZone&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="managedBy"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="placement">
                    <prop type="array<string>" name="excludeZones">
                      <item type="string"/>
                    </prop>
                    <prop type="array<string>" name="includeZones">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="zonePlacementPolicy">
                      <enum>
                        <item value="&quot;Any&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="plan">
                    <prop type="string" name="name"/>
                    <prop type="string" name="product"/>
                    <prop type="string" name="promotionCode"/>
                    <prop type="string" name="publisher"/>
                  </prop>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="additionalCapabilities">
                      <prop type="boolean" name="hibernationEnabled"/>
                      <prop type="boolean" name="ultraSSDEnabled"/>
                    </prop>
                    <prop type="object" name="applicationProfile">
                      <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                        <item type="object">
                          <prop type="string" name="configurationReference"/>
                          <prop type="boolean" name="enableAutomaticUpgrade"/>
                          <prop type="integer32" name="order"/>
                          <prop type="string" name="packageReferenceId" required="True"/>
                          <prop type="string" name="tags"/>
                          <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                        </item>
                      </prop>
                    </prop>
                    <prop type="@SubResource_read" name="availabilitySet"/>
                    <prop type="object" name="billingProfile">
                      <prop type="float64" name="maxPrice"/>
                    </prop>
                    <prop type="object" name="capacityReservation">
                      <prop type="@SubResource_read" name="capacityReservationGroup"/>
                    </prop>
                    <prop type="object" name="diagnosticsProfile">
                      <prop type="object" name="bootDiagnostics">
                        <prop type="boolean" name="enabled"/>
                        <prop type="string" name="storageUri"/>
                      </prop>
                    </prop>
                    <prop type="string" name="evictionPolicy">
                      <enum>
                        <item value="&quot;Deallocate&quot;"/>
                        <item value="&quot;Delete&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="extensionsTimeBudget"/>
                    <prop type="object" name="hardwareProfile">
                      <prop type="string" name="vmSize">
                        <enum>
                          <item value="&quot;Basic_A0&quot;"/>
                          <item value="&quot;Basic_A1&quot;"/>
                          <item value="&quot;Basic_A2&quot;"/>
                          <item value="&quot;Basic_A3&quot;"/>
                          <item value="&quot;Basic_A4&quot;"/>
                          <item value="&quot;Standard_A0&quot;"/>
                          <item value="&quot;Standard_A1&quot;"/>
                          <item value="&quot;Standard_A10&quot;"/>
                          <item value="&quot;Standard_A11&quot;"/>
                          <item value="&quot;Standard_A1_v2&quot;"/>
                          <item value="&quot;Standard_A2&quot;"/>
                          <item value="&quot;Standard_A2_v2&quot;"/>
                          <item value="&quot;Standard_A2m_v2&quot;"/>
                          <item value="&quot;Standard_A3&quot;"/>
                          <item value="&quot;Standard_A4&quot;"/>
                          <item value="&quot;Standard_A4_v2&quot;"/>
                          <item value="&quot;Standard_A4m_v2&quot;"/>
                          <item value="&quot;Standard_A5&quot;"/>
                          <item value="&quot;Standard_A6&quot;"/>
                          <item value="&quot;Standard_A7&quot;"/>
                          <item value="&quot;Standard_A8&quot;"/>
                          <item value="&quot;Standard_A8_v2&quot;"/>
                          <item value="&quot;Standard_A8m_v2&quot;"/>
                          <item value="&quot;Standard_A9&quot;"/>
                          <item value="&quot;Standard_B1ms&quot;"/>
                          <item value="&quot;Standard_B1s&quot;"/>
                          <item value="&quot;Standard_B2ms&quot;"/>
                          <item value="&quot;Standard_B2s&quot;"/>
                          <item value="&quot;Standard_B4ms&quot;"/>
                          <item value="&quot;Standard_B8ms&quot;"/>
                          <item value="&quot;Standard_D1&quot;"/>
                          <item value="&quot;Standard_D11&quot;"/>
                          <item value="&quot;Standard_D11_v2&quot;"/>
                          <item value="&quot;Standard_D12&quot;"/>
                          <item value="&quot;Standard_D12_v2&quot;"/>
                          <item value="&quot;Standard_D13&quot;"/>
                          <item value="&quot;Standard_D13_v2&quot;"/>
                          <item value="&quot;Standard_D14&quot;"/>
                          <item value="&quot;Standard_D14_v2&quot;"/>
                          <item value="&quot;Standard_D15_v2&quot;"/>
                          <item value="&quot;Standard_D16_v3&quot;"/>
                          <item value="&quot;Standard_D16s_v3&quot;"/>
                          <item value="&quot;Standard_D1_v2&quot;"/>
                          <item value="&quot;Standard_D2&quot;"/>
                          <item value="&quot;Standard_D2_v2&quot;"/>
                          <item value="&quot;Standard_D2_v3&quot;"/>
                          <item value="&quot;Standard_D2s_v3&quot;"/>
                          <item value="&quot;Standard_D3&quot;"/>
                          <item value="&quot;Standard_D32_v3&quot;"/>
                          <item value="&quot;Standard_D32s_v3&quot;"/>
                          <item value="&quot;Standard_D3_v2&quot;"/>
                          <item value="&quot;Standard_D4&quot;"/>
                          <item value="&quot;Standard_D4_v2&quot;"/>
                          <item value="&quot;Standard_D4_v3&quot;"/>
                          <item value="&quot;Standard_D4s_v3&quot;"/>
                          <item value="&quot;Standard_D5_v2&quot;"/>
                          <item value="&quot;Standard_D64_v3&quot;"/>
                          <item value="&quot;Standard_D64s_v3&quot;"/>
                          <item value="&quot;Standard_D8_v3&quot;"/>
                          <item value="&quot;Standard_D8s_v3&quot;"/>
                          <item value="&quot;Standard_DS1&quot;"/>
                          <item value="&quot;Standard_DS11&quot;"/>
                          <item value="&quot;Standard_DS11_v2&quot;"/>
                          <item value="&quot;Standard_DS12&quot;"/>
                          <item value="&quot;Standard_DS12_v2&quot;"/>
                          <item value="&quot;Standard_DS13&quot;"/>
                          <item value="&quot;Standard_DS13-2_v2&quot;"/>
                          <item value="&quot;Standard_DS13-4_v2&quot;"/>
                          <item value="&quot;Standard_DS13_v2&quot;"/>
                          <item value="&quot;Standard_DS14&quot;"/>
                          <item value="&quot;Standard_DS14-4_v2&quot;"/>
                          <item value="&quot;Standard_DS14-8_v2&quot;"/>
                          <item value="&quot;Standard_DS14_v2&quot;"/>
                          <item value="&quot;Standard_DS15_v2&quot;"/>
                          <item value="&quot;Standard_DS1_v2&quot;"/>
                          <item value="&quot;Standard_DS2&quot;"/>
                          <item value="&quot;Standard_DS2_v2&quot;"/>
                          <item value="&quot;Standard_DS3&quot;"/>
                          <item value="&quot;Standard_DS3_v2&quot;"/>
                          <item value="&quot;Standard_DS4&quot;"/>
                          <item value="&quot;Standard_DS4_v2&quot;"/>
                          <item value="&quot;Standard_DS5_v2&quot;"/>
                          <item value="&quot;Standard_E16_v3&quot;"/>
                          <item value="&quot;Standard_E16s_v3&quot;"/>
                          <item value="&quot;Standard_E2_v3&quot;"/>
                          <item value="&quot;Standard_E2s_v3&quot;"/>
                          <item value="&quot;Standard_E32-16_v3&quot;"/>
                          <item value="&quot;Standard_E32-8s_v3&quot;"/>
                          <item value="&quot;Standard_E32_v3&quot;"/>
                          <item value="&quot;Standard_E32s_v3&quot;"/>
                          <item value="&quot;Standard_E4_v3&quot;"/>
                          <item value="&quot;Standard_E4s_v3&quot;"/>
                          <item value="&quot;Standard_E64-16s_v3&quot;"/>
                          <item value="&quot;Standard_E64-32s_v3&quot;"/>
                          <item value="&quot;Standard_E64_v3&quot;"/>
                          <item value="&quot;Standard_E64s_v3&quot;"/>
                          <item value="&quot;Standard_E8_v3&quot;"/>
                          <item value="&quot;Standard_E8s_v3&quot;"/>
                          <item value="&quot;Standard_F1&quot;"/>
                          <item value="&quot;Standard_F16&quot;"/>
                          <item value="&quot;Standard_F16s&quot;"/>
                          <item value="&quot;Standard_F16s_v2&quot;"/>
                          <item value="&quot;Standard_F1s&quot;"/>
                          <item value="&quot;Standard_F2&quot;"/>
                          <item value="&quot;Standard_F2s&quot;"/>
                          <item value="&quot;Standard_F2s_v2&quot;"/>
                          <item value="&quot;Standard_F32s_v2&quot;"/>
                          <item value="&quot;Standard_F4&quot;"/>
                          <item value="&quot;Standard_F4s&quot;"/>
                          <item value="&quot;Standard_F4s_v2&quot;"/>
                          <item value="&quot;Standard_F64s_v2&quot;"/>
                          <item value="&quot;Standard_F72s_v2&quot;"/>
                          <item value="&quot;Standard_F8&quot;"/>
                          <item value="&quot;Standard_F8s&quot;"/>
                          <item value="&quot;Standard_F8s_v2&quot;"/>
                          <item value="&quot;Standard_G1&quot;"/>
                          <item value="&quot;Standard_G2&quot;"/>
                          <item value="&quot;Standard_G3&quot;"/>
                          <item value="&quot;Standard_G4&quot;"/>
                          <item value="&quot;Standard_G5&quot;"/>
                          <item value="&quot;Standard_GS1&quot;"/>
                          <item value="&quot;Standard_GS2&quot;"/>
                          <item value="&quot;Standard_GS3&quot;"/>
                          <item value="&quot;Standard_GS4&quot;"/>
                          <item value="&quot;Standard_GS4-4&quot;"/>
                          <item value="&quot;Standard_GS4-8&quot;"/>
                          <item value="&quot;Standard_GS5&quot;"/>
                          <item value="&quot;Standard_GS5-16&quot;"/>
                          <item value="&quot;Standard_GS5-8&quot;"/>
                          <item value="&quot;Standard_H16&quot;"/>
                          <item value="&quot;Standard_H16m&quot;"/>
                          <item value="&quot;Standard_H16mr&quot;"/>
                          <item value="&quot;Standard_H16r&quot;"/>
                          <item value="&quot;Standard_H8&quot;"/>
                          <item value="&quot;Standard_H8m&quot;"/>
                          <item value="&quot;Standard_L16s&quot;"/>
                          <item value="&quot;Standard_L32s&quot;"/>
                          <item value="&quot;Standard_L4s&quot;"/>
                          <item value="&quot;Standard_L8s&quot;"/>
                          <item value="&quot;Standard_M128-32ms&quot;"/>
                          <item value="&quot;Standard_M128-64ms&quot;"/>
                          <item value="&quot;Standard_M128ms&quot;"/>
                          <item value="&quot;Standard_M128s&quot;"/>
                          <item value="&quot;Standard_M64-16ms&quot;"/>
                          <item value="&quot;Standard_M64-32ms&quot;"/>
                          <item value="&quot;Standard_M64ms&quot;"/>
                          <item value="&quot;Standard_M64s&quot;"/>
                          <item value="&quot;Standard_NC12&quot;"/>
                          <item value="&quot;Standard_NC12s_v2&quot;"/>
                          <item value="&quot;Standard_NC12s_v3&quot;"/>
                          <item value="&quot;Standard_NC24&quot;"/>
                          <item value="&quot;Standard_NC24r&quot;"/>
                          <item value="&quot;Standard_NC24rs_v2&quot;"/>
                          <item value="&quot;Standard_NC24rs_v3&quot;"/>
                          <item value="&quot;Standard_NC24s_v2&quot;"/>
                          <item value="&quot;Standard_NC24s_v3&quot;"/>
                          <item value="&quot;Standard_NC6&quot;"/>
                          <item value="&quot;Standard_NC6s_v2&quot;"/>
                          <item value="&quot;Standard_NC6s_v3&quot;"/>
                          <item value="&quot;Standard_ND12s&quot;"/>
                          <item value="&quot;Standard_ND24rs&quot;"/>
                          <item value="&quot;Standard_ND24s&quot;"/>
                          <item value="&quot;Standard_ND6s&quot;"/>
                          <item value="&quot;Standard_NV12&quot;"/>
                          <item value="&quot;Standard_NV24&quot;"/>
                          <item value="&quot;Standard_NV6&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="vmSizeProperties">
                        <prop type="integer32" name="vCPUsAvailable"/>
                        <prop type="integer32" name="vCPUsPerCore"/>
                      </prop>
                    </prop>
                    <prop type="@SubResource_read" name="host"/>
                    <prop type="@SubResource_read" name="hostGroup"/>
                    <prop readOnly="True" type="object" name="instanceView">
                      <prop readOnly="True" type="string" name="assignedHost"/>
                      <prop type="object" name="bootDiagnostics">
                        <prop readOnly="True" type="string" name="consoleScreenshotBlobUri"/>
                        <prop readOnly="True" type="string" name="serialConsoleLogBlobUri"/>
                        <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                      </prop>
                      <prop type="string" name="computerName"/>
                      <prop type="array<object>" name="disks" identifiers="name">
                        <item type="object">
                          <prop type="array<@DiskEncryptionSettings_read>" name="encryptionSettings">
                            <item type="@DiskEncryptionSettings_read"/>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="array<@InstanceViewStatus_read>" name="statuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="extensions" identifiers="name type">
                        <item type="object" cls="VirtualMachineExtensionInstanceView_read">
                          <prop type="string" name="name"/>
                          <prop type="array<@InstanceViewStatus_read>" name="statuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="array<@InstanceViewStatus_read>" name="substatuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="string" name="type"/>
                          <prop type="string" name="typeHandlerVersion"/>
                        </item>
                      </prop>
                      <prop type="string" name="hyperVGeneration">
                        <enum>
                          <item value="&quot;V1&quot;"/>
                          <item value="&quot;V2&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="boolean" name="isVMInStandbyPool"/>
                      <prop type="object" name="maintenanceRedeployStatus">
                        <prop type="boolean" name="isCustomerInitiatedMaintenanceAllowed"/>
                        <prop type="string" name="lastOperationMessage"/>
                        <prop type="string" name="lastOperationResultCode">
                          <enum>
                            <item value="&quot;MaintenanceAborted&quot;"/>
                            <item value="&quot;MaintenanceCompleted&quot;"/>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;RetryLater&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="maintenanceWindowEndTime"/>
                        <prop type="dateTime" name="maintenanceWindowStartTime"/>
                        <prop type="dateTime" name="preMaintenanceWindowEndTime"/>
                        <prop type="dateTime" name="preMaintenanceWindowStartTime"/>
                      </prop>
                      <prop type="string" name="osName"/>
                      <prop type="string" name="osVersion"/>
                      <prop type="object" name="patchStatus">
                        <prop type="object" name="availablePatchSummary">
                          <prop readOnly="True" type="string" name="assessmentActivityId"/>
                          <prop readOnly="True" type="integer32" name="criticalAndSecurityPatchCount"/>
                          <prop readOnly="True" type="object" name="error" cls="ApiError_read">
                            <prop type="string" name="code"/>
                            <prop type="array<object>" name="details" identifiers="message target">
                              <item type="object">
                                <prop type="string" name="code"/>
                                <prop type="string" name="message"/>
                                <prop type="string" name="target"/>
                              </item>
                            </prop>
                            <prop type="object" name="innererror">
                              <prop type="string" name="errordetail"/>
                              <prop type="string" name="exceptiontype"/>
                            </prop>
                            <prop type="string" name="message"/>
                            <prop type="string" name="target"/>
                          </prop>
                          <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                          <prop readOnly="True" type="integer32" name="otherPatchCount"/>
                          <prop readOnly="True" type="boolean" name="rebootPending"/>
                          <prop readOnly="True" type="dateTime" name="startTime"/>
                          <prop readOnly="True" type="string" name="status">
                            <enum>
                              <item value="&quot;CompletedWithWarnings&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="array<@InstanceViewStatus_read>" name="configurationStatuses">
                          <item type="@InstanceViewStatus_read"/>
                        </prop>
                        <prop type="object" name="lastPatchInstallationSummary">
                          <prop readOnly="True" type="@ApiError_read" name="error"/>
                          <prop readOnly="True" type="integer32" name="excludedPatchCount"/>
                          <prop readOnly="True" type="integer32" name="failedPatchCount"/>
                          <prop readOnly="True" type="string" name="installationActivityId"/>
                          <prop readOnly="True" type="integer32" name="installedPatchCount"/>
                          <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                          <prop readOnly="True" type="boolean" name="maintenanceWindowExceeded"/>
                          <prop readOnly="True" type="integer32" name="notSelectedPatchCount"/>
                          <prop readOnly="True" type="integer32" name="pendingPatchCount"/>
                          <prop readOnly="True" type="dateTime" name="startTime"/>
                          <prop readOnly="True" type="string" name="status">
                            <enum>
                              <item value="&quot;CompletedWithWarnings&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;InProgress&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Unknown&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="integer32" name="platformFaultDomain"/>
                      <prop type="integer32" name="platformUpdateDomain"/>
                      <prop type="string" name="rdpThumbPrint"/>
                      <prop type="array<@InstanceViewStatus_read>" name="statuses">
                        <item type="@InstanceViewStatus_read"/>
                      </prop>
                      <prop type="object" name="vmAgent">
                        <prop type="array<object>" name="extensionHandlers">
                          <item type="object">
                            <prop type="object" name="status" cls="InstanceViewStatus_read">
                              <prop type="string" name="code"/>
                              <prop type="string" name="displayStatus"/>
                              <prop type="string" name="level">
                                <enum>
                                  <item value="&quot;Error&quot;"/>
                                  <item value="&quot;Info&quot;"/>
                                  <item value="&quot;Warning&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="message"/>
                              <prop type="dateTime" name="time"/>
                            </prop>
                            <prop type="string" name="type"/>
                            <prop type="string" name="typeHandlerVersion"/>
                          </item>
                        </prop>
                        <prop type="array<@InstanceViewStatus_read>" name="statuses">
                          <item type="@InstanceViewStatus_read"/>
                        </prop>
                        <prop type="string" name="vmAgentVersion"/>
                      </prop>
                      <prop readOnly="True" type="object" name="vmHealth">
                        <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                      </prop>
                    </prop>
                    <prop type="string" name="licenseType"/>
                    <prop type="object" name="networkProfile">
                      <prop type="string" name="networkApiVersion">
                        <enum>
                          <item value="&quot;2020-11-01&quot;"/>
                          <item value="&quot;2022-11-01&quot;"/>
                        </enum>
                      </prop>
                      <prop type="array<object>" name="networkInterfaceConfigurations" identifiers="name">
                        <item type="object">
                          <prop type="string" name="name" required="True"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="auxiliaryMode">
                              <enum>
                                <item value="&quot;AcceleratedConnections&quot;"/>
                                <item value="&quot;Floating&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="auxiliarySku">
                              <enum>
                                <item value="&quot;A1&quot;"/>
                                <item value="&quot;A2&quot;"/>
                                <item value="&quot;A4&quot;"/>
                                <item value="&quot;A8&quot;"/>
                                <item value="&quot;None&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="disableTcpStateTracking"/>
                            <prop type="object" name="dnsSettings">
                              <prop type="array<string>" name="dnsServers">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="@SubResource_read" name="dscpConfiguration"/>
                            <prop type="boolean" name="enableAcceleratedNetworking"/>
                            <prop type="boolean" name="enableFpga"/>
                            <prop type="boolean" name="enableIPForwarding"/>
                            <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                              <item type="object">
                                <prop type="string" name="name" required="True"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                    <item type="@SubResource_read"/>
                                  </prop>
                                  <prop type="boolean" name="primary"/>
                                  <prop type="string" name="privateIPAddressVersion">
                                    <enum>
                                      <item value="&quot;IPv4&quot;"/>
                                      <item value="&quot;IPv6&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="publicIPAddressConfiguration">
                                    <prop type="string" name="name" required="True"/>
                                    <prop type="object" name="properties" clientFlatten="True">
                                      <prop type="string" name="deleteOption">
                                        <enum>
                                          <item value="&quot;Delete&quot;"/>
                                          <item value="&quot;Detach&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="object" name="dnsSettings">
                                        <prop type="string" name="domainNameLabel" required="True"/>
                                        <prop type="string" name="domainNameLabelScope">
                                          <enum>
                                            <item value="&quot;NoReuse&quot;"/>
                                            <item value="&quot;ResourceGroupReuse&quot;"/>
                                            <item value="&quot;SubscriptionReuse&quot;"/>
                                            <item value="&quot;TenantReuse&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                      <prop type="integer32" name="idleTimeoutInMinutes"/>
                                      <prop type="array<object>" name="ipTags">
                                        <item type="object">
                                          <prop type="string" name="ipTagType"/>
                                          <prop type="string" name="tag"/>
                                        </item>
                                      </prop>
                                      <prop type="string" name="publicIPAddressVersion">
                                        <enum>
                                          <item value="&quot;IPv4&quot;"/>
                                          <item value="&quot;IPv6&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="publicIPAllocationMethod">
                                        <enum>
                                          <item value="&quot;Dynamic&quot;"/>
                                          <item value="&quot;Static&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="@SubResource_read" name="publicIPPrefix"/>
                                    </prop>
                                    <prop type="object" name="sku">
                                      <prop type="string" name="name">
                                        <enum>
                                          <item value="&quot;Basic&quot;"/>
                                          <item value="&quot;Standard&quot;"/>
                                        </enum>
                                      </prop>
                                      <prop type="string" name="tier">
                                        <enum>
                                          <item value="&quot;Global&quot;"/>
                                          <item value="&quot;Regional&quot;"/>
                                        </enum>
                                      </prop>
                                    </prop>
                                  </prop>
                                  <prop type="@SubResource_read" name="subnet"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="@SubResource_read" name="networkSecurityGroup"/>
                            <prop type="boolean" name="primary"/>
                          </prop>
                        </item>
                      </prop>
                      <prop type="array<object>" name="networkInterfaces">
                        <item type="object">
                          <prop type="string" name="id"/>
                          <prop type="object" name="properties" clientFlatten="True">
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="primary"/>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                    <prop type="object" name="osProfile">
                      <prop type="string" name="adminPassword" secret="True"/>
                      <prop type="string" name="adminUsername"/>
                      <prop type="boolean" name="allowExtensionOperations"/>
                      <prop type="string" name="computerName"/>
                      <prop type="string" name="customData"/>
                      <prop type="object" name="linuxConfiguration">
                        <prop type="boolean" name="disablePasswordAuthentication"/>
                        <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                        <prop type="object" name="patchSettings">
                          <prop type="string" name="assessmentMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="automaticByPlatformSettings">
                            <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                            <prop type="string" name="rebootSetting">
                              <enum>
                                <item value="&quot;Always&quot;"/>
                                <item value="&quot;IfRequired&quot;"/>
                                <item value="&quot;Never&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="patchMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="boolean" name="provisionVMAgent"/>
                        <prop type="object" name="ssh">
                          <prop type="array<object>" name="publicKeys" identifiers="path">
                            <item type="object">
                              <prop type="string" name="keyData"/>
                              <prop type="string" name="path"/>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="boolean" name="requireGuestProvisionSignal"/>
                      <prop type="array<object>" name="secrets">
                        <item type="object">
                          <prop type="@SubResource_read" name="sourceVault"/>
                          <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                            <item type="object">
                              <prop type="string" name="certificateStore"/>
                              <prop type="string" name="certificateUrl"/>
                            </item>
                          </prop>
                        </item>
                      </prop>
                      <prop type="object" name="windowsConfiguration">
                        <prop type="array<object>" name="additionalUnattendContent">
                          <item type="object">
                            <prop type="string" name="componentName">
                              <enum>
                                <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="content"/>
                            <prop type="string" name="passName">
                              <enum>
                                <item value="&quot;OobeSystem&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="settingName">
                              <enum>
                                <item value="&quot;AutoLogon&quot;"/>
                                <item value="&quot;FirstLogonCommands&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                        <prop type="boolean" name="enableAutomaticUpdates"/>
                        <prop readOnly="True" type="boolean" name="enableVMAgentPlatformUpdates"/>
                        <prop type="object" name="patchSettings">
                          <prop type="string" name="assessmentMode">
                            <enum>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;ImageDefault&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="automaticByPlatformSettings">
                            <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                            <prop type="string" name="rebootSetting">
                              <enum>
                                <item value="&quot;Always&quot;"/>
                                <item value="&quot;IfRequired&quot;"/>
                                <item value="&quot;Never&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enableHotpatching"/>
                          <prop type="string" name="patchMode">
                            <enum>
                              <item value="&quot;AutomaticByOS&quot;"/>
                              <item value="&quot;AutomaticByPlatform&quot;"/>
                              <item value="&quot;Manual&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="boolean" name="provisionVMAgent"/>
                        <prop type="string" name="timeZone"/>
                        <prop type="object" name="winRM">
                          <prop type="array<object>" name="listeners">
                            <item type="object">
                              <prop type="string" name="certificateUrl"/>
                              <prop type="string" name="protocol">
                                <enum>
                                  <item value="&quot;Http&quot;"/>
                                  <item value="&quot;Https&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer32" name="platformFaultDomain"/>
                    <prop type="string" name="priority">
                      <enum>
                        <item value="&quot;Low&quot;"/>
                        <item value="&quot;Regular&quot;"/>
                        <item value="&quot;Spot&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                    <prop type="object" name="scheduledEventsPolicy">
                      <prop type="object" name="scheduledEventsAdditionalPublishingTargets">
                        <prop type="object" name="eventGridAndResourceGraph">
                          <prop type="boolean" name="enable"/>
                        </prop>
                      </prop>
                      <prop type="object" name="userInitiatedReboot">
                        <prop type="boolean" name="automaticallyApprove"/>
                      </prop>
                      <prop type="object" name="userInitiatedRedeploy">
                        <prop type="boolean" name="automaticallyApprove"/>
                      </prop>
                    </prop>
                    <prop type="object" name="scheduledEventsProfile">
                      <prop type="object" name="osImageNotificationProfile">
                        <prop type="boolean" name="enable"/>
                        <prop type="string" name="notBeforeTimeout"/>
                      </prop>
                      <prop type="object" name="terminateNotificationProfile">
                        <prop type="boolean" name="enable"/>
                        <prop type="string" name="notBeforeTimeout"/>
                      </prop>
                    </prop>
                    <prop type="object" name="securityProfile">
                      <prop type="boolean" name="encryptionAtHost"/>
                      <prop type="object" name="encryptionIdentity">
                        <prop type="string" name="userAssignedIdentityResourceId"/>
                      </prop>
                      <prop type="object" name="proxyAgentSettings">
                        <prop type="boolean" name="enabled"/>
                        <prop type="@HostEndpointSettings_read" name="imds"/>
                        <prop type="integer32" name="keyIncarnationId"/>
                        <prop type="string" name="mode">
                          <enum>
                            <item value="&quot;Audit&quot;"/>
                            <item value="&quot;Enforce&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="wireServer" cls="HostEndpointSettings_read">
                          <prop type="string" name="inVMAccessControlProfileReferenceId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Disabled&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="string" name="securityType">
                        <enum>
                          <item value="&quot;ConfidentialVM&quot;"/>
                          <item value="&quot;TrustedLaunch&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="uefiSettings">
                        <prop type="boolean" name="secureBootEnabled"/>
                        <prop type="boolean" name="vTpmEnabled"/>
                      </prop>
                    </prop>
                    <prop type="object" name="storageProfile">
                      <prop type="boolean" name="alignRegionalDisksToVMZone"/>
                      <prop type="array<object>" name="dataDisks" identifiers="lun">
                        <item type="object">
                          <prop type="string" name="caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Copy&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                              <item value="&quot;Restore&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="detachOption">
                            <enum>
                              <item value="&quot;ForceDetach&quot;"/>
                            </enum>
                          </prop>
                          <prop readOnly="True" type="integer64" name="diskIOPSReadWrite"/>
                          <prop readOnly="True" type="integer64" name="diskMBpsReadWrite"/>
                          <prop type="integer32" name="diskSizeGB"/>
                          <prop type="@VirtualHardDisk_read" name="image"/>
                          <prop type="integer32" name="lun" required="True"/>
                          <prop type="@ManagedDiskParameters_read" name="managedDisk"/>
                          <prop type="string" name="name"/>
                          <prop type="object" name="sourceResource">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="boolean" name="toBeDetached"/>
                          <prop type="@VirtualHardDisk_read" name="vhd"/>
                          <prop type="boolean" name="writeAcceleratorEnabled"/>
                        </item>
                      </prop>
                      <prop type="string" name="diskControllerType">
                        <enum>
                          <item value="&quot;NVMe&quot;"/>
                          <item value="&quot;SCSI&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="imageReference">
                        <prop type="string" name="communityGalleryImageId"/>
                        <prop readOnly="True" type="string" name="exactVersion"/>
                        <prop type="string" name="id"/>
                        <prop type="string" name="offer"/>
                        <prop type="string" name="publisher"/>
                        <prop type="string" name="sharedGalleryImageId"/>
                        <prop type="string" name="sku"/>
                        <prop type="string" name="version"/>
                      </prop>
                      <prop type="object" name="osDisk">
                        <prop type="string" name="caching">
                          <enum>
                            <item value="&quot;None&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="createOption" required="True">
                          <enum>
                            <item value="&quot;Attach&quot;"/>
                            <item value="&quot;Copy&quot;"/>
                            <item value="&quot;Empty&quot;"/>
                            <item value="&quot;FromImage&quot;"/>
                            <item value="&quot;Restore&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Detach&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="diffDiskSettings">
                          <prop type="string" name="option">
                            <enum>
                              <item value="&quot;Local&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="placement">
                            <enum>
                              <item value="&quot;CacheDisk&quot;"/>
                              <item value="&quot;NvmeDisk&quot;"/>
                              <item value="&quot;ResourceDisk&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="integer32" name="diskSizeGB"/>
                        <prop type="object" name="encryptionSettings" cls="DiskEncryptionSettings_read">
                          <prop type="object" name="diskEncryptionKey" cls="KeyVaultSecretReference_read">
                            <prop type="string" name="secretUrl" required="True"/>
                            <prop type="object" name="sourceVault" required="True" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                          </prop>
                          <prop type="boolean" name="enabled"/>
                          <prop type="object" name="keyEncryptionKey">
                            <prop type="string" name="keyUrl" required="True"/>
                            <prop type="@SubResource_read" name="sourceVault" required="True"/>
                          </prop>
                        </prop>
                        <prop type="@VirtualHardDisk_read" name="image"/>
                        <prop type="object" name="managedDisk" cls="ManagedDiskParameters_read">
                          <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="string" name="id"/>
                          <prop type="object" name="securityProfile">
                            <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                            <prop type="string" name="securityEncryptionType">
                              <enum>
                                <item value="&quot;DiskWithVMGuestState&quot;"/>
                                <item value="&quot;NonPersistedTPM&quot;"/>
                                <item value="&quot;VMGuestStateOnly&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="storageAccountType">
                            <enum>
                              <item value="&quot;PremiumV2_LRS&quot;"/>
                              <item value="&quot;Premium_LRS&quot;"/>
                              <item value="&quot;Premium_ZRS&quot;"/>
                              <item value="&quot;StandardSSD_LRS&quot;"/>
                              <item value="&quot;StandardSSD_ZRS&quot;"/>
                              <item value="&quot;Standard_LRS&quot;"/>
                              <item value="&quot;UltraSSD_LRS&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop type="string" name="name"/>
                        <prop type="string" name="osType">
                          <enum>
                            <item value="&quot;Linux&quot;"/>
                            <item value="&quot;Windows&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="vhd" cls="VirtualHardDisk_read">
                          <prop type="string" name="uri"/>
                        </prop>
                        <prop type="boolean" name="writeAcceleratorEnabled"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="dateTime" name="timeCreated"/>
                    <prop type="string" name="userData"/>
                    <prop type="@SubResource_read" name="virtualMachineScaleSet"/>
                    <prop readOnly="True" type="string" name="vmId"/>
                  </prop>
                  <prop readOnly="True" type="array<object>" name="resources">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="boolean" name="autoUpgradeMinorVersion"/>
                        <prop type="boolean" name="enableAutomaticUpgrade"/>
                        <prop type="string" name="forceUpdateTag"/>
                        <prop type="@VirtualMachineExtensionInstanceView_read" name="instanceView"/>
                        <prop type="object" name="protectedSettings">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="@KeyVaultSecretReference_read" name="protectedSettingsFromKeyVault"/>
                        <prop type="array<string>" name="provisionAfterExtensions">
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop type="string" name="publisher"/>
                        <prop type="object" name="settings">
                          <additionalProp>
                            <item type="any"/>
                          </additionalProp>
                        </prop>
                        <prop type="boolean" name="suppressFailures"/>
                        <prop type="string" name="type"/>
                        <prop type="string" name="typeHandlerVersion"/>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                  <prop type="array<string>" name="zones">
                    <item type="string"/>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="extendedLocation" arg="$parameters.extendedLocation">
                <prop type="string" name="name" arg="$parameters.extendedLocation.name"/>
                <prop type="string" name="type" arg="$parameters.extendedLocation.type">
                  <enum>
                    <item value="&quot;EdgeZone&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="IdentityObject" name="identity">
                <prop type="string" name="type" arg="$parameters.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$parameters.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
              <prop type="object" name="placement" arg="$parameters.placement">
                <prop type="array<string>" name="excludeZones" arg="$parameters.placement.excludeZones">
                  <item type="string"/>
                </prop>
                <prop type="array<string>" name="includeZones" arg="$parameters.placement.includeZones">
                  <item type="string"/>
                </prop>
                <prop type="string" name="zonePlacementPolicy" arg="$parameters.placement.zonePlacementPolicy">
                  <enum>
                    <item value="&quot;Any&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="object" name="plan" arg="$parameters.plan">
                <prop type="string" name="name" arg="$parameters.plan.name"/>
                <prop type="string" name="product" arg="$parameters.plan.product"/>
                <prop type="string" name="promotionCode" arg="$parameters.plan.promotionCode"/>
                <prop type="string" name="publisher" arg="$parameters.plan.publisher"/>
              </prop>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="additionalCapabilities" arg="$parameters.properties.additionalCapabilities">
                  <prop type="boolean" name="hibernationEnabled" arg="$parameters.properties.additionalCapabilities.hibernationEnabled"/>
                  <prop type="boolean" name="ultraSSDEnabled" arg="$parameters.properties.additionalCapabilities.ultraSSDEnabled"/>
                </prop>
                <prop type="object" name="applicationProfile" arg="$parameters.properties.applicationProfile">
                  <prop type="array<object>" name="galleryApplications" arg="$parameters.properties.applicationProfile.galleryApplications" identifiers="packageReferenceId">
                    <item type="object">
                      <prop type="string" name="configurationReference" arg="$parameters.properties.applicationProfile.galleryApplications[].configurationReference"/>
                      <prop type="boolean" name="enableAutomaticUpgrade" arg="$parameters.properties.applicationProfile.galleryApplications[].enableAutomaticUpgrade"/>
                      <prop type="integer32" name="order" arg="$parameters.properties.applicationProfile.galleryApplications[].order"/>
                      <prop type="string" name="packageReferenceId" arg="$parameters.properties.applicationProfile.galleryApplications[].packageReferenceId" required="True"/>
                      <prop type="string" name="tags" arg="$parameters.properties.applicationProfile.galleryApplications[].tags"/>
                      <prop type="boolean" name="treatFailureAsDeploymentFailure" arg="$parameters.properties.applicationProfile.galleryApplications[].treatFailureAsDeploymentFailure"/>
                    </item>
                  </prop>
                </prop>
                <prop type="@SubResource_update" name="availabilitySet" arg="$parameters.properties.availabilitySet"/>
                <prop type="object" name="billingProfile" arg="$parameters.properties.billingProfile">
                  <prop type="float64" name="maxPrice" arg="$parameters.properties.billingProfile.maxPrice"/>
                </prop>
                <prop type="object" name="capacityReservation" arg="$parameters.properties.capacityReservation">
                  <prop type="@SubResource_update" name="capacityReservationGroup" arg="$parameters.properties.capacityReservation.capacityReservationGroup"/>
                </prop>
                <prop type="object" name="diagnosticsProfile" arg="$parameters.properties.diagnosticsProfile">
                  <prop type="object" name="bootDiagnostics" arg="$parameters.properties.diagnosticsProfile.bootDiagnostics">
                    <prop type="boolean" name="enabled" arg="$parameters.properties.diagnosticsProfile.bootDiagnostics.enabled"/>
                    <prop type="string" name="storageUri" arg="$parameters.properties.diagnosticsProfile.bootDiagnostics.storageUri"/>
                  </prop>
                </prop>
                <prop type="string" name="evictionPolicy" arg="$parameters.properties.evictionPolicy">
                  <enum>
                    <item value="&quot;Deallocate&quot;"/>
                    <item value="&quot;Delete&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="extensionsTimeBudget" arg="$parameters.properties.extensionsTimeBudget"/>
                <prop type="object" name="hardwareProfile" arg="$parameters.properties.hardwareProfile">
                  <prop type="string" name="vmSize" arg="$parameters.properties.hardwareProfile.vmSize">
                    <enum>
                      <item value="&quot;Basic_A0&quot;"/>
                      <item value="&quot;Basic_A1&quot;"/>
                      <item value="&quot;Basic_A2&quot;"/>
                      <item value="&quot;Basic_A3&quot;"/>
                      <item value="&quot;Basic_A4&quot;"/>
                      <item value="&quot;Standard_A0&quot;"/>
                      <item value="&quot;Standard_A1&quot;"/>
                      <item value="&quot;Standard_A10&quot;"/>
                      <item value="&quot;Standard_A11&quot;"/>
                      <item value="&quot;Standard_A1_v2&quot;"/>
                      <item value="&quot;Standard_A2&quot;"/>
                      <item value="&quot;Standard_A2_v2&quot;"/>
                      <item value="&quot;Standard_A2m_v2&quot;"/>
                      <item value="&quot;Standard_A3&quot;"/>
                      <item value="&quot;Standard_A4&quot;"/>
                      <item value="&quot;Standard_A4_v2&quot;"/>
                      <item value="&quot;Standard_A4m_v2&quot;"/>
                      <item value="&quot;Standard_A5&quot;"/>
                      <item value="&quot;Standard_A6&quot;"/>
                      <item value="&quot;Standard_A7&quot;"/>
                      <item value="&quot;Standard_A8&quot;"/>
                      <item value="&quot;Standard_A8_v2&quot;"/>
                      <item value="&quot;Standard_A8m_v2&quot;"/>
                      <item value="&quot;Standard_A9&quot;"/>
                      <item value="&quot;Standard_B1ms&quot;"/>
                      <item value="&quot;Standard_B1s&quot;"/>
                      <item value="&quot;Standard_B2ms&quot;"/>
                      <item value="&quot;Standard_B2s&quot;"/>
                      <item value="&quot;Standard_B4ms&quot;"/>
                      <item value="&quot;Standard_B8ms&quot;"/>
                      <item value="&quot;Standard_D1&quot;"/>
                      <item value="&quot;Standard_D11&quot;"/>
                      <item value="&quot;Standard_D11_v2&quot;"/>
                      <item value="&quot;Standard_D12&quot;"/>
                      <item value="&quot;Standard_D12_v2&quot;"/>
                      <item value="&quot;Standard_D13&quot;"/>
                      <item value="&quot;Standard_D13_v2&quot;"/>
                      <item value="&quot;Standard_D14&quot;"/>
                      <item value="&quot;Standard_D14_v2&quot;"/>
                      <item value="&quot;Standard_D15_v2&quot;"/>
                      <item value="&quot;Standard_D16_v3&quot;"/>
                      <item value="&quot;Standard_D16s_v3&quot;"/>
                      <item value="&quot;Standard_D1_v2&quot;"/>
                      <item value="&quot;Standard_D2&quot;"/>
                      <item value="&quot;Standard_D2_v2&quot;"/>
                      <item value="&quot;Standard_D2_v3&quot;"/>
                      <item value="&quot;Standard_D2s_v3&quot;"/>
                      <item value="&quot;Standard_D3&quot;"/>
                      <item value="&quot;Standard_D32_v3&quot;"/>
                      <item value="&quot;Standard_D32s_v3&quot;"/>
                      <item value="&quot;Standard_D3_v2&quot;"/>
                      <item value="&quot;Standard_D4&quot;"/>
                      <item value="&quot;Standard_D4_v2&quot;"/>
                      <item value="&quot;Standard_D4_v3&quot;"/>
                      <item value="&quot;Standard_D4s_v3&quot;"/>
                      <item value="&quot;Standard_D5_v2&quot;"/>
                      <item value="&quot;Standard_D64_v3&quot;"/>
                      <item value="&quot;Standard_D64s_v3&quot;"/>
                      <item value="&quot;Standard_D8_v3&quot;"/>
                      <item value="&quot;Standard_D8s_v3&quot;"/>
                      <item value="&quot;Standard_DS1&quot;"/>
                      <item value="&quot;Standard_DS11&quot;"/>
                      <item value="&quot;Standard_DS11_v2&quot;"/>
                      <item value="&quot;Standard_DS12&quot;"/>
                      <item value="&quot;Standard_DS12_v2&quot;"/>
                      <item value="&quot;Standard_DS13&quot;"/>
                      <item value="&quot;Standard_DS13-2_v2&quot;"/>
                      <item value="&quot;Standard_DS13-4_v2&quot;"/>
                      <item value="&quot;Standard_DS13_v2&quot;"/>
                      <item value="&quot;Standard_DS14&quot;"/>
                      <item value="&quot;Standard_DS14-4_v2&quot;"/>
                      <item value="&quot;Standard_DS14-8_v2&quot;"/>
                      <item value="&quot;Standard_DS14_v2&quot;"/>
                      <item value="&quot;Standard_DS15_v2&quot;"/>
                      <item value="&quot;Standard_DS1_v2&quot;"/>
                      <item value="&quot;Standard_DS2&quot;"/>
                      <item value="&quot;Standard_DS2_v2&quot;"/>
                      <item value="&quot;Standard_DS3&quot;"/>
                      <item value="&quot;Standard_DS3_v2&quot;"/>
                      <item value="&quot;Standard_DS4&quot;"/>
                      <item value="&quot;Standard_DS4_v2&quot;"/>
                      <item value="&quot;Standard_DS5_v2&quot;"/>
                      <item value="&quot;Standard_E16_v3&quot;"/>
                      <item value="&quot;Standard_E16s_v3&quot;"/>
                      <item value="&quot;Standard_E2_v3&quot;"/>
                      <item value="&quot;Standard_E2s_v3&quot;"/>
                      <item value="&quot;Standard_E32-16_v3&quot;"/>
                      <item value="&quot;Standard_E32-8s_v3&quot;"/>
                      <item value="&quot;Standard_E32_v3&quot;"/>
                      <item value="&quot;Standard_E32s_v3&quot;"/>
                      <item value="&quot;Standard_E4_v3&quot;"/>
                      <item value="&quot;Standard_E4s_v3&quot;"/>
                      <item value="&quot;Standard_E64-16s_v3&quot;"/>
                      <item value="&quot;Standard_E64-32s_v3&quot;"/>
                      <item value="&quot;Standard_E64_v3&quot;"/>
                      <item value="&quot;Standard_E64s_v3&quot;"/>
                      <item value="&quot;Standard_E8_v3&quot;"/>
                      <item value="&quot;Standard_E8s_v3&quot;"/>
                      <item value="&quot;Standard_F1&quot;"/>
                      <item value="&quot;Standard_F16&quot;"/>
                      <item value="&quot;Standard_F16s&quot;"/>
                      <item value="&quot;Standard_F16s_v2&quot;"/>
                      <item value="&quot;Standard_F1s&quot;"/>
                      <item value="&quot;Standard_F2&quot;"/>
                      <item value="&quot;Standard_F2s&quot;"/>
                      <item value="&quot;Standard_F2s_v2&quot;"/>
                      <item value="&quot;Standard_F32s_v2&quot;"/>
                      <item value="&quot;Standard_F4&quot;"/>
                      <item value="&quot;Standard_F4s&quot;"/>
                      <item value="&quot;Standard_F4s_v2&quot;"/>
                      <item value="&quot;Standard_F64s_v2&quot;"/>
                      <item value="&quot;Standard_F72s_v2&quot;"/>
                      <item value="&quot;Standard_F8&quot;"/>
                      <item value="&quot;Standard_F8s&quot;"/>
                      <item value="&quot;Standard_F8s_v2&quot;"/>
                      <item value="&quot;Standard_G1&quot;"/>
                      <item value="&quot;Standard_G2&quot;"/>
                      <item value="&quot;Standard_G3&quot;"/>
                      <item value="&quot;Standard_G4&quot;"/>
                      <item value="&quot;Standard_G5&quot;"/>
                      <item value="&quot;Standard_GS1&quot;"/>
                      <item value="&quot;Standard_GS2&quot;"/>
                      <item value="&quot;Standard_GS3&quot;"/>
                      <item value="&quot;Standard_GS4&quot;"/>
                      <item value="&quot;Standard_GS4-4&quot;"/>
                      <item value="&quot;Standard_GS4-8&quot;"/>
                      <item value="&quot;Standard_GS5&quot;"/>
                      <item value="&quot;Standard_GS5-16&quot;"/>
                      <item value="&quot;Standard_GS5-8&quot;"/>
                      <item value="&quot;Standard_H16&quot;"/>
                      <item value="&quot;Standard_H16m&quot;"/>
                      <item value="&quot;Standard_H16mr&quot;"/>
                      <item value="&quot;Standard_H16r&quot;"/>
                      <item value="&quot;Standard_H8&quot;"/>
                      <item value="&quot;Standard_H8m&quot;"/>
                      <item value="&quot;Standard_L16s&quot;"/>
                      <item value="&quot;Standard_L32s&quot;"/>
                      <item value="&quot;Standard_L4s&quot;"/>
                      <item value="&quot;Standard_L8s&quot;"/>
                      <item value="&quot;Standard_M128-32ms&quot;"/>
                      <item value="&quot;Standard_M128-64ms&quot;"/>
                      <item value="&quot;Standard_M128ms&quot;"/>
                      <item value="&quot;Standard_M128s&quot;"/>
                      <item value="&quot;Standard_M64-16ms&quot;"/>
                      <item value="&quot;Standard_M64-32ms&quot;"/>
                      <item value="&quot;Standard_M64ms&quot;"/>
                      <item value="&quot;Standard_M64s&quot;"/>
                      <item value="&quot;Standard_NC12&quot;"/>
                      <item value="&quot;Standard_NC12s_v2&quot;"/>
                      <item value="&quot;Standard_NC12s_v3&quot;"/>
                      <item value="&quot;Standard_NC24&quot;"/>
                      <item value="&quot;Standard_NC24r&quot;"/>
                      <item value="&quot;Standard_NC24rs_v2&quot;"/>
                      <item value="&quot;Standard_NC24rs_v3&quot;"/>
                      <item value="&quot;Standard_NC24s_v2&quot;"/>
                      <item value="&quot;Standard_NC24s_v3&quot;"/>
                      <item value="&quot;Standard_NC6&quot;"/>
                      <item value="&quot;Standard_NC6s_v2&quot;"/>
                      <item value="&quot;Standard_NC6s_v3&quot;"/>
                      <item value="&quot;Standard_ND12s&quot;"/>
                      <item value="&quot;Standard_ND24rs&quot;"/>
                      <item value="&quot;Standard_ND24s&quot;"/>
                      <item value="&quot;Standard_ND6s&quot;"/>
                      <item value="&quot;Standard_NV12&quot;"/>
                      <item value="&quot;Standard_NV24&quot;"/>
                      <item value="&quot;Standard_NV6&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="vmSizeProperties" arg="$parameters.properties.hardwareProfile.vmSizeProperties">
                    <prop type="integer32" name="vCPUsAvailable" arg="$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsAvailable"/>
                    <prop type="integer32" name="vCPUsPerCore" arg="$parameters.properties.hardwareProfile.vmSizeProperties.vCPUsPerCore"/>
                  </prop>
                </prop>
                <prop type="@SubResource_update" name="host" arg="$parameters.properties.host"/>
                <prop type="@SubResource_update" name="hostGroup" arg="$parameters.properties.hostGroup"/>
                <prop type="string" name="licenseType" arg="$parameters.properties.licenseType"/>
                <prop type="object" name="networkProfile" arg="$parameters.properties.networkProfile">
                  <prop type="string" name="networkApiVersion" arg="$parameters.properties.networkProfile.networkApiVersion">
                    <enum>
                      <item value="&quot;2020-11-01&quot;"/>
                      <item value="&quot;2022-11-01&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<object>" name="networkInterfaceConfigurations" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations" identifiers="name">
                    <item type="object">
                      <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].name" required="True"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="auxiliaryMode" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliaryMode">
                          <enum>
                            <item value="&quot;AcceleratedConnections&quot;"/>
                            <item value="&quot;Floating&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="auxiliarySku" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.auxiliarySku">
                          <enum>
                            <item value="&quot;A1&quot;"/>
                            <item value="&quot;A2&quot;"/>
                            <item value="&quot;A4&quot;"/>
                            <item value="&quot;A8&quot;"/>
                            <item value="&quot;None&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="deleteOption" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.deleteOption">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Detach&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="disableTcpStateTracking" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.disableTcpStateTracking"/>
                        <prop type="object" name="dnsSettings" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings">
                          <prop type="array<string>" name="dnsServers" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dnsSettings.dnsServers">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="@SubResource_update" name="dscpConfiguration" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.dscpConfiguration"/>
                        <prop type="boolean" name="enableAcceleratedNetworking" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableAcceleratedNetworking"/>
                        <prop type="boolean" name="enableFpga" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableFpga"/>
                        <prop type="boolean" name="enableIPForwarding" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.enableIPForwarding"/>
                        <prop type="array<object>" name="ipConfigurations" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations" required="True" identifiers="name">
                          <item type="object">
                            <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].name" required="True"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<@SubResource_update>" name="applicationGatewayBackendAddressPools" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationGatewayBackendAddressPools">
                                <item type="@SubResource_update"/>
                              </prop>
                              <prop type="array<@SubResource_update>" name="applicationSecurityGroups" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.applicationSecurityGroups">
                                <item type="@SubResource_update"/>
                              </prop>
                              <prop type="array<@SubResource_update>" name="loadBalancerBackendAddressPools" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.loadBalancerBackendAddressPools">
                                <item type="@SubResource_update"/>
                              </prop>
                              <prop type="boolean" name="primary" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.primary"/>
                              <prop type="string" name="privateIPAddressVersion" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.privateIPAddressVersion">
                                <enum>
                                  <item value="&quot;IPv4&quot;"/>
                                  <item value="&quot;IPv6&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="publicIPAddressConfiguration" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration">
                                <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.name" required="True"/>
                                <prop type="object" name="properties" clientFlatten="True">
                                  <prop type="string" name="deleteOption" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.deleteOption">
                                    <enum>
                                      <item value="&quot;Delete&quot;"/>
                                      <item value="&quot;Detach&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="object" name="dnsSettings" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings">
                                    <prop type="string" name="domainNameLabel" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabel" required="True"/>
                                    <prop type="string" name="domainNameLabelScope" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.dnsSettings.domainNameLabelScope">
                                      <enum>
                                        <item value="&quot;NoReuse&quot;"/>
                                        <item value="&quot;ResourceGroupReuse&quot;"/>
                                        <item value="&quot;SubscriptionReuse&quot;"/>
                                        <item value="&quot;TenantReuse&quot;"/>
                                      </enum>
                                    </prop>
                                  </prop>
                                  <prop type="integer32" name="idleTimeoutInMinutes" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.idleTimeoutInMinutes"/>
                                  <prop type="array<object>" name="ipTags" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags">
                                    <item type="object">
                                      <prop type="string" name="ipTagType" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].ipTagType"/>
                                      <prop type="string" name="tag" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.ipTags[].tag"/>
                                    </item>
                                  </prop>
                                  <prop type="string" name="publicIPAddressVersion" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAddressVersion">
                                    <enum>
                                      <item value="&quot;IPv4&quot;"/>
                                      <item value="&quot;IPv6&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="publicIPAllocationMethod" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPAllocationMethod">
                                    <enum>
                                      <item value="&quot;Dynamic&quot;"/>
                                      <item value="&quot;Static&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="@SubResource_update" name="publicIPPrefix" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.properties.publicIPPrefix"/>
                                </prop>
                                <prop type="object" name="sku" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku">
                                  <prop type="string" name="name" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.name">
                                    <enum>
                                      <item value="&quot;Basic&quot;"/>
                                      <item value="&quot;Standard&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="string" name="tier" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.publicIPAddressConfiguration.sku.tier">
                                    <enum>
                                      <item value="&quot;Global&quot;"/>
                                      <item value="&quot;Regional&quot;"/>
                                    </enum>
                                  </prop>
                                </prop>
                              </prop>
                              <prop type="@SubResource_update" name="subnet" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.ipConfigurations[].properties.subnet"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="@SubResource_update" name="networkSecurityGroup" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.networkSecurityGroup"/>
                        <prop type="boolean" name="primary" arg="$parameters.properties.networkProfile.networkInterfaceConfigurations[].properties.primary"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="networkInterfaces" arg="$parameters.properties.networkProfile.networkInterfaces">
                    <item type="object">
                      <prop type="string" name="id" arg="$parameters.properties.networkProfile.networkInterfaces[].id"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="string" name="deleteOption" arg="$parameters.properties.networkProfile.networkInterfaces[].properties.deleteOption">
                          <enum>
                            <item value="&quot;Delete&quot;"/>
                            <item value="&quot;Detach&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="primary" arg="$parameters.properties.networkProfile.networkInterfaces[].properties.primary"/>
                      </prop>
                    </item>
                  </prop>
                </prop>
                <prop type="object" name="osProfile" arg="$parameters.properties.osProfile">
                  <prop type="string" name="adminPassword" arg="$parameters.properties.osProfile.adminPassword" secret="True"/>
                  <prop type="string" name="adminUsername" arg="$parameters.properties.osProfile.adminUsername"/>
                  <prop type="boolean" name="allowExtensionOperations" arg="$parameters.properties.osProfile.allowExtensionOperations"/>
                  <prop type="string" name="computerName" arg="$parameters.properties.osProfile.computerName"/>
                  <prop type="string" name="customData" arg="$parameters.properties.osProfile.customData"/>
                  <prop type="object" name="linuxConfiguration" arg="$parameters.properties.osProfile.linuxConfiguration">
                    <prop type="boolean" name="disablePasswordAuthentication" arg="$parameters.properties.osProfile.linuxConfiguration.disablePasswordAuthentication"/>
                    <prop type="boolean" name="enableVMAgentPlatformUpdates" arg="$parameters.properties.osProfile.linuxConfiguration.enableVMAgentPlatformUpdates"/>
                    <prop type="object" name="patchSettings" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings">
                      <prop type="string" name="assessmentMode" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.assessmentMode">
                        <enum>
                          <item value="&quot;AutomaticByPlatform&quot;"/>
                          <item value="&quot;ImageDefault&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="automaticByPlatformSettings" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings">
                        <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                        <prop type="string" name="rebootSetting" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                          <enum>
                            <item value="&quot;Always&quot;"/>
                            <item value="&quot;IfRequired&quot;"/>
                            <item value="&quot;Never&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="patchMode" arg="$parameters.properties.osProfile.linuxConfiguration.patchSettings.patchMode">
                        <enum>
                          <item value="&quot;AutomaticByPlatform&quot;"/>
                          <item value="&quot;ImageDefault&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="provisionVMAgent" arg="$parameters.properties.osProfile.linuxConfiguration.provisionVMAgent"/>
                    <prop type="object" name="ssh" arg="$parameters.properties.osProfile.linuxConfiguration.ssh">
                      <prop type="array<object>" name="publicKeys" arg="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys" identifiers="path">
                        <item type="object">
                          <prop type="string" name="keyData" arg="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].keyData"/>
                          <prop type="string" name="path" arg="$parameters.properties.osProfile.linuxConfiguration.ssh.publicKeys[].path"/>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="boolean" name="requireGuestProvisionSignal" arg="$parameters.properties.osProfile.requireGuestProvisionSignal"/>
                  <prop type="array<object>" name="secrets" arg="$parameters.properties.osProfile.secrets">
                    <item type="object">
                      <prop type="@SubResource_update" name="sourceVault" arg="$parameters.properties.osProfile.secrets[].sourceVault"/>
                      <prop type="array<object>" name="vaultCertificates" arg="$parameters.properties.osProfile.secrets[].vaultCertificates" identifiers="certificateUrl">
                        <item type="object">
                          <prop type="string" name="certificateStore" arg="$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateStore"/>
                          <prop type="string" name="certificateUrl" arg="$parameters.properties.osProfile.secrets[].vaultCertificates[].certificateUrl"/>
                        </item>
                      </prop>
                    </item>
                  </prop>
                  <prop type="object" name="windowsConfiguration" arg="$parameters.properties.osProfile.windowsConfiguration">
                    <prop type="array<object>" name="additionalUnattendContent" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent">
                      <item type="object">
                        <prop type="string" name="componentName" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].componentName">
                          <enum>
                            <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="content" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].content"/>
                        <prop type="string" name="passName" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].passName">
                          <enum>
                            <item value="&quot;OobeSystem&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="settingName" arg="$parameters.properties.osProfile.windowsConfiguration.additionalUnattendContent[].settingName">
                          <enum>
                            <item value="&quot;AutoLogon&quot;"/>
                            <item value="&quot;FirstLogonCommands&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                    <prop type="boolean" name="enableAutomaticUpdates" arg="$parameters.properties.osProfile.windowsConfiguration.enableAutomaticUpdates"/>
                    <prop type="object" name="patchSettings" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings">
                      <prop type="string" name="assessmentMode" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.assessmentMode">
                        <enum>
                          <item value="&quot;AutomaticByPlatform&quot;"/>
                          <item value="&quot;ImageDefault&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="automaticByPlatformSettings" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings">
                        <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.bypassPlatformSafetyChecksOnUserSchedule"/>
                        <prop type="string" name="rebootSetting" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.automaticByPlatformSettings.rebootSetting">
                          <enum>
                            <item value="&quot;Always&quot;"/>
                            <item value="&quot;IfRequired&quot;"/>
                            <item value="&quot;Never&quot;"/>
                            <item value="&quot;Unknown&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="boolean" name="enableHotpatching" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.enableHotpatching"/>
                      <prop type="string" name="patchMode" arg="$parameters.properties.osProfile.windowsConfiguration.patchSettings.patchMode">
                        <enum>
                          <item value="&quot;AutomaticByOS&quot;"/>
                          <item value="&quot;AutomaticByPlatform&quot;"/>
                          <item value="&quot;Manual&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="boolean" name="provisionVMAgent" arg="$parameters.properties.osProfile.windowsConfiguration.provisionVMAgent"/>
                    <prop type="string" name="timeZone" arg="$parameters.properties.osProfile.windowsConfiguration.timeZone"/>
                    <prop type="object" name="winRM" arg="$parameters.properties.osProfile.windowsConfiguration.winRM">
                      <prop type="array<object>" name="listeners" arg="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners">
                        <item type="object">
                          <prop type="string" name="certificateUrl" arg="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].certificateUrl"/>
                          <prop type="string" name="protocol" arg="$parameters.properties.osProfile.windowsConfiguration.winRM.listeners[].protocol">
                            <enum>
                              <item value="&quot;Http&quot;"/>
                              <item value="&quot;Https&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                    </prop>
                  </prop>
                </prop>
                <prop type="integer32" name="platformFaultDomain" arg="$parameters.properties.platformFaultDomain"/>
                <prop type="string" name="priority" arg="$parameters.properties.priority">
                  <enum>
                    <item value="&quot;Low&quot;"/>
                    <item value="&quot;Regular&quot;"/>
                    <item value="&quot;Spot&quot;"/>
                  </enum>
                </prop>
                <prop type="@SubResource_update" name="proximityPlacementGroup" arg="$parameters.properties.proximityPlacementGroup"/>
                <prop type="object" name="scheduledEventsPolicy" arg="$parameters.properties.scheduledEventsPolicy">
                  <prop type="object" name="scheduledEventsAdditionalPublishingTargets" arg="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets">
                    <prop type="object" name="eventGridAndResourceGraph" arg="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph">
                      <prop type="boolean" name="enable" arg="$parameters.properties.scheduledEventsPolicy.scheduledEventsAdditionalPublishingTargets.eventGridAndResourceGraph.enable"/>
                    </prop>
                  </prop>
                  <prop type="object" name="userInitiatedReboot" arg="$parameters.properties.scheduledEventsPolicy.userInitiatedReboot">
                    <prop type="boolean" name="automaticallyApprove" arg="$parameters.properties.scheduledEventsPolicy.userInitiatedReboot.automaticallyApprove"/>
                  </prop>
                  <prop type="object" name="userInitiatedRedeploy" arg="$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy">
                    <prop type="boolean" name="automaticallyApprove" arg="$parameters.properties.scheduledEventsPolicy.userInitiatedRedeploy.automaticallyApprove"/>
                  </prop>
                </prop>
                <prop type="object" name="scheduledEventsProfile" arg="$parameters.properties.scheduledEventsProfile">
                  <prop type="object" name="osImageNotificationProfile" arg="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile">
                    <prop type="boolean" name="enable" arg="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.enable"/>
                    <prop type="string" name="notBeforeTimeout" arg="$parameters.properties.scheduledEventsProfile.osImageNotificationProfile.notBeforeTimeout"/>
                  </prop>
                  <prop type="object" name="terminateNotificationProfile" arg="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile">
                    <prop type="boolean" name="enable" arg="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.enable"/>
                    <prop type="string" name="notBeforeTimeout" arg="$parameters.properties.scheduledEventsProfile.terminateNotificationProfile.notBeforeTimeout"/>
                  </prop>
                </prop>
                <prop type="object" name="securityProfile" arg="$parameters.properties.securityProfile">
                  <prop type="boolean" name="encryptionAtHost" arg="$parameters.properties.securityProfile.encryptionAtHost"/>
                  <prop type="object" name="encryptionIdentity" arg="$parameters.properties.securityProfile.encryptionIdentity">
                    <prop type="string" name="userAssignedIdentityResourceId" arg="$parameters.properties.securityProfile.encryptionIdentity.userAssignedIdentityResourceId"/>
                  </prop>
                  <prop type="object" name="proxyAgentSettings" arg="$parameters.properties.securityProfile.proxyAgentSettings">
                    <prop type="boolean" name="enabled" arg="$parameters.properties.securityProfile.proxyAgentSettings.enabled"/>
                    <prop type="@HostEndpointSettings_update" name="imds" arg="$parameters.properties.securityProfile.proxyAgentSettings.imds"/>
                    <prop type="integer32" name="keyIncarnationId" arg="$parameters.properties.securityProfile.proxyAgentSettings.keyIncarnationId"/>
                    <prop type="string" name="mode" arg="$parameters.properties.securityProfile.proxyAgentSettings.mode">
                      <enum>
                        <item value="&quot;Audit&quot;"/>
                        <item value="&quot;Enforce&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="wireServer" arg="$parameters.properties.securityProfile.proxyAgentSettings.wireServer" cls="HostEndpointSettings_update">
                      <prop type="string" name="inVMAccessControlProfileReferenceId" arg="@HostEndpointSettings_update.inVMAccessControlProfileReferenceId"/>
                      <prop type="string" name="mode" arg="@HostEndpointSettings_update.mode">
                        <enum>
                          <item value="&quot;Audit&quot;"/>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enforce&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="string" name="securityType" arg="$parameters.properties.securityProfile.securityType">
                    <enum>
                      <item value="&quot;ConfidentialVM&quot;"/>
                      <item value="&quot;TrustedLaunch&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="uefiSettings" arg="$parameters.properties.securityProfile.uefiSettings">
                    <prop type="boolean" name="secureBootEnabled" arg="$parameters.properties.securityProfile.uefiSettings.secureBootEnabled"/>
                    <prop type="boolean" name="vTpmEnabled" arg="$parameters.properties.securityProfile.uefiSettings.vTpmEnabled"/>
                  </prop>
                </prop>
                <prop type="object" name="storageProfile" arg="$parameters.properties.storageProfile">
                  <prop type="boolean" name="alignRegionalDisksToVMZone" arg="$parameters.properties.storageProfile.alignRegionalDisksToVMZone"/>
                  <prop type="array<object>" name="dataDisks" arg="$parameters.properties.storageProfile.dataDisks" identifiers="lun">
                    <item type="object">
                      <prop type="string" name="caching" arg="$parameters.properties.storageProfile.dataDisks[].caching">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;ReadOnly&quot;"/>
                          <item value="&quot;ReadWrite&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="createOption" arg="$parameters.properties.storageProfile.dataDisks[].createOption" required="True">
                        <enum>
                          <item value="&quot;Attach&quot;"/>
                          <item value="&quot;Copy&quot;"/>
                          <item value="&quot;Empty&quot;"/>
                          <item value="&quot;FromImage&quot;"/>
                          <item value="&quot;Restore&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="deleteOption" arg="$parameters.properties.storageProfile.dataDisks[].deleteOption">
                        <enum>
                          <item value="&quot;Delete&quot;"/>
                          <item value="&quot;Detach&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="detachOption" arg="$parameters.properties.storageProfile.dataDisks[].detachOption">
                        <enum>
                          <item value="&quot;ForceDetach&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="diskSizeGB" arg="$parameters.properties.storageProfile.dataDisks[].diskSizeGB"/>
                      <prop type="@VirtualHardDisk_update" name="image" arg="$parameters.properties.storageProfile.dataDisks[].image"/>
                      <prop type="integer32" name="lun" arg="$parameters.properties.storageProfile.dataDisks[].lun" required="True"/>
                      <prop type="@ManagedDiskParameters_update" name="managedDisk" arg="$parameters.properties.storageProfile.dataDisks[].managedDisk"/>
                      <prop type="string" name="name" arg="$parameters.properties.storageProfile.dataDisks[].name"/>
                      <prop type="object" name="sourceResource" arg="$parameters.properties.storageProfile.dataDisks[].sourceResource">
                        <prop type="string" name="id" arg="$parameters.properties.storageProfile.dataDisks[].sourceResource.id"/>
                      </prop>
                      <prop type="boolean" name="toBeDetached" arg="$parameters.properties.storageProfile.dataDisks[].toBeDetached"/>
                      <prop type="@VirtualHardDisk_update" name="vhd" arg="$parameters.properties.storageProfile.dataDisks[].vhd"/>
                      <prop type="boolean" name="writeAcceleratorEnabled" arg="$parameters.properties.storageProfile.dataDisks[].writeAcceleratorEnabled"/>
                    </item>
                  </prop>
                  <prop type="string" name="diskControllerType" arg="$parameters.properties.storageProfile.diskControllerType">
                    <enum>
                      <item value="&quot;NVMe&quot;"/>
                      <item value="&quot;SCSI&quot;"/>
                    </enum>
                  </prop>
                  <prop type="object" name="imageReference" arg="$parameters.properties.storageProfile.imageReference">
                    <prop type="string" name="communityGalleryImageId" arg="$parameters.properties.storageProfile.imageReference.communityGalleryImageId"/>
                    <prop type="string" name="id" arg="$parameters.properties.storageProfile.imageReference.id"/>
                    <prop type="string" name="offer" arg="$parameters.properties.storageProfile.imageReference.offer"/>
                    <prop type="string" name="publisher" arg="$parameters.properties.storageProfile.imageReference.publisher"/>
                    <prop type="string" name="sharedGalleryImageId" arg="$parameters.properties.storageProfile.imageReference.sharedGalleryImageId"/>
                    <prop type="string" name="sku" arg="$parameters.properties.storageProfile.imageReference.sku"/>
                    <prop type="string" name="version" arg="$parameters.properties.storageProfile.imageReference.version"/>
                  </prop>
                  <prop type="object" name="osDisk" arg="$parameters.properties.storageProfile.osDisk">
                    <prop type="string" name="caching" arg="$parameters.properties.storageProfile.osDisk.caching">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;ReadOnly&quot;"/>
                        <item value="&quot;ReadWrite&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="createOption" arg="$parameters.properties.storageProfile.osDisk.createOption" required="True">
                      <enum>
                        <item value="&quot;Attach&quot;"/>
                        <item value="&quot;Copy&quot;"/>
                        <item value="&quot;Empty&quot;"/>
                        <item value="&quot;FromImage&quot;"/>
                        <item value="&quot;Restore&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="deleteOption" arg="$parameters.properties.storageProfile.osDisk.deleteOption">
                      <enum>
                        <item value="&quot;Delete&quot;"/>
                        <item value="&quot;Detach&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="diffDiskSettings" arg="$parameters.properties.storageProfile.osDisk.diffDiskSettings">
                      <prop type="string" name="option" arg="$parameters.properties.storageProfile.osDisk.diffDiskSettings.option">
                        <enum>
                          <item value="&quot;Local&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="placement" arg="$parameters.properties.storageProfile.osDisk.diffDiskSettings.placement">
                        <enum>
                          <item value="&quot;CacheDisk&quot;"/>
                          <item value="&quot;NvmeDisk&quot;"/>
                          <item value="&quot;ResourceDisk&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="integer32" name="diskSizeGB" arg="$parameters.properties.storageProfile.osDisk.diskSizeGB"/>
                    <prop type="object" name="encryptionSettings" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings">
                      <prop type="object" name="diskEncryptionKey" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey">
                        <prop type="string" name="secretUrl" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl" required="True"/>
                        <prop type="object" name="sourceVault" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault" required="True" cls="SubResource_update">
                          <prop type="string" name="id" arg="@SubResource_update.id"/>
                        </prop>
                      </prop>
                      <prop type="boolean" name="enabled" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.enabled"/>
                      <prop type="object" name="keyEncryptionKey" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey">
                        <prop type="string" name="keyUrl" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl" required="True"/>
                        <prop type="@SubResource_update" name="sourceVault" arg="$parameters.properties.storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault" required="True"/>
                      </prop>
                    </prop>
                    <prop type="@VirtualHardDisk_update" name="image" arg="$parameters.properties.storageProfile.osDisk.image"/>
                    <prop type="object" name="managedDisk" arg="$parameters.properties.storageProfile.osDisk.managedDisk" cls="ManagedDiskParameters_update">
                      <prop type="object" name="diskEncryptionSet" arg="@ManagedDiskParameters_update.diskEncryptionSet" cls="DiskEncryptionSetParameters_update">
                        <prop type="string" name="id" arg="@DiskEncryptionSetParameters_update.id"/>
                      </prop>
                      <prop type="string" name="id" arg="@ManagedDiskParameters_update.id"/>
                      <prop type="object" name="securityProfile" arg="@ManagedDiskParameters_update.securityProfile">
                        <prop type="@DiskEncryptionSetParameters_update" name="diskEncryptionSet" arg="@ManagedDiskParameters_update.securityProfile.diskEncryptionSet"/>
                        <prop type="string" name="securityEncryptionType" arg="@ManagedDiskParameters_update.securityProfile.securityEncryptionType">
                          <enum>
                            <item value="&quot;DiskWithVMGuestState&quot;"/>
                            <item value="&quot;NonPersistedTPM&quot;"/>
                            <item value="&quot;VMGuestStateOnly&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="string" name="storageAccountType" arg="@ManagedDiskParameters_update.storageAccountType">
                        <enum>
                          <item value="&quot;PremiumV2_LRS&quot;"/>
                          <item value="&quot;Premium_LRS&quot;"/>
                          <item value="&quot;Premium_ZRS&quot;"/>
                          <item value="&quot;StandardSSD_LRS&quot;"/>
                          <item value="&quot;StandardSSD_ZRS&quot;"/>
                          <item value="&quot;Standard_LRS&quot;"/>
                          <item value="&quot;UltraSSD_LRS&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.properties.storageProfile.osDisk.name"/>
                    <prop type="string" name="osType" arg="$parameters.properties.storageProfile.osDisk.osType">
                      <enum>
                        <item value="&quot;Linux&quot;"/>
                        <item value="&quot;Windows&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="vhd" arg="$parameters.properties.storageProfile.osDisk.vhd" cls="VirtualHardDisk_update">
                      <prop type="string" name="uri" arg="@VirtualHardDisk_update.uri"/>
                    </prop>
                    <prop type="boolean" name="writeAcceleratorEnabled" arg="$parameters.properties.storageProfile.osDisk.writeAcceleratorEnabled"/>
                  </prop>
                </prop>
                <prop type="string" name="userData" arg="$parameters.properties.userData"/>
                <prop type="@SubResource_update" name="virtualMachineScaleSet" arg="$parameters.properties.virtualMachineScaleSet"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
              <prop type="array<string>" name="zones" arg="$parameters.zones">
                <item type="string"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="VirtualMachines_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01&quot;"/>
              </const>
            </query>
            <header>
              <param type="string" name="If-Match" arg="$Header.If-Match"/>
              <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
            </header>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@VirtualMachine_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="identity">
      <command name="assign" version="2024-11-01">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}" version="2024-11-01" subresource="identity" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Header.If-Match" options="if-match">
            <help short="The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."/>
          </arg>
          <arg type="string" var="$Header.If-None-Match" options="if-none-match">
            <help short="Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.vmName" options="vm-name name n" required="True" idPart="name">
            <help short="The name of the virtual machine."/>
          </arg>
        </argGroup>
        <argGroup name="Parameters.identity">
          <arg type="string" var="$parameters.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Parameters.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$parameters.identity.userAssigned" options="mi-user-assigned user-assigned" group="Parameters.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualMachines_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-11-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualMachine_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="managedBy"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="placement">
                      <prop type="array<string>" name="excludeZones">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="includeZones">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="zonePlacementPolicy">
                        <enum>
                          <item value="&quot;Any&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="plan">
                      <prop type="string" name="name"/>
                      <prop type="string" name="product"/>
                      <prop type="string" name="promotionCode"/>
                      <prop type="string" name="publisher"/>
                    </prop>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="additionalCapabilities">
                        <prop type="boolean" name="hibernationEnabled"/>
                        <prop type="boolean" name="ultraSSDEnabled"/>
                      </prop>
                      <prop type="object" name="applicationProfile">
                        <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                          <item type="object">
                            <prop type="string" name="configurationReference"/>
                            <prop type="boolean" name="enableAutomaticUpgrade"/>
                            <prop type="integer32" name="order"/>
                            <prop type="string" name="packageReferenceId" required="True"/>
                            <prop type="string" name="tags"/>
                            <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="availabilitySet"/>
                      <prop type="object" name="billingProfile">
                        <prop type="float64" name="maxPrice"/>
                      </prop>
                      <prop type="object" name="capacityReservation">
                        <prop type="@SubResource_read" name="capacityReservationGroup"/>
                      </prop>
                      <prop type="object" name="diagnosticsProfile">
                        <prop type="object" name="bootDiagnostics">
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="storageUri"/>
                        </prop>
                      </prop>
                      <prop type="string" name="evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="extensionsTimeBudget"/>
                      <prop type="object" name="hardwareProfile">
                        <prop type="string" name="vmSize">
                          <enum>
                            <item value="&quot;Basic_A0&quot;"/>
                            <item value="&quot;Basic_A1&quot;"/>
                            <item value="&quot;Basic_A2&quot;"/>
                            <item value="&quot;Basic_A3&quot;"/>
                            <item value="&quot;Basic_A4&quot;"/>
                            <item value="&quot;Standard_A0&quot;"/>
                            <item value="&quot;Standard_A1&quot;"/>
                            <item value="&quot;Standard_A10&quot;"/>
                            <item value="&quot;Standard_A11&quot;"/>
                            <item value="&quot;Standard_A1_v2&quot;"/>
                            <item value="&quot;Standard_A2&quot;"/>
                            <item value="&quot;Standard_A2_v2&quot;"/>
                            <item value="&quot;Standard_A2m_v2&quot;"/>
                            <item value="&quot;Standard_A3&quot;"/>
                            <item value="&quot;Standard_A4&quot;"/>
                            <item value="&quot;Standard_A4_v2&quot;"/>
                            <item value="&quot;Standard_A4m_v2&quot;"/>
                            <item value="&quot;Standard_A5&quot;"/>
                            <item value="&quot;Standard_A6&quot;"/>
                            <item value="&quot;Standard_A7&quot;"/>
                            <item value="&quot;Standard_A8&quot;"/>
                            <item value="&quot;Standard_A8_v2&quot;"/>
                            <item value="&quot;Standard_A8m_v2&quot;"/>
                            <item value="&quot;Standard_A9&quot;"/>
                            <item value="&quot;Standard_B1ms&quot;"/>
                            <item value="&quot;Standard_B1s&quot;"/>
                            <item value="&quot;Standard_B2ms&quot;"/>
                            <item value="&quot;Standard_B2s&quot;"/>
                            <item value="&quot;Standard_B4ms&quot;"/>
                            <item value="&quot;Standard_B8ms&quot;"/>
                            <item value="&quot;Standard_D1&quot;"/>
                            <item value="&quot;Standard_D11&quot;"/>
                            <item value="&quot;Standard_D11_v2&quot;"/>
                            <item value="&quot;Standard_D12&quot;"/>
                            <item value="&quot;Standard_D12_v2&quot;"/>
                            <item value="&quot;Standard_D13&quot;"/>
                            <item value="&quot;Standard_D13_v2&quot;"/>
                            <item value="&quot;Standard_D14&quot;"/>
                            <item value="&quot;Standard_D14_v2&quot;"/>
                            <item value="&quot;Standard_D15_v2&quot;"/>
                            <item value="&quot;Standard_D16_v3&quot;"/>
                            <item value="&quot;Standard_D16s_v3&quot;"/>
                            <item value="&quot;Standard_D1_v2&quot;"/>
                            <item value="&quot;Standard_D2&quot;"/>
                            <item value="&quot;Standard_D2_v2&quot;"/>
                            <item value="&quot;Standard_D2_v3&quot;"/>
                            <item value="&quot;Standard_D2s_v3&quot;"/>
                            <item value="&quot;Standard_D3&quot;"/>
                            <item value="&quot;Standard_D32_v3&quot;"/>
                            <item value="&quot;Standard_D32s_v3&quot;"/>
                            <item value="&quot;Standard_D3_v2&quot;"/>
                            <item value="&quot;Standard_D4&quot;"/>
                            <item value="&quot;Standard_D4_v2&quot;"/>
                            <item value="&quot;Standard_D4_v3&quot;"/>
                            <item value="&quot;Standard_D4s_v3&quot;"/>
                            <item value="&quot;Standard_D5_v2&quot;"/>
                            <item value="&quot;Standard_D64_v3&quot;"/>
                            <item value="&quot;Standard_D64s_v3&quot;"/>
                            <item value="&quot;Standard_D8_v3&quot;"/>
                            <item value="&quot;Standard_D8s_v3&quot;"/>
                            <item value="&quot;Standard_DS1&quot;"/>
                            <item value="&quot;Standard_DS11&quot;"/>
                            <item value="&quot;Standard_DS11_v2&quot;"/>
                            <item value="&quot;Standard_DS12&quot;"/>
                            <item value="&quot;Standard_DS12_v2&quot;"/>
                            <item value="&quot;Standard_DS13&quot;"/>
                            <item value="&quot;Standard_DS13-2_v2&quot;"/>
                            <item value="&quot;Standard_DS13-4_v2&quot;"/>
                            <item value="&quot;Standard_DS13_v2&quot;"/>
                            <item value="&quot;Standard_DS14&quot;"/>
                            <item value="&quot;Standard_DS14-4_v2&quot;"/>
                            <item value="&quot;Standard_DS14-8_v2&quot;"/>
                            <item value="&quot;Standard_DS14_v2&quot;"/>
                            <item value="&quot;Standard_DS15_v2&quot;"/>
                            <item value="&quot;Standard_DS1_v2&quot;"/>
                            <item value="&quot;Standard_DS2&quot;"/>
                            <item value="&quot;Standard_DS2_v2&quot;"/>
                            <item value="&quot;Standard_DS3&quot;"/>
                            <item value="&quot;Standard_DS3_v2&quot;"/>
                            <item value="&quot;Standard_DS4&quot;"/>
                            <item value="&quot;Standard_DS4_v2&quot;"/>
                            <item value="&quot;Standard_DS5_v2&quot;"/>
                            <item value="&quot;Standard_E16_v3&quot;"/>
                            <item value="&quot;Standard_E16s_v3&quot;"/>
                            <item value="&quot;Standard_E2_v3&quot;"/>
                            <item value="&quot;Standard_E2s_v3&quot;"/>
                            <item value="&quot;Standard_E32-16_v3&quot;"/>
                            <item value="&quot;Standard_E32-8s_v3&quot;"/>
                            <item value="&quot;Standard_E32_v3&quot;"/>
                            <item value="&quot;Standard_E32s_v3&quot;"/>
                            <item value="&quot;Standard_E4_v3&quot;"/>
                            <item value="&quot;Standard_E4s_v3&quot;"/>
                            <item value="&quot;Standard_E64-16s_v3&quot;"/>
                            <item value="&quot;Standard_E64-32s_v3&quot;"/>
                            <item value="&quot;Standard_E64_v3&quot;"/>
                            <item value="&quot;Standard_E64s_v3&quot;"/>
                            <item value="&quot;Standard_E8_v3&quot;"/>
                            <item value="&quot;Standard_E8s_v3&quot;"/>
                            <item value="&quot;Standard_F1&quot;"/>
                            <item value="&quot;Standard_F16&quot;"/>
                            <item value="&quot;Standard_F16s&quot;"/>
                            <item value="&quot;Standard_F16s_v2&quot;"/>
                            <item value="&quot;Standard_F1s&quot;"/>
                            <item value="&quot;Standard_F2&quot;"/>
                            <item value="&quot;Standard_F2s&quot;"/>
                            <item value="&quot;Standard_F2s_v2&quot;"/>
                            <item value="&quot;Standard_F32s_v2&quot;"/>
                            <item value="&quot;Standard_F4&quot;"/>
                            <item value="&quot;Standard_F4s&quot;"/>
                            <item value="&quot;Standard_F4s_v2&quot;"/>
                            <item value="&quot;Standard_F64s_v2&quot;"/>
                            <item value="&quot;Standard_F72s_v2&quot;"/>
                            <item value="&quot;Standard_F8&quot;"/>
                            <item value="&quot;Standard_F8s&quot;"/>
                            <item value="&quot;Standard_F8s_v2&quot;"/>
                            <item value="&quot;Standard_G1&quot;"/>
                            <item value="&quot;Standard_G2&quot;"/>
                            <item value="&quot;Standard_G3&quot;"/>
                            <item value="&quot;Standard_G4&quot;"/>
                            <item value="&quot;Standard_G5&quot;"/>
                            <item value="&quot;Standard_GS1&quot;"/>
                            <item value="&quot;Standard_GS2&quot;"/>
                            <item value="&quot;Standard_GS3&quot;"/>
                            <item value="&quot;Standard_GS4&quot;"/>
                            <item value="&quot;Standard_GS4-4&quot;"/>
                            <item value="&quot;Standard_GS4-8&quot;"/>
                            <item value="&quot;Standard_GS5&quot;"/>
                            <item value="&quot;Standard_GS5-16&quot;"/>
                            <item value="&quot;Standard_GS5-8&quot;"/>
                            <item value="&quot;Standard_H16&quot;"/>
                            <item value="&quot;Standard_H16m&quot;"/>
                            <item value="&quot;Standard_H16mr&quot;"/>
                            <item value="&quot;Standard_H16r&quot;"/>
                            <item value="&quot;Standard_H8&quot;"/>
                            <item value="&quot;Standard_H8m&quot;"/>
                            <item value="&quot;Standard_L16s&quot;"/>
                            <item value="&quot;Standard_L32s&quot;"/>
                            <item value="&quot;Standard_L4s&quot;"/>
                            <item value="&quot;Standard_L8s&quot;"/>
                            <item value="&quot;Standard_M128-32ms&quot;"/>
                            <item value="&quot;Standard_M128-64ms&quot;"/>
                            <item value="&quot;Standard_M128ms&quot;"/>
                            <item value="&quot;Standard_M128s&quot;"/>
                            <item value="&quot;Standard_M64-16ms&quot;"/>
                            <item value="&quot;Standard_M64-32ms&quot;"/>
                            <item value="&quot;Standard_M64ms&quot;"/>
                            <item value="&quot;Standard_M64s&quot;"/>
                            <item value="&quot;Standard_NC12&quot;"/>
                            <item value="&quot;Standard_NC12s_v2&quot;"/>
                            <item value="&quot;Standard_NC12s_v3&quot;"/>
                            <item value="&quot;Standard_NC24&quot;"/>
                            <item value="&quot;Standard_NC24r&quot;"/>
                            <item value="&quot;Standard_NC24rs_v2&quot;"/>
                            <item value="&quot;Standard_NC24rs_v3&quot;"/>
                            <item value="&quot;Standard_NC24s_v2&quot;"/>
                            <item value="&quot;Standard_NC24s_v3&quot;"/>
                            <item value="&quot;Standard_NC6&quot;"/>
                            <item value="&quot;Standard_NC6s_v2&quot;"/>
                            <item value="&quot;Standard_NC6s_v3&quot;"/>
                            <item value="&quot;Standard_ND12s&quot;"/>
                            <item value="&quot;Standard_ND24rs&quot;"/>
                            <item value="&quot;Standard_ND24s&quot;"/>
                            <item value="&quot;Standard_ND6s&quot;"/>
                            <item value="&quot;Standard_NV12&quot;"/>
                            <item value="&quot;Standard_NV24&quot;"/>
                            <item value="&quot;Standard_NV6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="vmSizeProperties">
                          <prop type="integer32" name="vCPUsAvailable"/>
                          <prop type="integer32" name="vCPUsPerCore"/>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="host"/>
                      <prop type="@SubResource_read" name="hostGroup"/>
                      <prop readOnly="True" type="object" name="instanceView">
                        <prop readOnly="True" type="string" name="assignedHost"/>
                        <prop type="object" name="bootDiagnostics">
                          <prop readOnly="True" type="string" name="consoleScreenshotBlobUri"/>
                          <prop readOnly="True" type="string" name="serialConsoleLogBlobUri"/>
                          <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                        </prop>
                        <prop type="string" name="computerName"/>
                        <prop type="array<object>" name="disks" identifiers="name">
                          <item type="object">
                            <prop type="array<@DiskEncryptionSettings_read>" name="encryptionSettings">
                              <item type="@DiskEncryptionSettings_read"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="array<@InstanceViewStatus_read>" name="statuses">
                              <item type="@InstanceViewStatus_read"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="extensions" identifiers="name type">
                          <item type="object" cls="VirtualMachineExtensionInstanceView_read">
                            <prop type="string" name="name"/>
                            <prop type="array<@InstanceViewStatus_read>" name="statuses">
                              <item type="@InstanceViewStatus_read"/>
                            </prop>
                            <prop type="array<@InstanceViewStatus_read>" name="substatuses">
                              <item type="@InstanceViewStatus_read"/>
                            </prop>
                            <prop type="string" name="type"/>
                            <prop type="string" name="typeHandlerVersion"/>
                          </item>
                        </prop>
                        <prop type="string" name="hyperVGeneration">
                          <enum>
                            <item value="&quot;V1&quot;"/>
                            <item value="&quot;V2&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="boolean" name="isVMInStandbyPool"/>
                        <prop type="object" name="maintenanceRedeployStatus">
                          <prop type="boolean" name="isCustomerInitiatedMaintenanceAllowed"/>
                          <prop type="string" name="lastOperationMessage"/>
                          <prop type="string" name="lastOperationResultCode">
                            <enum>
                              <item value="&quot;MaintenanceAborted&quot;"/>
                              <item value="&quot;MaintenanceCompleted&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;RetryLater&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="maintenanceWindowEndTime"/>
                          <prop type="dateTime" name="maintenanceWindowStartTime"/>
                          <prop type="dateTime" name="preMaintenanceWindowEndTime"/>
                          <prop type="dateTime" name="preMaintenanceWindowStartTime"/>
                        </prop>
                        <prop type="string" name="osName"/>
                        <prop type="string" name="osVersion"/>
                        <prop type="object" name="patchStatus">
                          <prop type="object" name="availablePatchSummary">
                            <prop readOnly="True" type="string" name="assessmentActivityId"/>
                            <prop readOnly="True" type="integer32" name="criticalAndSecurityPatchCount"/>
                            <prop readOnly="True" type="object" name="error" cls="ApiError_read">
                              <prop type="string" name="code"/>
                              <prop type="array<object>" name="details" identifiers="message target">
                                <item type="object">
                                  <prop type="string" name="code"/>
                                  <prop type="string" name="message"/>
                                  <prop type="string" name="target"/>
                                </item>
                              </prop>
                              <prop type="object" name="innererror">
                                <prop type="string" name="errordetail"/>
                                <prop type="string" name="exceptiontype"/>
                              </prop>
                              <prop type="string" name="message"/>
                              <prop type="string" name="target"/>
                            </prop>
                            <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                            <prop readOnly="True" type="integer32" name="otherPatchCount"/>
                            <prop readOnly="True" type="boolean" name="rebootPending"/>
                            <prop readOnly="True" type="dateTime" name="startTime"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;CompletedWithWarnings&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="array<@InstanceViewStatus_read>" name="configurationStatuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="object" name="lastPatchInstallationSummary">
                            <prop readOnly="True" type="@ApiError_read" name="error"/>
                            <prop readOnly="True" type="integer32" name="excludedPatchCount"/>
                            <prop readOnly="True" type="integer32" name="failedPatchCount"/>
                            <prop readOnly="True" type="string" name="installationActivityId"/>
                            <prop readOnly="True" type="integer32" name="installedPatchCount"/>
                            <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                            <prop readOnly="True" type="boolean" name="maintenanceWindowExceeded"/>
                            <prop readOnly="True" type="integer32" name="notSelectedPatchCount"/>
                            <prop readOnly="True" type="integer32" name="pendingPatchCount"/>
                            <prop readOnly="True" type="dateTime" name="startTime"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;CompletedWithWarnings&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="integer32" name="platformFaultDomain"/>
                        <prop type="integer32" name="platformUpdateDomain"/>
                        <prop type="string" name="rdpThumbPrint"/>
                        <prop type="array<@InstanceViewStatus_read>" name="statuses">
                          <item type="@InstanceViewStatus_read"/>
                        </prop>
                        <prop type="object" name="vmAgent">
                          <prop type="array<object>" name="extensionHandlers">
                            <item type="object">
                              <prop type="object" name="status" cls="InstanceViewStatus_read">
                                <prop type="string" name="code"/>
                                <prop type="string" name="displayStatus"/>
                                <prop type="string" name="level">
                                  <enum>
                                    <item value="&quot;Error&quot;"/>
                                    <item value="&quot;Info&quot;"/>
                                    <item value="&quot;Warning&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="message"/>
                                <prop type="dateTime" name="time"/>
                              </prop>
                              <prop type="string" name="type"/>
                              <prop type="string" name="typeHandlerVersion"/>
                            </item>
                          </prop>
                          <prop type="array<@InstanceViewStatus_read>" name="statuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="string" name="vmAgentVersion"/>
                        </prop>
                        <prop readOnly="True" type="object" name="vmHealth">
                          <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                        </prop>
                      </prop>
                      <prop type="string" name="licenseType"/>
                      <prop type="object" name="networkProfile">
                        <prop type="string" name="networkApiVersion">
                          <enum>
                            <item value="&quot;2020-11-01&quot;"/>
                            <item value="&quot;2022-11-01&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="networkInterfaceConfigurations" identifiers="name">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="auxiliaryMode">
                                <enum>
                                  <item value="&quot;AcceleratedConnections&quot;"/>
                                  <item value="&quot;Floating&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="auxiliarySku">
                                <enum>
                                  <item value="&quot;A1&quot;"/>
                                  <item value="&quot;A2&quot;"/>
                                  <item value="&quot;A4&quot;"/>
                                  <item value="&quot;A8&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="disableTcpStateTracking"/>
                              <prop type="object" name="dnsSettings">
                                <prop type="array<string>" name="dnsServers">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="@SubResource_read" name="dscpConfiguration"/>
                              <prop type="boolean" name="enableAcceleratedNetworking"/>
                              <prop type="boolean" name="enableFpga"/>
                              <prop type="boolean" name="enableIPForwarding"/>
                              <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                                <item type="object">
                                  <prop type="string" name="name" required="True"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="boolean" name="primary"/>
                                    <prop type="string" name="privateIPAddressVersion">
                                      <enum>
                                        <item value="&quot;IPv4&quot;"/>
                                        <item value="&quot;IPv6&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="object" name="publicIPAddressConfiguration">
                                      <prop type="string" name="name" required="True"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="deleteOption">
                                          <enum>
                                            <item value="&quot;Delete&quot;"/>
                                            <item value="&quot;Detach&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="object" name="dnsSettings">
                                          <prop type="string" name="domainNameLabel" required="True"/>
                                          <prop type="string" name="domainNameLabelScope">
                                            <enum>
                                              <item value="&quot;NoReuse&quot;"/>
                                              <item value="&quot;ResourceGroupReuse&quot;"/>
                                              <item value="&quot;SubscriptionReuse&quot;"/>
                                              <item value="&quot;TenantReuse&quot;"/>
                                            </enum>
                                          </prop>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                        <prop type="array<object>" name="ipTags">
                                          <item type="object">
                                            <prop type="string" name="ipTagType"/>
                                            <prop type="string" name="tag"/>
                                          </item>
                                        </prop>
                                        <prop type="string" name="publicIPAddressVersion">
                                          <enum>
                                            <item value="&quot;IPv4&quot;"/>
                                            <item value="&quot;IPv6&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="publicIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="@SubResource_read" name="publicIPPrefix"/>
                                      </prop>
                                      <prop type="object" name="sku">
                                        <prop type="string" name="name">
                                          <enum>
                                            <item value="&quot;Basic&quot;"/>
                                            <item value="&quot;Standard&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="tier">
                                          <enum>
                                            <item value="&quot;Global&quot;"/>
                                            <item value="&quot;Regional&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                    </prop>
                                    <prop type="@SubResource_read" name="subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_read" name="networkSecurityGroup"/>
                              <prop type="boolean" name="primary"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="networkInterfaces">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="primary"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="osProfile">
                        <prop type="string" name="adminPassword" secret="True"/>
                        <prop type="string" name="adminUsername"/>
                        <prop type="boolean" name="allowExtensionOperations"/>
                        <prop type="string" name="computerName"/>
                        <prop type="string" name="customData"/>
                        <prop type="object" name="linuxConfiguration">
                          <prop type="boolean" name="disablePasswordAuthentication"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="object" name="ssh">
                            <prop type="array<object>" name="publicKeys" identifiers="path">
                              <item type="object">
                                <prop type="string" name="keyData"/>
                                <prop type="string" name="path"/>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="requireGuestProvisionSignal"/>
                        <prop type="array<object>" name="secrets">
                          <item type="object">
                            <prop type="@SubResource_read" name="sourceVault"/>
                            <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                              <item type="object">
                                <prop type="string" name="certificateStore"/>
                                <prop type="string" name="certificateUrl"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="windowsConfiguration">
                          <prop type="array<object>" name="additionalUnattendContent">
                            <item type="object">
                              <prop type="string" name="componentName">
                                <enum>
                                  <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content"/>
                              <prop type="string" name="passName">
                                <enum>
                                  <item value="&quot;OobeSystem&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="settingName">
                                <enum>
                                  <item value="&quot;AutoLogon&quot;"/>
                                  <item value="&quot;FirstLogonCommands&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="enableAutomaticUpdates"/>
                          <prop readOnly="True" type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enableHotpatching"/>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByOS&quot;"/>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;Manual&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="string" name="timeZone"/>
                          <prop type="object" name="winRM">
                            <prop type="array<object>" name="listeners">
                              <item type="object">
                                <prop type="string" name="certificateUrl"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;Http&quot;"/>
                                    <item value="&quot;Https&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="integer32" name="platformFaultDomain"/>
                      <prop type="string" name="priority">
                        <enum>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Regular&quot;"/>
                          <item value="&quot;Spot&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                      <prop type="object" name="scheduledEventsPolicy">
                        <prop type="object" name="scheduledEventsAdditionalPublishingTargets">
                          <prop type="object" name="eventGridAndResourceGraph">
                            <prop type="boolean" name="enable"/>
                          </prop>
                        </prop>
                        <prop type="object" name="userInitiatedReboot">
                          <prop type="boolean" name="automaticallyApprove"/>
                        </prop>
                        <prop type="object" name="userInitiatedRedeploy">
                          <prop type="boolean" name="automaticallyApprove"/>
                        </prop>
                      </prop>
                      <prop type="object" name="scheduledEventsProfile">
                        <prop type="object" name="osImageNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                        <prop type="object" name="terminateNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                      </prop>
                      <prop type="object" name="securityProfile">
                        <prop type="boolean" name="encryptionAtHost"/>
                        <prop type="object" name="encryptionIdentity">
                          <prop type="string" name="userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="object" name="proxyAgentSettings">
                          <prop type="boolean" name="enabled"/>
                          <prop type="@HostEndpointSettings_read" name="imds"/>
                          <prop type="integer32" name="keyIncarnationId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="wireServer" cls="HostEndpointSettings_read">
                            <prop type="string" name="inVMAccessControlProfileReferenceId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;Audit&quot;"/>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enforce&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="string" name="securityType">
                          <enum>
                            <item value="&quot;ConfidentialVM&quot;"/>
                            <item value="&quot;TrustedLaunch&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="uefiSettings">
                          <prop type="boolean" name="secureBootEnabled"/>
                          <prop type="boolean" name="vTpmEnabled"/>
                        </prop>
                      </prop>
                      <prop type="object" name="storageProfile">
                        <prop type="boolean" name="alignRegionalDisksToVMZone"/>
                        <prop type="array<object>" name="dataDisks" identifiers="lun">
                          <item type="object">
                            <prop type="string" name="caching">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;ReadOnly&quot;"/>
                                <item value="&quot;ReadWrite&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="createOption" required="True">
                              <enum>
                                <item value="&quot;Attach&quot;"/>
                                <item value="&quot;Copy&quot;"/>
                                <item value="&quot;Empty&quot;"/>
                                <item value="&quot;FromImage&quot;"/>
                                <item value="&quot;Restore&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="detachOption">
                              <enum>
                                <item value="&quot;ForceDetach&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="integer64" name="diskIOPSReadWrite"/>
                            <prop readOnly="True" type="integer64" name="diskMBpsReadWrite"/>
                            <prop type="integer32" name="diskSizeGB"/>
                            <prop type="@VirtualHardDisk_read" name="image"/>
                            <prop type="integer32" name="lun" required="True"/>
                            <prop type="@ManagedDiskParameters_read" name="managedDisk"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="sourceResource">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="boolean" name="toBeDetached"/>
                            <prop type="@VirtualHardDisk_read" name="vhd"/>
                            <prop type="boolean" name="writeAcceleratorEnabled"/>
                          </item>
                        </prop>
                        <prop type="string" name="diskControllerType">
                          <enum>
                            <item value="&quot;NVMe&quot;"/>
                            <item value="&quot;SCSI&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="imageReference">
                          <prop type="string" name="communityGalleryImageId"/>
                          <prop readOnly="True" type="string" name="exactVersion"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="offer"/>
                          <prop type="string" name="publisher"/>
                          <prop type="string" name="sharedGalleryImageId"/>
                          <prop type="string" name="sku"/>
                          <prop type="string" name="version"/>
                        </prop>
                        <prop type="object" name="osDisk">
                          <prop type="string" name="caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Copy&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                              <item value="&quot;Restore&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="diffDiskSettings">
                            <prop type="string" name="option">
                              <enum>
                                <item value="&quot;Local&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="placement">
                              <enum>
                                <item value="&quot;CacheDisk&quot;"/>
                                <item value="&quot;NvmeDisk&quot;"/>
                                <item value="&quot;ResourceDisk&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="diskSizeGB"/>
                          <prop type="object" name="encryptionSettings" cls="DiskEncryptionSettings_read">
                            <prop type="object" name="diskEncryptionKey" cls="KeyVaultSecretReference_read">
                              <prop type="string" name="secretUrl" required="True"/>
                              <prop type="object" name="sourceVault" required="True" cls="SubResource_read">
                                <prop type="string" name="id"/>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enabled"/>
                            <prop type="object" name="keyEncryptionKey">
                              <prop type="string" name="keyUrl" required="True"/>
                              <prop type="@SubResource_read" name="sourceVault" required="True"/>
                            </prop>
                          </prop>
                          <prop type="@VirtualHardDisk_read" name="image"/>
                          <prop type="object" name="managedDisk" cls="ManagedDiskParameters_read">
                            <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="string" name="id"/>
                            <prop type="object" name="securityProfile">
                              <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                              <prop type="string" name="securityEncryptionType">
                                <enum>
                                  <item value="&quot;DiskWithVMGuestState&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                  <item value="&quot;VMGuestStateOnly&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Premium_ZRS&quot;"/>
                                <item value="&quot;StandardSSD_LRS&quot;"/>
                                <item value="&quot;StandardSSD_ZRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;UltraSSD_LRS&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="osType">
                            <enum>
                              <item value="&quot;Linux&quot;"/>
                              <item value="&quot;Windows&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="vhd" cls="VirtualHardDisk_read">
                            <prop type="string" name="uri"/>
                          </prop>
                          <prop type="boolean" name="writeAcceleratorEnabled"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                      <prop type="string" name="userData"/>
                      <prop type="@SubResource_read" name="virtualMachineScaleSet"/>
                      <prop readOnly="True" type="string" name="vmId"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="resources">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="boolean" name="autoUpgradeMinorVersion"/>
                          <prop type="boolean" name="enableAutomaticUpgrade"/>
                          <prop type="string" name="forceUpdateTag"/>
                          <prop type="@VirtualMachineExtensionInstanceView_read" name="instanceView"/>
                          <prop type="object" name="protectedSettings">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="@KeyVaultSecretReference_read" name="protectedSettingsFromKeyVault"/>
                          <prop type="array<string>" name="provisionAfterExtensions">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState"/>
                          <prop type="string" name="publisher"/>
                          <prop type="object" name="settings">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="boolean" name="suppressFailures"/>
                          <prop type="string" name="type"/>
                          <prop type="string" name="typeHandlerVersion"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                    <prop type="array<string>" name="zones">
                      <item type="string"/>
                    </prop>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="assign" type="IdentityObject" name="parameters.identity" required="True">
                <userAssigned action="assign" type="array<string>" name="userAssigned" arg="$parameters.identity.userAssigned">
                  <item action="assign" type="string"/>
                </userAssigned>
                <systemAssigned action="assign" type="string" name="systemAssigned" arg="$parameters.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="VirtualMachines_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-11-01&quot;"/>
                </const>
              </query>
              <header>
                <param type="string" name="If-Match" arg="$Header.If-Match"/>
                <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
              </header>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualMachine_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2024-11-01">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}" version="2024-11-01" subresource="identity" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
        <argGroup name="">
          <arg type="string" var="$Header.If-Match" options="if-match">
            <help short="The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes."/>
          </arg>
          <arg type="string" var="$Header.If-None-Match" options="if-none-match">
            <help short="Set to '*' to allow a new record set to be created, but to prevent updating an existing record set. Other values will result in error from server as they are not supported."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.vmName" options="vm-name name n" required="True" idPart="name">
            <help short="The name of the virtual machine."/>
          </arg>
        </argGroup>
        <argGroup name="Parameters.identity">
          <arg type="string" var="$parameters.identity.systemAssigned" options="mi-system-assigned system-assigned" group="Parameters.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$parameters.identity.userAssigned" options="mi-user-assigned user-assigned" group="Parameters.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualMachines_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-11-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualMachine_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="managedBy"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="placement">
                      <prop type="array<string>" name="excludeZones">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="includeZones">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="zonePlacementPolicy">
                        <enum>
                          <item value="&quot;Any&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="plan">
                      <prop type="string" name="name"/>
                      <prop type="string" name="product"/>
                      <prop type="string" name="promotionCode"/>
                      <prop type="string" name="publisher"/>
                    </prop>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="additionalCapabilities">
                        <prop type="boolean" name="hibernationEnabled"/>
                        <prop type="boolean" name="ultraSSDEnabled"/>
                      </prop>
                      <prop type="object" name="applicationProfile">
                        <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                          <item type="object">
                            <prop type="string" name="configurationReference"/>
                            <prop type="boolean" name="enableAutomaticUpgrade"/>
                            <prop type="integer32" name="order"/>
                            <prop type="string" name="packageReferenceId" required="True"/>
                            <prop type="string" name="tags"/>
                            <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="availabilitySet"/>
                      <prop type="object" name="billingProfile">
                        <prop type="float64" name="maxPrice"/>
                      </prop>
                      <prop type="object" name="capacityReservation">
                        <prop type="@SubResource_read" name="capacityReservationGroup"/>
                      </prop>
                      <prop type="object" name="diagnosticsProfile">
                        <prop type="object" name="bootDiagnostics">
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="storageUri"/>
                        </prop>
                      </prop>
                      <prop type="string" name="evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="extensionsTimeBudget"/>
                      <prop type="object" name="hardwareProfile">
                        <prop type="string" name="vmSize">
                          <enum>
                            <item value="&quot;Basic_A0&quot;"/>
                            <item value="&quot;Basic_A1&quot;"/>
                            <item value="&quot;Basic_A2&quot;"/>
                            <item value="&quot;Basic_A3&quot;"/>
                            <item value="&quot;Basic_A4&quot;"/>
                            <item value="&quot;Standard_A0&quot;"/>
                            <item value="&quot;Standard_A1&quot;"/>
                            <item value="&quot;Standard_A10&quot;"/>
                            <item value="&quot;Standard_A11&quot;"/>
                            <item value="&quot;Standard_A1_v2&quot;"/>
                            <item value="&quot;Standard_A2&quot;"/>
                            <item value="&quot;Standard_A2_v2&quot;"/>
                            <item value="&quot;Standard_A2m_v2&quot;"/>
                            <item value="&quot;Standard_A3&quot;"/>
                            <item value="&quot;Standard_A4&quot;"/>
                            <item value="&quot;Standard_A4_v2&quot;"/>
                            <item value="&quot;Standard_A4m_v2&quot;"/>
                            <item value="&quot;Standard_A5&quot;"/>
                            <item value="&quot;Standard_A6&quot;"/>
                            <item value="&quot;Standard_A7&quot;"/>
                            <item value="&quot;Standard_A8&quot;"/>
                            <item value="&quot;Standard_A8_v2&quot;"/>
                            <item value="&quot;Standard_A8m_v2&quot;"/>
                            <item value="&quot;Standard_A9&quot;"/>
                            <item value="&quot;Standard_B1ms&quot;"/>
                            <item value="&quot;Standard_B1s&quot;"/>
                            <item value="&quot;Standard_B2ms&quot;"/>
                            <item value="&quot;Standard_B2s&quot;"/>
                            <item value="&quot;Standard_B4ms&quot;"/>
                            <item value="&quot;Standard_B8ms&quot;"/>
                            <item value="&quot;Standard_D1&quot;"/>
                            <item value="&quot;Standard_D11&quot;"/>
                            <item value="&quot;Standard_D11_v2&quot;"/>
                            <item value="&quot;Standard_D12&quot;"/>
                            <item value="&quot;Standard_D12_v2&quot;"/>
                            <item value="&quot;Standard_D13&quot;"/>
                            <item value="&quot;Standard_D13_v2&quot;"/>
                            <item value="&quot;Standard_D14&quot;"/>
                            <item value="&quot;Standard_D14_v2&quot;"/>
                            <item value="&quot;Standard_D15_v2&quot;"/>
                            <item value="&quot;Standard_D16_v3&quot;"/>
                            <item value="&quot;Standard_D16s_v3&quot;"/>
                            <item value="&quot;Standard_D1_v2&quot;"/>
                            <item value="&quot;Standard_D2&quot;"/>
                            <item value="&quot;Standard_D2_v2&quot;"/>
                            <item value="&quot;Standard_D2_v3&quot;"/>
                            <item value="&quot;Standard_D2s_v3&quot;"/>
                            <item value="&quot;Standard_D3&quot;"/>
                            <item value="&quot;Standard_D32_v3&quot;"/>
                            <item value="&quot;Standard_D32s_v3&quot;"/>
                            <item value="&quot;Standard_D3_v2&quot;"/>
                            <item value="&quot;Standard_D4&quot;"/>
                            <item value="&quot;Standard_D4_v2&quot;"/>
                            <item value="&quot;Standard_D4_v3&quot;"/>
                            <item value="&quot;Standard_D4s_v3&quot;"/>
                            <item value="&quot;Standard_D5_v2&quot;"/>
                            <item value="&quot;Standard_D64_v3&quot;"/>
                            <item value="&quot;Standard_D64s_v3&quot;"/>
                            <item value="&quot;Standard_D8_v3&quot;"/>
                            <item value="&quot;Standard_D8s_v3&quot;"/>
                            <item value="&quot;Standard_DS1&quot;"/>
                            <item value="&quot;Standard_DS11&quot;"/>
                            <item value="&quot;Standard_DS11_v2&quot;"/>
                            <item value="&quot;Standard_DS12&quot;"/>
                            <item value="&quot;Standard_DS12_v2&quot;"/>
                            <item value="&quot;Standard_DS13&quot;"/>
                            <item value="&quot;Standard_DS13-2_v2&quot;"/>
                            <item value="&quot;Standard_DS13-4_v2&quot;"/>
                            <item value="&quot;Standard_DS13_v2&quot;"/>
                            <item value="&quot;Standard_DS14&quot;"/>
                            <item value="&quot;Standard_DS14-4_v2&quot;"/>
                            <item value="&quot;Standard_DS14-8_v2&quot;"/>
                            <item value="&quot;Standard_DS14_v2&quot;"/>
                            <item value="&quot;Standard_DS15_v2&quot;"/>
                            <item value="&quot;Standard_DS1_v2&quot;"/>
                            <item value="&quot;Standard_DS2&quot;"/>
                            <item value="&quot;Standard_DS2_v2&quot;"/>
                            <item value="&quot;Standard_DS3&quot;"/>
                            <item value="&quot;Standard_DS3_v2&quot;"/>
                            <item value="&quot;Standard_DS4&quot;"/>
                            <item value="&quot;Standard_DS4_v2&quot;"/>
                            <item value="&quot;Standard_DS5_v2&quot;"/>
                            <item value="&quot;Standard_E16_v3&quot;"/>
                            <item value="&quot;Standard_E16s_v3&quot;"/>
                            <item value="&quot;Standard_E2_v3&quot;"/>
                            <item value="&quot;Standard_E2s_v3&quot;"/>
                            <item value="&quot;Standard_E32-16_v3&quot;"/>
                            <item value="&quot;Standard_E32-8s_v3&quot;"/>
                            <item value="&quot;Standard_E32_v3&quot;"/>
                            <item value="&quot;Standard_E32s_v3&quot;"/>
                            <item value="&quot;Standard_E4_v3&quot;"/>
                            <item value="&quot;Standard_E4s_v3&quot;"/>
                            <item value="&quot;Standard_E64-16s_v3&quot;"/>
                            <item value="&quot;Standard_E64-32s_v3&quot;"/>
                            <item value="&quot;Standard_E64_v3&quot;"/>
                            <item value="&quot;Standard_E64s_v3&quot;"/>
                            <item value="&quot;Standard_E8_v3&quot;"/>
                            <item value="&quot;Standard_E8s_v3&quot;"/>
                            <item value="&quot;Standard_F1&quot;"/>
                            <item value="&quot;Standard_F16&quot;"/>
                            <item value="&quot;Standard_F16s&quot;"/>
                            <item value="&quot;Standard_F16s_v2&quot;"/>
                            <item value="&quot;Standard_F1s&quot;"/>
                            <item value="&quot;Standard_F2&quot;"/>
                            <item value="&quot;Standard_F2s&quot;"/>
                            <item value="&quot;Standard_F2s_v2&quot;"/>
                            <item value="&quot;Standard_F32s_v2&quot;"/>
                            <item value="&quot;Standard_F4&quot;"/>
                            <item value="&quot;Standard_F4s&quot;"/>
                            <item value="&quot;Standard_F4s_v2&quot;"/>
                            <item value="&quot;Standard_F64s_v2&quot;"/>
                            <item value="&quot;Standard_F72s_v2&quot;"/>
                            <item value="&quot;Standard_F8&quot;"/>
                            <item value="&quot;Standard_F8s&quot;"/>
                            <item value="&quot;Standard_F8s_v2&quot;"/>
                            <item value="&quot;Standard_G1&quot;"/>
                            <item value="&quot;Standard_G2&quot;"/>
                            <item value="&quot;Standard_G3&quot;"/>
                            <item value="&quot;Standard_G4&quot;"/>
                            <item value="&quot;Standard_G5&quot;"/>
                            <item value="&quot;Standard_GS1&quot;"/>
                            <item value="&quot;Standard_GS2&quot;"/>
                            <item value="&quot;Standard_GS3&quot;"/>
                            <item value="&quot;Standard_GS4&quot;"/>
                            <item value="&quot;Standard_GS4-4&quot;"/>
                            <item value="&quot;Standard_GS4-8&quot;"/>
                            <item value="&quot;Standard_GS5&quot;"/>
                            <item value="&quot;Standard_GS5-16&quot;"/>
                            <item value="&quot;Standard_GS5-8&quot;"/>
                            <item value="&quot;Standard_H16&quot;"/>
                            <item value="&quot;Standard_H16m&quot;"/>
                            <item value="&quot;Standard_H16mr&quot;"/>
                            <item value="&quot;Standard_H16r&quot;"/>
                            <item value="&quot;Standard_H8&quot;"/>
                            <item value="&quot;Standard_H8m&quot;"/>
                            <item value="&quot;Standard_L16s&quot;"/>
                            <item value="&quot;Standard_L32s&quot;"/>
                            <item value="&quot;Standard_L4s&quot;"/>
                            <item value="&quot;Standard_L8s&quot;"/>
                            <item value="&quot;Standard_M128-32ms&quot;"/>
                            <item value="&quot;Standard_M128-64ms&quot;"/>
                            <item value="&quot;Standard_M128ms&quot;"/>
                            <item value="&quot;Standard_M128s&quot;"/>
                            <item value="&quot;Standard_M64-16ms&quot;"/>
                            <item value="&quot;Standard_M64-32ms&quot;"/>
                            <item value="&quot;Standard_M64ms&quot;"/>
                            <item value="&quot;Standard_M64s&quot;"/>
                            <item value="&quot;Standard_NC12&quot;"/>
                            <item value="&quot;Standard_NC12s_v2&quot;"/>
                            <item value="&quot;Standard_NC12s_v3&quot;"/>
                            <item value="&quot;Standard_NC24&quot;"/>
                            <item value="&quot;Standard_NC24r&quot;"/>
                            <item value="&quot;Standard_NC24rs_v2&quot;"/>
                            <item value="&quot;Standard_NC24rs_v3&quot;"/>
                            <item value="&quot;Standard_NC24s_v2&quot;"/>
                            <item value="&quot;Standard_NC24s_v3&quot;"/>
                            <item value="&quot;Standard_NC6&quot;"/>
                            <item value="&quot;Standard_NC6s_v2&quot;"/>
                            <item value="&quot;Standard_NC6s_v3&quot;"/>
                            <item value="&quot;Standard_ND12s&quot;"/>
                            <item value="&quot;Standard_ND24rs&quot;"/>
                            <item value="&quot;Standard_ND24s&quot;"/>
                            <item value="&quot;Standard_ND6s&quot;"/>
                            <item value="&quot;Standard_NV12&quot;"/>
                            <item value="&quot;Standard_NV24&quot;"/>
                            <item value="&quot;Standard_NV6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="vmSizeProperties">
                          <prop type="integer32" name="vCPUsAvailable"/>
                          <prop type="integer32" name="vCPUsPerCore"/>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="host"/>
                      <prop type="@SubResource_read" name="hostGroup"/>
                      <prop readOnly="True" type="object" name="instanceView">
                        <prop readOnly="True" type="string" name="assignedHost"/>
                        <prop type="object" name="bootDiagnostics">
                          <prop readOnly="True" type="string" name="consoleScreenshotBlobUri"/>
                          <prop readOnly="True" type="string" name="serialConsoleLogBlobUri"/>
                          <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                        </prop>
                        <prop type="string" name="computerName"/>
                        <prop type="array<object>" name="disks" identifiers="name">
                          <item type="object">
                            <prop type="array<@DiskEncryptionSettings_read>" name="encryptionSettings">
                              <item type="@DiskEncryptionSettings_read"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="array<@InstanceViewStatus_read>" name="statuses">
                              <item type="@InstanceViewStatus_read"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="extensions" identifiers="name type">
                          <item type="object" cls="VirtualMachineExtensionInstanceView_read">
                            <prop type="string" name="name"/>
                            <prop type="array<@InstanceViewStatus_read>" name="statuses">
                              <item type="@InstanceViewStatus_read"/>
                            </prop>
                            <prop type="array<@InstanceViewStatus_read>" name="substatuses">
                              <item type="@InstanceViewStatus_read"/>
                            </prop>
                            <prop type="string" name="type"/>
                            <prop type="string" name="typeHandlerVersion"/>
                          </item>
                        </prop>
                        <prop type="string" name="hyperVGeneration">
                          <enum>
                            <item value="&quot;V1&quot;"/>
                            <item value="&quot;V2&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="boolean" name="isVMInStandbyPool"/>
                        <prop type="object" name="maintenanceRedeployStatus">
                          <prop type="boolean" name="isCustomerInitiatedMaintenanceAllowed"/>
                          <prop type="string" name="lastOperationMessage"/>
                          <prop type="string" name="lastOperationResultCode">
                            <enum>
                              <item value="&quot;MaintenanceAborted&quot;"/>
                              <item value="&quot;MaintenanceCompleted&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;RetryLater&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="maintenanceWindowEndTime"/>
                          <prop type="dateTime" name="maintenanceWindowStartTime"/>
                          <prop type="dateTime" name="preMaintenanceWindowEndTime"/>
                          <prop type="dateTime" name="preMaintenanceWindowStartTime"/>
                        </prop>
                        <prop type="string" name="osName"/>
                        <prop type="string" name="osVersion"/>
                        <prop type="object" name="patchStatus">
                          <prop type="object" name="availablePatchSummary">
                            <prop readOnly="True" type="string" name="assessmentActivityId"/>
                            <prop readOnly="True" type="integer32" name="criticalAndSecurityPatchCount"/>
                            <prop readOnly="True" type="object" name="error" cls="ApiError_read">
                              <prop type="string" name="code"/>
                              <prop type="array<object>" name="details" identifiers="message target">
                                <item type="object">
                                  <prop type="string" name="code"/>
                                  <prop type="string" name="message"/>
                                  <prop type="string" name="target"/>
                                </item>
                              </prop>
                              <prop type="object" name="innererror">
                                <prop type="string" name="errordetail"/>
                                <prop type="string" name="exceptiontype"/>
                              </prop>
                              <prop type="string" name="message"/>
                              <prop type="string" name="target"/>
                            </prop>
                            <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                            <prop readOnly="True" type="integer32" name="otherPatchCount"/>
                            <prop readOnly="True" type="boolean" name="rebootPending"/>
                            <prop readOnly="True" type="dateTime" name="startTime"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;CompletedWithWarnings&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="array<@InstanceViewStatus_read>" name="configurationStatuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="object" name="lastPatchInstallationSummary">
                            <prop readOnly="True" type="@ApiError_read" name="error"/>
                            <prop readOnly="True" type="integer32" name="excludedPatchCount"/>
                            <prop readOnly="True" type="integer32" name="failedPatchCount"/>
                            <prop readOnly="True" type="string" name="installationActivityId"/>
                            <prop readOnly="True" type="integer32" name="installedPatchCount"/>
                            <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                            <prop readOnly="True" type="boolean" name="maintenanceWindowExceeded"/>
                            <prop readOnly="True" type="integer32" name="notSelectedPatchCount"/>
                            <prop readOnly="True" type="integer32" name="pendingPatchCount"/>
                            <prop readOnly="True" type="dateTime" name="startTime"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;CompletedWithWarnings&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="integer32" name="platformFaultDomain"/>
                        <prop type="integer32" name="platformUpdateDomain"/>
                        <prop type="string" name="rdpThumbPrint"/>
                        <prop type="array<@InstanceViewStatus_read>" name="statuses">
                          <item type="@InstanceViewStatus_read"/>
                        </prop>
                        <prop type="object" name="vmAgent">
                          <prop type="array<object>" name="extensionHandlers">
                            <item type="object">
                              <prop type="object" name="status" cls="InstanceViewStatus_read">
                                <prop type="string" name="code"/>
                                <prop type="string" name="displayStatus"/>
                                <prop type="string" name="level">
                                  <enum>
                                    <item value="&quot;Error&quot;"/>
                                    <item value="&quot;Info&quot;"/>
                                    <item value="&quot;Warning&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="message"/>
                                <prop type="dateTime" name="time"/>
                              </prop>
                              <prop type="string" name="type"/>
                              <prop type="string" name="typeHandlerVersion"/>
                            </item>
                          </prop>
                          <prop type="array<@InstanceViewStatus_read>" name="statuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="string" name="vmAgentVersion"/>
                        </prop>
                        <prop readOnly="True" type="object" name="vmHealth">
                          <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                        </prop>
                      </prop>
                      <prop type="string" name="licenseType"/>
                      <prop type="object" name="networkProfile">
                        <prop type="string" name="networkApiVersion">
                          <enum>
                            <item value="&quot;2020-11-01&quot;"/>
                            <item value="&quot;2022-11-01&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="networkInterfaceConfigurations" identifiers="name">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="auxiliaryMode">
                                <enum>
                                  <item value="&quot;AcceleratedConnections&quot;"/>
                                  <item value="&quot;Floating&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="auxiliarySku">
                                <enum>
                                  <item value="&quot;A1&quot;"/>
                                  <item value="&quot;A2&quot;"/>
                                  <item value="&quot;A4&quot;"/>
                                  <item value="&quot;A8&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="disableTcpStateTracking"/>
                              <prop type="object" name="dnsSettings">
                                <prop type="array<string>" name="dnsServers">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="@SubResource_read" name="dscpConfiguration"/>
                              <prop type="boolean" name="enableAcceleratedNetworking"/>
                              <prop type="boolean" name="enableFpga"/>
                              <prop type="boolean" name="enableIPForwarding"/>
                              <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                                <item type="object">
                                  <prop type="string" name="name" required="True"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="boolean" name="primary"/>
                                    <prop type="string" name="privateIPAddressVersion">
                                      <enum>
                                        <item value="&quot;IPv4&quot;"/>
                                        <item value="&quot;IPv6&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="object" name="publicIPAddressConfiguration">
                                      <prop type="string" name="name" required="True"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="deleteOption">
                                          <enum>
                                            <item value="&quot;Delete&quot;"/>
                                            <item value="&quot;Detach&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="object" name="dnsSettings">
                                          <prop type="string" name="domainNameLabel" required="True"/>
                                          <prop type="string" name="domainNameLabelScope">
                                            <enum>
                                              <item value="&quot;NoReuse&quot;"/>
                                              <item value="&quot;ResourceGroupReuse&quot;"/>
                                              <item value="&quot;SubscriptionReuse&quot;"/>
                                              <item value="&quot;TenantReuse&quot;"/>
                                            </enum>
                                          </prop>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                        <prop type="array<object>" name="ipTags">
                                          <item type="object">
                                            <prop type="string" name="ipTagType"/>
                                            <prop type="string" name="tag"/>
                                          </item>
                                        </prop>
                                        <prop type="string" name="publicIPAddressVersion">
                                          <enum>
                                            <item value="&quot;IPv4&quot;"/>
                                            <item value="&quot;IPv6&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="publicIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="@SubResource_read" name="publicIPPrefix"/>
                                      </prop>
                                      <prop type="object" name="sku">
                                        <prop type="string" name="name">
                                          <enum>
                                            <item value="&quot;Basic&quot;"/>
                                            <item value="&quot;Standard&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="tier">
                                          <enum>
                                            <item value="&quot;Global&quot;"/>
                                            <item value="&quot;Regional&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                    </prop>
                                    <prop type="@SubResource_read" name="subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_read" name="networkSecurityGroup"/>
                              <prop type="boolean" name="primary"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="networkInterfaces">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="primary"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="osProfile">
                        <prop type="string" name="adminPassword" secret="True"/>
                        <prop type="string" name="adminUsername"/>
                        <prop type="boolean" name="allowExtensionOperations"/>
                        <prop type="string" name="computerName"/>
                        <prop type="string" name="customData"/>
                        <prop type="object" name="linuxConfiguration">
                          <prop type="boolean" name="disablePasswordAuthentication"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="object" name="ssh">
                            <prop type="array<object>" name="publicKeys" identifiers="path">
                              <item type="object">
                                <prop type="string" name="keyData"/>
                                <prop type="string" name="path"/>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="requireGuestProvisionSignal"/>
                        <prop type="array<object>" name="secrets">
                          <item type="object">
                            <prop type="@SubResource_read" name="sourceVault"/>
                            <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                              <item type="object">
                                <prop type="string" name="certificateStore"/>
                                <prop type="string" name="certificateUrl"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="windowsConfiguration">
                          <prop type="array<object>" name="additionalUnattendContent">
                            <item type="object">
                              <prop type="string" name="componentName">
                                <enum>
                                  <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content"/>
                              <prop type="string" name="passName">
                                <enum>
                                  <item value="&quot;OobeSystem&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="settingName">
                                <enum>
                                  <item value="&quot;AutoLogon&quot;"/>
                                  <item value="&quot;FirstLogonCommands&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="enableAutomaticUpdates"/>
                          <prop readOnly="True" type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enableHotpatching"/>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByOS&quot;"/>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;Manual&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="string" name="timeZone"/>
                          <prop type="object" name="winRM">
                            <prop type="array<object>" name="listeners">
                              <item type="object">
                                <prop type="string" name="certificateUrl"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;Http&quot;"/>
                                    <item value="&quot;Https&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="integer32" name="platformFaultDomain"/>
                      <prop type="string" name="priority">
                        <enum>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Regular&quot;"/>
                          <item value="&quot;Spot&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                      <prop type="object" name="scheduledEventsPolicy">
                        <prop type="object" name="scheduledEventsAdditionalPublishingTargets">
                          <prop type="object" name="eventGridAndResourceGraph">
                            <prop type="boolean" name="enable"/>
                          </prop>
                        </prop>
                        <prop type="object" name="userInitiatedReboot">
                          <prop type="boolean" name="automaticallyApprove"/>
                        </prop>
                        <prop type="object" name="userInitiatedRedeploy">
                          <prop type="boolean" name="automaticallyApprove"/>
                        </prop>
                      </prop>
                      <prop type="object" name="scheduledEventsProfile">
                        <prop type="object" name="osImageNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                        <prop type="object" name="terminateNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                      </prop>
                      <prop type="object" name="securityProfile">
                        <prop type="boolean" name="encryptionAtHost"/>
                        <prop type="object" name="encryptionIdentity">
                          <prop type="string" name="userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="object" name="proxyAgentSettings">
                          <prop type="boolean" name="enabled"/>
                          <prop type="@HostEndpointSettings_read" name="imds"/>
                          <prop type="integer32" name="keyIncarnationId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="wireServer" cls="HostEndpointSettings_read">
                            <prop type="string" name="inVMAccessControlProfileReferenceId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;Audit&quot;"/>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enforce&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="string" name="securityType">
                          <enum>
                            <item value="&quot;ConfidentialVM&quot;"/>
                            <item value="&quot;TrustedLaunch&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="uefiSettings">
                          <prop type="boolean" name="secureBootEnabled"/>
                          <prop type="boolean" name="vTpmEnabled"/>
                        </prop>
                      </prop>
                      <prop type="object" name="storageProfile">
                        <prop type="boolean" name="alignRegionalDisksToVMZone"/>
                        <prop type="array<object>" name="dataDisks" identifiers="lun">
                          <item type="object">
                            <prop type="string" name="caching">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;ReadOnly&quot;"/>
                                <item value="&quot;ReadWrite&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="createOption" required="True">
                              <enum>
                                <item value="&quot;Attach&quot;"/>
                                <item value="&quot;Copy&quot;"/>
                                <item value="&quot;Empty&quot;"/>
                                <item value="&quot;FromImage&quot;"/>
                                <item value="&quot;Restore&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="detachOption">
                              <enum>
                                <item value="&quot;ForceDetach&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="integer64" name="diskIOPSReadWrite"/>
                            <prop readOnly="True" type="integer64" name="diskMBpsReadWrite"/>
                            <prop type="integer32" name="diskSizeGB"/>
                            <prop type="@VirtualHardDisk_read" name="image"/>
                            <prop type="integer32" name="lun" required="True"/>
                            <prop type="@ManagedDiskParameters_read" name="managedDisk"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="sourceResource">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="boolean" name="toBeDetached"/>
                            <prop type="@VirtualHardDisk_read" name="vhd"/>
                            <prop type="boolean" name="writeAcceleratorEnabled"/>
                          </item>
                        </prop>
                        <prop type="string" name="diskControllerType">
                          <enum>
                            <item value="&quot;NVMe&quot;"/>
                            <item value="&quot;SCSI&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="imageReference">
                          <prop type="string" name="communityGalleryImageId"/>
                          <prop readOnly="True" type="string" name="exactVersion"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="offer"/>
                          <prop type="string" name="publisher"/>
                          <prop type="string" name="sharedGalleryImageId"/>
                          <prop type="string" name="sku"/>
                          <prop type="string" name="version"/>
                        </prop>
                        <prop type="object" name="osDisk">
                          <prop type="string" name="caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Copy&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                              <item value="&quot;Restore&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="diffDiskSettings">
                            <prop type="string" name="option">
                              <enum>
                                <item value="&quot;Local&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="placement">
                              <enum>
                                <item value="&quot;CacheDisk&quot;"/>
                                <item value="&quot;NvmeDisk&quot;"/>
                                <item value="&quot;ResourceDisk&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="diskSizeGB"/>
                          <prop type="object" name="encryptionSettings" cls="DiskEncryptionSettings_read">
                            <prop type="object" name="diskEncryptionKey" cls="KeyVaultSecretReference_read">
                              <prop type="string" name="secretUrl" required="True"/>
                              <prop type="object" name="sourceVault" required="True" cls="SubResource_read">
                                <prop type="string" name="id"/>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enabled"/>
                            <prop type="object" name="keyEncryptionKey">
                              <prop type="string" name="keyUrl" required="True"/>
                              <prop type="@SubResource_read" name="sourceVault" required="True"/>
                            </prop>
                          </prop>
                          <prop type="@VirtualHardDisk_read" name="image"/>
                          <prop type="object" name="managedDisk" cls="ManagedDiskParameters_read">
                            <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="string" name="id"/>
                            <prop type="object" name="securityProfile">
                              <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                              <prop type="string" name="securityEncryptionType">
                                <enum>
                                  <item value="&quot;DiskWithVMGuestState&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                  <item value="&quot;VMGuestStateOnly&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Premium_ZRS&quot;"/>
                                <item value="&quot;StandardSSD_LRS&quot;"/>
                                <item value="&quot;StandardSSD_ZRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;UltraSSD_LRS&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="osType">
                            <enum>
                              <item value="&quot;Linux&quot;"/>
                              <item value="&quot;Windows&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="vhd" cls="VirtualHardDisk_read">
                            <prop type="string" name="uri"/>
                          </prop>
                          <prop type="boolean" name="writeAcceleratorEnabled"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                      <prop type="string" name="userData"/>
                      <prop type="@SubResource_read" name="virtualMachineScaleSet"/>
                      <prop readOnly="True" type="string" name="vmId"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="resources">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="boolean" name="autoUpgradeMinorVersion"/>
                          <prop type="boolean" name="enableAutomaticUpgrade"/>
                          <prop type="string" name="forceUpdateTag"/>
                          <prop type="@VirtualMachineExtensionInstanceView_read" name="instanceView"/>
                          <prop type="object" name="protectedSettings">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="@KeyVaultSecretReference_read" name="protectedSettingsFromKeyVault"/>
                          <prop type="array<string>" name="provisionAfterExtensions">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState"/>
                          <prop type="string" name="publisher"/>
                          <prop type="object" name="settings">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="boolean" name="suppressFailures"/>
                          <prop type="string" name="type"/>
                          <prop type="string" name="typeHandlerVersion"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                    <prop type="array<string>" name="zones">
                      <item type="string"/>
                    </prop>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="remove" type="IdentityObject" name="parameters.identity" required="True">
                <userAssigned action="remove" type="array<string>" name="userAssigned" arg="$parameters.identity.userAssigned">
                  <item action="remove" type="string"/>
                </userAssigned>
                <systemAssigned action="remove" type="string" name="systemAssigned" arg="$parameters.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="VirtualMachines_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
            <request method="put">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-11-01&quot;"/>
                </const>
              </query>
              <header>
                <param type="string" name="If-Match" arg="$Header.If-Match"/>
                <param type="string" name="If-None-Match" arg="$Header.If-None-Match"/>
              </header>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200 201">
              <body>
                <json var="$Instance">
                  <schema type="@VirtualMachine_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="show" version="2024-11-01">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}" version="2024-11-01" subresource="identity" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0=/V/MjAyNC0xMS0wMQ=="/>
        <argGroup name="">
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
          <arg type="string" var="$Path.vmName" options="vm-name name n" required="True" idPart="name">
            <help short="The name of the virtual machine."/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="parameters">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="VirtualMachines_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}">
            <request method="get">
              <path>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
                <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2024-11-01&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="VirtualMachine_read">
                    <prop readOnly="True" type="string" name="etag"/>
                    <prop type="object" name="extendedLocation">
                      <prop type="string" name="name"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;EdgeZone&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="managedBy"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="placement">
                      <prop type="array<string>" name="excludeZones">
                        <item type="string"/>
                      </prop>
                      <prop type="array<string>" name="includeZones">
                        <item type="string"/>
                      </prop>
                      <prop type="string" name="zonePlacementPolicy">
                        <enum>
                          <item value="&quot;Any&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="object" name="plan">
                      <prop type="string" name="name"/>
                      <prop type="string" name="product"/>
                      <prop type="string" name="promotionCode"/>
                      <prop type="string" name="publisher"/>
                    </prop>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="additionalCapabilities">
                        <prop type="boolean" name="hibernationEnabled"/>
                        <prop type="boolean" name="ultraSSDEnabled"/>
                      </prop>
                      <prop type="object" name="applicationProfile">
                        <prop type="array<object>" name="galleryApplications" identifiers="packageReferenceId">
                          <item type="object">
                            <prop type="string" name="configurationReference"/>
                            <prop type="boolean" name="enableAutomaticUpgrade"/>
                            <prop type="integer32" name="order"/>
                            <prop type="string" name="packageReferenceId" required="True"/>
                            <prop type="string" name="tags"/>
                            <prop type="boolean" name="treatFailureAsDeploymentFailure"/>
                          </item>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="availabilitySet"/>
                      <prop type="object" name="billingProfile">
                        <prop type="float64" name="maxPrice"/>
                      </prop>
                      <prop type="object" name="capacityReservation">
                        <prop type="@SubResource_read" name="capacityReservationGroup"/>
                      </prop>
                      <prop type="object" name="diagnosticsProfile">
                        <prop type="object" name="bootDiagnostics">
                          <prop type="boolean" name="enabled"/>
                          <prop type="string" name="storageUri"/>
                        </prop>
                      </prop>
                      <prop type="string" name="evictionPolicy">
                        <enum>
                          <item value="&quot;Deallocate&quot;"/>
                          <item value="&quot;Delete&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="extensionsTimeBudget"/>
                      <prop type="object" name="hardwareProfile">
                        <prop type="string" name="vmSize">
                          <enum>
                            <item value="&quot;Basic_A0&quot;"/>
                            <item value="&quot;Basic_A1&quot;"/>
                            <item value="&quot;Basic_A2&quot;"/>
                            <item value="&quot;Basic_A3&quot;"/>
                            <item value="&quot;Basic_A4&quot;"/>
                            <item value="&quot;Standard_A0&quot;"/>
                            <item value="&quot;Standard_A1&quot;"/>
                            <item value="&quot;Standard_A10&quot;"/>
                            <item value="&quot;Standard_A11&quot;"/>
                            <item value="&quot;Standard_A1_v2&quot;"/>
                            <item value="&quot;Standard_A2&quot;"/>
                            <item value="&quot;Standard_A2_v2&quot;"/>
                            <item value="&quot;Standard_A2m_v2&quot;"/>
                            <item value="&quot;Standard_A3&quot;"/>
                            <item value="&quot;Standard_A4&quot;"/>
                            <item value="&quot;Standard_A4_v2&quot;"/>
                            <item value="&quot;Standard_A4m_v2&quot;"/>
                            <item value="&quot;Standard_A5&quot;"/>
                            <item value="&quot;Standard_A6&quot;"/>
                            <item value="&quot;Standard_A7&quot;"/>
                            <item value="&quot;Standard_A8&quot;"/>
                            <item value="&quot;Standard_A8_v2&quot;"/>
                            <item value="&quot;Standard_A8m_v2&quot;"/>
                            <item value="&quot;Standard_A9&quot;"/>
                            <item value="&quot;Standard_B1ms&quot;"/>
                            <item value="&quot;Standard_B1s&quot;"/>
                            <item value="&quot;Standard_B2ms&quot;"/>
                            <item value="&quot;Standard_B2s&quot;"/>
                            <item value="&quot;Standard_B4ms&quot;"/>
                            <item value="&quot;Standard_B8ms&quot;"/>
                            <item value="&quot;Standard_D1&quot;"/>
                            <item value="&quot;Standard_D11&quot;"/>
                            <item value="&quot;Standard_D11_v2&quot;"/>
                            <item value="&quot;Standard_D12&quot;"/>
                            <item value="&quot;Standard_D12_v2&quot;"/>
                            <item value="&quot;Standard_D13&quot;"/>
                            <item value="&quot;Standard_D13_v2&quot;"/>
                            <item value="&quot;Standard_D14&quot;"/>
                            <item value="&quot;Standard_D14_v2&quot;"/>
                            <item value="&quot;Standard_D15_v2&quot;"/>
                            <item value="&quot;Standard_D16_v3&quot;"/>
                            <item value="&quot;Standard_D16s_v3&quot;"/>
                            <item value="&quot;Standard_D1_v2&quot;"/>
                            <item value="&quot;Standard_D2&quot;"/>
                            <item value="&quot;Standard_D2_v2&quot;"/>
                            <item value="&quot;Standard_D2_v3&quot;"/>
                            <item value="&quot;Standard_D2s_v3&quot;"/>
                            <item value="&quot;Standard_D3&quot;"/>
                            <item value="&quot;Standard_D32_v3&quot;"/>
                            <item value="&quot;Standard_D32s_v3&quot;"/>
                            <item value="&quot;Standard_D3_v2&quot;"/>
                            <item value="&quot;Standard_D4&quot;"/>
                            <item value="&quot;Standard_D4_v2&quot;"/>
                            <item value="&quot;Standard_D4_v3&quot;"/>
                            <item value="&quot;Standard_D4s_v3&quot;"/>
                            <item value="&quot;Standard_D5_v2&quot;"/>
                            <item value="&quot;Standard_D64_v3&quot;"/>
                            <item value="&quot;Standard_D64s_v3&quot;"/>
                            <item value="&quot;Standard_D8_v3&quot;"/>
                            <item value="&quot;Standard_D8s_v3&quot;"/>
                            <item value="&quot;Standard_DS1&quot;"/>
                            <item value="&quot;Standard_DS11&quot;"/>
                            <item value="&quot;Standard_DS11_v2&quot;"/>
                            <item value="&quot;Standard_DS12&quot;"/>
                            <item value="&quot;Standard_DS12_v2&quot;"/>
                            <item value="&quot;Standard_DS13&quot;"/>
                            <item value="&quot;Standard_DS13-2_v2&quot;"/>
                            <item value="&quot;Standard_DS13-4_v2&quot;"/>
                            <item value="&quot;Standard_DS13_v2&quot;"/>
                            <item value="&quot;Standard_DS14&quot;"/>
                            <item value="&quot;Standard_DS14-4_v2&quot;"/>
                            <item value="&quot;Standard_DS14-8_v2&quot;"/>
                            <item value="&quot;Standard_DS14_v2&quot;"/>
                            <item value="&quot;Standard_DS15_v2&quot;"/>
                            <item value="&quot;Standard_DS1_v2&quot;"/>
                            <item value="&quot;Standard_DS2&quot;"/>
                            <item value="&quot;Standard_DS2_v2&quot;"/>
                            <item value="&quot;Standard_DS3&quot;"/>
                            <item value="&quot;Standard_DS3_v2&quot;"/>
                            <item value="&quot;Standard_DS4&quot;"/>
                            <item value="&quot;Standard_DS4_v2&quot;"/>
                            <item value="&quot;Standard_DS5_v2&quot;"/>
                            <item value="&quot;Standard_E16_v3&quot;"/>
                            <item value="&quot;Standard_E16s_v3&quot;"/>
                            <item value="&quot;Standard_E2_v3&quot;"/>
                            <item value="&quot;Standard_E2s_v3&quot;"/>
                            <item value="&quot;Standard_E32-16_v3&quot;"/>
                            <item value="&quot;Standard_E32-8s_v3&quot;"/>
                            <item value="&quot;Standard_E32_v3&quot;"/>
                            <item value="&quot;Standard_E32s_v3&quot;"/>
                            <item value="&quot;Standard_E4_v3&quot;"/>
                            <item value="&quot;Standard_E4s_v3&quot;"/>
                            <item value="&quot;Standard_E64-16s_v3&quot;"/>
                            <item value="&quot;Standard_E64-32s_v3&quot;"/>
                            <item value="&quot;Standard_E64_v3&quot;"/>
                            <item value="&quot;Standard_E64s_v3&quot;"/>
                            <item value="&quot;Standard_E8_v3&quot;"/>
                            <item value="&quot;Standard_E8s_v3&quot;"/>
                            <item value="&quot;Standard_F1&quot;"/>
                            <item value="&quot;Standard_F16&quot;"/>
                            <item value="&quot;Standard_F16s&quot;"/>
                            <item value="&quot;Standard_F16s_v2&quot;"/>
                            <item value="&quot;Standard_F1s&quot;"/>
                            <item value="&quot;Standard_F2&quot;"/>
                            <item value="&quot;Standard_F2s&quot;"/>
                            <item value="&quot;Standard_F2s_v2&quot;"/>
                            <item value="&quot;Standard_F32s_v2&quot;"/>
                            <item value="&quot;Standard_F4&quot;"/>
                            <item value="&quot;Standard_F4s&quot;"/>
                            <item value="&quot;Standard_F4s_v2&quot;"/>
                            <item value="&quot;Standard_F64s_v2&quot;"/>
                            <item value="&quot;Standard_F72s_v2&quot;"/>
                            <item value="&quot;Standard_F8&quot;"/>
                            <item value="&quot;Standard_F8s&quot;"/>
                            <item value="&quot;Standard_F8s_v2&quot;"/>
                            <item value="&quot;Standard_G1&quot;"/>
                            <item value="&quot;Standard_G2&quot;"/>
                            <item value="&quot;Standard_G3&quot;"/>
                            <item value="&quot;Standard_G4&quot;"/>
                            <item value="&quot;Standard_G5&quot;"/>
                            <item value="&quot;Standard_GS1&quot;"/>
                            <item value="&quot;Standard_GS2&quot;"/>
                            <item value="&quot;Standard_GS3&quot;"/>
                            <item value="&quot;Standard_GS4&quot;"/>
                            <item value="&quot;Standard_GS4-4&quot;"/>
                            <item value="&quot;Standard_GS4-8&quot;"/>
                            <item value="&quot;Standard_GS5&quot;"/>
                            <item value="&quot;Standard_GS5-16&quot;"/>
                            <item value="&quot;Standard_GS5-8&quot;"/>
                            <item value="&quot;Standard_H16&quot;"/>
                            <item value="&quot;Standard_H16m&quot;"/>
                            <item value="&quot;Standard_H16mr&quot;"/>
                            <item value="&quot;Standard_H16r&quot;"/>
                            <item value="&quot;Standard_H8&quot;"/>
                            <item value="&quot;Standard_H8m&quot;"/>
                            <item value="&quot;Standard_L16s&quot;"/>
                            <item value="&quot;Standard_L32s&quot;"/>
                            <item value="&quot;Standard_L4s&quot;"/>
                            <item value="&quot;Standard_L8s&quot;"/>
                            <item value="&quot;Standard_M128-32ms&quot;"/>
                            <item value="&quot;Standard_M128-64ms&quot;"/>
                            <item value="&quot;Standard_M128ms&quot;"/>
                            <item value="&quot;Standard_M128s&quot;"/>
                            <item value="&quot;Standard_M64-16ms&quot;"/>
                            <item value="&quot;Standard_M64-32ms&quot;"/>
                            <item value="&quot;Standard_M64ms&quot;"/>
                            <item value="&quot;Standard_M64s&quot;"/>
                            <item value="&quot;Standard_NC12&quot;"/>
                            <item value="&quot;Standard_NC12s_v2&quot;"/>
                            <item value="&quot;Standard_NC12s_v3&quot;"/>
                            <item value="&quot;Standard_NC24&quot;"/>
                            <item value="&quot;Standard_NC24r&quot;"/>
                            <item value="&quot;Standard_NC24rs_v2&quot;"/>
                            <item value="&quot;Standard_NC24rs_v3&quot;"/>
                            <item value="&quot;Standard_NC24s_v2&quot;"/>
                            <item value="&quot;Standard_NC24s_v3&quot;"/>
                            <item value="&quot;Standard_NC6&quot;"/>
                            <item value="&quot;Standard_NC6s_v2&quot;"/>
                            <item value="&quot;Standard_NC6s_v3&quot;"/>
                            <item value="&quot;Standard_ND12s&quot;"/>
                            <item value="&quot;Standard_ND24rs&quot;"/>
                            <item value="&quot;Standard_ND24s&quot;"/>
                            <item value="&quot;Standard_ND6s&quot;"/>
                            <item value="&quot;Standard_NV12&quot;"/>
                            <item value="&quot;Standard_NV24&quot;"/>
                            <item value="&quot;Standard_NV6&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="vmSizeProperties">
                          <prop type="integer32" name="vCPUsAvailable"/>
                          <prop type="integer32" name="vCPUsPerCore"/>
                        </prop>
                      </prop>
                      <prop type="@SubResource_read" name="host"/>
                      <prop type="@SubResource_read" name="hostGroup"/>
                      <prop readOnly="True" type="object" name="instanceView">
                        <prop readOnly="True" type="string" name="assignedHost"/>
                        <prop type="object" name="bootDiagnostics">
                          <prop readOnly="True" type="string" name="consoleScreenshotBlobUri"/>
                          <prop readOnly="True" type="string" name="serialConsoleLogBlobUri"/>
                          <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                        </prop>
                        <prop type="string" name="computerName"/>
                        <prop type="array<object>" name="disks" identifiers="name">
                          <item type="object">
                            <prop type="array<@DiskEncryptionSettings_read>" name="encryptionSettings">
                              <item type="@DiskEncryptionSettings_read"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="array<@InstanceViewStatus_read>" name="statuses">
                              <item type="@InstanceViewStatus_read"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="extensions" identifiers="name type">
                          <item type="object" cls="VirtualMachineExtensionInstanceView_read">
                            <prop type="string" name="name"/>
                            <prop type="array<@InstanceViewStatus_read>" name="statuses">
                              <item type="@InstanceViewStatus_read"/>
                            </prop>
                            <prop type="array<@InstanceViewStatus_read>" name="substatuses">
                              <item type="@InstanceViewStatus_read"/>
                            </prop>
                            <prop type="string" name="type"/>
                            <prop type="string" name="typeHandlerVersion"/>
                          </item>
                        </prop>
                        <prop type="string" name="hyperVGeneration">
                          <enum>
                            <item value="&quot;V1&quot;"/>
                            <item value="&quot;V2&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="boolean" name="isVMInStandbyPool"/>
                        <prop type="object" name="maintenanceRedeployStatus">
                          <prop type="boolean" name="isCustomerInitiatedMaintenanceAllowed"/>
                          <prop type="string" name="lastOperationMessage"/>
                          <prop type="string" name="lastOperationResultCode">
                            <enum>
                              <item value="&quot;MaintenanceAborted&quot;"/>
                              <item value="&quot;MaintenanceCompleted&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;RetryLater&quot;"/>
                            </enum>
                          </prop>
                          <prop type="dateTime" name="maintenanceWindowEndTime"/>
                          <prop type="dateTime" name="maintenanceWindowStartTime"/>
                          <prop type="dateTime" name="preMaintenanceWindowEndTime"/>
                          <prop type="dateTime" name="preMaintenanceWindowStartTime"/>
                        </prop>
                        <prop type="string" name="osName"/>
                        <prop type="string" name="osVersion"/>
                        <prop type="object" name="patchStatus">
                          <prop type="object" name="availablePatchSummary">
                            <prop readOnly="True" type="string" name="assessmentActivityId"/>
                            <prop readOnly="True" type="integer32" name="criticalAndSecurityPatchCount"/>
                            <prop readOnly="True" type="object" name="error" cls="ApiError_read">
                              <prop type="string" name="code"/>
                              <prop type="array<object>" name="details" identifiers="message target">
                                <item type="object">
                                  <prop type="string" name="code"/>
                                  <prop type="string" name="message"/>
                                  <prop type="string" name="target"/>
                                </item>
                              </prop>
                              <prop type="object" name="innererror">
                                <prop type="string" name="errordetail"/>
                                <prop type="string" name="exceptiontype"/>
                              </prop>
                              <prop type="string" name="message"/>
                              <prop type="string" name="target"/>
                            </prop>
                            <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                            <prop readOnly="True" type="integer32" name="otherPatchCount"/>
                            <prop readOnly="True" type="boolean" name="rebootPending"/>
                            <prop readOnly="True" type="dateTime" name="startTime"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;CompletedWithWarnings&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop readOnly="True" type="array<@InstanceViewStatus_read>" name="configurationStatuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="object" name="lastPatchInstallationSummary">
                            <prop readOnly="True" type="@ApiError_read" name="error"/>
                            <prop readOnly="True" type="integer32" name="excludedPatchCount"/>
                            <prop readOnly="True" type="integer32" name="failedPatchCount"/>
                            <prop readOnly="True" type="string" name="installationActivityId"/>
                            <prop readOnly="True" type="integer32" name="installedPatchCount"/>
                            <prop readOnly="True" type="dateTime" name="lastModifiedTime"/>
                            <prop readOnly="True" type="boolean" name="maintenanceWindowExceeded"/>
                            <prop readOnly="True" type="integer32" name="notSelectedPatchCount"/>
                            <prop readOnly="True" type="integer32" name="pendingPatchCount"/>
                            <prop readOnly="True" type="dateTime" name="startTime"/>
                            <prop readOnly="True" type="string" name="status">
                              <enum>
                                <item value="&quot;CompletedWithWarnings&quot;"/>
                                <item value="&quot;Failed&quot;"/>
                                <item value="&quot;InProgress&quot;"/>
                                <item value="&quot;Succeeded&quot;"/>
                                <item value="&quot;Unknown&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="integer32" name="platformFaultDomain"/>
                        <prop type="integer32" name="platformUpdateDomain"/>
                        <prop type="string" name="rdpThumbPrint"/>
                        <prop type="array<@InstanceViewStatus_read>" name="statuses">
                          <item type="@InstanceViewStatus_read"/>
                        </prop>
                        <prop type="object" name="vmAgent">
                          <prop type="array<object>" name="extensionHandlers">
                            <item type="object">
                              <prop type="object" name="status" cls="InstanceViewStatus_read">
                                <prop type="string" name="code"/>
                                <prop type="string" name="displayStatus"/>
                                <prop type="string" name="level">
                                  <enum>
                                    <item value="&quot;Error&quot;"/>
                                    <item value="&quot;Info&quot;"/>
                                    <item value="&quot;Warning&quot;"/>
                                  </enum>
                                </prop>
                                <prop type="string" name="message"/>
                                <prop type="dateTime" name="time"/>
                              </prop>
                              <prop type="string" name="type"/>
                              <prop type="string" name="typeHandlerVersion"/>
                            </item>
                          </prop>
                          <prop type="array<@InstanceViewStatus_read>" name="statuses">
                            <item type="@InstanceViewStatus_read"/>
                          </prop>
                          <prop type="string" name="vmAgentVersion"/>
                        </prop>
                        <prop readOnly="True" type="object" name="vmHealth">
                          <prop readOnly="True" type="@InstanceViewStatus_read" name="status"/>
                        </prop>
                      </prop>
                      <prop type="string" name="licenseType"/>
                      <prop type="object" name="networkProfile">
                        <prop type="string" name="networkApiVersion">
                          <enum>
                            <item value="&quot;2020-11-01&quot;"/>
                            <item value="&quot;2022-11-01&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="networkInterfaceConfigurations" identifiers="name">
                          <item type="object">
                            <prop type="string" name="name" required="True"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="auxiliaryMode">
                                <enum>
                                  <item value="&quot;AcceleratedConnections&quot;"/>
                                  <item value="&quot;Floating&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="auxiliarySku">
                                <enum>
                                  <item value="&quot;A1&quot;"/>
                                  <item value="&quot;A2&quot;"/>
                                  <item value="&quot;A4&quot;"/>
                                  <item value="&quot;A8&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="disableTcpStateTracking"/>
                              <prop type="object" name="dnsSettings">
                                <prop type="array<string>" name="dnsServers">
                                  <item type="string"/>
                                </prop>
                              </prop>
                              <prop type="@SubResource_read" name="dscpConfiguration"/>
                              <prop type="boolean" name="enableAcceleratedNetworking"/>
                              <prop type="boolean" name="enableFpga"/>
                              <prop type="boolean" name="enableIPForwarding"/>
                              <prop type="array<object>" name="ipConfigurations" required="True" identifiers="name">
                                <item type="object">
                                  <prop type="string" name="name" required="True"/>
                                  <prop type="object" name="properties" clientFlatten="True">
                                    <prop type="array<@SubResource_read>" name="applicationGatewayBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="applicationSecurityGroups">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="array<@SubResource_read>" name="loadBalancerBackendAddressPools">
                                      <item type="@SubResource_read"/>
                                    </prop>
                                    <prop type="boolean" name="primary"/>
                                    <prop type="string" name="privateIPAddressVersion">
                                      <enum>
                                        <item value="&quot;IPv4&quot;"/>
                                        <item value="&quot;IPv6&quot;"/>
                                      </enum>
                                    </prop>
                                    <prop type="object" name="publicIPAddressConfiguration">
                                      <prop type="string" name="name" required="True"/>
                                      <prop type="object" name="properties" clientFlatten="True">
                                        <prop type="string" name="deleteOption">
                                          <enum>
                                            <item value="&quot;Delete&quot;"/>
                                            <item value="&quot;Detach&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="object" name="dnsSettings">
                                          <prop type="string" name="domainNameLabel" required="True"/>
                                          <prop type="string" name="domainNameLabelScope">
                                            <enum>
                                              <item value="&quot;NoReuse&quot;"/>
                                              <item value="&quot;ResourceGroupReuse&quot;"/>
                                              <item value="&quot;SubscriptionReuse&quot;"/>
                                              <item value="&quot;TenantReuse&quot;"/>
                                            </enum>
                                          </prop>
                                        </prop>
                                        <prop type="integer32" name="idleTimeoutInMinutes"/>
                                        <prop type="array<object>" name="ipTags">
                                          <item type="object">
                                            <prop type="string" name="ipTagType"/>
                                            <prop type="string" name="tag"/>
                                          </item>
                                        </prop>
                                        <prop type="string" name="publicIPAddressVersion">
                                          <enum>
                                            <item value="&quot;IPv4&quot;"/>
                                            <item value="&quot;IPv6&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="publicIPAllocationMethod">
                                          <enum>
                                            <item value="&quot;Dynamic&quot;"/>
                                            <item value="&quot;Static&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="@SubResource_read" name="publicIPPrefix"/>
                                      </prop>
                                      <prop type="object" name="sku">
                                        <prop type="string" name="name">
                                          <enum>
                                            <item value="&quot;Basic&quot;"/>
                                            <item value="&quot;Standard&quot;"/>
                                          </enum>
                                        </prop>
                                        <prop type="string" name="tier">
                                          <enum>
                                            <item value="&quot;Global&quot;"/>
                                            <item value="&quot;Regional&quot;"/>
                                          </enum>
                                        </prop>
                                      </prop>
                                    </prop>
                                    <prop type="@SubResource_read" name="subnet"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="@SubResource_read" name="networkSecurityGroup"/>
                              <prop type="boolean" name="primary"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="array<object>" name="networkInterfaces">
                          <item type="object">
                            <prop type="string" name="id"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="string" name="deleteOption">
                                <enum>
                                  <item value="&quot;Delete&quot;"/>
                                  <item value="&quot;Detach&quot;"/>
                                </enum>
                              </prop>
                              <prop type="boolean" name="primary"/>
                            </prop>
                          </item>
                        </prop>
                      </prop>
                      <prop type="object" name="osProfile">
                        <prop type="string" name="adminPassword" secret="True"/>
                        <prop type="string" name="adminUsername"/>
                        <prop type="boolean" name="allowExtensionOperations"/>
                        <prop type="string" name="computerName"/>
                        <prop type="string" name="customData"/>
                        <prop type="object" name="linuxConfiguration">
                          <prop type="boolean" name="disablePasswordAuthentication"/>
                          <prop type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="object" name="ssh">
                            <prop type="array<object>" name="publicKeys" identifiers="path">
                              <item type="object">
                                <prop type="string" name="keyData"/>
                                <prop type="string" name="path"/>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="boolean" name="requireGuestProvisionSignal"/>
                        <prop type="array<object>" name="secrets">
                          <item type="object">
                            <prop type="@SubResource_read" name="sourceVault"/>
                            <prop type="array<object>" name="vaultCertificates" identifiers="certificateUrl">
                              <item type="object">
                                <prop type="string" name="certificateStore"/>
                                <prop type="string" name="certificateUrl"/>
                              </item>
                            </prop>
                          </item>
                        </prop>
                        <prop type="object" name="windowsConfiguration">
                          <prop type="array<object>" name="additionalUnattendContent">
                            <item type="object">
                              <prop type="string" name="componentName">
                                <enum>
                                  <item value="&quot;Microsoft-Windows-Shell-Setup&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="content"/>
                              <prop type="string" name="passName">
                                <enum>
                                  <item value="&quot;OobeSystem&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="settingName">
                                <enum>
                                  <item value="&quot;AutoLogon&quot;"/>
                                  <item value="&quot;FirstLogonCommands&quot;"/>
                                </enum>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="enableAutomaticUpdates"/>
                          <prop readOnly="True" type="boolean" name="enableVMAgentPlatformUpdates"/>
                          <prop type="object" name="patchSettings">
                            <prop type="string" name="assessmentMode">
                              <enum>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;ImageDefault&quot;"/>
                              </enum>
                            </prop>
                            <prop type="object" name="automaticByPlatformSettings">
                              <prop type="boolean" name="bypassPlatformSafetyChecksOnUserSchedule"/>
                              <prop type="string" name="rebootSetting">
                                <enum>
                                  <item value="&quot;Always&quot;"/>
                                  <item value="&quot;IfRequired&quot;"/>
                                  <item value="&quot;Never&quot;"/>
                                  <item value="&quot;Unknown&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enableHotpatching"/>
                            <prop type="string" name="patchMode">
                              <enum>
                                <item value="&quot;AutomaticByOS&quot;"/>
                                <item value="&quot;AutomaticByPlatform&quot;"/>
                                <item value="&quot;Manual&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="boolean" name="provisionVMAgent"/>
                          <prop type="string" name="timeZone"/>
                          <prop type="object" name="winRM">
                            <prop type="array<object>" name="listeners">
                              <item type="object">
                                <prop type="string" name="certificateUrl"/>
                                <prop type="string" name="protocol">
                                  <enum>
                                    <item value="&quot;Http&quot;"/>
                                    <item value="&quot;Https&quot;"/>
                                  </enum>
                                </prop>
                              </item>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="integer32" name="platformFaultDomain"/>
                      <prop type="string" name="priority">
                        <enum>
                          <item value="&quot;Low&quot;"/>
                          <item value="&quot;Regular&quot;"/>
                          <item value="&quot;Spot&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="@SubResource_read" name="proximityPlacementGroup"/>
                      <prop type="object" name="scheduledEventsPolicy">
                        <prop type="object" name="scheduledEventsAdditionalPublishingTargets">
                          <prop type="object" name="eventGridAndResourceGraph">
                            <prop type="boolean" name="enable"/>
                          </prop>
                        </prop>
                        <prop type="object" name="userInitiatedReboot">
                          <prop type="boolean" name="automaticallyApprove"/>
                        </prop>
                        <prop type="object" name="userInitiatedRedeploy">
                          <prop type="boolean" name="automaticallyApprove"/>
                        </prop>
                      </prop>
                      <prop type="object" name="scheduledEventsProfile">
                        <prop type="object" name="osImageNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                        <prop type="object" name="terminateNotificationProfile">
                          <prop type="boolean" name="enable"/>
                          <prop type="string" name="notBeforeTimeout"/>
                        </prop>
                      </prop>
                      <prop type="object" name="securityProfile">
                        <prop type="boolean" name="encryptionAtHost"/>
                        <prop type="object" name="encryptionIdentity">
                          <prop type="string" name="userAssignedIdentityResourceId"/>
                        </prop>
                        <prop type="object" name="proxyAgentSettings">
                          <prop type="boolean" name="enabled"/>
                          <prop type="@HostEndpointSettings_read" name="imds"/>
                          <prop type="integer32" name="keyIncarnationId"/>
                          <prop type="string" name="mode">
                            <enum>
                              <item value="&quot;Audit&quot;"/>
                              <item value="&quot;Enforce&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="wireServer" cls="HostEndpointSettings_read">
                            <prop type="string" name="inVMAccessControlProfileReferenceId"/>
                            <prop type="string" name="mode">
                              <enum>
                                <item value="&quot;Audit&quot;"/>
                                <item value="&quot;Disabled&quot;"/>
                                <item value="&quot;Enforce&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                        <prop type="string" name="securityType">
                          <enum>
                            <item value="&quot;ConfidentialVM&quot;"/>
                            <item value="&quot;TrustedLaunch&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="uefiSettings">
                          <prop type="boolean" name="secureBootEnabled"/>
                          <prop type="boolean" name="vTpmEnabled"/>
                        </prop>
                      </prop>
                      <prop type="object" name="storageProfile">
                        <prop type="boolean" name="alignRegionalDisksToVMZone"/>
                        <prop type="array<object>" name="dataDisks" identifiers="lun">
                          <item type="object">
                            <prop type="string" name="caching">
                              <enum>
                                <item value="&quot;None&quot;"/>
                                <item value="&quot;ReadOnly&quot;"/>
                                <item value="&quot;ReadWrite&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="createOption" required="True">
                              <enum>
                                <item value="&quot;Attach&quot;"/>
                                <item value="&quot;Copy&quot;"/>
                                <item value="&quot;Empty&quot;"/>
                                <item value="&quot;FromImage&quot;"/>
                                <item value="&quot;Restore&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="deleteOption">
                              <enum>
                                <item value="&quot;Delete&quot;"/>
                                <item value="&quot;Detach&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="detachOption">
                              <enum>
                                <item value="&quot;ForceDetach&quot;"/>
                              </enum>
                            </prop>
                            <prop readOnly="True" type="integer64" name="diskIOPSReadWrite"/>
                            <prop readOnly="True" type="integer64" name="diskMBpsReadWrite"/>
                            <prop type="integer32" name="diskSizeGB"/>
                            <prop type="@VirtualHardDisk_read" name="image"/>
                            <prop type="integer32" name="lun" required="True"/>
                            <prop type="@ManagedDiskParameters_read" name="managedDisk"/>
                            <prop type="string" name="name"/>
                            <prop type="object" name="sourceResource">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="boolean" name="toBeDetached"/>
                            <prop type="@VirtualHardDisk_read" name="vhd"/>
                            <prop type="boolean" name="writeAcceleratorEnabled"/>
                          </item>
                        </prop>
                        <prop type="string" name="diskControllerType">
                          <enum>
                            <item value="&quot;NVMe&quot;"/>
                            <item value="&quot;SCSI&quot;"/>
                          </enum>
                        </prop>
                        <prop type="object" name="imageReference">
                          <prop type="string" name="communityGalleryImageId"/>
                          <prop readOnly="True" type="string" name="exactVersion"/>
                          <prop type="string" name="id"/>
                          <prop type="string" name="offer"/>
                          <prop type="string" name="publisher"/>
                          <prop type="string" name="sharedGalleryImageId"/>
                          <prop type="string" name="sku"/>
                          <prop type="string" name="version"/>
                        </prop>
                        <prop type="object" name="osDisk">
                          <prop type="string" name="caching">
                            <enum>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;ReadOnly&quot;"/>
                              <item value="&quot;ReadWrite&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="createOption" required="True">
                            <enum>
                              <item value="&quot;Attach&quot;"/>
                              <item value="&quot;Copy&quot;"/>
                              <item value="&quot;Empty&quot;"/>
                              <item value="&quot;FromImage&quot;"/>
                              <item value="&quot;Restore&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="deleteOption">
                            <enum>
                              <item value="&quot;Delete&quot;"/>
                              <item value="&quot;Detach&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="diffDiskSettings">
                            <prop type="string" name="option">
                              <enum>
                                <item value="&quot;Local&quot;"/>
                              </enum>
                            </prop>
                            <prop type="string" name="placement">
                              <enum>
                                <item value="&quot;CacheDisk&quot;"/>
                                <item value="&quot;NvmeDisk&quot;"/>
                                <item value="&quot;ResourceDisk&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="integer32" name="diskSizeGB"/>
                          <prop type="object" name="encryptionSettings" cls="DiskEncryptionSettings_read">
                            <prop type="object" name="diskEncryptionKey" cls="KeyVaultSecretReference_read">
                              <prop type="string" name="secretUrl" required="True"/>
                              <prop type="object" name="sourceVault" required="True" cls="SubResource_read">
                                <prop type="string" name="id"/>
                              </prop>
                            </prop>
                            <prop type="boolean" name="enabled"/>
                            <prop type="object" name="keyEncryptionKey">
                              <prop type="string" name="keyUrl" required="True"/>
                              <prop type="@SubResource_read" name="sourceVault" required="True"/>
                            </prop>
                          </prop>
                          <prop type="@VirtualHardDisk_read" name="image"/>
                          <prop type="object" name="managedDisk" cls="ManagedDiskParameters_read">
                            <prop type="object" name="diskEncryptionSet" cls="DiskEncryptionSetParameters_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="string" name="id"/>
                            <prop type="object" name="securityProfile">
                              <prop type="@DiskEncryptionSetParameters_read" name="diskEncryptionSet"/>
                              <prop type="string" name="securityEncryptionType">
                                <enum>
                                  <item value="&quot;DiskWithVMGuestState&quot;"/>
                                  <item value="&quot;NonPersistedTPM&quot;"/>
                                  <item value="&quot;VMGuestStateOnly&quot;"/>
                                </enum>
                              </prop>
                            </prop>
                            <prop type="string" name="storageAccountType">
                              <enum>
                                <item value="&quot;PremiumV2_LRS&quot;"/>
                                <item value="&quot;Premium_LRS&quot;"/>
                                <item value="&quot;Premium_ZRS&quot;"/>
                                <item value="&quot;StandardSSD_LRS&quot;"/>
                                <item value="&quot;StandardSSD_ZRS&quot;"/>
                                <item value="&quot;Standard_LRS&quot;"/>
                                <item value="&quot;UltraSSD_LRS&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                          <prop type="string" name="name"/>
                          <prop type="string" name="osType">
                            <enum>
                              <item value="&quot;Linux&quot;"/>
                              <item value="&quot;Windows&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="vhd" cls="VirtualHardDisk_read">
                            <prop type="string" name="uri"/>
                          </prop>
                          <prop type="boolean" name="writeAcceleratorEnabled"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="timeCreated"/>
                      <prop type="string" name="userData"/>
                      <prop type="@SubResource_read" name="virtualMachineScaleSet"/>
                      <prop readOnly="True" type="string" name="vmId"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="resources">
                      <item type="object">
                        <prop readOnly="True" type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                        </prop>
                        <prop type="ResourceLocation" name="location"/>
                        <prop readOnly="True" type="string" name="name"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="boolean" name="autoUpgradeMinorVersion"/>
                          <prop type="boolean" name="enableAutomaticUpgrade"/>
                          <prop type="string" name="forceUpdateTag"/>
                          <prop type="@VirtualMachineExtensionInstanceView_read" name="instanceView"/>
                          <prop type="object" name="protectedSettings">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="@KeyVaultSecretReference_read" name="protectedSettingsFromKeyVault"/>
                          <prop type="array<string>" name="provisionAfterExtensions">
                            <item type="string"/>
                          </prop>
                          <prop readOnly="True" type="string" name="provisioningState"/>
                          <prop type="string" name="publisher"/>
                          <prop type="object" name="settings">
                            <additionalProp>
                              <item type="any"/>
                            </additionalProp>
                          </prop>
                          <prop type="boolean" name="suppressFailures"/>
                          <prop type="string" name="type"/>
                          <prop type="string" name="typeHandlerVersion"/>
                        </prop>
                        <prop type="object" name="tags">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop readOnly="True" type="string" name="type"/>
                      </item>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                    <prop type="array<string>" name="zones">
                      <item type="string"/>
                    </prop>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
