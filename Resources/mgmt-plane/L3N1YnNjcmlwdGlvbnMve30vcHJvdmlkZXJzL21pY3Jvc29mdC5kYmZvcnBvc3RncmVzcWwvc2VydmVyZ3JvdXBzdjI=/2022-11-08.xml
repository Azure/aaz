<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.dbforpostgresql/servergroupsv2" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkRCZm9yUG9zdGdyZVNRTC9zZXJ2ZXJHcm91cHN2Mg==/V/MjAyMi0xMS0wOA=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3Yy/V/MjAyMi0xMS0wOA=="/>
  <commandGroup name="cosmosdb postgres cluster">
    <command name="list" version="2022-11-08" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.dbforpostgresql/servergroupsv2" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LkRCZm9yUG9zdGdyZVNRTC9zZXJ2ZXJHcm91cHN2Mg==/V/MjAyMi0xMS0wOA=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.dbforpostgresql/servergroupsv2" version="2022-11-08" swagger="mgmt-plane/postgresqlhsc/ResourceProviders/Microsoft.DBforPostgreSQL/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuREJmb3JQb3N0Z3JlU1FML3NlcnZlckdyb3Vwc3Yy/V/MjAyMi0xMS0wOA=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Clusters_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_Clusters_List">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Clusters_ListByResourceGroup" operationId="Clusters_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-08&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="administratorLogin"/>
                        <prop type="string" name="citusVersion"/>
                        <prop type="boolean" name="coordinatorEnablePublicIpAccess"/>
                        <prop type="string" name="coordinatorServerEdition"/>
                        <prop type="integer32" name="coordinatorStorageQuotaInMb"/>
                        <prop type="integer32" name="coordinatorVCores"/>
                        <prop readOnly="True" type="dateTime" name="earliestRestoreTime"/>
                        <prop type="boolean" name="enableHa"/>
                        <prop type="boolean" name="enableShardsOnCoordinator"/>
                        <prop type="object" name="maintenanceWindow">
                          <prop type="string" name="customWindow"/>
                          <prop type="integer32" name="dayOfWeek"/>
                          <prop type="integer32" name="startHour"/>
                          <prop type="integer32" name="startMinute"/>
                        </prop>
                        <prop type="integer32" name="nodeCount"/>
                        <prop type="boolean" name="nodeEnablePublicIpAccess"/>
                        <prop type="string" name="nodeServerEdition"/>
                        <prop type="integer32" name="nodeStorageQuotaInMb"/>
                        <prop type="integer32" name="nodeVCores"/>
                        <prop type="dateTime" name="pointInTimeUTC"/>
                        <prop type="string" name="postgresqlVersion"/>
                        <prop type="string" name="preferredPrimaryZone"/>
                        <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                          <item type="object">
                            <prop readOnly="True" type="string" name="id"/>
                            <prop readOnly="True" type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<string>" name="groupIds">
                                <item type="string"/>
                              </prop>
                              <prop type="object" name="privateEndpoint">
                                <prop type="string" name="id"/>
                              </prop>
                              <prop type="object" name="privateLinkServiceConnectionState">
                                <prop type="string" name="actionsRequired"/>
                                <prop type="string" name="description"/>
                                <prop type="string" name="status">
                                  <enum>
                                    <item value="&quot;Approved&quot;"/>
                                    <item value="&quot;Pending&quot;"/>
                                    <item value="&quot;Rejected&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop readOnly="True" type="array<string>" name="readReplicas">
                          <format unique="True"/>
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="serverNames" identifiers="name">
                          <format unique="True"/>
                          <item type="object">
                            <prop readOnly="True" type="string" name="fullyQualifiedDomainName"/>
                            <prop type="string" name="name"/>
                          </item>
                        </prop>
                        <prop type="string" name="sourceLocation"/>
                        <prop type="string" name="sourceResourceId"/>
                        <prop readOnly="True" type="string" name="state"/>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Clusters_List" operationId="Clusters_List">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-11-08&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="administratorLogin"/>
                        <prop type="string" name="citusVersion"/>
                        <prop type="boolean" name="coordinatorEnablePublicIpAccess"/>
                        <prop type="string" name="coordinatorServerEdition"/>
                        <prop type="integer32" name="coordinatorStorageQuotaInMb"/>
                        <prop type="integer32" name="coordinatorVCores"/>
                        <prop readOnly="True" type="dateTime" name="earliestRestoreTime"/>
                        <prop type="boolean" name="enableHa"/>
                        <prop type="boolean" name="enableShardsOnCoordinator"/>
                        <prop type="object" name="maintenanceWindow">
                          <prop type="string" name="customWindow"/>
                          <prop type="integer32" name="dayOfWeek"/>
                          <prop type="integer32" name="startHour"/>
                          <prop type="integer32" name="startMinute"/>
                        </prop>
                        <prop type="integer32" name="nodeCount"/>
                        <prop type="boolean" name="nodeEnablePublicIpAccess"/>
                        <prop type="string" name="nodeServerEdition"/>
                        <prop type="integer32" name="nodeStorageQuotaInMb"/>
                        <prop type="integer32" name="nodeVCores"/>
                        <prop type="dateTime" name="pointInTimeUTC"/>
                        <prop type="string" name="postgresqlVersion"/>
                        <prop type="string" name="preferredPrimaryZone"/>
                        <prop readOnly="True" type="array<object>" name="privateEndpointConnections">
                          <item type="object">
                            <prop readOnly="True" type="string" name="id"/>
                            <prop readOnly="True" type="string" name="name"/>
                            <prop type="object" name="properties" clientFlatten="True">
                              <prop type="array<string>" name="groupIds">
                                <item type="string"/>
                              </prop>
                              <prop type="object" name="privateEndpoint">
                                <prop type="string" name="id"/>
                              </prop>
                              <prop type="object" name="privateLinkServiceConnectionState">
                                <prop type="string" name="actionsRequired"/>
                                <prop type="string" name="description"/>
                                <prop type="string" name="status">
                                  <enum>
                                    <item value="&quot;Approved&quot;"/>
                                    <item value="&quot;Pending&quot;"/>
                                    <item value="&quot;Rejected&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                            </prop>
                            <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                            <prop readOnly="True" type="string" name="type"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState"/>
                        <prop readOnly="True" type="array<string>" name="readReplicas">
                          <format unique="True"/>
                          <item type="string"/>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="serverNames" identifiers="name">
                          <format unique="True"/>
                          <item type="object">
                            <prop readOnly="True" type="string" name="fullyQualifiedDomainName"/>
                            <prop type="string" name="name"/>
                          </item>
                        </prop>
                        <prop type="string" name="sourceLocation"/>
                        <prop type="string" name="sourceResourceId"/>
                        <prop readOnly="True" type="string" name="state"/>
                      </prop>
                      <prop readOnly="True" type="@SystemData_read" name="systemData"/>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
