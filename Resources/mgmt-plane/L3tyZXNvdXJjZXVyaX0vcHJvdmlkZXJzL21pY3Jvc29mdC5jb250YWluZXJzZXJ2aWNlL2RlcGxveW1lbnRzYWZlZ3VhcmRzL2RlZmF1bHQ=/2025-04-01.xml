<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{resourceuri}/providers/microsoft.containerservice/deploymentsafeguards/default" version="2025-04-01" swagger="mgmt-plane/containerservice/ResourceProviders/Microsoft.ContainerService/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5Db250YWluZXJTZXJ2aWNlL2RlcGxveW1lbnRTYWZlZ3VhcmRzL2RlZmF1bHQ=/V/MjAyNS0wNC0wMQ=="/>
  <commandGroup name="aks safeguards">
    <command name="create" version="2025-04-01" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.containerservice/deploymentsafeguards/default" version="2025-04-01" swagger="mgmt-plane/containerservice/ResourceProviders/Microsoft.ContainerService/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5Db250YWluZXJTZXJ2aWNlL2RlcGxveW1lbnRTYWZlZ3VhcmRzL2RlZmF1bHQ=/V/MjAyNS0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.resourceUri" options="managed-cluster cluster c" required="True" group="">
          <help short="The fully qualified Azure Resource manager identifier of the Managed Cluster."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<string>" var="$resource.properties.excludedNamespaces" options="excluded-namespaces excluded-ns" group="Properties">
          <help short="User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards"/>
          <item type="string"/>
        </arg>
        <arg type="string" var="$resource.properties.level" options="level" group="Properties">
          <help short="The deployment safeguards level. Possible values are Warn and Enforce"/>
          <enum>
            <item name="Enforce" value="&quot;Enforce&quot;"/>
            <item name="Warn" value="&quot;Warn&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="DeploymentSafeguards_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/{resourceUri}/providers/Microsoft.ContainerService/deploymentSafeguards/default">
          <request method="put">
            <path>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="excludedNamespaces" arg="$resource.properties.excludedNamespaces">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="level" arg="$resource.properties.level" required="True">
                      <enum>
                        <item value="&quot;Enforce&quot;"/>
                        <item value="&quot;Warn&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="excludedNamespaces">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="level" required="True">
                      <enum>
                        <item value="&quot;Enforce&quot;"/>
                        <item value="&quot;Warn&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="systemExcludedNamespaces">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2025-04-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/{resourceuri}/providers/microsoft.containerservice/deploymentsafeguards/default" version="2025-04-01" swagger="mgmt-plane/containerservice/ResourceProviders/Microsoft.ContainerService/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5Db250YWluZXJTZXJ2aWNlL2RlcGxveW1lbnRTYWZlZ3VhcmRzL2RlZmF1bHQ=/V/MjAyNS0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.resourceUri" options="managed-cluster cluster c" required="True" group="">
          <help short="The fully qualified Azure Resource manager identifier of the Managed Cluster."/>
        </arg>
      </argGroup>
      <operation operationId="DeploymentSafeguards_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/{resourceUri}/providers/Microsoft.ContainerService/deploymentSafeguards/default">
          <request method="delete">
            <path>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="show" version="2025-04-01" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.containerservice/deploymentsafeguards/default" version="2025-04-01" swagger="mgmt-plane/containerservice/ResourceProviders/Microsoft.ContainerService/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5Db250YWluZXJTZXJ2aWNlL2RlcGxveW1lbnRTYWZlZ3VhcmRzL2RlZmF1bHQ=/V/MjAyNS0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.resourceUri" options="managed-cluster cluster c" required="True" group="">
          <help short="The fully qualified Azure Resource manager identifier of the Managed Cluster."/>
        </arg>
      </argGroup>
      <operation operationId="DeploymentSafeguards_Get">
        <http path="/{resourceUri}/providers/Microsoft.ContainerService/deploymentSafeguards/default">
          <request method="get">
            <path>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="excludedNamespaces">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="level" required="True">
                      <enum>
                        <item value="&quot;Enforce&quot;"/>
                        <item value="&quot;Warn&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="systemExcludedNamespaces">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2025-04-01" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.containerservice/deploymentsafeguards/default" version="2025-04-01" swagger="mgmt-plane/containerservice/ResourceProviders/Microsoft.ContainerService/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5Db250YWluZXJTZXJ2aWNlL2RlcGxveW1lbnRTYWZlZ3VhcmRzL2RlZmF1bHQ=/V/MjAyNS0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.resourceUri" options="managed-cluster cluster c" required="True" group="">
          <help short="The fully qualified Azure Resource manager identifier of the Managed Cluster."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<string>" var="$resource.properties.excludedNamespaces" options="excluded-namespaces excluded-ns" group="Properties">
          <help short="User defined list of namespaces to exclude from Deployment Safeguards. Deployments in these namespaces will not be checked against any safeguards"/>
          <item nullable="True" type="string"/>
        </arg>
        <arg type="string" var="$resource.properties.level" options="level" group="Properties">
          <help short="The deployment safeguards level. Possible values are Warn and Enforce"/>
          <enum>
            <item name="Enforce" value="&quot;Enforce&quot;"/>
            <item name="Warn" value="&quot;Warn&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="DeploymentSafeguards_Get">
        <http path="/{resourceUri}/providers/Microsoft.ContainerService/deploymentSafeguards/default">
          <request method="get">
            <path>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="excludedNamespaces">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="level" required="True">
                      <enum>
                        <item value="&quot;Enforce&quot;"/>
                        <item value="&quot;Warn&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="systemExcludedNamespaces">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="array<string>" name="excludedNamespaces" arg="$resource.properties.excludedNamespaces">
                  <item type="string"/>
                </prop>
                <prop type="string" name="level" arg="$resource.properties.level" required="True">
                  <enum>
                    <item value="&quot;Enforce&quot;"/>
                    <item value="&quot;Warn&quot;"/>
                  </enum>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="DeploymentSafeguards_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/{resourceUri}/providers/Microsoft.ContainerService/deploymentSafeguards/default">
          <request method="put">
            <path>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2025-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="eTag"/>
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="array<string>" name="excludedNamespaces">
                      <item type="string"/>
                    </prop>
                    <prop type="string" name="level" required="True">
                      <enum>
                        <item value="&quot;Enforce&quot;"/>
                        <item value="&quot;Warn&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="array<string>" name="systemExcludedNamespaces">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema readOnly="True" type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
