<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}/networkvirtualapplianceconnections/{}" version="2023-06-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0vbmV0d29ya1ZpcnR1YWxBcHBsaWFuY2VDb25uZWN0aW9ucy97Y29ubmVjdGlvbk5hbWV9/V/MjAyMy0wNi0wMQ=="/>
  <commandGroup name="network virtual-appliance connection">
    <command name="show" version="2023-06-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}/networkvirtualapplianceconnections/{}" version="2023-06-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0vbmV0d29ya1ZpcnR1YWxBcHBsaWFuY2VDb25uZWN0aW9ucy97Y29ubmVjdGlvbk5hbWV9/V/MjAyMy0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the NVA connection."/>
          <default value="&quot;defaultConnection&quot;"/>
        </arg>
        <arg type="string" var="$Path.networkVirtualApplianceName" options="virtual-appliance-name nva" required="True" group="" idPart="name">
          <help short="The name of the Network Virtual Appliance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="NetworkVirtualApplianceConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/networkVirtualApplianceConnections/{connectionName}">
          <request method="get">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="networkVirtualApplianceName" arg="$Path.networkVirtualApplianceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}/networkVirtualApplianceConnections/{}"/>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="integer64" name="asn">
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="array<string>" name="bgpPeerAddress">
                      <item type="string"/>
                    </prop>
                    <prop type="boolean" name="enableInternetSecurity"/>
                    <prop type="string" name="name"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="routingConfiguration">
                      <prop type="object" name="associatedRouteTable" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="@SubResource_read" name="inboundRouteMap"/>
                      <prop type="@SubResource_read" name="outboundRouteMap"/>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<@SubResource_read>" name="ids">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<string>" name="labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes">
                        <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<object>" name="staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="nextHopIpAddress"/>
                          </item>
                        </prop>
                        <prop type="object" name="staticRoutesConfig">
                          <prop readOnly="True" type="boolean" name="propagateStaticRoutes"/>
                          <prop type="string" name="vnetLocalRouteOverrideCriteria">
                            <enum>
                              <item value="&quot;Contains&quot;"/>
                              <item value="&quot;Equal&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer64" name="tunnelIdentifier">
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-06-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/networkvirtualappliances/{}/networkvirtualapplianceconnections/{}" version="2023-06-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9uZXR3b3JrVmlydHVhbEFwcGxpYW5jZXMve25ldHdvcmtWaXJ0dWFsQXBwbGlhbmNlTmFtZX0vbmV0d29ya1ZpcnR1YWxBcHBsaWFuY2VDb25uZWN0aW9ucy97Y29ubmVjdGlvbk5hbWV9/V/MjAyMy0wNi0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.connectionName" options="name n" required="True" group="" idPart="child_name_1">
          <help short="The name of the NVA connection."/>
        </arg>
        <arg type="string" var="$Path.networkVirtualApplianceName" options="virtual-appliance-name nva" required="True" group="" idPart="name">
          <help short="The name of the Network Virtual Appliance."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="NetworkVirtualApplianceConnectionParameters">
        <arg nullable="True" type="ResourceId" var="$NetworkVirtualApplianceConnectionParameters.id" options="id" hide="True" group="NetworkVirtualApplianceConnectionParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}/networkVirtualApplianceConnections/{}"/>
        </arg>
      </argGroup>
      <argGroup name="PropagatedRouteTables">
        <arg nullable="True" type="array<@SubResource_update>" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids" options="propagated-route-table-ids propagated" group="PropagatedRouteTables">
          <help short="List of resource id of propagated route tables."/>
          <item nullable="True" type="@SubResource_update"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels" options="propagated-route-table-labels labels" group="PropagatedRouteTables">
          <help short="The list of labels."/>
          <item nullable="True" type="string"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="integer64" var="$NetworkVirtualApplianceConnectionParameters.properties.asn" options="asn" hide="True" group="Properties">
          <help short="Network Virtual Appliance ASN."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
        <arg nullable="True" type="array<string>" var="$NetworkVirtualApplianceConnectionParameters.properties.bgpPeerAddress" options="bgp-peer-address" hide="True" group="Properties">
          <help short="List of bgpPeerAddresses for the NVA instances"/>
          <item nullable="True" type="string"/>
        </arg>
        <arg nullable="True" type="boolean" var="$NetworkVirtualApplianceConnectionParameters.properties.enableInternetSecurity" options="enable-internet-security" hide="True" group="Properties">
          <help short="Enable internet security."/>
        </arg>
        <arg nullable="True" type="integer64" var="$NetworkVirtualApplianceConnectionParameters.properties.tunnelIdentifier" options="tunnel-identifier" hide="True" group="Properties">
          <help short="Unique identifier for the connection."/>
          <format maximum="4294967295" minimum="0"/>
        </arg>
      </argGroup>
      <argGroup name="RoutingConfiguration">
        <arg nullable="True" type="object" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.associatedRouteTable" options="associated-route-table" group="RoutingConfiguration" cls="SubResource_update">
          <help short="The resource id RouteTable associated with this RoutingConfiguration."/>
          <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
            <help short="Resource ID."/>
          </arg>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.inboundRouteMap" options="inbound-route-map" group="RoutingConfiguration">
          <help short="The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes."/>
        </arg>
        <arg nullable="True" type="@SubResource_update" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.outboundRouteMap" options="outbound-route-map" group="RoutingConfiguration">
          <help short="The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes."/>
        </arg>
        <arg nullable="True" type="object" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes" options="vnet-routes" hide="True" group="RoutingConfiguration">
          <help short="List of routes that control routing from VirtualHub into a virtual network connection."/>
          <default value="None"/>
          <arg nullable="True" type="array<object>" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes" options="static-routes">
            <help short="List of all Static Routes."/>
            <item nullable="True" type="object">
              <arg nullable="True" type="array<string>" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes" options="address-prefixes">
                <help short="List of all address prefixes."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="string" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name" options="name">
                <help short="The name of the StaticRoute that is unique within a VnetRoute."/>
              </arg>
              <arg nullable="True" type="string" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress" options="next-hop-ip-address">
                <help short="The ip address of the next hop."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="object" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig" options="static-routes-config">
            <help short="Configuration for static routes on this HubVnetConnection."/>
            <arg nullable="True" type="string" var="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria" options="vnet-local-route-override-criteria">
              <help short="Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke."/>
              <enum>
                <item name="Contains" value="&quot;Contains&quot;"/>
                <item name="Equal" value="&quot;Equal&quot;"/>
              </enum>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="NetworkVirtualApplianceConnections_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/networkVirtualApplianceConnections/{connectionName}">
          <request method="get">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True"/>
              <param type="string" name="networkVirtualApplianceName" arg="$Path.networkVirtualApplianceName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NetworkVirtualApplianceConnection_read">
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}/networkVirtualApplianceConnections/{}"/>
                  </prop>
                  <prop type="object" name="properties">
                    <prop type="integer64" name="asn">
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                    <prop type="array<string>" name="bgpPeerAddress">
                      <item type="string"/>
                    </prop>
                    <prop type="boolean" name="enableInternetSecurity"/>
                    <prop type="string" name="name"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="routingConfiguration">
                      <prop type="object" name="associatedRouteTable" cls="SubResource_read">
                        <prop type="string" name="id"/>
                      </prop>
                      <prop type="@SubResource_read" name="inboundRouteMap"/>
                      <prop type="@SubResource_read" name="outboundRouteMap"/>
                      <prop type="object" name="propagatedRouteTables">
                        <prop type="array<@SubResource_read>" name="ids">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<string>" name="labels">
                          <item type="string"/>
                        </prop>
                      </prop>
                      <prop type="object" name="vnetRoutes">
                        <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                          <item type="@SubResource_read"/>
                        </prop>
                        <prop type="array<object>" name="staticRoutes">
                          <item type="object">
                            <prop type="array<string>" name="addressPrefixes">
                              <item type="string"/>
                            </prop>
                            <prop type="string" name="name"/>
                            <prop type="string" name="nextHopIpAddress"/>
                          </item>
                        </prop>
                        <prop type="object" name="staticRoutesConfig">
                          <prop readOnly="True" type="boolean" name="propagateStaticRoutes"/>
                          <prop type="string" name="vnetLocalRouteOverrideCriteria">
                            <enum>
                              <item value="&quot;Contains&quot;"/>
                              <item value="&quot;Equal&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                      </prop>
                    </prop>
                    <prop type="integer64" name="tunnelIdentifier">
                      <format maximum="4294967295" minimum="0"/>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="NetworkVirtualApplianceConnectionParameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$NetworkVirtualApplianceConnectionParameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/networkVirtualAppliances/{}/networkVirtualApplianceConnections/{}"/>
              </prop>
              <prop type="object" name="properties">
                <prop type="integer64" name="asn" arg="$NetworkVirtualApplianceConnectionParameters.properties.asn">
                  <format maximum="4294967295" minimum="0"/>
                </prop>
                <prop type="array<string>" name="bgpPeerAddress" arg="$NetworkVirtualApplianceConnectionParameters.properties.bgpPeerAddress">
                  <item type="string"/>
                </prop>
                <prop type="boolean" name="enableInternetSecurity" arg="$NetworkVirtualApplianceConnectionParameters.properties.enableInternetSecurity"/>
                <prop type="string" name="name" arg="$Path.connectionName"/>
                <prop type="object" name="routingConfiguration">
                  <prop type="object" name="associatedRouteTable" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.associatedRouteTable" cls="SubResource_update">
                    <prop type="string" name="id" arg="@SubResource_update.id"/>
                  </prop>
                  <prop type="@SubResource_update" name="inboundRouteMap" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.inboundRouteMap"/>
                  <prop type="@SubResource_update" name="outboundRouteMap" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.outboundRouteMap"/>
                  <prop type="object" name="propagatedRouteTables">
                    <prop type="array<@SubResource_update>" name="ids" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.propagatedRouteTables.ids">
                      <item type="@SubResource_update"/>
                    </prop>
                    <prop type="array<string>" name="labels" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.propagatedRouteTables.labels">
                      <item type="string"/>
                    </prop>
                  </prop>
                  <prop type="object" name="vnetRoutes" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes">
                    <prop type="array<object>" name="staticRoutes" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes">
                      <item type="object">
                        <prop type="array<string>" name="addressPrefixes" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes">
                          <item type="string"/>
                        </prop>
                        <prop type="string" name="name" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].name"/>
                        <prop type="string" name="nextHopIpAddress" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress"/>
                      </item>
                    </prop>
                    <prop type="object" name="staticRoutesConfig" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig">
                      <prop type="string" name="vnetLocalRouteOverrideCriteria" arg="$NetworkVirtualApplianceConnectionParameters.properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria">
                        <enum>
                          <item value="&quot;Contains&quot;"/>
                          <item value="&quot;Equal&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                  </prop>
                </prop>
                <prop type="integer64" name="tunnelIdentifier" arg="$NetworkVirtualApplianceConnectionParameters.properties.tunnelIdentifier">
                  <format maximum="4294967295" minimum="0"/>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="NetworkVirtualApplianceConnections_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkVirtualAppliances/{networkVirtualApplianceName}/networkVirtualApplianceConnections/{connectionName}">
          <request method="put">
            <path>
              <param type="string" name="connectionName" arg="$Path.connectionName" required="True">
                <format pattern="^[A-Za-z0-9_]+"/>
              </param>
              <param type="string" name="networkVirtualApplianceName" arg="$Path.networkVirtualApplianceName" required="True">
                <format pattern="^[A-Za-z0-9_]+"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-06-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NetworkVirtualApplianceConnection_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
