<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
  <commandGroup name="network express-route gateway">
    <command name="show" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.expressRouteGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute gateway name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteGateways_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}">
          <request method="get">
            <path>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowNonVirtualWanTraffic"/>
                    <prop type="object" name="autoScaleConfiguration">
                      <prop type="object" name="bounds">
                        <prop type="integer" name="max"/>
                        <prop type="integer" name="min"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="expressRouteConnections">
                      <item type="object">
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="authorizationKey"/>
                          <prop type="boolean" name="enableInternetSecurity"/>
                          <prop type="boolean" name="enablePrivateLinkFastPath"/>
                          <prop type="object" name="expressRouteCircuitPeering" required="True">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="boolean" name="expressRouteGatewayBypass"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="routingConfiguration">
                            <prop type="object" name="associatedRouteTable" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="@SubResource_read" name="inboundRouteMap"/>
                            <prop type="@SubResource_read" name="outboundRouteMap"/>
                            <prop type="object" name="propagatedRouteTables">
                              <prop type="array<@SubResource_read>" name="ids">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="array<string>" name="labels">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="object" name="vnetRoutes">
                              <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="array<object>" name="staticRoutes">
                                <item type="object">
                                  <prop type="array<string>" name="addressPrefixes">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="string" name="name"/>
                                  <prop type="string" name="nextHopIpAddress"/>
                                </item>
                              </prop>
                              <prop type="object" name="staticRoutesConfig">
                                <prop readOnly="True" type="boolean" name="propagateStaticRoutes"/>
                                <prop type="string" name="vnetLocalRouteOverrideCriteria">
                                  <enum>
                                    <item value="&quot;Contains&quot;"/>
                                    <item value="&quot;Equal&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="integer" name="routingWeight"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="virtualHub" required="True">
                      <prop type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.expressRouteGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute gateway name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="ExpressRouteGateways_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}">
          <request method="delete">
            <path>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.expressRouteGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute gateway name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$putExpressRouteGatewayParameters.location" options="location l" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg type="boolean" var="$putExpressRouteGatewayParameters.properties.allowNonVirtualWanTraffic" options="allow-non-vwan-traffic" group="">
          <help short="Configures this gateway to accept traffic from non Virtual WAN networks."/>
        </arg>
        <arg type="string" var="$putExpressRouteGatewayParameters.properties.virtualHub.id" options="virtual-hub" group="">
          <help short="Name or ID of the virtual hub to associate with the gateway."/>
        </arg>
        <arg type="object" var="$putExpressRouteGatewayParameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Autoscale">
        <arg type="integer" var="$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.max" options="max-val" group="Autoscale">
          <help short="Maximum number of scale units deployed for gateway."/>
        </arg>
        <arg type="integer" var="$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.min" options="min-val" group="Autoscale">
          <help short="Minimum number of scale units deployed for gateway.  Default: 2."/>
          <default value="2"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections" options="express-route-connections" hide="True" group="Properties">
          <help short="List of ExpressRoute connections to the ExpressRoute gateway."/>
          <item type="object">
            <arg type="ResourceId" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
            </arg>
            <arg type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].name" options="name" required="True">
              <help short="The name of the resource."/>
            </arg>
            <arg type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.authorizationKey" options="authorization-key" group="Properties">
              <help short="Authorization key to establish the connection."/>
            </arg>
            <arg type="boolean" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enableInternetSecurity" options="enable-internet-security" group="Properties">
              <help short="Enable internet security."/>
            </arg>
            <arg type="boolean" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enablePrivateLinkFastPath" options="enable-private-link-fast-path" group="Properties">
              <help short="Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled."/>
            </arg>
            <arg type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering" options="express-route-circuit-peering" group="Properties">
              <help short="The ExpressRoute circuit peering."/>
              <arg type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering.id" options="id">
                <help short="The ID of the ExpressRoute circuit peering."/>
              </arg>
            </arg>
            <arg type="boolean" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteGatewayBypass" options="express-route-gateway-bypass" group="Properties">
              <help short="Enable FastPath to vWan Firewall hub."/>
            </arg>
            <arg type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration" options="routing-configuration" group="Properties">
              <help short="The Routing Configuration indicating the associated and propagated route tables on this connection."/>
              <arg type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.associatedRouteTable" options="associated-route-table" cls="SubResource_create">
                <help short="The resource id RouteTable associated with this RoutingConfiguration."/>
                <arg type="string" var="@SubResource_create.id" options="id">
                  <help short="Resource ID."/>
                </arg>
              </arg>
              <arg type="@SubResource_create" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.inboundRouteMap" options="inbound-route-map">
                <help short="The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes."/>
              </arg>
              <arg type="@SubResource_create" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.outboundRouteMap" options="outbound-route-map">
                <help short="The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes."/>
              </arg>
              <arg type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables" options="propagated-route-tables">
                <help short="The list of RouteTables to advertise the routes to."/>
                <arg type="array<@SubResource_create>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.ids" options="ids">
                  <help short="The list of resource ids of all the RouteTables."/>
                  <item type="@SubResource_create"/>
                </arg>
                <arg type="array<string>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.labels" options="labels">
                  <help short="The list of labels."/>
                  <item type="string"/>
                </arg>
              </arg>
              <arg type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes" options="vnet-routes">
                <help short="List of routes that control routing from VirtualHub into a virtual network connection."/>
                <arg type="array<object>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes" options="static-routes">
                  <help short="List of all Static Routes."/>
                  <item type="object">
                    <arg type="array<string>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes" options="address-prefixes">
                      <help short="List of all address prefixes."/>
                      <item type="string"/>
                    </arg>
                    <arg type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name" options="name">
                      <help short="The name of the StaticRoute that is unique within a VnetRoute."/>
                    </arg>
                    <arg type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress" options="next-hop-ip-address">
                      <help short="The ip address of the next hop."/>
                    </arg>
                  </item>
                </arg>
                <arg type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig" options="static-routes-config">
                  <help short="Configuration for static routes on this HubVnetConnection."/>
                  <arg type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria" options="vnet-local-route-override-criteria">
                    <help short="Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke."/>
                    <enum>
                      <item name="Contains" value="&quot;Contains&quot;"/>
                      <item name="Equal" value="&quot;Equal&quot;"/>
                    </enum>
                  </arg>
                </arg>
              </arg>
            </arg>
            <arg type="integer" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingWeight" options="routing-weight" group="Properties">
              <help short="The routing weight associated to the connection."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="PutExpressRouteGatewayParameters">
        <arg type="ResourceId" var="$putExpressRouteGatewayParameters.id" options="id" hide="True" group="PutExpressRouteGatewayParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"/>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteGateways_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}">
          <request method="put">
            <path>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="putExpressRouteGatewayParameters" required="True" clientFlatten="True">
                  <prop type="ResourceId" name="id" arg="$putExpressRouteGatewayParameters.id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$putExpressRouteGatewayParameters.location"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowNonVirtualWanTraffic" arg="$putExpressRouteGatewayParameters.properties.allowNonVirtualWanTraffic"/>
                    <prop type="object" name="autoScaleConfiguration">
                      <prop type="object" name="bounds">
                        <prop type="integer" name="max" arg="$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.max"/>
                        <prop type="integer" name="min" arg="$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.min"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="expressRouteConnections" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections">
                      <item type="object">
                        <prop type="ResourceId" name="id" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
                        </prop>
                        <prop type="string" name="name" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].name" required="True"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="authorizationKey" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.authorizationKey"/>
                          <prop type="boolean" name="enableInternetSecurity" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enableInternetSecurity"/>
                          <prop type="boolean" name="enablePrivateLinkFastPath" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enablePrivateLinkFastPath"/>
                          <prop type="object" name="expressRouteCircuitPeering" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering" required="True">
                            <prop type="string" name="id" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering.id"/>
                          </prop>
                          <prop type="boolean" name="expressRouteGatewayBypass" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteGatewayBypass"/>
                          <prop type="object" name="routingConfiguration" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration">
                            <prop type="object" name="associatedRouteTable" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.associatedRouteTable" cls="SubResource_create">
                              <prop type="string" name="id" arg="@SubResource_create.id"/>
                            </prop>
                            <prop type="@SubResource_create" name="inboundRouteMap" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.inboundRouteMap"/>
                            <prop type="@SubResource_create" name="outboundRouteMap" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.outboundRouteMap"/>
                            <prop type="object" name="propagatedRouteTables" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables">
                              <prop type="array<@SubResource_create>" name="ids" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.ids">
                                <item type="@SubResource_create"/>
                              </prop>
                              <prop type="array<string>" name="labels" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.labels">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="object" name="vnetRoutes" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes">
                              <prop type="array<object>" name="staticRoutes" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes">
                                <item type="object">
                                  <prop type="array<string>" name="addressPrefixes" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="string" name="name" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name"/>
                                  <prop type="string" name="nextHopIpAddress" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress"/>
                                </item>
                              </prop>
                              <prop type="object" name="staticRoutesConfig" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig">
                                <prop type="string" name="vnetLocalRouteOverrideCriteria" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria">
                                  <enum>
                                    <item value="&quot;Contains&quot;"/>
                                    <item value="&quot;Equal&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="integer" name="routingWeight" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingWeight"/>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="virtualHub" required="True">
                      <prop type="string" name="id" arg="$putExpressRouteGatewayParameters.properties.virtualHub.id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$putExpressRouteGatewayParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowNonVirtualWanTraffic"/>
                    <prop type="object" name="autoScaleConfiguration">
                      <prop type="object" name="bounds">
                        <prop type="integer" name="max"/>
                        <prop type="integer" name="min"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="expressRouteConnections">
                      <item type="object">
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="authorizationKey"/>
                          <prop type="boolean" name="enableInternetSecurity"/>
                          <prop type="boolean" name="enablePrivateLinkFastPath"/>
                          <prop type="object" name="expressRouteCircuitPeering" required="True">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="boolean" name="expressRouteGatewayBypass"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="routingConfiguration">
                            <prop type="object" name="associatedRouteTable" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="@SubResource_read" name="inboundRouteMap"/>
                            <prop type="@SubResource_read" name="outboundRouteMap"/>
                            <prop type="object" name="propagatedRouteTables">
                              <prop type="array<@SubResource_read>" name="ids">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="array<string>" name="labels">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="object" name="vnetRoutes">
                              <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="array<object>" name="staticRoutes">
                                <item type="object">
                                  <prop type="array<string>" name="addressPrefixes">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="string" name="name"/>
                                  <prop type="string" name="nextHopIpAddress"/>
                                </item>
                              </prop>
                              <prop type="object" name="staticRoutesConfig">
                                <prop readOnly="True" type="boolean" name="propagateStaticRoutes"/>
                                <prop type="string" name="vnetLocalRouteOverrideCriteria">
                                  <enum>
                                    <item value="&quot;Contains&quot;"/>
                                    <item value="&quot;Equal&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="integer" name="routingWeight"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="virtualHub" required="True">
                      <prop type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}" version="2023-09-01" swagger="mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.expressRouteGatewayName" options="name n" required="True" group="" idPart="name">
          <help short="ExpressRoute gateway name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="ResourceLocation" var="$putExpressRouteGatewayParameters.location" options="location l" group="">
          <help short="Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."/>
        </arg>
        <arg nullable="True" type="boolean" var="$putExpressRouteGatewayParameters.properties.allowNonVirtualWanTraffic" options="allow-non-vwan-traffic" group="">
          <help short="Configures this gateway to accept traffic from non Virtual WAN networks."/>
        </arg>
        <arg nullable="True" type="string" var="$putExpressRouteGatewayParameters.properties.virtualHub.id" options="virtual-hub" group="">
          <help short="Name or ID of the virtual hub to associate with the gateway."/>
        </arg>
        <arg nullable="True" type="object" var="$putExpressRouteGatewayParameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]. Use &quot;&quot; to clear existing tags."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Autoscale">
        <arg nullable="True" type="integer" var="$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.max" options="max-val" group="Autoscale">
          <help short="Maximum number of scale units deployed for gateway."/>
        </arg>
        <arg nullable="True" type="integer" var="$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.min" options="min-val" group="Autoscale">
          <help short="Minimum number of scale units deployed for gateway.  Default: 2."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections" options="express-route-connections" hide="True" group="Properties">
          <help short="List of ExpressRoute connections to the ExpressRoute gateway."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="ResourceId" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].id" options="id">
              <help short="Resource ID."/>
              <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
            </arg>
            <arg type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].name" options="name">
              <help short="The name of the resource."/>
            </arg>
            <arg nullable="True" type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.authorizationKey" options="authorization-key" group="Properties">
              <help short="Authorization key to establish the connection."/>
            </arg>
            <arg nullable="True" type="boolean" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enableInternetSecurity" options="enable-internet-security" group="Properties">
              <help short="Enable internet security."/>
            </arg>
            <arg nullable="True" type="boolean" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enablePrivateLinkFastPath" options="enable-private-link-fast-path" group="Properties">
              <help short="Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled."/>
            </arg>
            <arg type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering" options="express-route-circuit-peering" group="Properties">
              <help short="The ExpressRoute circuit peering."/>
              <arg nullable="True" type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering.id" options="id">
                <help short="The ID of the ExpressRoute circuit peering."/>
              </arg>
            </arg>
            <arg nullable="True" type="boolean" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteGatewayBypass" options="express-route-gateway-bypass" group="Properties">
              <help short="Enable FastPath to vWan Firewall hub."/>
            </arg>
            <arg nullable="True" type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration" options="routing-configuration" group="Properties">
              <help short="The Routing Configuration indicating the associated and propagated route tables on this connection."/>
              <arg nullable="True" type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.associatedRouteTable" options="associated-route-table" cls="SubResource_update">
                <help short="The resource id RouteTable associated with this RoutingConfiguration."/>
                <arg nullable="True" type="string" var="@SubResource_update.id" options="id">
                  <help short="Resource ID."/>
                </arg>
              </arg>
              <arg nullable="True" type="@SubResource_update" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.inboundRouteMap" options="inbound-route-map">
                <help short="The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes."/>
              </arg>
              <arg nullable="True" type="@SubResource_update" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.outboundRouteMap" options="outbound-route-map">
                <help short="The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes."/>
              </arg>
              <arg nullable="True" type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables" options="propagated-route-tables">
                <help short="The list of RouteTables to advertise the routes to."/>
                <arg nullable="True" type="array<@SubResource_update>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.ids" options="ids">
                  <help short="The list of resource ids of all the RouteTables."/>
                  <item nullable="True" type="@SubResource_update"/>
                </arg>
                <arg nullable="True" type="array<string>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.labels" options="labels">
                  <help short="The list of labels."/>
                  <item nullable="True" type="string"/>
                </arg>
              </arg>
              <arg nullable="True" type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes" options="vnet-routes">
                <help short="List of routes that control routing from VirtualHub into a virtual network connection."/>
                <arg nullable="True" type="array<object>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes" options="static-routes">
                  <help short="List of all Static Routes."/>
                  <item nullable="True" type="object">
                    <arg nullable="True" type="array<string>" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes" options="address-prefixes">
                      <help short="List of all address prefixes."/>
                      <item nullable="True" type="string"/>
                    </arg>
                    <arg nullable="True" type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name" options="name">
                      <help short="The name of the StaticRoute that is unique within a VnetRoute."/>
                    </arg>
                    <arg nullable="True" type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress" options="next-hop-ip-address">
                      <help short="The ip address of the next hop."/>
                    </arg>
                  </item>
                </arg>
                <arg nullable="True" type="object" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig" options="static-routes-config">
                  <help short="Configuration for static routes on this HubVnetConnection."/>
                  <arg nullable="True" type="string" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria" options="vnet-local-route-override-criteria">
                    <help short="Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke."/>
                    <enum>
                      <item name="Contains" value="&quot;Contains&quot;"/>
                      <item name="Equal" value="&quot;Equal&quot;"/>
                    </enum>
                  </arg>
                </arg>
              </arg>
            </arg>
            <arg nullable="True" type="integer" var="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingWeight" options="routing-weight" group="Properties">
              <help short="The routing weight associated to the connection."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <argGroup name="PutExpressRouteGatewayParameters">
        <arg nullable="True" type="ResourceId" var="$putExpressRouteGatewayParameters.id" options="id" hide="True" group="PutExpressRouteGatewayParameters">
          <help short="Resource ID."/>
          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"/>
        </arg>
      </argGroup>
      <operation operationId="ExpressRouteGateways_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}">
          <request method="get">
            <path>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="ExpressRouteGateway_read">
                  <prop readOnly="True" type="string" name="etag"/>
                  <prop type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="allowNonVirtualWanTraffic"/>
                    <prop type="object" name="autoScaleConfiguration">
                      <prop type="object" name="bounds">
                        <prop type="integer" name="max"/>
                        <prop type="integer" name="min"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="expressRouteConnections">
                      <item type="object">
                        <prop type="ResourceId" name="id">
                          <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="object" name="properties" clientFlatten="True">
                          <prop type="string" name="authorizationKey"/>
                          <prop type="boolean" name="enableInternetSecurity"/>
                          <prop type="boolean" name="enablePrivateLinkFastPath"/>
                          <prop type="object" name="expressRouteCircuitPeering" required="True">
                            <prop type="string" name="id"/>
                          </prop>
                          <prop type="boolean" name="expressRouteGatewayBypass"/>
                          <prop readOnly="True" type="string" name="provisioningState">
                            <enum>
                              <item value="&quot;Deleting&quot;"/>
                              <item value="&quot;Failed&quot;"/>
                              <item value="&quot;Succeeded&quot;"/>
                              <item value="&quot;Updating&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="routingConfiguration">
                            <prop type="object" name="associatedRouteTable" cls="SubResource_read">
                              <prop type="string" name="id"/>
                            </prop>
                            <prop type="@SubResource_read" name="inboundRouteMap"/>
                            <prop type="@SubResource_read" name="outboundRouteMap"/>
                            <prop type="object" name="propagatedRouteTables">
                              <prop type="array<@SubResource_read>" name="ids">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="array<string>" name="labels">
                                <item type="string"/>
                              </prop>
                            </prop>
                            <prop type="object" name="vnetRoutes">
                              <prop readOnly="True" type="array<@SubResource_read>" name="bgpConnections">
                                <item type="@SubResource_read"/>
                              </prop>
                              <prop type="array<object>" name="staticRoutes">
                                <item type="object">
                                  <prop type="array<string>" name="addressPrefixes">
                                    <item type="string"/>
                                  </prop>
                                  <prop type="string" name="name"/>
                                  <prop type="string" name="nextHopIpAddress"/>
                                </item>
                              </prop>
                              <prop type="object" name="staticRoutesConfig">
                                <prop readOnly="True" type="boolean" name="propagateStaticRoutes"/>
                                <prop type="string" name="vnetLocalRouteOverrideCriteria">
                                  <enum>
                                    <item value="&quot;Contains&quot;"/>
                                    <item value="&quot;Equal&quot;"/>
                                  </enum>
                                </prop>
                              </prop>
                            </prop>
                          </prop>
                          <prop type="integer" name="routingWeight"/>
                        </prop>
                      </item>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="virtualHub" required="True">
                      <prop type="string" name="id"/>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="putExpressRouteGatewayParameters" required="True" clientFlatten="True">
              <prop type="ResourceId" name="id" arg="$putExpressRouteGatewayParameters.id">
                <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"/>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$putExpressRouteGatewayParameters.location"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="allowNonVirtualWanTraffic" arg="$putExpressRouteGatewayParameters.properties.allowNonVirtualWanTraffic"/>
                <prop type="object" name="autoScaleConfiguration">
                  <prop type="object" name="bounds">
                    <prop type="integer" name="max" arg="$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.max"/>
                    <prop type="integer" name="min" arg="$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.min"/>
                  </prop>
                </prop>
                <prop type="array<object>" name="expressRouteConnections" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections">
                  <item type="object">
                    <prop type="ResourceId" name="id" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"/>
                    </prop>
                    <prop type="string" name="name" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].name" required="True"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="string" name="authorizationKey" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.authorizationKey"/>
                      <prop type="boolean" name="enableInternetSecurity" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enableInternetSecurity"/>
                      <prop type="boolean" name="enablePrivateLinkFastPath" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enablePrivateLinkFastPath"/>
                      <prop type="object" name="expressRouteCircuitPeering" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering" required="True">
                        <prop type="string" name="id" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering.id"/>
                      </prop>
                      <prop type="boolean" name="expressRouteGatewayBypass" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteGatewayBypass"/>
                      <prop type="object" name="routingConfiguration" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration">
                        <prop type="object" name="associatedRouteTable" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.associatedRouteTable" cls="SubResource_update">
                          <prop type="string" name="id" arg="@SubResource_update.id"/>
                        </prop>
                        <prop type="@SubResource_update" name="inboundRouteMap" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.inboundRouteMap"/>
                        <prop type="@SubResource_update" name="outboundRouteMap" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.outboundRouteMap"/>
                        <prop type="object" name="propagatedRouteTables" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables">
                          <prop type="array<@SubResource_update>" name="ids" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.ids">
                            <item type="@SubResource_update"/>
                          </prop>
                          <prop type="array<string>" name="labels" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.labels">
                            <item type="string"/>
                          </prop>
                        </prop>
                        <prop type="object" name="vnetRoutes" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes">
                          <prop type="array<object>" name="staticRoutes" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes">
                            <item type="object">
                              <prop type="array<string>" name="addressPrefixes" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes">
                                <item type="string"/>
                              </prop>
                              <prop type="string" name="name" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name"/>
                              <prop type="string" name="nextHopIpAddress" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress"/>
                            </item>
                          </prop>
                          <prop type="object" name="staticRoutesConfig" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig">
                            <prop type="string" name="vnetLocalRouteOverrideCriteria" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria">
                              <enum>
                                <item value="&quot;Contains&quot;"/>
                                <item value="&quot;Equal&quot;"/>
                              </enum>
                            </prop>
                          </prop>
                        </prop>
                      </prop>
                      <prop type="integer" name="routingWeight" arg="$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingWeight"/>
                    </prop>
                  </item>
                </prop>
                <prop type="object" name="virtualHub" required="True">
                  <prop type="string" name="id" arg="$putExpressRouteGatewayParameters.properties.virtualHub.id"/>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$putExpressRouteGatewayParameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="ExpressRouteGateways_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}">
          <request method="put">
            <path>
              <param type="string" name="expressRouteGatewayName" arg="$Path.expressRouteGatewayName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-09-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@ExpressRouteGateway_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
