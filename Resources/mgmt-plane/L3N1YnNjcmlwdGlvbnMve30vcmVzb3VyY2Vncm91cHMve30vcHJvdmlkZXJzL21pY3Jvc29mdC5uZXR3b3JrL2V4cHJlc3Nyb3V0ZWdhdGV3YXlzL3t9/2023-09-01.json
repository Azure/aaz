{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}", "version": "2023-09-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="}], "commandGroups": [{"name": "network express-route gateway", "commands": [{"name": "show", "version": "2023-09-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}", "version": "2023-09-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.expressRouteGatewayName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "ExpressRoute gateway name."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "ExpressRouteGateways_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "expressRouteGatewayName", "arg": "$Path.expressRouteGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-09-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "allowNonVirtualWanTraffic"}, {"type": "object", "name": "autoScaleConfiguration", "props": [{"type": "object", "name": "bounds", "props": [{"type": "integer", "name": "max"}, {"type": "integer", "name": "min"}]}]}, {"type": "array<object>", "name": "expressRouteConnections", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"}}, {"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "authorizationKey"}, {"type": "boolean", "name": "enableInternetSecurity"}, {"type": "boolean", "name": "enablePrivateLinkFastPath"}, {"type": "object", "name": "expressRouteCircuitPeering", "required": true, "props": [{"type": "string", "name": "id"}]}, {"type": "boolean", "name": "expressRouteGatewayBypass"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "routingConfiguration", "props": [{"type": "object", "name": "associatedRouteTable", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}, {"type": "@SubResource_read", "name": "inboundRouteMap"}, {"type": "@SubResource_read", "name": "outboundRouteMap"}, {"type": "object", "name": "propagatedRouteTables", "props": [{"type": "array<@SubResource_read>", "name": "ids", "item": {"type": "@SubResource_read"}}, {"type": "array<string>", "name": "labels", "item": {"type": "string"}}]}, {"type": "object", "name": "vnetRoutes", "props": [{"readOnly": true, "type": "array<@SubResource_read>", "name": "bgpConnections", "item": {"type": "@SubResource_read"}}, {"type": "array<object>", "name": "staticRoutes", "item": {"type": "object", "props": [{"type": "array<string>", "name": "addressPrefixes", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "string", "name": "nextHopIpAddress"}]}}, {"type": "object", "name": "staticRoutesConfig", "props": [{"readOnly": true, "type": "boolean", "name": "propagateStaticRoutes"}, {"type": "string", "name": "vnetLocalRouteOverrideCriteria", "enum": {"items": [{"value": "Contains"}, {"value": "Equal"}]}}]}]}]}, {"type": "integer", "name": "routingWeight"}], "clientFlatten": true}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "virtualHub", "required": true, "props": [{"type": "string", "name": "id"}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2023-09-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}", "version": "2023-09-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.expressRouteGatewayName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "ExpressRoute gateway name."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"longRunning": {"finalStateVia": "location"}, "operationId": "ExpressRouteGateways_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "expressRouteGatewayName", "arg": "$Path.expressRouteGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-09-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "confirmation": ""}, {"name": "create", "version": "2023-09-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}", "version": "2023-09-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.expressRouteGatewayName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "ExpressRoute gateway name."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"type": "ResourceLocation", "var": "$putExpressRouteGatewayParameters.location", "options": ["l", "location"], "group": "", "help": {"short": "Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."}}, {"type": "boolean", "var": "$putExpressRouteGatewayParameters.properties.allowNonVirtualWanTraffic", "options": ["allow-non-vwan-traffic"], "group": "", "help": {"short": "Configures this gateway to accept traffic from non Virtual WAN networks."}}, {"type": "string", "var": "$putExpressRouteGatewayParameters.properties.virtualHub.id", "options": ["virtual-hub"], "group": "", "help": {"short": "Name or ID of the virtual hub to associate with the gateway."}}, {"type": "object", "var": "$putExpressRouteGatewayParameters.tags", "options": ["tags"], "group": "", "help": {"short": "Space-separated tags: key[=value] [key[=value] ...]. Use \"\" to clear existing tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Autoscale", "args": [{"type": "integer", "var": "$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.max", "options": ["max-val"], "group": "Autoscale", "help": {"short": "Maximum number of scale units deployed for gateway."}}, {"type": "integer", "var": "$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.min", "options": ["min-val"], "group": "Autoscale", "help": {"short": "Minimum number of scale units deployed for gateway.  Default: 2."}, "default": {"value": 2}}]}, {"name": "Properties", "args": [{"type": "array<object>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections", "options": ["express-route-connections"], "hide": true, "group": "Properties", "help": {"short": "List of ExpressRoute connections to the ExpressRoute gateway."}, "item": {"type": "object", "args": [{"type": "ResourceId", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"}}, {"type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].name", "options": ["name"], "required": true, "help": {"short": "The name of the resource."}}, {"type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.authorizationKey", "options": ["authorization-key"], "group": "Properties", "help": {"short": "Authorization key to establish the connection."}}, {"type": "boolean", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enableInternetSecurity", "options": ["enable-internet-security"], "group": "Properties", "help": {"short": "Enable internet security."}}, {"type": "boolean", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enablePrivateLinkFastPath", "options": ["enable-private-link-fast-path"], "group": "Properties", "help": {"short": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled."}}, {"type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering", "options": ["express-route-circuit-peering"], "group": "Properties", "help": {"short": "The ExpressRoute circuit peering."}, "args": [{"type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering.id", "options": ["id"], "help": {"short": "The ID of the ExpressRoute circuit peering."}}]}, {"type": "boolean", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteGatewayBypass", "options": ["express-route-gateway-bypass"], "group": "Properties", "help": {"short": "Enable FastPath to vWan Firewall hub."}}, {"type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration", "options": ["routing-configuration"], "group": "Properties", "help": {"short": "The Routing Configuration indicating the associated and propagated route tables on this connection."}, "args": [{"type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.associatedRouteTable", "options": ["associated-route-table"], "help": {"short": "The resource id RouteTable associated with this RoutingConfiguration."}, "args": [{"type": "string", "var": "@SubResource_create.id", "options": ["id"], "help": {"short": "Resource ID."}}], "cls": "SubResource_create"}, {"type": "@SubResource_create", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.inboundRouteMap", "options": ["inbound-route-map"], "help": {"short": "The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes."}}, {"type": "@SubResource_create", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.outboundRouteMap", "options": ["outbound-route-map"], "help": {"short": "The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes."}}, {"type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables", "options": ["propagated-route-tables"], "help": {"short": "The list of RouteTables to advertise the routes to."}, "args": [{"type": "array<@SubResource_create>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.ids", "options": ["ids"], "help": {"short": "The list of resource ids of all the RouteTables."}, "item": {"type": "@SubResource_create"}}, {"type": "array<string>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.labels", "options": ["labels"], "help": {"short": "The list of labels."}, "item": {"type": "string"}}]}, {"type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes", "options": ["vnet-routes"], "help": {"short": "List of routes that control routing from VirtualHub into a virtual network connection."}, "args": [{"type": "array<object>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes", "options": ["static-routes"], "help": {"short": "List of all Static Routes."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes", "options": ["address-prefixes"], "help": {"short": "List of all address prefixes."}, "item": {"type": "string"}}, {"type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name", "options": ["name"], "help": {"short": "The name of the StaticRoute that is unique within a VnetRoute."}}, {"type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress", "options": ["next-hop-ip-address"], "help": {"short": "The ip address of the next hop."}}]}}, {"type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig", "options": ["static-routes-config"], "help": {"short": "Configuration for static routes on this HubVnetConnection."}, "args": [{"type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria", "options": ["vnet-local-route-override-criteria"], "help": {"short": "Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke."}, "enum": {"items": [{"name": "Contains", "value": "Contains"}, {"name": "Equal", "value": "Equal"}]}}]}]}]}, {"type": "integer", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingWeight", "options": ["routing-weight"], "group": "Properties", "help": {"short": "The routing weight associated to the connection."}}]}}]}, {"name": "PutExpressRouteGatewayParameters", "args": [{"type": "ResourceId", "var": "$putExpressRouteGatewayParameters.id", "options": ["id"], "hide": true, "group": "PutExpressRouteGatewayParameters", "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"}}]}], "operations": [{"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "ExpressRouteGateways_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "expressRouteGatewayName", "arg": "$Path.expressRouteGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-09-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"schema": {"type": "object", "name": "putExpressRouteGatewayParameters", "required": true, "props": [{"type": "ResourceId", "name": "id", "arg": "$putExpressRouteGatewayParameters.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "$putExpressRouteGatewayParameters.location"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "allowNonVirtualWanTraffic", "arg": "$putExpressRouteGatewayParameters.properties.allowNonVirtualWanTraffic"}, {"type": "object", "name": "autoScaleConfiguration", "props": [{"type": "object", "name": "bounds", "props": [{"type": "integer", "name": "max", "arg": "$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.max"}, {"type": "integer", "name": "min", "arg": "$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.min"}]}]}, {"type": "array<object>", "name": "expressRouteConnections", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"}}, {"type": "string", "name": "name", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "authorizationKey", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.authorizationKey"}, {"type": "boolean", "name": "enableInternetSecurity", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enableInternetSecurity"}, {"type": "boolean", "name": "enablePrivateLinkFastPath", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enablePrivateLinkFastPath"}, {"type": "object", "name": "expressRouteCircuitPeering", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering", "required": true, "props": [{"type": "string", "name": "id", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering.id"}]}, {"type": "boolean", "name": "expressRouteGatewayBypass", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteGatewayBypass"}, {"type": "object", "name": "routingConfiguration", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration", "props": [{"type": "object", "name": "associatedRouteTable", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.associatedRouteTable", "props": [{"type": "string", "name": "id", "arg": "@SubResource_create.id"}], "cls": "SubResource_create"}, {"type": "@SubResource_create", "name": "inboundRouteMap", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.inboundRouteMap"}, {"type": "@SubResource_create", "name": "outboundRouteMap", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.outboundRouteMap"}, {"type": "object", "name": "propagatedRouteTables", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables", "props": [{"type": "array<@SubResource_create>", "name": "ids", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.ids", "item": {"type": "@SubResource_create"}}, {"type": "array<string>", "name": "labels", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.labels", "item": {"type": "string"}}]}, {"type": "object", "name": "vnetRoutes", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes", "props": [{"type": "array<object>", "name": "staticRoutes", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes", "item": {"type": "object", "props": [{"type": "array<string>", "name": "addressPrefixes", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes", "item": {"type": "string"}}, {"type": "string", "name": "name", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name"}, {"type": "string", "name": "nextHopIpAddress", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress"}]}}, {"type": "object", "name": "staticRoutesConfig", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig", "props": [{"type": "string", "name": "vnetLocalRouteOverrideCriteria", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria", "enum": {"items": [{"value": "Contains"}, {"value": "Equal"}]}}]}]}]}, {"type": "integer", "name": "routingWeight", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingWeight"}], "clientFlatten": true}]}}, {"type": "object", "name": "virtualHub", "required": true, "props": [{"type": "string", "name": "id", "arg": "$putExpressRouteGatewayParameters.properties.virtualHub.id"}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$putExpressRouteGatewayParameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "allowNonVirtualWanTraffic"}, {"type": "object", "name": "autoScaleConfiguration", "props": [{"type": "object", "name": "bounds", "props": [{"type": "integer", "name": "max"}, {"type": "integer", "name": "min"}]}]}, {"type": "array<object>", "name": "expressRouteConnections", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"}}, {"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "authorizationKey"}, {"type": "boolean", "name": "enableInternetSecurity"}, {"type": "boolean", "name": "enablePrivateLinkFastPath"}, {"type": "object", "name": "expressRouteCircuitPeering", "required": true, "props": [{"type": "string", "name": "id"}]}, {"type": "boolean", "name": "expressRouteGatewayBypass"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "routingConfiguration", "props": [{"type": "object", "name": "associatedRouteTable", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}, {"type": "@SubResource_read", "name": "inboundRouteMap"}, {"type": "@SubResource_read", "name": "outboundRouteMap"}, {"type": "object", "name": "propagatedRouteTables", "props": [{"type": "array<@SubResource_read>", "name": "ids", "item": {"type": "@SubResource_read"}}, {"type": "array<string>", "name": "labels", "item": {"type": "string"}}]}, {"type": "object", "name": "vnetRoutes", "props": [{"readOnly": true, "type": "array<@SubResource_read>", "name": "bgpConnections", "item": {"type": "@SubResource_read"}}, {"type": "array<object>", "name": "staticRoutes", "item": {"type": "object", "props": [{"type": "array<string>", "name": "addressPrefixes", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "string", "name": "nextHopIpAddress"}]}}, {"type": "object", "name": "staticRoutesConfig", "props": [{"readOnly": true, "type": "boolean", "name": "propagateStaticRoutes"}, {"type": "string", "name": "vnetLocalRouteOverrideCriteria", "enum": {"items": [{"value": "Contains"}, {"value": "Equal"}]}}]}]}]}, {"type": "integer", "name": "routingWeight"}], "clientFlatten": true}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "virtualHub", "required": true, "props": [{"type": "string", "name": "id"}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "update", "version": "2023-09-01", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.network/expressroutegateways/{}", "version": "2023-09-01", "swagger": "mgmt-plane/network/ResourceProviders/Microsoft.Network/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTmV0d29yay9leHByZXNzUm91dGVHYXRld2F5cy97ZXhwcmVzc1JvdXRlR2F0ZXdheU5hbWV9/V/MjAyMy0wOS0wMQ=="}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.expressRouteGatewayName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "ExpressRoute gateway name."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}, {"nullable": true, "type": "ResourceLocation", "var": "$putExpressRouteGatewayParameters.location", "options": ["l", "location"], "group": "", "help": {"short": "Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`."}}, {"nullable": true, "type": "boolean", "var": "$putExpressRouteGatewayParameters.properties.allowNonVirtualWanTraffic", "options": ["allow-non-vwan-traffic"], "group": "", "help": {"short": "Configures this gateway to accept traffic from non Virtual WAN networks."}}, {"nullable": true, "type": "string", "var": "$putExpressRouteGatewayParameters.properties.virtualHub.id", "options": ["virtual-hub"], "group": "", "help": {"short": "Name or ID of the virtual hub to associate with the gateway."}}, {"nullable": true, "type": "object", "var": "$putExpressRouteGatewayParameters.tags", "options": ["tags"], "group": "", "help": {"short": "Space-separated tags: key[=value] [key[=value] ...]. Use \"\" to clear existing tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "Autoscale", "args": [{"nullable": true, "type": "integer", "var": "$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.max", "options": ["max-val"], "group": "Autoscale", "help": {"short": "Maximum number of scale units deployed for gateway."}}, {"nullable": true, "type": "integer", "var": "$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.min", "options": ["min-val"], "group": "Autoscale", "help": {"short": "Minimum number of scale units deployed for gateway.  Default: 2."}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "array<object>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections", "options": ["express-route-connections"], "hide": true, "group": "Properties", "help": {"short": "List of ExpressRoute connections to the ExpressRoute gateway."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "ResourceId", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].id", "options": ["id"], "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"}}, {"type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].name", "options": ["name"], "help": {"short": "The name of the resource."}}, {"nullable": true, "type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.authorizationKey", "options": ["authorization-key"], "group": "Properties", "help": {"short": "Authorization key to establish the connection."}}, {"nullable": true, "type": "boolean", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enableInternetSecurity", "options": ["enable-internet-security"], "group": "Properties", "help": {"short": "Enable internet security."}}, {"nullable": true, "type": "boolean", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enablePrivateLinkFastPath", "options": ["enable-private-link-fast-path"], "group": "Properties", "help": {"short": "Bypass the ExpressRoute gateway when accessing private-links. ExpressRoute FastPath (expressRouteGatewayBypass) must be enabled."}}, {"type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering", "options": ["express-route-circuit-peering"], "group": "Properties", "help": {"short": "The ExpressRoute circuit peering."}, "args": [{"nullable": true, "type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering.id", "options": ["id"], "help": {"short": "The ID of the ExpressRoute circuit peering."}}]}, {"nullable": true, "type": "boolean", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteGatewayBypass", "options": ["express-route-gateway-bypass"], "group": "Properties", "help": {"short": "Enable FastPath to vWan Firewall hub."}}, {"nullable": true, "type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration", "options": ["routing-configuration"], "group": "Properties", "help": {"short": "The Routing Configuration indicating the associated and propagated route tables on this connection."}, "args": [{"nullable": true, "type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.associatedRouteTable", "options": ["associated-route-table"], "help": {"short": "The resource id RouteTable associated with this RoutingConfiguration."}, "args": [{"nullable": true, "type": "string", "var": "@SubResource_update.id", "options": ["id"], "help": {"short": "Resource ID."}}], "cls": "SubResource_update"}, {"nullable": true, "type": "@SubResource_update", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.inboundRouteMap", "options": ["inbound-route-map"], "help": {"short": "The resource id of the RouteMap associated with this RoutingConfiguration for inbound learned routes."}}, {"nullable": true, "type": "@SubResource_update", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.outboundRouteMap", "options": ["outbound-route-map"], "help": {"short": "The resource id of theRouteMap associated with this RoutingConfiguration for outbound advertised routes."}}, {"nullable": true, "type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables", "options": ["propagated-route-tables"], "help": {"short": "The list of RouteTables to advertise the routes to."}, "args": [{"nullable": true, "type": "array<@SubResource_update>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.ids", "options": ["ids"], "help": {"short": "The list of resource ids of all the RouteTables."}, "item": {"nullable": true, "type": "@SubResource_update"}}, {"nullable": true, "type": "array<string>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.labels", "options": ["labels"], "help": {"short": "The list of labels."}, "item": {"nullable": true, "type": "string"}}]}, {"nullable": true, "type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes", "options": ["vnet-routes"], "help": {"short": "List of routes that control routing from VirtualHub into a virtual network connection."}, "args": [{"nullable": true, "type": "array<object>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes", "options": ["static-routes"], "help": {"short": "List of all Static Routes."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<string>", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes", "options": ["address-prefixes"], "help": {"short": "List of all address prefixes."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name", "options": ["name"], "help": {"short": "The name of the StaticRoute that is unique within a VnetRoute."}}, {"nullable": true, "type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress", "options": ["next-hop-ip-address"], "help": {"short": "The ip address of the next hop."}}]}}, {"nullable": true, "type": "object", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig", "options": ["static-routes-config"], "help": {"short": "Configuration for static routes on this HubVnetConnection."}, "args": [{"nullable": true, "type": "string", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria", "options": ["vnet-local-route-override-criteria"], "help": {"short": "Parameter determining whether NVA in spoke vnet is bypassed for traffic with destination in spoke."}, "enum": {"items": [{"name": "Contains", "value": "Contains"}, {"name": "Equal", "value": "Equal"}]}}]}]}]}, {"nullable": true, "type": "integer", "var": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingWeight", "options": ["routing-weight"], "group": "Properties", "help": {"short": "The routing weight associated to the connection."}}]}}]}, {"name": "PutExpressRouteGatewayParameters", "args": [{"nullable": true, "type": "ResourceId", "var": "$putExpressRouteGatewayParameters.id", "options": ["id"], "hide": true, "group": "PutExpressRouteGatewayParameters", "help": {"short": "Resource ID."}, "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"}}]}], "operations": [{"operationId": "ExpressRouteGateways_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "expressRouteGatewayName", "arg": "$Path.expressRouteGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-09-01"}, "type": "string", "name": "api-version", "required": true}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "string", "name": "etag"}, {"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"}}, {"type": "ResourceLocation", "name": "location"}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "allowNonVirtualWanTraffic"}, {"type": "object", "name": "autoScaleConfiguration", "props": [{"type": "object", "name": "bounds", "props": [{"type": "integer", "name": "max"}, {"type": "integer", "name": "min"}]}]}, {"type": "array<object>", "name": "expressRouteConnections", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"}}, {"type": "string", "name": "name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "authorizationKey"}, {"type": "boolean", "name": "enableInternetSecurity"}, {"type": "boolean", "name": "enablePrivateLinkFastPath"}, {"type": "object", "name": "expressRouteCircuitPeering", "required": true, "props": [{"type": "string", "name": "id"}]}, {"type": "boolean", "name": "expressRouteGatewayBypass"}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "routingConfiguration", "props": [{"type": "object", "name": "associatedRouteTable", "props": [{"type": "string", "name": "id"}], "cls": "SubResource_read"}, {"type": "@SubResource_read", "name": "inboundRouteMap"}, {"type": "@SubResource_read", "name": "outboundRouteMap"}, {"type": "object", "name": "propagatedRouteTables", "props": [{"type": "array<@SubResource_read>", "name": "ids", "item": {"type": "@SubResource_read"}}, {"type": "array<string>", "name": "labels", "item": {"type": "string"}}]}, {"type": "object", "name": "vnetRoutes", "props": [{"readOnly": true, "type": "array<@SubResource_read>", "name": "bgpConnections", "item": {"type": "@SubResource_read"}}, {"type": "array<object>", "name": "staticRoutes", "item": {"type": "object", "props": [{"type": "array<string>", "name": "addressPrefixes", "item": {"type": "string"}}, {"type": "string", "name": "name"}, {"type": "string", "name": "nextHopIpAddress"}]}}, {"type": "object", "name": "staticRoutesConfig", "props": [{"readOnly": true, "type": "boolean", "name": "propagateStaticRoutes"}, {"type": "string", "name": "vnetLocalRouteOverrideCriteria", "enum": {"items": [{"value": "Contains"}, {"value": "Equal"}]}}]}]}]}, {"type": "integer", "name": "routingWeight"}], "clientFlatten": true}]}}, {"readOnly": true, "type": "string", "name": "provisioningState", "enum": {"items": [{"value": "Deleting"}, {"value": "Failed"}, {"value": "Succeeded"}, {"value": "Updating"}]}}, {"type": "object", "name": "virtualHub", "required": true, "props": [{"type": "string", "name": "id"}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "ExpressRouteGateway_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "putExpressRouteGatewayParameters", "required": true, "props": [{"type": "ResourceId", "name": "id", "arg": "$putExpressRouteGatewayParameters.id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}"}}, {"type": "ResourceLocation", "name": "location", "arg": "$putExpressRouteGatewayParameters.location"}, {"type": "object", "name": "properties", "props": [{"type": "boolean", "name": "allowNonVirtualWanTraffic", "arg": "$putExpressRouteGatewayParameters.properties.allowNonVirtualWanTraffic"}, {"type": "object", "name": "autoScaleConfiguration", "props": [{"type": "object", "name": "bounds", "props": [{"type": "integer", "name": "max", "arg": "$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.max"}, {"type": "integer", "name": "min", "arg": "$putExpressRouteGatewayParameters.properties.autoScaleConfiguration.bounds.min"}]}]}, {"type": "array<object>", "name": "expressRouteConnections", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections", "item": {"type": "object", "props": [{"type": "ResourceId", "name": "id", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Network/expressRouteGateways/{}/expressRouteConnections/{}"}}, {"type": "string", "name": "name", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].name", "required": true}, {"type": "object", "name": "properties", "props": [{"type": "string", "name": "authorizationKey", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.authorizationKey"}, {"type": "boolean", "name": "enableInternetSecurity", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enableInternetSecurity"}, {"type": "boolean", "name": "enablePrivateLinkFastPath", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.enablePrivateLinkFastPath"}, {"type": "object", "name": "expressRouteCircuitPeering", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering", "required": true, "props": [{"type": "string", "name": "id", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteCircuitPeering.id"}]}, {"type": "boolean", "name": "expressRouteGatewayBypass", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.expressRouteGatewayBypass"}, {"type": "object", "name": "routingConfiguration", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration", "props": [{"type": "object", "name": "associatedRouteTable", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.associatedRouteTable", "props": [{"type": "string", "name": "id", "arg": "@SubResource_update.id"}], "cls": "SubResource_update"}, {"type": "@SubResource_update", "name": "inboundRouteMap", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.inboundRouteMap"}, {"type": "@SubResource_update", "name": "outboundRouteMap", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.outboundRouteMap"}, {"type": "object", "name": "propagatedRouteTables", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables", "props": [{"type": "array<@SubResource_update>", "name": "ids", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.ids", "item": {"type": "@SubResource_update"}}, {"type": "array<string>", "name": "labels", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.propagatedRouteTables.labels", "item": {"type": "string"}}]}, {"type": "object", "name": "vnetRoutes", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes", "props": [{"type": "array<object>", "name": "staticRoutes", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes", "item": {"type": "object", "props": [{"type": "array<string>", "name": "addressPrefixes", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].addressPrefixes", "item": {"type": "string"}}, {"type": "string", "name": "name", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].name"}, {"type": "string", "name": "nextHopIpAddress", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutes[].nextHopIpAddress"}]}}, {"type": "object", "name": "staticRoutesConfig", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig", "props": [{"type": "string", "name": "vnetLocalRouteOverrideCriteria", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingConfiguration.vnetRoutes.staticRoutesConfig.vnetLocalRouteOverrideCriteria", "enum": {"items": [{"value": "Contains"}, {"value": "Equal"}]}}]}]}]}, {"type": "integer", "name": "routingWeight", "arg": "$putExpressRouteGatewayParameters.properties.expressRouteConnections[].properties.routingWeight"}], "clientFlatten": true}]}}, {"type": "object", "name": "virtualHub", "required": true, "props": [{"type": "string", "name": "id", "arg": "$putExpressRouteGatewayParameters.properties.virtualHub.id"}]}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$putExpressRouteGatewayParameters.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"longRunning": {"finalStateVia": "azure-async-operation"}, "operationId": "ExpressRouteGateways_CreateOrUpdate", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteGateways/{expressRouteGatewayName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "expressRouteGatewayName", "arg": "$Path.expressRouteGatewayName", "required": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2023-09-01"}, "type": "string", "name": "api-version", "required": true}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@ExpressRouteGateway_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}]}]}