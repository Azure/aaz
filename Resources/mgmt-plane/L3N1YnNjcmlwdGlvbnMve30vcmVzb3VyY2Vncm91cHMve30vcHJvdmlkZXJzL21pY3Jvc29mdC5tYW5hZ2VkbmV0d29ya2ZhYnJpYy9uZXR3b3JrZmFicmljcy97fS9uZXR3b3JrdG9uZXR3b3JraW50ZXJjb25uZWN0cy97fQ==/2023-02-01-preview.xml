<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}/networktonetworkinterconnects/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfS9uZXR3b3JrVG9OZXR3b3JrSW50ZXJjb25uZWN0cy97bmV0d29ya1RvTmV0d29ya0ludGVyY29ubmVjdE5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
  <commandGroup name="networkfabric nni">
    <command name="show" version="2023-02-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}/networktonetworkinterconnects/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfS9uZXR3b3JrVG9OZXR3b3JrSW50ZXJjb25uZWN0cy97bmV0d29ya1RvTmV0d29ya0ludGVyY29ubmVjdE5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricName" options="fabric-name fabric" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric."/>
        </arg>
        <arg type="string" var="$Path.networkToNetworkInterconnectName" options="resource-name" required="True" group="" idPart="child_name_1">
          <help short="Name of the NetworkToNetworkInterconnect Name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkToNetworkInterconnects_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}">
          <request method="get">
            <path>
              <param type="string" name="networkFabricName" arg="$Path.networkFabricName" required="True"/>
              <param type="string" name="networkToNetworkInterconnectName" arg="$Path.networkToNetworkInterconnectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{}/networkToNetworkInterconnects/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="isManagementType" required="True">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="layer2Configuration">
                      <prop readOnly="True" type="array<string>" name="interfaces">
                        <item type="string"/>
                      </prop>
                      <prop type="integer32" name="mtu" required="True">
                        <default value="1500"/>
                        <format maximum="9000" minimum="1500"/>
                      </prop>
                      <prop type="integer32" name="portCount"/>
                    </prop>
                    <prop type="object" name="layer3Configuration">
                      <prop type="string" name="exportRoutePolicyId"/>
                      <prop readOnly="True" type="integer32" name="fabricASN">
                        <format maximum="65535" minimum="1"/>
                      </prop>
                      <prop type="string" name="importRoutePolicyId"/>
                      <prop type="integer32" name="peerASN">
                        <format maximum="65535" minimum="1"/>
                      </prop>
                      <prop type="string" name="primaryIpv4Prefix"/>
                      <prop type="string" name="primaryIpv6Prefix"/>
                      <prop type="string" name="secondaryIpv4Prefix"/>
                      <prop type="string" name="secondaryIpv6Prefix"/>
                      <prop type="integer32" name="vlanId">
                        <format maximum="4095" minimum="501"/>
                      </prop>
                    </prop>
                    <prop type="string" name="nniType">
                      <default value="&quot;CE&quot;"/>
                      <enum>
                        <item value="&quot;CE&quot;"/>
                        <item value="&quot;NPB&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="useOptionB" required="True">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-02-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}/networktonetworkinterconnects/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfS9uZXR3b3JrVG9OZXR3b3JrSW50ZXJjb25uZWN0cy97bmV0d29ya1RvTmV0d29ya0ludGVyY29ubmVjdE5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricName" options="fabric-name fabric" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric."/>
        </arg>
        <arg type="string" var="$Path.networkToNetworkInterconnectName" options="resource-name" required="True" group="" idPart="child_name_1">
          <help short="Name of the NetworkToNetworkInterconnect Name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <operation operationId="NetworkToNetworkInterconnects_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}">
          <request method="delete">
            <path>
              <param type="string" name="networkFabricName" arg="$Path.networkFabricName" required="True"/>
              <param type="string" name="networkToNetworkInterconnectName" arg="$Path.networkToNetworkInterconnectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-02-01-preview" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}/networktonetworkinterconnects/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfS9uZXR3b3JrVG9OZXR3b3JrSW50ZXJjb25uZWN0cy97bmV0d29ya1RvTmV0d29ya0ludGVyY29ubmVjdE5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricName" options="fabric-name fabric" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric."/>
        </arg>
        <arg type="string" var="$Path.networkToNetworkInterconnectName" options="resource-name" required="True" group="" idPart="child_name_1">
          <help short="Name of the NetworkToNetworkInterconnect Name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.isManagementType" options="is-management-type" group="Properties">
          <help short="Configuration to use NNI for Infrastructure Management. Example: True/False."/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$body.properties.layer2Configuration" options="layer2-configuration" group="Properties">
          <help short="Common properties for Layer2Configuration."/>
          <arg type="integer32" var="$body.properties.layer2Configuration.mtu" options="mtu" required="True" group="">
            <help short="MTU of the packets between PE & CE. The value is between 1500 to 9000. Default value is 1500"/>
            <format maximum="9000" minimum="1500"/>
          </arg>
          <arg type="integer32" var="$body.properties.layer2Configuration.portCount" options="port-count">
            <help short="Number of ports connected between PE/CE. Maximum value depends on FabricSKU."/>
          </arg>
        </arg>
        <arg type="object" var="$body.properties.layer3Configuration" options="layer3-configuration" group="Properties">
          <help short="Common properties for Layer3Configuration."/>
          <arg type="string" var="$body.properties.layer3Configuration.exportRoutePolicyId" options="export-route-policy-id">
            <help short="exportRoutePolicyId"/>
          </arg>
          <arg type="string" var="$body.properties.layer3Configuration.importRoutePolicyId" options="import-route-policy-id">
            <help short="importRoutePolicyId"/>
          </arg>
          <arg type="integer32" var="$body.properties.layer3Configuration.peerASN" options="peer-asn" group="">
            <help short="ASN of PE devices for CE/PE connectivity. The value should be between 1 to 65535. Example : 28"/>
            <format maximum="65535" minimum="1"/>
          </arg>
          <arg type="string" var="$body.properties.layer3Configuration.primaryIpv4Prefix" options="primary-ipv4-prefix" group="">
            <help short="IPv4 Address Prefix of CE-PE interconnect links. Default value is 172.31.0.0/31."/>
          </arg>
          <arg type="string" var="$body.properties.layer3Configuration.primaryIpv6Prefix" options="primary-ipv6-prefix" group="">
            <help short="IPv6 Address Prefix of CE-PE interconnect links. Default value is 3FFE:FFFF:0:CD30::a0/126."/>
          </arg>
          <arg type="string" var="$body.properties.layer3Configuration.secondaryIpv4Prefix" options="secondary-ipv4-prefix" group="">
            <help short="Secondary IPv4 Address Prefix of CE-PE interconnect links. Default value is 172.31.0.20/31."/>
          </arg>
          <arg type="string" var="$body.properties.layer3Configuration.secondaryIpv6Prefix" options="secondary-ipv6-prefix" group="">
            <help short="Secondary IPv6 Address Prefix of CE-PE interconnect links. Default value is 3FFE:FFFF:0:CD30::a4/126."/>
          </arg>
          <arg type="integer32" var="$body.properties.layer3Configuration.vlanId" options="vlan-id" group="">
            <help short="VLAN for CE/PE Layer 3 connectivity. The value should be between 501 to 4095. Example : 501"/>
            <format maximum="4095" minimum="501"/>
          </arg>
        </arg>
        <arg type="string" var="$body.properties.nniType" options="nni-type" group="Properties">
          <help short="Type of NNI used. Example: CE | NPB"/>
          <enum>
            <item name="CE" value="&quot;CE&quot;"/>
            <item name="NPB" value="&quot;NPB&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.useOptionB" options="use-option-b" group="Properties">
          <help short="Parameter to configure option B for NNI. If set to True, Layer3 configuration is mandatory."/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="NetworkToNetworkInterconnects_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}">
          <request method="put">
            <path>
              <param type="string" name="networkFabricName" arg="$Path.networkFabricName" required="True"/>
              <param type="string" name="networkToNetworkInterconnectName" arg="$Path.networkToNetworkInterconnectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="isManagementType" arg="$body.properties.isManagementType" required="True">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="layer2Configuration" arg="$body.properties.layer2Configuration">
                      <prop type="integer32" name="mtu" arg="$body.properties.layer2Configuration.mtu" required="True">
                        <default value="1500"/>
                        <format maximum="9000" minimum="1500"/>
                      </prop>
                      <prop type="integer32" name="portCount" arg="$body.properties.layer2Configuration.portCount"/>
                    </prop>
                    <prop type="object" name="layer3Configuration" arg="$body.properties.layer3Configuration">
                      <prop type="string" name="exportRoutePolicyId" arg="$body.properties.layer3Configuration.exportRoutePolicyId"/>
                      <prop type="string" name="importRoutePolicyId" arg="$body.properties.layer3Configuration.importRoutePolicyId"/>
                      <prop type="integer32" name="peerASN" arg="$body.properties.layer3Configuration.peerASN">
                        <format maximum="65535" minimum="1"/>
                      </prop>
                      <prop type="string" name="primaryIpv4Prefix" arg="$body.properties.layer3Configuration.primaryIpv4Prefix"/>
                      <prop type="string" name="primaryIpv6Prefix" arg="$body.properties.layer3Configuration.primaryIpv6Prefix"/>
                      <prop type="string" name="secondaryIpv4Prefix" arg="$body.properties.layer3Configuration.secondaryIpv4Prefix"/>
                      <prop type="string" name="secondaryIpv6Prefix" arg="$body.properties.layer3Configuration.secondaryIpv6Prefix"/>
                      <prop type="integer32" name="vlanId" arg="$body.properties.layer3Configuration.vlanId">
                        <format maximum="4095" minimum="501"/>
                      </prop>
                    </prop>
                    <prop type="string" name="nniType" arg="$body.properties.nniType">
                      <default value="&quot;CE&quot;"/>
                      <enum>
                        <item value="&quot;CE&quot;"/>
                        <item value="&quot;NPB&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="useOptionB" arg="$body.properties.useOptionB" required="True">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{}/networkToNetworkInterconnects/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="isManagementType" required="True">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="layer2Configuration">
                      <prop readOnly="True" type="array<string>" name="interfaces">
                        <item type="string"/>
                      </prop>
                      <prop type="integer32" name="mtu" required="True">
                        <default value="1500"/>
                        <format maximum="9000" minimum="1500"/>
                      </prop>
                      <prop type="integer32" name="portCount"/>
                    </prop>
                    <prop type="object" name="layer3Configuration">
                      <prop type="string" name="exportRoutePolicyId"/>
                      <prop readOnly="True" type="integer32" name="fabricASN">
                        <format maximum="65535" minimum="1"/>
                      </prop>
                      <prop type="string" name="importRoutePolicyId"/>
                      <prop type="integer32" name="peerASN">
                        <format maximum="65535" minimum="1"/>
                      </prop>
                      <prop type="string" name="primaryIpv4Prefix"/>
                      <prop type="string" name="primaryIpv6Prefix"/>
                      <prop type="string" name="secondaryIpv4Prefix"/>
                      <prop type="string" name="secondaryIpv6Prefix"/>
                      <prop type="integer32" name="vlanId">
                        <format maximum="4095" minimum="501"/>
                      </prop>
                    </prop>
                    <prop type="string" name="nniType">
                      <default value="&quot;CE&quot;"/>
                      <enum>
                        <item value="&quot;CE&quot;"/>
                        <item value="&quot;NPB&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="useOptionB" required="True">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-02-01-preview">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.managednetworkfabric/networkfabrics/{}/networktonetworkinterconnects/{}" version="2023-02-01-preview" swagger="mgmt-plane/managednetworkfabric/ResourceProviders/Microsoft.ManagedNetworkFabric/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlZE5ldHdvcmtGYWJyaWMvbmV0d29ya0ZhYnJpY3Mve25ldHdvcmtGYWJyaWNOYW1lfS9uZXR3b3JrVG9OZXR3b3JrSW50ZXJjb25uZWN0cy97bmV0d29ya1RvTmV0d29ya0ludGVyY29ubmVjdE5hbWV9/V/MjAyMy0wMi0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.networkFabricName" options="fabric-name fabric" required="True" group="" idPart="name">
          <help short="Name of the Network Fabric."/>
        </arg>
        <arg type="string" var="$Path.networkToNetworkInterconnectName" options="resource-name" required="True" group="" idPart="child_name_1">
          <help short="Name of the NetworkToNetworkInterconnect Name"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" group="" idPart="resource_group">
          <help short="Name of the resource group"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" group="" idPart="subscription">
          <help short="ID of subscription"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$body.properties.isManagementType" options="is-management-type" group="Properties">
          <help short="Configuration to use NNI for Infrastructure Management. Example: True/False."/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.layer2Configuration" options="layer2-configuration" group="Properties">
          <help short="Common properties for Layer2Configuration."/>
          <arg type="integer32" var="$body.properties.layer2Configuration.mtu" options="mtu" group="">
            <help short="MTU of the packets between PE & CE. The value is between 1500 to 9000. Default value is 1500"/>
            <format maximum="9000" minimum="1500"/>
          </arg>
          <arg nullable="True" type="integer32" var="$body.properties.layer2Configuration.portCount" options="port-count">
            <help short="Number of ports connected between PE/CE. Maximum value depends on FabricSKU."/>
          </arg>
        </arg>
        <arg nullable="True" type="object" var="$body.properties.layer3Configuration" options="layer3-configuration" group="Properties">
          <help short="Common properties for Layer3Configuration."/>
          <arg nullable="True" type="string" var="$body.properties.layer3Configuration.exportRoutePolicyId" options="export-route-policy-id">
            <help short="exportRoutePolicyId"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.layer3Configuration.importRoutePolicyId" options="import-route-policy-id">
            <help short="importRoutePolicyId"/>
          </arg>
          <arg nullable="True" type="integer32" var="$body.properties.layer3Configuration.peerASN" options="peer-asn" group="">
            <help short="ASN of PE devices for CE/PE connectivity. The value should be between 1 to 65535. Example : 28"/>
            <format maximum="65535" minimum="1"/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.layer3Configuration.primaryIpv4Prefix" options="primary-ipv4-prefix" group="">
            <help short="IPv4 Address Prefix of CE-PE interconnect links. Default value is 172.31.0.0/31."/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.layer3Configuration.primaryIpv6Prefix" options="primary-ipv6-prefix" group="">
            <help short="IPv6 Address Prefix of CE-PE interconnect links. Default value is 3FFE:FFFF:0:CD30::a0/126."/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.layer3Configuration.secondaryIpv4Prefix" options="secondary-ipv4-prefix" group="">
            <help short="Secondary IPv4 Address Prefix of CE-PE interconnect links. Default value is 172.31.0.20/31."/>
          </arg>
          <arg nullable="True" type="string" var="$body.properties.layer3Configuration.secondaryIpv6Prefix" options="secondary-ipv6-prefix" group="">
            <help short="Secondary IPv6 Address Prefix of CE-PE interconnect links. Default value is 3FFE:FFFF:0:CD30::a4/126."/>
          </arg>
          <arg nullable="True" type="integer32" var="$body.properties.layer3Configuration.vlanId" options="vlan-id" group="">
            <help short="VLAN for CE/PE Layer 3 connectivity. The value should be between 501 to 4095. Example : 501"/>
            <format maximum="4095" minimum="501"/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$body.properties.nniType" options="nni-type" group="Properties">
          <help short="Type of NNI used. Example: CE | NPB"/>
          <enum>
            <item name="CE" value="&quot;CE&quot;"/>
            <item name="NPB" value="&quot;NPB&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$body.properties.useOptionB" options="use-option-b" group="Properties">
          <help short="Parameter to configure option B for NNI. If set to True, Layer3 configuration is mandatory."/>
          <enum>
            <item name="False" value="&quot;False&quot;"/>
            <item name="True" value="&quot;True&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <operation operationId="NetworkToNetworkInterconnects_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}">
          <request method="get">
            <path>
              <param type="string" name="networkFabricName" arg="$Path.networkFabricName" required="True"/>
              <param type="string" name="networkToNetworkInterconnectName" arg="$Path.networkToNetworkInterconnectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="NetworkToNetworkInterconnect_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{}/networkToNetworkInterconnects/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="administrativeState">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="isManagementType" required="True">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="layer2Configuration">
                      <prop readOnly="True" type="array<string>" name="interfaces">
                        <item type="string"/>
                      </prop>
                      <prop type="integer32" name="mtu" required="True">
                        <default value="1500"/>
                        <format maximum="9000" minimum="1500"/>
                      </prop>
                      <prop type="integer32" name="portCount"/>
                    </prop>
                    <prop type="object" name="layer3Configuration">
                      <prop type="string" name="exportRoutePolicyId"/>
                      <prop readOnly="True" type="integer32" name="fabricASN">
                        <format maximum="65535" minimum="1"/>
                      </prop>
                      <prop type="string" name="importRoutePolicyId"/>
                      <prop type="integer32" name="peerASN">
                        <format maximum="65535" minimum="1"/>
                      </prop>
                      <prop type="string" name="primaryIpv4Prefix"/>
                      <prop type="string" name="primaryIpv6Prefix"/>
                      <prop type="string" name="secondaryIpv4Prefix"/>
                      <prop type="string" name="secondaryIpv6Prefix"/>
                      <prop type="integer32" name="vlanId">
                        <format maximum="4095" minimum="501"/>
                      </prop>
                    </prop>
                    <prop type="string" name="nniType">
                      <default value="&quot;CE&quot;"/>
                      <enum>
                        <item value="&quot;CE&quot;"/>
                        <item value="&quot;NPB&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="useOptionB" required="True">
                      <enum>
                        <item value="&quot;False&quot;"/>
                        <item value="&quot;True&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="body" required="True" clientFlatten="True">
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="string" name="isManagementType" arg="$body.properties.isManagementType" required="True">
                  <enum>
                    <item value="&quot;False&quot;"/>
                    <item value="&quot;True&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="layer2Configuration" arg="$body.properties.layer2Configuration">
                  <prop type="integer32" name="mtu" arg="$body.properties.layer2Configuration.mtu" required="True">
                    <default value="1500"/>
                    <format maximum="9000" minimum="1500"/>
                  </prop>
                  <prop type="integer32" name="portCount" arg="$body.properties.layer2Configuration.portCount"/>
                </prop>
                <prop type="object" name="layer3Configuration" arg="$body.properties.layer3Configuration">
                  <prop type="string" name="exportRoutePolicyId" arg="$body.properties.layer3Configuration.exportRoutePolicyId"/>
                  <prop type="string" name="importRoutePolicyId" arg="$body.properties.layer3Configuration.importRoutePolicyId"/>
                  <prop type="integer32" name="peerASN" arg="$body.properties.layer3Configuration.peerASN">
                    <format maximum="65535" minimum="1"/>
                  </prop>
                  <prop type="string" name="primaryIpv4Prefix" arg="$body.properties.layer3Configuration.primaryIpv4Prefix"/>
                  <prop type="string" name="primaryIpv6Prefix" arg="$body.properties.layer3Configuration.primaryIpv6Prefix"/>
                  <prop type="string" name="secondaryIpv4Prefix" arg="$body.properties.layer3Configuration.secondaryIpv4Prefix"/>
                  <prop type="string" name="secondaryIpv6Prefix" arg="$body.properties.layer3Configuration.secondaryIpv6Prefix"/>
                  <prop type="integer32" name="vlanId" arg="$body.properties.layer3Configuration.vlanId">
                    <format maximum="4095" minimum="501"/>
                  </prop>
                </prop>
                <prop type="string" name="nniType" arg="$body.properties.nniType">
                  <default value="&quot;CE&quot;"/>
                  <enum>
                    <item value="&quot;CE&quot;"/>
                    <item value="&quot;NPB&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="useOptionB" arg="$body.properties.useOptionB" required="True">
                  <enum>
                    <item value="&quot;False&quot;"/>
                    <item value="&quot;True&quot;"/>
                  </enum>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="NetworkToNetworkInterconnects_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabrics/{networkFabricName}/networkToNetworkInterconnects/{networkToNetworkInterconnectName}">
          <request method="put">
            <path>
              <param type="string" name="networkFabricName" arg="$Path.networkFabricName" required="True"/>
              <param type="string" name="networkToNetworkInterconnectName" arg="$Path.networkToNetworkInterconnectName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-02-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@NetworkToNetworkInterconnect_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
