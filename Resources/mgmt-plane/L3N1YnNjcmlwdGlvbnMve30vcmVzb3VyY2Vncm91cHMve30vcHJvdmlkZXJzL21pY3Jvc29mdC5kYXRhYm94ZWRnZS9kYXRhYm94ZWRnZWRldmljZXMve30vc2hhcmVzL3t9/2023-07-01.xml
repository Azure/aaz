<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databoxedge/databoxedgedevices/{}/shares/{}" version="2023-07-01" swagger="mgmt-plane/databoxedge/ResourceProviders/Microsoft.DataBoxEdge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YUJveEVkZ2UvZGF0YUJveEVkZ2VEZXZpY2VzL3tkZXZpY2VOYW1lfS9zaGFyZXMve25hbWV9/V/MjAyMy0wNy0wMQ=="/>
  <commandGroup name="databoxedge device share">
    <command name="show" version="2023-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databoxedge/databoxedgedevices/{}/shares/{}" version="2023-07-01" swagger="mgmt-plane/databoxedge/ResourceProviders/Microsoft.DataBoxEdge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YUJveEVkZ2UvZGF0YUJveEVkZ2VEZXZpY2VzL3tkZXZpY2VOYW1lfS9zaGFyZXMve25hbWV9/V/MjAyMy0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.deviceName" options="device-name" required="True" idPart="name">
          <help short="The device name."/>
        </arg>
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="child_name_1">
          <help short="The share name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Shares_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}">
          <request method="get">
            <path>
              <param type="string" name="deviceName" arg="$Path.deviceName" required="True"/>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{}/shares/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="accessProtocol" required="True">
                      <enum>
                        <item value="&quot;NFS&quot;"/>
                        <item value="&quot;SMB&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="azureContainerInfo">
                      <prop type="string" name="containerName" required="True"/>
                      <prop type="string" name="dataFormat" required="True">
                        <enum>
                          <item value="&quot;AzureFile&quot;"/>
                          <item value="&quot;BlockBlob&quot;"/>
                          <item value="&quot;PageBlob&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageAccountCredentialId" required="True"/>
                    </prop>
                    <prop type="array<object>" name="clientAccessRights" identifiers="client">
                      <item type="object">
                        <prop type="string" name="accessPermission" required="True">
                          <enum>
                            <item value="&quot;NoAccess&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="client" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="dataPolicy">
                      <enum>
                        <item value="&quot;Cloud&quot;"/>
                        <item value="&quot;Local&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="monitoringStatus" required="True">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="refreshDetails">
                      <prop type="string" name="errorManifestFile"/>
                      <prop type="string" name="inProgressRefreshJobId"/>
                      <prop type="dateTime" name="lastCompletedRefreshJobTimeInUTC"/>
                      <prop type="string" name="lastJob"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="shareMappings" identifiers="shareId">
                      <item type="object">
                        <prop readOnly="True" type="string" name="mountPoint"/>
                        <prop readOnly="True" type="string" name="mountType">
                          <enum>
                            <item value="&quot;HostPath&quot;"/>
                            <item value="&quot;Volume&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="roleId"/>
                        <prop readOnly="True" type="string" name="roleType">
                          <enum>
                            <item value="&quot;ASA&quot;"/>
                            <item value="&quot;CloudEdgeManagement&quot;"/>
                            <item value="&quot;Cognitive&quot;"/>
                            <item value="&quot;Functions&quot;"/>
                            <item value="&quot;IOT&quot;"/>
                            <item value="&quot;Kubernetes&quot;"/>
                            <item value="&quot;MEC&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="shareId" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="shareStatus" required="True">
                      <enum>
                        <item value="&quot;NeedsAttention&quot;"/>
                        <item value="&quot;OK&quot;"/>
                        <item value="&quot;Offline&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="userAccessRights" identifiers="userId">
                      <item type="object">
                        <prop type="string" name="accessType" required="True">
                          <enum>
                            <item value="&quot;Change&quot;"/>
                            <item value="&quot;Custom&quot;"/>
                            <item value="&quot;Read&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userId" required="True"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-07-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databoxedge/databoxedgedevices/{}/shares/{}" version="2023-07-01" swagger="mgmt-plane/databoxedge/ResourceProviders/Microsoft.DataBoxEdge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YUJveEVkZ2UvZGF0YUJveEVkZ2VEZXZpY2VzL3tkZXZpY2VOYW1lfS9zaGFyZXMve25hbWV9/V/MjAyMy0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.deviceName" options="device-name" required="True" idPart="name">
          <help short="The device name."/>
        </arg>
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="child_name_1">
          <help short="The share name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="Shares_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}">
          <request method="delete">
            <path>
              <param type="string" name="deviceName" arg="$Path.deviceName" required="True"/>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databoxedge/databoxedgedevices/{}/shares/{}" version="2023-07-01" swagger="mgmt-plane/databoxedge/ResourceProviders/Microsoft.DataBoxEdge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YUJveEVkZ2UvZGF0YUJveEVkZ2VEZXZpY2VzL3tkZXZpY2VOYW1lfS9zaGFyZXMve25hbWV9/V/MjAyMy0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.deviceName" options="device-name" required="True" idPart="name">
          <help short="The device name."/>
        </arg>
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="child_name_1">
          <help short="The share name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$share.properties.accessProtocol" options="access-protocol" required="True" group="Properties">
          <help short="Access protocol to be used by the share."/>
          <enum>
            <item name="NFS" value="&quot;NFS&quot;"/>
            <item name="SMB" value="&quot;SMB&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$share.properties.azureContainerInfo" options="azure-container-info" group="Properties">
          <help short="Azure container mapping for the share."/>
          <arg type="string" var="$share.properties.azureContainerInfo.containerName" options="container-name" required="True">
            <help short="Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob)."/>
          </arg>
          <arg type="string" var="$share.properties.azureContainerInfo.dataFormat" options="data-format" required="True">
            <help short="Storage format used for the file represented by the share."/>
            <enum>
              <item name="AzureFile" value="&quot;AzureFile&quot;"/>
              <item name="BlockBlob" value="&quot;BlockBlob&quot;"/>
              <item name="PageBlob" value="&quot;PageBlob&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$share.properties.azureContainerInfo.storageAccountCredentialId" options="storage-account-credential-id" required="True">
            <help short="ID of the storage account credential used to access storage."/>
          </arg>
        </arg>
        <arg type="array<object>" var="$share.properties.clientAccessRights" options="client-access-rights" group="Properties">
          <help short="List of IP addresses and corresponding access rights on the share(required for NFS protocol)."/>
          <item type="object">
            <arg type="string" var="$share.properties.clientAccessRights[].accessPermission" options="access-permission" required="True">
              <help short="Type of access to be allowed for the client."/>
              <enum>
                <item name="NoAccess" value="&quot;NoAccess&quot;"/>
                <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$share.properties.clientAccessRights[].client" options="client" required="True">
              <help short="IP of the client."/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$share.properties.dataPolicy" options="data-policy" group="Properties">
          <help short="Data policy of the share."/>
          <enum>
            <item name="Cloud" value="&quot;Cloud&quot;"/>
            <item name="Local" value="&quot;Local&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$share.properties.description" options="description" group="Properties">
          <help short="Description for the share."/>
        </arg>
        <arg type="string" var="$share.properties.monitoringStatus" options="monitoring-status" required="True" group="Properties">
          <help short="Current monitoring status of the share."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="object" var="$share.properties.refreshDetails" options="refresh-details" group="Properties">
          <help short="Details of the refresh job on this share."/>
          <arg type="string" var="$share.properties.refreshDetails.errorManifestFile" options="error-manifest-file">
            <help short="Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job."/>
          </arg>
          <arg type="string" var="$share.properties.refreshDetails.inProgressRefreshJobId" options="in-progress-refresh-job-id">
            <help short="If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress."/>
          </arg>
          <arg type="dateTime" var="$share.properties.refreshDetails.lastCompletedRefreshJobTimeInUTC" options="last-completed-refresh-job-time-in-utc">
            <help short="Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job."/>
          </arg>
          <arg type="string" var="$share.properties.refreshDetails.lastJob" options="last-job">
            <help short="Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job."/>
          </arg>
        </arg>
        <arg type="string" var="$share.properties.shareStatus" options="share-status" required="True" group="Properties">
          <help short="Current status of the share."/>
          <enum>
            <item name="NeedsAttention" value="&quot;NeedsAttention&quot;"/>
            <item name="OK" value="&quot;OK&quot;"/>
            <item name="Offline" value="&quot;Offline&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
            <item name="Updating" value="&quot;Updating&quot;"/>
          </enum>
        </arg>
        <arg type="array<object>" var="$share.properties.userAccessRights" options="user-access-rights" group="Properties">
          <help short="Mapping of users and corresponding access rights on the share (required for SMB protocol)."/>
          <item type="object">
            <arg type="string" var="$share.properties.userAccessRights[].accessType" options="access-type" required="True">
              <help short="Type of access to be allowed for the user."/>
              <enum>
                <item name="Change" value="&quot;Change&quot;"/>
                <item name="Custom" value="&quot;Custom&quot;"/>
                <item name="Read" value="&quot;Read&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$share.properties.userAccessRights[].userId" options="user-id" required="True">
              <help short="User ID (already existing in the device)."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Shares_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}">
          <request method="put">
            <path>
              <param type="string" name="deviceName" arg="$Path.deviceName" required="True"/>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="share" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="accessProtocol" arg="$share.properties.accessProtocol" required="True">
                      <enum>
                        <item value="&quot;NFS&quot;"/>
                        <item value="&quot;SMB&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="azureContainerInfo" arg="$share.properties.azureContainerInfo">
                      <prop type="string" name="containerName" arg="$share.properties.azureContainerInfo.containerName" required="True"/>
                      <prop type="string" name="dataFormat" arg="$share.properties.azureContainerInfo.dataFormat" required="True">
                        <enum>
                          <item value="&quot;AzureFile&quot;"/>
                          <item value="&quot;BlockBlob&quot;"/>
                          <item value="&quot;PageBlob&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageAccountCredentialId" arg="$share.properties.azureContainerInfo.storageAccountCredentialId" required="True"/>
                    </prop>
                    <prop type="array<object>" name="clientAccessRights" arg="$share.properties.clientAccessRights" identifiers="client">
                      <item type="object">
                        <prop type="string" name="accessPermission" arg="$share.properties.clientAccessRights[].accessPermission" required="True">
                          <enum>
                            <item value="&quot;NoAccess&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="client" arg="$share.properties.clientAccessRights[].client" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="dataPolicy" arg="$share.properties.dataPolicy">
                      <enum>
                        <item value="&quot;Cloud&quot;"/>
                        <item value="&quot;Local&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description" arg="$share.properties.description"/>
                    <prop type="string" name="monitoringStatus" arg="$share.properties.monitoringStatus" required="True">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="refreshDetails" arg="$share.properties.refreshDetails">
                      <prop type="string" name="errorManifestFile" arg="$share.properties.refreshDetails.errorManifestFile"/>
                      <prop type="string" name="inProgressRefreshJobId" arg="$share.properties.refreshDetails.inProgressRefreshJobId"/>
                      <prop type="dateTime" name="lastCompletedRefreshJobTimeInUTC" arg="$share.properties.refreshDetails.lastCompletedRefreshJobTimeInUTC"/>
                      <prop type="string" name="lastJob" arg="$share.properties.refreshDetails.lastJob"/>
                    </prop>
                    <prop type="string" name="shareStatus" arg="$share.properties.shareStatus" required="True">
                      <enum>
                        <item value="&quot;NeedsAttention&quot;"/>
                        <item value="&quot;OK&quot;"/>
                        <item value="&quot;Offline&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="userAccessRights" arg="$share.properties.userAccessRights" identifiers="userId">
                      <item type="object">
                        <prop type="string" name="accessType" arg="$share.properties.userAccessRights[].accessType" required="True">
                          <enum>
                            <item value="&quot;Change&quot;"/>
                            <item value="&quot;Custom&quot;"/>
                            <item value="&quot;Read&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userId" arg="$share.properties.userAccessRights[].userId" required="True"/>
                      </item>
                    </prop>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{}/shares/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="accessProtocol" required="True">
                      <enum>
                        <item value="&quot;NFS&quot;"/>
                        <item value="&quot;SMB&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="azureContainerInfo">
                      <prop type="string" name="containerName" required="True"/>
                      <prop type="string" name="dataFormat" required="True">
                        <enum>
                          <item value="&quot;AzureFile&quot;"/>
                          <item value="&quot;BlockBlob&quot;"/>
                          <item value="&quot;PageBlob&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageAccountCredentialId" required="True"/>
                    </prop>
                    <prop type="array<object>" name="clientAccessRights" identifiers="client">
                      <item type="object">
                        <prop type="string" name="accessPermission" required="True">
                          <enum>
                            <item value="&quot;NoAccess&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="client" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="dataPolicy">
                      <enum>
                        <item value="&quot;Cloud&quot;"/>
                        <item value="&quot;Local&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="monitoringStatus" required="True">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="refreshDetails">
                      <prop type="string" name="errorManifestFile"/>
                      <prop type="string" name="inProgressRefreshJobId"/>
                      <prop type="dateTime" name="lastCompletedRefreshJobTimeInUTC"/>
                      <prop type="string" name="lastJob"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="shareMappings" identifiers="shareId">
                      <item type="object">
                        <prop readOnly="True" type="string" name="mountPoint"/>
                        <prop readOnly="True" type="string" name="mountType">
                          <enum>
                            <item value="&quot;HostPath&quot;"/>
                            <item value="&quot;Volume&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="roleId"/>
                        <prop readOnly="True" type="string" name="roleType">
                          <enum>
                            <item value="&quot;ASA&quot;"/>
                            <item value="&quot;CloudEdgeManagement&quot;"/>
                            <item value="&quot;Cognitive&quot;"/>
                            <item value="&quot;Functions&quot;"/>
                            <item value="&quot;IOT&quot;"/>
                            <item value="&quot;Kubernetes&quot;"/>
                            <item value="&quot;MEC&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="shareId" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="shareStatus" required="True">
                      <enum>
                        <item value="&quot;NeedsAttention&quot;"/>
                        <item value="&quot;OK&quot;"/>
                        <item value="&quot;Offline&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="userAccessRights" identifiers="userId">
                      <item type="object">
                        <prop type="string" name="accessType" required="True">
                          <enum>
                            <item value="&quot;Change&quot;"/>
                            <item value="&quot;Custom&quot;"/>
                            <item value="&quot;Read&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userId" required="True"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.databoxedge/databoxedgedevices/{}/shares/{}" version="2023-07-01" swagger="mgmt-plane/databoxedge/ResourceProviders/Microsoft.DataBoxEdge/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuRGF0YUJveEVkZ2UvZGF0YUJveEVkZ2VEZXZpY2VzL3tkZXZpY2VOYW1lfS9zaGFyZXMve25hbWV9/V/MjAyMy0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.deviceName" options="device-name" required="True" idPart="name">
          <help short="The device name."/>
        </arg>
        <arg type="string" var="$Path.name" options="name n" required="True" idPart="child_name_1">
          <help short="The share name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$share.properties.accessProtocol" options="access-protocol" group="Properties">
          <help short="Access protocol to be used by the share."/>
          <enum>
            <item name="NFS" value="&quot;NFS&quot;"/>
            <item name="SMB" value="&quot;SMB&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$share.properties.azureContainerInfo" options="azure-container-info" group="Properties">
          <help short="Azure container mapping for the share."/>
          <arg type="string" var="$share.properties.azureContainerInfo.containerName" options="container-name">
            <help short="Container name (Based on the data format specified, this represents the name of Azure Files/Page blob/Block blob)."/>
          </arg>
          <arg type="string" var="$share.properties.azureContainerInfo.dataFormat" options="data-format">
            <help short="Storage format used for the file represented by the share."/>
            <enum>
              <item name="AzureFile" value="&quot;AzureFile&quot;"/>
              <item name="BlockBlob" value="&quot;BlockBlob&quot;"/>
              <item name="PageBlob" value="&quot;PageBlob&quot;"/>
            </enum>
          </arg>
          <arg type="string" var="$share.properties.azureContainerInfo.storageAccountCredentialId" options="storage-account-credential-id">
            <help short="ID of the storage account credential used to access storage."/>
          </arg>
        </arg>
        <arg nullable="True" type="array<object>" var="$share.properties.clientAccessRights" options="client-access-rights" group="Properties">
          <help short="List of IP addresses and corresponding access rights on the share(required for NFS protocol)."/>
          <item nullable="True" type="object">
            <arg type="string" var="$share.properties.clientAccessRights[].accessPermission" options="access-permission">
              <help short="Type of access to be allowed for the client."/>
              <enum>
                <item name="NoAccess" value="&quot;NoAccess&quot;"/>
                <item name="ReadOnly" value="&quot;ReadOnly&quot;"/>
                <item name="ReadWrite" value="&quot;ReadWrite&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$share.properties.clientAccessRights[].client" options="client">
              <help short="IP of the client."/>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$share.properties.dataPolicy" options="data-policy" group="Properties">
          <help short="Data policy of the share."/>
          <enum>
            <item name="Cloud" value="&quot;Cloud&quot;"/>
            <item name="Local" value="&quot;Local&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$share.properties.description" options="description" group="Properties">
          <help short="Description for the share."/>
        </arg>
        <arg type="string" var="$share.properties.monitoringStatus" options="monitoring-status" group="Properties">
          <help short="Current monitoring status of the share."/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="object" var="$share.properties.refreshDetails" options="refresh-details" group="Properties">
          <help short="Details of the refresh job on this share."/>
          <arg nullable="True" type="string" var="$share.properties.refreshDetails.errorManifestFile" options="error-manifest-file">
            <help short="Indicates the relative path of the error xml for the last refresh job on this particular share or container, if any. This could be a failed job or a successful job."/>
          </arg>
          <arg nullable="True" type="string" var="$share.properties.refreshDetails.inProgressRefreshJobId" options="in-progress-refresh-job-id">
            <help short="If a refresh job is currently in progress on this share or container, this field indicates the ARM resource ID of that job. The field is empty if no job is in progress."/>
          </arg>
          <arg nullable="True" type="dateTime" var="$share.properties.refreshDetails.lastCompletedRefreshJobTimeInUTC" options="last-completed-refresh-job-time-in-utc">
            <help short="Indicates the completed time for the last refresh job on this particular share or container, if any.This could be a failed job or a successful job."/>
          </arg>
          <arg nullable="True" type="string" var="$share.properties.refreshDetails.lastJob" options="last-job">
            <help short="Indicates the id of the last refresh job on this particular share or container,if any. This could be a failed job or a successful job."/>
          </arg>
        </arg>
        <arg type="string" var="$share.properties.shareStatus" options="share-status" group="Properties">
          <help short="Current status of the share."/>
          <enum>
            <item name="NeedsAttention" value="&quot;NeedsAttention&quot;"/>
            <item name="OK" value="&quot;OK&quot;"/>
            <item name="Offline" value="&quot;Offline&quot;"/>
            <item name="Unknown" value="&quot;Unknown&quot;"/>
            <item name="Updating" value="&quot;Updating&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="array<object>" var="$share.properties.userAccessRights" options="user-access-rights" group="Properties">
          <help short="Mapping of users and corresponding access rights on the share (required for SMB protocol)."/>
          <item nullable="True" type="object">
            <arg type="string" var="$share.properties.userAccessRights[].accessType" options="access-type">
              <help short="Type of access to be allowed for the user."/>
              <enum>
                <item name="Change" value="&quot;Change&quot;"/>
                <item name="Custom" value="&quot;Custom&quot;"/>
                <item name="Read" value="&quot;Read&quot;"/>
              </enum>
            </arg>
            <arg type="string" var="$share.properties.userAccessRights[].userId" options="user-id">
              <help short="User ID (already existing in the device)."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="Shares_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}">
          <request method="get">
            <path>
              <param type="string" name="deviceName" arg="$Path.deviceName" required="True"/>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="Share_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{}/shares/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="accessProtocol" required="True">
                      <enum>
                        <item value="&quot;NFS&quot;"/>
                        <item value="&quot;SMB&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="azureContainerInfo">
                      <prop type="string" name="containerName" required="True"/>
                      <prop type="string" name="dataFormat" required="True">
                        <enum>
                          <item value="&quot;AzureFile&quot;"/>
                          <item value="&quot;BlockBlob&quot;"/>
                          <item value="&quot;PageBlob&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="storageAccountCredentialId" required="True"/>
                    </prop>
                    <prop type="array<object>" name="clientAccessRights" identifiers="client">
                      <item type="object">
                        <prop type="string" name="accessPermission" required="True">
                          <enum>
                            <item value="&quot;NoAccess&quot;"/>
                            <item value="&quot;ReadOnly&quot;"/>
                            <item value="&quot;ReadWrite&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="client" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="dataPolicy">
                      <enum>
                        <item value="&quot;Cloud&quot;"/>
                        <item value="&quot;Local&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="string" name="monitoringStatus" required="True">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="refreshDetails">
                      <prop type="string" name="errorManifestFile"/>
                      <prop type="string" name="inProgressRefreshJobId"/>
                      <prop type="dateTime" name="lastCompletedRefreshJobTimeInUTC"/>
                      <prop type="string" name="lastJob"/>
                    </prop>
                    <prop readOnly="True" type="array<object>" name="shareMappings" identifiers="shareId">
                      <item type="object">
                        <prop readOnly="True" type="string" name="mountPoint"/>
                        <prop readOnly="True" type="string" name="mountType">
                          <enum>
                            <item value="&quot;HostPath&quot;"/>
                            <item value="&quot;Volume&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="roleId"/>
                        <prop readOnly="True" type="string" name="roleType">
                          <enum>
                            <item value="&quot;ASA&quot;"/>
                            <item value="&quot;CloudEdgeManagement&quot;"/>
                            <item value="&quot;Cognitive&quot;"/>
                            <item value="&quot;Functions&quot;"/>
                            <item value="&quot;IOT&quot;"/>
                            <item value="&quot;Kubernetes&quot;"/>
                            <item value="&quot;MEC&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="shareId" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="shareStatus" required="True">
                      <enum>
                        <item value="&quot;NeedsAttention&quot;"/>
                        <item value="&quot;OK&quot;"/>
                        <item value="&quot;Offline&quot;"/>
                        <item value="&quot;Unknown&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="userAccessRights" identifiers="userId">
                      <item type="object">
                        <prop type="string" name="accessType" required="True">
                          <enum>
                            <item value="&quot;Change&quot;"/>
                            <item value="&quot;Custom&quot;"/>
                            <item value="&quot;Read&quot;"/>
                          </enum>
                        </prop>
                        <prop type="string" name="userId" required="True"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="share" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="string" name="accessProtocol" arg="$share.properties.accessProtocol" required="True">
                  <enum>
                    <item value="&quot;NFS&quot;"/>
                    <item value="&quot;SMB&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="azureContainerInfo" arg="$share.properties.azureContainerInfo">
                  <prop type="string" name="containerName" arg="$share.properties.azureContainerInfo.containerName" required="True"/>
                  <prop type="string" name="dataFormat" arg="$share.properties.azureContainerInfo.dataFormat" required="True">
                    <enum>
                      <item value="&quot;AzureFile&quot;"/>
                      <item value="&quot;BlockBlob&quot;"/>
                      <item value="&quot;PageBlob&quot;"/>
                    </enum>
                  </prop>
                  <prop type="string" name="storageAccountCredentialId" arg="$share.properties.azureContainerInfo.storageAccountCredentialId" required="True"/>
                </prop>
                <prop type="array<object>" name="clientAccessRights" arg="$share.properties.clientAccessRights" identifiers="client">
                  <item type="object">
                    <prop type="string" name="accessPermission" arg="$share.properties.clientAccessRights[].accessPermission" required="True">
                      <enum>
                        <item value="&quot;NoAccess&quot;"/>
                        <item value="&quot;ReadOnly&quot;"/>
                        <item value="&quot;ReadWrite&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="client" arg="$share.properties.clientAccessRights[].client" required="True"/>
                  </item>
                </prop>
                <prop type="string" name="dataPolicy" arg="$share.properties.dataPolicy">
                  <enum>
                    <item value="&quot;Cloud&quot;"/>
                    <item value="&quot;Local&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="description" arg="$share.properties.description"/>
                <prop type="string" name="monitoringStatus" arg="$share.properties.monitoringStatus" required="True">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="refreshDetails" arg="$share.properties.refreshDetails">
                  <prop type="string" name="errorManifestFile" arg="$share.properties.refreshDetails.errorManifestFile"/>
                  <prop type="string" name="inProgressRefreshJobId" arg="$share.properties.refreshDetails.inProgressRefreshJobId"/>
                  <prop type="dateTime" name="lastCompletedRefreshJobTimeInUTC" arg="$share.properties.refreshDetails.lastCompletedRefreshJobTimeInUTC"/>
                  <prop type="string" name="lastJob" arg="$share.properties.refreshDetails.lastJob"/>
                </prop>
                <prop type="string" name="shareStatus" arg="$share.properties.shareStatus" required="True">
                  <enum>
                    <item value="&quot;NeedsAttention&quot;"/>
                    <item value="&quot;OK&quot;"/>
                    <item value="&quot;Offline&quot;"/>
                    <item value="&quot;Unknown&quot;"/>
                    <item value="&quot;Updating&quot;"/>
                  </enum>
                </prop>
                <prop type="array<object>" name="userAccessRights" arg="$share.properties.userAccessRights" identifiers="userId">
                  <item type="object">
                    <prop type="string" name="accessType" arg="$share.properties.userAccessRights[].accessType" required="True">
                      <enum>
                        <item value="&quot;Change&quot;"/>
                        <item value="&quot;Custom&quot;"/>
                        <item value="&quot;Read&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="userId" arg="$share.properties.userAccessRights[].userId" required="True"/>
                  </item>
                </prop>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="Shares_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataBoxEdge/dataBoxEdgeDevices/{deviceName}/shares/{name}">
          <request method="put">
            <path>
              <param type="string" name="deviceName" arg="$Path.deviceName" required="True"/>
              <param type="string" name="name" arg="$Path.name" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-07-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@Share_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
