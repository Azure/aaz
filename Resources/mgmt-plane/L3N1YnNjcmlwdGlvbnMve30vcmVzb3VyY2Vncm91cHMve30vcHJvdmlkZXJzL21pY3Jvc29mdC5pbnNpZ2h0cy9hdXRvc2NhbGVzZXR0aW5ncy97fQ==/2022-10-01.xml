<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/autoscalesettings/{}" version="2022-10-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvYXV0b3NjYWxlc2V0dGluZ3Mve2F1dG9zY2FsZVNldHRpbmdOYW1lfQ==/V/MjAyMi0xMC0wMQ=="/>
  <commandGroup name="monitor autoscale">
    <command name="show" version="2022-10-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/autoscalesettings/{}" version="2022-10-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvYXV0b3NjYWxlc2V0dGluZ3Mve2F1dG9zY2FsZVNldHRpbmdOYW1lfQ==/V/MjAyMi0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.autoscaleSettingName" options="autoscale-name name n" required="True" group="" idPart="name">
          <help short="The autoscale setting name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AutoscaleSettings_Get">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}">
          <request method="get">
            <path>
              <param type="string" name="autoscaleSettingName" arg="$Path.autoscaleSettingName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourcegroups/{}/providers/Microsoft.Insights/autoscalesettings/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="boolean" name="enabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="array<object>" name="notifications">
                      <item type="object">
                        <prop type="object" name="email">
                          <prop type="array<string>" name="customEmails">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="sendToSubscriptionAdministrator">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="sendToSubscriptionCoAdministrators">
                            <default value="false"/>
                          </prop>
                        </prop>
                        <prop type="string" name="operation" required="True">
                          <enum>
                            <item value="&quot;Scale&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="webhooks">
                          <item type="object">
                            <prop type="object" name="properties">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="serviceUri"/>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="predictiveAutoscalePolicy">
                      <prop type="duration" name="scaleLookAheadTime"/>
                      <prop type="string" name="scaleMode" required="True">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;ForecastOnly&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="profiles" required="True">
                      <item type="object">
                        <prop type="object" name="capacity" required="True">
                          <prop type="string" name="default" required="True"/>
                          <prop type="string" name="maximum" required="True"/>
                          <prop type="string" name="minimum" required="True"/>
                        </prop>
                        <prop type="object" name="fixedDate">
                          <prop type="dateTime" name="end" required="True"/>
                          <prop type="dateTime" name="start" required="True"/>
                          <prop type="string" name="timeZone"/>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="object" name="recurrence">
                          <prop type="string" name="frequency" required="True">
                            <enum>
                              <item value="&quot;Day&quot;"/>
                              <item value="&quot;Hour&quot;"/>
                              <item value="&quot;Minute&quot;"/>
                              <item value="&quot;Month&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;Second&quot;"/>
                              <item value="&quot;Week&quot;"/>
                              <item value="&quot;Year&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="schedule" required="True">
                            <prop type="array<string>" name="days" required="True">
                              <item type="string"/>
                            </prop>
                            <prop type="array<integer32>" name="hours" required="True">
                              <item type="integer32"/>
                            </prop>
                            <prop type="array<integer32>" name="minutes" required="True">
                              <item type="integer32"/>
                            </prop>
                            <prop type="string" name="timeZone" required="True"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="rules" required="True">
                          <item type="object">
                            <prop type="object" name="metricTrigger" required="True">
                              <prop type="array<object>" name="dimensions">
                                <item type="object">
                                  <prop type="string" name="DimensionName" required="True"/>
                                  <prop type="string" name="Operator" required="True">
                                    <enum>
                                      <item value="&quot;Equals&quot;"/>
                                      <item value="&quot;NotEquals&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="array<string>" name="Values" required="True">
                                    <item type="string"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="dividePerInstance"/>
                              <prop type="string" name="metricName" required="True"/>
                              <prop type="string" name="metricNamespace"/>
                              <prop type="string" name="metricResourceLocation"/>
                              <prop type="string" name="metricResourceUri" required="True"/>
                              <prop type="string" name="operator" required="True">
                                <enum>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;GreaterThanOrEqual&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                  <item value="&quot;LessThanOrEqual&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="statistic" required="True">
                                <enum>
                                  <item value="&quot;Average&quot;"/>
                                  <item value="&quot;Count&quot;"/>
                                  <item value="&quot;Max&quot;"/>
                                  <item value="&quot;Min&quot;"/>
                                  <item value="&quot;Sum&quot;"/>
                                </enum>
                              </prop>
                              <prop type="float64" name="threshold" required="True"/>
                              <prop type="string" name="timeAggregation" required="True">
                                <enum>
                                  <item value="&quot;Average&quot;"/>
                                  <item value="&quot;Count&quot;"/>
                                  <item value="&quot;Last&quot;"/>
                                  <item value="&quot;Maximum&quot;"/>
                                  <item value="&quot;Minimum&quot;"/>
                                  <item value="&quot;Total&quot;"/>
                                </enum>
                              </prop>
                              <prop type="duration" name="timeGrain" required="True"/>
                              <prop type="duration" name="timeWindow" required="True"/>
                            </prop>
                            <prop type="object" name="scaleAction" required="True">
                              <prop type="duration" name="cooldown" required="True"/>
                              <prop type="string" name="direction" required="True">
                                <enum>
                                  <item value="&quot;Decrease&quot;"/>
                                  <item value="&quot;Increase&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type" required="True">
                                <enum>
                                  <item value="&quot;ChangeCount&quot;"/>
                                  <item value="&quot;ExactCount&quot;"/>
                                  <item value="&quot;PercentChangeCount&quot;"/>
                                  <item value="&quot;ServiceAllowedNextValue&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="value">
                                <default value="&quot;1&quot;"/>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="targetResourceLocation"/>
                    <prop type="string" name="targetResourceUri"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/autoscalesettings/{}" version="2022-10-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvYXV0b3NjYWxlc2V0dGluZ3Mve2F1dG9zY2FsZVNldHRpbmdOYW1lfQ==/V/MjAyMi0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.autoscaleSettingName" options="autoscale-name name n" required="True" group="" idPart="name">
          <help short="The autoscale setting name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="AutoscaleSettings_Delete">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}">
          <request method="delete">
            <path>
              <param type="string" name="autoscaleSettingName" arg="$Path.autoscaleSettingName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/autoscalesettings/{}" version="2022-10-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvYXV0b3NjYWxlc2V0dGluZ3Mve2F1dG9zY2FsZVNldHRpbmdOYW1lfQ==/V/MjAyMi0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.autoscaleSettingName" options="autoscale-name name n" required="True" group="" idPart="name">
          <help short="The autoscale setting name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="">
          <help short="Resource location"/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enabled" options="enabled" group="">
          <help short="the enabled flag. Specifies whether automatic scaling is enabled for the resource. The default value is 'false'."/>
          <default value="false"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="">
          <help short="Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Predictive Policy">
        <arg type="duration" var="$parameters.properties.predictiveAutoscalePolicy.scaleLookAheadTime" options="scale-look-ahead-time" group="Predictive Policy">
          <help short="the amount of time to specify by which instances are launched in advance. It must be between 1 minute and 60 minutes in ISO 8601 format (for example, 100 days would be P100D)."/>
        </arg>
        <arg type="string" var="$parameters.properties.predictiveAutoscalePolicy.scaleMode" options="scale-mode" group="Predictive Policy">
          <help short="the predictive autoscale mode"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="ForecastOnly" value="&quot;ForecastOnly&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.notifications" options="notifications" group="Properties">
          <help short="the collection of notifications."/>
          <item type="object">
            <arg type="object" var="$parameters.properties.notifications[].email" options="email">
              <help short="the email notification."/>
              <arg type="array<string>" var="$parameters.properties.notifications[].email.customEmails" options="custom-emails">
                <help short="the custom e-mails list. This value can be null or empty, in which case this attribute will be ignored."/>
                <item type="string"/>
              </arg>
              <arg type="boolean" var="$parameters.properties.notifications[].email.sendToSubscriptionAdministrator" options="send-to-subscription-administrator">
                <help short="a value indicating whether to send email to subscription administrator."/>
                <default value="false"/>
              </arg>
              <arg type="boolean" var="$parameters.properties.notifications[].email.sendToSubscriptionCoAdministrators" options="send-to-subscription-co-administrators">
                <help short="a value indicating whether to send email to subscription co-administrators."/>
                <default value="false"/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.notifications[].operation" options="operation" required="True">
              <help short="the operation associated with the notification and its value must be &quot;scale&quot;"/>
              <enum>
                <item name="Scale" value="&quot;Scale&quot;"/>
              </enum>
            </arg>
            <arg type="array<object>" var="$parameters.properties.notifications[].webhooks" options="webhooks">
              <help short="the collection of webhook notifications."/>
              <item type="object">
                <arg type="object" var="$parameters.properties.notifications[].webhooks[].properties" options="properties">
                  <help short="a property bag of settings. This value can be empty."/>
                  <additionalProp>
                    <item type="string"/>
                  </additionalProp>
                </arg>
                <arg type="string" var="$parameters.properties.notifications[].webhooks[].serviceUri" options="service-uri">
                  <help short="the service address to receive the notification."/>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.properties.profiles" options="profiles" required="True" group="Properties">
          <help short="the collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified."/>
          <item type="object">
            <arg type="object" var="$parameters.properties.profiles[].capacity" options="capacity" required="True">
              <help short="the number of instances that can be used during this profile."/>
              <arg type="string" var="$parameters.properties.profiles[].capacity.default" options="default" required="True">
                <help short="the number of instances that will be set if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default."/>
              </arg>
              <arg type="string" var="$parameters.properties.profiles[].capacity.maximum" options="maximum" required="True">
                <help short="the maximum number of instances for the resource. The actual maximum number of instances is limited by the cores that are available in the subscription."/>
              </arg>
              <arg type="string" var="$parameters.properties.profiles[].capacity.minimum" options="minimum" required="True">
                <help short="the minimum number of instances for the resource."/>
              </arg>
            </arg>
            <arg type="object" var="$parameters.properties.profiles[].fixedDate" options="fixed-date">
              <help short="the specific date-time for the profile. This element is not used if the Recurrence element is used."/>
              <arg type="dateTime" var="$parameters.properties.profiles[].fixedDate.end" options="end" required="True">
                <help short="the end time for the profile in ISO 8601 format."/>
              </arg>
              <arg type="dateTime" var="$parameters.properties.profiles[].fixedDate.start" options="start" required="True">
                <help short="the start time for the profile in ISO 8601 format."/>
              </arg>
              <arg type="string" var="$parameters.properties.profiles[].fixedDate.timeZone" options="time-zone">
                <help short="the timezone of the start and end times for the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands Standard Time"/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.profiles[].name" options="name" required="True">
              <help short="the name of the profile."/>
            </arg>
            <arg type="object" var="$parameters.properties.profiles[].recurrence" options="recurrence">
              <help short="the repeating times at which this profile begins. This element is not used if the FixedDate element is used."/>
              <arg type="string" var="$parameters.properties.profiles[].recurrence.frequency" options="frequency" required="True">
                <help short="the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week will have the same set of profiles. For example, to set a daily schedule, set **schedule** to every day of the week. The frequency property specifies that the schedule is repeated weekly."/>
                <enum>
                  <item name="Day" value="&quot;Day&quot;"/>
                  <item name="Hour" value="&quot;Hour&quot;"/>
                  <item name="Minute" value="&quot;Minute&quot;"/>
                  <item name="Month" value="&quot;Month&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="Second" value="&quot;Second&quot;"/>
                  <item name="Week" value="&quot;Week&quot;"/>
                  <item name="Year" value="&quot;Year&quot;"/>
                </enum>
              </arg>
              <arg type="object" var="$parameters.properties.profiles[].recurrence.schedule" options="schedule" required="True">
                <help short="the scheduling constraints for when the profile begins."/>
                <arg type="array<string>" var="$parameters.properties.profiles[].recurrence.schedule.days" options="days" required="True">
                  <help short="the collection of days that the profile takes effect on. Possible values are Sunday through Saturday."/>
                  <item type="string"/>
                </arg>
                <arg type="array<integer32>" var="$parameters.properties.profiles[].recurrence.schedule.hours" options="hours" required="True">
                  <help short="A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times are not supported)."/>
                  <item type="integer32"/>
                </arg>
                <arg type="array<integer32>" var="$parameters.properties.profiles[].recurrence.schedule.minutes" options="minutes" required="True">
                  <help short="A collection of minutes at which the profile takes effect at."/>
                  <item type="integer32"/>
                </arg>
                <arg type="string" var="$parameters.properties.profiles[].recurrence.schedule.timeZone" options="time-zone" required="True">
                  <help short="the timezone for the hours of the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands Standard Time"/>
                </arg>
              </arg>
            </arg>
            <arg type="array<object>" var="$parameters.properties.profiles[].rules" options="rules" required="True">
              <help short="the collection of rules that provide the triggers and parameters for the scaling action. A maximum of 10 rules can be specified."/>
              <item type="object">
                <arg type="object" var="$parameters.properties.profiles[].rules[].metricTrigger" options="metric-trigger" required="True">
                  <help short="the trigger that results in a scaling action."/>
                  <arg type="array<object>" var="$parameters.properties.profiles[].rules[].metricTrigger.dimensions" options="dimensions">
                    <help short="List of dimension conditions. For example: [{&quot;DimensionName&quot;:&quot;AppName&quot;,&quot;Operator&quot;:&quot;Equals&quot;,&quot;Values&quot;:[&quot;App1&quot;]},{&quot;DimensionName&quot;:&quot;Deployment&quot;,&quot;Operator&quot;:&quot;Equals&quot;,&quot;Values&quot;:[&quot;default&quot;]}]."/>
                    <item type="object">
                      <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].DimensionName" options="dimension-name" required="True">
                        <help short="Name of the dimension."/>
                      </arg>
                      <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].Operator" options="operator" required="True">
                        <help short="the dimension operator. Only 'Equals' and 'NotEquals' are supported. 'Equals' being equal to any of the values. 'NotEquals' being not equal to all of the values"/>
                        <enum>
                          <item name="Equals" value="&quot;Equals&quot;"/>
                          <item name="NotEquals" value="&quot;NotEquals&quot;"/>
                        </enum>
                      </arg>
                      <arg type="array<string>" var="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].Values" options="values" required="True">
                        <help short="list of dimension values. For example: [&quot;App1&quot;,&quot;App2&quot;]."/>
                        <item type="string"/>
                      </arg>
                    </item>
                  </arg>
                  <arg type="boolean" var="$parameters.properties.profiles[].rules[].metricTrigger.dividePerInstance" options="divide-per-instance">
                    <help short="a value indicating whether metric should divide per instance."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.metricName" options="metric-name" required="True">
                    <help short="the name of the metric that defines what the rule monitors."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.metricNamespace" options="metric-namespace">
                    <help short="the namespace of the metric that defines what the rule monitors."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.metricResourceLocation" options="metric-resource-location">
                    <help short="the location of the resource the rule monitors."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.metricResourceUri" options="metric-resource-uri" required="True">
                    <help short="the resource identifier of the resource the rule monitors."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.operator" options="operator" required="True">
                    <help short="the operator that is used to compare the metric data and the threshold."/>
                    <enum>
                      <item name="Equals" value="&quot;Equals&quot;"/>
                      <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                      <item name="GreaterThanOrEqual" value="&quot;GreaterThanOrEqual&quot;"/>
                      <item name="LessThan" value="&quot;LessThan&quot;"/>
                      <item name="LessThanOrEqual" value="&quot;LessThanOrEqual&quot;"/>
                      <item name="NotEquals" value="&quot;NotEquals&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.statistic" options="statistic" required="True">
                    <help short="the metric statistic type. How the metrics from multiple instances are combined."/>
                    <enum>
                      <item name="Average" value="&quot;Average&quot;"/>
                      <item name="Count" value="&quot;Count&quot;"/>
                      <item name="Max" value="&quot;Max&quot;"/>
                      <item name="Min" value="&quot;Min&quot;"/>
                      <item name="Sum" value="&quot;Sum&quot;"/>
                    </enum>
                  </arg>
                  <arg type="float64" var="$parameters.properties.profiles[].rules[].metricTrigger.threshold" options="threshold" required="True">
                    <help short="the threshold of the metric that triggers the scale action."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.timeAggregation" options="time-aggregation" required="True">
                    <help short="time aggregation type. How the data that is collected should be combined over time. The default value is Average."/>
                    <enum>
                      <item name="Average" value="&quot;Average&quot;"/>
                      <item name="Count" value="&quot;Count&quot;"/>
                      <item name="Last" value="&quot;Last&quot;"/>
                      <item name="Maximum" value="&quot;Maximum&quot;"/>
                      <item name="Minimum" value="&quot;Minimum&quot;"/>
                      <item name="Total" value="&quot;Total&quot;"/>
                    </enum>
                  </arg>
                  <arg type="duration" var="$parameters.properties.profiles[].rules[].metricTrigger.timeGrain" options="time-grain" required="True">
                    <help short="the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for the metric. Must be between 12 hours and 1 minute."/>
                  </arg>
                  <arg type="duration" var="$parameters.properties.profiles[].rules[].metricTrigger.timeWindow" options="time-window" required="True">
                    <help short="the range of time in which instance data is collected. This value must be greater than the delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours and 5 minutes."/>
                  </arg>
                </arg>
                <arg type="object" var="$parameters.properties.profiles[].rules[].scaleAction" options="scale-action" required="True">
                  <help short="the parameters for the scaling action."/>
                  <arg type="duration" var="$parameters.properties.profiles[].rules[].scaleAction.cooldown" options="cooldown" required="True">
                    <help short="the amount of time to wait since the last scaling action before this action occurs. It must be between 1 week and 1 minute in ISO 8601 format."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].scaleAction.direction" options="direction" required="True">
                    <help short="the scale direction. Whether the scaling action increases or decreases the number of instances."/>
                    <enum>
                      <item name="Decrease" value="&quot;Decrease&quot;"/>
                      <item name="Increase" value="&quot;Increase&quot;"/>
                      <item name="None" value="&quot;None&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].scaleAction.type" options="type" required="True">
                    <help short="the type of action that should occur when the scale rule fires."/>
                    <enum>
                      <item name="ChangeCount" value="&quot;ChangeCount&quot;"/>
                      <item name="ExactCount" value="&quot;ExactCount&quot;"/>
                      <item name="PercentChangeCount" value="&quot;PercentChangeCount&quot;"/>
                      <item name="ServiceAllowedNextValue" value="&quot;ServiceAllowedNextValue&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].scaleAction.value" options="value">
                    <help short="the number of instances that are involved in the scaling action. This value must be 1 or greater. The default value is 1."/>
                    <default value="&quot;1&quot;"/>
                  </arg>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$parameters.properties.targetResourceLocation" options="target-resource-location" group="Properties">
          <help short="the location of the resource that the autoscale setting should be added to."/>
        </arg>
        <arg type="string" var="$parameters.properties.targetResourceUri" options="target-resource-uri" group="Properties">
          <help short="the resource identifier of the resource that the autoscale setting should be added to."/>
        </arg>
      </argGroup>
      <operation operationId="AutoscaleSettings_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}">
          <request method="put">
            <path>
              <param type="string" name="autoscaleSettingName" arg="$Path.autoscaleSettingName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="boolean" name="enabled" arg="$parameters.properties.enabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="name" arg="$Path.autoscaleSettingName"/>
                    <prop type="array<object>" name="notifications" arg="$parameters.properties.notifications">
                      <item type="object">
                        <prop type="object" name="email" arg="$parameters.properties.notifications[].email">
                          <prop type="array<string>" name="customEmails" arg="$parameters.properties.notifications[].email.customEmails">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="sendToSubscriptionAdministrator" arg="$parameters.properties.notifications[].email.sendToSubscriptionAdministrator">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="sendToSubscriptionCoAdministrators" arg="$parameters.properties.notifications[].email.sendToSubscriptionCoAdministrators">
                            <default value="false"/>
                          </prop>
                        </prop>
                        <prop type="string" name="operation" arg="$parameters.properties.notifications[].operation" required="True">
                          <enum>
                            <item value="&quot;Scale&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="webhooks" arg="$parameters.properties.notifications[].webhooks">
                          <item type="object">
                            <prop type="object" name="properties" arg="$parameters.properties.notifications[].webhooks[].properties">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="serviceUri" arg="$parameters.properties.notifications[].webhooks[].serviceUri"/>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="predictiveAutoscalePolicy">
                      <prop type="duration" name="scaleLookAheadTime" arg="$parameters.properties.predictiveAutoscalePolicy.scaleLookAheadTime"/>
                      <prop type="string" name="scaleMode" arg="$parameters.properties.predictiveAutoscalePolicy.scaleMode" required="True">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;ForecastOnly&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="profiles" arg="$parameters.properties.profiles" required="True">
                      <item type="object">
                        <prop type="object" name="capacity" arg="$parameters.properties.profiles[].capacity" required="True">
                          <prop type="string" name="default" arg="$parameters.properties.profiles[].capacity.default" required="True"/>
                          <prop type="string" name="maximum" arg="$parameters.properties.profiles[].capacity.maximum" required="True"/>
                          <prop type="string" name="minimum" arg="$parameters.properties.profiles[].capacity.minimum" required="True"/>
                        </prop>
                        <prop type="object" name="fixedDate" arg="$parameters.properties.profiles[].fixedDate">
                          <prop type="dateTime" name="end" arg="$parameters.properties.profiles[].fixedDate.end" required="True"/>
                          <prop type="dateTime" name="start" arg="$parameters.properties.profiles[].fixedDate.start" required="True"/>
                          <prop type="string" name="timeZone" arg="$parameters.properties.profiles[].fixedDate.timeZone"/>
                        </prop>
                        <prop type="string" name="name" arg="$parameters.properties.profiles[].name" required="True"/>
                        <prop type="object" name="recurrence" arg="$parameters.properties.profiles[].recurrence">
                          <prop type="string" name="frequency" arg="$parameters.properties.profiles[].recurrence.frequency" required="True">
                            <enum>
                              <item value="&quot;Day&quot;"/>
                              <item value="&quot;Hour&quot;"/>
                              <item value="&quot;Minute&quot;"/>
                              <item value="&quot;Month&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;Second&quot;"/>
                              <item value="&quot;Week&quot;"/>
                              <item value="&quot;Year&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="schedule" arg="$parameters.properties.profiles[].recurrence.schedule" required="True">
                            <prop type="array<string>" name="days" arg="$parameters.properties.profiles[].recurrence.schedule.days" required="True">
                              <item type="string"/>
                            </prop>
                            <prop type="array<integer32>" name="hours" arg="$parameters.properties.profiles[].recurrence.schedule.hours" required="True">
                              <item type="integer32"/>
                            </prop>
                            <prop type="array<integer32>" name="minutes" arg="$parameters.properties.profiles[].recurrence.schedule.minutes" required="True">
                              <item type="integer32"/>
                            </prop>
                            <prop type="string" name="timeZone" arg="$parameters.properties.profiles[].recurrence.schedule.timeZone" required="True"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="rules" arg="$parameters.properties.profiles[].rules" required="True">
                          <item type="object">
                            <prop type="object" name="metricTrigger" arg="$parameters.properties.profiles[].rules[].metricTrigger" required="True">
                              <prop type="array<object>" name="dimensions" arg="$parameters.properties.profiles[].rules[].metricTrigger.dimensions">
                                <item type="object">
                                  <prop type="string" name="DimensionName" arg="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].DimensionName" required="True"/>
                                  <prop type="string" name="Operator" arg="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].Operator" required="True">
                                    <enum>
                                      <item value="&quot;Equals&quot;"/>
                                      <item value="&quot;NotEquals&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="array<string>" name="Values" arg="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].Values" required="True">
                                    <item type="string"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="dividePerInstance" arg="$parameters.properties.profiles[].rules[].metricTrigger.dividePerInstance"/>
                              <prop type="string" name="metricName" arg="$parameters.properties.profiles[].rules[].metricTrigger.metricName" required="True"/>
                              <prop type="string" name="metricNamespace" arg="$parameters.properties.profiles[].rules[].metricTrigger.metricNamespace"/>
                              <prop type="string" name="metricResourceLocation" arg="$parameters.properties.profiles[].rules[].metricTrigger.metricResourceLocation"/>
                              <prop type="string" name="metricResourceUri" arg="$parameters.properties.profiles[].rules[].metricTrigger.metricResourceUri" required="True"/>
                              <prop type="string" name="operator" arg="$parameters.properties.profiles[].rules[].metricTrigger.operator" required="True">
                                <enum>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;GreaterThanOrEqual&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                  <item value="&quot;LessThanOrEqual&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="statistic" arg="$parameters.properties.profiles[].rules[].metricTrigger.statistic" required="True">
                                <enum>
                                  <item value="&quot;Average&quot;"/>
                                  <item value="&quot;Count&quot;"/>
                                  <item value="&quot;Max&quot;"/>
                                  <item value="&quot;Min&quot;"/>
                                  <item value="&quot;Sum&quot;"/>
                                </enum>
                              </prop>
                              <prop type="float64" name="threshold" arg="$parameters.properties.profiles[].rules[].metricTrigger.threshold" required="True"/>
                              <prop type="string" name="timeAggregation" arg="$parameters.properties.profiles[].rules[].metricTrigger.timeAggregation" required="True">
                                <enum>
                                  <item value="&quot;Average&quot;"/>
                                  <item value="&quot;Count&quot;"/>
                                  <item value="&quot;Last&quot;"/>
                                  <item value="&quot;Maximum&quot;"/>
                                  <item value="&quot;Minimum&quot;"/>
                                  <item value="&quot;Total&quot;"/>
                                </enum>
                              </prop>
                              <prop type="duration" name="timeGrain" arg="$parameters.properties.profiles[].rules[].metricTrigger.timeGrain" required="True"/>
                              <prop type="duration" name="timeWindow" arg="$parameters.properties.profiles[].rules[].metricTrigger.timeWindow" required="True"/>
                            </prop>
                            <prop type="object" name="scaleAction" arg="$parameters.properties.profiles[].rules[].scaleAction" required="True">
                              <prop type="duration" name="cooldown" arg="$parameters.properties.profiles[].rules[].scaleAction.cooldown" required="True"/>
                              <prop type="string" name="direction" arg="$parameters.properties.profiles[].rules[].scaleAction.direction" required="True">
                                <enum>
                                  <item value="&quot;Decrease&quot;"/>
                                  <item value="&quot;Increase&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type" arg="$parameters.properties.profiles[].rules[].scaleAction.type" required="True">
                                <enum>
                                  <item value="&quot;ChangeCount&quot;"/>
                                  <item value="&quot;ExactCount&quot;"/>
                                  <item value="&quot;PercentChangeCount&quot;"/>
                                  <item value="&quot;ServiceAllowedNextValue&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="value" arg="$parameters.properties.profiles[].rules[].scaleAction.value">
                                <default value="&quot;1&quot;"/>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="targetResourceLocation" arg="$parameters.properties.targetResourceLocation"/>
                    <prop type="string" name="targetResourceUri" arg="$parameters.properties.targetResourceUri"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourcegroups/{}/providers/Microsoft.Insights/autoscalesettings/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="boolean" name="enabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="array<object>" name="notifications">
                      <item type="object">
                        <prop type="object" name="email">
                          <prop type="array<string>" name="customEmails">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="sendToSubscriptionAdministrator">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="sendToSubscriptionCoAdministrators">
                            <default value="false"/>
                          </prop>
                        </prop>
                        <prop type="string" name="operation" required="True">
                          <enum>
                            <item value="&quot;Scale&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="webhooks">
                          <item type="object">
                            <prop type="object" name="properties">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="serviceUri"/>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="predictiveAutoscalePolicy">
                      <prop type="duration" name="scaleLookAheadTime"/>
                      <prop type="string" name="scaleMode" required="True">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;ForecastOnly&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="profiles" required="True">
                      <item type="object">
                        <prop type="object" name="capacity" required="True">
                          <prop type="string" name="default" required="True"/>
                          <prop type="string" name="maximum" required="True"/>
                          <prop type="string" name="minimum" required="True"/>
                        </prop>
                        <prop type="object" name="fixedDate">
                          <prop type="dateTime" name="end" required="True"/>
                          <prop type="dateTime" name="start" required="True"/>
                          <prop type="string" name="timeZone"/>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="object" name="recurrence">
                          <prop type="string" name="frequency" required="True">
                            <enum>
                              <item value="&quot;Day&quot;"/>
                              <item value="&quot;Hour&quot;"/>
                              <item value="&quot;Minute&quot;"/>
                              <item value="&quot;Month&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;Second&quot;"/>
                              <item value="&quot;Week&quot;"/>
                              <item value="&quot;Year&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="schedule" required="True">
                            <prop type="array<string>" name="days" required="True">
                              <item type="string"/>
                            </prop>
                            <prop type="array<integer32>" name="hours" required="True">
                              <item type="integer32"/>
                            </prop>
                            <prop type="array<integer32>" name="minutes" required="True">
                              <item type="integer32"/>
                            </prop>
                            <prop type="string" name="timeZone" required="True"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="rules" required="True">
                          <item type="object">
                            <prop type="object" name="metricTrigger" required="True">
                              <prop type="array<object>" name="dimensions">
                                <item type="object">
                                  <prop type="string" name="DimensionName" required="True"/>
                                  <prop type="string" name="Operator" required="True">
                                    <enum>
                                      <item value="&quot;Equals&quot;"/>
                                      <item value="&quot;NotEquals&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="array<string>" name="Values" required="True">
                                    <item type="string"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="dividePerInstance"/>
                              <prop type="string" name="metricName" required="True"/>
                              <prop type="string" name="metricNamespace"/>
                              <prop type="string" name="metricResourceLocation"/>
                              <prop type="string" name="metricResourceUri" required="True"/>
                              <prop type="string" name="operator" required="True">
                                <enum>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;GreaterThanOrEqual&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                  <item value="&quot;LessThanOrEqual&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="statistic" required="True">
                                <enum>
                                  <item value="&quot;Average&quot;"/>
                                  <item value="&quot;Count&quot;"/>
                                  <item value="&quot;Max&quot;"/>
                                  <item value="&quot;Min&quot;"/>
                                  <item value="&quot;Sum&quot;"/>
                                </enum>
                              </prop>
                              <prop type="float64" name="threshold" required="True"/>
                              <prop type="string" name="timeAggregation" required="True">
                                <enum>
                                  <item value="&quot;Average&quot;"/>
                                  <item value="&quot;Count&quot;"/>
                                  <item value="&quot;Last&quot;"/>
                                  <item value="&quot;Maximum&quot;"/>
                                  <item value="&quot;Minimum&quot;"/>
                                  <item value="&quot;Total&quot;"/>
                                </enum>
                              </prop>
                              <prop type="duration" name="timeGrain" required="True"/>
                              <prop type="duration" name="timeWindow" required="True"/>
                            </prop>
                            <prop type="object" name="scaleAction" required="True">
                              <prop type="duration" name="cooldown" required="True"/>
                              <prop type="string" name="direction" required="True">
                                <enum>
                                  <item value="&quot;Decrease&quot;"/>
                                  <item value="&quot;Increase&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type" required="True">
                                <enum>
                                  <item value="&quot;ChangeCount&quot;"/>
                                  <item value="&quot;ExactCount&quot;"/>
                                  <item value="&quot;PercentChangeCount&quot;"/>
                                  <item value="&quot;ServiceAllowedNextValue&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="value">
                                <default value="&quot;1&quot;"/>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="targetResourceLocation"/>
                    <prop type="string" name="targetResourceUri"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-10-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/autoscalesettings/{}" version="2022-10-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZWdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvYXV0b3NjYWxlc2V0dGluZ3Mve2F1dG9zY2FsZVNldHRpbmdOYW1lfQ==/V/MjAyMi0xMC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.autoscaleSettingName" options="autoscale-name name n" required="True" group="" idPart="name">
          <help short="The autoscale setting name."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="boolean" var="$parameters.properties.enabled" options="enabled" group="">
          <help short="the enabled flag. Specifies whether automatic scaling is enabled for the resource. The default value is 'false'."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater in length than 128 characters and a value no greater in length than 256 characters."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Predictive Policy">
        <arg nullable="True" type="duration" var="$parameters.properties.predictiveAutoscalePolicy.scaleLookAheadTime" options="scale-look-ahead-time" group="Predictive Policy">
          <help short="the amount of time to specify by which instances are launched in advance. It must be between 1 minute and 60 minutes in ISO 8601 format (for example, 100 days would be P100D)."/>
        </arg>
        <arg type="string" var="$parameters.properties.predictiveAutoscalePolicy.scaleMode" options="scale-mode" group="Predictive Policy">
          <help short="the predictive autoscale mode"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
            <item name="ForecastOnly" value="&quot;ForecastOnly&quot;"/>
          </enum>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$parameters.properties.notifications" options="notifications" group="Properties">
          <help short="the collection of notifications."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="object" var="$parameters.properties.notifications[].email" options="email">
              <help short="the email notification."/>
              <arg nullable="True" type="array<string>" var="$parameters.properties.notifications[].email.customEmails" options="custom-emails">
                <help short="the custom e-mails list. This value can be null or empty, in which case this attribute will be ignored."/>
                <item nullable="True" type="string"/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.notifications[].email.sendToSubscriptionAdministrator" options="send-to-subscription-administrator">
                <help short="a value indicating whether to send email to subscription administrator."/>
              </arg>
              <arg nullable="True" type="boolean" var="$parameters.properties.notifications[].email.sendToSubscriptionCoAdministrators" options="send-to-subscription-co-administrators">
                <help short="a value indicating whether to send email to subscription co-administrators."/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.notifications[].operation" options="operation">
              <help short="the operation associated with the notification and its value must be &quot;scale&quot;"/>
              <enum>
                <item name="Scale" value="&quot;Scale&quot;"/>
              </enum>
            </arg>
            <arg nullable="True" type="array<object>" var="$parameters.properties.notifications[].webhooks" options="webhooks">
              <help short="the collection of webhook notifications."/>
              <item nullable="True" type="object">
                <arg nullable="True" type="object" var="$parameters.properties.notifications[].webhooks[].properties" options="properties">
                  <help short="a property bag of settings. This value can be empty."/>
                  <additionalProp>
                    <item nullable="True" type="string"/>
                  </additionalProp>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.notifications[].webhooks[].serviceUri" options="service-uri">
                  <help short="the service address to receive the notification."/>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$parameters.properties.profiles" options="profiles" group="Properties">
          <help short="the collection of automatic scaling profiles that specify different scaling parameters for different time periods. A maximum of 20 profiles can be specified."/>
          <item nullable="True" type="object">
            <arg type="object" var="$parameters.properties.profiles[].capacity" options="capacity">
              <help short="the number of instances that can be used during this profile."/>
              <arg type="string" var="$parameters.properties.profiles[].capacity.default" options="default">
                <help short="the number of instances that will be set if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default."/>
              </arg>
              <arg type="string" var="$parameters.properties.profiles[].capacity.maximum" options="maximum">
                <help short="the maximum number of instances for the resource. The actual maximum number of instances is limited by the cores that are available in the subscription."/>
              </arg>
              <arg type="string" var="$parameters.properties.profiles[].capacity.minimum" options="minimum">
                <help short="the minimum number of instances for the resource."/>
              </arg>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.profiles[].fixedDate" options="fixed-date">
              <help short="the specific date-time for the profile. This element is not used if the Recurrence element is used."/>
              <arg type="dateTime" var="$parameters.properties.profiles[].fixedDate.end" options="end">
                <help short="the end time for the profile in ISO 8601 format."/>
              </arg>
              <arg type="dateTime" var="$parameters.properties.profiles[].fixedDate.start" options="start">
                <help short="the start time for the profile in ISO 8601 format."/>
              </arg>
              <arg nullable="True" type="string" var="$parameters.properties.profiles[].fixedDate.timeZone" options="time-zone">
                <help short="the timezone of the start and end times for the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands Standard Time"/>
              </arg>
            </arg>
            <arg type="string" var="$parameters.properties.profiles[].name" options="name">
              <help short="the name of the profile."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.profiles[].recurrence" options="recurrence">
              <help short="the repeating times at which this profile begins. This element is not used if the FixedDate element is used."/>
              <arg type="string" var="$parameters.properties.profiles[].recurrence.frequency" options="frequency">
                <help short="the recurrence frequency. How often the schedule profile should take effect. This value must be Week, meaning each week will have the same set of profiles. For example, to set a daily schedule, set **schedule** to every day of the week. The frequency property specifies that the schedule is repeated weekly."/>
                <enum>
                  <item name="Day" value="&quot;Day&quot;"/>
                  <item name="Hour" value="&quot;Hour&quot;"/>
                  <item name="Minute" value="&quot;Minute&quot;"/>
                  <item name="Month" value="&quot;Month&quot;"/>
                  <item name="None" value="&quot;None&quot;"/>
                  <item name="Second" value="&quot;Second&quot;"/>
                  <item name="Week" value="&quot;Week&quot;"/>
                  <item name="Year" value="&quot;Year&quot;"/>
                </enum>
              </arg>
              <arg type="object" var="$parameters.properties.profiles[].recurrence.schedule" options="schedule">
                <help short="the scheduling constraints for when the profile begins."/>
                <arg type="array<string>" var="$parameters.properties.profiles[].recurrence.schedule.days" options="days">
                  <help short="the collection of days that the profile takes effect on. Possible values are Sunday through Saturday."/>
                  <item nullable="True" type="string"/>
                </arg>
                <arg type="array<integer32>" var="$parameters.properties.profiles[].recurrence.schedule.hours" options="hours">
                  <help short="A collection of hours that the profile takes effect on. Values supported are 0 to 23 on the 24-hour clock (AM/PM times are not supported)."/>
                  <item nullable="True" type="integer32"/>
                </arg>
                <arg type="array<integer32>" var="$parameters.properties.profiles[].recurrence.schedule.minutes" options="minutes">
                  <help short="A collection of minutes at which the profile takes effect at."/>
                  <item nullable="True" type="integer32"/>
                </arg>
                <arg type="string" var="$parameters.properties.profiles[].recurrence.schedule.timeZone" options="time-zone">
                  <help short="the timezone for the hours of the profile. Some examples of valid time zones are: Dateline Standard Time, UTC-11, Hawaiian Standard Time, Alaskan Standard Time, Pacific Standard Time (Mexico), Pacific Standard Time, US Mountain Standard Time, Mountain Standard Time (Mexico), Mountain Standard Time, Central America Standard Time, Central Standard Time, Central Standard Time (Mexico), Canada Central Standard Time, SA Pacific Standard Time, Eastern Standard Time, US Eastern Standard Time, Venezuela Standard Time, Paraguay Standard Time, Atlantic Standard Time, Central Brazilian Standard Time, SA Western Standard Time, Pacific SA Standard Time, Newfoundland Standard Time, E. South America Standard Time, Argentina Standard Time, SA Eastern Standard Time, Greenland Standard Time, Montevideo Standard Time, Bahia Standard Time, UTC-02, Mid-Atlantic Standard Time, Azores Standard Time, Cape Verde Standard Time, Morocco Standard Time, UTC, GMT Standard Time, Greenwich Standard Time, W. Europe Standard Time, Central Europe Standard Time, Romance Standard Time, Central European Standard Time, W. Central Africa Standard Time, Namibia Standard Time, Jordan Standard Time, GTB Standard Time, Middle East Standard Time, Egypt Standard Time, Syria Standard Time, E. Europe Standard Time, South Africa Standard Time, FLE Standard Time, Turkey Standard Time, Israel Standard Time, Kaliningrad Standard Time, Libya Standard Time, Arabic Standard Time, Arab Standard Time, Belarus Standard Time, Russian Standard Time, E. Africa Standard Time, Iran Standard Time, Arabian Standard Time, Azerbaijan Standard Time, Russia Time Zone 3, Mauritius Standard Time, Georgian Standard Time, Caucasus Standard Time, Afghanistan Standard Time, West Asia Standard Time, Ekaterinburg Standard Time, Pakistan Standard Time, India Standard Time, Sri Lanka Standard Time, Nepal Standard Time, Central Asia Standard Time, Bangladesh Standard Time, N. Central Asia Standard Time, Myanmar Standard Time, SE Asia Standard Time, North Asia Standard Time, China Standard Time, North Asia East Standard Time, Singapore Standard Time, W. Australia Standard Time, Taipei Standard Time, Ulaanbaatar Standard Time, Tokyo Standard Time, Korea Standard Time, Yakutsk Standard Time, Cen. Australia Standard Time, AUS Central Standard Time, E. Australia Standard Time, AUS Eastern Standard Time, West Pacific Standard Time, Tasmania Standard Time, Magadan Standard Time, Vladivostok Standard Time, Russia Time Zone 10, Central Pacific Standard Time, Russia Time Zone 11, New Zealand Standard Time, UTC+12, Fiji Standard Time, Kamchatka Standard Time, Tonga Standard Time, Samoa Standard Time, Line Islands Standard Time"/>
                </arg>
              </arg>
            </arg>
            <arg type="array<object>" var="$parameters.properties.profiles[].rules" options="rules">
              <help short="the collection of rules that provide the triggers and parameters for the scaling action. A maximum of 10 rules can be specified."/>
              <item nullable="True" type="object">
                <arg type="object" var="$parameters.properties.profiles[].rules[].metricTrigger" options="metric-trigger">
                  <help short="the trigger that results in a scaling action."/>
                  <arg nullable="True" type="array<object>" var="$parameters.properties.profiles[].rules[].metricTrigger.dimensions" options="dimensions">
                    <help short="List of dimension conditions. For example: [{&quot;DimensionName&quot;:&quot;AppName&quot;,&quot;Operator&quot;:&quot;Equals&quot;,&quot;Values&quot;:[&quot;App1&quot;]},{&quot;DimensionName&quot;:&quot;Deployment&quot;,&quot;Operator&quot;:&quot;Equals&quot;,&quot;Values&quot;:[&quot;default&quot;]}]."/>
                    <item nullable="True" type="object">
                      <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].DimensionName" options="dimension-name">
                        <help short="Name of the dimension."/>
                      </arg>
                      <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].Operator" options="operator">
                        <help short="the dimension operator. Only 'Equals' and 'NotEquals' are supported. 'Equals' being equal to any of the values. 'NotEquals' being not equal to all of the values"/>
                        <enum>
                          <item name="Equals" value="&quot;Equals&quot;"/>
                          <item name="NotEquals" value="&quot;NotEquals&quot;"/>
                        </enum>
                      </arg>
                      <arg type="array<string>" var="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].Values" options="values">
                        <help short="list of dimension values. For example: [&quot;App1&quot;,&quot;App2&quot;]."/>
                        <item nullable="True" type="string"/>
                      </arg>
                    </item>
                  </arg>
                  <arg nullable="True" type="boolean" var="$parameters.properties.profiles[].rules[].metricTrigger.dividePerInstance" options="divide-per-instance">
                    <help short="a value indicating whether metric should divide per instance."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.metricName" options="metric-name">
                    <help short="the name of the metric that defines what the rule monitors."/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.metricNamespace" options="metric-namespace">
                    <help short="the namespace of the metric that defines what the rule monitors."/>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.metricResourceLocation" options="metric-resource-location">
                    <help short="the location of the resource the rule monitors."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.metricResourceUri" options="metric-resource-uri">
                    <help short="the resource identifier of the resource the rule monitors."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.operator" options="operator">
                    <help short="the operator that is used to compare the metric data and the threshold."/>
                    <enum>
                      <item name="Equals" value="&quot;Equals&quot;"/>
                      <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                      <item name="GreaterThanOrEqual" value="&quot;GreaterThanOrEqual&quot;"/>
                      <item name="LessThan" value="&quot;LessThan&quot;"/>
                      <item name="LessThanOrEqual" value="&quot;LessThanOrEqual&quot;"/>
                      <item name="NotEquals" value="&quot;NotEquals&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.statistic" options="statistic">
                    <help short="the metric statistic type. How the metrics from multiple instances are combined."/>
                    <enum>
                      <item name="Average" value="&quot;Average&quot;"/>
                      <item name="Count" value="&quot;Count&quot;"/>
                      <item name="Max" value="&quot;Max&quot;"/>
                      <item name="Min" value="&quot;Min&quot;"/>
                      <item name="Sum" value="&quot;Sum&quot;"/>
                    </enum>
                  </arg>
                  <arg type="float64" var="$parameters.properties.profiles[].rules[].metricTrigger.threshold" options="threshold">
                    <help short="the threshold of the metric that triggers the scale action."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].metricTrigger.timeAggregation" options="time-aggregation">
                    <help short="time aggregation type. How the data that is collected should be combined over time. The default value is Average."/>
                    <enum>
                      <item name="Average" value="&quot;Average&quot;"/>
                      <item name="Count" value="&quot;Count&quot;"/>
                      <item name="Last" value="&quot;Last&quot;"/>
                      <item name="Maximum" value="&quot;Maximum&quot;"/>
                      <item name="Minimum" value="&quot;Minimum&quot;"/>
                      <item name="Total" value="&quot;Total&quot;"/>
                    </enum>
                  </arg>
                  <arg type="duration" var="$parameters.properties.profiles[].rules[].metricTrigger.timeGrain" options="time-grain">
                    <help short="the granularity of metrics the rule monitors. Must be one of the predefined values returned from metric definitions for the metric. Must be between 12 hours and 1 minute."/>
                  </arg>
                  <arg type="duration" var="$parameters.properties.profiles[].rules[].metricTrigger.timeWindow" options="time-window">
                    <help short="the range of time in which instance data is collected. This value must be greater than the delay in metric collection, which can vary from resource-to-resource. Must be between 12 hours and 5 minutes."/>
                  </arg>
                </arg>
                <arg type="object" var="$parameters.properties.profiles[].rules[].scaleAction" options="scale-action">
                  <help short="the parameters for the scaling action."/>
                  <arg type="duration" var="$parameters.properties.profiles[].rules[].scaleAction.cooldown" options="cooldown">
                    <help short="the amount of time to wait since the last scaling action before this action occurs. It must be between 1 week and 1 minute in ISO 8601 format."/>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].scaleAction.direction" options="direction">
                    <help short="the scale direction. Whether the scaling action increases or decreases the number of instances."/>
                    <enum>
                      <item name="Decrease" value="&quot;Decrease&quot;"/>
                      <item name="Increase" value="&quot;Increase&quot;"/>
                      <item name="None" value="&quot;None&quot;"/>
                    </enum>
                  </arg>
                  <arg type="string" var="$parameters.properties.profiles[].rules[].scaleAction.type" options="type">
                    <help short="the type of action that should occur when the scale rule fires."/>
                    <enum>
                      <item name="ChangeCount" value="&quot;ChangeCount&quot;"/>
                      <item name="ExactCount" value="&quot;ExactCount&quot;"/>
                      <item name="PercentChangeCount" value="&quot;PercentChangeCount&quot;"/>
                      <item name="ServiceAllowedNextValue" value="&quot;ServiceAllowedNextValue&quot;"/>
                    </enum>
                  </arg>
                  <arg nullable="True" type="string" var="$parameters.properties.profiles[].rules[].scaleAction.value" options="value">
                    <help short="the number of instances that are involved in the scaling action. This value must be 1 or greater. The default value is 1."/>
                  </arg>
                </arg>
              </item>
            </arg>
          </item>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.targetResourceLocation" options="target-resource-location" group="Properties">
          <help short="the location of the resource that the autoscale setting should be added to."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.targetResourceUri" options="target-resource-uri" group="Properties">
          <help short="the resource identifier of the resource that the autoscale setting should be added to."/>
        </arg>
      </argGroup>
      <operation operationId="AutoscaleSettings_Get">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}">
          <request method="get">
            <path>
              <param type="string" name="autoscaleSettingName" arg="$Path.autoscaleSettingName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="AutoscaleSettingResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourcegroups/{}/providers/Microsoft.Insights/autoscalesettings/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="boolean" name="enabled">
                      <default value="false"/>
                    </prop>
                    <prop type="string" name="name"/>
                    <prop type="array<object>" name="notifications">
                      <item type="object">
                        <prop type="object" name="email">
                          <prop type="array<string>" name="customEmails">
                            <item type="string"/>
                          </prop>
                          <prop type="boolean" name="sendToSubscriptionAdministrator">
                            <default value="false"/>
                          </prop>
                          <prop type="boolean" name="sendToSubscriptionCoAdministrators">
                            <default value="false"/>
                          </prop>
                        </prop>
                        <prop type="string" name="operation" required="True">
                          <enum>
                            <item value="&quot;Scale&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="webhooks">
                          <item type="object">
                            <prop type="object" name="properties">
                              <additionalProp>
                                <item type="string"/>
                              </additionalProp>
                            </prop>
                            <prop type="string" name="serviceUri"/>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="object" name="predictiveAutoscalePolicy">
                      <prop type="duration" name="scaleLookAheadTime"/>
                      <prop type="string" name="scaleMode" required="True">
                        <enum>
                          <item value="&quot;Disabled&quot;"/>
                          <item value="&quot;Enabled&quot;"/>
                          <item value="&quot;ForecastOnly&quot;"/>
                        </enum>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="profiles" required="True">
                      <item type="object">
                        <prop type="object" name="capacity" required="True">
                          <prop type="string" name="default" required="True"/>
                          <prop type="string" name="maximum" required="True"/>
                          <prop type="string" name="minimum" required="True"/>
                        </prop>
                        <prop type="object" name="fixedDate">
                          <prop type="dateTime" name="end" required="True"/>
                          <prop type="dateTime" name="start" required="True"/>
                          <prop type="string" name="timeZone"/>
                        </prop>
                        <prop type="string" name="name" required="True"/>
                        <prop type="object" name="recurrence">
                          <prop type="string" name="frequency" required="True">
                            <enum>
                              <item value="&quot;Day&quot;"/>
                              <item value="&quot;Hour&quot;"/>
                              <item value="&quot;Minute&quot;"/>
                              <item value="&quot;Month&quot;"/>
                              <item value="&quot;None&quot;"/>
                              <item value="&quot;Second&quot;"/>
                              <item value="&quot;Week&quot;"/>
                              <item value="&quot;Year&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="schedule" required="True">
                            <prop type="array<string>" name="days" required="True">
                              <item type="string"/>
                            </prop>
                            <prop type="array<integer32>" name="hours" required="True">
                              <item type="integer32"/>
                            </prop>
                            <prop type="array<integer32>" name="minutes" required="True">
                              <item type="integer32"/>
                            </prop>
                            <prop type="string" name="timeZone" required="True"/>
                          </prop>
                        </prop>
                        <prop type="array<object>" name="rules" required="True">
                          <item type="object">
                            <prop type="object" name="metricTrigger" required="True">
                              <prop type="array<object>" name="dimensions">
                                <item type="object">
                                  <prop type="string" name="DimensionName" required="True"/>
                                  <prop type="string" name="Operator" required="True">
                                    <enum>
                                      <item value="&quot;Equals&quot;"/>
                                      <item value="&quot;NotEquals&quot;"/>
                                    </enum>
                                  </prop>
                                  <prop type="array<string>" name="Values" required="True">
                                    <item type="string"/>
                                  </prop>
                                </item>
                              </prop>
                              <prop type="boolean" name="dividePerInstance"/>
                              <prop type="string" name="metricName" required="True"/>
                              <prop type="string" name="metricNamespace"/>
                              <prop type="string" name="metricResourceLocation"/>
                              <prop type="string" name="metricResourceUri" required="True"/>
                              <prop type="string" name="operator" required="True">
                                <enum>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;GreaterThanOrEqual&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                  <item value="&quot;LessThanOrEqual&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="statistic" required="True">
                                <enum>
                                  <item value="&quot;Average&quot;"/>
                                  <item value="&quot;Count&quot;"/>
                                  <item value="&quot;Max&quot;"/>
                                  <item value="&quot;Min&quot;"/>
                                  <item value="&quot;Sum&quot;"/>
                                </enum>
                              </prop>
                              <prop type="float64" name="threshold" required="True"/>
                              <prop type="string" name="timeAggregation" required="True">
                                <enum>
                                  <item value="&quot;Average&quot;"/>
                                  <item value="&quot;Count&quot;"/>
                                  <item value="&quot;Last&quot;"/>
                                  <item value="&quot;Maximum&quot;"/>
                                  <item value="&quot;Minimum&quot;"/>
                                  <item value="&quot;Total&quot;"/>
                                </enum>
                              </prop>
                              <prop type="duration" name="timeGrain" required="True"/>
                              <prop type="duration" name="timeWindow" required="True"/>
                            </prop>
                            <prop type="object" name="scaleAction" required="True">
                              <prop type="duration" name="cooldown" required="True"/>
                              <prop type="string" name="direction" required="True">
                                <enum>
                                  <item value="&quot;Decrease&quot;"/>
                                  <item value="&quot;Increase&quot;"/>
                                  <item value="&quot;None&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="type" required="True">
                                <enum>
                                  <item value="&quot;ChangeCount&quot;"/>
                                  <item value="&quot;ExactCount&quot;"/>
                                  <item value="&quot;PercentChangeCount&quot;"/>
                                  <item value="&quot;ServiceAllowedNextValue&quot;"/>
                                </enum>
                              </prop>
                              <prop type="string" name="value">
                                <default value="&quot;1&quot;"/>
                              </prop>
                            </prop>
                          </item>
                        </prop>
                      </item>
                    </prop>
                    <prop type="string" name="targetResourceLocation"/>
                    <prop type="string" name="targetResourceUri"/>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData" cls="SystemData_read">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="boolean" name="enabled" arg="$parameters.properties.enabled">
                  <default value="false"/>
                </prop>
                <prop type="string" name="name" arg="$Path.autoscaleSettingName"/>
                <prop type="array<object>" name="notifications" arg="$parameters.properties.notifications">
                  <item type="object">
                    <prop type="object" name="email" arg="$parameters.properties.notifications[].email">
                      <prop type="array<string>" name="customEmails" arg="$parameters.properties.notifications[].email.customEmails">
                        <item type="string"/>
                      </prop>
                      <prop type="boolean" name="sendToSubscriptionAdministrator" arg="$parameters.properties.notifications[].email.sendToSubscriptionAdministrator">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="sendToSubscriptionCoAdministrators" arg="$parameters.properties.notifications[].email.sendToSubscriptionCoAdministrators">
                        <default value="false"/>
                      </prop>
                    </prop>
                    <prop type="string" name="operation" arg="$parameters.properties.notifications[].operation" required="True">
                      <enum>
                        <item value="&quot;Scale&quot;"/>
                      </enum>
                    </prop>
                    <prop type="array<object>" name="webhooks" arg="$parameters.properties.notifications[].webhooks">
                      <item type="object">
                        <prop type="object" name="properties" arg="$parameters.properties.notifications[].webhooks[].properties">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                        <prop type="string" name="serviceUri" arg="$parameters.properties.notifications[].webhooks[].serviceUri"/>
                      </item>
                    </prop>
                  </item>
                </prop>
                <prop type="object" name="predictiveAutoscalePolicy">
                  <prop type="duration" name="scaleLookAheadTime" arg="$parameters.properties.predictiveAutoscalePolicy.scaleLookAheadTime"/>
                  <prop type="string" name="scaleMode" arg="$parameters.properties.predictiveAutoscalePolicy.scaleMode" required="True">
                    <enum>
                      <item value="&quot;Disabled&quot;"/>
                      <item value="&quot;Enabled&quot;"/>
                      <item value="&quot;ForecastOnly&quot;"/>
                    </enum>
                  </prop>
                </prop>
                <prop type="array<object>" name="profiles" arg="$parameters.properties.profiles" required="True">
                  <item type="object">
                    <prop type="object" name="capacity" arg="$parameters.properties.profiles[].capacity" required="True">
                      <prop type="string" name="default" arg="$parameters.properties.profiles[].capacity.default" required="True"/>
                      <prop type="string" name="maximum" arg="$parameters.properties.profiles[].capacity.maximum" required="True"/>
                      <prop type="string" name="minimum" arg="$parameters.properties.profiles[].capacity.minimum" required="True"/>
                    </prop>
                    <prop type="object" name="fixedDate" arg="$parameters.properties.profiles[].fixedDate">
                      <prop type="dateTime" name="end" arg="$parameters.properties.profiles[].fixedDate.end" required="True"/>
                      <prop type="dateTime" name="start" arg="$parameters.properties.profiles[].fixedDate.start" required="True"/>
                      <prop type="string" name="timeZone" arg="$parameters.properties.profiles[].fixedDate.timeZone"/>
                    </prop>
                    <prop type="string" name="name" arg="$parameters.properties.profiles[].name" required="True"/>
                    <prop type="object" name="recurrence" arg="$parameters.properties.profiles[].recurrence">
                      <prop type="string" name="frequency" arg="$parameters.properties.profiles[].recurrence.frequency" required="True">
                        <enum>
                          <item value="&quot;Day&quot;"/>
                          <item value="&quot;Hour&quot;"/>
                          <item value="&quot;Minute&quot;"/>
                          <item value="&quot;Month&quot;"/>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;Second&quot;"/>
                          <item value="&quot;Week&quot;"/>
                          <item value="&quot;Year&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="schedule" arg="$parameters.properties.profiles[].recurrence.schedule" required="True">
                        <prop type="array<string>" name="days" arg="$parameters.properties.profiles[].recurrence.schedule.days" required="True">
                          <item type="string"/>
                        </prop>
                        <prop type="array<integer32>" name="hours" arg="$parameters.properties.profiles[].recurrence.schedule.hours" required="True">
                          <item type="integer32"/>
                        </prop>
                        <prop type="array<integer32>" name="minutes" arg="$parameters.properties.profiles[].recurrence.schedule.minutes" required="True">
                          <item type="integer32"/>
                        </prop>
                        <prop type="string" name="timeZone" arg="$parameters.properties.profiles[].recurrence.schedule.timeZone" required="True"/>
                      </prop>
                    </prop>
                    <prop type="array<object>" name="rules" arg="$parameters.properties.profiles[].rules" required="True">
                      <item type="object">
                        <prop type="object" name="metricTrigger" arg="$parameters.properties.profiles[].rules[].metricTrigger" required="True">
                          <prop type="array<object>" name="dimensions" arg="$parameters.properties.profiles[].rules[].metricTrigger.dimensions">
                            <item type="object">
                              <prop type="string" name="DimensionName" arg="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].DimensionName" required="True"/>
                              <prop type="string" name="Operator" arg="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].Operator" required="True">
                                <enum>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;NotEquals&quot;"/>
                                </enum>
                              </prop>
                              <prop type="array<string>" name="Values" arg="$parameters.properties.profiles[].rules[].metricTrigger.dimensions[].Values" required="True">
                                <item type="string"/>
                              </prop>
                            </item>
                          </prop>
                          <prop type="boolean" name="dividePerInstance" arg="$parameters.properties.profiles[].rules[].metricTrigger.dividePerInstance"/>
                          <prop type="string" name="metricName" arg="$parameters.properties.profiles[].rules[].metricTrigger.metricName" required="True"/>
                          <prop type="string" name="metricNamespace" arg="$parameters.properties.profiles[].rules[].metricTrigger.metricNamespace"/>
                          <prop type="string" name="metricResourceLocation" arg="$parameters.properties.profiles[].rules[].metricTrigger.metricResourceLocation"/>
                          <prop type="string" name="metricResourceUri" arg="$parameters.properties.profiles[].rules[].metricTrigger.metricResourceUri" required="True"/>
                          <prop type="string" name="operator" arg="$parameters.properties.profiles[].rules[].metricTrigger.operator" required="True">
                            <enum>
                              <item value="&quot;Equals&quot;"/>
                              <item value="&quot;GreaterThan&quot;"/>
                              <item value="&quot;GreaterThanOrEqual&quot;"/>
                              <item value="&quot;LessThan&quot;"/>
                              <item value="&quot;LessThanOrEqual&quot;"/>
                              <item value="&quot;NotEquals&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="statistic" arg="$parameters.properties.profiles[].rules[].metricTrigger.statistic" required="True">
                            <enum>
                              <item value="&quot;Average&quot;"/>
                              <item value="&quot;Count&quot;"/>
                              <item value="&quot;Max&quot;"/>
                              <item value="&quot;Min&quot;"/>
                              <item value="&quot;Sum&quot;"/>
                            </enum>
                          </prop>
                          <prop type="float64" name="threshold" arg="$parameters.properties.profiles[].rules[].metricTrigger.threshold" required="True"/>
                          <prop type="string" name="timeAggregation" arg="$parameters.properties.profiles[].rules[].metricTrigger.timeAggregation" required="True">
                            <enum>
                              <item value="&quot;Average&quot;"/>
                              <item value="&quot;Count&quot;"/>
                              <item value="&quot;Last&quot;"/>
                              <item value="&quot;Maximum&quot;"/>
                              <item value="&quot;Minimum&quot;"/>
                              <item value="&quot;Total&quot;"/>
                            </enum>
                          </prop>
                          <prop type="duration" name="timeGrain" arg="$parameters.properties.profiles[].rules[].metricTrigger.timeGrain" required="True"/>
                          <prop type="duration" name="timeWindow" arg="$parameters.properties.profiles[].rules[].metricTrigger.timeWindow" required="True"/>
                        </prop>
                        <prop type="object" name="scaleAction" arg="$parameters.properties.profiles[].rules[].scaleAction" required="True">
                          <prop type="duration" name="cooldown" arg="$parameters.properties.profiles[].rules[].scaleAction.cooldown" required="True"/>
                          <prop type="string" name="direction" arg="$parameters.properties.profiles[].rules[].scaleAction.direction" required="True">
                            <enum>
                              <item value="&quot;Decrease&quot;"/>
                              <item value="&quot;Increase&quot;"/>
                              <item value="&quot;None&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="type" arg="$parameters.properties.profiles[].rules[].scaleAction.type" required="True">
                            <enum>
                              <item value="&quot;ChangeCount&quot;"/>
                              <item value="&quot;ExactCount&quot;"/>
                              <item value="&quot;PercentChangeCount&quot;"/>
                              <item value="&quot;ServiceAllowedNextValue&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="value" arg="$parameters.properties.profiles[].rules[].scaleAction.value">
                            <default value="&quot;1&quot;"/>
                          </prop>
                        </prop>
                      </item>
                    </prop>
                  </item>
                </prop>
                <prop type="string" name="targetResourceLocation" arg="$parameters.properties.targetResourceLocation"/>
                <prop type="string" name="targetResourceUri" arg="$parameters.properties.targetResourceUri"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="AutoscaleSettings_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/autoscalesettings/{autoscaleSettingName}">
          <request method="put">
            <path>
              <param type="string" name="autoscaleSettingName" arg="$Path.autoscaleSettingName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-10-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@AutoscaleSettingResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
