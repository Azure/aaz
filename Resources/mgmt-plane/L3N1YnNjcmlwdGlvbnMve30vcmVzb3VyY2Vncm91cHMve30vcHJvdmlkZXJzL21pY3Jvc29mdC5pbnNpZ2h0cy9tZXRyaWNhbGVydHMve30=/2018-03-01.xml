<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/metricalerts/{}" version="2018-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvbWV0cmljQWxlcnRzL3tydWxlTmFtZX0=/V/MjAxOC0wMy0wMQ=="/>
  <commandGroup name="monitor metrics alert">
    <command name="show" version="2018-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/metricalerts/{}" version="2018-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvbWV0cmljQWxlcnRzL3tydWxlTmFtZX0=/V/MjAxOC0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the alert rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="MetricAlerts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleName" arg="$Path.ruleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/metricAlerts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<object>" name="actions" identifiers="actionGroupId">
                      <item type="object">
                        <prop type="string" name="actionGroupId"/>
                        <prop type="object" name="webHookProperties">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="boolean" name="autoMitigate"/>
                    <prop type="object" name="criteria" required="True">
                      <prop type="string" name="odata.type" required="True">
                        <enum>
                          <item value="&quot;Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria&quot;"/>
                          <item value="&quot;Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria&quot;"/>
                          <item value="&quot;Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria">
                        <prop type="array<object>" name="allOf" identifiers="name">
                          <item type="object">
                            <prop type="string" name="criterionType" required="True">
                              <enum>
                                <item value="&quot;DynamicThresholdCriterion&quot;"/>
                                <item value="&quot;StaticThresholdCriterion&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<@MetricDimension_read>" name="dimensions" identifiers="name">
                              <item type="@MetricDimension_read"/>
                            </prop>
                            <prop type="string" name="metricName" required="True"/>
                            <prop type="string" name="metricNamespace"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="boolean" name="skipMetricValidation"/>
                            <prop type="string" name="timeAggregation" required="True">
                              <enum>
                                <item value="&quot;Average&quot;"/>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Maximum&quot;"/>
                                <item value="&quot;Minimum&quot;"/>
                                <item value="&quot;Total&quot;"/>
                              </enum>
                            </prop>
                            <discriminator property="criterionType" value="DynamicThresholdCriterion">
                              <prop type="string" name="alertSensitivity" required="True">
                                <enum>
                                  <item value="&quot;High&quot;"/>
                                  <item value="&quot;Low&quot;"/>
                                  <item value="&quot;Medium&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="failingPeriods" required="True">
                                <prop type="float" name="minFailingPeriodsToAlert" required="True"/>
                                <prop type="float" name="numberOfEvaluationPeriods" required="True"/>
                              </prop>
                              <prop type="dateTime" name="ignoreDataBefore"/>
                              <prop type="string" name="operator" required="True">
                                <enum>
                                  <item value="&quot;GreaterOrLessThan&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                </enum>
                              </prop>
                            </discriminator>
                            <discriminator property="criterionType" value="StaticThresholdCriterion">
                              <prop type="string" name="operator" required="True">
                                <enum>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;GreaterThanOrEqual&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                  <item value="&quot;LessThanOrEqual&quot;"/>
                                </enum>
                              </prop>
                              <prop type="float64" name="threshold" required="True"/>
                            </discriminator>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria">
                        <prop type="array<object>" name="allOf" identifiers="name">
                          <item type="object">
                            <prop const="True" type="string" name="criterionType" required="True">
                              <default value="&quot;StaticThresholdCriterion&quot;"/>
                              <enum>
                                <item value="&quot;DynamicThresholdCriterion&quot;"/>
                                <item value="&quot;StaticThresholdCriterion&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<object>" name="dimensions" identifiers="name">
                              <item type="object" cls="MetricDimension_read">
                                <prop type="string" name="name" required="True"/>
                                <prop type="string" name="operator" required="True"/>
                                <prop type="array<string>" name="values" required="True">
                                  <item type="string"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="metricName" required="True"/>
                            <prop type="string" name="metricNamespace"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="operator" required="True">
                              <enum>
                                <item value="&quot;Equals&quot;"/>
                                <item value="&quot;GreaterThan&quot;"/>
                                <item value="&quot;GreaterThanOrEqual&quot;"/>
                                <item value="&quot;LessThan&quot;"/>
                                <item value="&quot;LessThanOrEqual&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="skipMetricValidation"/>
                            <prop type="float64" name="threshold" required="True"/>
                            <prop type="string" name="timeAggregation" required="True">
                              <enum>
                                <item value="&quot;Average&quot;"/>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Maximum&quot;"/>
                                <item value="&quot;Minimum&quot;"/>
                                <item value="&quot;Total&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria">
                        <prop type="string" name="componentId" required="True"/>
                        <prop type="float" name="failedLocationCount" required="True"/>
                        <prop type="string" name="webTestId" required="True"/>
                      </discriminator>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="boolean" name="enabled" required="True"/>
                    <prop type="duration" name="evaluationFrequency" required="True"/>
                    <prop readOnly="True" type="boolean" name="isMigrated"/>
                    <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                    <prop type="array<string>" name="scopes" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="severity" required="True"/>
                    <prop type="string" name="targetResourceRegion"/>
                    <prop type="string" name="targetResourceType"/>
                    <prop type="duration" name="windowSize" required="True"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2018-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/metricalerts/{}" version="2018-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvbWV0cmljQWxlcnRzL3tydWxlTmFtZX0=/V/MjAxOC0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the alert rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="MetricAlerts_Delete">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleName" arg="$Path.ruleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2018-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/metricalerts/{}" version="2018-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvbWV0cmljQWxlcnRzL3tydWxlTmFtZX0=/V/MjAxOC0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the alert rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Parameters">
        <arg type="ResourceLocation" var="$parameters.location" options="location l" required="True" group="Parameters">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$parameters.tags" options="tags" group="Parameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="array<object>" var="$parameters.properties.actions" options="actions" group="Properties">
          <help short="the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved."/>
          <item type="object">
            <arg type="string" var="$parameters.properties.actions[].actionGroupId" options="action-group-id">
              <help short="the id of the action group to use."/>
            </arg>
            <arg type="object" var="$parameters.properties.actions[].webHookProperties" options="web-hook-properties">
              <help short="This field allows specifying custom properties, which would be appended to the alert payload sent as input to the webhook."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg type="boolean" var="$parameters.properties.autoMitigate" options="auto-mitigate" group="Properties">
          <help short="the flag that indicates whether the alert should be auto resolved or not. The default is true."/>
        </arg>
        <arg type="object" var="$parameters.properties.criteria" options="criteria" required="True" group="Properties">
          <help short="defines the specific alert criteria information."/>
          <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria" options="microsoft-azure-monitor-multiple-resource-multiple-metric-criteria">
            <arg type="array<object>" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf" options="all-of">
              <help short="the list of multiple metric criteria for this 'all of' operation. "/>
              <item type="object">
                <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion" options="dynamic-threshold-criterion">
                  <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.alertSensitivity" options="alert-sensitivity" required="True">
                    <help short="The extent of deviation required to trigger an alert. This will affect how tight the threshold is to the metric series pattern."/>
                    <enum>
                      <item name="High" value="&quot;High&quot;"/>
                      <item name="Low" value="&quot;Low&quot;"/>
                      <item name="Medium" value="&quot;Medium&quot;"/>
                    </enum>
                  </arg>
                  <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods" options="failing-periods" required="True">
                    <help short="The minimum number of violations required within the selected lookback time window required to raise an alert."/>
                    <arg type="float" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert" options="min-failing-periods-to-alert" required="True">
                      <help short="The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods."/>
                    </arg>
                    <arg type="float" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods" options="number-of-evaluation-periods" required="True">
                      <help short="The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points."/>
                    </arg>
                  </arg>
                  <arg type="dateTime" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.ignoreDataBefore" options="ignore-data-before">
                    <help short="Use this option to set the date from which to start learning the metric historical data and calculate the dynamic thresholds (in ISO8601 format)"/>
                  </arg>
                  <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.operator" options="operator" required="True">
                    <help short="The operator used to compare the metric value against the threshold."/>
                    <enum>
                      <item name="GreaterOrLessThan" value="&quot;GreaterOrLessThan&quot;"/>
                      <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                      <item name="LessThan" value="&quot;LessThan&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion" options="static-threshold-criterion">
                  <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion.operator" options="operator" required="True">
                    <help short="the criteria operator."/>
                    <enum>
                      <item name="Equals" value="&quot;Equals&quot;"/>
                      <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                      <item name="GreaterThanOrEqual" value="&quot;GreaterThanOrEqual&quot;"/>
                      <item name="LessThan" value="&quot;LessThan&quot;"/>
                      <item name="LessThanOrEqual" value="&quot;LessThanOrEqual&quot;"/>
                    </enum>
                  </arg>
                  <arg type="float64" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion.threshold" options="threshold" required="True">
                    <help short="the criteria threshold value that activates the alert."/>
                  </arg>
                </arg>
                <arg type="array<@MetricDimension_create>" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].dimensions" options="dimensions">
                  <help short="List of dimension conditions."/>
                  <item type="@MetricDimension_create"/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].metricName" options="metric-name" required="True">
                  <help short="Name of the metric."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].metricNamespace" options="metric-namespace">
                  <help short="Namespace of the metric."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].name" options="name" required="True">
                  <help short="Name of the criteria."/>
                </arg>
                <arg type="boolean" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].skipMetricValidation" options="skip-metric-validation">
                  <help short="Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].timeAggregation" options="time-aggregation" required="True">
                  <help short="the criteria time aggregation types."/>
                  <enum>
                    <item name="Average" value="&quot;Average&quot;"/>
                    <item name="Count" value="&quot;Count&quot;"/>
                    <item name="Maximum" value="&quot;Maximum&quot;"/>
                    <item name="Minimum" value="&quot;Minimum&quot;"/>
                    <item name="Total" value="&quot;Total&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria" options="microsoft-azure-monitor-single-resource-multiple-metric-criteria">
            <arg type="array<object>" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf" options="all-of">
              <help short="The list of metric criteria for this 'all of' operation. "/>
              <item type="object">
                <arg type="array<object>" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].dimensions" options="dimensions">
                  <help short="List of dimension conditions."/>
                  <item type="object" cls="MetricDimension_create">
                    <arg type="string" var="@MetricDimension_create.name" options="name" required="True">
                      <help short="Name of the dimension."/>
                    </arg>
                    <arg type="string" var="@MetricDimension_create.operator" options="operator" required="True">
                      <help short="the dimension operator. Only 'Include' and 'Exclude' are supported"/>
                    </arg>
                    <arg type="array<string>" var="@MetricDimension_create.values" options="values" required="True">
                      <help short="list of dimension values."/>
                      <item type="string"/>
                    </arg>
                  </item>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].metricName" options="metric-name" required="True">
                  <help short="Name of the metric."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].metricNamespace" options="metric-namespace">
                  <help short="Namespace of the metric."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].name" options="name" required="True">
                  <help short="Name of the criteria."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].operator" options="operator" required="True">
                  <help short="the criteria operator."/>
                  <enum>
                    <item name="Equals" value="&quot;Equals&quot;"/>
                    <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                    <item name="GreaterThanOrEqual" value="&quot;GreaterThanOrEqual&quot;"/>
                    <item name="LessThan" value="&quot;LessThan&quot;"/>
                    <item name="LessThanOrEqual" value="&quot;LessThanOrEqual&quot;"/>
                  </enum>
                </arg>
                <arg type="boolean" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].skipMetricValidation" options="skip-metric-validation">
                  <help short="Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped."/>
                </arg>
                <arg type="float64" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].threshold" options="threshold" required="True">
                  <help short="the criteria threshold value that activates the alert."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].timeAggregation" options="time-aggregation" required="True">
                  <help short="the criteria time aggregation types."/>
                  <enum>
                    <item name="Average" value="&quot;Average&quot;"/>
                    <item name="Count" value="&quot;Count&quot;"/>
                    <item name="Maximum" value="&quot;Maximum&quot;"/>
                    <item name="Minimum" value="&quot;Minimum&quot;"/>
                    <item name="Total" value="&quot;Total&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria" options="microsoft-azure-monitor-webtest-location-availability-criteria">
            <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.componentId" options="component-id" required="True">
              <help short="The Application Insights resource Id."/>
            </arg>
            <arg type="float" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.failedLocationCount" options="failed-location-count" required="True">
              <help short="The number of failed locations."/>
            </arg>
            <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.webTestId" options="web-test-id" required="True">
              <help short="The Application Insights web test Id."/>
            </arg>
          </arg>
        </arg>
        <arg type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="the description of the metric alert that will be included in the alert email."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enabled" options="enabled" required="True" group="Properties">
          <help short="the flag that indicates whether the metric alert is enabled."/>
        </arg>
        <arg type="duration" var="$parameters.properties.evaluationFrequency" options="evaluation-frequency" required="True" group="Properties">
          <help short="how often the metric alert is evaluated represented in ISO 8601 duration format."/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.scopes" options="scopes" required="True" group="Properties">
          <help short="the list of resource id's that this metric alert is scoped to."/>
          <item type="string"/>
        </arg>
        <arg type="integer32" var="$parameters.properties.severity" options="severity" required="True" group="Properties">
          <help short="Alert severity {0, 1, 2, 3, 4}"/>
        </arg>
        <arg type="string" var="$parameters.properties.targetResourceRegion" options="target-resource-region" group="Properties">
          <help short="the region of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource."/>
        </arg>
        <arg type="string" var="$parameters.properties.targetResourceType" options="target-resource-type" group="Properties">
          <help short="the resource type of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource."/>
        </arg>
        <arg type="duration" var="$parameters.properties.windowSize" options="window-size" required="True" group="Properties">
          <help short="the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold."/>
        </arg>
      </argGroup>
      <operation operationId="MetricAlerts_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleName" arg="$Path.ruleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$parameters.location" required="True"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<object>" name="actions" arg="$parameters.properties.actions" identifiers="actionGroupId">
                      <item type="object">
                        <prop type="string" name="actionGroupId" arg="$parameters.properties.actions[].actionGroupId"/>
                        <prop type="object" name="webHookProperties" arg="$parameters.properties.actions[].webHookProperties">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="boolean" name="autoMitigate" arg="$parameters.properties.autoMitigate"/>
                    <prop type="object" name="criteria" arg="$parameters.properties.criteria" required="True">
                      <prop type="string" name="odata.type" required="True">
                        <enum>
                          <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria" value="&quot;Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria&quot;"/>
                          <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria" value="&quot;Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria&quot;"/>
                          <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria" value="&quot;Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria">
                        <prop type="array<object>" name="allOf" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf" identifiers="name">
                          <item type="object">
                            <prop type="string" name="criterionType" required="True">
                              <enum>
                                <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion" value="&quot;DynamicThresholdCriterion&quot;"/>
                                <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion" value="&quot;StaticThresholdCriterion&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<@MetricDimension_create>" name="dimensions" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].dimensions" identifiers="name">
                              <item type="@MetricDimension_create"/>
                            </prop>
                            <prop type="string" name="metricName" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].metricName" required="True"/>
                            <prop type="string" name="metricNamespace" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].metricNamespace"/>
                            <prop type="string" name="name" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].name" required="True"/>
                            <prop type="boolean" name="skipMetricValidation" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].skipMetricValidation"/>
                            <prop type="string" name="timeAggregation" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].timeAggregation" required="True">
                              <enum>
                                <item value="&quot;Average&quot;"/>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Maximum&quot;"/>
                                <item value="&quot;Minimum&quot;"/>
                                <item value="&quot;Total&quot;"/>
                              </enum>
                            </prop>
                            <discriminator property="criterionType" value="DynamicThresholdCriterion">
                              <prop type="string" name="alertSensitivity" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.alertSensitivity" required="True">
                                <enum>
                                  <item value="&quot;High&quot;"/>
                                  <item value="&quot;Low&quot;"/>
                                  <item value="&quot;Medium&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="failingPeriods" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods" required="True">
                                <prop type="float" name="minFailingPeriodsToAlert" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert" required="True"/>
                                <prop type="float" name="numberOfEvaluationPeriods" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods" required="True"/>
                              </prop>
                              <prop type="dateTime" name="ignoreDataBefore" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.ignoreDataBefore"/>
                              <prop type="string" name="operator" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.operator" required="True">
                                <enum>
                                  <item value="&quot;GreaterOrLessThan&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                </enum>
                              </prop>
                            </discriminator>
                            <discriminator property="criterionType" value="StaticThresholdCriterion">
                              <prop type="string" name="operator" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion.operator" required="True">
                                <enum>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;GreaterThanOrEqual&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                  <item value="&quot;LessThanOrEqual&quot;"/>
                                </enum>
                              </prop>
                              <prop type="float64" name="threshold" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion.threshold" required="True"/>
                            </discriminator>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria">
                        <prop type="array<object>" name="allOf" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf" identifiers="name">
                          <item type="object">
                            <prop const="True" type="string" name="criterionType" required="True">
                              <default value="&quot;StaticThresholdCriterion&quot;"/>
                              <enum>
                                <item value="&quot;DynamicThresholdCriterion&quot;"/>
                                <item value="&quot;StaticThresholdCriterion&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<object>" name="dimensions" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].dimensions" identifiers="name">
                              <item type="object" cls="MetricDimension_create">
                                <prop type="string" name="name" arg="@MetricDimension_create.name" required="True"/>
                                <prop type="string" name="operator" arg="@MetricDimension_create.operator" required="True"/>
                                <prop type="array<string>" name="values" arg="@MetricDimension_create.values" required="True">
                                  <item type="string"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="metricName" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].metricName" required="True"/>
                            <prop type="string" name="metricNamespace" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].metricNamespace"/>
                            <prop type="string" name="name" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].name" required="True"/>
                            <prop type="string" name="operator" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].operator" required="True">
                              <enum>
                                <item value="&quot;Equals&quot;"/>
                                <item value="&quot;GreaterThan&quot;"/>
                                <item value="&quot;GreaterThanOrEqual&quot;"/>
                                <item value="&quot;LessThan&quot;"/>
                                <item value="&quot;LessThanOrEqual&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="skipMetricValidation" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].skipMetricValidation"/>
                            <prop type="float64" name="threshold" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].threshold" required="True"/>
                            <prop type="string" name="timeAggregation" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].timeAggregation" required="True">
                              <enum>
                                <item value="&quot;Average&quot;"/>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Maximum&quot;"/>
                                <item value="&quot;Minimum&quot;"/>
                                <item value="&quot;Total&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria">
                        <prop type="string" name="componentId" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.componentId" required="True"/>
                        <prop type="float" name="failedLocationCount" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.failedLocationCount" required="True"/>
                        <prop type="string" name="webTestId" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.webTestId" required="True"/>
                      </discriminator>
                    </prop>
                    <prop type="string" name="description" arg="$parameters.properties.description"/>
                    <prop type="boolean" name="enabled" arg="$parameters.properties.enabled" required="True"/>
                    <prop type="duration" name="evaluationFrequency" arg="$parameters.properties.evaluationFrequency" required="True"/>
                    <prop type="array<string>" name="scopes" arg="$parameters.properties.scopes" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="severity" arg="$parameters.properties.severity" required="True"/>
                    <prop type="string" name="targetResourceRegion" arg="$parameters.properties.targetResourceRegion"/>
                    <prop type="string" name="targetResourceType" arg="$parameters.properties.targetResourceType"/>
                    <prop type="duration" name="windowSize" arg="$parameters.properties.windowSize" required="True"/>
                  </prop>
                  <prop type="object" name="tags" arg="$parameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/metricAlerts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<object>" name="actions" identifiers="actionGroupId">
                      <item type="object">
                        <prop type="string" name="actionGroupId"/>
                        <prop type="object" name="webHookProperties">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="boolean" name="autoMitigate"/>
                    <prop type="object" name="criteria" required="True">
                      <prop type="string" name="odata.type" required="True">
                        <enum>
                          <item value="&quot;Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria&quot;"/>
                          <item value="&quot;Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria&quot;"/>
                          <item value="&quot;Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria">
                        <prop type="array<object>" name="allOf" identifiers="name">
                          <item type="object">
                            <prop type="string" name="criterionType" required="True">
                              <enum>
                                <item value="&quot;DynamicThresholdCriterion&quot;"/>
                                <item value="&quot;StaticThresholdCriterion&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<@MetricDimension_read>" name="dimensions" identifiers="name">
                              <item type="@MetricDimension_read"/>
                            </prop>
                            <prop type="string" name="metricName" required="True"/>
                            <prop type="string" name="metricNamespace"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="boolean" name="skipMetricValidation"/>
                            <prop type="string" name="timeAggregation" required="True">
                              <enum>
                                <item value="&quot;Average&quot;"/>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Maximum&quot;"/>
                                <item value="&quot;Minimum&quot;"/>
                                <item value="&quot;Total&quot;"/>
                              </enum>
                            </prop>
                            <discriminator property="criterionType" value="DynamicThresholdCriterion">
                              <prop type="string" name="alertSensitivity" required="True">
                                <enum>
                                  <item value="&quot;High&quot;"/>
                                  <item value="&quot;Low&quot;"/>
                                  <item value="&quot;Medium&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="failingPeriods" required="True">
                                <prop type="float" name="minFailingPeriodsToAlert" required="True"/>
                                <prop type="float" name="numberOfEvaluationPeriods" required="True"/>
                              </prop>
                              <prop type="dateTime" name="ignoreDataBefore"/>
                              <prop type="string" name="operator" required="True">
                                <enum>
                                  <item value="&quot;GreaterOrLessThan&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                </enum>
                              </prop>
                            </discriminator>
                            <discriminator property="criterionType" value="StaticThresholdCriterion">
                              <prop type="string" name="operator" required="True">
                                <enum>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;GreaterThanOrEqual&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                  <item value="&quot;LessThanOrEqual&quot;"/>
                                </enum>
                              </prop>
                              <prop type="float64" name="threshold" required="True"/>
                            </discriminator>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria">
                        <prop type="array<object>" name="allOf" identifiers="name">
                          <item type="object">
                            <prop const="True" type="string" name="criterionType" required="True">
                              <default value="&quot;StaticThresholdCriterion&quot;"/>
                              <enum>
                                <item value="&quot;DynamicThresholdCriterion&quot;"/>
                                <item value="&quot;StaticThresholdCriterion&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<object>" name="dimensions" identifiers="name">
                              <item type="object" cls="MetricDimension_read">
                                <prop type="string" name="name" required="True"/>
                                <prop type="string" name="operator" required="True"/>
                                <prop type="array<string>" name="values" required="True">
                                  <item type="string"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="metricName" required="True"/>
                            <prop type="string" name="metricNamespace"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="operator" required="True">
                              <enum>
                                <item value="&quot;Equals&quot;"/>
                                <item value="&quot;GreaterThan&quot;"/>
                                <item value="&quot;GreaterThanOrEqual&quot;"/>
                                <item value="&quot;LessThan&quot;"/>
                                <item value="&quot;LessThanOrEqual&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="skipMetricValidation"/>
                            <prop type="float64" name="threshold" required="True"/>
                            <prop type="string" name="timeAggregation" required="True">
                              <enum>
                                <item value="&quot;Average&quot;"/>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Maximum&quot;"/>
                                <item value="&quot;Minimum&quot;"/>
                                <item value="&quot;Total&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria">
                        <prop type="string" name="componentId" required="True"/>
                        <prop type="float" name="failedLocationCount" required="True"/>
                        <prop type="string" name="webTestId" required="True"/>
                      </discriminator>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="boolean" name="enabled" required="True"/>
                    <prop type="duration" name="evaluationFrequency" required="True"/>
                    <prop readOnly="True" type="boolean" name="isMigrated"/>
                    <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                    <prop type="array<string>" name="scopes" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="severity" required="True"/>
                    <prop type="string" name="targetResourceRegion"/>
                    <prop type="string" name="targetResourceType"/>
                    <prop type="duration" name="windowSize" required="True"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2018-03-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.insights/metricalerts/{}" version="2018-03-01" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuSW5zaWdodHMvbWV0cmljQWxlcnRzL3tydWxlTmFtZX0=/V/MjAxOC0wMy0wMQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.ruleName" options="name n" required="True" group="" idPart="name">
          <help short="Name of the alert rule."/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg nullable="True" type="boolean" var="$parameters.properties.autoMitigate" options="auto-mitigate" group="">
          <help short="Automatically resolve the alert."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.description" options="description" group="">
          <help short="Free-text description of the rule."/>
        </arg>
        <arg type="boolean" var="$parameters.properties.enabled" options="enabled" group="">
          <help short="Whether the metric alert rule is enabled."/>
        </arg>
        <arg type="duration" var="$parameters.properties.evaluationFrequency" options="evaluation-frequency" group="">
          <help short="Frequency with which to evaluate the rule in `##h##m##s` format."/>
        </arg>
        <arg type="array<string>" var="$parameters.properties.scopes" options="scopes" group="">
          <help short="Space-separated list of scopes the rule applies to. The resources specified in this parameter must be of the same type and exist in the same location."/>
          <item nullable="True" type="string"/>
        </arg>
        <arg type="integer32" var="$parameters.properties.severity" options="severity" group="">
          <help short="Severity of the alert from 0 (critical) to 4 (verbose)."/>
        </arg>
        <arg type="duration" var="$parameters.properties.windowSize" options="window-size" group="">
          <help short="Time over which to aggregate metrics in `##h##m##s` format."/>
        </arg>
        <arg nullable="True" type="object" var="$parameters.tags" options="tags" group="">
          <help short="Space-separated tags: key[=value] [key[=value] ...]."/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="array<object>" var="$parameters.properties.actions" options="actions" hide="True" group="Properties">
          <help short="the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved."/>
          <item nullable="True" type="object">
            <arg nullable="True" type="string" var="$parameters.properties.actions[].actionGroupId" options="action-group-id">
              <help short="the id of the action group to use."/>
            </arg>
            <arg nullable="True" type="object" var="$parameters.properties.actions[].webHookProperties" options="web-hook-properties">
              <help short="This field allows specifying custom properties, which would be appended to the alert payload sent as input to the webhook."/>
              <additionalProp>
                <item nullable="True" type="string"/>
              </additionalProp>
            </arg>
          </item>
        </arg>
        <arg type="object" var="$parameters.properties.criteria" options="criteria" hide="True" group="Properties">
          <help short="defines the specific alert criteria information."/>
          <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria" options="microsoft-azure-monitor-multiple-resource-multiple-metric-criteria">
            <arg nullable="True" type="array<object>" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf" options="all-of">
              <help short="the list of multiple metric criteria for this 'all of' operation. "/>
              <item nullable="True" type="object">
                <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion" options="dynamic-threshold-criterion">
                  <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.alertSensitivity" options="alert-sensitivity">
                    <help short="The extent of deviation required to trigger an alert. This will affect how tight the threshold is to the metric series pattern."/>
                    <enum>
                      <item name="High" value="&quot;High&quot;"/>
                      <item name="Low" value="&quot;Low&quot;"/>
                      <item name="Medium" value="&quot;Medium&quot;"/>
                    </enum>
                  </arg>
                  <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods" options="failing-periods">
                    <help short="The minimum number of violations required within the selected lookback time window required to raise an alert."/>
                    <arg type="float" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert" options="min-failing-periods-to-alert">
                      <help short="The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods."/>
                    </arg>
                    <arg type="float" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods" options="number-of-evaluation-periods">
                      <help short="The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points."/>
                    </arg>
                  </arg>
                  <arg nullable="True" type="dateTime" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.ignoreDataBefore" options="ignore-data-before">
                    <help short="Use this option to set the date from which to start learning the metric historical data and calculate the dynamic thresholds (in ISO8601 format)"/>
                  </arg>
                  <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.operator" options="operator">
                    <help short="The operator used to compare the metric value against the threshold."/>
                    <enum>
                      <item name="GreaterOrLessThan" value="&quot;GreaterOrLessThan&quot;"/>
                      <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                      <item name="LessThan" value="&quot;LessThan&quot;"/>
                    </enum>
                  </arg>
                </arg>
                <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion" options="static-threshold-criterion">
                  <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion.operator" options="operator">
                    <help short="the criteria operator."/>
                    <enum>
                      <item name="Equals" value="&quot;Equals&quot;"/>
                      <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                      <item name="GreaterThanOrEqual" value="&quot;GreaterThanOrEqual&quot;"/>
                      <item name="LessThan" value="&quot;LessThan&quot;"/>
                      <item name="LessThanOrEqual" value="&quot;LessThanOrEqual&quot;"/>
                    </enum>
                  </arg>
                  <arg type="float64" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion.threshold" options="threshold">
                    <help short="the criteria threshold value that activates the alert."/>
                  </arg>
                </arg>
                <arg nullable="True" type="array<@MetricDimension_update>" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].dimensions" options="dimensions">
                  <help short="List of dimension conditions."/>
                  <item nullable="True" type="@MetricDimension_update"/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].metricName" options="metric-name">
                  <help short="Name of the metric."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].metricNamespace" options="metric-namespace">
                  <help short="Namespace of the metric."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].name" options="name">
                  <help short="Name of the criteria."/>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].skipMetricValidation" options="skip-metric-validation">
                  <help short="Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].timeAggregation" options="time-aggregation">
                  <help short="the criteria time aggregation types."/>
                  <enum>
                    <item name="Average" value="&quot;Average&quot;"/>
                    <item name="Count" value="&quot;Count&quot;"/>
                    <item name="Maximum" value="&quot;Maximum&quot;"/>
                    <item name="Minimum" value="&quot;Minimum&quot;"/>
                    <item name="Total" value="&quot;Total&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria" options="microsoft-azure-monitor-single-resource-multiple-metric-criteria">
            <arg nullable="True" type="array<object>" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf" options="all-of">
              <help short="The list of metric criteria for this 'all of' operation. "/>
              <item nullable="True" type="object">
                <arg nullable="True" type="array<object>" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].dimensions" options="dimensions">
                  <help short="List of dimension conditions."/>
                  <item nullable="True" type="object" cls="MetricDimension_update">
                    <arg type="string" var="@MetricDimension_update.name" options="name">
                      <help short="Name of the dimension."/>
                    </arg>
                    <arg type="string" var="@MetricDimension_update.operator" options="operator">
                      <help short="the dimension operator. Only 'Include' and 'Exclude' are supported"/>
                    </arg>
                    <arg type="array<string>" var="@MetricDimension_update.values" options="values">
                      <help short="list of dimension values."/>
                      <item nullable="True" type="string"/>
                    </arg>
                  </item>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].metricName" options="metric-name">
                  <help short="Name of the metric."/>
                </arg>
                <arg nullable="True" type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].metricNamespace" options="metric-namespace">
                  <help short="Namespace of the metric."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].name" options="name">
                  <help short="Name of the criteria."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].operator" options="operator">
                  <help short="the criteria operator."/>
                  <enum>
                    <item name="Equals" value="&quot;Equals&quot;"/>
                    <item name="GreaterThan" value="&quot;GreaterThan&quot;"/>
                    <item name="GreaterThanOrEqual" value="&quot;GreaterThanOrEqual&quot;"/>
                    <item name="LessThan" value="&quot;LessThan&quot;"/>
                    <item name="LessThanOrEqual" value="&quot;LessThanOrEqual&quot;"/>
                  </enum>
                </arg>
                <arg nullable="True" type="boolean" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].skipMetricValidation" options="skip-metric-validation">
                  <help short="Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped."/>
                </arg>
                <arg type="float64" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].threshold" options="threshold">
                  <help short="the criteria threshold value that activates the alert."/>
                </arg>
                <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].timeAggregation" options="time-aggregation">
                  <help short="the criteria time aggregation types."/>
                  <enum>
                    <item name="Average" value="&quot;Average&quot;"/>
                    <item name="Count" value="&quot;Count&quot;"/>
                    <item name="Maximum" value="&quot;Maximum&quot;"/>
                    <item name="Minimum" value="&quot;Minimum&quot;"/>
                    <item name="Total" value="&quot;Total&quot;"/>
                  </enum>
                </arg>
              </item>
            </arg>
          </arg>
          <arg type="object" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria" options="microsoft-azure-monitor-webtest-location-availability-criteria">
            <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.componentId" options="component-id">
              <help short="The Application Insights resource Id."/>
            </arg>
            <arg type="float" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.failedLocationCount" options="failed-location-count">
              <help short="The number of failed locations."/>
            </arg>
            <arg type="string" var="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.webTestId" options="web-test-id">
              <help short="The Application Insights web test Id."/>
            </arg>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.targetResourceRegion" options="target-resource-region" hide="True" group="Properties">
          <help short="the region of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.targetResourceType" options="target-resource-type" hide="True" group="Properties">
          <help short="the resource type of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource."/>
        </arg>
      </argGroup>
      <operation operationId="MetricAlerts_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleName" arg="$Path.ruleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="MetricAlertResource_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Insights/metricAlerts/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="array<object>" name="actions" identifiers="actionGroupId">
                      <item type="object">
                        <prop type="string" name="actionGroupId"/>
                        <prop type="object" name="webHookProperties">
                          <additionalProp>
                            <item type="string"/>
                          </additionalProp>
                        </prop>
                      </item>
                    </prop>
                    <prop type="boolean" name="autoMitigate"/>
                    <prop type="object" name="criteria" required="True">
                      <prop type="string" name="odata.type" required="True">
                        <enum>
                          <item value="&quot;Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria&quot;"/>
                          <item value="&quot;Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria&quot;"/>
                          <item value="&quot;Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria&quot;"/>
                        </enum>
                      </prop>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria">
                        <prop type="array<object>" name="allOf" identifiers="name">
                          <item type="object">
                            <prop type="string" name="criterionType" required="True">
                              <enum>
                                <item value="&quot;DynamicThresholdCriterion&quot;"/>
                                <item value="&quot;StaticThresholdCriterion&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<@MetricDimension_read>" name="dimensions" identifiers="name">
                              <item type="@MetricDimension_read"/>
                            </prop>
                            <prop type="string" name="metricName" required="True"/>
                            <prop type="string" name="metricNamespace"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="boolean" name="skipMetricValidation"/>
                            <prop type="string" name="timeAggregation" required="True">
                              <enum>
                                <item value="&quot;Average&quot;"/>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Maximum&quot;"/>
                                <item value="&quot;Minimum&quot;"/>
                                <item value="&quot;Total&quot;"/>
                              </enum>
                            </prop>
                            <discriminator property="criterionType" value="DynamicThresholdCriterion">
                              <prop type="string" name="alertSensitivity" required="True">
                                <enum>
                                  <item value="&quot;High&quot;"/>
                                  <item value="&quot;Low&quot;"/>
                                  <item value="&quot;Medium&quot;"/>
                                </enum>
                              </prop>
                              <prop type="object" name="failingPeriods" required="True">
                                <prop type="float" name="minFailingPeriodsToAlert" required="True"/>
                                <prop type="float" name="numberOfEvaluationPeriods" required="True"/>
                              </prop>
                              <prop type="dateTime" name="ignoreDataBefore"/>
                              <prop type="string" name="operator" required="True">
                                <enum>
                                  <item value="&quot;GreaterOrLessThan&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                </enum>
                              </prop>
                            </discriminator>
                            <discriminator property="criterionType" value="StaticThresholdCriterion">
                              <prop type="string" name="operator" required="True">
                                <enum>
                                  <item value="&quot;Equals&quot;"/>
                                  <item value="&quot;GreaterThan&quot;"/>
                                  <item value="&quot;GreaterThanOrEqual&quot;"/>
                                  <item value="&quot;LessThan&quot;"/>
                                  <item value="&quot;LessThanOrEqual&quot;"/>
                                </enum>
                              </prop>
                              <prop type="float64" name="threshold" required="True"/>
                            </discriminator>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria">
                        <prop type="array<object>" name="allOf" identifiers="name">
                          <item type="object">
                            <prop const="True" type="string" name="criterionType" required="True">
                              <default value="&quot;StaticThresholdCriterion&quot;"/>
                              <enum>
                                <item value="&quot;DynamicThresholdCriterion&quot;"/>
                                <item value="&quot;StaticThresholdCriterion&quot;"/>
                              </enum>
                            </prop>
                            <prop type="array<object>" name="dimensions" identifiers="name">
                              <item type="object" cls="MetricDimension_read">
                                <prop type="string" name="name" required="True"/>
                                <prop type="string" name="operator" required="True"/>
                                <prop type="array<string>" name="values" required="True">
                                  <item type="string"/>
                                </prop>
                              </item>
                            </prop>
                            <prop type="string" name="metricName" required="True"/>
                            <prop type="string" name="metricNamespace"/>
                            <prop type="string" name="name" required="True"/>
                            <prop type="string" name="operator" required="True">
                              <enum>
                                <item value="&quot;Equals&quot;"/>
                                <item value="&quot;GreaterThan&quot;"/>
                                <item value="&quot;GreaterThanOrEqual&quot;"/>
                                <item value="&quot;LessThan&quot;"/>
                                <item value="&quot;LessThanOrEqual&quot;"/>
                              </enum>
                            </prop>
                            <prop type="boolean" name="skipMetricValidation"/>
                            <prop type="float64" name="threshold" required="True"/>
                            <prop type="string" name="timeAggregation" required="True">
                              <enum>
                                <item value="&quot;Average&quot;"/>
                                <item value="&quot;Count&quot;"/>
                                <item value="&quot;Maximum&quot;"/>
                                <item value="&quot;Minimum&quot;"/>
                                <item value="&quot;Total&quot;"/>
                              </enum>
                            </prop>
                          </item>
                        </prop>
                      </discriminator>
                      <discriminator property="odata.type" value="Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria">
                        <prop type="string" name="componentId" required="True"/>
                        <prop type="float" name="failedLocationCount" required="True"/>
                        <prop type="string" name="webTestId" required="True"/>
                      </discriminator>
                    </prop>
                    <prop type="string" name="description"/>
                    <prop type="boolean" name="enabled" required="True"/>
                    <prop type="duration" name="evaluationFrequency" required="True"/>
                    <prop readOnly="True" type="boolean" name="isMigrated"/>
                    <prop readOnly="True" type="dateTime" name="lastUpdatedTime"/>
                    <prop type="array<string>" name="scopes" required="True">
                      <item type="string"/>
                    </prop>
                    <prop type="integer32" name="severity" required="True"/>
                    <prop type="string" name="targetResourceRegion"/>
                    <prop type="string" name="targetResourceType"/>
                    <prop type="duration" name="windowSize" required="True"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="array<object>" name="actions" arg="$parameters.properties.actions" identifiers="actionGroupId">
                  <item type="object">
                    <prop type="string" name="actionGroupId" arg="$parameters.properties.actions[].actionGroupId"/>
                    <prop type="object" name="webHookProperties" arg="$parameters.properties.actions[].webHookProperties">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                  </item>
                </prop>
                <prop type="boolean" name="autoMitigate" arg="$parameters.properties.autoMitigate"/>
                <prop type="object" name="criteria" arg="$parameters.properties.criteria" required="True">
                  <prop type="string" name="odata.type" required="True">
                    <enum>
                      <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria" value="&quot;Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria&quot;"/>
                      <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria" value="&quot;Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria&quot;"/>
                      <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria" value="&quot;Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria&quot;"/>
                    </enum>
                  </prop>
                  <discriminator property="odata.type" value="Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria">
                    <prop type="array<object>" name="allOf" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf" identifiers="name">
                      <item type="object">
                        <prop type="string" name="criterionType" required="True">
                          <enum>
                            <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion" value="&quot;DynamicThresholdCriterion&quot;"/>
                            <item arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion" value="&quot;StaticThresholdCriterion&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<@MetricDimension_update>" name="dimensions" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].dimensions" identifiers="name">
                          <item type="@MetricDimension_update"/>
                        </prop>
                        <prop type="string" name="metricName" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].metricName" required="True"/>
                        <prop type="string" name="metricNamespace" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].metricNamespace"/>
                        <prop type="string" name="name" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].name" required="True"/>
                        <prop type="boolean" name="skipMetricValidation" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].skipMetricValidation"/>
                        <prop type="string" name="timeAggregation" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].timeAggregation" required="True">
                          <enum>
                            <item value="&quot;Average&quot;"/>
                            <item value="&quot;Count&quot;"/>
                            <item value="&quot;Maximum&quot;"/>
                            <item value="&quot;Minimum&quot;"/>
                            <item value="&quot;Total&quot;"/>
                          </enum>
                        </prop>
                        <discriminator property="criterionType" value="DynamicThresholdCriterion">
                          <prop type="string" name="alertSensitivity" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.alertSensitivity" required="True">
                            <enum>
                              <item value="&quot;High&quot;"/>
                              <item value="&quot;Low&quot;"/>
                              <item value="&quot;Medium&quot;"/>
                            </enum>
                          </prop>
                          <prop type="object" name="failingPeriods" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods" required="True">
                            <prop type="float" name="minFailingPeriodsToAlert" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods.minFailingPeriodsToAlert" required="True"/>
                            <prop type="float" name="numberOfEvaluationPeriods" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.failingPeriods.numberOfEvaluationPeriods" required="True"/>
                          </prop>
                          <prop type="dateTime" name="ignoreDataBefore" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.ignoreDataBefore"/>
                          <prop type="string" name="operator" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].DynamicThresholdCriterion.operator" required="True">
                            <enum>
                              <item value="&quot;GreaterOrLessThan&quot;"/>
                              <item value="&quot;GreaterThan&quot;"/>
                              <item value="&quot;LessThan&quot;"/>
                            </enum>
                          </prop>
                        </discriminator>
                        <discriminator property="criterionType" value="StaticThresholdCriterion">
                          <prop type="string" name="operator" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion.operator" required="True">
                            <enum>
                              <item value="&quot;Equals&quot;"/>
                              <item value="&quot;GreaterThan&quot;"/>
                              <item value="&quot;GreaterThanOrEqual&quot;"/>
                              <item value="&quot;LessThan&quot;"/>
                              <item value="&quot;LessThanOrEqual&quot;"/>
                            </enum>
                          </prop>
                          <prop type="float64" name="threshold" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_MultipleResourceMultipleMetricCriteria.allOf[].StaticThresholdCriterion.threshold" required="True"/>
                        </discriminator>
                      </item>
                    </prop>
                  </discriminator>
                  <discriminator property="odata.type" value="Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria">
                    <prop type="array<object>" name="allOf" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf" identifiers="name">
                      <item type="object">
                        <prop const="True" type="string" name="criterionType" required="True">
                          <default value="&quot;StaticThresholdCriterion&quot;"/>
                          <enum>
                            <item value="&quot;DynamicThresholdCriterion&quot;"/>
                            <item value="&quot;StaticThresholdCriterion&quot;"/>
                          </enum>
                        </prop>
                        <prop type="array<object>" name="dimensions" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].dimensions" identifiers="name">
                          <item type="object" cls="MetricDimension_update">
                            <prop type="string" name="name" arg="@MetricDimension_update.name" required="True"/>
                            <prop type="string" name="operator" arg="@MetricDimension_update.operator" required="True"/>
                            <prop type="array<string>" name="values" arg="@MetricDimension_update.values" required="True">
                              <item type="string"/>
                            </prop>
                          </item>
                        </prop>
                        <prop type="string" name="metricName" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].metricName" required="True"/>
                        <prop type="string" name="metricNamespace" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].metricNamespace"/>
                        <prop type="string" name="name" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].name" required="True"/>
                        <prop type="string" name="operator" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].operator" required="True">
                          <enum>
                            <item value="&quot;Equals&quot;"/>
                            <item value="&quot;GreaterThan&quot;"/>
                            <item value="&quot;GreaterThanOrEqual&quot;"/>
                            <item value="&quot;LessThan&quot;"/>
                            <item value="&quot;LessThanOrEqual&quot;"/>
                          </enum>
                        </prop>
                        <prop type="boolean" name="skipMetricValidation" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].skipMetricValidation"/>
                        <prop type="float64" name="threshold" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].threshold" required="True"/>
                        <prop type="string" name="timeAggregation" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_SingleResourceMultipleMetricCriteria.allOf[].timeAggregation" required="True">
                          <enum>
                            <item value="&quot;Average&quot;"/>
                            <item value="&quot;Count&quot;"/>
                            <item value="&quot;Maximum&quot;"/>
                            <item value="&quot;Minimum&quot;"/>
                            <item value="&quot;Total&quot;"/>
                          </enum>
                        </prop>
                      </item>
                    </prop>
                  </discriminator>
                  <discriminator property="odata.type" value="Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria">
                    <prop type="string" name="componentId" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.componentId" required="True"/>
                    <prop type="float" name="failedLocationCount" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.failedLocationCount" required="True"/>
                    <prop type="string" name="webTestId" arg="$parameters.properties.criteria.Microsoft_Azure_Monitor_WebtestLocationAvailabilityCriteria.webTestId" required="True"/>
                  </discriminator>
                </prop>
                <prop type="string" name="description" arg="$parameters.properties.description"/>
                <prop type="boolean" name="enabled" arg="$parameters.properties.enabled" required="True"/>
                <prop type="duration" name="evaluationFrequency" arg="$parameters.properties.evaluationFrequency" required="True"/>
                <prop type="array<string>" name="scopes" arg="$parameters.properties.scopes" required="True">
                  <item type="string"/>
                </prop>
                <prop type="integer32" name="severity" arg="$parameters.properties.severity" required="True"/>
                <prop type="string" name="targetResourceRegion" arg="$parameters.properties.targetResourceRegion"/>
                <prop type="string" name="targetResourceType" arg="$parameters.properties.targetResourceType"/>
                <prop type="duration" name="windowSize" arg="$parameters.properties.windowSize" required="True"/>
              </prop>
              <prop type="object" name="tags" arg="$parameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="MetricAlerts_CreateOrUpdate">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="ruleName" arg="$Path.ruleName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True">
                <format minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2018-03-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@MetricAlertResource_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
