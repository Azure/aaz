<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/bgppeers/{}" version="2024-08-01" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9iZ3BQZWVycy97YmdwUGVlck5hbWV9/V/MjAyNC0wOC0wMQ=="/>
  <commandGroup name="k8s-runtime bgp-peer">
    <command name="show" version="2024-08-01" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/bgppeers/{}" version="2024-08-01" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9iZ3BQZWVycy97YmdwUGVlck5hbWV9/V/MjAyNC0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.bgpPeerName" options="bgp-peer-name" required="True">
          <help short="The name of the BgpPeer"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
        <arg type="string" var="$Path.resourceUri" options="resource-uri" required="True">
          <help short="The fully qualified Azure Resource manager identifier of the resource."/>
        </arg>
      </argGroup>
      <operation operationId="BgpPeers_Get">
        <http path="/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{bgpPeerName}">
          <request method="get">
            <path>
              <param type="string" name="bgpPeerName" arg="$Path.bgpPeerName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="bfdProfile"/>
                    <prop type="string" name="bgpMultiHop">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="holdTime"/>
                    <prop type="string" name="keepAliveTime"/>
                    <prop type="integer32" name="myAsn" required="True"/>
                    <prop type="array<object>" name="nodeSelector" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="peerAddress" required="True"/>
                    <prop type="integer32" name="peerAsn" required="True"/>
                    <prop type="integer32" name="peerPort"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-08-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/bgppeers/{}" version="2024-08-01" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9iZ3BQZWVycy97YmdwUGVlck5hbWV9/V/MjAyNC0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.bgpPeerName" options="bgp-peer-name" required="True">
          <help short="The name of the BgpPeer"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
        <arg type="string" var="$Path.resourceUri" options="resource-uri" required="True">
          <help short="The fully qualified Azure Resource manager identifier of the resource."/>
        </arg>
      </argGroup>
      <operation operationId="BgpPeers_Delete">
        <http path="/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{bgpPeerName}">
          <request method="delete">
            <path>
              <param type="string" name="bgpPeerName" arg="$Path.bgpPeerName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-08-01" confirmation="">
      <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/bgppeers/{}" version="2024-08-01" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9iZ3BQZWVycy97YmdwUGVlck5hbWV9/V/MjAyNC0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.bgpPeerName" options="bgp-peer-name" required="True">
          <help short="The name of the BgpPeer"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
        <arg type="string" var="$Path.resourceUri" options="resource-uri" required="True">
          <help short="The fully qualified Azure Resource manager identifier of the resource."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$resource.properties.bfdProfile" options="bfd-profile" group="Properties">
          <help short="BFD Profile"/>
        </arg>
        <arg type="string" var="$resource.properties.bgpMultiHop" options="bgp-multi-hop" group="Properties">
          <help short="eBGP multiple hop"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$resource.properties.holdTime" options="hold-time" group="Properties">
          <help short="Hold time, per RFC4271"/>
        </arg>
        <arg type="string" var="$resource.properties.keepAliveTime" options="keep-alive-time" group="Properties">
          <help short="Keepalive time, per RFC4271"/>
        </arg>
        <arg type="integer32" var="$resource.properties.myAsn" options="my-asn" group="Properties">
          <help short="My ASN"/>
        </arg>
        <arg type="array<object>" var="$resource.properties.nodeSelector" options="node-selector" group="Properties">
          <help short="A dynamic label mapping to select related nodes to peer with. For instance, if you want to create a BGP peer only for nodes with label &quot;a=b&quot;, then please specify {&quot;a&quot;: &quot;b&quot;} in the field."/>
          <item type="object">
            <arg type="string" var="$resource.properties.nodeSelector[].name" options="name" required="True">
              <help short="Label name"/>
            </arg>
            <arg type="string" var="$resource.properties.nodeSelector[].value" options="value" required="True">
              <help short="Label value"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.peerAddress" options="peer-address" group="Properties">
          <help short="Peer Address"/>
        </arg>
        <arg type="integer32" var="$resource.properties.peerAsn" options="peer-asn" group="Properties">
          <help short="Peer ASN"/>
        </arg>
        <arg type="integer32" var="$resource.properties.peerPort" options="peer-port" group="Properties">
          <help short="Peer BGP port"/>
        </arg>
      </argGroup>
      <operation operationId="BgpPeers_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{bgpPeerName}">
          <request method="put">
            <path>
              <param type="string" name="bgpPeerName" arg="$Path.bgpPeerName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="object" name="properties">
                    <prop type="string" name="bfdProfile" arg="$resource.properties.bfdProfile"/>
                    <prop type="string" name="bgpMultiHop" arg="$resource.properties.bgpMultiHop">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="holdTime" arg="$resource.properties.holdTime"/>
                    <prop type="string" name="keepAliveTime" arg="$resource.properties.keepAliveTime"/>
                    <prop type="integer32" name="myAsn" arg="$resource.properties.myAsn" required="True"/>
                    <prop type="array<object>" name="nodeSelector" arg="$resource.properties.nodeSelector" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" arg="$resource.properties.nodeSelector[].name" required="True"/>
                        <prop type="string" name="value" arg="$resource.properties.nodeSelector[].value" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="peerAddress" arg="$resource.properties.peerAddress" required="True"/>
                    <prop type="integer32" name="peerAsn" arg="$resource.properties.peerAsn" required="True"/>
                    <prop type="integer32" name="peerPort" arg="$resource.properties.peerPort"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="bfdProfile"/>
                    <prop type="string" name="bgpMultiHop">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="holdTime"/>
                    <prop type="string" name="keepAliveTime"/>
                    <prop type="integer32" name="myAsn" required="True"/>
                    <prop type="array<object>" name="nodeSelector" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="peerAddress" required="True"/>
                    <prop type="integer32" name="peerAsn" required="True"/>
                    <prop type="integer32" name="peerPort"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-08-01">
      <resource id="/{resourceuri}/providers/microsoft.kubernetesruntime/bgppeers/{}" version="2024-08-01" swagger="mgmt-plane/kubernetesruntime/ResourceProviders/Microsoft.KubernetesRuntime/Paths/L3tyZXNvdXJjZVVyaX0vcHJvdmlkZXJzL01pY3Jvc29mdC5LdWJlcm5ldGVzUnVudGltZS9iZ3BQZWVycy97YmdwUGVlck5hbWV9/V/MjAyNC0wOC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.bgpPeerName" options="bgp-peer-name" required="True">
          <help short="The name of the BgpPeer"/>
          <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
        </arg>
        <arg type="string" var="$Path.resourceUri" options="resource-uri" required="True">
          <help short="The fully qualified Azure Resource manager identifier of the resource."/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$resource.properties.bfdProfile" options="bfd-profile" group="Properties">
          <help short="BFD Profile"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.bgpMultiHop" options="bgp-multi-hop" group="Properties">
          <help short="eBGP multiple hop"/>
          <enum>
            <item name="Disabled" value="&quot;Disabled&quot;"/>
            <item name="Enabled" value="&quot;Enabled&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.holdTime" options="hold-time" group="Properties">
          <help short="Hold time, per RFC4271"/>
        </arg>
        <arg nullable="True" type="string" var="$resource.properties.keepAliveTime" options="keep-alive-time" group="Properties">
          <help short="Keepalive time, per RFC4271"/>
        </arg>
        <arg type="integer32" var="$resource.properties.myAsn" options="my-asn" group="Properties">
          <help short="My ASN"/>
        </arg>
        <arg nullable="True" type="array<object>" var="$resource.properties.nodeSelector" options="node-selector" group="Properties">
          <help short="A dynamic label mapping to select related nodes to peer with. For instance, if you want to create a BGP peer only for nodes with label &quot;a=b&quot;, then please specify {&quot;a&quot;: &quot;b&quot;} in the field."/>
          <item nullable="True" type="object">
            <arg type="string" var="$resource.properties.nodeSelector[].name" options="name">
              <help short="Label name"/>
            </arg>
            <arg type="string" var="$resource.properties.nodeSelector[].value" options="value">
              <help short="Label value"/>
            </arg>
          </item>
        </arg>
        <arg type="string" var="$resource.properties.peerAddress" options="peer-address" group="Properties">
          <help short="Peer Address"/>
        </arg>
        <arg type="integer32" var="$resource.properties.peerAsn" options="peer-asn" group="Properties">
          <help short="Peer ASN"/>
        </arg>
        <arg nullable="True" type="integer32" var="$resource.properties.peerPort" options="peer-port" group="Properties">
          <help short="Peer BGP port"/>
        </arg>
      </argGroup>
      <operation operationId="BgpPeers_Get">
        <http path="/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{bgpPeerName}">
          <request method="get">
            <path>
              <param type="string" name="bgpPeerName" arg="$Path.bgpPeerName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="BgpPeer_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{}"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties">
                    <prop type="string" name="bfdProfile"/>
                    <prop type="string" name="bgpMultiHop">
                      <enum>
                        <item value="&quot;Disabled&quot;"/>
                        <item value="&quot;Enabled&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="holdTime"/>
                    <prop type="string" name="keepAliveTime"/>
                    <prop type="integer32" name="myAsn" required="True"/>
                    <prop type="array<object>" name="nodeSelector" identifiers="name">
                      <item type="object">
                        <prop type="string" name="name" required="True"/>
                        <prop type="string" name="value" required="True"/>
                      </item>
                    </prop>
                    <prop type="string" name="peerAddress" required="True"/>
                    <prop type="integer32" name="peerAsn" required="True"/>
                    <prop type="integer32" name="peerPort"/>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Accepted&quot;"/>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Provisioning&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="resource" required="True" clientFlatten="True">
              <prop type="object" name="properties">
                <prop type="string" name="bfdProfile" arg="$resource.properties.bfdProfile"/>
                <prop type="string" name="bgpMultiHop" arg="$resource.properties.bgpMultiHop">
                  <enum>
                    <item value="&quot;Disabled&quot;"/>
                    <item value="&quot;Enabled&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="holdTime" arg="$resource.properties.holdTime"/>
                <prop type="string" name="keepAliveTime" arg="$resource.properties.keepAliveTime"/>
                <prop type="integer32" name="myAsn" arg="$resource.properties.myAsn" required="True"/>
                <prop type="array<object>" name="nodeSelector" arg="$resource.properties.nodeSelector" identifiers="name">
                  <item type="object">
                    <prop type="string" name="name" arg="$resource.properties.nodeSelector[].name" required="True"/>
                    <prop type="string" name="value" arg="$resource.properties.nodeSelector[].value" required="True"/>
                  </item>
                </prop>
                <prop type="string" name="peerAddress" arg="$resource.properties.peerAddress" required="True"/>
                <prop type="integer32" name="peerAsn" arg="$resource.properties.peerAsn" required="True"/>
                <prop type="integer32" name="peerPort" arg="$resource.properties.peerPort"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="BgpPeers_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/{resourceUri}/providers/Microsoft.KubernetesRuntime/bgpPeers/{bgpPeerName}">
          <request method="put">
            <path>
              <param type="string" name="bgpPeerName" arg="$Path.bgpPeerName" required="True">
                <format pattern="^[a-zA-Z0-9-]{3,24}$"/>
              </param>
              <param type="string" name="resourceUri" arg="$Path.resourceUri" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-08-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@BgpPeer_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
