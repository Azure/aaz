<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}/extensions/{}" version="2017-03-30" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0vZXh0ZW5zaW9ucy97dm1FeHRlbnNpb25OYW1lfQ==/V/MjAxNy0wMy0zMA=="/>
  <commandGroup name="vm extension">
    <command name="show" version="2017-03-30">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}/extensions/{}" version="2017-03-30" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0vZXh0ZW5zaW9ucy97dm1FeHRlbnNpb25OYW1lfQ==/V/MjAxNy0wMy0zMA=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmExtensionName" options="vm-extension-name name n" required="True" idPart="child_name_1">
          <help short="The name of the virtual machine extension."/>
        </arg>
        <arg type="string" var="$Path.vmName" options="vm-name" required="True" group="" idPart="name">
          <help short="The name of the Virtual Machine. You can configure the default using `az configure --defaults vm=<name>`."/>
        </arg>
        <arg type="string" var="$Query.expand" options="expand">
          <help short="The expand expression to apply on the operation."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachineExtensions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmExtensionName" arg="$Path.vmExtensionName" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <param type="string" name="$expand" arg="$Query.expand"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-03-30&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="autoUpgradeMinorVersion"/>
                    <prop type="string" name="forceUpdateTag"/>
                    <prop type="object" name="instanceView">
                      <prop type="string" name="name"/>
                      <prop type="array<@InstanceViewStatus_read>" name="statuses">
                        <item type="@InstanceViewStatus_read"/>
                      </prop>
                      <prop type="array<object>" name="substatuses">
                        <item type="object" cls="InstanceViewStatus_read">
                          <prop type="string" name="code"/>
                          <prop type="string" name="displayStatus"/>
                          <prop type="string" name="level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message"/>
                          <prop type="dateTime" name="time"/>
                        </item>
                      </prop>
                      <prop type="string" name="type"/>
                      <prop type="string" name="typeHandlerVersion"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="publisher"/>
                    <prop type="string" name="type"/>
                    <prop type="string" name="typeHandlerVersion"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2017-03-30" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}/extensions/{}" version="2017-03-30" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0vZXh0ZW5zaW9ucy97dm1FeHRlbnNpb25OYW1lfQ==/V/MjAxNy0wMy0zMA=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmExtensionName" options="vm-extension-name name n" required="True" idPart="child_name_1">
          <help short="The name of the virtual machine extension."/>
        </arg>
        <arg type="string" var="$Path.vmName" options="vm-name" required="True" group="" idPart="name">
          <help short="The name of the Virtual Machine. You can configure the default using `az configure --defaults vm=<name>`."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachineExtensions_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}">
          <request method="delete">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmExtensionName" arg="$Path.vmExtensionName" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-03-30&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="dateTime" name="endTime"/>
                  <prop type="object" name="error">
                    <prop type="string" name="code"/>
                    <prop type="array<object>" name="details">
                      <item type="object">
                        <prop type="string" name="code"/>
                        <prop type="string" name="message"/>
                        <prop type="string" name="target"/>
                      </item>
                    </prop>
                    <prop type="object" name="innererror">
                      <prop type="string" name="errordetail"/>
                      <prop type="string" name="exceptiontype"/>
                    </prop>
                    <prop type="string" name="message"/>
                    <prop type="string" name="target"/>
                  </prop>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop readOnly="True" type="dateTime" name="startTime"/>
                  <prop readOnly="True" type="string" name="status"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2017-03-30">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}/extensions/{}" version="2017-03-30" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0vZXh0ZW5zaW9ucy97dm1FeHRlbnNpb25OYW1lfQ==/V/MjAxNy0wMy0zMA=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmExtensionName" options="vm-extension-name name n" required="True" idPart="child_name_1">
          <help short="The name of the virtual machine extension."/>
        </arg>
        <arg type="string" var="$Path.vmName" options="vm-name" required="True" group="" idPart="name">
          <help short="The name of the Virtual Machine. You can configure the default using `az configure --defaults vm=<name>`."/>
        </arg>
      </argGroup>
      <argGroup name="ExtensionParameters">
        <arg type="ResourceLocation" var="$extensionParameters.location" options="location l" required="True" group="ExtensionParameters">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$extensionParameters.tags" options="tags" group="ExtensionParameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="boolean" var="$extensionParameters.properties.autoUpgradeMinorVersion" options="auto-upgrade-minor-version" group="Properties">
          <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
        </arg>
        <arg type="string" var="$extensionParameters.properties.forceUpdateTag" options="force-update-tag" group="Properties">
          <help short="How the extension handler should be forced to update even if the extension configuration has not changed."/>
        </arg>
        <arg type="object" var="$extensionParameters.properties.instanceView" options="instance-view" group="Properties">
          <help short="The virtual machine extension instance view."/>
          <arg type="string" var="$extensionParameters.properties.instanceView.name" options="name">
            <help short="The virtual machine extension name."/>
          </arg>
          <arg type="array<@InstanceViewStatus_create>" var="$extensionParameters.properties.instanceView.statuses" options="statuses">
            <help short="The resource status information."/>
            <item type="@InstanceViewStatus_create"/>
          </arg>
          <arg type="array<object>" var="$extensionParameters.properties.instanceView.substatuses" options="substatuses">
            <help short="The resource status information."/>
            <item type="object" cls="InstanceViewStatus_create">
              <arg type="string" var="@InstanceViewStatus_create.code" options="code">
                <help short="The status code."/>
              </arg>
              <arg type="string" var="@InstanceViewStatus_create.displayStatus" options="display-status">
                <help short="The short localizable label for the status."/>
              </arg>
              <arg type="string" var="@InstanceViewStatus_create.level" options="level">
                <help short="The level code."/>
                <enum>
                  <item name="Error" value="&quot;Error&quot;"/>
                  <item name="Info" value="&quot;Info&quot;"/>
                  <item name="Warning" value="&quot;Warning&quot;"/>
                </enum>
              </arg>
              <arg type="string" var="@InstanceViewStatus_create.message" options="message">
                <help short="The detailed status message, including for alerts and error messages."/>
              </arg>
              <arg type="dateTime" var="@InstanceViewStatus_create.time" options="time">
                <help short="The time of the status."/>
              </arg>
            </item>
          </arg>
          <arg type="string" var="$extensionParameters.properties.instanceView.type" options="type">
            <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
          </arg>
          <arg type="string" var="$extensionParameters.properties.instanceView.typeHandlerVersion" options="type-handler-version">
            <help short="Specifies the version of the script handler."/>
          </arg>
        </arg>
        <arg type="string" var="$extensionParameters.properties.publisher" options="publisher" group="Properties">
          <help short="The name of the extension handler publisher."/>
        </arg>
        <arg type="string" var="$extensionParameters.properties.type" options="type" group="Properties">
          <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
        </arg>
        <arg type="string" var="$extensionParameters.properties.typeHandlerVersion" options="type-handler-version" group="Properties">
          <help short="Specifies the version of the script handler."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachineExtensions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmExtensionName" arg="$Path.vmExtensionName" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-03-30&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="extensionParameters" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$extensionParameters.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="autoUpgradeMinorVersion" arg="$extensionParameters.properties.autoUpgradeMinorVersion"/>
                    <prop type="string" name="forceUpdateTag" arg="$extensionParameters.properties.forceUpdateTag"/>
                    <prop type="object" name="instanceView" arg="$extensionParameters.properties.instanceView">
                      <prop type="string" name="name" arg="$extensionParameters.properties.instanceView.name"/>
                      <prop type="array<@InstanceViewStatus_create>" name="statuses" arg="$extensionParameters.properties.instanceView.statuses">
                        <item type="@InstanceViewStatus_create"/>
                      </prop>
                      <prop type="array<object>" name="substatuses" arg="$extensionParameters.properties.instanceView.substatuses">
                        <item type="object" cls="InstanceViewStatus_create">
                          <prop type="string" name="code" arg="@InstanceViewStatus_create.code"/>
                          <prop type="string" name="displayStatus" arg="@InstanceViewStatus_create.displayStatus"/>
                          <prop type="string" name="level" arg="@InstanceViewStatus_create.level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message" arg="@InstanceViewStatus_create.message"/>
                          <prop type="dateTime" name="time" arg="@InstanceViewStatus_create.time"/>
                        </item>
                      </prop>
                      <prop type="string" name="type" arg="$extensionParameters.properties.instanceView.type"/>
                      <prop type="string" name="typeHandlerVersion" arg="$extensionParameters.properties.instanceView.typeHandlerVersion"/>
                    </prop>
                    <prop type="string" name="publisher" arg="$extensionParameters.properties.publisher"/>
                    <prop type="string" name="type" arg="$extensionParameters.properties.type"/>
                    <prop type="string" name="typeHandlerVersion" arg="$extensionParameters.properties.typeHandlerVersion"/>
                  </prop>
                  <prop type="object" name="tags" arg="$extensionParameters.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="autoUpgradeMinorVersion"/>
                    <prop type="string" name="forceUpdateTag"/>
                    <prop type="object" name="instanceView">
                      <prop type="string" name="name"/>
                      <prop type="array<@InstanceViewStatus_read>" name="statuses">
                        <item type="@InstanceViewStatus_read"/>
                      </prop>
                      <prop type="array<object>" name="substatuses">
                        <item type="object" cls="InstanceViewStatus_read">
                          <prop type="string" name="code"/>
                          <prop type="string" name="displayStatus"/>
                          <prop type="string" name="level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message"/>
                          <prop type="dateTime" name="time"/>
                        </item>
                      </prop>
                      <prop type="string" name="type"/>
                      <prop type="string" name="typeHandlerVersion"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="publisher"/>
                    <prop type="string" name="type"/>
                    <prop type="string" name="typeHandlerVersion"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2017-03-30">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/virtualmachines/{}/extensions/{}" version="2017-03-30" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS92aXJ0dWFsTWFjaGluZXMve3ZtTmFtZX0vZXh0ZW5zaW9ucy97dm1FeHRlbnNpb25OYW1lfQ==/V/MjAxNy0wMy0zMA=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="string" var="$Path.vmExtensionName" options="vm-extension-name name n" required="True" idPart="child_name_1">
          <help short="The name of the virtual machine extension."/>
        </arg>
        <arg type="string" var="$Path.vmName" options="vm-name" required="True" group="" idPart="name">
          <help short="The name of the Virtual Machine. You can configure the default using `az configure --defaults vm=<name>`."/>
        </arg>
      </argGroup>
      <argGroup name="ExtensionParameters">
        <arg type="ResourceLocation" var="$extensionParameters.location" options="location l" group="ExtensionParameters">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$extensionParameters.tags" options="tags" group="ExtensionParameters">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="boolean" var="$extensionParameters.properties.autoUpgradeMinorVersion" options="auto-upgrade-minor-version" group="Properties">
          <help short="Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."/>
        </arg>
        <arg nullable="True" type="string" var="$extensionParameters.properties.forceUpdateTag" options="force-update-tag" group="Properties">
          <help short="How the extension handler should be forced to update even if the extension configuration has not changed."/>
        </arg>
        <arg nullable="True" type="object" var="$extensionParameters.properties.instanceView" options="instance-view" group="Properties">
          <help short="The virtual machine extension instance view."/>
          <arg nullable="True" type="string" var="$extensionParameters.properties.instanceView.name" options="name">
            <help short="The virtual machine extension name."/>
          </arg>
          <arg nullable="True" type="array<@InstanceViewStatus_update>" var="$extensionParameters.properties.instanceView.statuses" options="statuses">
            <help short="The resource status information."/>
            <item nullable="True" type="@InstanceViewStatus_update"/>
          </arg>
          <arg nullable="True" type="array<object>" var="$extensionParameters.properties.instanceView.substatuses" options="substatuses">
            <help short="The resource status information."/>
            <item nullable="True" type="object" cls="InstanceViewStatus_update">
              <arg nullable="True" type="string" var="@InstanceViewStatus_update.code" options="code">
                <help short="The status code."/>
              </arg>
              <arg nullable="True" type="string" var="@InstanceViewStatus_update.displayStatus" options="display-status">
                <help short="The short localizable label for the status."/>
              </arg>
              <arg nullable="True" type="string" var="@InstanceViewStatus_update.level" options="level">
                <help short="The level code."/>
                <enum>
                  <item name="Error" value="&quot;Error&quot;"/>
                  <item name="Info" value="&quot;Info&quot;"/>
                  <item name="Warning" value="&quot;Warning&quot;"/>
                </enum>
              </arg>
              <arg nullable="True" type="string" var="@InstanceViewStatus_update.message" options="message">
                <help short="The detailed status message, including for alerts and error messages."/>
              </arg>
              <arg nullable="True" type="dateTime" var="@InstanceViewStatus_update.time" options="time">
                <help short="The time of the status."/>
              </arg>
            </item>
          </arg>
          <arg nullable="True" type="string" var="$extensionParameters.properties.instanceView.type" options="type">
            <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
          </arg>
          <arg nullable="True" type="string" var="$extensionParameters.properties.instanceView.typeHandlerVersion" options="type-handler-version">
            <help short="Specifies the version of the script handler."/>
          </arg>
        </arg>
        <arg nullable="True" type="string" var="$extensionParameters.properties.publisher" options="publisher" group="Properties">
          <help short="The name of the extension handler publisher."/>
        </arg>
        <arg nullable="True" type="string" var="$extensionParameters.properties.type" options="type" group="Properties">
          <help short="Specifies the type of the extension; an example is &quot;CustomScriptExtension&quot;."/>
        </arg>
        <arg nullable="True" type="string" var="$extensionParameters.properties.typeHandlerVersion" options="type-handler-version" group="Properties">
          <help short="Specifies the version of the script handler."/>
        </arg>
      </argGroup>
      <operation operationId="VirtualMachineExtensions_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmExtensionName" arg="$Path.vmExtensionName" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-03-30&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="VirtualMachineExtension_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/virtualMachines/{}/extensions/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="boolean" name="autoUpgradeMinorVersion"/>
                    <prop type="string" name="forceUpdateTag"/>
                    <prop type="object" name="instanceView">
                      <prop type="string" name="name"/>
                      <prop type="array<@InstanceViewStatus_read>" name="statuses">
                        <item type="@InstanceViewStatus_read"/>
                      </prop>
                      <prop type="array<object>" name="substatuses">
                        <item type="object" cls="InstanceViewStatus_read">
                          <prop type="string" name="code"/>
                          <prop type="string" name="displayStatus"/>
                          <prop type="string" name="level">
                            <enum>
                              <item value="&quot;Error&quot;"/>
                              <item value="&quot;Info&quot;"/>
                              <item value="&quot;Warning&quot;"/>
                            </enum>
                          </prop>
                          <prop type="string" name="message"/>
                          <prop type="dateTime" name="time"/>
                        </item>
                      </prop>
                      <prop type="string" name="type"/>
                      <prop type="string" name="typeHandlerVersion"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="string" name="publisher"/>
                    <prop type="string" name="type"/>
                    <prop type="string" name="typeHandlerVersion"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="extensionParameters" required="True" clientFlatten="True">
              <prop type="ResourceLocation" name="location" arg="$extensionParameters.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="boolean" name="autoUpgradeMinorVersion" arg="$extensionParameters.properties.autoUpgradeMinorVersion"/>
                <prop type="string" name="forceUpdateTag" arg="$extensionParameters.properties.forceUpdateTag"/>
                <prop type="object" name="instanceView" arg="$extensionParameters.properties.instanceView">
                  <prop type="string" name="name" arg="$extensionParameters.properties.instanceView.name"/>
                  <prop type="array<@InstanceViewStatus_update>" name="statuses" arg="$extensionParameters.properties.instanceView.statuses">
                    <item type="@InstanceViewStatus_update"/>
                  </prop>
                  <prop type="array<object>" name="substatuses" arg="$extensionParameters.properties.instanceView.substatuses">
                    <item type="object" cls="InstanceViewStatus_update">
                      <prop type="string" name="code" arg="@InstanceViewStatus_update.code"/>
                      <prop type="string" name="displayStatus" arg="@InstanceViewStatus_update.displayStatus"/>
                      <prop type="string" name="level" arg="@InstanceViewStatus_update.level">
                        <enum>
                          <item value="&quot;Error&quot;"/>
                          <item value="&quot;Info&quot;"/>
                          <item value="&quot;Warning&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="message" arg="@InstanceViewStatus_update.message"/>
                      <prop type="dateTime" name="time" arg="@InstanceViewStatus_update.time"/>
                    </item>
                  </prop>
                  <prop type="string" name="type" arg="$extensionParameters.properties.instanceView.type"/>
                  <prop type="string" name="typeHandlerVersion" arg="$extensionParameters.properties.instanceView.typeHandlerVersion"/>
                </prop>
                <prop type="string" name="publisher" arg="$extensionParameters.properties.publisher"/>
                <prop type="string" name="type" arg="$extensionParameters.properties.type"/>
                <prop type="string" name="typeHandlerVersion" arg="$extensionParameters.properties.typeHandlerVersion"/>
              </prop>
              <prop type="object" name="tags" arg="$extensionParameters.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="VirtualMachineExtensions_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}">
          <request method="put">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              <param type="string" name="vmExtensionName" arg="$Path.vmExtensionName" required="True"/>
              <param type="string" name="vmName" arg="$Path.vmName" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2017-03-30&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@VirtualMachineExtension_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
