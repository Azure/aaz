<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/providers/microsoft.management/managementgroups/{}/providers/microsoft.insights/tenantactiongroups/{}/createnotifications" version="2023-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlbWVudC9tYW5hZ2VtZW50R3JvdXBzL3ttYW5hZ2VtZW50R3JvdXBJZH0vcHJvdmlkZXJzL01pY3Jvc29mdC5JbnNpZ2h0cy90ZW5hbnRBY3Rpb25Hcm91cHMve3RlbmFudEFjdGlvbkdyb3VwTmFtZX0vY3JlYXRlTm90aWZpY2F0aW9ucw==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
  <commandGroup name="monitor tenant-action-group">
    <command name="create-notification" version="2023-05-01-preview">
      <resource id="/providers/microsoft.management/managementgroups/{}/providers/microsoft.insights/tenantactiongroups/{}/createnotifications" version="2023-05-01-preview" swagger="mgmt-plane/monitor/ResourceProviders/Microsoft.Insights/Paths/L3Byb3ZpZGVycy9NaWNyb3NvZnQuTWFuYWdlbWVudC9tYW5hZ2VtZW50R3JvdXBzL3ttYW5hZ2VtZW50R3JvdXBJZH0vcHJvdmlkZXJzL01pY3Jvc29mdC5JbnNpZ2h0cy90ZW5hbnRBY3Rpb25Hcm91cHMve3RlbmFudEFjdGlvbkdyb3VwTmFtZX0vY3JlYXRlTm90aWZpY2F0aW9ucw==/V/MjAyMy0wNS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Header.x-ms-client-tenant-id" options="x-ms-client-tenant-id" required="True">
          <help short="The tenant ID of the client making the request."/>
        </arg>
        <arg type="string" var="$Path.managementGroupId" options="management-group-id" required="True">
          <help short="The management group id."/>
        </arg>
        <arg type="string" var="$Path.tenantActionGroupName" options="tenant-action-group-name" required="True">
          <help short="The name of the action group."/>
          <format pattern="^[A-Za-z][A-Za-z0-9]*$" maxLength="260" minLength="1"/>
        </arg>
      </argGroup>
      <argGroup name="NotificationRequest">
        <arg type="string" var="$notificationRequest.alertType" options="alert-type" required="True" group="NotificationRequest">
          <help short="The value of the supported alert type. Supported alert type value is: servicehealth"/>
          <format maxLength="30"/>
        </arg>
        <arg type="array<object>" var="$notificationRequest.azureAppPushReceivers" options="azure-app-push-receivers" group="NotificationRequest">
          <help short="The list of AzureAppPush receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.azureAppPushReceivers[].emailAddress" options="email-address" required="True">
              <help short="The email address registered for the Azure mobile app."/>
            </arg>
            <arg type="string" var="$notificationRequest.azureAppPushReceivers[].name" options="name" required="True">
              <help short="The name of the Azure mobile app push receiver. Names must be unique across all receivers within a tenant action group."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.emailReceivers" options="email-receivers" group="NotificationRequest">
          <help short="The list of email receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.emailReceivers[].emailAddress" options="email-address" required="True">
              <help short="The email address of this receiver."/>
            </arg>
            <arg type="string" var="$notificationRequest.emailReceivers[].name" options="name" required="True">
              <help short="The name of the email receiver. Names must be unique across all receivers within a tenant action group."/>
            </arg>
            <arg type="boolean" var="$notificationRequest.emailReceivers[].useCommonAlertSchema" options="use-common-alert-schema">
              <help short="Indicates whether to use common alert schema."/>
              <default value="false"/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.smsReceivers" options="sms-receivers" group="NotificationRequest">
          <help short="The list of SMS receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.smsReceivers[].countryCode" options="country-code" required="True">
              <help short="The country code of the SMS receiver."/>
            </arg>
            <arg type="string" var="$notificationRequest.smsReceivers[].name" options="name" required="True">
              <help short="The name of the SMS receiver. Names must be unique across all receivers within a tenant action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.smsReceivers[].phoneNumber" options="phone-number" required="True">
              <help short="The phone number of the SMS receiver."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.voiceReceivers" options="voice-receivers" group="NotificationRequest">
          <help short="The list of voice receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.voiceReceivers[].countryCode" options="country-code" required="True">
              <help short="The country code of the voice receiver."/>
            </arg>
            <arg type="string" var="$notificationRequest.voiceReceivers[].name" options="name" required="True">
              <help short="The name of the voice receiver. Names must be unique across all receivers within a tenant action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.voiceReceivers[].phoneNumber" options="phone-number" required="True">
              <help short="The phone number of the voice receiver."/>
            </arg>
          </item>
        </arg>
        <arg type="array<object>" var="$notificationRequest.webhookReceivers" options="webhook-receivers" group="NotificationRequest">
          <help short="The list of webhook receivers that are part of this action group."/>
          <item type="object">
            <arg type="string" var="$notificationRequest.webhookReceivers[].identifierUri" options="identifier-uri">
              <help short="Indicates the identifier uri for aad auth."/>
            </arg>
            <arg type="string" var="$notificationRequest.webhookReceivers[].name" options="name" required="True">
              <help short="The name of the webhook receiver. Names must be unique across all receivers within a tenant action group."/>
            </arg>
            <arg type="string" var="$notificationRequest.webhookReceivers[].objectId" options="object-id">
              <help short="Indicates the webhook app object Id for aad auth."/>
            </arg>
            <arg type="string" var="$notificationRequest.webhookReceivers[].serviceUri" options="service-uri" required="True">
              <help short="The URI where webhooks should be sent."/>
            </arg>
            <arg type="string" var="$notificationRequest.webhookReceivers[].tenantId" options="tenant-id">
              <help short="Indicates the tenant id for aad auth."/>
            </arg>
            <arg type="boolean" var="$notificationRequest.webhookReceivers[].useAadAuth" options="use-aad-auth">
              <help short="Indicates whether or not use AAD authentication."/>
              <default value="false"/>
            </arg>
            <arg type="boolean" var="$notificationRequest.webhookReceivers[].useCommonAlertSchema" options="use-common-alert-schema">
              <help short="Indicates whether to use common alert schema."/>
              <default value="false"/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="CreateNotificationsAtTenantActionGroupResourceLevel">
        <longRunning finalStateVia="location"/>
        <http path="/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Insights/tenantActionGroups/{tenantActionGroupName}/createNotifications">
          <request method="post">
            <path>
              <param type="string" name="managementGroupId" arg="$Path.managementGroupId" required="True"/>
              <param type="string" name="tenantActionGroupName" arg="$Path.tenantActionGroupName" required="True">
                <format pattern="^[A-Za-z][A-Za-z0-9]*$" maxLength="260" minLength="1"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-05-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <header>
              <param type="string" name="x-ms-client-tenant-id" arg="$Header.x-ms-client-tenant-id" required="True"/>
            </header>
            <body>
              <json>
                <schema type="object" name="notificationRequest" required="True" clientFlatten="True">
                  <prop type="string" name="alertType" arg="$notificationRequest.alertType" required="True">
                    <format maxLength="30"/>
                  </prop>
                  <prop type="array<object>" name="azureAppPushReceivers" arg="$notificationRequest.azureAppPushReceivers">
                    <item type="object">
                      <prop type="string" name="emailAddress" arg="$notificationRequest.azureAppPushReceivers[].emailAddress" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.azureAppPushReceivers[].name" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="emailReceivers" arg="$notificationRequest.emailReceivers">
                    <item type="object">
                      <prop type="string" name="emailAddress" arg="$notificationRequest.emailReceivers[].emailAddress" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.emailReceivers[].name" required="True"/>
                      <prop type="boolean" name="useCommonAlertSchema" arg="$notificationRequest.emailReceivers[].useCommonAlertSchema">
                        <default value="false"/>
                      </prop>
                    </item>
                  </prop>
                  <prop type="array<object>" name="smsReceivers" arg="$notificationRequest.smsReceivers">
                    <item type="object">
                      <prop type="string" name="countryCode" arg="$notificationRequest.smsReceivers[].countryCode" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.smsReceivers[].name" required="True"/>
                      <prop type="string" name="phoneNumber" arg="$notificationRequest.smsReceivers[].phoneNumber" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="voiceReceivers" arg="$notificationRequest.voiceReceivers">
                    <item type="object">
                      <prop type="string" name="countryCode" arg="$notificationRequest.voiceReceivers[].countryCode" required="True"/>
                      <prop type="string" name="name" arg="$notificationRequest.voiceReceivers[].name" required="True"/>
                      <prop type="string" name="phoneNumber" arg="$notificationRequest.voiceReceivers[].phoneNumber" required="True"/>
                    </item>
                  </prop>
                  <prop type="array<object>" name="webhookReceivers" arg="$notificationRequest.webhookReceivers">
                    <item type="object">
                      <prop type="string" name="identifierUri" arg="$notificationRequest.webhookReceivers[].identifierUri"/>
                      <prop type="string" name="name" arg="$notificationRequest.webhookReceivers[].name" required="True"/>
                      <prop type="string" name="objectId" arg="$notificationRequest.webhookReceivers[].objectId"/>
                      <prop type="string" name="serviceUri" arg="$notificationRequest.webhookReceivers[].serviceUri" required="True"/>
                      <prop type="string" name="tenantId" arg="$notificationRequest.webhookReceivers[].tenantId"/>
                      <prop type="boolean" name="useAadAuth" arg="$notificationRequest.webhookReceivers[].useAadAuth">
                        <default value="false"/>
                      </prop>
                      <prop type="boolean" name="useCommonAlertSchema" arg="$notificationRequest.webhookReceivers[].useCommonAlertSchema">
                        <default value="false"/>
                      </prop>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="array<object>" name="actionDetails">
                    <item type="object">
                      <prop type="string" name="mechanismType"/>
                      <prop type="string" name="message"/>
                      <prop type="string" name="name"/>
                      <prop type="string" name="sendTime"/>
                      <prop type="string" name="status"/>
                      <prop type="string" name="subState"/>
                    </item>
                  </prop>
                  <prop type="string" name="completedTime"/>
                  <prop type="object" name="context">
                    <prop type="string" name="contextType"/>
                    <prop type="string" name="notificationSource"/>
                  </prop>
                  <prop type="string" name="createdTime"/>
                  <prop type="string" name="state" required="True"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <header>
              <item name="location"/>
            </header>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
