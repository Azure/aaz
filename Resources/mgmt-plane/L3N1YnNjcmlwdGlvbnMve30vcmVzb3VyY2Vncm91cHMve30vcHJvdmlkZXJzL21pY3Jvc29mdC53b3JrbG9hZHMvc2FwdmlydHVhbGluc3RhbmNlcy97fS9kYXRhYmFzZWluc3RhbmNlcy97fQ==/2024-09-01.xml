<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/sapvirtualinstances/{}/databaseinstances/{}" version="2024-09-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL3NhcFZpcnR1YWxJbnN0YW5jZXMve3NhcFZpcnR1YWxJbnN0YW5jZU5hbWV9L2RhdGFiYXNlSW5zdGFuY2VzL3tkYXRhYmFzZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOS0wMQ=="/>
  <commandGroup name="workloads sap-database-instance">
    <command name="show" version="2024-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/sapvirtualinstances/{}/databaseinstances/{}" version="2024-09-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL3NhcFZpcnR1YWxJbnN0YW5jZXMve3NhcFZpcnR1YWxJbnN0YW5jZU5hbWV9L2RhdGFiYXNlSW5zdGFuY2VzL3tkYXRhYmFzZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.databaseInstanceName" options="database-instance-name name n" required="True" idPart="child_name_1">
          <help short="Database resource name string modeled as parameter for auto generation to work correctly."/>
          <format pattern="^.*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.sapVirtualInstanceName" options="sap-virtual-instance-name vis-name" required="True" group="" idPart="name">
          <help short="The name of the Virtual Instances for SAP solutions resource"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9]{2}$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SapDatabaseInstances_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/databaseInstances/{databaseInstanceName}">
          <request method="get">
            <path>
              <param type="string" name="databaseInstanceName" arg="$Path.databaseInstanceName" required="True">
                <format pattern="^.*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="sapVirtualInstanceName" arg="$Path.sapVirtualInstanceName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9]{2}$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Workloads/sapVirtualInstances/{}/databaseInstances/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="databaseSid"/>
                    <prop readOnly="True" type="string" name="databaseType"/>
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="object" name="properties" cls="ErrorDefinition_read">
                        <prop readOnly="True" type="string" name="code"/>
                        <prop readOnly="True" type="array<@ErrorDefinition_read>" name="details">
                          <item type="@ErrorDefinition_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="ipAddress"/>
                    <prop readOnly="True" type="object" name="loadBalancerDetails">
                      <prop readOnly="True" type="string" name="id"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;Offline&quot;"/>
                        <item value="&quot;PartiallyRunning&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;SoftShutdown&quot;"/>
                        <item value="&quot;Starting&quot;"/>
                        <item value="&quot;Stopping&quot;"/>
                        <item value="&quot;Unavailable&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="subnet"/>
                    <prop readOnly="True" type="array<object>" name="vmDetails">
                      <item type="object">
                        <prop readOnly="True" type="string" name="status">
                          <enum>
                            <item value="&quot;Offline&quot;"/>
                            <item value="&quot;PartiallyRunning&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;SoftShutdown&quot;"/>
                            <item value="&quot;Starting&quot;"/>
                            <item value="&quot;Stopping&quot;"/>
                            <item value="&quot;Unavailable&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="storageDetails">
                          <item type="object">
                            <prop readOnly="True" type="string" name="id"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="virtualMachineId"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2024-09-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/sapvirtualinstances/{}/databaseinstances/{}" version="2024-09-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL3NhcFZpcnR1YWxJbnN0YW5jZXMve3NhcFZpcnR1YWxJbnN0YW5jZU5hbWV9L2RhdGFiYXNlSW5zdGFuY2VzL3tkYXRhYmFzZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.databaseInstanceName" options="database-instance-name name n" required="True" idPart="child_name_1">
          <help short="Database resource name string modeled as parameter for auto generation to work correctly."/>
          <format pattern="^.*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.sapVirtualInstanceName" options="sap-virtual-instance-name vis-name" required="True" group="" idPart="name">
          <help short="The name of the Virtual Instances for SAP solutions resource"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9]{2}$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="SapDatabaseInstances_Delete">
        <longRunning finalStateVia="location"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/databaseInstances/{databaseInstanceName}">
          <request method="delete">
            <path>
              <param type="string" name="databaseInstanceName" arg="$Path.databaseInstanceName" required="True">
                <format pattern="^.*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="sapVirtualInstanceName" arg="$Path.sapVirtualInstanceName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9]{2}$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="202">
            <header>
              <item name="Location"/>
              <item name="Retry-After"/>
            </header>
          </response>
          <response statusCode="204"/>
          <response statusCode="200 201"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2024-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/sapvirtualinstances/{}/databaseinstances/{}" version="2024-09-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL3NhcFZpcnR1YWxJbnN0YW5jZXMve3NhcFZpcnR1YWxJbnN0YW5jZU5hbWV9L2RhdGFiYXNlSW5zdGFuY2VzL3tkYXRhYmFzZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.databaseInstanceName" options="database-instance-name name n" required="True" idPart="child_name_1">
          <help short="Database resource name string modeled as parameter for auto generation to work correctly."/>
          <format pattern="^.*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.sapVirtualInstanceName" options="sap-virtual-instance-name vis-name" required="True" group="" idPart="name">
          <help short="The name of the Virtual Instances for SAP solutions resource"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9]{2}$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Resource">
        <arg type="ResourceLocation" var="$resource.location" options="location l" required="True" group="Resource">
          <help short="The geo-location where the resource lives"/>
        </arg>
        <arg type="object" var="$resource.tags" options="tags" group="Resource">
          <help short="Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="SapDatabaseInstances_Create">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/databaseInstances/{databaseInstanceName}">
          <request method="put">
            <path>
              <param type="string" name="databaseInstanceName" arg="$Path.databaseInstanceName" required="True">
                <format pattern="^.*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="sapVirtualInstanceName" arg="$Path.sapVirtualInstanceName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9]{2}$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="resource" required="True" clientFlatten="True">
                  <prop type="ResourceLocation" name="location" arg="$resource.location" required="True"/>
                  <prop type="object" name="tags" arg="$resource.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Workloads/sapVirtualInstances/{}/databaseInstances/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="databaseSid"/>
                    <prop readOnly="True" type="string" name="databaseType"/>
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="object" name="properties" cls="ErrorDefinition_read">
                        <prop readOnly="True" type="string" name="code"/>
                        <prop readOnly="True" type="array<@ErrorDefinition_read>" name="details">
                          <item type="@ErrorDefinition_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="ipAddress"/>
                    <prop readOnly="True" type="object" name="loadBalancerDetails">
                      <prop readOnly="True" type="string" name="id"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;Offline&quot;"/>
                        <item value="&quot;PartiallyRunning&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;SoftShutdown&quot;"/>
                        <item value="&quot;Starting&quot;"/>
                        <item value="&quot;Stopping&quot;"/>
                        <item value="&quot;Unavailable&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="subnet"/>
                    <prop readOnly="True" type="array<object>" name="vmDetails">
                      <item type="object">
                        <prop readOnly="True" type="string" name="status">
                          <enum>
                            <item value="&quot;Offline&quot;"/>
                            <item value="&quot;PartiallyRunning&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;SoftShutdown&quot;"/>
                            <item value="&quot;Starting&quot;"/>
                            <item value="&quot;Stopping&quot;"/>
                            <item value="&quot;Unavailable&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="storageDetails">
                          <item type="object">
                            <prop readOnly="True" type="string" name="id"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="virtualMachineId"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2024-09-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.workloads/sapvirtualinstances/{}/databaseinstances/{}" version="2024-09-01" swagger="mgmt-plane/workloads/ResourceProviders/Microsoft.Workloads/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuV29ya2xvYWRzL3NhcFZpcnR1YWxJbnN0YW5jZXMve3NhcFZpcnR1YWxJbnN0YW5jZU5hbWV9L2RhdGFiYXNlSW5zdGFuY2VzL3tkYXRhYmFzZUluc3RhbmNlTmFtZX0=/V/MjAyNC0wOS0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.databaseInstanceName" options="database-instance-name name n" required="True" idPart="child_name_1">
          <help short="Database resource name string modeled as parameter for auto generation to work correctly."/>
          <format pattern="^.*"/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="string" var="$Path.sapVirtualInstanceName" options="sap-virtual-instance-name vis-name" required="True" group="" idPart="name">
          <help short="The name of the Virtual Instances for SAP solutions resource"/>
          <format pattern="^[a-zA-Z][a-zA-Z0-9]{2}$"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$properties.tags" options="tags" group="Properties">
          <help short="Gets or sets the Resource tags."/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <operation operationId="SapDatabaseInstances_Update">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Workloads/sapVirtualInstances/{sapVirtualInstanceName}/databaseInstances/{databaseInstanceName}">
          <request method="patch">
            <path>
              <param type="string" name="databaseInstanceName" arg="$Path.databaseInstanceName" required="True">
                <format pattern="^.*"/>
              </param>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="sapVirtualInstanceName" arg="$Path.sapVirtualInstanceName" required="True">
                <format pattern="^[a-zA-Z][a-zA-Z0-9]{2}$"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-09-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="properties" required="True" clientFlatten="True">
                  <prop type="object" name="tags" arg="$properties.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Workloads/sapVirtualInstances/{}/databaseInstances/{}"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop readOnly="True" type="string" name="databaseSid"/>
                    <prop readOnly="True" type="string" name="databaseType"/>
                    <prop readOnly="True" type="object" name="errors">
                      <prop type="object" name="properties" cls="ErrorDefinition_read">
                        <prop readOnly="True" type="string" name="code"/>
                        <prop readOnly="True" type="array<@ErrorDefinition_read>" name="details">
                          <item type="@ErrorDefinition_read"/>
                        </prop>
                        <prop readOnly="True" type="string" name="message"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="string" name="ipAddress"/>
                    <prop readOnly="True" type="object" name="loadBalancerDetails">
                      <prop readOnly="True" type="string" name="id"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState">
                      <enum>
                        <item value="&quot;Canceled&quot;"/>
                        <item value="&quot;Creating&quot;"/>
                        <item value="&quot;Deleting&quot;"/>
                        <item value="&quot;Failed&quot;"/>
                        <item value="&quot;Succeeded&quot;"/>
                        <item value="&quot;Updating&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="status">
                      <enum>
                        <item value="&quot;Offline&quot;"/>
                        <item value="&quot;PartiallyRunning&quot;"/>
                        <item value="&quot;Running&quot;"/>
                        <item value="&quot;SoftShutdown&quot;"/>
                        <item value="&quot;Starting&quot;"/>
                        <item value="&quot;Stopping&quot;"/>
                        <item value="&quot;Unavailable&quot;"/>
                      </enum>
                    </prop>
                    <prop readOnly="True" type="string" name="subnet"/>
                    <prop readOnly="True" type="array<object>" name="vmDetails">
                      <item type="object">
                        <prop readOnly="True" type="string" name="status">
                          <enum>
                            <item value="&quot;Offline&quot;"/>
                            <item value="&quot;PartiallyRunning&quot;"/>
                            <item value="&quot;Running&quot;"/>
                            <item value="&quot;SoftShutdown&quot;"/>
                            <item value="&quot;Starting&quot;"/>
                            <item value="&quot;Stopping&quot;"/>
                            <item value="&quot;Unavailable&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="array<object>" name="storageDetails">
                          <item type="object">
                            <prop readOnly="True" type="string" name="id"/>
                          </item>
                        </prop>
                        <prop readOnly="True" type="string" name="virtualMachineId"/>
                      </item>
                    </prop>
                  </prop>
                  <prop readOnly="True" type="object" name="systemData">
                    <prop type="dateTime" name="createdAt"/>
                    <prop type="string" name="createdBy"/>
                    <prop type="string" name="createdByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="dateTime" name="lastModifiedAt"/>
                    <prop type="string" name="lastModifiedBy"/>
                    <prop type="string" name="lastModifiedByType">
                      <enum>
                        <item value="&quot;Application&quot;"/>
                        <item value="&quot;Key&quot;"/>
                        <item value="&quot;ManagedIdentity&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
