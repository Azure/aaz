<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/microsoft.security/apicollections" version="2023-11-15" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlNlY3VyaXR5L2FwaUNvbGxlY3Rpb25z/V/MjAyMy0xMS0xNQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.apimanagement/service/{}/providers/microsoft.security/apicollections" version="2023-11-15" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpTWFuYWdlbWVudC9zZXJ2aWNlL3tzZXJ2aWNlTmFtZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5TZWN1cml0eS9hcGlDb2xsZWN0aW9ucw==/V/MjAyMy0xMS0xNQ=="/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/apicollections" version="2023-11-15" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvYXBpQ29sbGVjdGlvbnM=/V/MjAyMy0xMS0xNQ=="/>
  <commandGroup name="security api-collection apim">
    <command name="list" version="2023-11-15" confirmation="">
      <resource id="/subscriptions/{}/providers/microsoft.security/apicollections" version="2023-11-15" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvTWljcm9zb2Z0LlNlY3VyaXR5L2FwaUNvbGxlY3Rpb25z/V/MjAyMy0xMS0xNQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.apimanagement/service/{}/providers/microsoft.security/apicollections" version="2023-11-15" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQXBpTWFuYWdlbWVudC9zZXJ2aWNlL3tzZXJ2aWNlTmFtZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5TZWN1cml0eS9hcGlDb2xsZWN0aW9ucw==/V/MjAyMy0xMS0xNQ=="/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.security/apicollections" version="2023-11-15" swagger="mgmt-plane/security/ResourceProviders/Microsoft.Security/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VjdXJpdHkvYXBpQ29sbGVjdGlvbnM=/V/MjAyMy0xMS0xNQ=="/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="string" var="$Path.serviceName" options="service-name" idPart="name">
          <help short="The name of the API Management service."/>
          <format pattern="^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$" maxLength="50" minLength="1"/>
        </arg>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_APICollections_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.serviceName"/>
          </operator>
        </operator>
      </condition>
      <condition var="$Condition_APICollections_ListByAzureApiManagementService">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.serviceName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <condition var="$Condition_APICollections_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
          <operator type="not">
            <operator type="hasValue" arg="$Path.serviceName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_APICollections_ListByResourceGroup" operationId="APICollections_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/apiCollections">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ApiManagement/service/{}/providers/Microsoft.Security/apiCollections/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="baseUrl"/>
                        <prop readOnly="True" type="ResourceId" name="discoveredVia"/>
                        <prop readOnly="True" type="string" name="displayName"/>
                        <prop readOnly="True" type="integer64" name="numberOfApiEndpoints"/>
                        <prop readOnly="True" type="integer64" name="numberOfApiEndpointsWithSensitiveDataExposed"/>
                        <prop readOnly="True" type="integer64" name="numberOfExternalApiEndpoints"/>
                        <prop readOnly="True" type="integer64" name="numberOfInactiveApiEndpoints"/>
                        <prop readOnly="True" type="integer64" name="numberOfUnauthenticatedApiEndpoints"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="sensitivityLabel"/>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_APICollections_ListByAzureApiManagementService" operationId="APICollections_ListByAzureApiManagementService">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/providers/Microsoft.Security/apiCollections">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="string" name="serviceName" arg="$Path.serviceName" required="True">
                <format pattern="^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$" maxLength="50" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ApiManagement/service/{}/providers/Microsoft.Security/apiCollections/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="baseUrl"/>
                        <prop readOnly="True" type="ResourceId" name="discoveredVia"/>
                        <prop readOnly="True" type="string" name="displayName"/>
                        <prop readOnly="True" type="integer64" name="numberOfApiEndpoints"/>
                        <prop readOnly="True" type="integer64" name="numberOfApiEndpointsWithSensitiveDataExposed"/>
                        <prop readOnly="True" type="integer64" name="numberOfExternalApiEndpoints"/>
                        <prop readOnly="True" type="integer64" name="numberOfInactiveApiEndpoints"/>
                        <prop readOnly="True" type="integer64" name="numberOfUnauthenticatedApiEndpoints"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="sensitivityLabel"/>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_APICollections_ListBySubscription" operationId="APICollections_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/Microsoft.Security/apiCollections">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-11-15&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="string" name="nextLink"/>
                  <prop readOnly="True" type="array<object>" name="value">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ApiManagement/service/{}/providers/Microsoft.Security/apiCollections/{}"/>
                      </prop>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop readOnly="True" type="string" name="baseUrl"/>
                        <prop readOnly="True" type="ResourceId" name="discoveredVia"/>
                        <prop readOnly="True" type="string" name="displayName"/>
                        <prop readOnly="True" type="integer64" name="numberOfApiEndpoints"/>
                        <prop readOnly="True" type="integer64" name="numberOfApiEndpointsWithSensitiveDataExposed"/>
                        <prop readOnly="True" type="integer64" name="numberOfExternalApiEndpoints"/>
                        <prop readOnly="True" type="integer64" name="numberOfInactiveApiEndpoints"/>
                        <prop readOnly="True" type="integer64" name="numberOfUnauthenticatedApiEndpoints"/>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;InProgress&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="sensitivityLabel"/>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
