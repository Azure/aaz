<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/providers/purestorage.block/reservations" version="2024-11-01-preview" swagger="mgmt-plane/purestorage/ResourceProviders/PureStorage.Block/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvUHVyZVN0b3JhZ2UuQmxvY2svcmVzZXJ2YXRpb25z/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/purestorage.block/reservations" version="2024-11-01-preview" swagger="mgmt-plane/purestorage/ResourceProviders/PureStorage.Block/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QdXJlU3RvcmFnZS5CbG9jay9yZXNlcnZhdGlvbnM=/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
  <commandGroup name="pscloud reservation">
    <command name="list" version="2024-11-01-preview">
      <resource id="/subscriptions/{}/providers/purestorage.block/reservations" version="2024-11-01-preview" swagger="mgmt-plane/purestorage/ResourceProviders/PureStorage.Block/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9wcm92aWRlcnMvUHVyZVN0b3JhZ2UuQmxvY2svcmVzZXJ2YXRpb25z/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/purestorage.block/reservations" version="2024-11-01-preview" swagger="mgmt-plane/purestorage/ResourceProviders/PureStorage.Block/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9QdXJlU3RvcmFnZS5CbG9jay9yZXNlcnZhdGlvbnM=/V/MjAyNC0xMS0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <condition var="$Condition_Reservations_ListBySubscription">
        <operator type="and">
          <operator type="hasValue" arg="$Path.subscriptionId"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.resourceGroupName"/>
          </operator>
        </operator>
      </condition>
      <condition var="$Condition_Reservations_ListByResourceGroup">
        <operator type="and">
          <operator type="hasValue" arg="$Path.resourceGroupName"/>
          <operator type="hasValue" arg="$Path.subscriptionId"/>
        </operator>
      </condition>
      <operation when="$Condition_Reservations_ListBySubscription" operationId="Reservations_ListBySubscription">
        <http path="/subscriptions/{subscriptionId}/providers/PureStorage.Block/reservations">
          <request method="get">
            <path>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/PureStorage.Block/reservations/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="marketplace" required="True">
                          <prop type="object" name="offerDetails" required="True">
                            <prop type="string" name="offerId" required="True"/>
                            <prop type="string" name="planId" required="True"/>
                            <prop type="string" name="planName"/>
                            <prop type="string" name="publisherId" required="True"/>
                            <prop type="string" name="termId"/>
                            <prop type="string" name="termUnit"/>
                          </prop>
                          <prop readOnly="True" type="string" name="subscriptionId"/>
                          <prop type="string" name="subscriptionStatus">
                            <enum>
                              <item value="&quot;PendingFulfillmentStart&quot;"/>
                              <item value="&quot;Subscribed&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;Unsubscribed&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="reservationInternalId"/>
                        <prop type="object" name="user" required="True">
                          <prop type="object" name="companyDetails">
                            <prop type="object" name="address">
                              <prop type="string" name="addressLine1" required="True"/>
                              <prop type="string" name="addressLine2"/>
                              <prop type="string" name="city" required="True"/>
                              <prop type="string" name="country" required="True"/>
                              <prop type="string" name="postalCode" required="True"/>
                              <prop type="string" name="state" required="True"/>
                            </prop>
                            <prop type="string" name="companyName" required="True"/>
                          </prop>
                          <prop type="string" name="emailAddress" required="True">
                            <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                          </prop>
                          <prop type="string" name="firstName" required="True"/>
                          <prop type="string" name="lastName" required="True"/>
                          <prop type="string" name="phoneNumber"/>
                          <prop type="string" name="upn"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Reservations_ListByResourceGroup" operationId="Reservations_ListByResourceGroup">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/PureStorage.Block/reservations">
          <request method="get">
            <path>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True">
                <format maxLength="90" minLength="1"/>
              </param>
              <param type="uuid" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-11-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop readOnly="True" type="ResourceId" name="id">
                        <format template="/subscriptions/{}/resourceGroups/{}/providers/PureStorage.Block/reservations/{}"/>
                      </prop>
                      <prop type="ResourceLocation" name="location" required="True"/>
                      <prop readOnly="True" type="string" name="name"/>
                      <prop type="object" name="properties" clientFlatten="True">
                        <prop type="object" name="marketplace" required="True">
                          <prop type="object" name="offerDetails" required="True">
                            <prop type="string" name="offerId" required="True"/>
                            <prop type="string" name="planId" required="True"/>
                            <prop type="string" name="planName"/>
                            <prop type="string" name="publisherId" required="True"/>
                            <prop type="string" name="termId"/>
                            <prop type="string" name="termUnit"/>
                          </prop>
                          <prop readOnly="True" type="string" name="subscriptionId"/>
                          <prop type="string" name="subscriptionStatus">
                            <enum>
                              <item value="&quot;PendingFulfillmentStart&quot;"/>
                              <item value="&quot;Subscribed&quot;"/>
                              <item value="&quot;Suspended&quot;"/>
                              <item value="&quot;Unsubscribed&quot;"/>
                            </enum>
                          </prop>
                        </prop>
                        <prop readOnly="True" type="string" name="provisioningState">
                          <enum>
                            <item value="&quot;Accepted&quot;"/>
                            <item value="&quot;Canceled&quot;"/>
                            <item value="&quot;Deleting&quot;"/>
                            <item value="&quot;Failed&quot;"/>
                            <item value="&quot;Succeeded&quot;"/>
                          </enum>
                        </prop>
                        <prop readOnly="True" type="string" name="reservationInternalId"/>
                        <prop type="object" name="user" required="True">
                          <prop type="object" name="companyDetails">
                            <prop type="object" name="address">
                              <prop type="string" name="addressLine1" required="True"/>
                              <prop type="string" name="addressLine2"/>
                              <prop type="string" name="city" required="True"/>
                              <prop type="string" name="country" required="True"/>
                              <prop type="string" name="postalCode" required="True"/>
                              <prop type="string" name="state" required="True"/>
                            </prop>
                            <prop type="string" name="companyName" required="True"/>
                          </prop>
                          <prop type="string" name="emailAddress" required="True">
                            <format pattern="^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\.)+[A-Za-z]{2,}$"/>
                          </prop>
                          <prop type="string" name="firstName" required="True"/>
                          <prop type="string" name="lastName" required="True"/>
                          <prop type="string" name="phoneNumber"/>
                          <prop type="string" name="upn"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="systemData">
                        <prop type="dateTime" name="createdAt"/>
                        <prop type="string" name="createdBy"/>
                        <prop type="string" name="createdByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                        <prop type="dateTime" name="lastModifiedAt"/>
                        <prop type="string" name="lastModifiedBy"/>
                        <prop type="string" name="lastModifiedByType">
                          <enum>
                            <item value="&quot;Application&quot;"/>
                            <item value="&quot;Key&quot;"/>
                            <item value="&quot;ManagedIdentity&quot;"/>
                            <item value="&quot;User&quot;"/>
                          </enum>
                        </prop>
                      </prop>
                      <prop type="object" name="tags">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop readOnly="True" type="string" name="type"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
