<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAyMy0wNC0wMg=="/>
  <commandGroup name="disk-encryption-set">
    <command name="show" version="2023-04-02">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAyMy0wNC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
          <help short="Name of disk encryption set."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DiskEncryptionSets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="get">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/diskEncryptionSets/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="activeKey" cls="KeyForDiskEncryptionSet_read">
                      <prop type="string" name="keyUrl" required="True"/>
                      <prop type="object" name="sourceVault">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="autoKeyRotationError" cls="ApiError_read">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details" identifiers="message target">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="object" name="innererror">
                        <prop type="string" name="errordetail"/>
                        <prop type="string" name="exceptiontype"/>
                      </prop>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="string" name="encryptionType">
                      <enum>
                        <item value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
                        <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                        <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="federatedClientId"/>
                    <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                    <prop readOnly="True" type="array<@KeyForDiskEncryptionSet_read>" name="previousKeys">
                      <item type="@KeyForDiskEncryptionSet_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="boolean" name="rotationToLatestKeyVersionEnabled"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2023-04-02" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAyMy0wNC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
          <help short="Name of disk encryption set."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DiskEncryptionSets_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="delete">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2023-04-02">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAyMy0wNC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
          <help short="Name of disk encryption set."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$diskEncryptionSet.location" options="location l" required="True" group="">
          <help short="Resource location"/>
        </arg>
        <arg type="string" var="$diskEncryptionSet.properties.activeKey.keyUrl" options="key-url" group="">
          <help short="URL pointing to a key or secret in KeyVault."/>
        </arg>
        <arg type="string" var="$diskEncryptionSet.properties.activeKey.sourceVault.id" options="source-vault" group="">
          <help short="Name or ID of the KeyVault containing the key or secret."/>
        </arg>
        <arg type="string" var="$diskEncryptionSet.properties.encryptionType" options="encryption-type" group="">
          <help short="The type of key used to encrypt the data of the disk. EncryptionAtRestWithCustomerKey: Disk is encrypted at rest with Customer managed key that can be changed and revoked by a customer. EncryptionAtRestWithPlatformAndCustomerKeys: Disk is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed. ConfidentialVmEncryptedWithCustomerKey: An additional encryption type accepted for confidential VM. Disk is encrypted at rest with Customer managed key."/>
          <enum>
            <item name="ConfidentialVmEncryptedWithCustomerKey" value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
            <item name="EncryptionAtRestWithCustomerKey" value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
            <item name="EncryptionAtRestWithPlatformAndCustomerKeys" value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$diskEncryptionSet.properties.federatedClientId" options="federated-client-id" group="">
          <help short="The federated client id used in cross tenant scenario."/>
        </arg>
        <arg type="boolean" var="$diskEncryptionSet.properties.rotationToLatestKeyVersionEnabled" options="enable-auto-key-rotation auto-rotation" group="">
          <help short="Enable automatic rotation of keys."/>
        </arg>
        <arg type="object" var="$diskEncryptionSet.tags" options="tags" group="">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Managed Identity">
        <arg type="object" var="$diskEncryptionSet.identity" options="identity" group="Managed Identity">
          <help short="The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks."/>
          <arg type="string" var="$diskEncryptionSet.identity.systemAssigned" options="mi-system-assigned system-assigned">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="string" var="$diskEncryptionSet.identity.type" options="type">
            <help short="The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg type="array<string>" var="$diskEncryptionSet.identity.userAssigned" options="mi-user-assigned user-assigned">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
          <arg type="object" var="$diskEncryptionSet.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with the disk encryption set. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="DiskEncryptionSets_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="put">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="diskEncryptionSet" required="True" clientFlatten="True">
                  <prop type="IdentityObject" name="identity" arg="$diskEncryptionSet.identity">
                    <prop type="string" name="type" arg="$diskEncryptionSet.identity.type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities" arg="$diskEncryptionSet.identity.userAssignedIdentities">
                      <additionalProp>
                        <item type="object"/>
                      </additionalProp>
                    </prop>
                    <userAssigned action="create" type="array<string>" name="userAssigned" arg="$diskEncryptionSet.identity.userAssigned">
                      <item action="create" type="string"/>
                    </userAssigned>
                    <systemAssigned action="create" type="string" name="systemAssigned" arg="$diskEncryptionSet.identity.systemAssigned"/>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$diskEncryptionSet.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="activeKey">
                      <prop type="string" name="keyUrl" arg="$diskEncryptionSet.properties.activeKey.keyUrl" required="True"/>
                      <prop type="object" name="sourceVault">
                        <prop type="string" name="id" arg="$diskEncryptionSet.properties.activeKey.sourceVault.id"/>
                      </prop>
                    </prop>
                    <prop type="string" name="encryptionType" arg="$diskEncryptionSet.properties.encryptionType">
                      <enum>
                        <item value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
                        <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                        <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="federatedClientId" arg="$diskEncryptionSet.properties.federatedClientId"/>
                    <prop type="boolean" name="rotationToLatestKeyVersionEnabled" arg="$diskEncryptionSet.properties.rotationToLatestKeyVersionEnabled"/>
                  </prop>
                  <prop type="object" name="tags" arg="$diskEncryptionSet.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DiskEncryptionSet_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/diskEncryptionSets/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="activeKey" cls="KeyForDiskEncryptionSet_read">
                      <prop type="string" name="keyUrl" required="True"/>
                      <prop type="object" name="sourceVault">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="autoKeyRotationError" cls="ApiError_read">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details" identifiers="message target">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="object" name="innererror">
                        <prop type="string" name="errordetail"/>
                        <prop type="string" name="exceptiontype"/>
                      </prop>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="string" name="encryptionType">
                      <enum>
                        <item value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
                        <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                        <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="federatedClientId"/>
                    <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                    <prop readOnly="True" type="array<@KeyForDiskEncryptionSet_read>" name="previousKeys">
                      <item type="@KeyForDiskEncryptionSet_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="boolean" name="rotationToLatestKeyVersionEnabled"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@DiskEncryptionSet_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2023-04-02">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2023-04-02" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAyMy0wNC0wMg=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
          <help short="Name of disk encryption set."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        <arg type="ResourceLocation" var="$diskEncryptionSet.location" options="location l" hide="True" group="">
          <help short="Resource location"/>
        </arg>
        <arg type="string" var="$diskEncryptionSet.properties.activeKey.keyUrl" options="key-url" group="">
          <help short="URL pointing to a key or secret in KeyVault."/>
        </arg>
        <arg nullable="True" type="string" var="$diskEncryptionSet.properties.activeKey.sourceVault.id" options="source-vault" group="">
          <help short="Name or ID of the KeyVault containing the key or secret."/>
        </arg>
        <arg nullable="True" type="string" var="$diskEncryptionSet.properties.encryptionType" options="encryption-type" hide="True" group="">
          <help short="The type of key used to encrypt the data of the disk. EncryptionAtRestWithCustomerKey: Disk is encrypted at rest with Customer managed key that can be changed and revoked by a customer. EncryptionAtRestWithPlatformAndCustomerKeys: Disk is encrypted at rest with 2 layers of encryption. One of the keys is Customer managed and the other key is Platform managed. ConfidentialVmEncryptedWithCustomerKey: An additional encryption type accepted for confidential VM. Disk is encrypted at rest with Customer managed key."/>
          <enum>
            <item name="ConfidentialVmEncryptedWithCustomerKey" value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
            <item name="EncryptionAtRestWithCustomerKey" value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
            <item name="EncryptionAtRestWithPlatformAndCustomerKeys" value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
          </enum>
        </arg>
        <arg nullable="True" type="string" var="$diskEncryptionSet.properties.federatedClientId" options="federated-client-id" group="">
          <help short="The federated client id used in cross tenant scenario."/>
        </arg>
        <arg nullable="True" type="boolean" var="$diskEncryptionSet.properties.rotationToLatestKeyVersionEnabled" options="enable-auto-key-rotation auto-rotation" group="">
          <help short="Enable automatic rotation of keys."/>
        </arg>
        <arg nullable="True" type="object" var="$diskEncryptionSet.tags" options="tags" hide="True" group="">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="DiskEncryptionSet">
        <arg nullable="True" type="object" var="$diskEncryptionSet.identity" options="identity" group="DiskEncryptionSet">
          <help short="The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks."/>
          <arg nullable="True" type="string" var="$diskEncryptionSet.identity.type" options="type">
            <help short="The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys."/>
            <enum>
              <item name="None" value="&quot;None&quot;"/>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
              <item name="SystemAssigned, UserAssigned" value="&quot;SystemAssigned, UserAssigned&quot;"/>
              <item name="UserAssigned" value="&quot;UserAssigned&quot;"/>
            </enum>
          </arg>
          <arg nullable="True" type="object" var="$diskEncryptionSet.identity.userAssignedIdentities" options="user-assigned-identities">
            <help short="The list of user identities associated with the disk encryption set. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."/>
            <additionalProp>
              <item nullable="True" type="object">
                <blank value="{}"/>
              </item>
            </additionalProp>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="DiskEncryptionSets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="get">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DiskEncryptionSet_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/diskEncryptionSets/{}"/>
                  </prop>
                  <prop type="IdentityObject" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;None&quot;"/>
                        <item value="&quot;SystemAssigned&quot;"/>
                        <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                        <item value="&quot;UserAssigned&quot;"/>
                      </enum>
                    </prop>
                    <prop type="object" name="userAssignedIdentities">
                      <additionalProp>
                        <item type="object">
                          <prop readOnly="True" type="string" name="clientId"/>
                          <prop readOnly="True" type="string" name="principalId"/>
                        </item>
                      </additionalProp>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="activeKey" cls="KeyForDiskEncryptionSet_read">
                      <prop type="string" name="keyUrl" required="True"/>
                      <prop type="object" name="sourceVault">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="object" name="autoKeyRotationError" cls="ApiError_read">
                      <prop type="string" name="code"/>
                      <prop type="array<object>" name="details" identifiers="message target">
                        <item type="object">
                          <prop type="string" name="code"/>
                          <prop type="string" name="message"/>
                          <prop type="string" name="target"/>
                        </item>
                      </prop>
                      <prop type="object" name="innererror">
                        <prop type="string" name="errordetail"/>
                        <prop type="string" name="exceptiontype"/>
                      </prop>
                      <prop type="string" name="message"/>
                      <prop type="string" name="target"/>
                    </prop>
                    <prop type="string" name="encryptionType">
                      <enum>
                        <item value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
                        <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                        <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="federatedClientId"/>
                    <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                    <prop readOnly="True" type="array<@KeyForDiskEncryptionSet_read>" name="previousKeys">
                      <item type="@KeyForDiskEncryptionSet_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                    <prop type="boolean" name="rotationToLatestKeyVersionEnabled"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="diskEncryptionSet" required="True" clientFlatten="True">
              <prop type="IdentityObject" name="identity" arg="$diskEncryptionSet.identity">
                <prop type="string" name="type" arg="$diskEncryptionSet.identity.type">
                  <enum>
                    <item value="&quot;None&quot;"/>
                    <item value="&quot;SystemAssigned&quot;"/>
                    <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                    <item value="&quot;UserAssigned&quot;"/>
                  </enum>
                </prop>
                <prop type="object" name="userAssignedIdentities" arg="$diskEncryptionSet.identity.userAssignedIdentities">
                  <additionalProp>
                    <item type="object"/>
                  </additionalProp>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$diskEncryptionSet.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="activeKey">
                  <prop type="string" name="keyUrl" arg="$diskEncryptionSet.properties.activeKey.keyUrl" required="True"/>
                  <prop type="object" name="sourceVault">
                    <prop type="string" name="id" arg="$diskEncryptionSet.properties.activeKey.sourceVault.id"/>
                  </prop>
                </prop>
                <prop type="string" name="encryptionType" arg="$diskEncryptionSet.properties.encryptionType">
                  <enum>
                    <item value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
                    <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                    <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="federatedClientId" arg="$diskEncryptionSet.properties.federatedClientId"/>
                <prop type="boolean" name="rotationToLatestKeyVersionEnabled" arg="$diskEncryptionSet.properties.rotationToLatestKeyVersionEnabled"/>
              </prop>
              <prop type="object" name="tags" arg="$diskEncryptionSet.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="DiskEncryptionSets_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="put">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2023-04-02&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="@DiskEncryptionSet_read"/>
              </json>
            </body>
          </response>
          <response statusCode="202">
            <body>
              <json var="$Instance">
                <schema type="@DiskEncryptionSet_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <commandGroup name="identity">
      <command name="assign" version="2023-04-02">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2023-04-02" subresource="identity" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAyMy0wNC0wMg=="/>
        <argGroup name="">
          <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
            <help short="Name of disk encryption set."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="DiskEncryptionSet.identity">
          <arg type="string" var="$diskEncryptionSet.identity.systemAssigned" options="mi-system-assigned system-assigned" group="DiskEncryptionSet.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$diskEncryptionSet.identity.userAssigned" options="mi-user-assigned user-assigned" group="DiskEncryptionSet.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="diskEncryptionSet">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="DiskEncryptionSets_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
            <request method="get">
              <path>
                <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-04-02&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="DiskEncryptionSet_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/diskEncryptionSets/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="activeKey" cls="KeyForDiskEncryptionSet_read">
                        <prop type="string" name="keyUrl" required="True"/>
                        <prop type="object" name="sourceVault">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="autoKeyRotationError" cls="ApiError_read">
                        <prop type="string" name="code"/>
                        <prop type="array<object>" name="details" identifiers="message target">
                          <item type="object">
                            <prop type="string" name="code"/>
                            <prop type="string" name="message"/>
                            <prop type="string" name="target"/>
                          </item>
                        </prop>
                        <prop type="object" name="innererror">
                          <prop type="string" name="errordetail"/>
                          <prop type="string" name="exceptiontype"/>
                        </prop>
                        <prop type="string" name="message"/>
                        <prop type="string" name="target"/>
                      </prop>
                      <prop type="string" name="encryptionType">
                        <enum>
                          <item value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="federatedClientId"/>
                      <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                      <prop readOnly="True" type="array<@KeyForDiskEncryptionSet_read>" name="previousKeys">
                        <item type="@KeyForDiskEncryptionSet_read"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="boolean" name="rotationToLatestKeyVersionEnabled"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="assign" type="IdentityObject" name="diskEncryptionSet.identity" required="True">
                <userAssigned action="assign" type="array<string>" name="userAssigned" arg="$diskEncryptionSet.identity.userAssigned">
                  <item action="assign" type="string"/>
                </userAssigned>
                <systemAssigned action="assign" type="string" name="systemAssigned" arg="$diskEncryptionSet.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="DiskEncryptionSets_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
            <request method="put">
              <path>
                <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-04-02&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="@DiskEncryptionSet_read"/>
                </json>
              </body>
            </response>
            <response statusCode="202">
              <body>
                <json var="$Instance">
                  <schema type="@DiskEncryptionSet_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="remove" version="2023-04-02" confirmation="Are you sure you want to perform this operation?">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2023-04-02" subresource="identity" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAyMy0wNC0wMg=="/>
        <argGroup name="">
          <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
            <help short="Name of disk encryption set."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <argGroup name="DiskEncryptionSet.identity">
          <arg type="string" var="$diskEncryptionSet.identity.systemAssigned" options="mi-system-assigned system-assigned" group="DiskEncryptionSet.identity">
            <blank value="&quot;True&quot;"/>
            <help short="Set the system managed identity."/>
          </arg>
          <arg type="array<string>" var="$diskEncryptionSet.identity.userAssigned" options="mi-user-assigned user-assigned" group="DiskEncryptionSet.identity">
            <blank value="[]"/>
            <help short="Set the user managed identities."/>
            <item type="string"/>
          </arg>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="diskEncryptionSet">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="DiskEncryptionSets_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
            <request method="get">
              <path>
                <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-04-02&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="DiskEncryptionSet_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/diskEncryptionSets/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="activeKey" cls="KeyForDiskEncryptionSet_read">
                        <prop type="string" name="keyUrl" required="True"/>
                        <prop type="object" name="sourceVault">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="autoKeyRotationError" cls="ApiError_read">
                        <prop type="string" name="code"/>
                        <prop type="array<object>" name="details" identifiers="message target">
                          <item type="object">
                            <prop type="string" name="code"/>
                            <prop type="string" name="message"/>
                            <prop type="string" name="target"/>
                          </item>
                        </prop>
                        <prop type="object" name="innererror">
                          <prop type="string" name="errordetail"/>
                          <prop type="string" name="exceptiontype"/>
                        </prop>
                        <prop type="string" name="message"/>
                        <prop type="string" name="target"/>
                      </prop>
                      <prop type="string" name="encryptionType">
                        <enum>
                          <item value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="federatedClientId"/>
                      <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                      <prop readOnly="True" type="array<@KeyForDiskEncryptionSet_read>" name="previousKeys">
                        <item type="@KeyForDiskEncryptionSet_read"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="boolean" name="rotationToLatestKeyVersionEnabled"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <operation>
          <instanceUpdate ref="$Subresource">
            <json>
              <schema action="remove" type="IdentityObject" name="diskEncryptionSet.identity" required="True">
                <userAssigned action="remove" type="array<string>" name="userAssigned" arg="$diskEncryptionSet.identity.userAssigned">
                  <item action="remove" type="string"/>
                </userAssigned>
                <systemAssigned action="remove" type="string" name="systemAssigned" arg="$diskEncryptionSet.identity.systemAssigned"/>
              </schema>
            </json>
          </instanceUpdate>
        </operation>
        <operation operationId="DiskEncryptionSets_CreateOrUpdate">
          <longRunning finalStateVia="azure-async-operation"/>
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
            <request method="put">
              <path>
                <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-04-02&quot;"/>
                </const>
              </query>
              <body>
                <json ref="$Instance"/>
              </body>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="@DiskEncryptionSet_read"/>
                </json>
              </body>
            </response>
            <response statusCode="202">
              <body>
                <json var="$Instance">
                  <schema type="@DiskEncryptionSet_read"/>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
      <command name="show" version="2023-04-02">
        <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2023-04-02" subresource="identity" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAyMy0wNC0wMg=="/>
        <argGroup name="">
          <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
            <help short="Name of disk encryption set."/>
          </arg>
          <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
          <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
        </argGroup>
        <subresourceSelector var="$Subresource" ref="$Instance">
          <json type="object" name="diskEncryptionSet">
            <prop type="object" name="identity"/>
          </json>
        </subresourceSelector>
        <operation operationId="DiskEncryptionSets_Get">
          <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
            <request method="get">
              <path>
                <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
                <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
                <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
              </path>
              <query>
                <const readOnly="True" const="True" type="string" name="api-version" required="True">
                  <default value="&quot;2023-04-02&quot;"/>
                </const>
              </query>
            </request>
            <response statusCode="200">
              <body>
                <json var="$Instance">
                  <schema type="object" cls="DiskEncryptionSet_read">
                    <prop readOnly="True" type="ResourceId" name="id">
                      <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/diskEncryptionSets/{}"/>
                    </prop>
                    <prop type="IdentityObject" name="identity">
                      <prop readOnly="True" type="string" name="principalId"/>
                      <prop readOnly="True" type="string" name="tenantId"/>
                      <prop type="string" name="type">
                        <enum>
                          <item value="&quot;None&quot;"/>
                          <item value="&quot;SystemAssigned&quot;"/>
                          <item value="&quot;SystemAssigned, UserAssigned&quot;"/>
                          <item value="&quot;UserAssigned&quot;"/>
                        </enum>
                      </prop>
                      <prop type="object" name="userAssignedIdentities">
                        <additionalProp>
                          <item type="object">
                            <prop readOnly="True" type="string" name="clientId"/>
                            <prop readOnly="True" type="string" name="principalId"/>
                          </item>
                        </additionalProp>
                      </prop>
                    </prop>
                    <prop type="ResourceLocation" name="location" required="True"/>
                    <prop readOnly="True" type="string" name="name"/>
                    <prop type="object" name="properties" clientFlatten="True">
                      <prop type="object" name="activeKey" cls="KeyForDiskEncryptionSet_read">
                        <prop type="string" name="keyUrl" required="True"/>
                        <prop type="object" name="sourceVault">
                          <prop type="string" name="id"/>
                        </prop>
                      </prop>
                      <prop readOnly="True" type="object" name="autoKeyRotationError" cls="ApiError_read">
                        <prop type="string" name="code"/>
                        <prop type="array<object>" name="details" identifiers="message target">
                          <item type="object">
                            <prop type="string" name="code"/>
                            <prop type="string" name="message"/>
                            <prop type="string" name="target"/>
                          </item>
                        </prop>
                        <prop type="object" name="innererror">
                          <prop type="string" name="errordetail"/>
                          <prop type="string" name="exceptiontype"/>
                        </prop>
                        <prop type="string" name="message"/>
                        <prop type="string" name="target"/>
                      </prop>
                      <prop type="string" name="encryptionType">
                        <enum>
                          <item value="&quot;ConfidentialVmEncryptedWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithCustomerKey&quot;"/>
                          <item value="&quot;EncryptionAtRestWithPlatformAndCustomerKeys&quot;"/>
                        </enum>
                      </prop>
                      <prop type="string" name="federatedClientId"/>
                      <prop readOnly="True" type="dateTime" name="lastKeyRotationTimestamp"/>
                      <prop readOnly="True" type="array<@KeyForDiskEncryptionSet_read>" name="previousKeys">
                        <item type="@KeyForDiskEncryptionSet_read"/>
                      </prop>
                      <prop readOnly="True" type="string" name="provisioningState"/>
                      <prop type="boolean" name="rotationToLatestKeyVersionEnabled"/>
                    </prop>
                    <prop type="object" name="tags">
                      <additionalProp>
                        <item type="string"/>
                      </additionalProp>
                    </prop>
                    <prop readOnly="True" type="string" name="type"/>
                  </schema>
                </json>
              </body>
            </response>
            <response isError="True">
              <body>
                <json>
                  <schema type="@ODataV4Format"/>
                </json>
              </body>
            </response>
          </http>
        </operation>
        <output type="object" ref="$Subresource" clientFlatten="True"/>
      </command>
    </commandGroup>
  </commandGroup>
</CodeGen>
