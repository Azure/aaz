<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2019-07-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAxOS0wNy0wMQ=="/>
  <commandGroup name="disk-encryption-set">
    <command name="show" version="2019-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2019-07-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAxOS0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
          <help short="Name of disk encryption set."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DiskEncryptionSets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="get">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2019-07-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/diskEncryptionSets/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="activeKey" cls="KeyVaultAndKeyReference_read">
                      <prop type="string" name="keyUrl" required="True"/>
                      <prop type="object" name="sourceVault" required="True">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<@KeyVaultAndKeyReference_read>" name="previousKeys">
                      <item type="@KeyVaultAndKeyReference_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2019-07-01" confirmation="">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2019-07-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAxOS0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
          <help short="Name of disk encryption set."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <operation operationId="DiskEncryptionSets_Delete">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="delete">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2019-07-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200"/>
          <response statusCode="202"/>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2019-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2019-07-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAxOS0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
          <help short="Name of disk encryption set."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="DiskEncryptionSet">
        <arg type="object" var="$diskEncryptionSet.identity" options="identity" group="DiskEncryptionSet">
          <help short="The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks."/>
          <arg type="string" var="$diskEncryptionSet.identity.type" options="type">
            <help short="The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys."/>
            <enum>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$diskEncryptionSet.location" options="location l" required="True" group="DiskEncryptionSet">
          <help short="Resource location"/>
        </arg>
        <arg type="object" var="$diskEncryptionSet.tags" options="tags" group="DiskEncryptionSet">
          <help short="Resource tags"/>
          <additionalProp>
            <item type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="object" var="$diskEncryptionSet.properties.activeKey" options="active-key" group="Properties">
          <help short="The key vault key which is currently used by this disk encryption set."/>
          <arg type="string" var="$diskEncryptionSet.properties.activeKey.keyUrl" options="key-url" required="True">
            <help short="Fully versioned Key Url pointing to a key in KeyVault. Version segment of the Url is required regardless of rotationToLatestKeyVersionEnabled value."/>
          </arg>
          <arg type="object" var="$diskEncryptionSet.properties.activeKey.sourceVault" options="source-vault" required="True">
            <help short="Resource id of the KeyVault containing the key or secret. This property is optional and cannot be used if the KeyVault subscription is not the same as the Disk Encryption Set subscription."/>
            <arg type="string" var="$diskEncryptionSet.properties.activeKey.sourceVault.id" options="id">
              <help short="Resource Id"/>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="DiskEncryptionSets_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="put">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2019-07-01&quot;"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="diskEncryptionSet" required="True" clientFlatten="True">
                  <prop type="object" name="identity" arg="$diskEncryptionSet.identity">
                    <prop type="string" name="type" arg="$diskEncryptionSet.identity.type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" arg="$diskEncryptionSet.location" required="True"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="activeKey" arg="$diskEncryptionSet.properties.activeKey">
                      <prop type="string" name="keyUrl" arg="$diskEncryptionSet.properties.activeKey.keyUrl" required="True"/>
                      <prop type="object" name="sourceVault" arg="$diskEncryptionSet.properties.activeKey.sourceVault" required="True">
                        <prop type="string" name="id" arg="$diskEncryptionSet.properties.activeKey.sourceVault.id"/>
                      </prop>
                    </prop>
                  </prop>
                  <prop type="object" name="tags" arg="$diskEncryptionSet.tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/diskEncryptionSets/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="activeKey" cls="KeyVaultAndKeyReference_read">
                      <prop type="string" name="keyUrl" required="True"/>
                      <prop type="object" name="sourceVault" required="True">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<@KeyVaultAndKeyReference_read>" name="previousKeys">
                      <item type="@KeyVaultAndKeyReference_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2019-07-01">
      <resource id="/subscriptions/{}/resourcegroups/{}/providers/microsoft.compute/diskencryptionsets/{}" version="2019-07-01" swagger="mgmt-plane/compute/ResourceProviders/Microsoft.Compute/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuQ29tcHV0ZS9kaXNrRW5jcnlwdGlvblNldHMve2Rpc2tFbmNyeXB0aW9uU2V0TmFtZX0=/V/MjAxOS0wNy0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.diskEncryptionSetName" options="disk-encryption-set-name name n" required="True" group="" idPart="name">
          <help short="Name of disk encryption set."/>
        </arg>
        <arg type="ResourceGroupName" var="$Path.resourceGroupName" options="resource-group g" required="True" idPart="resource_group"/>
        <arg type="SubscriptionId" var="$Path.subscriptionId" options="subscription" required="True" idPart="subscription"/>
      </argGroup>
      <argGroup name="DiskEncryptionSet">
        <arg nullable="True" type="object" var="$diskEncryptionSet.identity" options="identity" group="DiskEncryptionSet">
          <help short="The managed identity for the disk encryption set. It should be given permission on the key vault before it can be used to encrypt disks."/>
          <arg nullable="True" type="string" var="$diskEncryptionSet.identity.type" options="type">
            <help short="The type of Managed Identity used by the DiskEncryptionSet. Only SystemAssigned is supported for new creations. Disk Encryption Sets can be updated with Identity type None during migration of subscription to a new Azure Active Directory tenant; it will cause the encrypted resources to lose access to the keys."/>
            <enum>
              <item name="SystemAssigned" value="&quot;SystemAssigned&quot;"/>
            </enum>
          </arg>
        </arg>
        <arg type="ResourceLocation" var="$diskEncryptionSet.location" options="location l" group="DiskEncryptionSet">
          <help short="Resource location"/>
        </arg>
        <arg nullable="True" type="object" var="$diskEncryptionSet.tags" options="tags" group="DiskEncryptionSet">
          <help short="Resource tags"/>
          <additionalProp>
            <item nullable="True" type="string"/>
          </additionalProp>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="object" var="$diskEncryptionSet.properties.activeKey" options="active-key" group="Properties">
          <help short="The key vault key which is currently used by this disk encryption set."/>
          <arg type="string" var="$diskEncryptionSet.properties.activeKey.keyUrl" options="key-url">
            <help short="Fully versioned Key Url pointing to a key in KeyVault. Version segment of the Url is required regardless of rotationToLatestKeyVersionEnabled value."/>
          </arg>
          <arg type="object" var="$diskEncryptionSet.properties.activeKey.sourceVault" options="source-vault">
            <help short="Resource id of the KeyVault containing the key or secret. This property is optional and cannot be used if the KeyVault subscription is not the same as the Disk Encryption Set subscription."/>
            <arg nullable="True" type="string" var="$diskEncryptionSet.properties.activeKey.sourceVault.id" options="id">
              <help short="Resource Id"/>
            </arg>
          </arg>
        </arg>
      </argGroup>
      <operation operationId="DiskEncryptionSets_Get">
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="get">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2019-07-01&quot;"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="DiskEncryptionSet_read">
                  <prop readOnly="True" type="ResourceId" name="id">
                    <format template="/subscriptions/{}/resourceGroups/{}/providers/Microsoft.Compute/diskEncryptionSets/{}"/>
                  </prop>
                  <prop type="object" name="identity">
                    <prop readOnly="True" type="string" name="principalId"/>
                    <prop readOnly="True" type="string" name="tenantId"/>
                    <prop type="string" name="type">
                      <enum>
                        <item value="&quot;SystemAssigned&quot;"/>
                      </enum>
                    </prop>
                  </prop>
                  <prop type="ResourceLocation" name="location" required="True"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="object" name="activeKey" cls="KeyVaultAndKeyReference_read">
                      <prop type="string" name="keyUrl" required="True"/>
                      <prop type="object" name="sourceVault" required="True">
                        <prop type="string" name="id"/>
                      </prop>
                    </prop>
                    <prop readOnly="True" type="array<@KeyVaultAndKeyReference_read>" name="previousKeys">
                      <item type="@KeyVaultAndKeyReference_read"/>
                    </prop>
                    <prop readOnly="True" type="string" name="provisioningState"/>
                  </prop>
                  <prop type="object" name="tags">
                    <additionalProp>
                      <item type="string"/>
                    </additionalProp>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="diskEncryptionSet" required="True" clientFlatten="True">
              <prop type="object" name="identity" arg="$diskEncryptionSet.identity">
                <prop type="string" name="type" arg="$diskEncryptionSet.identity.type">
                  <enum>
                    <item value="&quot;SystemAssigned&quot;"/>
                  </enum>
                </prop>
              </prop>
              <prop type="ResourceLocation" name="location" arg="$diskEncryptionSet.location" required="True"/>
              <prop type="object" name="properties" clientFlatten="True">
                <prop type="object" name="activeKey" arg="$diskEncryptionSet.properties.activeKey">
                  <prop type="string" name="keyUrl" arg="$diskEncryptionSet.properties.activeKey.keyUrl" required="True"/>
                  <prop type="object" name="sourceVault" arg="$diskEncryptionSet.properties.activeKey.sourceVault" required="True">
                    <prop type="string" name="id" arg="$diskEncryptionSet.properties.activeKey.sourceVault.id"/>
                  </prop>
                </prop>
              </prop>
              <prop type="object" name="tags" arg="$diskEncryptionSet.tags">
                <additionalProp>
                  <item type="string"/>
                </additionalProp>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="DiskEncryptionSets_CreateOrUpdate">
        <longRunning finalStateVia="azure-async-operation"/>
        <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{diskEncryptionSetName}">
          <request method="put">
            <path>
              <param type="string" name="diskEncryptionSetName" arg="$Path.diskEncryptionSetName" required="True"/>
              <param type="string" name="resourceGroupName" arg="$Path.resourceGroupName" required="True"/>
              <param type="string" name="subscriptionId" arg="$Path.subscriptionId" required="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2019-07-01&quot;"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@DiskEncryptionSet_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
