{"plane": "mgmt-plane", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicefabricmesh/applications/{}", "version": "2018-09-01-preview", "swagger": "mgmt-plane/servicefabricmesh/ResourceProviders/Microsoft.ServiceFabricMesh/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUZhYnJpY01lc2gvYXBwbGljYXRpb25zL3thcHBsaWNhdGlvblJlc291cmNlTmFtZX0=/V/MjAxOC0wOS0wMS1wcmV2aWV3"}], "commandGroups": [{"name": "mesh app", "commands": [{"name": "show", "version": "2018-09-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicefabricmesh/applications/{}", "version": "2018-09-01-preview", "swagger": "mgmt-plane/servicefabricmesh/ResourceProviders/Microsoft.ServiceFabricMesh/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUZhYnJpY01lc2gvYXBwbGljYXRpb25zL3thcHBsaWNhdGlvblJlc291cmNlTmFtZX0=/V/MjAxOC0wOS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.applicationResourceName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the application."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Application_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "applicationResourceName", "arg": "$Path.applicationResourceName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "enum": {"items": [{"value": "2018-09-01-preview"}]}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ServiceFabricMesh/applications/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "string", "name": "debugParams"}, {"type": "string", "name": "description"}, {"type": "object", "name": "diagnostics", "props": [{"type": "array<string>", "name": "defaultSinkRefs", "item": {"type": "string"}}, {"type": "boolean", "name": "enabled"}, {"type": "array<object>", "name": "sinks", "item": {"type": "object", "props": [{"type": "string", "name": "description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "AzureInternalMonitoringPipeline"}, {"value": "Invalid"}]}}, {"type": "string", "name": "name"}], "discriminators": [{"property": "kind", "value": "AzureInternalMonitoringPipeline", "props": [{"type": "string", "name": "accountName"}, {"type": "string", "name": "autoKeyConfigUrl"}, {"type": "string", "name": "fluentdConfigUrl"}, {"type": "string", "name": "maConfigUrl"}, {"type": "string", "name": "namespace"}]}]}}]}, {"type": "string", "name": "healthState", "enum": {"items": [{"value": "Error"}, {"value": "Invalid"}, {"value": "Ok"}, {"value": "Unknown"}, {"value": "Warning"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "array<string>", "name": "serviceNames", "item": {"type": "string"}}, {"type": "array<object>", "name": "services", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ServiceFabricMesh/applications/{}/services/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "array<object>", "name": "autoScalingPolicies", "item": {"type": "object", "props": [{"type": "object", "name": "mechanism", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "AddRemoveReplica"}]}}], "discriminators": [{"property": "kind", "value": "AddRemoveReplica", "props": [{"type": "integer", "name": "maxCount", "required": true}, {"type": "integer", "name": "minCount", "required": true}, {"type": "integer", "name": "scaleIncrement", "required": true}]}]}, {"type": "string", "name": "name", "required": true}, {"type": "object", "name": "trigger", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "AverageLoad"}]}}], "discriminators": [{"property": "kind", "value": "AverageLoad", "props": [{"type": "float64", "name": "lowerLoadThreshold", "required": true}, {"type": "object", "name": "metric", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "Resource"}]}}], "discriminators": [{"property": "kind", "value": "Resource", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "cpu"}, {"value": "memoryInGB"}]}}]}]}, {"type": "integer", "name": "scaleIntervalInSeconds", "required": true, "format": {"minimum": 60}}, {"type": "float64", "name": "upperLoadThreshold", "required": true}]}]}]}}, {"type": "array<object>", "name": "codePackages", "required": true, "item": {"type": "object", "props": [{"type": "array<string>", "name": "commands", "item": {"type": "string"}}, {"type": "object", "name": "diagnostics", "props": [{"type": "boolean", "name": "enabled"}, {"type": "array<string>", "name": "sinkRefs", "item": {"type": "string"}}], "cls": "DiagnosticsRef_read"}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "integer", "name": "port"}]}}, {"type": "string", "name": "entrypoint"}, {"type": "array<object>", "name": "environmentVariables", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "value"}]}}, {"type": "string", "name": "image", "required": true}, {"type": "object", "name": "imageRegistryCredential", "props": [{"type": "string", "name": "password"}, {"type": "string", "name": "server", "required": true}, {"type": "string", "name": "username", "required": true}]}, {"type": "object", "name": "instanceView", "props": [{"type": "object", "name": "currentState", "props": [{"type": "string", "name": "detailStatus"}, {"type": "string", "name": "exitCode"}, {"type": "dateTime", "name": "finishTime"}, {"type": "dateTime", "name": "startTime"}, {"type": "string", "name": "state"}], "cls": "ContainerState_read"}, {"type": "array<object>", "name": "events", "item": {"type": "object", "props": [{"type": "integer", "name": "count"}, {"type": "string", "name": "firstTimestamp"}, {"type": "string", "name": "lastTimestamp"}, {"type": "string", "name": "message"}, {"type": "string", "name": "name"}, {"type": "string", "name": "type"}]}}, {"type": "@ContainerState_read", "name": "previousState"}, {"type": "integer", "name": "restartCount"}]}, {"type": "array<object>", "name": "labels", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}]}}, {"type": "string", "name": "name", "required": true}, {"type": "array<object>", "name": "reliableCollectionsRefs", "item": {"type": "object", "props": [{"type": "boolean", "name": "doNotPersistState"}, {"type": "string", "name": "name", "required": true}]}}, {"type": "object", "name": "resources", "required": true, "props": [{"type": "object", "name": "limits", "props": [{"type": "float64", "name": "cpu"}, {"type": "float64", "name": "memoryInGB"}]}, {"type": "object", "name": "requests", "required": true, "props": [{"type": "float64", "name": "cpu", "required": true}, {"type": "float64", "name": "memoryInGB", "required": true}]}]}, {"type": "array<object>", "name": "settings", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "value"}]}}, {"type": "array<object>", "name": "volumeRefs", "item": {"type": "object", "props": [{"type": "string", "name": "destinationPath", "required": true}, {"type": "string", "name": "name", "required": true}, {"type": "boolean", "name": "readOnly"}]}}, {"type": "array<object>", "name": "volumes", "item": {"type": "object", "props": [{"type": "object", "name": "creationParameters", "required": true, "props": [{"type": "string", "name": "description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "ServiceFabricVolumeDisk"}]}}], "discriminators": [{"property": "kind", "value": "ServiceFabricVolumeDisk", "props": [{"type": "string", "name": "sizeDisk", "required": true, "enum": {"items": [{"value": "Large"}, {"value": "Medium"}, {"value": "Small"}]}}]}]}, {"type": "string", "name": "destinationPath", "required": true}, {"type": "string", "name": "name", "required": true}, {"type": "boolean", "name": "readOnly"}]}}]}}, {"type": "string", "name": "description"}, {"type": "@DiagnosticsRef_read", "name": "diagnostics"}, {"type": "string", "name": "healthState", "enum": {"items": [{"value": "Error"}, {"value": "Invalid"}, {"value": "Ok"}, {"value": "Unknown"}, {"value": "Warning"}]}}, {"type": "array<object>", "name": "networkRefs", "item": {"type": "object", "props": [{"type": "array<object>", "name": "endpointRefs", "item": {"type": "object", "props": [{"type": "string", "name": "name"}]}}, {"type": "string", "name": "name"}]}}, {"type": "string", "name": "osType", "required": true, "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "integer", "name": "replicaCount"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Ready"}, {"value": "Unknown"}, {"value": "Upgrading"}]}}, {"readOnly": true, "type": "string", "name": "statusDetails"}, {"readOnly": true, "type": "string", "name": "unhealthyEvaluation"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Ready"}, {"value": "Unknown"}, {"value": "Upgrading"}]}}, {"readOnly": true, "type": "string", "name": "statusDetails"}, {"readOnly": true, "type": "string", "name": "unhealthyEvaluation"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}], "confirmation": ""}, {"name": "delete", "version": "2018-09-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicefabricmesh/applications/{}", "version": "2018-09-01-preview", "swagger": "mgmt-plane/servicefabricmesh/ResourceProviders/Microsoft.ServiceFabricMesh/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUZhYnJpY01lc2gvYXBwbGljYXRpb25zL3thcHBsaWNhdGlvblJlc291cmNlTmFtZX0=/V/MjAxOC0wOS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.applicationResourceName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the application."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}], "operations": [{"operationId": "Application_Delete", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}", "request": {"method": "delete", "path": {"params": [{"type": "string", "name": "applicationResourceName", "arg": "$Path.applicationResourceName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "enum": {"items": [{"value": "2018-09-01-preview"}]}}]}}, "responses": [{"statusCode": [200]}, {"statusCode": [202]}, {"statusCode": [204]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "confirmation": "Are you sure you want to perform this operation?"}, {"name": "create", "version": "2018-09-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicefabricmesh/applications/{}", "version": "2018-09-01-preview", "swagger": "mgmt-plane/servicefabricmesh/ResourceProviders/Microsoft.ServiceFabricMesh/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUZhYnJpY01lc2gvYXBwbGljYXRpb25zL3thcHBsaWNhdGlvblJlc291cmNlTmFtZX0=/V/MjAxOC0wOS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.applicationResourceName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the application."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "ApplicationResourceDescription", "args": [{"type": "ResourceLocation", "var": "$applicationResourceDescription.location", "options": ["l", "location"], "required": true, "group": "ApplicationResourceDescription", "help": {"short": "The geo-location where the resource lives"}}, {"type": "object", "var": "$applicationResourceDescription.tags", "options": ["tags"], "group": "ApplicationResourceDescription", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"type": "string"}}}]}, {"name": "Properties", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.debugParams", "options": ["debug-params"], "group": "Properties", "help": {"short": "Internal - used by Visual Studio to setup the debugging session on the local development environment."}}, {"type": "string", "var": "$applicationResourceDescription.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "User readable description of the application."}}, {"type": "object", "var": "$applicationResourceDescription.properties.diagnostics", "options": ["diagnostics"], "group": "Properties", "help": {"short": "Describes the diagnostics definition and usage for an application resource."}, "args": [{"type": "array<string>", "var": "$applicationResourceDescription.properties.diagnostics.defaultSinkRefs", "options": ["default-sink-refs"], "help": {"short": "The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level."}, "item": {"type": "string"}}, {"type": "boolean", "var": "$applicationResourceDescription.properties.diagnostics.enabled", "options": ["enabled"], "help": {"short": "Status of whether or not sinks are enabled."}}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.diagnostics.sinks", "options": ["sinks"], "help": {"short": "List of supported sinks that can be referenced."}, "item": {"type": "object", "args": [{"type": "object", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline", "options": ["azure-internal-monitoring-pipeline"], "args": [{"type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.accountName", "options": ["account-name"], "help": {"short": "Azure Internal monitoring pipeline account."}}, {"type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.autoKeyConfigUrl", "options": ["auto-key-config-url"], "help": {"short": "Azure Internal monitoring pipeline autokey associated with the certificate."}}, {"type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.fluentdConfigUrl", "options": ["fluentd-config-url"], "help": {"short": "Azure Internal monitoring agent fluentd configuration."}}, {"type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.maConfigUrl", "options": ["ma-config-url"], "help": {"short": "Azure Internal monitoring agent configuration."}}, {"type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.namespace", "options": ["namespace"], "help": {"short": "Azure Internal monitoring pipeline account namespace."}}]}, {"type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].description", "options": ["description"], "help": {"short": "A description of the sink."}}, {"type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].name", "options": ["name"], "help": {"short": "Name of the sink. This value is referenced by DiagnosticsReferenceDescription"}}]}}]}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services", "options": ["services"], "group": "Properties", "help": {"short": "Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource."}, "item": {"type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].name", "options": ["name"], "help": {"short": "The name of the resource"}}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies", "options": ["auto-scaling-policies"], "group": "Properties", "help": {"short": "Auto scaling policies"}, "item": {"type": "object", "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism", "options": ["mechanism"], "required": true, "help": {"short": "The mechanism that is used to scale when auto scaling operation is invoked."}, "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica", "options": ["add-remove-replica"], "args": [{"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.maxCount", "options": ["max-count"], "required": true, "help": {"short": "Maximum number of containers (scale up won't be performed above this number)."}}, {"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.minCount", "options": ["min-count"], "required": true, "help": {"short": "Minimum number of containers (scale down won't be performed below this number)."}}, {"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.scaleIncrement", "options": ["scale-increment"], "required": true, "help": {"short": "Each time auto scaling is performed, this number of containers will be added or removed."}}]}]}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].name", "options": ["name"], "required": true, "help": {"short": "The name of the auto scaling policy."}}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger", "options": ["trigger"], "required": true, "help": {"short": "Determines when auto scaling operation will be invoked."}, "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad", "options": ["average-load"], "args": [{"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.lowerLoadThreshold", "options": ["lower-load-threshold"], "required": true, "help": {"short": "Lower load threshold (if average load is below this threshold, service will scale down)."}}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric", "options": ["metric"], "required": true, "help": {"short": "Description of the metric that is used for scaling."}, "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric.Resource", "options": ["resource"], "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric.Resource.name", "options": ["name"], "required": true, "help": {"short": "Name of the resource."}, "enum": {"items": [{"name": "cpu", "value": "cpu"}, {"name": "memoryInGB", "value": "memoryInGB"}]}}]}]}, {"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.scaleIntervalInSeconds", "options": ["scale-interval-in-seconds"], "required": true, "help": {"short": "Scale interval that indicates how often will this trigger be checked."}, "format": {"minimum": 60}}, {"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.upperLoadThreshold", "options": ["upper-load-threshold"], "required": true, "help": {"short": "Upper load threshold (if average load is above this threshold, service will scale up)."}}]}]}]}}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages", "options": ["code-packages"], "required": true, "group": "Properties", "help": {"short": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.)."}, "item": {"type": "object", "args": [{"type": "array<string>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].commands", "options": ["commands"], "help": {"short": "Command array to execute within the container in exec form."}, "item": {"type": "string"}}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].diagnostics", "options": ["diagnostics"], "help": {"short": "Reference to sinks in DiagnosticsDescription."}, "args": [{"type": "boolean", "var": "@DiagnosticsRef_create.enabled", "options": ["enabled"], "help": {"short": "Status of whether or not sinks are enabled."}}, {"type": "array<string>", "var": "@DiagnosticsRef_create.sinkRefs", "options": ["sink-refs"], "help": {"short": "List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription."}, "item": {"type": "string"}}], "cls": "DiagnosticsRef_create"}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints", "options": ["endpoints"], "help": {"short": "The endpoints exposed by this container."}, "item": {"type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints[].name", "options": ["name"], "required": true, "help": {"short": "The name of the endpoint."}}, {"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints[].port", "options": ["port"], "help": {"short": "Port used by the container."}}]}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].entrypoint", "options": ["entrypoint"], "help": {"short": "Override for the default entry point in the container."}}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables", "options": ["environment-variables"], "help": {"short": "The environment variables to set in this container"}, "item": {"type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables[].name", "options": ["name"], "help": {"short": "The name of the environment variable."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables[].value", "options": ["value"], "help": {"short": "The value of the environment variable."}}]}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].image", "options": ["image"], "required": true, "help": {"short": "The Container image to use."}}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential", "options": ["image-registry-credential"], "help": {"short": "Image registry credential."}, "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.password", "options": ["password"], "help": {"short": "The password for the private registry. The password is required for create or update operations, however it is not returned in the get or list operations."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.server", "options": ["server"], "required": true, "help": {"short": "Docker image registry server, without protocol such as `http` and `https`."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.username", "options": ["username"], "required": true, "help": {"short": "The username for the private registry."}}]}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels", "options": ["labels"], "help": {"short": "The labels to set in this container."}, "item": {"type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels[].name", "options": ["name"], "required": true, "help": {"short": "The name of the container label."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels[].value", "options": ["value"], "required": true, "help": {"short": "The value of the container label."}}]}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].name", "options": ["name"], "required": true, "help": {"short": "The name of the code package."}}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs", "options": ["reliable-collections-refs"], "help": {"short": "A list of ReliableCollection resources used by this particular code package. Please refer to ReliableCollectionsRef for more details."}, "item": {"type": "object", "args": [{"type": "boolean", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs[].doNotPersistState", "options": ["do-not-persist-state"], "help": {"short": "False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs[].name", "options": ["name"], "required": true, "help": {"short": "Name of ReliableCollection resource. Right now it's not used and you can use any string."}}]}}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources", "options": ["resources"], "required": true, "help": {"short": "The resources required by this container."}, "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits", "options": ["limits"], "help": {"short": "Describes the maximum limits on the resources for a given container."}, "args": [{"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits.cpu", "options": ["cpu"], "help": {"short": "CPU limits in cores. At present, only full cores are supported."}}, {"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits.memoryInGB", "options": ["memory-in-gb"], "help": {"short": "The memory limit in GB."}}]}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests", "options": ["requests"], "required": true, "help": {"short": "Describes the requested resources for a given container."}, "args": [{"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests.cpu", "options": ["cpu"], "required": true, "help": {"short": "Requested number of CPU cores. At present, only full cores are supported."}}, {"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests.memoryInGB", "options": ["memory-in-gb"], "required": true, "help": {"short": "The memory request in GB for this container."}}]}]}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings", "options": ["settings"], "help": {"short": "The settings to set in this container. The setting file path can be fetched from environment variable \"Fabric_SettingPath\". The path for Windows container is \"C:\\\\secrets\". The path for Linux container is \"/var/secrets\"."}, "item": {"type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings[].name", "options": ["name"], "help": {"short": "The name of the setting."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings[].value", "options": ["value"], "help": {"short": "The value of the setting."}}]}}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs", "options": ["volume-refs"], "help": {"short": "Volumes to be attached to the container. The lifetime of these volumes is independent of the application's lifetime."}, "item": {"type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].destinationPath", "options": ["destination-path"], "required": true, "help": {"short": "The path within the container at which the volume should be mounted. Only valid path characters are allowed."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].name", "options": ["name"], "required": true, "help": {"short": "Name of the volume being referenced."}}, {"type": "boolean", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].readOnly", "options": ["read-only"], "help": {"short": "The flag indicating whether the volume is read only. Default is 'false'."}}]}}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes", "options": ["volumes"], "help": {"short": "Volumes to be attached to the container. The lifetime of these volumes is scoped to the application's lifetime."}, "item": {"type": "object", "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters", "options": ["creation-parameters"], "required": true, "help": {"short": "Describes parameters for creating application-scoped volumes."}, "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.ServiceFabricVolumeDisk", "options": ["service-fabric-volume-disk"], "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.ServiceFabricVolumeDisk.sizeDisk", "options": ["size-disk"], "required": true, "help": {"short": "Volume size"}, "enum": {"items": [{"name": "Large", "value": "Large"}, {"name": "Medium", "value": "Medium"}, {"name": "Small", "value": "Small"}]}}]}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.description", "options": ["description"], "help": {"short": "User readable description of the volume."}}]}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].destinationPath", "options": ["destination-path"], "required": true, "help": {"short": "The path within the container at which the volume should be mounted. Only valid path characters are allowed."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].name", "options": ["name"], "required": true, "help": {"short": "Name of the volume being referenced."}}, {"type": "boolean", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].readOnly", "options": ["read-only"], "help": {"short": "The flag indicating whether the volume is read only. Default is 'false'."}}]}}]}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.description", "options": ["description"], "group": "Properties", "help": {"short": "User readable description of the service."}}, {"type": "@DiagnosticsRef_create", "var": "$applicationResourceDescription.properties.services[].properties.diagnostics", "options": ["diagnostics"], "group": "Properties", "help": {"short": "Reference to sinks in DiagnosticsDescription."}}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.networkRefs", "options": ["network-refs"], "group": "Properties", "help": {"short": "The names of the private networks that this service needs to be part of."}, "item": {"type": "object", "args": [{"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.networkRefs[].endpointRefs", "options": ["endpoint-refs"], "help": {"short": "A list of endpoints that are exposed on this network."}, "item": {"type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.networkRefs[].endpointRefs[].name", "options": ["name"], "help": {"short": "Name of the endpoint."}}]}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.networkRefs[].name", "options": ["name"], "help": {"short": "Name of the network"}}]}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.osType", "options": ["os-type"], "required": true, "group": "Properties", "help": {"short": "The operation system required by the code in service."}, "enum": {"items": [{"name": "Linux", "value": "Linux"}, {"name": "Windows", "value": "Windows"}]}}, {"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.replicaCount", "options": ["replica-count"], "group": "Properties", "help": {"short": "The number of replicas of the service to create. Defaults to 1 if not specified."}}]}}]}], "operations": [{"operationId": "Application_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "applicationResourceName", "arg": "$Path.applicationResourceName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "enum": {"items": [{"value": "2018-09-01-preview"}]}}]}, "body": {"json": {"schema": {"type": "object", "name": "applicationResourceDescription", "required": true, "props": [{"type": "ResourceLocation", "name": "location", "arg": "$applicationResourceDescription.location", "required": true}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "string", "name": "debugParams", "arg": "$applicationResourceDescription.properties.debugParams"}, {"type": "string", "name": "description", "arg": "$applicationResourceDescription.properties.description"}, {"type": "object", "name": "diagnostics", "arg": "$applicationResourceDescription.properties.diagnostics", "props": [{"type": "array<string>", "name": "defaultSinkRefs", "arg": "$applicationResourceDescription.properties.diagnostics.defaultSinkRefs", "item": {"type": "string"}}, {"type": "boolean", "name": "enabled", "arg": "$applicationResourceDescription.properties.diagnostics.enabled"}, {"type": "array<object>", "name": "sinks", "arg": "$applicationResourceDescription.properties.diagnostics.sinks", "item": {"type": "object", "props": [{"type": "string", "name": "description", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline", "value": "AzureInternalMonitoringPipeline"}, {"value": "Invalid"}]}}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].name"}], "discriminators": [{"property": "kind", "value": "AzureInternalMonitoringPipeline", "props": [{"type": "string", "name": "accountName", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.accountName"}, {"type": "string", "name": "autoKeyConfigUrl", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.autoKeyConfigUrl"}, {"type": "string", "name": "fluentdConfigUrl", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.fluentdConfigUrl"}, {"type": "string", "name": "maConfigUrl", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.maConfigUrl"}, {"type": "string", "name": "namespace", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.namespace"}]}]}}]}, {"type": "array<object>", "name": "services", "arg": "$applicationResourceDescription.properties.services", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "array<object>", "name": "autoScalingPolicies", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies", "item": {"type": "object", "props": [{"type": "object", "name": "mechanism", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica", "value": "AddRemoveReplica"}]}}], "discriminators": [{"property": "kind", "value": "AddRemoveReplica", "props": [{"type": "integer", "name": "maxCount", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.maxCount", "required": true}, {"type": "integer", "name": "minCount", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.minCount", "required": true}, {"type": "integer", "name": "scaleIncrement", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.scaleIncrement", "required": true}]}]}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].name", "required": true}, {"type": "object", "name": "trigger", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad", "value": "AverageLoad"}]}}], "discriminators": [{"property": "kind", "value": "AverageLoad", "props": [{"type": "float64", "name": "lowerLoadThreshold", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.lowerLoadThreshold", "required": true}, {"type": "object", "name": "metric", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric.Resource", "value": "Resource"}]}}], "discriminators": [{"property": "kind", "value": "Resource", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric.Resource.name", "required": true, "enum": {"items": [{"value": "cpu"}, {"value": "memoryInGB"}]}}]}]}, {"type": "integer", "name": "scaleIntervalInSeconds", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.scaleIntervalInSeconds", "required": true, "format": {"minimum": 60}}, {"type": "float64", "name": "upperLoadThreshold", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.upperLoadThreshold", "required": true}]}]}]}}, {"type": "array<object>", "name": "codePackages", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages", "required": true, "item": {"type": "object", "props": [{"type": "array<string>", "name": "commands", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].commands", "item": {"type": "string"}}, {"type": "object", "name": "diagnostics", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].diagnostics", "props": [{"type": "boolean", "name": "enabled", "arg": "@DiagnosticsRef_create.enabled"}, {"type": "array<string>", "name": "sinkRefs", "arg": "@DiagnosticsRef_create.sinkRefs", "item": {"type": "string"}}], "cls": "DiagnosticsRef_create"}, {"type": "array<object>", "name": "endpoints", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints[].name", "required": true}, {"type": "integer", "name": "port", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints[].port"}]}}, {"type": "string", "name": "entrypoint", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].entrypoint"}, {"type": "array<object>", "name": "environmentVariables", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables[].name"}, {"type": "string", "name": "value", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables[].value"}]}}, {"type": "string", "name": "image", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].image", "required": true}, {"type": "object", "name": "imageRegistryCredential", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential", "props": [{"type": "string", "name": "password", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.password"}, {"type": "string", "name": "server", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.server", "required": true}, {"type": "string", "name": "username", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.username", "required": true}]}, {"type": "array<object>", "name": "labels", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels[].name", "required": true}, {"type": "string", "name": "value", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels[].value", "required": true}]}}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].name", "required": true}, {"type": "array<object>", "name": "reliableCollectionsRefs", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs", "item": {"type": "object", "props": [{"type": "boolean", "name": "doNotPersistState", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs[].doNotPersistState"}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs[].name", "required": true}]}}, {"type": "object", "name": "resources", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources", "required": true, "props": [{"type": "object", "name": "limits", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits", "props": [{"type": "float64", "name": "cpu", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits.cpu"}, {"type": "float64", "name": "memoryInGB", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits.memoryInGB"}]}, {"type": "object", "name": "requests", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests", "required": true, "props": [{"type": "float64", "name": "cpu", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests.cpu", "required": true}, {"type": "float64", "name": "memoryInGB", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests.memoryInGB", "required": true}]}]}, {"type": "array<object>", "name": "settings", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings[].name"}, {"type": "string", "name": "value", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings[].value"}]}}, {"type": "array<object>", "name": "volumeRefs", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs", "item": {"type": "object", "props": [{"type": "string", "name": "destinationPath", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].destinationPath", "required": true}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].name", "required": true}, {"type": "boolean", "name": "readOnly", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].readOnly"}]}}, {"type": "array<object>", "name": "volumes", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes", "item": {"type": "object", "props": [{"type": "object", "name": "creationParameters", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters", "required": true, "props": [{"type": "string", "name": "description", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.ServiceFabricVolumeDisk", "value": "ServiceFabricVolumeDisk"}]}}], "discriminators": [{"property": "kind", "value": "ServiceFabricVolumeDisk", "props": [{"type": "string", "name": "sizeDisk", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.ServiceFabricVolumeDisk.sizeDisk", "required": true, "enum": {"items": [{"value": "Large"}, {"value": "Medium"}, {"value": "Small"}]}}]}]}, {"type": "string", "name": "destinationPath", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].destinationPath", "required": true}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].name", "required": true}, {"type": "boolean", "name": "readOnly", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].readOnly"}]}}]}}, {"type": "string", "name": "description", "arg": "$applicationResourceDescription.properties.services[].properties.description"}, {"type": "@DiagnosticsRef_create", "name": "diagnostics", "arg": "$applicationResourceDescription.properties.services[].properties.diagnostics"}, {"type": "array<object>", "name": "networkRefs", "arg": "$applicationResourceDescription.properties.services[].properties.networkRefs", "item": {"type": "object", "props": [{"type": "array<object>", "name": "endpointRefs", "arg": "$applicationResourceDescription.properties.services[].properties.networkRefs[].endpointRefs", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.networkRefs[].endpointRefs[].name"}]}}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.networkRefs[].name"}]}}, {"type": "string", "name": "osType", "arg": "$applicationResourceDescription.properties.services[].properties.osType", "required": true, "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "integer", "name": "replicaCount", "arg": "$applicationResourceDescription.properties.services[].properties.replicaCount"}], "clientFlatten": true}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$applicationResourceDescription.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ServiceFabricMesh/applications/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "string", "name": "debugParams"}, {"type": "string", "name": "description"}, {"type": "object", "name": "diagnostics", "props": [{"type": "array<string>", "name": "defaultSinkRefs", "item": {"type": "string"}}, {"type": "boolean", "name": "enabled"}, {"type": "array<object>", "name": "sinks", "item": {"type": "object", "props": [{"type": "string", "name": "description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "AzureInternalMonitoringPipeline"}, {"value": "Invalid"}]}}, {"type": "string", "name": "name"}], "discriminators": [{"property": "kind", "value": "AzureInternalMonitoringPipeline", "props": [{"type": "string", "name": "accountName"}, {"type": "string", "name": "autoKeyConfigUrl"}, {"type": "string", "name": "fluentdConfigUrl"}, {"type": "string", "name": "maConfigUrl"}, {"type": "string", "name": "namespace"}]}]}}]}, {"type": "string", "name": "healthState", "enum": {"items": [{"value": "Error"}, {"value": "Invalid"}, {"value": "Ok"}, {"value": "Unknown"}, {"value": "Warning"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "array<string>", "name": "serviceNames", "item": {"type": "string"}}, {"type": "array<object>", "name": "services", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ServiceFabricMesh/applications/{}/services/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "array<object>", "name": "autoScalingPolicies", "item": {"type": "object", "props": [{"type": "object", "name": "mechanism", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "AddRemoveReplica"}]}}], "discriminators": [{"property": "kind", "value": "AddRemoveReplica", "props": [{"type": "integer", "name": "maxCount", "required": true}, {"type": "integer", "name": "minCount", "required": true}, {"type": "integer", "name": "scaleIncrement", "required": true}]}]}, {"type": "string", "name": "name", "required": true}, {"type": "object", "name": "trigger", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "AverageLoad"}]}}], "discriminators": [{"property": "kind", "value": "AverageLoad", "props": [{"type": "float64", "name": "lowerLoadThreshold", "required": true}, {"type": "object", "name": "metric", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "Resource"}]}}], "discriminators": [{"property": "kind", "value": "Resource", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "cpu"}, {"value": "memoryInGB"}]}}]}]}, {"type": "integer", "name": "scaleIntervalInSeconds", "required": true, "format": {"minimum": 60}}, {"type": "float64", "name": "upperLoadThreshold", "required": true}]}]}]}}, {"type": "array<object>", "name": "codePackages", "required": true, "item": {"type": "object", "props": [{"type": "array<string>", "name": "commands", "item": {"type": "string"}}, {"type": "object", "name": "diagnostics", "props": [{"type": "boolean", "name": "enabled"}, {"type": "array<string>", "name": "sinkRefs", "item": {"type": "string"}}], "cls": "DiagnosticsRef_read"}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "integer", "name": "port"}]}}, {"type": "string", "name": "entrypoint"}, {"type": "array<object>", "name": "environmentVariables", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "value"}]}}, {"type": "string", "name": "image", "required": true}, {"type": "object", "name": "imageRegistryCredential", "props": [{"type": "string", "name": "password"}, {"type": "string", "name": "server", "required": true}, {"type": "string", "name": "username", "required": true}]}, {"type": "object", "name": "instanceView", "props": [{"type": "object", "name": "currentState", "props": [{"type": "string", "name": "detailStatus"}, {"type": "string", "name": "exitCode"}, {"type": "dateTime", "name": "finishTime"}, {"type": "dateTime", "name": "startTime"}, {"type": "string", "name": "state"}], "cls": "ContainerState_read"}, {"type": "array<object>", "name": "events", "item": {"type": "object", "props": [{"type": "integer", "name": "count"}, {"type": "string", "name": "firstTimestamp"}, {"type": "string", "name": "lastTimestamp"}, {"type": "string", "name": "message"}, {"type": "string", "name": "name"}, {"type": "string", "name": "type"}]}}, {"type": "@ContainerState_read", "name": "previousState"}, {"type": "integer", "name": "restartCount"}]}, {"type": "array<object>", "name": "labels", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}]}}, {"type": "string", "name": "name", "required": true}, {"type": "array<object>", "name": "reliableCollectionsRefs", "item": {"type": "object", "props": [{"type": "boolean", "name": "doNotPersistState"}, {"type": "string", "name": "name", "required": true}]}}, {"type": "object", "name": "resources", "required": true, "props": [{"type": "object", "name": "limits", "props": [{"type": "float64", "name": "cpu"}, {"type": "float64", "name": "memoryInGB"}]}, {"type": "object", "name": "requests", "required": true, "props": [{"type": "float64", "name": "cpu", "required": true}, {"type": "float64", "name": "memoryInGB", "required": true}]}]}, {"type": "array<object>", "name": "settings", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "value"}]}}, {"type": "array<object>", "name": "volumeRefs", "item": {"type": "object", "props": [{"type": "string", "name": "destinationPath", "required": true}, {"type": "string", "name": "name", "required": true}, {"type": "boolean", "name": "readOnly"}]}}, {"type": "array<object>", "name": "volumes", "item": {"type": "object", "props": [{"type": "object", "name": "creationParameters", "required": true, "props": [{"type": "string", "name": "description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "ServiceFabricVolumeDisk"}]}}], "discriminators": [{"property": "kind", "value": "ServiceFabricVolumeDisk", "props": [{"type": "string", "name": "sizeDisk", "required": true, "enum": {"items": [{"value": "Large"}, {"value": "Medium"}, {"value": "Small"}]}}]}]}, {"type": "string", "name": "destinationPath", "required": true}, {"type": "string", "name": "name", "required": true}, {"type": "boolean", "name": "readOnly"}]}}]}}, {"type": "string", "name": "description"}, {"type": "@DiagnosticsRef_read", "name": "diagnostics"}, {"type": "string", "name": "healthState", "enum": {"items": [{"value": "Error"}, {"value": "Invalid"}, {"value": "Ok"}, {"value": "Unknown"}, {"value": "Warning"}]}}, {"type": "array<object>", "name": "networkRefs", "item": {"type": "object", "props": [{"type": "array<object>", "name": "endpointRefs", "item": {"type": "object", "props": [{"type": "string", "name": "name"}]}}, {"type": "string", "name": "name"}]}}, {"type": "string", "name": "osType", "required": true, "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "integer", "name": "replicaCount"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Ready"}, {"value": "Unknown"}, {"value": "Upgrading"}]}}, {"readOnly": true, "type": "string", "name": "statusDetails"}, {"readOnly": true, "type": "string", "name": "unhealthyEvaluation"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Ready"}, {"value": "Unknown"}, {"value": "Upgrading"}]}}, {"readOnly": true, "type": "string", "name": "statusDetails"}, {"readOnly": true, "type": "string", "name": "unhealthyEvaluation"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}]}}}}, {"statusCode": [202]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}, {"name": "update", "version": "2018-09-01-preview", "resources": [{"id": "/subscriptions/{}/resourcegroups/{}/providers/microsoft.servicefabricmesh/applications/{}", "version": "2018-09-01-preview", "swagger": "mgmt-plane/servicefabricmesh/ResourceProviders/Microsoft.ServiceFabricMesh/Paths/L3N1YnNjcmlwdGlvbnMve3N1YnNjcmlwdGlvbklkfS9yZXNvdXJjZUdyb3Vwcy97cmVzb3VyY2VHcm91cE5hbWV9L3Byb3ZpZGVycy9NaWNyb3NvZnQuU2VydmljZUZhYnJpY01lc2gvYXBwbGljYXRpb25zL3thcHBsaWNhdGlvblJlc291cmNlTmFtZX0=/V/MjAxOC0wOS0wMS1wcmV2aWV3"}], "argGroups": [{"name": "", "args": [{"type": "string", "var": "$Path.applicationResourceName", "options": ["n", "name"], "required": true, "group": "", "idPart": "name", "help": {"short": "The name of the application."}}, {"type": "ResourceGroupName", "var": "$Path.resourceGroupName", "options": ["g", "resource-group"], "required": true, "idPart": "resource_group"}, {"type": "SubscriptionId", "var": "$Path.subscriptionId", "options": ["subscription"], "required": true, "idPart": "subscription"}]}, {"name": "ApplicationResourceDescription", "args": [{"nullable": true, "type": "object", "var": "$applicationResourceDescription.tags", "options": ["tags"], "group": "ApplicationResourceDescription", "help": {"short": "Resource tags."}, "additionalProps": {"item": {"nullable": true, "type": "string"}}}]}, {"name": "Properties", "args": [{"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.debugParams", "options": ["debug-params"], "group": "Properties", "help": {"short": "Internal - used by Visual Studio to setup the debugging session on the local development environment."}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.description", "options": ["description"], "group": "Properties", "help": {"short": "User readable description of the application."}}, {"nullable": true, "type": "object", "var": "$applicationResourceDescription.properties.diagnostics", "options": ["diagnostics"], "group": "Properties", "help": {"short": "Describes the diagnostics definition and usage for an application resource."}, "args": [{"nullable": true, "type": "array<string>", "var": "$applicationResourceDescription.properties.diagnostics.defaultSinkRefs", "options": ["default-sink-refs"], "help": {"short": "The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "boolean", "var": "$applicationResourceDescription.properties.diagnostics.enabled", "options": ["enabled"], "help": {"short": "Status of whether or not sinks are enabled."}}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.diagnostics.sinks", "options": ["sinks"], "help": {"short": "List of supported sinks that can be referenced."}, "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline", "options": ["azure-internal-monitoring-pipeline"], "args": [{"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.accountName", "options": ["account-name"], "help": {"short": "Azure Internal monitoring pipeline account."}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.autoKeyConfigUrl", "options": ["auto-key-config-url"], "help": {"short": "Azure Internal monitoring pipeline autokey associated with the certificate."}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.fluentdConfigUrl", "options": ["fluentd-config-url"], "help": {"short": "Azure Internal monitoring agent fluentd configuration."}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.maConfigUrl", "options": ["ma-config-url"], "help": {"short": "Azure Internal monitoring agent configuration."}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.namespace", "options": ["namespace"], "help": {"short": "Azure Internal monitoring pipeline account namespace."}}]}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].description", "options": ["description"], "help": {"short": "A description of the sink."}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.diagnostics.sinks[].name", "options": ["name"], "help": {"short": "Name of the sink. This value is referenced by DiagnosticsReferenceDescription"}}]}}]}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services", "options": ["services"], "group": "Properties", "help": {"short": "Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].name", "options": ["name"], "help": {"short": "The name of the resource"}}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies", "options": ["auto-scaling-policies"], "group": "Properties", "help": {"short": "Auto scaling policies"}, "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism", "options": ["mechanism"], "help": {"short": "The mechanism that is used to scale when auto scaling operation is invoked."}, "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica", "options": ["add-remove-replica"], "args": [{"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.maxCount", "options": ["max-count"], "help": {"short": "Maximum number of containers (scale up won't be performed above this number)."}}, {"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.minCount", "options": ["min-count"], "help": {"short": "Minimum number of containers (scale down won't be performed below this number)."}}, {"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.scaleIncrement", "options": ["scale-increment"], "help": {"short": "Each time auto scaling is performed, this number of containers will be added or removed."}}]}]}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].name", "options": ["name"], "help": {"short": "The name of the auto scaling policy."}}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger", "options": ["trigger"], "help": {"short": "Determines when auto scaling operation will be invoked."}, "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad", "options": ["average-load"], "args": [{"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.lowerLoadThreshold", "options": ["lower-load-threshold"], "help": {"short": "Lower load threshold (if average load is below this threshold, service will scale down)."}}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric", "options": ["metric"], "help": {"short": "Description of the metric that is used for scaling."}, "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric.Resource", "options": ["resource"], "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric.Resource.name", "options": ["name"], "help": {"short": "Name of the resource."}, "enum": {"items": [{"name": "cpu", "value": "cpu"}, {"name": "memoryInGB", "value": "memoryInGB"}]}}]}]}, {"type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.scaleIntervalInSeconds", "options": ["scale-interval-in-seconds"], "help": {"short": "Scale interval that indicates how often will this trigger be checked."}, "format": {"minimum": 60}}, {"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.upperLoadThreshold", "options": ["upper-load-threshold"], "help": {"short": "Upper load threshold (if average load is above this threshold, service will scale up)."}}]}]}]}}, {"type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages", "options": ["code-packages"], "group": "Properties", "help": {"short": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.)."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<string>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].commands", "options": ["commands"], "help": {"short": "Command array to execute within the container in exec form."}, "item": {"nullable": true, "type": "string"}}, {"nullable": true, "type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].diagnostics", "options": ["diagnostics"], "help": {"short": "Reference to sinks in DiagnosticsDescription."}, "args": [{"nullable": true, "type": "boolean", "var": "@DiagnosticsRef_update.enabled", "options": ["enabled"], "help": {"short": "Status of whether or not sinks are enabled."}}, {"nullable": true, "type": "array<string>", "var": "@DiagnosticsRef_update.sinkRefs", "options": ["sink-refs"], "help": {"short": "List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription."}, "item": {"nullable": true, "type": "string"}}], "cls": "DiagnosticsRef_update"}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints", "options": ["endpoints"], "help": {"short": "The endpoints exposed by this container."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints[].name", "options": ["name"], "help": {"short": "The name of the endpoint."}}, {"nullable": true, "type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints[].port", "options": ["port"], "help": {"short": "Port used by the container."}}]}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].entrypoint", "options": ["entrypoint"], "help": {"short": "Override for the default entry point in the container."}}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables", "options": ["environment-variables"], "help": {"short": "The environment variables to set in this container"}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables[].name", "options": ["name"], "help": {"short": "The name of the environment variable."}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables[].value", "options": ["value"], "help": {"short": "The value of the environment variable."}}]}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].image", "options": ["image"], "help": {"short": "The Container image to use."}}, {"nullable": true, "type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential", "options": ["image-registry-credential"], "help": {"short": "Image registry credential."}, "args": [{"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.password", "options": ["password"], "help": {"short": "The password for the private registry. The password is required for create or update operations, however it is not returned in the get or list operations."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.server", "options": ["server"], "help": {"short": "Docker image registry server, without protocol such as `http` and `https`."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.username", "options": ["username"], "help": {"short": "The username for the private registry."}}]}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels", "options": ["labels"], "help": {"short": "The labels to set in this container."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels[].name", "options": ["name"], "help": {"short": "The name of the container label."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels[].value", "options": ["value"], "help": {"short": "The value of the container label."}}]}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].name", "options": ["name"], "help": {"short": "The name of the code package."}}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs", "options": ["reliable-collections-refs"], "help": {"short": "A list of ReliableCollection resources used by this particular code package. Please refer to ReliableCollectionsRef for more details."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "boolean", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs[].doNotPersistState", "options": ["do-not-persist-state"], "help": {"short": "False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs[].name", "options": ["name"], "help": {"short": "Name of ReliableCollection resource. Right now it's not used and you can use any string."}}]}}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources", "options": ["resources"], "help": {"short": "The resources required by this container."}, "args": [{"nullable": true, "type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits", "options": ["limits"], "help": {"short": "Describes the maximum limits on the resources for a given container."}, "args": [{"nullable": true, "type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits.cpu", "options": ["cpu"], "help": {"short": "CPU limits in cores. At present, only full cores are supported."}}, {"nullable": true, "type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits.memoryInGB", "options": ["memory-in-gb"], "help": {"short": "The memory limit in GB."}}]}, {"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests", "options": ["requests"], "help": {"short": "Describes the requested resources for a given container."}, "args": [{"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests.cpu", "options": ["cpu"], "help": {"short": "Requested number of CPU cores. At present, only full cores are supported."}}, {"type": "float64", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests.memoryInGB", "options": ["memory-in-gb"], "help": {"short": "The memory request in GB for this container."}}]}]}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings", "options": ["settings"], "help": {"short": "The settings to set in this container. The setting file path can be fetched from environment variable \"Fabric_SettingPath\". The path for Windows container is \"C:\\\\secrets\". The path for Linux container is \"/var/secrets\"."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings[].name", "options": ["name"], "help": {"short": "The name of the setting."}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings[].value", "options": ["value"], "help": {"short": "The value of the setting."}}]}}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs", "options": ["volume-refs"], "help": {"short": "Volumes to be attached to the container. The lifetime of these volumes is independent of the application's lifetime."}, "item": {"nullable": true, "type": "object", "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].destinationPath", "options": ["destination-path"], "help": {"short": "The path within the container at which the volume should be mounted. Only valid path characters are allowed."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].name", "options": ["name"], "help": {"short": "Name of the volume being referenced."}}, {"nullable": true, "type": "boolean", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].readOnly", "options": ["read-only"], "help": {"short": "The flag indicating whether the volume is read only. Default is 'false'."}}]}}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes", "options": ["volumes"], "help": {"short": "Volumes to be attached to the container. The lifetime of these volumes is scoped to the application's lifetime."}, "item": {"nullable": true, "type": "object", "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters", "options": ["creation-parameters"], "help": {"short": "Describes parameters for creating application-scoped volumes."}, "args": [{"type": "object", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.ServiceFabricVolumeDisk", "options": ["service-fabric-volume-disk"], "args": [{"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.ServiceFabricVolumeDisk.sizeDisk", "options": ["size-disk"], "help": {"short": "Volume size"}, "enum": {"items": [{"name": "Large", "value": "Large"}, {"name": "Medium", "value": "Medium"}, {"name": "Small", "value": "Small"}]}}]}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.description", "options": ["description"], "help": {"short": "User readable description of the volume."}}]}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].destinationPath", "options": ["destination-path"], "help": {"short": "The path within the container at which the volume should be mounted. Only valid path characters are allowed."}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].name", "options": ["name"], "help": {"short": "Name of the volume being referenced."}}, {"nullable": true, "type": "boolean", "var": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].readOnly", "options": ["read-only"], "help": {"short": "The flag indicating whether the volume is read only. Default is 'false'."}}]}}]}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.description", "options": ["description"], "group": "Properties", "help": {"short": "User readable description of the service."}}, {"nullable": true, "type": "@DiagnosticsRef_update", "var": "$applicationResourceDescription.properties.services[].properties.diagnostics", "options": ["diagnostics"], "group": "Properties", "help": {"short": "Reference to sinks in DiagnosticsDescription."}}, {"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.networkRefs", "options": ["network-refs"], "group": "Properties", "help": {"short": "The names of the private networks that this service needs to be part of."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "array<object>", "var": "$applicationResourceDescription.properties.services[].properties.networkRefs[].endpointRefs", "options": ["endpoint-refs"], "help": {"short": "A list of endpoints that are exposed on this network."}, "item": {"nullable": true, "type": "object", "args": [{"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.networkRefs[].endpointRefs[].name", "options": ["name"], "help": {"short": "Name of the endpoint."}}]}}, {"nullable": true, "type": "string", "var": "$applicationResourceDescription.properties.services[].properties.networkRefs[].name", "options": ["name"], "help": {"short": "Name of the network"}}]}}, {"type": "string", "var": "$applicationResourceDescription.properties.services[].properties.osType", "options": ["os-type"], "group": "Properties", "help": {"short": "The operation system required by the code in service."}, "enum": {"items": [{"name": "Linux", "value": "Linux"}, {"name": "Windows", "value": "Windows"}]}}, {"nullable": true, "type": "integer", "var": "$applicationResourceDescription.properties.services[].properties.replicaCount", "options": ["replica-count"], "group": "Properties", "help": {"short": "The number of replicas of the service to create. Defaults to 1 if not specified."}}]}}]}], "operations": [{"operationId": "Application_Get", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}", "request": {"method": "get", "path": {"params": [{"type": "string", "name": "applicationResourceName", "arg": "$Path.applicationResourceName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "enum": {"items": [{"value": "2018-09-01-preview"}]}}]}}, "responses": [{"statusCode": [200], "body": {"json": {"var": "$Instance", "schema": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ServiceFabricMesh/applications/{}"}}, {"type": "ResourceLocation", "name": "location", "required": true}, {"readOnly": true, "type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "string", "name": "debugParams"}, {"type": "string", "name": "description"}, {"type": "object", "name": "diagnostics", "props": [{"type": "array<string>", "name": "defaultSinkRefs", "item": {"type": "string"}}, {"type": "boolean", "name": "enabled"}, {"type": "array<object>", "name": "sinks", "item": {"type": "object", "props": [{"type": "string", "name": "description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "AzureInternalMonitoringPipeline"}, {"value": "Invalid"}]}}, {"type": "string", "name": "name"}], "discriminators": [{"property": "kind", "value": "AzureInternalMonitoringPipeline", "props": [{"type": "string", "name": "accountName"}, {"type": "string", "name": "autoKeyConfigUrl"}, {"type": "string", "name": "fluentdConfigUrl"}, {"type": "string", "name": "maConfigUrl"}, {"type": "string", "name": "namespace"}]}]}}]}, {"type": "string", "name": "healthState", "enum": {"items": [{"value": "Error"}, {"value": "Invalid"}, {"value": "Ok"}, {"value": "Unknown"}, {"value": "Warning"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"readOnly": true, "type": "array<string>", "name": "serviceNames", "item": {"type": "string"}}, {"type": "array<object>", "name": "services", "item": {"type": "object", "props": [{"readOnly": true, "type": "ResourceId", "name": "id", "format": {"template": "/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ServiceFabricMesh/applications/{}/services/{}"}}, {"type": "string", "name": "name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "array<object>", "name": "autoScalingPolicies", "item": {"type": "object", "props": [{"type": "object", "name": "mechanism", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "AddRemoveReplica"}]}}], "discriminators": [{"property": "kind", "value": "AddRemoveReplica", "props": [{"type": "integer", "name": "maxCount", "required": true}, {"type": "integer", "name": "minCount", "required": true}, {"type": "integer", "name": "scaleIncrement", "required": true}]}]}, {"type": "string", "name": "name", "required": true}, {"type": "object", "name": "trigger", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "AverageLoad"}]}}], "discriminators": [{"property": "kind", "value": "AverageLoad", "props": [{"type": "float64", "name": "lowerLoadThreshold", "required": true}, {"type": "object", "name": "metric", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "Resource"}]}}], "discriminators": [{"property": "kind", "value": "Resource", "props": [{"type": "string", "name": "name", "required": true, "enum": {"items": [{"value": "cpu"}, {"value": "memoryInGB"}]}}]}]}, {"type": "integer", "name": "scaleIntervalInSeconds", "required": true, "format": {"minimum": 60}}, {"type": "float64", "name": "upperLoadThreshold", "required": true}]}]}]}}, {"type": "array<object>", "name": "codePackages", "required": true, "item": {"type": "object", "props": [{"type": "array<string>", "name": "commands", "item": {"type": "string"}}, {"type": "object", "name": "diagnostics", "props": [{"type": "boolean", "name": "enabled"}, {"type": "array<string>", "name": "sinkRefs", "item": {"type": "string"}}], "cls": "DiagnosticsRef_read"}, {"type": "array<object>", "name": "endpoints", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "integer", "name": "port"}]}}, {"type": "string", "name": "entrypoint"}, {"type": "array<object>", "name": "environmentVariables", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "value"}]}}, {"type": "string", "name": "image", "required": true}, {"type": "object", "name": "imageRegistryCredential", "props": [{"type": "string", "name": "password"}, {"type": "string", "name": "server", "required": true}, {"type": "string", "name": "username", "required": true}]}, {"type": "object", "name": "instanceView", "props": [{"type": "object", "name": "currentState", "props": [{"type": "string", "name": "detailStatus"}, {"type": "string", "name": "exitCode"}, {"type": "dateTime", "name": "finishTime"}, {"type": "dateTime", "name": "startTime"}, {"type": "string", "name": "state"}], "cls": "ContainerState_read"}, {"type": "array<object>", "name": "events", "item": {"type": "object", "props": [{"type": "integer", "name": "count"}, {"type": "string", "name": "firstTimestamp"}, {"type": "string", "name": "lastTimestamp"}, {"type": "string", "name": "message"}, {"type": "string", "name": "name"}, {"type": "string", "name": "type"}]}}, {"type": "@ContainerState_read", "name": "previousState"}, {"type": "integer", "name": "restartCount"}]}, {"type": "array<object>", "name": "labels", "item": {"type": "object", "props": [{"type": "string", "name": "name", "required": true}, {"type": "string", "name": "value", "required": true}]}}, {"type": "string", "name": "name", "required": true}, {"type": "array<object>", "name": "reliableCollectionsRefs", "item": {"type": "object", "props": [{"type": "boolean", "name": "doNotPersistState"}, {"type": "string", "name": "name", "required": true}]}}, {"type": "object", "name": "resources", "required": true, "props": [{"type": "object", "name": "limits", "props": [{"type": "float64", "name": "cpu"}, {"type": "float64", "name": "memoryInGB"}]}, {"type": "object", "name": "requests", "required": true, "props": [{"type": "float64", "name": "cpu", "required": true}, {"type": "float64", "name": "memoryInGB", "required": true}]}]}, {"type": "array<object>", "name": "settings", "item": {"type": "object", "props": [{"type": "string", "name": "name"}, {"type": "string", "name": "value"}]}}, {"type": "array<object>", "name": "volumeRefs", "item": {"type": "object", "props": [{"type": "string", "name": "destinationPath", "required": true}, {"type": "string", "name": "name", "required": true}, {"type": "boolean", "name": "readOnly"}]}}, {"type": "array<object>", "name": "volumes", "item": {"type": "object", "props": [{"type": "object", "name": "creationParameters", "required": true, "props": [{"type": "string", "name": "description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"value": "ServiceFabricVolumeDisk"}]}}], "discriminators": [{"property": "kind", "value": "ServiceFabricVolumeDisk", "props": [{"type": "string", "name": "sizeDisk", "required": true, "enum": {"items": [{"value": "Large"}, {"value": "Medium"}, {"value": "Small"}]}}]}]}, {"type": "string", "name": "destinationPath", "required": true}, {"type": "string", "name": "name", "required": true}, {"type": "boolean", "name": "readOnly"}]}}]}}, {"type": "string", "name": "description"}, {"type": "@DiagnosticsRef_read", "name": "diagnostics"}, {"type": "string", "name": "healthState", "enum": {"items": [{"value": "Error"}, {"value": "Invalid"}, {"value": "Ok"}, {"value": "Unknown"}, {"value": "Warning"}]}}, {"type": "array<object>", "name": "networkRefs", "item": {"type": "object", "props": [{"type": "array<object>", "name": "endpointRefs", "item": {"type": "object", "props": [{"type": "string", "name": "name"}]}}, {"type": "string", "name": "name"}]}}, {"type": "string", "name": "osType", "required": true, "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"readOnly": true, "type": "string", "name": "provisioningState"}, {"type": "integer", "name": "replicaCount"}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Ready"}, {"value": "Unknown"}, {"value": "Upgrading"}]}}, {"readOnly": true, "type": "string", "name": "statusDetails"}, {"readOnly": true, "type": "string", "name": "unhealthyEvaluation"}], "clientFlatten": true}, {"readOnly": true, "type": "string", "name": "type"}]}}, {"type": "string", "name": "status", "enum": {"items": [{"value": "Creating"}, {"value": "Deleting"}, {"value": "Failed"}, {"value": "Ready"}, {"value": "Unknown"}, {"value": "Upgrading"}]}}, {"readOnly": true, "type": "string", "name": "statusDetails"}, {"readOnly": true, "type": "string", "name": "unhealthyEvaluation"}], "clientFlatten": true}, {"type": "object", "name": "tags", "additionalProps": {"item": {"type": "string"}}}, {"readOnly": true, "type": "string", "name": "type"}], "cls": "ApplicationResourceDescription_read"}}}}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}, {"instanceUpdate": {"ref": "$Instance", "json": {"schema": {"type": "object", "name": "applicationResourceDescription", "required": true, "props": [{"type": "object", "name": "properties", "required": true, "props": [{"type": "string", "name": "debugParams", "arg": "$applicationResourceDescription.properties.debugParams"}, {"type": "string", "name": "description", "arg": "$applicationResourceDescription.properties.description"}, {"type": "object", "name": "diagnostics", "arg": "$applicationResourceDescription.properties.diagnostics", "props": [{"type": "array<string>", "name": "defaultSinkRefs", "arg": "$applicationResourceDescription.properties.diagnostics.defaultSinkRefs", "item": {"type": "string"}}, {"type": "boolean", "name": "enabled", "arg": "$applicationResourceDescription.properties.diagnostics.enabled"}, {"type": "array<object>", "name": "sinks", "arg": "$applicationResourceDescription.properties.diagnostics.sinks", "item": {"type": "object", "props": [{"type": "string", "name": "description", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline", "value": "AzureInternalMonitoringPipeline"}, {"value": "Invalid"}]}}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].name"}], "discriminators": [{"property": "kind", "value": "AzureInternalMonitoringPipeline", "props": [{"type": "string", "name": "accountName", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.accountName"}, {"type": "string", "name": "autoKeyConfigUrl", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.autoKeyConfigUrl"}, {"type": "string", "name": "fluentdConfigUrl", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.fluentdConfigUrl"}, {"type": "string", "name": "maConfigUrl", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.maConfigUrl"}, {"type": "string", "name": "namespace", "arg": "$applicationResourceDescription.properties.diagnostics.sinks[].AzureInternalMonitoringPipeline.namespace"}]}]}}]}, {"type": "array<object>", "name": "services", "arg": "$applicationResourceDescription.properties.services", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].name"}, {"type": "object", "name": "properties", "required": true, "props": [{"type": "array<object>", "name": "autoScalingPolicies", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies", "item": {"type": "object", "props": [{"type": "object", "name": "mechanism", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica", "value": "AddRemoveReplica"}]}}], "discriminators": [{"property": "kind", "value": "AddRemoveReplica", "props": [{"type": "integer", "name": "maxCount", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.maxCount", "required": true}, {"type": "integer", "name": "minCount", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.minCount", "required": true}, {"type": "integer", "name": "scaleIncrement", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].mechanism.AddRemoveReplica.scaleIncrement", "required": true}]}]}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].name", "required": true}, {"type": "object", "name": "trigger", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad", "value": "AverageLoad"}]}}], "discriminators": [{"property": "kind", "value": "AverageLoad", "props": [{"type": "float64", "name": "lowerLoadThreshold", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.lowerLoadThreshold", "required": true}, {"type": "object", "name": "metric", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric", "required": true, "props": [{"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric.Resource", "value": "Resource"}]}}], "discriminators": [{"property": "kind", "value": "Resource", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.metric.Resource.name", "required": true, "enum": {"items": [{"value": "cpu"}, {"value": "memoryInGB"}]}}]}]}, {"type": "integer", "name": "scaleIntervalInSeconds", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.scaleIntervalInSeconds", "required": true, "format": {"minimum": 60}}, {"type": "float64", "name": "upperLoadThreshold", "arg": "$applicationResourceDescription.properties.services[].properties.autoScalingPolicies[].trigger.AverageLoad.upperLoadThreshold", "required": true}]}]}]}}, {"type": "array<object>", "name": "codePackages", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages", "required": true, "item": {"type": "object", "props": [{"type": "array<string>", "name": "commands", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].commands", "item": {"type": "string"}}, {"type": "object", "name": "diagnostics", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].diagnostics", "props": [{"type": "boolean", "name": "enabled", "arg": "@DiagnosticsRef_update.enabled"}, {"type": "array<string>", "name": "sinkRefs", "arg": "@DiagnosticsRef_update.sinkRefs", "item": {"type": "string"}}], "cls": "DiagnosticsRef_update"}, {"type": "array<object>", "name": "endpoints", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints[].name", "required": true}, {"type": "integer", "name": "port", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].endpoints[].port"}]}}, {"type": "string", "name": "entrypoint", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].entrypoint"}, {"type": "array<object>", "name": "environmentVariables", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables[].name"}, {"type": "string", "name": "value", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].environmentVariables[].value"}]}}, {"type": "string", "name": "image", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].image", "required": true}, {"type": "object", "name": "imageRegistryCredential", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential", "props": [{"type": "string", "name": "password", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.password"}, {"type": "string", "name": "server", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.server", "required": true}, {"type": "string", "name": "username", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].imageRegistryCredential.username", "required": true}]}, {"type": "array<object>", "name": "labels", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels[].name", "required": true}, {"type": "string", "name": "value", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].labels[].value", "required": true}]}}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].name", "required": true}, {"type": "array<object>", "name": "reliableCollectionsRefs", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs", "item": {"type": "object", "props": [{"type": "boolean", "name": "doNotPersistState", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs[].doNotPersistState"}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].reliableCollectionsRefs[].name", "required": true}]}}, {"type": "object", "name": "resources", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources", "required": true, "props": [{"type": "object", "name": "limits", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits", "props": [{"type": "float64", "name": "cpu", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits.cpu"}, {"type": "float64", "name": "memoryInGB", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.limits.memoryInGB"}]}, {"type": "object", "name": "requests", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests", "required": true, "props": [{"type": "float64", "name": "cpu", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests.cpu", "required": true}, {"type": "float64", "name": "memoryInGB", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].resources.requests.memoryInGB", "required": true}]}]}, {"type": "array<object>", "name": "settings", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings[].name"}, {"type": "string", "name": "value", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].settings[].value"}]}}, {"type": "array<object>", "name": "volumeRefs", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs", "item": {"type": "object", "props": [{"type": "string", "name": "destinationPath", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].destinationPath", "required": true}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].name", "required": true}, {"type": "boolean", "name": "readOnly", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumeRefs[].readOnly"}]}}, {"type": "array<object>", "name": "volumes", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes", "item": {"type": "object", "props": [{"type": "object", "name": "creationParameters", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters", "required": true, "props": [{"type": "string", "name": "description", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.description"}, {"type": "string", "name": "kind", "required": true, "enum": {"items": [{"arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.ServiceFabricVolumeDisk", "value": "ServiceFabricVolumeDisk"}]}}], "discriminators": [{"property": "kind", "value": "ServiceFabricVolumeDisk", "props": [{"type": "string", "name": "sizeDisk", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].creationParameters.ServiceFabricVolumeDisk.sizeDisk", "required": true, "enum": {"items": [{"value": "Large"}, {"value": "Medium"}, {"value": "Small"}]}}]}]}, {"type": "string", "name": "destinationPath", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].destinationPath", "required": true}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].name", "required": true}, {"type": "boolean", "name": "readOnly", "arg": "$applicationResourceDescription.properties.services[].properties.codePackages[].volumes[].readOnly"}]}}]}}, {"type": "string", "name": "description", "arg": "$applicationResourceDescription.properties.services[].properties.description"}, {"type": "@DiagnosticsRef_update", "name": "diagnostics", "arg": "$applicationResourceDescription.properties.services[].properties.diagnostics"}, {"type": "array<object>", "name": "networkRefs", "arg": "$applicationResourceDescription.properties.services[].properties.networkRefs", "item": {"type": "object", "props": [{"type": "array<object>", "name": "endpointRefs", "arg": "$applicationResourceDescription.properties.services[].properties.networkRefs[].endpointRefs", "item": {"type": "object", "props": [{"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.networkRefs[].endpointRefs[].name"}]}}, {"type": "string", "name": "name", "arg": "$applicationResourceDescription.properties.services[].properties.networkRefs[].name"}]}}, {"type": "string", "name": "osType", "arg": "$applicationResourceDescription.properties.services[].properties.osType", "required": true, "enum": {"items": [{"value": "Linux"}, {"value": "Windows"}]}}, {"type": "integer", "name": "replicaCount", "arg": "$applicationResourceDescription.properties.services[].properties.replicaCount"}], "clientFlatten": true}]}}], "clientFlatten": true}, {"type": "object", "name": "tags", "arg": "$applicationResourceDescription.tags", "additionalProps": {"item": {"type": "string"}}}], "clientFlatten": true}}}}, {"operationId": "Application_Create", "http": {"path": "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}", "request": {"method": "put", "path": {"params": [{"type": "string", "name": "applicationResourceName", "arg": "$Path.applicationResourceName", "required": true, "skipUrlEncoding": true}, {"type": "string", "name": "resourceGroupName", "arg": "$Path.resourceGroupName", "required": true}, {"type": "string", "name": "subscriptionId", "arg": "$Path.subscriptionId", "required": true}]}, "query": {"consts": [{"readOnly": true, "const": true, "default": {"value": "2018-09-01-preview"}, "type": "string", "name": "api-version", "required": true, "enum": {"items": [{"value": "2018-09-01-preview"}]}}]}, "body": {"json": {"ref": "$Instance"}}}, "responses": [{"statusCode": [200, 201], "body": {"json": {"var": "$Instance", "schema": {"type": "@ApplicationResourceDescription_read"}}}}, {"statusCode": [202]}, {"isError": true, "body": {"json": {"schema": {"type": "@ODataV4Format"}}}}]}}], "outputs": [{"type": "object", "ref": "$Instance", "clientFlatten": true}]}]}]}