<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="data-plane:microsoft.devcenter">
  <resource id="/projects/{}/catalogs/{}/environmentdefinitions" version="2024-10-01-preview" swagger="data-plane:microsoft.devcenter/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vY2F0YWxvZ3Mve2NhdGFsb2dOYW1lfS9lbnZpcm9ubWVudERlZmluaXRpb25z/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
  <resource id="/projects/{}/environmentdefinitions" version="2024-10-01-preview" swagger="data-plane:microsoft.devcenter/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vZW52aXJvbm1lbnREZWZpbml0aW9ucw==/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter dev environment-definition">
    <command name="list" version="2024-10-01-preview" confirmation="">
      <resource id="/projects/{}/catalogs/{}/environmentdefinitions" version="2024-10-01-preview" swagger="data-plane:microsoft.devcenter/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vY2F0YWxvZ3Mve2NhdGFsb2dOYW1lfS9lbnZpcm9ubWVudERlZmluaXRpb25z/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <resource id="/projects/{}/environmentdefinitions" version="2024-10-01-preview" swagger="data-plane:microsoft.devcenter/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vZW52aXJvbm1lbnREZWZpbml0aW9ucw==/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.catalogName" options="catalog-name">
          <help short="The name of the catalog"/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
      </argGroup>
      <argGroup name="Default">
        <arg type="string" var="$Path.projectName" options="project-name project" required="True" group="Default">
          <help short="The name of the project. Use az configure -d project=<project_name> to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
      </argGroup>
      <condition var="$Condition_Environments_ListEnvironmentDefinitionsByCatalog">
        <operator type="and">
          <operator type="hasValue" arg="$Path.catalogName"/>
          <operator type="hasValue" arg="$Path.projectName"/>
        </operator>
      </condition>
      <condition var="$Condition_Environments_ListEnvironmentDefinitionsByProject">
        <operator type="and">
          <operator type="hasValue" arg="$Path.projectName"/>
          <operator type="not">
            <operator type="hasValue" arg="$Path.catalogName"/>
          </operator>
        </operator>
      </condition>
      <operation when="$Condition_Environments_ListEnvironmentDefinitionsByCatalog" operationId="Environments_ListEnvironmentDefinitionsByCatalog">
        <http path="/projects/{projectName}/catalogs/{catalogName}/environmentDefinitions">
          <request method="get">
            <path>
              <param type="string" name="catalogName" arg="$Path.catalogName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop type="string" name="catalogName" required="True"/>
                      <prop type="string" name="description"/>
                      <prop type="string" name="id" required="True"/>
                      <prop readOnly="True" type="string" name="name">
                        <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
                      </prop>
                      <prop type="array<object>" name="parameters">
                        <item type="object">
                          <prop type="array<string>" name="allowed">
                            <format minLength="1"/>
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="default"/>
                          <prop type="string" name="description"/>
                          <prop type="string" name="id" required="True"/>
                          <prop type="string" name="name"/>
                          <prop type="boolean" name="readOnly"/>
                          <prop type="boolean" name="required" required="True"/>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;array&quot;"/>
                              <item value="&quot;boolean&quot;"/>
                              <item value="&quot;integer&quot;"/>
                              <item value="&quot;number&quot;"/>
                              <item value="&quot;object&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="parametersSchema"/>
                      <prop type="string" name="templatePath"/>
                      <prop type="string" name="uri" required="True"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation when="$Condition_Environments_ListEnvironmentDefinitionsByProject" operationId="Environments_ListEnvironmentDefinitionsByProject">
        <http path="/projects/{projectName}/environmentDefinitions">
          <request method="get">
            <path>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop type="string" name="nextLink"/>
                  <prop type="array<object>" name="value" required="True">
                    <item type="object">
                      <prop type="string" name="catalogName" required="True"/>
                      <prop type="string" name="description"/>
                      <prop type="string" name="id" required="True"/>
                      <prop readOnly="True" type="string" name="name">
                        <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
                      </prop>
                      <prop type="array<object>" name="parameters">
                        <item type="object">
                          <prop type="array<string>" name="allowed">
                            <format minLength="1"/>
                            <item type="string"/>
                          </prop>
                          <prop type="string" name="default"/>
                          <prop type="string" name="description"/>
                          <prop type="string" name="id" required="True"/>
                          <prop type="string" name="name"/>
                          <prop type="boolean" name="readOnly"/>
                          <prop type="boolean" name="required" required="True"/>
                          <prop type="string" name="type" required="True">
                            <enum>
                              <item value="&quot;array&quot;"/>
                              <item value="&quot;boolean&quot;"/>
                              <item value="&quot;integer&quot;"/>
                              <item value="&quot;number&quot;"/>
                              <item value="&quot;object&quot;"/>
                              <item value="&quot;string&quot;"/>
                            </enum>
                          </prop>
                        </item>
                      </prop>
                      <prop type="string" name="parametersSchema"/>
                      <prop type="string" name="templatePath"/>
                      <prop type="string" name="uri" required="True"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="array" ref="$Instance.value" clientFlatten="True" nextLink="$Instance.nextLink"/>
    </command>
  </commandGroup>
</CodeGen>
