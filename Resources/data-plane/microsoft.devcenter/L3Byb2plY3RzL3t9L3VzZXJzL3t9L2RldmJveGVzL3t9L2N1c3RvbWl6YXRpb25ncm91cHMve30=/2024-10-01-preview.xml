<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="data-plane:microsoft.devcenter">
  <resource id="/projects/{}/users/{}/devboxes/{}/customizationgroups/{}" version="2024-10-01-preview" swagger="data-plane:microsoft.devcenter/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vdXNlcnMve3VzZXJJZH0vZGV2Ym94ZXMve2RldkJveE5hbWV9L2N1c3RvbWl6YXRpb25Hcm91cHMve2N1c3RvbWl6YXRpb25Hcm91cE5hbWV9/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
  <commandGroup name="devcenter dev customization-group">
    <command name="show" version="2024-10-01-preview">
      <resource id="/projects/{}/users/{}/devboxes/{}/customizationgroups/{}" version="2024-10-01-preview" swagger="data-plane:microsoft.devcenter/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vdXNlcnMve3VzZXJJZH0vZGV2Ym94ZXMve2RldkJveE5hbWV9L2N1c3RvbWl6YXRpb25Hcm91cHMve2N1c3RvbWl6YXRpb25Hcm91cE5hbWV9/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.customizationGroupName" options="customization-group-name name n" required="True" group="">
          <help short="A customization group name."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.devBoxName" options="dev-box-name dev-box" required="True" group="">
          <help short="The name of a dev box."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name project" required="True" group="">
          <help short="The name of the project. Use az configure -d project=<project_name> to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.userId" options="user-id" required="True" group="">
          <help short="The AAD object id of the user. If value is 'me', the identity is taken from the authentication context."/>
          <default value="&quot;me&quot;"/>
          <format pattern="^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$" maxLength="36" minLength="2"/>
        </arg>
      </argGroup>
      <operation operationId="DevBoxes_GetCustomizationGroup">
        <http path="/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/customizationGroups/{customizationGroupName}">
          <request method="get">
            <path>
              <param type="string" name="customizationGroupName" arg="$Path.customizationGroupName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="devBoxName" arg="$Path.devBoxName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="userId" arg="$Path.userId" required="True">
                <format pattern="^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$" maxLength="36" minLength="2"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="dateTime" name="endTime"/>
                  <prop readOnly="True" type="string" name="name">
                    <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
                  </prop>
                  <prop readOnly="True" type="dateTime" name="startTime"/>
                  <prop readOnly="True" type="string" name="status">
                    <enum>
                      <item value="&quot;Failed&quot;"/>
                      <item value="&quot;NotStarted&quot;"/>
                      <item value="&quot;Running&quot;"/>
                      <item value="&quot;Succeeded&quot;"/>
                      <item value="&quot;ValidationFailed&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<object>" name="tasks">
                    <item type="object">
                      <prop type="string" name="displayName"/>
                      <prop readOnly="True" type="dateTime" name="endTime"/>
                      <prop readOnly="True" type="string" name="id"/>
                      <prop readOnly="True" type="string" name="logUri"/>
                      <prop type="string" name="name" required="True"/>
                      <prop type="object" name="parameters">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="string" name="runAs">
                        <enum>
                          <item value="&quot;System&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="startTime"/>
                      <prop readOnly="True" type="string" name="status">
                        <enum>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;FailedValidation&quot;"/>
                          <item value="&quot;NotStarted&quot;"/>
                          <item value="&quot;Running&quot;"/>
                          <item value="&quot;Skipped&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;TimedOut&quot;"/>
                          <item value="&quot;WaitingForUserInputUac&quot;"/>
                          <item value="&quot;WaitingForUserSession&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="timeoutInSeconds"/>
                    </item>
                  </prop>
                  <prop readOnly="True" type="string" name="uri"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="create" version="2024-10-01-preview">
      <resource id="/projects/{}/users/{}/devboxes/{}/customizationgroups/{}" version="2024-10-01-preview" swagger="data-plane:microsoft.devcenter/devcenter/ResourceProviders/Microsoft.DevCenter/Paths/L3Byb2plY3RzL3twcm9qZWN0TmFtZX0vdXNlcnMve3VzZXJJZH0vZGV2Ym94ZXMve2RldkJveE5hbWV9L2N1c3RvbWl6YXRpb25Hcm91cHMve2N1c3RvbWl6YXRpb25Hcm91cE5hbWV9/V/MjAyNC0xMC0wMS1wcmV2aWV3"/>
      <argGroup name="">
        <arg type="string" var="$Path.customizationGroupName" options="customization-group-name name n" required="True" group="">
          <help short="A customization group name."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.devBoxName" options="dev-box-name dev-box" required="True" group="">
          <help short="The name of a dev box."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.projectName" options="project-name project" required="True" group="">
          <help short="The name of the project. Use az configure -d project=<project_name> to configure a default."/>
          <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
        </arg>
        <arg type="string" var="$Path.userId" options="user-id" required="True" group="">
          <help short="The AAD object id of the user. If value is 'me', the identity is taken from the authentication context."/>
          <default value="&quot;me&quot;"/>
          <format pattern="^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$" maxLength="36" minLength="2"/>
        </arg>
      </argGroup>
      <argGroup name="Body">
        <arg type="array<object>" var="$body.tasks" options="tasks" group="Body">
          <help short="Tasks to apply. Note by default tasks are excluded from the response when listing customization groups. To include them, use the `include=tasks` query parameter."/>
          <item type="object">
            <arg type="string" var="$body.tasks[].displayName" options="display-name">
              <help short="Display name to help differentiate multiple instances of the same task."/>
            </arg>
            <arg type="string" var="$body.tasks[].name" options="name" required="True">
              <help short="Name of the task."/>
            </arg>
            <arg type="object" var="$body.tasks[].parameters" options="parameters">
              <help short="Parameters for the task."/>
              <additionalProp>
                <item type="string"/>
              </additionalProp>
            </arg>
            <arg type="string" var="$body.tasks[].runAs" options="run-as">
              <help short="What account to run the task as."/>
              <enum>
                <item name="System" value="&quot;System&quot;"/>
                <item name="User" value="&quot;User&quot;"/>
              </enum>
            </arg>
            <arg type="integer32" var="$body.tasks[].timeoutInSeconds" options="timeout-in-seconds">
              <help short="Timeout, in seconds. Overrides any timeout provided on the task definition."/>
            </arg>
          </item>
        </arg>
      </argGroup>
      <operation operationId="DevBoxes_CreateCustomizationGroup">
        <http path="/projects/{projectName}/users/{userId}/devboxes/{devBoxName}/customizationGroups/{customizationGroupName}">
          <request method="put">
            <path>
              <param type="string" name="customizationGroupName" arg="$Path.customizationGroupName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="devBoxName" arg="$Path.devBoxName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="projectName" arg="$Path.projectName" required="True">
                <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
              </param>
              <param type="string" name="userId" arg="$Path.userId" required="True">
                <format pattern="^[a-zA-Z0-9]{8}-([a-zA-Z0-9]{4}-){3}[a-zA-Z0-9]{12}$|^me$" maxLength="36" minLength="2"/>
              </param>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2024-10-01-preview&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="body" required="True" clientFlatten="True">
                  <prop type="array<object>" name="tasks" arg="$body.tasks">
                    <item type="object">
                      <prop type="string" name="displayName" arg="$body.tasks[].displayName"/>
                      <prop type="string" name="name" arg="$body.tasks[].name" required="True"/>
                      <prop type="object" name="parameters" arg="$body.tasks[].parameters">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="string" name="runAs" arg="$body.tasks[].runAs">
                        <enum>
                          <item value="&quot;System&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="timeoutInSeconds" arg="$body.tasks[].timeoutInSeconds"/>
                    </item>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="dateTime" name="endTime"/>
                  <prop readOnly="True" type="string" name="name">
                    <format pattern="^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$" maxLength="63" minLength="3"/>
                  </prop>
                  <prop readOnly="True" type="dateTime" name="startTime"/>
                  <prop readOnly="True" type="string" name="status">
                    <enum>
                      <item value="&quot;Failed&quot;"/>
                      <item value="&quot;NotStarted&quot;"/>
                      <item value="&quot;Running&quot;"/>
                      <item value="&quot;Succeeded&quot;"/>
                      <item value="&quot;ValidationFailed&quot;"/>
                    </enum>
                  </prop>
                  <prop type="array<object>" name="tasks">
                    <item type="object">
                      <prop type="string" name="displayName"/>
                      <prop readOnly="True" type="dateTime" name="endTime"/>
                      <prop readOnly="True" type="string" name="id"/>
                      <prop readOnly="True" type="string" name="logUri"/>
                      <prop type="string" name="name" required="True"/>
                      <prop type="object" name="parameters">
                        <additionalProp>
                          <item type="string"/>
                        </additionalProp>
                      </prop>
                      <prop type="string" name="runAs">
                        <enum>
                          <item value="&quot;System&quot;"/>
                          <item value="&quot;User&quot;"/>
                        </enum>
                      </prop>
                      <prop readOnly="True" type="dateTime" name="startTime"/>
                      <prop readOnly="True" type="string" name="status">
                        <enum>
                          <item value="&quot;Failed&quot;"/>
                          <item value="&quot;FailedValidation&quot;"/>
                          <item value="&quot;NotStarted&quot;"/>
                          <item value="&quot;Running&quot;"/>
                          <item value="&quot;Skipped&quot;"/>
                          <item value="&quot;Succeeded&quot;"/>
                          <item value="&quot;TimedOut&quot;"/>
                          <item value="&quot;WaitingForUserInputUac&quot;"/>
                          <item value="&quot;WaitingForUserSession&quot;"/>
                        </enum>
                      </prop>
                      <prop type="integer32" name="timeoutInSeconds"/>
                    </item>
                  </prop>
                  <prop readOnly="True" type="string" name="uri"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <header>
              <item name="x-ms-error-code"/>
            </header>
            <body>
              <json>
                <schema type="@ODataV4Format"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
